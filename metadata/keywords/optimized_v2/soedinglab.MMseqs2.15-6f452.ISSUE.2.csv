quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"ing: 0h 0m 0s 23ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 11803 type: Aminoacid; Target database size: 11803 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 11.80K 1s 228ms ; Time for merging to aln: 0h 0m 0s 3ms; 15505 alignments calculated; 15076 sequence pairs passed the thresholds (0.972332 of overall calculated); 1.277302 hits per query sequence; Time for processing: 0h 0m 1s 238ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/aln /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 . Clustering mode: Set Cover; [=============================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:11788,extend,extend,11788,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['extend'],['extend']
Modifiability,"ist length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 265ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 9304 type: Aminoacid; Target database size: 9304 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 9.30K 1s 357ms ; Time for merging to aln_step0: 0h 0m 0s 2ms; 22013 alignments calculated; 18612 sequence pairs passed the thresholds (0.845500 of overall calculated); 2.000430 hits per query sequence; Time for processing: 0h 0m 1s 367ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 9.30K 0s 6ms ; Sort entries;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:18994,extend,extend,18994,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['extend'],['extend']
Modifiability,"k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:19296,extend,extendable,19296,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extendable']
Modifiability,"lation (step 1 of 1); Query db start 1 to 8273; Target db start 1 to 756891; [=================================================================] 100.00% 8.27K 1s 888ms . 7.501658 k-mers per position; 14614 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 5 sequences passed prefiltering per query sequence; 0 median result list length; 7780 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 6ms; Time for processing: 0h 0m 23s 645ms; align tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 tmp/16138406286044646862/aln_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 8273 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.27K 1s 879ms ; Time for merging to aln_1: 0h 0m 0s 9ms. 41734 alignments calculated.; 41734 sequence pairs passed the thresholds (1.000000 of overall calculated).; 5.044603 hits per query sequence.; Time for processing: 0h 0m 5s 83ms; mergedbs IP_DB/IP_DB tmp/16138406286044646862/aln_merge_new tmp/16138406286044646862/aln_0 tmp/16138406286044646862/aln_1 --compressed 0 -v 3 . Merging the results to tmp/16138406286044646862/aln_merge_new; Time for merging to aln_merge_new: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17ms; rmdb tmp/16138406286044646862/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; mvdb tmp/16138406286044646862/aln_merge_new tmp/1613840",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:8836,extend,extend,8836,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['extend'],['extend']
Modifiability,"ld be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:3642,extend,extendable,3642,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['extend'],['extendable']
Modifiability,"le k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:2519,extend,extendable,2519,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['extend'],['extendable']
Modifiability,"lign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 104664 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 0ms; Time for merging to result: 0h 0m 0s 0ms; 300 alignments calculated; 300 sequence pairs passed the thresholds (1.000000 of overall calculated); 300.000000 hits per query sequence; Time for processing: 0h 0m 0s 18ms; convertalis tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/result result.tsv --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --format-mode 4 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qseq,tseq --translation-table 1 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --db-output 0 --db-load-mode 0 --search-type 0 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; [=================================================================] 1 0s 0ms; Time for merging to result.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 9ms; ```. ## Context; * I would like to create a multiple sequence alignment FASTA file from the results from `easy-search` to use as input to other tools. ## Your Environment; * MMseqs2 Version: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32. * Operating system and version:. ```; uname -a; Linux lambda-servername 5.4.0-144-generic #161-Ubuntu SMP Fri Feb 3 14:49:04 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; ``",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:8133,extend,extend,8133,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['extend'],['extend']
Modifiability,"lit memory limit 	0; Coverage threshold 	0.99; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.99; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	1; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --ad",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:2415,extend,extendable,2415,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['extend'],['extendable']
Modifiability,"ll calculated); 8940.219727 hits per query sequence; Time for processing: 1h 41m 41s 324ms; rmdb tmp/5233442526903138997/pref -v 3 . Time for processing: 0h 0m 0s 616ms; mvdb tmp/5233442526903138997/aln tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 0ms; align /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/aln_merged tmp/5233442526903138997/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score and coverage; Query database size: 75233 type: Aminoacid; Target database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 9m 57s 768ms ; Time for merging to aln: 0h 0m 0s 17ms; 672599536 alignments calculated; 672599536 sequence pairs passed the thresholds (1.000000 of overall calculated); 8940.219727 hits per query sequence; Time for processing: 1h 9m 58s 713ms; rmdb tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 73ms; swapresults /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/aln alnment/alignment --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 1.79769e+308 --split-memory-limit 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --threads 16 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=========",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:7771,extend,extend,7771,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['extend'],['extend']
Modifiability,"llion of antibody sequences; cmd: easy-linclust ./DB.fasta clusterRes tmp --min-seq-id 0.95 -c 0.95. ## MMseqs Output (for bugs). MMseqs Version: 13.45111; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 32; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.95; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.95; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. linclust tmp/14608094218366142978/input tmp/14608094218366142978/clu tmp/14608094218366142978/clu_tmp -e 0.001 --min-seq-id 0.95 -c 0.95 --spaced-kmer-mode 0 --remove-tmp-files 1. Set cluster mode SET COVER.; Killed; Error: Rescore with hamming distance step died; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 13.45111; OS: Ubuntu 22.04; CPU: Intel(R) Core(TM) i9-13900K; Memory: 64GB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/730:1321,extend,extendable,1321,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/730,1,['extend'],['extendable']
Modifiability,"ls for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<opti",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:35206,config,config,35206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['config'],['config']
Modifiability,"lse; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:3134,extend,extend,3134,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,2,['extend'],"['extend', 'extendable']"
Modifiability,"lter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 100000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00K 0s 853ms; Sort kmer 0h 0m 0s 789ms; Sort by rep. sequence 0h 0m 0s 951ms; Time for fill: 0h 0m 0s 155ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 3s 166ms; rescorediagonal ./mms_smallDB ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:11431,extend,extendable,11431,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extendable']
Modifiability,"lter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 170ms; rescorediagonal in/DB_in in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:4753,extend,extendable,4753,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extendable']
Modifiability,"lter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 172ms; rescorediagonal in/DB_in in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:20356,extend,extendable,20356,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extendable']
Modifiability,"m 0s 29ms; Writing results to: /tmp//2989869989197200687/result; [=================================================================] 514.46K 49s 642ms. Time for merging to result: 0h 0m 0s 988ms; Time for processing: 0h 0m 58s 569ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 32 --compressed 0 -v 3 . [====terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; **Error: Convert Alignments died**. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 1f302134aa1c6c7c4e2b9da272fd26af33860780; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD EPYC 7742 64-Core Processor; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:26130,extend,extend,26130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['extend'],['extend']
Modifiability,"mers per position; 3373560 DB matches per sequence; 626307 overflows; 21 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 601 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 657ms; Time for processing: 2h 32m 1s 811ms; align euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 euk72-90.profile_search2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 48 --compressed 0 -v 3 . Compute score and coverage; Query database size: 1270615 type: Profile; Target database size: 1270615 type: Aminoacid; Calculation of alignments; [=================================================================] 1.27M 33m 52s 295ms; Time for merging to euk72-90.profile_search2: 0h 0m 0s 650ms; 109004199 alignments calculated; 56769447 sequence pairs passed the thresholds (0.520801 of overall calculated); 44.678715 hits per query sequence; Time for processing: 0h 33m 55s 605ms; clust euk72-90.profile2 euk72-90.profile_search2 euk72-90.clust2 --threads 48 . MMseqs Version: 	aabc78c298f35cbc7a4136206c1a83adaa68695f; Cluster mode 	0; Max connected component depth	1000; Similarity type 	2; Threads 	48; Compressed 	0; Verbosity 	3. Clustering mode: Set Cover; [=================================================================] 1.27M 0s 909ms; Sort entries; Find missing connections; Found 12659367 new connections.; Re",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:10793,extend,extend,10793,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['extend'],['extend']
Modifiability,"min-seq-id 1.00 -c 0.90 -s 8 --max-seqs 1000 --cluster-mode 1 --threads 6; ```; the program crashes with:; ```; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007f4554305010 ***; ```; If I subselect some sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_ch",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:1154,extend,extendable,1154,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['extend'],['extendable']
Modifiability,"n:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [======================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:4768,extend,extendable,4768,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['extend'],['extendable']
Modifiability,"ng the discussion at: https://github.com/soedinglab/MMseqs2/issues/373; I have tried the following workflow:. ## Steps to Reproduce; `mmseqs createdb IP.fasta IP_DB/IP_DB`; `mmseqs createdb cryptic_DB.fasta Cryptic_DB/Cryptic_DB`. `mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0`; `mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0`. `mmseqs search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf -s 2 --spaced-kmer-pattern 11011101 --gap-open 16 --gap-extend 2 -k 6 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. This didn't find all the peptides. I have experimented with increasing gap penalties, variying k-mer sizes (5-7), and sensitivity. I have also tried explicitly stating --spaced-kmer-pattern and k-mer length during createindex step. ; The best result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; Thanks in advance,; Yehor. ## MMseqs Output; search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 --start-sens 1 --sens-steps 3 -s 12 --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.ou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:1401,extend,extend,1401,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['extend'],['extend']
Modifiability,"ntext:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:5573,extend,extendable,5573,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['extend'],['extendable']
Modifiability,"ntical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --spl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:2667,extend,extendable,2667,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extendable']
Modifiability,"ntical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:18268,extend,extendable,18268,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extendable']
Modifiability,"only ungapped alignment; -e 	0.001 	list matches below this E-value [0.0, inf] ; --min-seq-id 	0.000 	list matches above this sequence identity (for clustering) [0.0,1.0]; --seq-id-mode 	0 	0: alignment length 1: shorter, 2: longer sequence ; --alt-ali 	5 	Show up to this many alternative alignments ; -c 	0.000 	list matches above this fraction of aligned (covered) residues (see --cov-mode); --cov-mode 	0 	0: coverage of query and target, 1: coverage of target, 2: coverage of query 3: target seq. length needs be at least x% of query length, 4: query seq. length needs be at least x% of target length; --realign 	false 	compute more conservative, shorter alignments (scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs b",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:7450,extend,extend,7450,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['extend'],['extend']
Modifiability,"ory-limit 500G. MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500G; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb SRC.fasta /export/scratch/SRC-50/8871099322051866948/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [2022891328] 19m 44s 787ms; Time for merging to input_h: 0h 15m 26s 958ms; Time for merging to input: 0h 15m 5s 407ms; Database type: Aminoacid; Time for processing: 0h 51m 25s 878ms; Tmp /export/scratch/SRC-50/8871099322051866948/clu_tmp folder does not exist or is not a directory.; Create dir /export/scratch/SRC-50/8871099322051866948/clu_tmp; linclust /export/scratch/SRC-50/8871",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:1926,extend,extendable,1926,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['extend'],['extendable']
Modifiability,"ove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:3421,extend,extend,3421,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extend']
Modifiability,"ove-tmp-files 1. Set cluster sensitivity to -s 3.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/clu_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:4330,extend,extend,4330,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['extend'],['extend']
Modifiability,"p/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 96025 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 96.03K 0s 882ms . Adjusted k-mer length 17; Sort kmer 0h 0m 0s 257ms; Sort by rep. sequence 0h 0m 0s 133ms; Time for fill: 0h 0m 0s 107ms; Time for merging to pref: 0h 0m 0s 28ms; Time for processing: 0h 0m 1s 808ms; rescorediagonal tmp/3198441352783276465/input tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.5 -a 0 --cov-mode 5 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 24 --compres",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:6611,extend,extendable,6611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['extend'],['extendable']
Modifiability,"p/5233442526903138997/pref tmp/5233442526903138997/pref_count.tsv --stat linecount --tsv --threads 16 --compressed 0 -v 3 . [=================================================================] 100.00% 75.23K 1s 543ms ; Time for merging to pref_count.tsv: 0h 0m 0s 20ms; Time for processing: 0h 0m 1s 810ms; align tmp/5233442526903138997/profileDB Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/pref tmp/5233442526903138997/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 1 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score and coverage; Query database size: 75233 type: Aminoacid; Target database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 41m 40s 149ms ; Time for merging to aln: 0h 0m 0s 11ms; 1976417423 alignments calculated; 672599536 sequence pairs passed the thresholds (0.340313 of overall calculated); 8940.219727 hits per query sequence; Time for processing: 1h 41m 41s 324ms; rmdb tmp/5233442526903138997/pref -v 3 . Time for processing: 0h 0m 0s 616ms; mvdb tmp/5233442526903138997/aln tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 0ms; align /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/aln_merged tmp/5233442526903138997/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:6311,extend,extend,6311,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['extend'],['extend']
Modifiability,"path 	; Threads 	112; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.95; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust 1831648_seqs.mmseqs2db tmp/16479300059278292880/clu_redundancy tmp/16479300059278292880/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:2302,extend,extendable,2302,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['extend'],['extendable']
Modifiability,"q-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:4804,extend,extendable,4804,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['extend'],['extendable']
Modifiability,"q-len 10000 --spaced-kmer-mode 0 --remove-tmp-files 1 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . Database size: 440656032 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 440.66M 1m 58s 106ms; Sort kmer 0h 1m 9s 431ms; Sort by rep. sequence 0h 0m 39s 418ms; Time for fill: 0h 2m 31s 613ms; Time for merging to pref: 0h 0m 0s 1ms; Time for processing: 0h 9m 8s 726ms; rescorediagonal All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:4833,extend,extendable,4833,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['extend'],['extendable']
Modifiability,"quence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	92G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 2204542403 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 2.20B 2h 9m 12s 463ms; Process file into 17 parts; Generate k-mers ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:3459,extend,extendable,3459,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['extend'],['extendable']
Modifiability,"queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 8s 631ms; align tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 1 --compressed 0 -v 3 . Compute score only; Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; Calculation of alignments; [=================================================================] 2 0s 0ms; Time for merging to aln_0: 0h 0m 0s 0ms; 0 alignments calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:12934,extend,extend,12934,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['extend'],['extend']
Modifiability,"rary path; Threads 	20; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.97; Min alignment length 	200; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster iterations to 3; linclust shrimpDB tmp97/17949317426677965256/clu_redundancy tmp97/17949317426677965256/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:2954,extend,extendable,2954,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['extend'],['extendable']
Modifiability,"read-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:35051,config,config,35051,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['config'],['config']
Modifiability,"rflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 93ms; align tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 tmp_easy_search/6745795380167965363/result --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 104664 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 0ms; Time for merging to result: 0h 0m 0s 0ms; 300 alignments calculated; 300 sequence pairs passed the thresholds (1.000000 of overall calculated); 300.000000 hits per query sequence; Time for processing: 0h 0m 0s 18ms; convertalis tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/result result.tsv --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --format-mode 4 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qseq,tseq --translation-table 1 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --db-out",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:7170,extend,extend,7170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['extend'],['extend']
Modifiability,"rget database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.11M 1h 57m 11s 538ms; Time for merging to aln: 0h 0m 19s 511ms. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:12753,extend,extend,12753,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['extend'],['extend']
Modifiability,"rging to pref_0: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 8ms; docker-compose-mmseqs-web-worker-1 | align /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/pref_0 /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/result --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 2 --compressed 0 -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Compute score, coverage and sequence identity; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Calculation of alignments; docker-compose-mmseqs-web-worker-1 | [=================================================================] 1 0s 2ms; docker-compose-mmseqs-web-worker-1 | Time for merging to result: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | 6 alignments calculated.; docker-compose-mmseqs-web-worker-1 | 0 sequence pairs passed the thresholds (0.000000 of overall calculated).; docker-compose-mmseqs-web-worker-1 | 0.000000 hits per query sequence.; docker-compose-mmseqs-web-worker-1 | Tim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717:5641,extend,extend,5641,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717,1,['extend'],['extend']
Modifiability,"rk. mmseqs search PHROGS/phrogs_mmseqs_db/phrogs_profile_db PHROGS/target_seq PHROGS/Bins_PHROGS PHROGS/tmp -s 7 . ##This command is very long and failed. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. align MMSEQ2_PHROGS/phrogs_mmseqs_db/phrogs_profile_db MMSEQ2_PHROGS/target_seq MMSEQ2_PHROGS/tmp/3583634493861447998/pref_0 MMSEQ2_PHROGS/Bins_PHROGS --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 38880 type: Profile; Target database size: 75478 type: Aminoacid; Calculation of alignments; Score of forward/backward SW differ: 539 542. Q: 0 T: 31246. ] 0.00% 1 eta -; Start: Q: 6, T: 0. End: Q: 192, T 154; Score of forward/backward SW differ: 1751 1748. Q: 5165 T: 52236.; Start: Q: 2, T: 7. End: Q: 182, T 267; Error: Alignment died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specific",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/677:1418,extend,extend,1418,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/677,1,['extend'],['extend']
Modifiability,"rop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; [=================================================================Segmentation fault; Error: Create profile died; ```. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; * Which MMseqs version was used:Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 32-core, 256 GB ram, vmtouch'ed target into memory (crash happens either way though); * Operating system and version: Debian GNU/Linux 11 (bullseye)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:6523,extend,extend,6523,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['extend'],['extend']
Modifiability,"ry path 	; Threads 	40; Compressed 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB tmp/10260956542131223380/clu_redundancy tmp/10260956542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:3045,extend,extendable,3045,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['extend'],['extendable']
Modifiability,"s (truncated result); 13 sequences passed prefiltering per query sequence; 7 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 41ms; Time for processing: 0h 0m 8s 706ms; align ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/pref_step1 ./mmseqs_output/tmp/5351426679731834765/aln_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 10966 type: Aminoacid; Target database size: 10966 type: Aminoacid; Calculation of alignments; [=================================================================] 10.97K 9s 362ms; Time for merging to aln_step1: 0h 0m 0s 91ms; 128470 alignments calculated; 17027 sequence pairs passed the thresholds (0.132537 of overall calculated); 1.552708 hits per query sequence; Time for processing: 0h 0m 9s 872ms; clust ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/aln_step1 ./mmseqs_output/tmp/5351426679731834765/clu_step1 --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Connected Component; [=================================================================] 10.97K 0s 3ms; Sort entries; Find missing connections; Found 475 new connections.; Reconstruct ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:26466,extend,extend,26466,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extend']
Modifiability,"s 342ms. 0.958336 k-mers per position; 27663 DB matches per sequence; 7 overflows; 0 queries produce too much hits (truncated result); 100 sequences passed prefiltering per query sequence; 63 median result list length; 205 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 481ms; Time for processing: 0h 2m 41s 423ms; align tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 tmp/2226585588535541735/search_tmp/11167723337111805049/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 882920 type: Nucleotide; Target database size: 311921 type: Nucleotide; Calculation of alignments; [=================================================================] 882.92K 5m 58s 443ms; Time for merging to aln: 0h 0m 0s 462ms. 88720927 alignments calculated.; 46477238 sequence pairs passed the thresholds (0.523859 of overall calculated).; 52.640373 hits per query sequence.; Time for processing: 0h 6m 3s 620ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 272ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/input_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/aln_merge -v 3 . Time fo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339:8917,extend,extend,8917,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339,1,['extend'],['extend']
Modifiability,"s produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 2 median result list length; 2 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 8s 1ms; align tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 tmp/9586069750715556969/search_tmp/1133007989511978496/aln --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 4 type: Nucleotide; Target database size: 2 type: Nucleotide; Calculation of alignments; [=================================================================] 4 0s 0ms; Time for merging to aln: 0h 0m 0s 0ms; 4 alignments calculated; 4 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 17ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/input_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; offsetalignment tmp/9586069",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:9346,extend,extend,9346,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['extend'],['extend']
Modifiability,s too many hits. Results might be truncated; > Sequence 12971 produces too many hits. Results might be truncated; > ; > 38654 k-mers per position.; > 57944556 DB matches per sequence.; > 8775 Overflows.; > 1852622 sequences passed prefiltering per query sequence.; > Median result list size: 1612533; > 0 sequences with 0 size result lists.; > ; > Time for prefiltering scores calculation: 0h 56m 42s 147ms; > Time for merging files: 0h 17m 3s 113ms; > Time for processing: 1h 16m 55s 652ms; > Program call:; > align tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 tmp/18071041534032520912/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 17702628 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 15 -v 3 ; > ; > MMseqs Version: 	7ca117893675cdca309e2c9dfc444bbc7462e858; > Sub Matrix 	blosum62.out; > Add backtrace 	true; > Alignment mode 	2; > E-value threshold 	0.1; > Seq. Id Threshold 	0; > Seq. Id. Mode 	0; > Alternative alignments 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Max. sequence length 	65535; > Max. results per query 	17702628; > Compositional bias 	1; > Realign hit 	true; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id.	true; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	11; > Gap extension cost 	1; > Threads 	15; > Verbosity 	3; > ; > Init data structures...; > Compute score only.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength: 65535; > KmerSize: 7; > CompBiasCorr: 1; > AlphabetSize: 21; > Masked: 1; > Spaced: 1; > KmerScore: 81; > SequenceType: 0; > Headers1: 1; > Headers2: 0; > ScoreMatrix: blo,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:7290,extend,extend,7290,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,1,['extend'],['extend']
Modifiability,"s; Time for processing: 0h 0m 0s 603ms; align tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_filter2 tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 5 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 24 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 10913 type: Nucleotide; Target database size: 10913 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 10.91K 0s 56ms ; Time for merging to aln: 0h 0m 0s 218ms; 15033 alignments calculated; 12475 sequence pairs passed the thresholds (0.829841 of overall calculated); 1.143132 hits per query sequence; Time for processing: 0h 0m 0s 663ms; clust tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/aln tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Connected Component;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:11221,extend,extend,11221,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['extend'],['extend']
Modifiability,"se; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-pe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:4051,extend,extend,4051,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['extend'],['extend']
Modifiability,"seqs createdb seq.fa db/dbclust; mmseqs linclust db/dbclust clust_result tmp --max-seq-len 30000000; ``` ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=================================================================] 140.20K 2m 37s 793ms; Time for merging to pref_rescore1: 0h 0m 0s 35ms; Time for processing: 0h 2m 48s 60ms; clust db/d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:1155,extend,extendable,1155,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['extend'],['extendable']
Modifiability,sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set cluster settings automatically to s=1; Set cluster mode GREEDY MEM.; Set cluster iterations to 1; Program call:; linclust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3 --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 0 --pca 1 --pcb 1.5 --score-bias 0 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort res,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:5016,extend,extendable,5016,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['extend'],['extendable']
Modifiability,"so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/team.c:124; #5 0x00002aefd1060dc5 in start_thread (arg=0x2aefd1c45700) at pthread_create.c:308",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:35439,config,config,35439,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['config'],['config']
Modifiability,"split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 9.50M 1m 30s 166ms; Time for merging to pref_rescore1: 0h 0m 3s 976ms; Time for pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:5261,extend,extendable,5261,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['extend'],['extendable']
Modifiability,"ssed 0 -v 3 . Remove tmp/16479300059278292880/aln_ungapped ids from tmp/16479300059278292880/pref; [=================================================================] 1.60M 1s 175ms; Time for merging to pref_subtract: 0h 0m 1s 400ms; Time for processing: 0h 0m 5s 506ms; align tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/pref_subtract tmp/16479300059278292880/aln_gapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 112 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1604546 type: Nucleotide; Target database size: 802273 type: Nucleotide; Calculation of alignments; [=================================================================] 1.60M 22m 53s 435ms; Time for merging to aln_gapped: 0h 0m 0s 903ms; 70826259 alignments calculated; 3445894 sequence pairs passed the thresholds (0.048653 of overall calculated); 2.147582 hits per query sequence; Time for processing: 0h 23m 4s 596ms; concatdbs tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/aln_gapped tmp/16479300059278292880/aln --preserve-keys --take-larger-entry --threads 112 --compressed 0 -v 3 . [=================================================================] 1.60M 0s 217ms; [=================================================================] 1.60M 0s 385ms; Time for merging to aln: 0h 0m 1s 623ms; Time for processing: 0h 0m 3s 354ms; offset",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:15540,extend,extend,15540,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['extend'],['extend']
Modifiability,"st result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; Thanks in advance,; Yehor. ## MMseqs Output; search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 --start-sens 1 --sens-steps 3 -s 12 --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	inf; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	20; Gap extension cost 	3; Zdrop 	40; Threads 	28; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:VTML40.out,aa:VTML40.out; Sensitivity 	12; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:2219,extend,extend,2219,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['extend'],['extend']
Modifiability,"step 1 of 1. k-mer similarity threshold: 82; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1303062545; Target db start 1 to 349750; [=================================================================] 1.30B 86h 42m 2s 376ms. 0.785483 k-mers per position; 240012 DB matches per sequence; 5731753 overflows; 0 queries produce too many hits (truncated result); 269 sequences passed prefiltering per query sequence; 300 median result list length; 134238 sequences with 0 size result lists; Time for merging to pref: 0h 30m 15s 580ms; Time for processing: 88h 9m 11s 291ms; swapresults repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/q_orfs_aa databases/eggnog repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref_swapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --split-memory-limit 300G --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --threads 56 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 1.30B 2h 8m 45s 98ms. Reading results.; [=================================================================] 1.30B 5h 47m 7s 401ms. Output database: repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref_swapped; [=================================================================] 26.35K 11m 16s 126ms. Time for merging to pref_swapped_0: 0h 40m 12s 625ms. Reading results.; [=================================================================] 1.30B 5h 40m 43s 346ms. Output database: repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref_swapped; [=================================================================] 32.57K 11m 9s 696ms. Time for merging to pref_swapped_1: 0h 38m 42s 418ms. Reading results.; [=================================================================] 1.30B 5h 39m 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/594:19579,extend,extend,19579,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594,1,['extend'],['extend']
Modifiability,"t be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; =================================================================================================== 292 Mio. sequences processed; =============; Time for merging to input_h: 0h 0m 40s 64ms; Time for merging to input: 0h 0m 40s 130ms; Database type: Aminoacid; Time for processing: 0h 12m 9s 179ms; Tmp /export/tmp/MERC/4233864688410091672/clu_tmp folder does not exist or is not a directory.; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:1736,extend,extendable,1736,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,1,['extend'],['extendable']
Modifiability,"t is added to the alignment score [0.000]; --gap-open TWIN Gap open cost [aa:11,nucl:5]; --gap-extend TWIN Gap extension cost [aa:1,nucl:2]; --zdrop INT Maximal allowed difference between score values before alignment is truncated (nucleotide alignment only) [40]; clust:; --cluster-mode INT 0: Set-Cover (greedy); 1: Connected component (BLASTclust); 2,3: Greedy clustering by sequence length (CDHIT) [0]; --max-iterations INT Maximum depth of breadth first search in connected component clustering [1000]; --similarity-type INT Type of score used for clustering. 1: alignment score 2: sequence identity [2]; kmermatcher:; --kmer-per-seq INT k-mers per sequence [21]; --kmer-per-seq-scale TWIN Scale k-mer per sequence based on sequence length as kmer-per-seq val + scale x seqlen [aa:0.000,nucl:0.200]; --adjust-kmer-len BOOL Adjust k-mer length based on specificity (only for nucleotides) [0]; --hash-shift INT Shift k-mer hash initialization [67]; --include-only-extendable BOOL Include only extendable [0]; --ignore-multi-kmer BOOL Skip k-mers occurring multiple times (>=2) [0]; profile:; --pca Pseudo count admixture strength []; --pcb Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) []; misc:; --rescore-mode INT Rescore diagonals with:; 0: Hamming distance; 1: local alignment (score only); 2: local alignment; 3: global alignment; 4: longest alignment fulfilling window quality criterion [0]; --dbtype INT Database type 0: auto, 1: amino acid 2: nucleotides [0]; --shuffle BOOL Shuffle input database [1]; --createdb-mode INT Createdb mode 0: copy data, 1: soft link data and write new index (works only with single line fasta/q) [1]; --id-offset INT Numeric ids in index file are offset by this value [0]; common:; --threads INT Number of CPU-cores used (all by default) [10]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; --sub-mat TWIN Substitution matrix file [aa:blosum62.out,nucl:nucleotide.ou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682:4901,extend,extendable,4901,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682,2,['extend'],['extendable']
Modifiability,"t it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable false │; Skip repeating k-mers false │; Threads 64 │; Compressed 0 │; Verbosity 3; ```. ## Your Environment; I installed mmseqs using `mamba` (conda).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/477:1429,extend,extendable,1429,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477,2,['extend'],['extendable']
Modifiability,"ta_file output_path tmp_folder --min-seq-id 0.5. ## MMseqs Output; easy-linclust roman/seqs/lectins_seq.fasta roman/test/lectins_seq roman/test/tmp --min-seq-id 0.5. MMseqs Version: 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 128; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:1267,extend,extendable,1267,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['extend'],['extendable']
Modifiability,"text:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.3; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:2340,extend,extendable,2340,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['extend'],['extendable']
Modifiability,"ting docker-compose_mmseqs-web-redis_1 ... ; Creating docker-compose_mmseqs-web-redis_1 ... done; Creating docker-compose_mmseqs-web-api_1 ... ; Creating docker-compose_mmseqs-web-api_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... done; Attaching to docker-compose_mmseqs-web-redis_1, docker-compose_mmseqs-web-api_1, docker-compose_mmseqs-web-worker_1, docker-compose_mmseqs-web-webserver_1; mmseqs-web-api_1 | 2022/09/22 16:09:10 MMseqs2 Webserver; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Redis version=7.0.4, bits=64, commit=00000000, modified=0, pid=1, just started; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.002 * monotonic clock: POSIX clock_gettime; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 * Running mode=standalone, port=6379.; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 # Server initialized; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 * Ready to accept connections; mmseqs-web-worker_1 | 2022/09/22 16:09:10 MMseqs2 worker; mmseqs-web-worker_1 | createdb /opt/mmseqs-web/databases/pdb_rna_sequence.fasta /opt/mmseqs-web/databases/pdb_rna_sequence ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | MMseqs Version: 	e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ; mmseqs-web-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:9579,config,config,9579,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['config'],['config']
Modifiability,"tmp/2226585588535541735/search_tmp/11167723337111805049/aln tmp/2226585588535541735/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 26ms; Writing results to: tmp/2226585588535541735/result; [=================================================================] 419.27K 2s 43ms. Time for merging to result: 0h 0m 0s 264ms; Time for processing: 0h 0m 6s 8ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs_aa . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs_aa . Time for processing: 0h 0m 0s 0ms; convertalis tmp/2226585588535541735/query tmp/2226585588535541735/target tmp/2226585588535541735/result output.tsv --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,evalue,pident,tstart,tend,qlen,alnlen,qcov --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 64 --compressed 0 -v 3 . [=================================================================] 419.27K 3s 600ms; Time for merging to output.tsv: 0h 0m 3s 849ms; Time for processing: 0h 0m 12s 294ms; Removing temporary files; rmdb tmp/2226585588535541735/result . Time for processing: 0h 0m 2s 15ms; rmdb tmp/2226585588535541735/target . Time for processing: 0h 0m 0s 486ms; rmdb tmp/2226585588535541735/target_h . Time for processing: 0h 0m 0s 1ms; rmdb tmp/2226585588535541735/query . Time for processing: 0h 0m 0s 102ms; rmdb tmp/2226585588535541735/query_h . Time for processing: 0h 0m 0s 5ms; ```. ## Your Environment. I'm using the `11.e1a1c` conda release on Linux;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339:11443,extend,extend,11443,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339,1,['extend'],['extend']
Modifiability,"tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:6116,extend,extendable,6116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['extend'],['extendable']
Modifiability,"tmp97/17949317426677965256/aln_ungapped ids from tmp97/17949317426677965256/pref; [=================================================================] 100.00% 39.65K 0s 144ms; Time for merging to pref_subtract: 0h 0m 0s 168ms; Time for processing: 0h 0m 0s 503ms; align tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/pref_subtract tmp97/17949317426677965256/aln_gapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 20 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 39650 type: Nucleotide; Target database size: 19825 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 39.65K 11s 920ms; Time for merging to aln_gapped: 0h 1m 40s 131ms; 2105218 alignments calculated; 1620 sequence pairs passed the thresholds (0.000770 of overall calculated); 0.040858 hits per query sequence; Time for processing: 0h 5m 12s 297ms; concatdbs tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/aln_gapped tmp97/17949317426677965256/aln --preserve-keys --take-larger-entry --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 39.65K 0s 67ms; [=================================================================] 100.00% 39.65K 0s 98ms; Time for merging to aln: 0h 0m 0s 389ms; Time for processing: 0h 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:16145,extend,extend,16145,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['extend'],['extend']
Modifiability,"uDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 ; --split-memory-limit 500; linclust inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 --split-memory-limit 500; MMseqs Version: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 16; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1e-10; Seq. id. threshold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:1716,extend,extendable,1716,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['extend'],['extendable']
Modifiability,"us failed run of `mmseq map`, and then this `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` error did not occur. . In general, I keep getting `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` at various steps of the `mmseqs map` run (eg., at the end of `translatenucs`). The error is not very informative on what's going wrong, since I am providing the required input and output parameters. ## conda env:. ```; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## conda info. ```; active environment : plass; active env location : /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass; shell level : 1; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.5.11; conda-build version : 3.11.0; python version : 3.6.5.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://repo.anaconda.com/pkgs/pro/linux-64; https://repo.anaconda.com/pkgs/pro/noarch; https://conda.anaconda.org/leylabmpi/linux-64; https://conda.anaconda.o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:5954,config,config,5954,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['config'],['config']
Modifiability,"ust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB tmp/10260956542131223380/clu_redundancy tmp/10260956542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:3973,extend,extend,3973,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['extend'],['extend']
Modifiability,"very time if input `.fasta` file contains short sequence (this also happens if .fasta file contains more than one sequence). UniRef database is processed every time without issue, crash happens only on envdb processing. ```; align results_700_only_456_fasta_700_5/prof_res ../db_sources/colabfold_envdb_202108_db.idx results_700_only_456_fasta_700_5/tmp/17071544472219224293/pref_0 results_700_only_456_fasta_700_5/tmp/17071544472219224293/aln_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Index version: 16; Generated by: fcf52600801a73e95fd74068e1bb1afb437d719d; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 209335862 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Segmentation fault (core dumped); Error: Alignment died; Traceback (most recent call last):; File ""/home/x/genomic/alphafold2/venv38alphafold2/bin/colabfold_search"", line 8, in <module>; sys.exit(main()); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 180, in main; mmseqs_search(; File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 100, in mmseqs_search; run_mmseqs(mmseqs, [""search"", base.joinpath(""prof_res""), dbbase.joinpath(metagenomic_db), base.joinpath(""res_env""), base.join",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/538:1220,extend,extend,1220,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538,1,['extend'],['extend']
Modifiability,"zdrop 40 --threads 1 --compressed 0 -v 3 . Compute score only; Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; Calculation of alignments; [=================================================================] 2 0s 0ms; Time for merging to aln_0: 0h 0m 0s 0ms; 0 alignments calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:13954,extend,extend,13954,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['extend'],['extend']
Performance,"	/tmp//589280515582180421/linclust/13903844144087712329/order_redundancy; Beats first 	false; Mapping file 	; Threads 	24; Verbosity 	3; trim the results to one column	false; Extract n lines 	0; Numerical comparison operator 	; Numerical comparison value 	0; Sort entries 	0; Include identical Seq. Id. 	false; join to DB 	. Filtering with a filter files.; Time for merging files: 0 h 0 m 0 s; Rescore diagonals.; Program call:; /tmp//589280515582180421/linclust/13903844144087712329/input_step_redundancy /tmp//589280515582180421/linclust/13903844144087712329/input_step_redundancy /tmp//589280515582180421/linclust/13903844144087712329/pref_filter2 /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore2 --rescore-mode 1 --sub-mat blosum62.out --filter-hits -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Rescore mode 	1; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	true; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; Threads 	1; Verbosity 	3. Query file: /tmp//589280515582180421/linclust/13903844144087712329/input_step_redundancy; Target file: /tmp//589280515582180421/linclust/13903844144087712329/input_step_redundancy; Prefilter database: /tmp//589280515582180421/linclust/13903844144087712329/pref_filter2; Result database: /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore2; Done.; Time for merging files: 0 h 0 m 0 s; Time for diagonal calculation: 0 h 0 m 0s; Program call:; /tmp//589280515582180421/linclust/13903844144087712329/input_step_redundancy /tmp//589280515582180421/linclust/13903844144087712329/input_step_redundancy /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore2 /tmp//589280515582180421/linclust/13903844144087712329/aln --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:9080,perform,performs,9080,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['perform'],['performs']
Performance,"	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter queryDB sequenceDB tmp/837003320692135749/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 5.7 . Query database size: 1 type: Aminoacid; Target split mode. Searching through 5 splits; Estimated memory consumption: 297G; Target database size: 358983966 type: Aminoacid; Process prefiltering step 1 of 5. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; tmp/837003320692135749/blastp.sh: line 99: 35385 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died. ## Steps to Reproduce (for bugs); $ mmseqs search queryDB sequenceDB resultDB tmp. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Doing a seach of one sequence in the queryDB aginst a larger DB of amino acid sequences. . ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/817:2843,load,load-mode,2843,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/817,1,['load'],['load-mode']
Performance,"	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	1; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. I don't know if the error is right at the start using _plass_ int this context or with the _map_ command. Could you let me know how to proceed to use paired fastq data with the 'map pipeline'? ; Thanks for your help!. ## Context. After clustering all the proteins found in several samples I am trying to estimate the relative abundance of proteins in a non-redundant database considering the paired read files I have. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; using MMseqs2 Version: 113e3212c137d026e297c7540e1fcd039f6812b1 or 12 in a cluster ; and the plass-linux-sse41.tar.gz executable for plass. ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:3612,perform,performed,3612,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,1,['perform'],['performed']
Performance," 	0.001; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	64; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	1000000; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path 	/scratch/saladi1/22776241/; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Force restart using the latest tmp 	false; Remove Temporary Files 	true. prefilter euk_screen/screenDB uref_euk85_rep/uref_euk85_rep mmtemp/150669805093381426/pref",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/193:2830,perform,performs,2830,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193,1,['perform'],['performs']
Performance," 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loading nodes file ... Done, got 6986 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```. the job was submitted with teh following batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/IMG_VR_2022_12_19_7.1/IMG_tax_db; export OTU_dir=/home/bbrow6/vaginal_virome/Run_021723/identified_viral_sequences/OTUs/geNomad/genomad_output_1000bps/clustered_spades_cross_assembly_contigs_gt1000bps_summary/. source activate mmseqs2; module load OpenMPI. mmseqs easy-taxonomy $OTU_dir/clustered_spades_cross_assembly_contigs_gt1000bps_virus.fna $DBs/IMG_tax_db vag_taxonomy_results_IMG tmp -e 1e-5 -s 6 --blacklist """" --tax-lineage 1; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. **Full output and error attached below**. ```tmp/10336174962539687461/taxonomy_tmp/11653652317365833767/tmp_taxonomy/6923600097584969791/taxonomy.sh: line 58: 78000 Segmentation fault (core dumped) ""$MMSEQS"" lca ""${TARGET}"" ""${LCAIN}"" ""${RESULTS}"" ${LCA_PAR}```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **14.7e284**; * Which MMseqs version was used (Statically-compiled, self-co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:2831,load,load,2831,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['load'],['load']
Performance," --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3. Index version: 16; Generated by: 60b77df37df55c3984870760591facbb361c3939; ScoreMatrix: VTML80.out; Query database size: 19769556 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 19769556; Target db start 1 to 1; [=================================================================] 100.00% 19.77M 1m 24s 356ms. 6.165338 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 14s 786ms; Segmentation fault (core dumped); Error: orf filter prefilter died. ## Your Environment; This is where I'm working right now:. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; Address sizes: 43 bits physical, 48 bits virtual; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 1; Socket(s): 24; NUMA node(s): 1; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6136 CPU @ 3.00GHz; Stepping: 4; CPU MHz: 2999.999; BogoMIPS: 5999.99; Hypervisor vendor: VMware; Virtualization type: full; L1d cache: 768 KiB; L1i cache: 768 KiB; L2 cache: 24 MiB; L3 cache: 594 MiB; NUMA node0 CPU(s): 0-23. Any help would be really appreciated!. EDIT: I believe I might be doing something wrong. If I understand the output correctly:. 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists. means that nothing hit the DB, right?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/669:5604,cache,cache,5604,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669,4,['cache'],['cache']
Performance," --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; --------------------------------------------------------------------------; mpirun was unable to launch the specified application as it could not find an executable:; Executable: mmseqs; Node: slave; while attempting to start process rank 1.; --------------------------------------------------------------------------; 2 total processes failed to start; Error: Alignment step died; Error: linclust died; ```. I performed identical installations of mmseqs on both machines. If I just run `mmseqs cluster /mnt/DB mnt/clu /mnt/tmp` on either machine, then it is able to work, but I would like to get the MPI functionality up if possible! Thank you. . ## Your Environment; I am working in Debian 8 (Jesse), and have compiled MMseqs2 from source with the DHAVE_MPI=1 flag when invoking cmake. Thank you for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:3476,perform,performs,3476,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,2,['perform'],"['performed', 'performs']"
Performance," --split-memory-limit 0"", then the split number is set to 3 but smaller than 4. So mmseqs use entire index, which is too large for my memory (64GB). Thus mmseqs avoid using index, which makes searching step very slow.; ## Steps to Reproduce (for bugs); colabfold_search x.fasta ColabFold/Datas/ --use-env 1 --use-templates 0 MSA_200 ; (colabfold_search execute search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 ). ## MMseqs Output (for bugs). MSA_200/qdb exists and will be overwritten; createdb MSA_200/query.fas MSA_200/qdb --shuffle 0 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Database type 	0; Shuffle input database	false; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 0ms; Time for merging to qdb: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 0ms; search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:1350,load,load-mode,1350,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['load'],['load-mode']
Performance," /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	2; Compositional bias 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern; Local temporary path; Threads 	24; Verbosity 	3; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp//3961034198315058036 --sub-mat blosum62.out -s 2 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 -v 3 --rescore-mode 2 --filter-hits 0 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --sort-results 1 --global-alignment ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:1487,perform,performs,1487,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['perform'],['performs']
Performance," 0 --create-lookup 0 --threads 16 --compressed 0 -v 3 ; > ; > [=================================================================] 100.00% 2.67M 0s 919ms ; > Time for merging to query_seqs_split_h: 0h 0m 0s 832ms; > Time for merging to query_seqs_split: 0h 0m 0s 878ms; > Time for processing: 0h 0m 3s 919ms; > prefilter tmp/7701176895607249840/search_tmp/9045538653068861586/query_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/target_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 2670930 type: Nucleotide; > Target split mode. Searching through 18 splits; > Estimated memory consumption: 326G; > Target database size: 100684280 type: Nucleotide; > Process prefiltering step 1 of 18; > ; > Index table k-mer threshold: 0 at k-mer size 15 ; > Index table: counting k-mers; > Segmentation fault (core dumped) ] 0.00% 1 eta -; > Error: Prefilter died; > Error: Search step died; > Error: Search died; > . ## Context. Hi I am trying to run an nucleotide-nucleotide search in mmseq2 with a custom database. This error does not occur with a different, smaller nucleotide database. Thank you very much for this amazing tool and all your hard work. ## Your Environment. I am using a google cloud VM with 64 CPUs and 416 GBs of memory on an ubuntu operating system, version 20.04. I install mmseq with",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/882:6914,load,load-mode,6914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882,1,['load'],['load-mode']
Performance," 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 100000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00K 0s 853ms; Sort kmer 0h 0m 0s 789ms; Sort by rep. sequence 0h 0m 0s 951ms; Time for fill: 0h 0m 0s 155ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 3s 166ms; rescorediagonal ./mms_smallDB ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 100.00K 0s 206ms; Time for merging to pref_rescore1: 0h 0m 0s 757ms; Time for processing: 0h 0m 1s 988ms; clust ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore1 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pre_clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Connected Component; [=================================================================] 100.00K 0s 367ms; Sort entries; Find missing connections; Found 245160 new connections.; Reconstruct initial order; [=================================================================] 100.00K 0s 304ms; Add missing connections; [=================================================================] 100.00K 0s 8ms. Time for read in: 0h 0m 1s 971ms; connected component mode; Total time: 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:12363,load,load-mode,12363,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance," 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_0 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. rmdb result_20230419_115721/tmp/16464230693756166324/aln_0; rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. result2profile result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/1646423069375616632",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:5837,load,load-mode,5837,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance," 0m 16s 671ms; translatenucs /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa; --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 48. [=================================================================] 3.22M 2s 59ms; Time for merging files: 0h 0m 3s 83ms; Time for processing: 0h 0m 6s 661ms; prefilter /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa /mnt/lustre/scratch/aauladell/databases/unirefdb/unirefDB /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14; 502658769203238512/tmp_hsp1/3393216153911215513/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c; 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 48 --compressed 0 -v 3 -s; 5.7. Using 48 threads.; Query database size: 3215536 type: Aminoacid; Estimated memory consumption: 437G; Target database size: 99657864 type: Aminoacid; Process prefiltering step 1 of 1. Index table k-mer threshold: 122 at k-mer size 7; Index table: counting k-mers; [=================================================================] 99.66M 6m 33s 605ms; Index table: Masked residues: 620383436; Index table: fill; [==; ```. ## Context; From a selection of 300.000 small sequences, I intended to perform the taxonomy using UNIREF90. But it crashes each time even though the database should be able to be used for this kind of analysis. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 15c7762; * Which MMseqs version",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/232:2672,load,load-mode,2672,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232,1,['load'],['load-mode']
Performance, 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0 . Query database size: 1599064123 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 163G; Target database size: 231921744 type: Aminoacid; Process prefiltering step 1 of 6; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.41M 2m 12s 304ms; Index table: Masked residues: 221272222; Index table: fill; [=================================================================] 38.41M 3m 45s 787ms; Index statistics; Entries: 11399442350; DB size: 74993 MB; Avg k-mer size: 8.905814; Top 10 k-mers; FSHAGSI 272598; AFMFFMP 260790; AFRNNFW 259163; RMNSFLP 218177; NNSWLPS 215496; AHFMIMV 211691; MPMGGNW 204521; TMLDRNT 168603; TGTYPSS 159040; GDQYNVT 148373; Time for index table init: 0h 6m 20s 599ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 1599064123; Target db start 1 to 38411731; [=================================================================] 1.60B 12h 46m 35s 370ms. 22.315418 k-mers per position; 10964 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 27 sequences passed prefiltering per query sequence; 16 median result list length; 125561700 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 20m 11s 194ms; Time for merging to pref_0_tmp_0_tmp: 0h 53m 2s 600ms; Process prefiltering step 2 of 6. Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.92M 2m 23s 524ms; Index table: Masked residues: 206230655; Index table: fill; [=====================; ```. ## Context; ```; free -h; total used free shared buff/cache available; Mem: 409G 135G 86G 1.4M 186G 270G; Swap: 0B 0B 0B; ```; Google Cloud Platform (64 vCPU and 425984 MiB); Boot disk: 6000 GB; Ubuntu 18.4,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/577:23544,cache,cache,23544,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577,1,['cache'],['cache']
Performance," 1 of 1. k-mer similarity threshold: 114; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; mpic++/ 4.8.5 20150623 (Red Hat 4.8.5-36); cmake/3.12.3 ; module load cmake/3.12.3 ; module load openmpi/gcc/64/1.10.3 ; cd mmseqs2; mkdir build ; cd build ; CC=mpicc CXX=mpic++ cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/hpcf/authorized_apps/rhel7_apps/mmseqs2/install/11-e1a1c_sse4.1 -DHAVE_SSE4_1=1 ; make; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; LSF with SSE4 support. The job was submitted using 24 slo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:45163,perform,performance,45163,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['perform'],['performance']
Performance, 1.1.1b h14c3975_1 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h8571acd_11 bioconda; seqtk 1.3 h84994c4_1 bioconda; tk 8.6.9 h84994c4_1001 conda-forge; xz 5.2.4 h14c3975_1001 conda-forge; zlib 1.2.11 h14c3975_1004 conda-forge; ```. </p>; </details>. <details><summary>conda info</summary>; <p>. ```; active environment : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; active env location : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; shell level : 2; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.6.11; conda-build version : 3.11.0; python version : 3.6.7.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://conda.anaconda.org/leylabmpi/linux-64; https://conda.anaconda.org/leylabmpi/noarch; https://conda.anaconda.org/r/linux-64; https://conda.anaconda.org/r/noarch; https://conda.anaconda.org/qiime2/linux-64; https://conda.anaconda.org/qiime2/noarch; package cache : /ebio/abt3_projects/software/dev/miniconda3_dev/pkgs; /ebio/abt3/nyoungblut/.conda/pkgs; envs directories : /ebio/abt3_projects/software/dev/miniconda3_dev/envs; /ebio/abt3/nyoungblut/.conda/envs; platform : linux-64; user-agent : conda/4.6.11 requests/2.18.4 CPython/3.6.7 Linux/4.9.127 ubuntu/18.04.1 glibc/2.27; UID:GID : 6354:350; netrc file : None; offline mode : False; ```. </p>; </details>,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188:2597,cache,cache,2597,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188,1,['cache'],['cache']
Performance," 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 96025 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 96.03K 0s 882ms . Adjusted k-mer length 17; Sort kmer 0h 0m 0s 257ms; Sort by rep. sequence 0h 0m 0s 133ms; Time for fill: 0h 0m 0s 107ms; Time for merging to pref: 0h 0m 0s 28ms; Time for processing: 0h 0m 1s 808ms; rescorediagonal tmp/3198441352783276465/input tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.5 -a 0 --cov-mode 5 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 24 --compressed 0 -v 3 . [=================================================================] 100.00% 96.03K 0s 151ms ; Time for merging to pref_rescore1: 0h 0m 0s 241ms================>] 99.99% 96.02K eta 0s ; Time for processing: 0h 0m 1s 33ms; clust tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_rescore1 tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pre_clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Connected Component; [=================================================================] 100.00% 96.03K 0s 106ms ; Sort entries; Find missing connections; Found 292030 new connections.; Reconstruct initial order; [=================================================================] 100.00% 96.03K 0s 75ms ; Add missing connections; [=================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:7566,load,load-mode,7566,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['load'],['load-mode']
Performance," 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000""; FILTER_PARAM=""--filter-min-enable 1000 --diff ${DIFF} --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95""; EXPAND_PARAM=""--expansion-mode 0 -e ${EXPAND_EVAL} --expand-filter-clusters ${FILTER} --max-seq-id 0.95""; mkdir -p ""${BASE}""; mkdir -p ""${BASE}""; ""${MMSEQS}"" createdb ""${QUERY}"" ""${BASE}/qdb""; ""${MMSEQS}"" search ""${BASE}/qdb"" ""${DB1}"" ""${BASE}/res"" ""${BASE}/tmp1"" $SEARCH_PARAM; ""${MMSEQS}"" mvdb ""${BASE}/tmp1/latest/profile_1"" ""${BASE}/prof_res""; ""${MMSEQS}"" lndb ""${BASE}/qdb_h"" ""${BASE}/prof_res_h""; **mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124** ; # I got stucked at the above command. **next I am gonna do** ; ""${MMSEQS}"" align ""${BASE}/prof_res"" ""${DB1}.idx"" ""${BASE}/res_exp"" ""${BASE}/res_exp_realign"" --db-load-mode 2 -e ${ALIGN_EVAL} --max-accept ${MAX_ACCEPT} --alt-ali 10 -a; ""${MMSEQS}"" filterresult ""${BASE}/qdb"" ""${DB1}.idx"" ""${BASE}/res_exp_realign"" ""${BASE}/res_exp_realign_filter"" --db-load-mode 2 --qid 0 --qsc $QSC --diff 0 --max-seq-id 1.0 --filter-min-enable 100. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; $ time mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124; expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124 . MMseqs Version: 	GITDIR-NOTFOUND; Expansion mode 	0; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Max sequence length 	65535; Score",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:2186,load,load-mode,2186,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['load'],['load-mode']
Performance," 336ms; Time for merging to target_h: 0h 0m 0s 62ms; Time for merging to target: 0h 0m 0s 67ms; Database type: Aminoacid; Time for processing: 0h 0m 5s 544ms; Create directory tmp/18110643841744502873/search_tmp; search tmp/18110643841744502873/query tmp/18110643841744502873/target tmp/18110643841744502873/result tmp/18110643841744502873/search_tmp --alignment-mode 3 -s 5.7 --remove-tmp-files 1. prefilter tmp/18110643841744502873/query tmp/18110643841744502873/target tmp/18110643841744502873/search_tmp/5440497380282616509/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.o ut,nucl:nucleotide.out' -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov -mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load -mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 5.7. Query database size: 500 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 20000 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 20.00K 2s 504ms; Index table: Masked residues: 210586; Index table: fill; [=================================================================] 100.00% 20.00K 1s 855ms; Index statistics; Entries: 8552346; DB size: 537 MB; Avg k-mer size: 0.133630; Top 10 k-mers; GQQVAR 190; QLGQRV 110; IHDKNI 105; ALGSGK 105; LLPGKT 102; SGGTLR 84; SGLGRV 75; VGSSST 61; VMHAGS 59; ATADTT 59; Time for index table init: 0h 0m 5s 872ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:4817,load,load,4817,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['load'],['load']
Performance," 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:3278,load,load-mode,3278,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance," 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms; rescorediagonal tmpDB tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref tmp/12397138995521121878/linclust/639052995728955397/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:5413,load,load-mode,5413,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['load'],['load-mode']
Performance," 81ms; Create directory /Volumes/s/tmp/3581369344000996149/clu_tmp; cluster /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu /Volumes/s/tmp/3581369344000996149/clu_tmp --max-seqs 20 -c 0.8 --cov-mode 1 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --min-seq-id 0.5 --remove-tmp-files 1. Set cluster sensitivity to -s 3.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/clu_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-k",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:4105,load,load-mode,4105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['load'],['load-mode']
Performance," DIFF=3000; QSC=-20.0; MAX_ACCEPT=1000000; if [ ""${FILTER}"" = ""1"" ]; then; 0.1 was not used in benchmarks due to POSIX shell bug in line above; EXPAND_EVAL=0.1; ALIGN_EVAL=10; QSC=0.8; MAX_ACCEPT=100000; fi; export MMSEQS_CALL_DEPTH=1; SEARCH_PARAM=""--num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000""; FILTER_PARAM=""--filter-min-enable 1000 --diff ${DIFF} --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95""; EXPAND_PARAM=""--expansion-mode 0 -e ${EXPAND_EVAL} --expand-filter-clusters ${FILTER} --max-seq-id 0.95""; mkdir -p ""${BASE}""; mkdir -p ""${BASE}""; ""${MMSEQS}"" createdb ""${QUERY}"" ""${BASE}/qdb""; ""${MMSEQS}"" search ""${BASE}/qdb"" ""${DB1}"" ""${BASE}/res"" ""${BASE}/tmp1"" $SEARCH_PARAM; ""${MMSEQS}"" mvdb ""${BASE}/tmp1/latest/profile_1"" ""${BASE}/prof_res""; ""${MMSEQS}"" lndb ""${BASE}/qdb_h"" ""${BASE}/prof_res_h""; **mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124** ; # I got stucked at the above command. **next I am gonna do** ; ""${MMSEQS}"" align ""${BASE}/prof_res"" ""${DB1}.idx"" ""${BASE}/res_exp"" ""${BASE}/res_exp_realign"" --db-load-mode 2 -e ${ALIGN_EVAL} --max-accept ${MAX_ACCEPT} --alt-ali 10 -a; ""${MMSEQS}"" filterresult ""${BASE}/qdb"" ""${DB1}.idx"" ""${BASE}/res_exp_realign"" ""${BASE}/res_exp_realign_filter"" --db-load-mode 2 --qid 0 --qsc $QSC --diff 0 --max-seq-id 1.0 --filter-min-enable 100. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; $ time mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124; expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:1923,load,load-mode,1923,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['load'],['load-mode']
Performance," Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 56; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 7780; Target db start 1 to 756891; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 10ms; Time for processing: 0h 0m 28s 690ms; align tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 tmp/16138406286044646862/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 7780 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 7.78K 0s 362ms ; Time for merging to aln_2: 0h 0m 0s 3ms. 30 alignments calculated.; 30 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.003856 hits per query sequence.; Time for processing: 0h 0m 3s 496ms; mergedbs IP_DB/IP_DB result_DB/result_DB tmp/16138406286044646862/aln_merge tmp/16138406286044646862/aln_2 --compressed 0 -v 3 . Merging the results to result_DB/result_DB; Time for merging to result_DB: 0h 0m 0s 0ms; Time for processing: 0h 0m ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:11957,load,load-mode,11957,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['load'],['load-mode']
Performance," Substitution matrices...; Use kmer size 5 and split 1 using Target split mode.; Needed memory (20178976034 byte) of total memory (486687909888 byte); Index table: counting k-mers... ```. ## Context; Trying to generate a profile DB from the file `uniclust30_2018_08_hhm_db` contained the 18-08 release of Uniclust30; `http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz`; I am using `convertprofiledb` and then `createindex`... **NOTE:** I have used the same procedure to generate the profile DB using the HHblits profiles for Pfam 31 downloaded from:; `http://wwwuser.gwdg.de/%7Ecompbiol/data/hhsuite/databases/hhsuite_dbs/pfamA_31.0.tgz`. ## Your Environment; > MMseqs Version: 6.f5a1c; [f5a1cdb](https://github.com/soedinglab/MMseqs2/commit/f5a1cdb44c996d6be229226b09ecc687646c0c12); > MMseqs was self-compiled; > gcc (Homebrew gcc 5.5.0_4) 5.5.0; > cmake 3.12.3. >Server specifications:. ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fpu_exception	: yes; cpuid level	: 15; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer xsave avx f16c rdrand lahf_lm abm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm xsaveopt cqm_llc cqm_occup_llc dtherm ida arat pln pts; bogomips	: 5199.77; clflush size	: 64; cache_alignment	: 64; address sizes	: 46 bits physical, 48 bits virtual; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/130:3376,cache,cache,3376,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130,1,['cache'],['cache']
Performance," admixture (range 0.0-inf) []; misc:; --rescore-mode INT Rescore diagonals with:; 0: Hamming distance; 1: local alignment (score only); 2: local alignment; 3: global alignment; 4: longest alignment fulfilling window quality criterion [0]; --dbtype INT Database type 0: auto, 1: amino acid 2: nucleotides [0]; --shuffle BOOL Shuffle input database [1]; --createdb-mode INT Createdb mode 0: copy data, 1: soft link data and write new index (works only with single line fasta/q) [1]; --id-offset INT Numeric ids in index file are offset by this value [0]; common:; --threads INT Number of CPU-cores used (all by default) [10]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; --sub-mat TWIN Substitution matrix file [aa:blosum62.out,nucl:nucleotide.out]; --max-seq-len INT Maximum sequence length [65535]; --db-load-mode INT Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]; --remove-tmp-files BOOL Delete temporary files [1]; --force-reuse BOOL Reuse tmp filse in tmp/latest folder ignoring parameters and version changes [0]; --mpi-runner STR Use MPI on compute cluster with this MPI command (e.g. ""mpirun -np 42"") []; expert:; --filter-hits BOOL Filter hits by seq.id. and coverage [0]; --sort-results INT Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]; --write-lookup INT write .lookup file containing mapping from internal id, fasta id and file number [0]. examples:; mmseqs easy-linclust examples/DB.fasta result tmp. # Linclust output; # - result_rep_seq.fasta: Representatives; # - result_all_seq.fasta: FASTA-like per cluster; # - result_cluster.tsv: Adjecency list. # Important parameter: --min-seq-id, --cov-mode and -c; # --cov-mode; # 0 1 2; # Q: MAVGTACRPA 60% IGN 60%; # T: -AVGTAC--- 60% 100% IGN; # -c 0.7 - + -; # -c 0.6 + + +. # Cluster nucleotide sequences; mmseqs easy-linclust examples/DB.fasta result tmp --kmer-per-seq-scale 0.3. references:; - Steineg",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682:5994,load,load-mode,5994,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682,1,['load'],['load-mode']
Performance," as I can tell it doesn't seem to be overblowing that (the core dump is <400G). I ran createindex in the same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib6",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1169,load,load-safe-path,1169,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['load'],['load-safe-path']
Performance," environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; MMseq version: 13.45111; CPU: 2x AMD 7543 (64 cores total); RAM: 512 GB; Local Disk: 7 TB SSD; Network: 100 GBit Infiniband; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Thread(s) per core: 1; Core(s) per socket: 32; Socket(s): 1; NUMA node(s): 1; Vendor ID: AuthenticAMD; CPU family: 23; Model: 49; Model name: AMD EPYC 7502P 32-Core Processor; Stepping: 0; CPU MHz: 2500.000; CPU max MHz: 2500.0000; CPU min MHz: 1500.0000; BogoMIPS: 5000.22; Virtualization: AMD-V; L1d cache: 32K; L1i cache: 32K; L2 cache: 512K; L3 cache: 16384K; NUMA node0 CPU(s): 0-31; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr wbnoinvd arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif v_spec_ctrl umip rdpid overflow_recov succor smca sme sev sev_es",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:9249,cache,cache,9249,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,4,['cache'],['cache']
Performance," filterdb tmp/576731152808920235/linclust/1790908825406232727/pref_filter1 tmp/576731152808920235/linclust/1790908825406232727/pref_filter2 --filter-file tmp/576731152808920235/linclust/1790908825406232727/order_redundancy --threads 128 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 8.79M 22s 293ms; Time for merging to pref_filter2: 0h 0m 4s 651ms; Time for processing: 0h 0m 33s 252ms; align tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/pref_filter2 tmp/576731152808920235/linclust/1790908825406232727/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 128 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 8785102 type: Nucleotide; Target database size: 8785102 type: Nucleotide; Calculation of alignments; [=================================================================] 8.79M 11m 6s 373ms; Time for merging to aln: 0h 0m 5s 49ms; 1248621641 alignments calculated; 12850181 sequence pairs passed the thresholds (0.010291 of overall calculated); 1.462724 hits per query sequence; Time for processing: 0h 11m 16s 565ms; clust tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/aln tmp/576731152808920235/linclust/1790908825406232727/clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:8434,load,load-mode,8434,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['load'],['load-mode']
Performance," for merging to query_seqs_h: 0h 0m 0s 20ms; Time for merging to query_seqs: 0h 0m 0s 26ms; Time for processing: 0h 0m 0s 303ms; splitsequence /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 256 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 3ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 278905 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 88ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 64ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:3216,load,load-mode,3216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['load'],['load-mode']
Performance," hits (truncated result); mmseqs-web-worker_1 | 0 sequences passed prefiltering per query sequence; mmseqs-web-worker_1 | 0 median result list length; mmseqs-web-worker_1 | 1 sequences with 0 size result lists; mmseqs-web-worker_1 | Time for merging to pref_0: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 5ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/search/pref_0 /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --zdrop 40 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Compute score, coverage and sequence identity; mmseqs-web-worker_1 | Query database size: 1 type: Nucleotide; mmseqs-web-worker_1 | Target database size: 10754 type: Nucleotide; mmseqs-web-worker_1 | Calculation of alignments; mmseqs-web-worker_1 | [=================================================================] 1 0s 2ms; mmseqs-web-worker_1 | Time for merging to aln: 0h 0m 0s 0ms; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | 0 alignments calculated.; mmseqs-web-worker_1 | 0 sequence pairs passed the thresholds (-nan of overall calculated).; mmseqs-web-worker_1 | 0.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:25190,load,load-mode,25190,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['load'],['load-mode']
Performance," merging: 0h 1m 18s 365ms; [=================================================================] 100.00% 55.24M 8m 35s 231ms; ```. ### htop screen grab; ![Screen Shot 2021-03-10 at 12 16 09 PM](https://user-images.githubusercontent.com/14060382/110706285-7c9db380-81ac-11eb-8e42-efd46778a3ce.png). ### gdb output on an S status prefilter process:; ```; gdb -p 9878. Attaching to process 9878. warning: process 9878 is a cloned process; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/mmseqs...(no debugging symbols found)...done.; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:33208,Load,Loaded,33208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance," mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster iterations to 3; linclust shrimpDB tmp97/17949317426677965256/clu_redundancy tmp97/17949317426677965256/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:3602,load,load-mode,3602,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['load'],['load-mode']
Performance," previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 22 --compressed 0 -v 3 . Compute score and coverage; Query database size: 77815083 type: Aminoacid; Target database size: 77815083 type: Aminoacid; Calculation of alignments; [Error: Alignment step died; Error: Search died. The command is the same as used for previous clustering, the file is not bigger, I have no idea what is the issue. Any help is appreciated, thanks,; G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/265:2054,load,load-mode,2054,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265,1,['load'],['load-mode']
Performance," profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/q_orfs_aa /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db.idx /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 5 --compressed 0 -v 3 -s 7.5 . Index version: 16; Generated by: 8c79865b60025674b9c825fd7238bd0b95503bc7; ScoreMatrix: VTML80.out; Query database size: 5539077 type: Aminoacid; Estimated memory consumption: 3G; Target database size: 849970 type: Aminoacid; Segmentation fault; Error: Prefilter died; Error: Search step died; ```. Have you any idea what is going on?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/234:6790,load,load-mode,6790,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234,1,['load'],['load-mode']
Performance," sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Program call:; rescorediagonal tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 0.001 -c 0.9 --cov-mode 1 --min-seq-id 0.9 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --no-preload 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; E-value threshold 	0.001; Coverage threshold 	0.9; Coverage Mode 	1; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Include identical Seq. Id. 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; No preload 	false; Threads 	2; Verbosity 	3. Prefilter database: tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref; Query database: tmp/3578692915323364718/input; Target database: tmp/3578692915323364718/input; Result database: tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore1; ............; Done.; Time for merging files: 0h 0m 0s 224ms; Time for processing: 0h 0m 0s 948ms; Program call:; clust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore1 tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component	1000; Similarity type 	2; Threads 	2; Verbosity 	3. Init...; Opening sequence database",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:8297,perform,performs,8297,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['perform'],['performs']
Performance," std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=this@entry=0x7fffffffd290, __position=__position@entry=...); at /usr/include/c++/9/bits/vector.tcc:440; #11 0x000000000060c68b in std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=0x7fffffffd290); at /usr/include/c++/9/bits/stl_iterator.h:803; #12 nrtotaxmapping (argc=<optimized out>, argv=<optimized out>, command=...); at /home/vsts/work/1/s/src/util/nrtotaxmapping.cpp:96; #13 0x0000000000426a27 in runCommand (p=0x1288200, argc=argc@entry=8, argv=argv@entry=0x7fffffffe3b8); at /home/vsts/work/1/s/src/commons/Application.cpp:40; #14 0x000000000040e501 in main (argc=10, argv=0x7fffffffe3a8); at /home/vsts/work/1/s/src/commons/Application.cpp:203. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): f5b588be54de35876eff90f3694b67e1d00856ef; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): AVX2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 16 vCPU and 64 GB memory; * Operating system and version: Ubuntu 20.04.5 LTS (GNU/Linux 5.15.0-1021-gcp x86_64)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/666:3614,optimiz,optimized,3614,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666,2,['optimiz'],['optimized']
Performance," tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/order_redundancy --threads 24 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 10.91K 0s 66ms ; Time for merging to pref_filter2: 0h 0m 0s 170ms; Time for processing: 0h 0m 0s 603ms; align tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_filter2 tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 5 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 24 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 10913 type: Nucleotide; Target database size: 10913 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 10.91K 0s 56ms ; Time for merging to aln: 0h 0m 0s 218ms; 15033 alignments calculated; 12475 sequence pairs passed the thresholds (0.829841 of overall calculated); 1.143132 hits per query sequence; Time for processing: 0h 0m 0s 663ms; clust tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/input_step_redundancy tmp/3198441352783276465/clu_tmp/130169",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:10996,load,load-mode,10996,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['load'],['load-mode']
Performance," to be extracted; --reverse-frames 	1,2,3 	comma-seperated list of ORF frames on the reverse strand to be extracted; --translation-table 	1 	1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE, 9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL, 15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL, 23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA, 29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA; --use-all-table-starts	false 	use all alteratives for a start codon in the genetic table, if false - only ATG (AUG); --id-offset 	0 	numeric ids in index file are offset by this value ; --add-orf-stop 	false 	add * at complete start and end ; --start-sens 	4.000 	start sensitivity ; --sens-steps 	1 	Search steps performed from --start-sense and -s. . common options 	default 	description [value range]; --sub-mat 	blosum62.out	amino acid substitution matrix file ; --max-seq-len 	65535 	Maximum sequence length [1,32768] ; --max-seqs 	300 	maximum result sequences per query (this parameter affects the sensitivity); --threads 	1 	number of cores used for the computation (uses all cores by default); -v 	3 	verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info. Unrecognized parameter --format-output; Did you mean ""--max-accept""?; Error: Search died. ## Context. Trying to run against Pfam-A, it was working a couple months ago. ## Your Environment. mmseqs compiled by myself in MacOSX Mojave. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and versio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:10469,perform,performed,10469,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['perform'],['performed']
Performance," type: Nucleotide; Time for processing: 0h 0m 8s 216ms; Create directory tmp/18031188072042168038/taxonomy_tmp; taxonomy tmp/18031188072042168038/query refDB/NR tmp/18031188072042168038/result tmp/18031188072042168038/taxonomy_tmp --tax-output-mode 2 --threads 16 --split-memory-limit 100G --remove-tmp-files 1 . extractorfs tmp/18031188072042168038/query tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 16 --compressed 0 -v 3 . [=================================================================] 810.40K 31s 522ms; Time for merging to orfs_aa_h: 0h 0m 16s 759ms; Time for merging to orfs_aa: 0h 0m 22s 22ms; Time for processing: 0h 1m 23s 421ms; prefilter tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_aa refDB/NR.idx tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 100G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3 . Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 47918555 type: Aminoacid; Target split mode. Searching through 41 splits; Estimated memory consumption: 64G; Target database size: 444603205 type: Aminoacid; Process prefiltering step 1 of 41. k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 41); Query db start 1 to 47918555; Target db start 1 to 10838348; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:96384,load,load-mode,96384,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,1,['load'],['load-mode']
Performance,"# Expected Behavior; I have provided the below command ; **mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124**. I have created the Uniprotdb using mmseqs createdb command so the uniportdb.index file was created with it. ## Current Behavior; But I am seeing after giving expandaln command facing an issue saying the uniprotdb.index is generic type ; Input database ""./uniprot/uniprotdb.index"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; MMSEQS=""$1""; QUERY=""$2""; BASE=""$4""; DB1=""$5""; DB2=""$6""; DB3=""$7""; USE_ENV=""$8""; USE_TEMPLATES=""$9""; FILTER=""${10}""; TAXONOMY=""${11}""; M8OUT=""${12}""; EXPAND_EVAL=inf; ALIGN_EVAL=10; DIFF=3000; QSC=-20.0; MAX_ACCEPT=1000000; if [ ""${FILTER}"" = ""1"" ]; then; 0.1 was not used in benchmarks due to POSIX shell bug in line above; EXPAND_EVAL=0.1; ALIGN_EVAL=10; QSC=0.8; MAX_ACCEPT=100000; fi; export MMSEQS_CALL_DEPTH=1; SEARCH_PARAM=""--num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000""; FILTER_PARAM=""--filter-min-enable 1000 --diff ${DIFF} --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95""; EXPAND_PARAM=""--expansion-mode 0 -e ${EXPAND_EVAL} --expand-filter-clusters ${FILTER} --max-seq-id 0.95""; mkdir -p ""${BASE}""; mkdir -p ""${BASE}""; ""${MMSEQS}"" createdb ""${QUERY}"" ""${BASE}/qdb""; ""${MMSEQS}"" search ""${BASE}/qdb"" ""${DB1}"" ""${BASE}/res"" ""${BASE}/tmp1"" $SEARCH_PARAM; ""${MMSEQS}"" mvdb ""${BASE}/tmp1/latest/profile_1"" ""${BASE}/prof_res""; ""${MMSEQS}"" lndb ""${BASE}/qdb_h"" ""${BASE}/prof_res_h""; **mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:170,load,load-mode,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['load'],['load-mode']
Performance,"## Context. Hi!. We're currently looking for a replacement for CD-HIT-EST for clustering genes in nucleotide space. We have a few conditions when clustering. The CD-HIT-COMMAND is straightforward:. ```; cd-hit-est -i genes.fa -o cluster.fa -c 0.95 -T 64 -M 0 -G 0 -aS 0.9 -g 1 -r 0 -d 0; ```. Basically, we want to perform greedy clustering at 95% identity and at least 90% of the shorter gene should be aligned. The longest sequence of a cluster should become the representative and a member of a cluster should not align against any other representative with a better score/percid. We have now come up with the following command(s):. ```; mmseqs createdb genes.fa genes.mmseqs.db --dbtype 2 --shuffle 0. mmseqs cluster genes.mmseqs.db genes.mmseqs.cluster tmp --kmer-per-seq-scale 0 --kmer-per-seq 1000 \; -s 4 --max-seq-len 80000 --remove-tmp-files 0 --cluster-mode 2 --min-seq-id 0.95 --threads 64 --cov-mode 1 \; -c 0.9 --spaced-kmer-mode 0 --alignment-mode 3 --cluster-reassign 1; ```. The key parameter seems to be `--spaced-kmer-mode 0` as this prevents very similar sequences being placed in different clusters. as reported by others (#831 #489). Using these parameters the clustering compares quite well against the clusters produced by cd-hit:; ```; mmseqs clusters = 13'471'787; cdhit clusters = 13'640'333; runtime(mmseqs) / runtime(cdhit) = 0.09; Rand Score: 0.99; Adjusted Rand Score: 0.91; V-measure: 0.99; ```. So it seems that mmseqs is slightly overclustering (might be due to local vs global alignment) and the cluster consistency metrics indicate that even the cluster membership (and not only the representatives) seem to be mostly correct. . I would like to get your feedback on the command(s) before I make this our standard (nucleotide) gene clustering pipeline. Do you think there are other parameters that could be tweaked?. ## Your Environment; version: `6f45232ac8daca14e354ae320a4359056ec524c2`; Downloaded static binary from GitHub. Best and thanks,; Hans",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/836:315,perform,perform,315,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/836,1,['perform'],['perform']
Performance,"## Context; I am running MMseqs2 search of the UniRef100 database. This database includes many long sequences, one example of which is a titin isoform (UniRef100_UPI000A307CE5). ## Expected Behavior; I would expect the output file after running convertalis on the search output to have the same sequence ID as the UniRef100 sequence, i.e.,. ```; evm.model.utg11.204 UniRef100_UPI000A307CE5 0.231 160 116 3 2138 2297 16366 16518 5.20E-36 164; ```. ## Current Behavior; MMseqs2 is splitting this long entry into two separate ones: UniRef100_UPI000A307CE5_0 and UniRef100_UPI000A307CE5_1. . I can verify this by performing a grep search for ""UPI000A307CE5"" on the .lookup file which returns; ```; 132227718 UniRef100_UPI000A307CE5_0; 132227719 UniRef100_UPI000A307CE5_1; ```. Additionally, searching for these two lines within the output file created by ""createdb"" indicates that the tail portion of this UniRef100 sequence has indeed been split from the main. Because of this splitting behaviour, my output convertalis table has this entry. ```; evm.model.utg11.204 UniRef100_UPI000A307CE5_0 0.231 160 116 3 2138 2297 16366 16518 5.20E-36 164; ```. From what I can guess this might not strictly be a bug in MMseqs2 - perhaps exceedingly long sequences can't be handled properly during alignment. I can handle this behaviour now that I am aware of it; it resulted in some confusion as to why I was not obtaining the expected results when parsing the uniref100.xml file for the gene name / taxon code of significant hits. However, I think that a consistent sequence ID should be returned since this behaviour is not clear and it took a bit of investigation to figure out what was happening. ## Steps to Reproduce (for bugs); Generate and index a FASTA file containing the above-mentioned UniRef100 sequence. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any pa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/89:609,perform,performing,609,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/89,1,['perform'],['performing']
Performance,"## Context; I am working with metagenomic data; Assemblies and gene annotation have been made by samples and then we performed a clustering at 95% identity to clustered genes by sample into one genes catalog. The tradictionnal command used is based on CD-HIt : `cd-hit-est -c 0.95`.; I want to test mmseq for saving computing time (original, isn't it?!). ## Expected Behavior; results similar to cd-hit in a much less time. ## Current Behavior; input =13 387 709 nucleic sequences. cd-hit output : 2,102,272 clusters; linclust output : 1,986,968 clusters (ok good start); cluster output : 8062 cluster (!!! what ?). I did not check anything further, except that both mmseq clustering ran well. I obviously miss something !; ; How is that possible that `cluster` produced only 8k clusters ?. ## Your Environment; mmseqs2-v14-7e284. the command lines used : ; * for linclust; `mmseqs easy-cluster AllSamples-cd-hit-est.0.95 mmseq_easyCluster tmp --min-seq-id 0.95 -c 0 --threads 20 --split-memory-limit 19G`; for cluster; `mmseqs easy-linclust AllSamples-cd-hit-est.0.95 mmseq_easyLinclust tmp --min-seq-id 0.95 -c 0 --threads 20 --split-memory-limit 19G`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/699:117,perform,performed,117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/699,1,['perform'],['performed']
Performance,"## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I am getting error when running ; mmseqs search mmseqs_U90_out/mmseqs-81_queryDB ../MH2_mappingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/689:481,load,load-mode,481,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689,1,['load'],['load-mode']
Performance,"## Expected Behavior. According to the documentation, when extracting the representative sequences either by manually performing these steps:. ```; mmseqs result2repseq DB clu clu_rep; mmseqs result2flat DB DB clu_rep clu_rep.fasta --use-fasta-header; ```. or by using the ```easy-cluster``` or ```easy-linclust``` commands, a proper Fasta file should be created with the representative sequences. ## Current Behavior. A Fasta file is created that does not contain sequences but only the sequences IDs : . ```; >sequence_1; sequence_1; >sequence_2; sequence_2; >sequence_3; sequence_3; ```. ## Steps to Reproduce (for bugs). Run ```easy-cluster``` or ```easy-linclust``` on a protein Fasta file. ## MMseqs Output (for bugs). ```; Program call:; easy-cluster final_complete_sequences.fa.gz clusteringDB tmp --cov-mode 1 -c 0.9 --min-seq-id 0.9 --threads 2 --kmer-per-seq 80. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:118,perform,performing,118,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['perform'],['performing']
Performance,"## Expected Behavior. Cluster nucleotide genome sequences (e.g., wgs records, contigs, scaffolds, complete genomes) in a few hours using `easy-linclust`. ## Current Behavior. Running `easy-linclust` using the following command ran for more than 24 hours and was at the `rescorediagonal` step for +20 hours:; ```; mmseqs easy-linclust input.fna cluster tmp --min-seq-id 0.9 -c 0.9 --alignment-mode 3 --db-load-mode 2 --split-memory-limit 2000G; ```. input.fna is 642 GB with approximately 2.5 MM sequences. ## Context. I want to cluster nucleotide genome sequences from NCBI to reduce the burden on similarity search for highly similar / redundant sequences. ## Your Environment; * MMseqs Version: Commit f5f780acd64482cd59b46eae0a107f763cd17b4d (statically-compiled AVX2); * Machine: 128 CPUs, 4 TB RAM, 2 x 1.9 TB NVMe SSD; * Operating system and version: Amazon Linux 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/726:404,load,load-mode,404,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/726,1,['load'],['load-mode']
Performance,"## Expected Behavior. Dear all, my goal is to estimate the abundance of a collection of genes against several samples or reads from metagenomes. The strategy works fine but only if I use proteins instead of nucleotides. I created a toy example downloading two fastq.gz, assembling a bacterial genome with 'shovill' and then predicting proteins with prokka on top of this assembled genome. . For the example I used just 3 proteins (from the file genome.faa) like a collection of genes. Then when I try 3 nucleotide sequences (extracted from the genome.ffn file) it throws me the error copied below. I wanted to fix this since my collection contains nucleotide sequences. . ## Current Behavior. ```; **It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace)**; ```. ## Steps to Reproduce (for bugs). I followed these steps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb genome.faa collection_db; # or mmseqs createdb genome.ffn collection_db; mmseqs cluster collection_db collection_clu temp; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporal; ```. Here are both files ; [genome.ffn.txt](https://github.com/soedinglab/MMseqs2/files/7558993/genome.ffn.txt); [genome.faa.txt](https://github.com/soedinglab/MMseqs2/files/7558994/genome.faa.txt). ## MMseqs Output (for bugs). ```; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/507:776,perform,performed,776,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507,1,['perform'],['performed']
Performance,"## Expected Behavior. Don't crash on envdb when sequence length is less than 12 aa long (for example on `SEGGQDFWL` or `GSSGLISMPRV`). ## Current Behavior. MMseqs2 process crashes on aligning ColabFold envdb every time if input `.fasta` file contains short sequence (this also happens if .fasta file contains more than one sequence). UniRef database is processed every time without issue, crash happens only on envdb processing. ```; align results_700_only_456_fasta_700_5/prof_res ../db_sources/colabfold_envdb_202108_db.idx results_700_only_456_fasta_700_5/tmp/17071544472219224293/pref_0 results_700_only_456_fasta_700_5/tmp/17071544472219224293/aln_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Index version: 16; Generated by: fcf52600801a73e95fd74068e1bb1afb437d719d; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 209335862 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Segmentation fault (core dumped); Error: Alignment died; Traceback (most recent call last):; File ""/home/x/genomic/alphafold2/venv38alphafold2/bin/colabfold_search"", line 8, in <module>; sys.exit(main()); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 180, in main; mmseqs_search(; File ""/home/x/genomic/alphafold2/venv38alphafold2/l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/538:995,load,load-mode,995,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538,1,['load'],['load-mode']
Performance,"## Expected Behavior. Perform contig-taxonomy without raising any error for all the sequences introduced. . ## Current Behavior. The taxonomy is obtained, creating the `report` and `lca_tsv` files, but in the error log there is the following line: . ```; data/04_taxgenes/contigs_tax/1889553110621073458/easy-taxonomy.sh: line 55: 8991 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```; Additionally to the mmseqs output, there is stated sometimes a line saying 'Error filterdb died' without anything else. Additionally, for a subset of the contigs, there is no taxonomy line. Whereas in some cases `mmseqs` correctly states a 'unclassified' line, for others it does not appear. ## MMseqs Output (for bugs). [mmseqs_tax_352069_1.txt](https://github.com/soedinglab/MMseqs2/files/6405462/mmseqs_tax_352069_1.txt). ## Context. I am performing multiple taxonomies for multiple contigs coming from a set of samples. There are some specific cases in which `mmseqs` is able to finish without raising an error. The taxonomy is performed against the GTDB downloaded through the command line you provided (`mmseqs databases`). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * 57de8c8d7b835519990185cbac7a2d841c734f05; * Downloaded locally.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * AVX2 with 250 Gb. ; * Operating system and version: Cluster with UNIX.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447:22,Perform,Perform,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447,3,"['Perform', 'perform']","['Perform', 'performed', 'performing']"
Performance,"## Expected Behavior. Taxonomy database created based on a `seqdb` created from UniProt sequences. ## Current Behavior. Program crashed with `core dumped` error and reports `Error: createbintaxonomy failed`. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; mmseqs createdb ""uniprot_2024_03.fasta"" seqdb; ```; then; ```; mmseqs createtaxdb seqdb tmp ; ```. We attempted to vary `--tax-db-mode`, `--tax-mapping-mode`, and `--threads` parameters but observed the same behavior. Any help would be highly appreciated. We are able to reproduce this issue with a minimal database containing 1000 sequences. ## MMseqs Output (for bugs). ```; > mmseqs createtaxdb seqdb tmp ; createtaxdb seqdb tmp . MMseqs Version: 15.6f452; NCBI tax dump directory; Taxonomy mapping file ; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 48; Verbosity 3. Loading nodes file ... Done, got 2601214 nodes; Loading merged file ... Done, added 79743 merged nodes.; Loading names file ... Done; mmseqs: malloc.c:2379: sysmalloc: Assertion `(old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)' failed.; Aborted (core dumped); Error: createbintaxonomy failed; ```. ## Context. We are trying to create a custom taxonomy database for MSA, such that the resulting .a3m files contain taxonomy information. Is a taxonomy database already available for download for uniprot_2024_03 for similar releases?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU suppo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871:921,Load,Loading,921,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871,2,['Load'],['Loading']
Performance,## Expected Behavior. Using the `--max-seq-length` parameter in `mmseqs linclust` will only return sequences with a length smaller than the setting. ## Current Behavior. Even with the default parameter linclust will return larger sequences (up to 600K nt in my case). Also choosing very large values triggers an integer overflow. ## Steps to Reproduce (for bugs). ```bash; mmseqs linclust foods foods_99 /tmp --cov-mode 0 -c 0.8 --min-seq-id 0.99 --threads 20 --split-memory-limit 250G --max-seq-len 3000000000; ```. ## MMseqs Output (for bugs). ```; ...; Seq. id. threshold 0.99 ; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length -1294967296; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; ...; ```. ## Context. mmseqs version 13.45111. `conda info`:. ```; active environment : metagenomics; active env location : /users/cdiener/miniconda3/envs/metagenomics; shell level : 3; user config file : /users/cdiener/.condarc; populated config files : ; conda version : 4.10.3; conda-build version : not installed; python version : 3.7.8.final.0; virtual packages : __linux=4.15.0=0; __glibc=2.27=0; __unix=0=0; __archspec=1=x86_64; base environment : /users/cdiener/miniconda3 (writable); conda av data dir : /users/cdiener/miniconda3/etc/conda; conda av metadata url : None; channel URLs : https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /users/cdiener/miniconda3/pkgs; /users/cdiener/.conda/pkgs; envs directories : /users/cdiener/miniconda3/envs; /users/cdiener/.conda/envs; platform : linux-64; user-agent : conda/4.10.3 requests/2.26.0 CPython/3.7.8 Linux/4.15.0-121-generic ubuntu/18.04.5 glibc/2.27; UID:GID : 52778:1127; netrc file : None; offline mode : False; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/499:1568,cache,cache,1568,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/499,1,['cache'],['cache']
Performance,"## Expected Behavior. When searching for protein sequences that are already included in a database such as Uniprot or Uniref, MMSeqs2 should retrieve an exact match for almost all the query sequences. ## Current Behavior. Running MMSeqs2 search or easy-search with randomly extracted sequences from Uniref90 against the same Uniref90 database, gives fewer exact matches than for example using Diamond with the same parameters. It seems MMSeqs2 aligns more sequences than Diamond but it misses more exact matches as well. ## Steps to Reproduce (for bugs). * Randomly extract 10,000 sequences from Uniref90 . * Perform a search against Uniref90 with the 10,000 query proteins using MMSeqs2 search with parameters ```-s 4``` and ```--max-seqs 4000``` . * Perform a search against Uniref90 with the same 10,000 query proteins using Diamond blastp with default parameters and ```--max-target-seqs 4000```. * Compare the number of query sequences for which an exact match is retrieved across the two searches (i.e. a query sequence that aligns perfectly against itself). . ## MMseqs Output (for bugs). MMSeqs2 logs: https://gist.github.com/fstrozzi/b21b68aa94bcd9bb5cf19af537975850. ## Context; We were testing MMSeqs2 sensitivity and as a sort of true positive control we realigned some sequences randomly extracted from Uniref90 against the Uniref90, to check how many exact matches we were able to retrieve. We then saw that MMSeqs2 with ```-s 4```, which should match Diamond default (fast) parameters, misses some exact matches. #### MMSeqs2 . * total aligned query sequences: 9994; * exact matches (query sequence aligned with itself in the database): 9496. #### Diamond. * total aligned query sequences: 9975 ; * exact matches (query sequence aligned with itself in the database): 9975. We were also wondering what could be the parameters controlling this behavior and what we could do to improve the best hit search. We also tried to run MMSeqs2 with higher sensitivity (5.7) but the result is very ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91:609,Perform,Perform,609,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91,2,['Perform'],['Perform']
Performance,"## Expected Behavior; ## Current Behavior; Hi I make a databse from uniprotref 100 (/databases/uniprot/uniref/uniref100) and perform mmseqs easy-search. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs easy-search MySeqs.aa UniprotDB alnRes.m8 tmp. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. alnRes.m8 head ; g3521.t1 UniRef100_A0A2V2UU05 0.991 488 4 0 1 488 1 488 0.000E+00 1044; g3521.t1 UniRef100_Q4DIV5 0.989 488 5 0 1 488 1 488 0.000E+00 1043; g3521.t1 UniRef100_Q4DR82 0.987 488 6 0 1 488 1 488 0.000E+00 1041; g3521.t1 UniRef100_K2MZR3 0.928 488 35 0 1 488 1 488 9.437E-322 988. Now I wish to obtain a description from each ID of the second column (similiar to blastdbcmd command to retrieve description form blastdb using a list of ids. It's possible to retrieve the information from each ID?. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/646:125,perform,perform,125,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/646,1,['perform'],['perform']
Performance,## Expected Behavior; Both versions should have the same ROC1 value in our benchmark. . ## Current Behavior; AVX2 performes worse than SSE4.1,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/19:114,perform,performes,114,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/19,1,['perform'],['performes']
Performance,"## Expected Behavior; Expect search return identity value for query sequences. ## Current Behavior. No values (identity) has been returned. ## Steps to Reproduce (for bugs); Data can be found here: ; [link](https://drive.google.com/drive/folders/1-83_3WoHP2J8BtygmDzsfaY6iB8criW3?usp=sharing); ```; # Create MMseqs2 databases; mmseqs createdb gen.fasta gen_db; mmseqs createdb train.fasta train_db. # Perform the search; mmseqs search gen_db train_db result tmp -a -s 7.5; mmseqs convertalis gen_db train_db result result.m8; ```; Use python code to read back results. ```; mmseqs_result = pd.read_csv('./mmseq/result.m8', sep='\t', names=[; 'query', 'target', 'identity', 'alignment_length', ; 'mismatches', 'gap_openings', 'qstart', 'qend', ; 'tstart', 'tend', 'evalue', 'bit_score'; ]); ```; The dataframe is empty. Does this mean there is no identity (0 identity) for my query sequences in target set?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/780:401,Perform,Perform,401,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/780,1,['Perform'],['Perform']
Performance,"## Expected Behavior; Hello Dr. Soeding,; I have been trying to use your program MMSEQs2 to match illumina metagenomic reads against the Refseq proteins database. ; This is the workflow I have followed so far; - create mmseqs db for the target (Refseq here) ; mmseqs createdb RSComplete/*.gz mmseqsRefSeqCompleteDB; - create an index for the target db (in a temp folder ""tmp""); mmseqs createindex RefSeqCompleteDB tmp ; - load the target into memory for repeated searching; mmseqs touchdb mmseqsRefSeqCompleteDB. And then for a set of query files: ; - create mmseqs db for the query file; mmseqs createdb $file $outpath/$querydb; - search against the target db loaded in memory; mmseqs search $outpath/$querydb $db $outpath/$result_db tmp --db-load-mode 3 --threads 2 --max-seqs 25 -s 1 -a -e 1e-5. Is this the correct way of processing multiple searches using mmseqs? Is there any way to speed up searches for large query sets and large database files?. Any information would be greatly appreciated.; Thanking you,. regards,; Dhwani Desai; ## Current Behavior; It does not seem to make a difference to the runtime when I try it with or without the --db-load-mode option. Is there a way to speed up these kinds of repeated searches?; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 73ce3b88754987122b4fc5e69a721beeecd677d0. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; installation (using Git):; git clone h",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214:422,load,load,422,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214,3,['load'],"['load', 'load-mode', 'loaded']"
Performance,"## Expected Behavior; Hello all,. I'm trying to use `clusterupdate` to update a cluster after adding sequences to the database, and then use `createtsv `to convert the results. . My initial database has ~58k sequences. I `cluster` it and then use `clusterupdate` after the database is updated. The database update adds ~63k sequence, and does not remove any old sequences. After that, I use `createtsv` on the updated cluster results. ## Current Behavior; It seems to run smoothly up until I try to use `createtsv`, where I get this error:. ```; Invalid database read for database data file=updatedDB_h, database index=updatedDB_h.index; getData: local id (4294967295) >= db size (122202); ```. ## Steps to Reproduce (for bugs); I attached a .zip with the two input files:; ```; INITIAL_F=query_training.fasta; NEW_F=all_seqs.fasta; ```; [files.zip](https://github.com/soedinglab/MMseqs2/files/7478529/files.zip). 1) Creating the initial database. (58k seq); ```; mmseqs createdb $INITIAL_F initialDB; ```; 2) Performing the clustering.; ```; mkdir tmp; mmseqs cluster initialDB initialDB_clu tmp ; ```; 3) Creating the new database. (the 58k initial seq + 63k new seq. None of the initial sequences were removed.); ```; mmseqs createdb $NEW_F newDB; ```; 4) Performing the cluster update.; ```; mmseqs clusterupdate initialDB newDB initialDB_clu updatedDB updatedDB_clu tmp; ```; 5) Converting the output.; ```; mmseqs createtsv updatedDB updatedDB updatedDB_clu updated.tsv; ```. ## MMseqs Output (for bugs); https://gist.github.com/rtn28/ff93c5dd10514602cb72b10d00f6f769. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `13.45111`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/501:1010,Perform,Performing,1010,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/501,2,['Perform'],['Performing']
Performance,"## Expected Behavior; Hi, I expected that this library would come with a/the conda environment. It's not a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480:492,load,loading,492,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480,1,['load'],['loading']
Performance,"## Expected Behavior; I am clustering billions of protein sequences. I already built the database. I was expecting linclust to run fairly quickly, but it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable fa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/477:381,load,loads,381,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477,1,['load'],['loads']
Performance,"## Expected Behavior; I am trying to generate MSAs by querying uniref50 to uniref30. ## Current Behavior; No output for the expandaln step. ## Steps to Reproduce (for bugs); ```linux; mmseqs createdb uniref50.fasta uniref50QueryDB; sudo vmtouch -t -l -d -w uniref30_2202_db.idx; mmseqs search uniref50QueryDB ../uniref30/uniref30_2202_db res tmp --db-load-mode 2; mmseqs expandaln uniref50QueryDB ../uniref30/uniref30_2202_db res ../uniref30/uniref30_2202_db_aln res_expanded --db-load-mode 2; ```. ## MMseqs Output (for bugs); This is the output for the last step (i.e. expandaln). ```linux; MMseqs Version: 	7b95387f93e38c3911f9188bc702d63ed3194013; Expansion mode 	0; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Max sequence length 	65535; Score bias 	0; Compositional bias 	1; Compositional bias 	1; E-value threshold 	0.001; Seq. id. threshold 	0; Coverage threshold 	0; Coverage mode 	0; Pseudo count mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Expand filter clusters 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	2; Compressed 	0; Threads 	64; Verbosity 	3. Alignment must contain a backtrace.; ```; Alignment must contain a backtrace. appears multiple times in red color. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs Version: 	7b95387f93e38c3911f9188bc702d63ed3194013; Run under a linux server.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/650:351,load,load-mode,351,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/650,2,['load'],['load-mode']
Performance,"## Expected Behavior; I am using mmseqs2 for taxonomy assignment against nt database and I was hoping to have a fast result. ## Current Behavior; Mmseqs2 is running too slow, maybe I need help to optimize my command line. My fasta files have ~300,000 to 1,000,000 sequences. ## Steps to Reproduce (for bugs); To create the database I used the following commands:; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy; blastdbcmd -db nt -entry all -outfmt ""%a %T"" > nt.fna.taxidmapping; mmseqs createdb nt.fna nt.fnaDB ; mmseqs createtaxdb nt.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nt.fna.taxidmapping; mmseqs easy-taxonomy $fasta ~/Programs/databases/nt.fnaDB $fasta_result tmp --search-type 3 --lca-mode 2 --threads 32. ## MMseqs Output (for bugs); MMseqs2 lof file (the run is not finished yet): https://gist.github.com/giantoni/efc6f62f85119a071992f9a6ad82d7b2. ## Context; For now, I just want to separate my metatranscriptome sequences into domain (bacteria, archae, eukaryota). ## Your Environment; I am using a virtual machine with ubuntu 18.04.5 LTS 118 Gb RAM and 32 cores (it does support both AVX2/SSE).; MMseqs2 Version: 12.113e3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/385:196,optimiz,optimize,196,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/385,1,['optimiz'],['optimize']
Performance,"## Expected Behavior; I tried using easy-clust to perform clustering to generate smaller representative subsets from Uniref50 (Uniref40, Uniref 30, Uniref 20, etc.). ## Current Behavior; The clustering dies after a few steps with an Out of Memory Error. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; tmp/5521603387764364218/clu_tmp/3834389364932800683/cascaded_clustering.sh: line 102: 208445 Killed $RUNNER ""$MMSEQS"" prefilter; ""$INPUT"" ""$INPUT"" ""${TMP_PATH}/pref_step$STEP"" ${TMP}; slurmstepd: error: Detected 1 oom_kill event in StepId=16746209.batch. Some of the step tasks have been OOM Killed. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; #SBATCH --output=slurm_mlm.out; #SBATCH -e slurm_mlm.err; #SBATCH -p scavenger-gpu; #SBATCH --gres=gpu:1; #SBATCH --mem=200G; #SBATCH -c 32; mmseqs easy-cluster /hpc/group/naderilab/eleanor/prose/data/uniref50.fasta uniref40 tmp --min-seq-id 0.4 -c 0.8 --cov-mode 1 --split-memory-limi; t 160G --threads 12. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/898:50,perform,perform,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/898,1,['perform'],['perform']
Performance,"## Expected Behavior; I would like to add the taxonomy information to my results database (search with UniRef90 as query). . ## Current Behavior; I get a segfault (see below). ## Steps to Reproduce (for bugs); mmseqs search profile_data /home/db/UniRef90 data_uniref90 tmp -s 4 -c 0.9 --min-seq-id 0.8; mmseqs addtaxonomy /home/db/UniRef90 data_uniref90 data_uniref90_taxa. ## MMseqs Output (for bugs); Loading NCBI taxonomy; Loading nodes file ... Done, got 2279399 nodes; Loading merged file ... Done, added 59566 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Segmentation fault (core dumped). ## Context; I want to add taxonomic information to the db. Eventually I would like to add more metadata, convert to tsv and continue my work in R. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; 12.113e3; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; conda 4.8.5; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; 80 CPU, 423.5 GB remaining memory; * Operating system and version:; Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-45-generic x86_64)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/355:403,Load,Loading,403,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/355,4,['Load'],['Loading']
Performance,"## Expected Behavior; I'm using mmseqs driven by colabfold to search against large db.; ## Current Behavior; When colabfold executing ""search"" step, mmseqs generates ""prefilter"" step, and args are ""--split 0 --split-mode 2 --split-memory-limit 0"", then the split number is set to 3 but smaller than 4. So mmseqs use entire index, which is too large for my memory (64GB). Thus mmseqs avoid using index, which makes searching step very slow.; ## Steps to Reproduce (for bugs); colabfold_search x.fasta ColabFold/Datas/ --use-env 1 --use-templates 0 MSA_200 ; (colabfold_search execute search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 ). ## MMseqs Output (for bugs). MSA_200/qdb exists and will be overwritten; createdb MSA_200/query.fas MSA_200/qdb --shuffle 0 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Database type 	0; Shuffle input database	false; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 0ms; Time for merging to qdb: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 0ms; search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:696,load,load-mode,696,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['load'],['load-mode']
Performance,"## Expected Behavior; MMSeqs search followed by MMSeqs convertalis --format-output ""query,target,pident,nident"" should export the number of identical matches between query and target sequences. ## Current Behavior; MMSeqs always reports the ""nident"" (number of identical residues) value to be 0. ## Steps to Reproduce (for bugs); #Please run bash script below to reproduce error; #!/bin/bash; #download protein sequences from Pyrococcus furiosus; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz. #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/349:778,perform,perform,778,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349,1,['perform'],['perform']
Performance,"## Expected Behavior; Not crashing, with a better error message if this is a user problem. ## Current Behavior; Seg Fault. 90% of profile searches are fine against this database, but others segfault. example below. ## Steps to Reproduce (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2; ```. ## MMseqs Output (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	2; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local tempor",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:420,load,load-mode,420,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,2,['load'],['load-mode']
Performance,"## Expected Behavior; Run mmseq search with an array of jobs. ## Current Behavior; As a test, I began with an array of 5 jobs only. 2 of them failed with a different error message. When I run them alone, they work. This behaviour is similar to the issue #239 . ## Steps to Reproduce (for bugs); `sarray -J mmseq --mail-type=ARRAY_TASKS,FAIL commandMMseqs --%=5`; where commandMMseqs contains:; `sbatch command_mmseq2_model.sbatch GCA_018105865.1 GCA_901001135.2` ; `sbatch command_mmseq2_model.sbatch GCA_009193005.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_905160935.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_019095985.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_001703475.1 GCA_901001135.2`. command_mmseq2_model.sbatch contains:; ```; #!/bin/bash; #; #SBATCH -N 1 # nombre de nœuds; #SBATCH -c 20 # nombre de cœurs sur ce meme noeud; #SBATCH --mem 50G # mémoire vive pour l'ensemble des cœurs; #SBATCH -J mmseq. module load system/Miniconda3-4.7.10 ; module load bioinfo/mmseqs2-v13.45111. mmseqs search copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out tmp -s 5.7 --search-type 3 --threads 20 --max-seqs 50 ; mmseqs filterdb mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit --extract-lines 1 ; mmseqs convertalis copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.*[0-9]* &; awk '{if ($3>=0.75 && $4>=300 && $12>=200) print $0}' mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab > mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab.filtered; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; ```. ## MMseqs Output (for bugs); One job fails ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/607:973,load,load,973,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/607,1,['load'],['load']
Performance,"## Expected Behavior; Run rbh using computer clusters.; ## Current Behavior; I am running 'mmseqs rbh' within 1000 jobs in parallel using High-performance computing. But there are always some jobs failed due to different error messages(`STDERR`). ## Steps to Reproduce (for bugs); this is my cmd to run rbh:; ```sh; $ mmseqs rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files; ```; so `$db_name` is a variable and for parallel jobs, it's the element of my name list. ; ## MMseqs Output (for bugs); there are several kinds of `STDERR` files:; ```sh; Could not delete /userfolder/rbh/result/tmp/latest!; ```; or; ```sh; Could not write file tmp/rbh.sh!; ```; and ; ```sh; Failed to execute tmp/rbh.sh with error 26.; ```; Even though the `STDERR` files are different, all `STDOUT` are quite similar: it seems that they all collapse in the middle of the process. The corresponding output is ; ```sh; rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files. MMseqs Version: f05f8c51d6e9c7c0b15fbd533e4b678303f50b3e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; E-value threshold 0.001; Seq. id. threshold 0; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 28; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Lo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/239:143,perform,performance,143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/239,1,['perform'],['performance']
Performance,"## Expected Behavior; Search a query database of translated nucleotides against the PFAM profile database. ## Current Behavior; Segfault when reaching the `search` step (after `extractorfs`). ## Steps to Reproduce (for bugs); ```; module load MMseqs2/10-6d92c-foss-2018b; cd /Pfam/directory/. mmseqs convertmsa Pfam-A.full.gz pfam_msa_db; mmseqs msa2profile pfam_msa_db pfam_profile --match-mode 1; mmseqs createindex pfam_profile tmp -k 6 -s 7. PFAM=""location/of/pfam_profile""; K1M=""location/of/input/fasta""; ORFS=""where/to/save/orfs""; RES=""location/of/final/result"". cd ; mmseqs createdb ${K1M} ${ORFS}; mmseqs search ${ORFS} ${PFAM} ${RES} tmp -k 5 -s 7. module unload MMseqs2/10-6d92c-foss-2018b; ```. ## MMseqs Output (for bugs); ```; Caught signal 11 (Segmentation fault: address not mapped to object at address 0x7f6b77d84270); ==== backtrace (tid: 1754) ====; 0 0x0000000000142e40 __memcpy_ssse3() :0; 1 0x00000000004d8b86 PrefilteringIndexReader::getIndexTable() ???:0; 2 0x00000000004cc0c6 Prefiltering::runSplit() ???:0; 3 0x00000000004cc90d Prefiltering::runSplits() ???:0; 4 0x00000000004cd10d Prefiltering::runMpiSplits() ???:0; 5 0x00000000004c2974 prefilter() ???:0; 6 0x000000000044a7d6 runCommand() ???:0; 7 0x0000000000442d29 main() ???:0; 8 0x0000000000021c05 __libc_start_main() ???:0; 9 0x000000000044a46c _start() ???:0; =================================; tmp/14557808422999051349/searchtargetprofile.sh: line 28: 1754 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""${INPUT}"" ""${2}"" ""${TMP_PATH}/; ```. ## Context; I want to find candidate transcription factors in a non-model organism. By aligning translated bulk RNA-seq reads against Pfam, I hope to get matches against known transcription factor families or DNA binding domains. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: release 10-6d92c-foss-2018b; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/259:238,load,load,238,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259,1,['load'],['load']
Performance,"## Expected Behavior; The analysis finished in minutes on MMSeq2 MSA server using colabfold. ## Current Behavior; Local mmseqs always paused for hours without generating outputs. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I am using `colab_search` which calls `mmseqs` like `search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8`. The query contains 4 amino acid sequences, and each has the length of 493 amino acid. NOTE, when I took off `--split 8`, I also observed that mmseqs halts at certain stage. ## MMseqs Output (for bugs); <pre>; search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8 [93/1999]. MMseqs Version: b768f48f0bd73688b6a68132159a97f7b6310f03; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 2; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 72; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 8; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 10000; Split database 8; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517:470,load,load-mode,470,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517,2,['load'],['load-mode']
Performance,"## Expected Behavior; When performing iterative (profile) search, it would be important to have have a uniform, ""globally valid"" bit score or E-value allowing accurate significance-ranking of all identified targets for a given query. ## Current Behavior; There seems to be separate results ""blocks"" in the output corresponding to targets identified in separate iterations. In each block, hits are properly sorted according to their significance. However, bit scores seems to be in-comparable across result blocks. There can be huge jumps in E-value (and bit score) as we walk down on the list of targets for a query protein. Target proteins with outstanding Bit Score in the example for query WP_148290433.1:; WP_004066529.1 (bit score: 323, previous hit: 94); WP_004069050.1 (bit score: 207, previous hit: 53 ). ## Steps to Reproduce (for bugs). Please run this script for example (comparing Thermococcus litoralis and Pyrococcus furiosus proteins, using 3 iterations); #download protein files; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:27,perform,performing,27,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['perform'],['performing']
Performance,"## Expected Behavior; Whether the option `--k-score 'seq:96,prof:80'` is passed to search or `--k-score seq:96,prof:80`,; `--k-score seq:96,prof:80` is passed internally to prefilter.; ## Current Behavior; When `--k-score 'seq:96,prof:80'` is passed to `mmseqs search`, `--k-score seq:2147483647,prof:2147483647` is passed to prefilter,; and when `--k-score seq:96,prof:80` is passed, `--k-score seq:96,prof:80` is passed.; ## Steps to Reproduce (for bugs); ```; export MMSEQS_CALL_DEPTH=1; SEARCH_PARAM=""--num-iterations 3 --db-load-mode 0 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000""; # or; SEARCH_PARAM=""--num-iterations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000"". mmseqs search ""${BASE}/qdb"" ""${DB1}"" ""${BASE}/res"" ""${BASE}/tmp1"" $SEARCH_PARAM; ```; ## MMseqs Output (for bugs); ### With single-quotation; ```; createdb input.fasta input_script7/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 31ms; Time for merging to qdb: 0h 0m 0s 31ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 145ms; Create directory input_script7/tmp1; search input_script7/qdb uniref30_2302_db input_script7/res input_script7/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000 ; prefilter input_script7/qdb uniref30_2302_db.idx input_script7/tmp1/1006494840762416450/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/759:529,load,load-mode,529,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/759,2,['load'],['load-mode']
Performance,"## Expected Behavior; `mmseqs expandaln` to complete successfully. ## Current Behavior; `mmseqs expandaln` throws this error:. ```; Invalid database read for database data file=/home/user/project/target_DB/target_DB.idx, database index=/home/user/project/target_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. ## Steps to Reproduce (for bugs); All these commands are executed when i run `colabfold_search` and fails on `expandaln`. ```; createdb result_20230419_115721/query.fas result_20230419_115721/qdb --shuffle 0. search result_20230419_115721/qdb /home/user/project/target_DB/target_DB result_20230419_115721/res result_20230419_115721/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:712,load,load-mode,712,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance,"## Intention; I am trying perform an exhaustive all against all search of a large database with sensitivity similar to blast. The database contains approximately 73,000 sequences with an average length around 300 amino acids. Process is killed while reading results with the error swapresults died. . On Linux mint and using MMseqs2 Release 15-6f452. ## output; cahoonlab@lagbb-bcecmint:~$ mmseqs search Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 alnment/alignment tmp --exhaustive-search -s 8; search Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 alnment/alignment tmp --exhaustive-search -s 8 . MMseqs Version: 	78ae2c5b8dba889079745e8013deeb30c3ac8a1a; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	8; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; S",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:26,perform,perform,26,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['perform'],['perform']
Performance,"## Steps to Reproduce (for bugs); All these commands are executed when i run `colabfold_search` and fails on `expandaln`. ```; createdb result_20230419_115721/query.fas result_20230419_115721/qdb --shuffle 0. search result_20230419_115721/qdb /home/user/project/target_DB/target_DB result_20230419_115721/res result_20230419_115721/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:1369,load,load-mode,1369,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance,"##Command; mmseqs createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nr.fna.taxidmapping. ## Current Behavior; Create directory tmp; createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file ../../taxdb/nr.fna.taxidmapping. MMseqs Version: 5daca424b162cc5fdf0b9cd151aebed86975cbf6; NCBI tax dump directory taxonomy/; Taxonomy mapping file ../../taxdb/nr.fna.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 12; Verbosity 3. Loading nodes file ... Done, got 2317712 nodes; Loading merged file ... Done, added 62177 merged nodes.; Loading names file ... Done; Init RMQ ...Done; tmp/createindex.sh: line 102: 25801 Killed awk 'NR == FNR { f[$1] = $2; next } $2 in f { print $1""\t""f[$2] }' ""$MAPPINGFILE"" ""${TAXDBNAME}.lookup"" > ""${TAXDBNAME}_mapping""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/431:473,Load,Loading,473,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/431,3,['Load'],['Loading']
Performance,"'489!@!@1075807****147549'`. ## Current Behavior. The first two commands result in two different databases:. `wc -l test1`; 15447 test1. `wc -l test2`; 32 test2. The third command runs without issuing any warning (it effectively does nothing to the database). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1. Download a small NCBI-like taxonomy database **swissProtSomeClasses** from [here](https://github.com/soedinglab/metaeuk-regression/tree/master/sacc_tax); 2. Run the commands above. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you exper",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/320:1375,Load,Loading,1375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320,2,['Load'],['Loading']
Performance,"(step 1 of 1); Query db start 1 to 20942; Target db start 1 to 20942; [=================================================================] 20.94K 0s 928ms. 1.256278 k-mers per position; 118 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 8 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 51ms; Time for processing: 0h 0m 6s 669ms; align ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/pref_step0 ./mmseqs_output/tmp/5351426679731834765/aln_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 20942 type: Aminoacid; Target database size: 20942 type: Aminoacid; Calculation of alignments; [=================================================================] 20.94K 15s 380ms; Time for merging to aln_step0: 0h 0m 0s 75ms; 172065 alignments calculated; 67554 sequence pairs passed the thresholds (0.392607 of overall calculated); 3.225766 hits per query sequence; Time for processing: 0h 0m 16s 166ms; clust ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/aln_step0 ./mmseqs_output/tmp/5351426679731834765/clu_step0 --clust",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:21624,load,load-mode,21624,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 23ms; [==========================================================> ] 89.54% 138 eta 0s; 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 795ms; align clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/pref_step0 clu/sim2_tmp/12164117771218227067/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 46ms; Time for merging to aln_step0: 0h 0m 0s 4ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 72ms; clust clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/aln_step0 clu/sim2_tmp/12164117771218227067/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=====",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:30041,load,load-mode,30041,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,* Modified workflow shell scripts to remove hash-named temporary directory ~and symbolic link~ (revoked considering concurrent modification issue),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/555:116,concurren,concurrent,116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/555,1,['concurren'],['concurrent']
Performance,* Modified workflow source codes to assign `latest` symbolic link to variable `$LATEST`; * Modified workflow shell scripts to remove hash-named temporary directory ~and symbolic link~ (concurrent modification issue),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/551:185,concurren,concurrent,185,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/551,1,['concurren'],['concurrent']
Performance,"*Sorry if this is not the correct place to ask!* ; ; I want to use MMseqs2 to find diverse homolgous sequences on which I can then run global MSA alignment. ; I have a bunch of questions after experimenting a bit. ; ; 1. What is the correct way to filter search results? When using 'mmseqs search', why don't the profile filtering options such as --diff or --max-seq-id etc. get applied? ; I'm running: ; `SEARCH_PAR=""--db-load-mode 2 --num-iterations 3 --sort-results 1 -e 0.001 --filter-msa 1 -c 0.75 --cov-mode 2 --max-seq-id 0.9""` ; `mmseqs search queryDB targetDB result_alnDB tmp ${SEARCH_PAR}` ; result_alnDB contains sequences above 0.9 sequence identity to the query. ; To apply filtering I run mmseqs filterresult after my search: ; `mmseqs filterresult queryDB targetDB result_alnDB filtered_alnDB tmp --max-seq-id 0.9` ; ; 2. How does the --diff flag work? The help says it selects the n most diverse sequences in blocks of 50. I would expect --diff 50 to not apply any filtering. ; ; 3. What score does the --qsc flag work on? What does the score range [-50.0,100.0] mean? ; ; 4. What does applying filter buckets with the --qid flag do? I would expect it to return an equal number of hits per bucket. ; ; After searching (and filtering results) I would like to return an unaligned fasta file. ; I do this with: ; `mmseqs createseqfiledb targetDB result_alnDB fastaDB` ; `mmseqs result2flat targetDB targetDB fastaDB fasta_results.fa --use-fasta-header 1`; I subsequently split that file whenever two consecutive lines begin with '^>'. ; ; 5. Why does createseqfiledb create files ending in 0-95 ? How do they belong together? ; ; 6. I originally expect to return fasta output with convert2fasta but that module complains that it needs header information. Running createsubdb before that only returns the representative sequences instead of all results. ; ; 7. Is there a way to add the original query sequence to my fasta output in mmseqs? ; ; Thanks for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/642:423,load,load-mode,423,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/642,1,['load'],['load-mode']
Performance,", so I think this is the place to ask. Unexpected observations:. 1. running mmseqs locally on our cluster is much slower than the responses we get from the colabfold server for equivalent inputs; 2. mmseqs search speed does not scale at all with added threads or added physical cores, for small inputs (1-2 sequences) - is this expected? Will it only speed up with large input count?. Welcoming any input! Many thanks!. ## Expected Behavior; Runtime of mmseqs2 for a given input similar to response time from the colabfold server. ## Current Behavior; Considerably slower. For a given input (~250 aa) the server gives a full result in 20-30s, paired + unpaired reads (so, including at least 1 search each against uniref30 and colabfold_envdb, plus a number of expandaln / align calls).; The local version takes 60-90 seconds to run just the initial mmseqs search against uniref30, when using vmtouch and db load mode 2, and ~300 seconds against colabfold_envdb. Db load mode 3 somewhat slower, db load mode 0 and 1 much slower as expected.; Index was created without splits. The mmseqs search step is timed after vmtouch and other preparations are complete. The runtime is independent of either thread count or number of cpus provided.; Splitting the target db index 2 4 8 or 16-fold and running in parallel with MPI does not speed it up either (slightly slows down). Placing the entire run directory fast SSD or RAM (/dev/shm) does not change the speed.; This happens with the docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLTWQGLIVPDNPPYDKGAFRIEINFPAEYPFKPPKITFKTKIYHPNIDEKGQVCLPVISAENWKPATKTDQVIQSLIALVNDPQPEHPLRADLAEEYSKDRKKFCKNAEEFTKKYGEKRPVD; >Ub; MQIFVKTLTGKTITL",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:1108,load,load,1108,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,2,['load'],['load']
Performance,", using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 2.0. Query database size: 960 type: Nucleotide; Estimated memory consumption: 1T; Target database size: 26422067 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [> ] 0.00% 1 eta -. tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statica",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/697:2493,load,load-mode,2493,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697,1,['load'],['load-mode']
Performance,"- [x] needs a git submodule of https://github.com/nemequ/simde/ or cmake magic to pull that down; - [x] isnan on clang 10 https://github.com/nemequ/simde/issues/282; - [x] ISO C++ does not allow C99 designated initializers https://github.com/nemequ/simde/issues/287; - [x] ISO C++ forbids compound-literals https://github.com/nemequ/simde/issues/288; - [x] macOS clang, AppleClang 11.0.0.11000033, [has a weird compile error](https://dev.azure.com/themartinsteinegger/edc8daa1-9e01-4171-b135-27e374460be3/_apis/build/builds/592/logs/23) Fixed by upgrading to macOS 11.05 AppleClang 11.0.3.11030032; - [x] GCC+ASan crashes with an [internal error somewhere completely random](https://dev.azure.com/themartinsteinegger/mmseqs2/_build/results?buildId=609&view=logs&j=ab24d926-1cfd-5268-5232-547307163af3&t=f30e022a-6aef-58fb-62a5-07e89b64b206&l=749) https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=961011; - [x] arm64 performance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309:917,perform,performance,917,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309,1,['perform'],['performance']
Performance,"- adds module taxonomyreport for Kraken-style taxonomy report; - add parameter --taxLineage to par.lca for lca, taxonomy and addtaxonomy. Currently this means there is a variable number of fields in the output, which isn't optimal; - refactored NcbiTaxonomy:; - does not load delnodes.dmp anymore. When a taxon that was seen in a report is not in the taxDB, it could be either through ; - get rid of two maps; instead D is vector mapping TaxID to internal ID; - use TaxID type to better distinguish interal IDs and taxIDs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/197:271,load,load,271,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/197,1,['load'],['load']
Performance,"--ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 ; [=================================================================] 292.14M 2m 8s 805ms; Time for merging to pref_rescore1: 0h 2m 40s 361ms; Time for processing: 0h 5m 54s 815ms; clust /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 96 --compressed 0 -v 3 ; Clustering mode: Greedy; Total time: 0h 1m 7s 208ms; Size of the sequence database: 292137902; Size of the alignment database: 292137902; Number of clusters: 245753321; Writing results 0h 1m 30s 550ms; Time for merging to pre_clust: 0h 1m 31s 28ms; Time for processing: 0h 5m 19s 116ms; createsubdb /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/order_redundancy /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/input",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:3243,load,load-mode,3243,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,1,['load'],['load-mode']
Performance,"--reverse-frames 1 --threads 8 --compressed 0 -v 3 ; ; =[===============================================================] 10 0s 1ms; =Time for merging into tmp/274686171214568767/query_seqs_h by mergeResults: 0h 0m 0s 0ms; Time for merging into tmp/274686171214568767/query_seqs by mergeResults: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 6ms; splitsequence tmp/274686171214568767/query_seqs tmp/274686171214568767/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --threads 8 --compressed 0 -v 3 ; ; Time for processing: 0h 0m 0s 1ms; prefilter tmp/274686171214568767/query_seqs_split tmp/274686171214568767/target_seqs_split tmp/274686171214568767/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 4G -c 0.99 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 2.0 ; ; Query database size: 20 type: Nucleotide; Error: Prefilter died; Error: Search step died. Command error:; Cannot fit databased into 4G. Please use a computer with more main memory.; ```. fasta file content is:; ```; >1; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >2; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >3; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATTTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >4; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATGTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >5; CCATGCGTAGAGCTAACGAGCCAGCGGAAAGCGTGAGGCGCTTTTAAGCATGGCGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTAGGTTCG; >6; CCATGCGTAGAGCTTACGAGCCAGCGGAAAGCGTGAGGCGCTATTAAGCATGGGGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTACGTTCG; >7",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/253:3328,load,load-mode,3328,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253,1,['load'],['load-mode']
Performance,"--use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | [=================================================================] 1 0s 5ms; mmseqs-web-worker_1 | Time for merging to q_orfs_aa_h: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for merging to q_orfs_aa: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 6ms; mmseqs-web-worker_1 | prefilter /opt/mmseqs-web/jobs/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g/tmp/5203697948948418300/search_tmp/10674843733463968173/q_orfs_aa /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g/tmp/5203697948948418300/search_tmp/10674843733463968173/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 5.7 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: VTML80.out; mmseqs-web-worker_1 | Query database size: 0 type: Aminoacid; mmseqs-web-worker_1 | split was set to 1 but the db to split has only 0 sequences. Please run with default paramerters; mmseqs-web-worker_1 | Error: Prefilter died; mmseqs-web-worker_1 | Error: Search step died; mmseqs-web-worker_1 | Error: Search died; mmseqs-web-worker_1 | 2022/09/22 23:04:37 Execution Error: exit status 1; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:04:38 +0000] ""GET /ticket/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g HTTP/1.0"" 200 65; ```. This is the healthy state:; ```; mmseqs-web-api_1 | 172.17.0.4 - - [22/Se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:19726,load,load-mode,19726,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['load'],['load-mode']
Performance,"-comparable across result blocks. There can be huge jumps in E-value (and bit score) as we walk down on the list of targets for a query protein. Target proteins with outstanding Bit Score in the example for query WP_148290433.1:; WP_004066529.1 (bit score: 323, previous hit: 94); WP_004069050.1 (bit score: 207, previous hit: 53 ). ## Steps to Reproduce (for bugs). Please run this script for example (comparing Thermococcus litoralis and Pyrococcus furiosus proteins, using 3 iterations); #download protein files; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:1447,perform,perform,1447,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['perform'],['perform']
Performance,"-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/1646423069375616632",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:2863,load,load-mode,2863,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance,"-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1831648 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 1.83M 2m 36s 559ms. Adjusted k-mer length 17; Sort kmer 0h 0m 33s 753ms; Sort by rep. sequence 0h 0m 2s 503ms; Time for fill: 0h 0m 4s 992ms; Time for merging to pref: 0h 0m 0s 10ms; Time for processing: 0h 4m 21s 927ms; rescorediagonal 1831648_seqs.mmseqs2db 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref tmp/16479300059278292880/linclust/10067396915876818640/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.85 -a 0 --cov-mode 0 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 112 --compressed 0 -v 3 . [=================================================================] 1.83M 10s 370ms; Time for merging to pref_rescore1: 0h 0m 0s 781ms; Time for processing: 0h 0m 21s 118ms; clust 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref_rescore1 tmp/16479300059278292880/linclust/10067396915876818640/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Set Cover; [=================================================================] 1.83M 0s 184ms; Sort entries; Find missing connections; Found 1239487 new connections.; Reconstruct initial order; [=================================================================] 1.83M 0s 214ms; Add missing connections; [=================================================================] 1.83M 0s 85ms. Time for read in: 0h 0m 1s 30ms; Total time: 0h 0m 1s 209ms. Size of th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:5486,load,load-mode,5486,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['load'],['load-mode']
Performance,". You can use gist.github.com for large output. ## Context; I am getting error when running ; mmseqs search mmseqs_U90_out/mmseqs-81_queryDB ../MH2_mappingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $conda create --prefix /project/winter_pea_endophytes_2022/MMseqs; $source activate /project/winter_pea_endophytes_2022/MMseqs; $conda install -c conda-forge -c bioconda mmseqs2; and run it as environment; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/689:1290,load,load-mode,1290,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689,1,['load'],['load-mode']
Performance,.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## conda info. ```; active environment : plass; active env location : /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass; shell level : 1; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.5.11; conda-build version : 3.11.0; python version : 3.6.5.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://repo.anaconda.com/pkgs/pro/linux-64; https://repo.anaconda.com/pkgs/pro/noarch; https://conda.anaconda.org/leylabmpi/linux-64; https://conda.anaconda.org/leylabmpi/noarch; https://conda.anaconda.org/r/linux-64; https://conda.anaconda.org/r/noarch; https://conda.anaconda.org/qiime2/linux-64; https://conda.anaconda.org/qiime2/noarch; package cache : /ebio/abt3_projects/software/dev/miniconda3_dev/pkgs; /ebio/abt3/nyoungblut/.conda/pkgs; envs directories : /ebio/abt3_projects/software/dev/miniconda3_dev/envs; /ebio/abt3/nyoungblut/.conda/envs; platform : linux-64; user-agent : conda/4.5.11 requests/2.18.4 CPython/3.6.5 Linux/4.9.127 ubuntu/18.04 glibc/2.27; UID:GID : 6354:350; netrc file : None; offline mode : False; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:7095,cache,cache,7095,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['cache'],['cache']
Performance,".6,0.8,1.0 --qsc 0 --max-seq-id 0.95""; EXPAND_PARAM=""--expansion-mode 0 -e ${EXPAND_EVAL} --expand-filter-clusters ${FILTER} --max-seq-id 0.95""; mkdir -p ""${BASE}""; mkdir -p ""${BASE}""; ""${MMSEQS}"" createdb ""${QUERY}"" ""${BASE}/qdb""; ""${MMSEQS}"" search ""${BASE}/qdb"" ""${DB1}"" ""${BASE}/res"" ""${BASE}/tmp1"" $SEARCH_PARAM; ""${MMSEQS}"" mvdb ""${BASE}/tmp1/latest/profile_1"" ""${BASE}/prof_res""; ""${MMSEQS}"" lndb ""${BASE}/qdb_h"" ""${BASE}/prof_res_h""; **mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124** ; # I got stucked at the above command. **next I am gonna do** ; ""${MMSEQS}"" align ""${BASE}/prof_res"" ""${DB1}.idx"" ""${BASE}/res_exp"" ""${BASE}/res_exp_realign"" --db-load-mode 2 -e ${ALIGN_EVAL} --max-accept ${MAX_ACCEPT} --alt-ali 10 -a; ""${MMSEQS}"" filterresult ""${BASE}/qdb"" ""${DB1}.idx"" ""${BASE}/res_exp_realign"" ""${BASE}/res_exp_realign_filter"" --db-load-mode 2 --qid 0 --qsc $QSC --diff 0 --max-seq-id 1.0 --filter-min-enable 100. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; $ time mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124; expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124 . MMseqs Version: 	GITDIR-NOTFOUND; Expansion mode 	0; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Max sequence length 	65535; Score bias 	0; Compositional bias 	1; Compositional bias 	1; E-value threshold 	inf; Seq. id. threshold 	0; Coverage threshold 	0; Coverage mode 	0; Pseud",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:2375,load,load-mode,2375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['load'],['load-mode']
Performance,".; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-cond",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:34846,Load,Loaded,34846,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,".done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/lib",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:34183,Load,Loaded,34183,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,".out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 35.67M 9s 733ms; Time for merging to pref_rescore2: 0h 0m 12s 355ms; Time for processing: 0h 0m 38s 935ms; align All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore2 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 56 --compressed 0 -v 3 . Compute score and coverage; Query database size: 35665237 type: Aminoacid; Target database size: 35665237 type: Aminoacid; Calculation of alignments; [=================================================================] 35.67M 7m 56s 191ms; Time for merging to aln: 0h 0m 12s 23ms; 118495359 alignments calculated; 45078108 sequence pairs passed the thresholds (0.380421 of overall calculated); 1.263923 hits per query sequence; Time for processing: 0h 8m 32s 609ms; clust All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/aln All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/clust --cluster-mode 2 --max-iterations 1000 --simil",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:9239,load,load-mode,9239,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['load'],['load-mode']
Performance,"/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 15.11M 1s 487ms; Time for merging to pref_count.tsv: 0h 0m 4s 788ms; Time for processing: 0h 0m 11s 535ms; align /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 15106287 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.11M 1h 57m 11s 538ms; Time for merging to aln: 0h 0m 19s 511ms. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:11519,load,load-mode,11519,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['load'],['load-mode']
Performance,"/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration step might appear well superior to a target found in the first iteration. See target WP_004066529.1 and WP_084684326.1 for query WP_148290433.1 as examples. Other ""goodness of alignment"", confirms that target from the first search iteration is indeed better thus bit score from the profile search iteration might be biased (overestimated). It would be important to rank all hits of a query based on a globally valid",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:2216,perform,perform,2216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['perform'],['perform']
Performance,"/ephemeral//9711778946736545179/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 6 0s 21ms; Time for merging to orfs_aa_h: 0h 0m 0s 276ms; Time for merging to orfs_aa: 0h 0m 0s 415ms; Time for processing: 0h 0m 1s 438ms; prefilter /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_aa ../../../../resources/GTDB/mmseqs_gtdb/GTDB /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 5696 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 124G; Target database size: 106052079 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 35.35M 7m 55s 640ms; Index table: Masked residues: 89908004; Index table: fill; [===> ] 5.00% 1.77M eta 4h 48m 2s; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 13.45111; * Which MMseqs version was used (Statically-compiled, self-compi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/479:4275,load,load-mode,4275,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479,1,['load'],['load-mode']
Performance,"/mmseqs...(no debugging symbols found)...done.; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:33699,Load,Loaded,33699,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,"/mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned -v 3 . Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 28ms; createsubdb ./mmseqs_output/tmp/5351426679731834765/clu ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/seq_seeds -v 3 . Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 16ms; prefilter ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned ./mmseqs_output/tmp/5351426679731834765/seq_seeds.merged ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 26229 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 34414 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 34.41K 1s 394ms; Index table: Masked residues: 8741; Index table: fill; [=================================================================] 34.41K 1s 378ms; Index statistics; Entries: 6295744; DB size: 524 MB; Avg k-mer size: 0.098371; Top 10 k-mers; DVLDMP 2320; PDVMRM 1368; DRQVAY 1181; PFPEAR 738; MPLGAT 728; MPMGAT 703; GQQVAR 620; ADYTFS 597; LTFLYV 568; VLLALS 518; Time for index table init: 0h 0m 4s 142ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 26229; Target",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:37975,load,load-mode,37975,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"/pref_filter2 --filter-file /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/order_redundancy --threads 8 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 11.80K 0s 11ms ; Time for merging to pref_filter2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 19ms; rescorediagonal /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_filter2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 8 --compressed 0 -v 3 . Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 11.80K 0s 9ms ; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 23ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:10460,load,load-mode,10460,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"0 -c 0 --max-seq-len 65535 --pick-n-sim-kmer 1 --split-memory-limit 0 --threads 64 --compressed 0 -v 3 . Estimated memory consumption 4 MB; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Process file into 1 parts; Generate k-mers list 0; [=================================================================] 14.93K 0s 32ms. Time for fill: 0h 0m 0s 35ms; Sort kmer ... Time for sort: 0h 0m 0s 39ms; Time to find k-mers: 0h 0m 0s 608ms; Time to sort: 0h 0m 0s 0ms; Time for merging into tmp/2730103712073724212/search/pref by mergeResults: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 729ms; rescorediagonal /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/pref tmp/2730103712073724212/search/reverse_ungapaln --sub-mat nucl:nucleotide.out; ,aa:blosum62.out --rescore-mode 2 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed; 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; [=================================================================] 323 0s 253ms; Time for merging into tmp/2730103712073724212/search/reverse_ungapaln by mergeResults: 0h 0m 0s 177ms; Time for processing: 0h 0m 0s 855ms; filterdb tmp/2730103712073724212/search/pref tmp/2730103712073724212/search/pref_filter --filter-file tmp/2730103712073724212/search/reverse_ungapaln --positive-filter 0 . Filtering with filter files.; [=================================================================] 323 0s 12ms; Time for merging into tmp/2730103712073724212/search/pref_filter by mergeResults: 0h 0m 0s 171ms; Time for processing: 0h 0m 0s 397ms; align /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/pref_filter tmp/2730103712073724212/search/reverse_aln --sub-mat nucl:nucleotide.out,aa:blos; um62.out ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:3687,load,load-mode,3687,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,1,['load'],['load-mode']
Performance,"0 sequences passed prefiltering per query sequence; mmseqs-web-worker_1 | 0 median result list length; mmseqs-web-worker_1 | 2 sequences with 0 size result lists; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Time for prefiltering scores calculation: 0h 0m 0s 1ms; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 2ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/search/pref_0 /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/aln --sub-mat blosum62.out -a 1 --alignment-mode 3 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Compute score, coverage and sequence identity; mmseqs-web-worker_1 | Query database size: 2 type: Nucleotide; mmseqs-web-worker_1 | Target database size: 117752 type: Nucleotide; mmseqs-web-worker_1 | Calculation of alignments; [=================================================================] 100.00% 0.02 0s 0ms ] 0.00% 0.01 eta -; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | 0 alignments calculated.; mmseqs-web-worker_1 | 0 sequence pairs passed the thresholds (-nan of overall calculated).; mmseqs-web-worker_1 | 0.00000",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:9513,load,load-mode,9513,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['load'],['load-mode']
Performance,"073724212/q_orfs_aa tmp/2730103712073724212/search/reverse_aln tmp/2730103712073724212/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out ; -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing offsets.; [=================================================================] 323 0s 3ms. Reading results.; [=================================================================] 323 0s 0ms. Output database: tmp/2730103712073724212/aln; [=================================================================] 14.93K 0s 154ms. Time for merging into tmp/2730103712073724212/aln by mergeResults: 0h 0m 0s 147ms; Time for processing: 0h 0m 0s 394ms; offsetalignment queryDB tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/aln resultDB --chain-alignments 0; --merge-query 1 --search-type 0 --threads 64 --compressed 0 --db-load-mode 0 -v 3 ; Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 2ms; Writing results to: resultDB; ==[===============================================================] 101 0s 3ms. Time for merging into resultDB by mergeResults: 0h 0m 0s 169ms; Time for processing: 0h 0m 1s 64ms; convertalis queryDB /bighub/hub/DB/mmseq_swissprot/swissprot resultDB resultDB.m8 . MMseqs Version: 	10.6d92c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Translation table 	1; Gap open cost 	11; Gap extension cost 	1; Database output 	false; Preload mode 	0; Search type 	0; Threads 	64; Compressed 	0; Verbosity 	3. [=================================================================] 101 0s 8ms; Time for merging into res",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:6676,load,load-mode,6676,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,1,['load'],['load-mode']
Performance,"0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:18881,load,load-mode,18881,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"0; Split mode 	2; Split Memory Limit 	1000000; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path 	/scratch/saladi1/22776241/; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Force restart using the latest tmp 	false; Remove Temporary Files 	true. prefilter euk_screen/screenDB uref_euk85_rep/uref_euk85_rep mmtemp/150669805093381426/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 1000000 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --local-tmp /scratch/saladi1/22776241/ --threads 64 --compressed 0 -v 3 -s 5.7. Using 64 threads.; Can not fit databased into 1024000000 byte. Please use a computer with more main memory.; Error: Prefilter died; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/193:4221,load,load-mode,4221,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193,1,['load'],['load-mode']
Performance,"0m 7s 71ms; Generate k-mers list for 16 split; [=================================================================] 2.20B 35m 20s 821ms; Sort kmer 0h 0m 27s 251ms; Sort by rep. sequence 0h 0m 4s 12ms; Generate k-mers list for 17 split; [=================================================================] 2.20B 39m 55s 45ms; Sort kmer 0h 0m 4s 162ms; Sort by rep. sequence 0h 0m 0s 40ms; Merge splits ... Time for fill: 0h 58m 23s 248ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 10h 8m 58s 194ms; rescorediagonal /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.75 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . Can not touch 293012172012 into main memory; [=================================================================] 2.20B 14h 48m 14s 895ms; Time for merging to pref_rescore1: 0h 21m 28s 875ms; Time for processing: 15h 32m 14s 793ms; Error: Pre-clustering step died; ```; And when I rerun my job I have : ; ```; linclust /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB_clu /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp --min-seq-id 0.75 --threads 20 -v 3 --force-reuse 1 --split-memory-limit 62G . MMseqs Version: 	f5f780acd64482cd59b46eae0a107f763cd17b4d; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	20; Compressed 	0; Verbosity 	3; Weight file name 	; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:7354,load,load-mode,7354,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['load'],['load-mode']
Performance,"0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 16ms; Create directory /tmp/mydir/7574787915800795625/clu_tmp; cluster /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1 . Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:4491,load,load-mode,4491,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"10729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/team.c:124; #5 0x00002aefd1060dc5 in start_thread (arg=0x2aefd1c45700) at pthread_create.c:308; #6 0x00002aefd136bced in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:113; ```. ### Last files to be created in temp directory:; ```; ls -lh /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/; total 506G; -rwx------ 1 dportik Domain Users 4.0K Mar 9 20:15 blastp.sh; -rw-r--r-- 1 dportik Domain Users 8.4G Mar 10 02:59 pref_0.0; -rw-r--r-- 1 dportik Domain Users 7.9G Mar 10 02:59 pref_0.1; -rw-r--r-- 1 dportik Domain Users 14G Mar 10 03:00 pref_0.10; -rw-r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:35973,optimiz,optimized,35973,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['optimiz'],['optimized']
Performance,"11215513/q_orfs_aa; --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 48. [=================================================================] 3.22M 2s 59ms; Time for merging files: 0h 0m 3s 83ms; Time for processing: 0h 0m 6s 661ms; prefilter /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa /mnt/lustre/scratch/aauladell/databases/unirefdb/unirefDB /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14; 502658769203238512/tmp_hsp1/3393216153911215513/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c; 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 48 --compressed 0 -v 3 -s; 5.7. Using 48 threads.; Query database size: 3215536 type: Aminoacid; Estimated memory consumption: 437G; Target database size: 99657864 type: Aminoacid; Process prefiltering step 1 of 1. Index table k-mer threshold: 122 at k-mer size 7; Index table: counting k-mers; [=================================================================] 99.66M 6m 33s 605ms; Index table: Masked residues: 620383436; Index table: fill; [==; ```. ## Context; From a selection of 300.000 small sequences, I intended to perform the taxonomy using UNIREF90. But it crashes each time even though the database should be able to be used for this kind of analysis. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 15c7762; * Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported, 750 Gb, 48 processors.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/232:3237,perform,perform,3237,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232,1,['perform'],['perform']
Performance,"1245249296443/pref experiments/tmp//6404161245249296443/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 6ms; filterdb experiments/tmp//6404161245249296443/pref_filter1 experiments/tmp//6404161245249296443/pref_filter2 --filter-file experiments/tmp//6404161245249296443/order_redundancy . Filtering using file(s); [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_filter2: 0h 0m 0s 21ms; Time for processing: 0h 0m 0s 56ms; rescorediagonal experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_filter2 experiments/tmp//6404161245249296443/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_rescore2: 0h 0m 0s 19ms=================>] 99.48% 24.47K eta 0s ; Time for processing: 0h 0m 0s 59ms; align experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_rescore2 experiments/tmp//6404161245249296443/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 12 --compressed 0 -v 3 . Compute score and coverage; Query database size: 24598 type: Aminoacid; Target databas",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:8537,load,load-mode,8537,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['load'],['load-mode']
Performance,"12s 709ms; splitsequence tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 838.53K 0s 149ms; Time for merging to query_seqs_split_h: 0h 0m 0s 459ms; Time for merging to query_seqs_split: 0h 0m 0s 859ms; Time for processing: 0h 0m 2s 893ms; prefilter tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 5.7 . Query database size: 882920 type: Nucleotide; Estimated memory consumption: 29G; Target database size: 311921 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 311.92K 32s 895ms; Index table: Masked residues: 15323340; Index table: fill; [=================================================================] 311.92K 36s 224ms; Index statistics; Entries: 3056373344; DB size: 25680 MB; Avg k-mer size: 2.846469; Top 10 k-mers; CTGTTTTGTACCTTA	9174; GCCTTCCTATTTTAT	6337; CCGAACAGACTGTCG	6287; ATCGACAAGCGAGCG	6217; CCTGCCTGTTGTATC	6097; TGTTCGGCTCGCTGT	6079; CGCGCAGTCAATAGG	5996; ACAAATCAGAGCGCG	5947; TGCGTTCGCGTTCTG	5935; GATACAAAATGCAGG	5935; Time for index table init: 0h ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339:6791,load,load-mode,6791,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339,1,['load'],['load-mode']
Performance,"138406286044646862/aln_0 tmp/16138406286044646862/aln_1 --compressed 0 -v 3 . Merging the results to tmp/16138406286044646862/aln_merge_new; Time for merging to aln_merge_new: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17ms; rmdb tmp/16138406286044646862/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; mvdb tmp/16138406286044646862/aln_merge_new tmp/16138406286044646862/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; createsubdb tmp/16138406286044646862/order_1 tmp/16138406286044646862/input_0 tmp/16138406286044646862/input_1 -v 3 --subdb-mode 1 . Time for merging to input_1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 6ms; prefilter tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 12.0 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 7780 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 56; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 7780; Target db start 1 to 756891; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:10627,load,load-mode,10627,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['load'],['load-mode']
Performance,"16803073/tmp_hsp1; search tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/orfs_aa databases/uniprotkb tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/tmp_taxonomy/15848989983316803073/first tmp/6713; 332935333060100/taxonomy_tmp/9923875229524867748/tmp_taxonomy/15848989983316803073/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 32 -s 2 --split-memory-limit 200G --sp; aced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --remove-tmp-files 1 . prefilter tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/orfs_aa databases/uniprotkb tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/tmp_taxonomy/15848989983316803073/tmp_hsp1/68; 53721603621777485/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-; seqs 300 --split 0 --split-mode 2 --split-memory-limit 200G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-se; lf-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0 . Query database size: 1599064123 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 163G; Target database size: 231921744 type: Aminoacid; Process prefiltering step 1 of 6; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.41M 2m 12s 304ms; Index table: Masked residues: 221272222; Index table: fill; [=================================================================] 38.41M 3m 45s 787ms; Index statistics; Entries: 11399442350; DB size: 74993 MB; Avg k-mer size: 8.905814; Top 10 k-mers; FSHAGSI 272598; AFMFFMP 260790; AFRNNFW 259163; RMNSFLP 218177; NNSWLPS 215496; AHFMIMV 211691; MPMGGNW 204521; TMLDRNT 168603; TGTYPSS 159040; GDQY",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/577:21679,load,load-mode,21679,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577,1,['load'],['load-mode']
Performance,"17949317426677965256/aln_ungapped tmp97/17949317426677965256/pref_subtract --threads 20 --compressed 0 -v 3. subtractdbs tmp97/17949317426677965256/pref tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/pref_subtract --threads 20 --compressed 0 -v 3. Remove tmp97/17949317426677965256/aln_ungapped ids from tmp97/17949317426677965256/pref; [=================================================================] 100.00% 39.65K 0s 144ms; Time for merging to pref_subtract: 0h 0m 0s 168ms; Time for processing: 0h 0m 0s 503ms; align tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/pref_subtract tmp97/17949317426677965256/aln_gapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 20 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 39650 type: Nucleotide; Target database size: 19825 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 39.65K 11s 920ms; Time for merging to aln_gapped: 0h 1m 40s 131ms; 2105218 alignments calculated; 1620 sequence pairs passed the thresholds (0.000770 of overall calculated); 0.040858 hits per query sequence; Time for processing: 0h 5m 12s 297ms; concatdbs tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/aln_gapped tmp97/17949317426677965256/aln --preserve-keys --take-larger-entry --thread",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:15920,load,load-mode,15920,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['load'],['load-mode']
Performance,"2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 95.29M 10m 53s 267ms; Time for merging to q_orfs_aa_h: 0h 14m 59s 800ms; Time for merging to q_orfs_aa: 0h 33m 4s 490ms; Time for processing: 1h 14m 4s 658ms; prefilter repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/q_orfs_aa databases/eggnog repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 5 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 300G -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 56 --compressed 0 -v 3 . Query database size: 1303062545 type: Aminoacid; Estimated memory consumption: 2G; Target database size: 349750 type: Profile; Index table k-mer threshold: 82 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 349.75K 1m 42s 520ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 349.75K 5m 18s 145ms; Index statistics; Entries: 14682023111; DB size: 84042 MB; Avg k-mer size: 3594.921651; Top 10 k-mers; PPPPW	38077; PPPWW	37617; PPWPP	34827; PPPGW	33942; WWWPP	33931; PPPDW	33516; PPWPW	33505; PPWRW	32205; PWPPW	31944; PPPQW	31811; Time for index table init: 0h 9m 20s 184ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 82; Starting prefiltering scores calculation (step 1 of 1); Query d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/594:17722,load,load-mode,17722,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594,1,['load'],['load-mode']
Performance,"21-03-10 at 12 16 09 PM](https://user-images.githubusercontent.com/14060382/110706285-7c9db380-81ac-11eb-8e42-efd46778a3ce.png). ### gdb output on an S status prefilter process:; ```; gdb -p 9878. Attaching to process 9878. warning: process 9878 is a cloned process; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/mmseqs...(no debugging symbols found)...done.; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:33375,Load,Loaded,33375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,"3 . Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 11.80K 0s 9ms ; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 23ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 11803 type: Aminoacid; Target database size: 11803 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 11.80K 1s 228ms ; Time for merging to aln: 0h 0m 0s 3ms; 15505 alignments calculated; 15076 sequence pairs passed the thresholds (0.972332 of overall calculated); 1.277302 hits per query sequence; Time for processing: 0h 0m 1s 238ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/li",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:11563,load,load-mode,11563,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"338. Writing results 0h 0m 0s 47ms; Time for merging to clu_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 815ms; createsubdb ./mmseqs_output/tmp/5351426679731834765/clu_step1 ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/input_step2 -v 3 --subdb-mode 1 . Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 8ms; prefilter ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 8338 type: Aminoacid; Estimated memory consumption: 1003M; Target database size: 8338 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 8.34K 0s 514ms; Index table: Masked residues: 3074; Index table: fill; [=================================================================] 8.34K 0s 572ms; Index statistics; Entries: 1408015; DB size: 496 MB; Avg k-mer size: 0.022000; Top 10 k-mers; GPGGTL 37; GLGNGK 26; ALGNGK 23; DLLDLP 21; FDDTDS 20; NGGSLK 17; DLLDMP 17; DVLDMP 17; GEQVAR 16; FDDTDT 16; Time for index table init: 0h 0m 2s 591ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8338; Target db start 1 to ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:28878,load,load-mode,28878,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"35 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 77298 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 77.30K 0s 41ms; Sort kmer 0h 0m 0s 46ms; Sort by rep. sequence 0h 0m 0s 22ms; Time for fill: 0h 0m 0s 11ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 225ms; rescorediagonal tmp/8115150149931881526/input tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 77.30K 0s 71ms; Time for merging to pref_rescore1: 0h 0m 0s 102ms; Time for processing: 0h 0m 0s 429ms; clust tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore1 tmp/8115150149931881526/clu_tmp/13790714163985984779/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 0s 91ms. Size of the sequence database: 77298; Size of the alignment database: 77298; Number of clusters: 31445. Writing results 0h 0m 0s 3ms; Time for merging to pre_clust: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 188ms; createsubdb tmp/8115150149931881526/clu_tmp/13790714163985984779/order_redundancy tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/input_step_redundancy -v 3 --subdb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:4746,load,load-mode,4746,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['load'],['load-mode']
Performance,"3734096903/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/input_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; summarizeresult tmp/15248047069833069253/result tmp/15248047069833069253/result_best -a 1 --overlap 0 -c 1 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to result_best: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 17ms; convertalis tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/result_best result.tsv --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to result.tsv: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 11ms; rmdb tmp/15248047069833069253/result_best -v 3 . Time for processing: 0h 0m 0s 2ms; rmdb tmp/15248047069833069253/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/target -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/target_h -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/query -v 3 . Time for processing: 0h 0m 0s 2ms; rmdb tmp/15248047069833069253/query_h -v 3 ; ```. </details>. ## Context; See above. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Wh",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:9248,load,load-mode,9248,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,1,['load'],['load-mode']
Performance,"3c971f71cfff3; Substitution Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Min. alignment length 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 4; Compressed 0; Verbosity 3; Seed Substitution Matrix PAM30.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner; Force restart using the latest tmp false; Remove Temporary Files false. Could not create symlink of tmp/5177011769629871693!. ## Context; Providing context helps us come up with a solution and improve our docu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/171:1504,perform,performs,1504,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/171,1,['perform'],['performs']
Performance,"3ms; createsubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 -v 3 --subdb-mode 1 . Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 6 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 5991 type: Aminoacid; Estimated memory consumption: 996M; Target database size: 5991 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 5.99K 0s 98ms ; Index table: Masked residues: 70106; Index table: fill; [=================================================================] 100.00% 5.99K 0s 74ms ; Index statistics; Entries: 2291730; DB size: 501 MB; Avg k-mer size: 0.035808; Top 10 k-mers; IHDKNI 27; LHDKNI 14; LGGFVY 14; GPGGTL 10; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; HVARAT 9; VHSGRT 9; Time for index table init: 0h 0m 0s 730ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 5991; Target db st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:26410,load,load-mode,26410,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"40770.1 0.369 0.989 0.967; XP_635472.2 XP_640770.1 0.524 0.987 0.813; XP_638978.1 XP_640770.1 0.311 0.988 0.978; XP_640255.1 XP_640770.1 0.479 0.989 0.978; XP_629182.1 XP_640770.1 0.468 0.989 0.978; XP_645001.1 XP_640770.1 0.441 0.989 0.978; XP_640768.1 XP_640770.1 0.547 1.000 1.000; XP_629181.1 XP_640770.1 0.485 0.989 0.978; XP_643412.2 XP_640770.1 0.523 0.979 0.989; XP_635471.1 XP_640770.1 0.542 0.987 0.813; XP_629090.1 XP_640770.1 0.487 1.000 0.967; XP_640770.1 XP_640770.1 0.605 1.000 1.000; XP_640770.1 XP_640989.2 0.541 0.989 0.940; XP_640770.1 XP_640994.1 0.537 0.989 0.939; XP_640770.1 XP_640768.1 0.513 1.000 1.000; XP_640770.1 XP_640766.1 0.520 0.989 0.990; XP_640770.1 XP_640764.1 0.531 0.989 0.938; XP_640770.1 XP_640763.1 0.532 0.989 0.935; XP_640770.1 XP_640792.1 0.504 0.989 0.989; ...; ... ## MMseqs Output (for bugs); Omitting the initial prefilering and providing one round of iterated profile based clustering output. . [-] Unloading mmseqs 2-13-45111-219-gaabc78c ; [+] Loading mmseqs 2-13-45111-219-gaabc78c ; result2profile euk72-90.profile euk72-90.consensus euk72-90.profile_search euk72-90.profile2 --threads 48 . MMseqs Version: 	aabc78c298f35cbc7a4136206c1a83adaa68695f; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; ; Profile E-value threshold 	0.001; Compositional bias 	1; Compositional bias 	1 ; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Pseudo count mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Preload mode 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Gap pseudo count 	10; Threads 	48; Compressed 	0; Verbosity 	3. Query database size: 1270615 type: Profile; Target database size: 1270615 type: Aminoacid; [==========================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:3895,Load,Loading,3895,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['Load'],['Loading']
Performance,"4163985984779/order_redundancy tmp/8115150149931881526/clu_tmp/13790714163985984779/pref tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 23ms; filterdb tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter1 tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter2 --filter-file tmp/8115150149931881526/clu_tmp/13790714163985984779/order_redundancy --threads 64 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 31.44K 0s 20ms; Time for merging to pref_filter2: 0h 0m 0s 88ms; Time for processing: 0h 0m 0s 360ms; rescorediagonal tmp/8115150149931881526/clu_tmp/13790714163985984779/input_step_redundancy tmp/8115150149931881526/clu_tmp/13790714163985984779/input_step_redundancy tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter2 tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [=========Error: Ungapped alignment step died; Error: Search died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): a14688744081c15439fa3092eec9dfd8be40440b; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Source install from github ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GNU Make 4.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): SSE4; * Operating system and version: gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:7127,load,load-mode,7127,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['load'],['load-mode']
Performance,427893312161071/search_tmp/7042327585447941378/search/input_0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/search/aln_merge -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | offsetalignment /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/aln /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 2 --compressed 0 --db-load-mode 2 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Computing ORF lookup; mmseqs-web-worker_1 | Computing contig offsets; mmseqs-web-worker_1 | Computing contig lookup; mmseqs-web-worker_1 | Time for contig lookup: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Writing results to: /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result; mmseqs-web-worker_1 | [==============================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:27865,load,load-mode,27865,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['load'],['load-mode']
Performance,"47483647 --max-accept 2; 147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Compute score and coverage; Query database size: 561568 type: Aminoacid; Target database size: 14926 type: Aminoacid; Calculation of alignments; [=================================================================] 323 0s 62ms; Time for merging into tmp/2730103712073724212/search/reverse_aln by mergeResults: 0h 0m 0s 109ms. 335 alignments calculated.; 323 sequence pairs passed the thresholds (0.964179 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 427ms; swapresults /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/reverse_aln tmp/2730103712073724212/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out ; -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing offsets.; [=================================================================] 323 0s 3ms. Reading results.; [=================================================================] 323 0s 0ms. Output database: tmp/2730103712073724212/aln; [=================================================================] 14.93K 0s 154ms. Time for merging into tmp/2730103712073724212/aln by mergeResults: 0h 0m 0s 147ms; Time for processing: 0h 0m 0s 394ms; offsetalignment queryDB tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/aln resultDB --chain-alignments 0; --merge-query 1 --search-type 0 --threads 64 --compressed 0 --db-load-mode 0 -v 3 ; Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:5871,load,load-mode,5871,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,1,['load'],['load-mode']
Performance,"526903138997/aln tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 0ms; align /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/aln_merged tmp/5233442526903138997/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score and coverage; Query database size: 75233 type: Aminoacid; Target database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 9m 57s 768ms ; Time for merging to aln: 0h 0m 0s 17ms; 672599536 alignments calculated; 672599536 sequence pairs passed the thresholds (1.000000 of overall calculated); 8940.219727 hits per query sequence; Time for processing: 1h 9m 58s 713ms; rmdb tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 73ms; swapresults /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/aln alnment/alignment --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 1.79769e+308 --split-memory-limit 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --threads 16 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 100.00% 75.23K 8s 163ms . Reading results.; Killed============================> ] 51.07% 38.42K eta 6s ; Error: swapresults died",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:8712,load,load-mode,8712,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['load'],['load-mode']
Performance,"5535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 76215872 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 76.22M 6m 32s 415ms; Sort kmer 0h 0m 14s 675ms; Sort by rep. sequence 0h 0m 0s 974ms; Time for fill: 0h 0m 13s 496ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 7m 46s 594ms; rescorediagonal uniref90-DB-wwmj uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref tmp//16518381706844811497/linclust/11898236; 85496030198/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov; -mode 2 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [================================================================] =76.22M 19m 41s 19ms; Time for merging to pref_rescore1: 0h 0m 50s 277ms; Time for processing: 0h 21m 16s 644ms; clust uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore1 tmp//16518381706844811497/linclust/1189823685496030198/pre_cl; ust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 28s 473ms. Size of the sequence database: 76215872; Size of the alignment database: 76215872; Number of clusters: 74926526. Writing results 0h 0m 17s 970ms; Time for merging to pre_clust: 0h 0m 0s 1ms; Time for processing: 0h 1m 0s 559ms; createsubdb tmp//16518381706844811497/linclust/1189823685496030198/order_redundancy uniref90-DB-wwmj tmp//16518381706844811497/linclust/11898236854960301; 98/input_step_redundancy -v 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:6315,load,load-mode,6315,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['load'],['load-mode']
Performance,5625/clu_tmp/4370341951257379003/aln_step2 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step2 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2_h -v 3 . Time for processing: 0h 0m 0s 0ms; createtsv /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/cluster.tsv --threads 8 -v 3 . Time for merging to cluster.tsv: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 8ms; result2repseq /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/clu_rep --db-load-mode 0 --compressed 0 --threads 8 -v 3 . [=================================================================] 100.00% 5.77K 0s 9ms ; Time for merging to clu_rep: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 17ms; result2flat /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_rep /tmp/mydir/7574787915800795625/rep_seq.fasta --use-fasta-header -v 3 . Time for processing: 0h 0m 0s 15ms; createseqfiledb /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/clu_seqs --threads 8 -v 3 . [=================================================================] 100.00% 5.77K 0s 7ms ; Time for merging to clu_seqs: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 18ms; result2flat /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_seqs /tmp/mydir/7574787915800795625/all_seqs,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:33548,load,load-mode,33548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"5] 0s 59ms; Time for merging to query_h: 0h 0m 0s 2ms; Time for merging to query: 0h 0m 0s 2ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 76ms; Create directory /tmp/MMS6178/15560953143015620527/search_tmp; search /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/result /tmp/MMS6178/15560953143015620527/search_tmp --alignment-mode 3 --threads 4 -s 5.7 --remove-tmp-files 1 . prefilter /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 4 --compressed 0 -v 3 -s 5.7 . Query database size: 431 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 153G; Target database size: 170669877 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 55.34M 25m 40s 422ms ; Index table: Masked residues: 383107691; Index table: fill; /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/blastp.sh : ligne 99 : 6380 Processus arrêté $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. MMseqs2 Version: 14.7e284; Staticall",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/728:4933,load,load-mode,4933,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728,1,['load'],['load-mode']
Performance,"6755106708/pref_filter1 tmp97/17949317426677965256/linclust/6279588666755106708/pref_filter2 --filter-file tmp97/17949317426677965256/linclust/6279588666755106708/order_redundancy --threads 20 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 25.63K 0s 61ms; Time for merging to pref_filter2: 0h 0m 0s 138ms; Time for processing: 0h 1m 40s 346ms; align tmp97/17949317426677965256/linclust/6279588666755106708/input_step_redundancy tmp97/17949317426677965256/linclust/6279588666755106708/input_step_redundancy tmp97/17949317426677965256/linclust/6279588666755106708/pref_filter2 tmp97/17949317426677965256/linclust/6279588666755106708/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 20 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 25629 type: Nucleotide; Target database size: 25629 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 25.63K 1s 731ms; Time for merging to aln: 0h 0m 0s 152ms; 209782 alignments calculated; 32736 sequence pairs passed the thresholds (0.156048 of overall calculated); 1.277303 hits per query sequence; Time for processing: 0h 3m 22s 221ms; clust tmp97/17949317426677965256/linclust/6279588666755106708/input_step_redundancy tmp97/17949317426677965256/linclust/6279588666755106708/aln tmp97/17949317426677965256/l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:8966,load,load-mode,8966,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['load'],['load-mode']
Performance,"69750715556969/result; [=================================================================] 2 0s 0ms. Time for merging to result: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; test.fa.easy-search.tsv exists and will be overwritten; convertalis tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result test.fa.easy-search.tsv --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . [=================================================================] 2 0s 0ms; Time for merging to test.fa.easy-search.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/target -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/target_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/query -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/query_h -v 3 . Time for processing: 0h 0m 0s 0ms. ```; ## Context; I'm trying to match sequences to each other and not count regions with degenerate bases as mismatches. Basically, I'd like the 2 example sequences to match each other with 0 mismatches. The current command produces an output with 13 mismatches (see output section). I'm mostly concern",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:11949,load,load-mode,11949,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['load'],['load-mode']
Performance,"6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Program call:; createdb final_complete_sequences.fa.gz tmp/3578692915323364718/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. ............Time for merging files: 0h 0m 0s 87ms; Time for merging files: 0h 0m 0s 98ms; Time for merging files: 0h 0m 0s 136ms; Time for merging files: 0h 0m 0s 91ms; Time for processing: 0h 0m 2s 526ms; Program call:; cluster tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_tmp -c 0.9 --cov-mode 1 --threads 2 --min-seq-id 0.9 --kmer-per-seq 80. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:1777,perform,performs,1777,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['perform'],['performs']
Performance,"6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set cluster settings automatically to s=1; Set cluster mode GREEDY MEM.; Set cluster iterations to 1; Program call:; linclust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3 --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 0 --pca 1 --pcb 1.5 --score-bias ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:3774,perform,performs,3774,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['perform'],['performs']
Performance,"7483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 8.53M 19s 320ms; Time for merging to orfs_aa_h: 0h 0m 13s 741ms; Time for merging to orfs_aa: 0h 0m 14s 541ms; Time for processing: 0h 1m 14s 69ms; prefilter /tmp/4466913777158595479/orfs_aa uniref_db.idx /tmp/4466913777158595479/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3. Index version: 16; Generated by: 60b77df37df55c3984870760591facbb361c3939; ScoreMatrix: VTML80.out; Query database size: 19769556 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 19769556; Target db start 1 to 1; [=================================================================] 100.00% 19.77M 1m 24s 356ms. 6.165338 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 14s 786ms; Segmentation fault (core dumped); Error: orf filter prefilter died. ## Your Environment; This is where I'",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/669:4149,load,load-mode,4149,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669,1,['load'],['load-mode']
Performance,"79/result /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best -a 1 --overlap 0 -e 0.001 -c 0 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | [=================================================================] 100.00% 0.01 eta -; mmseqs-web-worker_1 | Can not map any alingment results for entry 0!; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 1ms; mmseqs-web-worker_1 | terminate called after throwing an instance of 'std::logic_error'; mmseqs-web-worker_1 | what(): basic_string::_M_construct null not valid; mmseqs-web-worker_1 | convertalis /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/query /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/alis --sub-mat blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Error: Convert Alignments died; mmseqs-web-worker_1 | Aborted (core dumped); mmseqs-web-worker_1 | 2019/07/02 08:52:20 Execution Error: exit status 1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:13629,load,load-mode,13629,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['load'],['load-mode']
Performance,"79300059278292880/pref tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/pref_subtract --threads 112 --compressed 0 -v 3 . subtractdbs tmp/16479300059278292880/pref tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/pref_subtract --threads 112 --compressed 0 -v 3 . Remove tmp/16479300059278292880/aln_ungapped ids from tmp/16479300059278292880/pref; [=================================================================] 1.60M 1s 175ms; Time for merging to pref_subtract: 0h 0m 1s 400ms; Time for processing: 0h 0m 5s 506ms; align tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/pref_subtract tmp/16479300059278292880/aln_gapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 112 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1604546 type: Nucleotide; Target database size: 802273 type: Nucleotide; Calculation of alignments; [=================================================================] 1.60M 22m 53s 435ms; Time for merging to aln_gapped: 0h 0m 0s 903ms; 70826259 alignments calculated; 3445894 sequence pairs passed the thresholds (0.048653 of overall calculated); 2.147582 hits per query sequence; Time for processing: 0h 23m 4s 596ms; concatdbs tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/aln_gapped tmp/16479300059278292880/aln --preserve-keys --take-larger-entry --threads 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:15315,load,load-mode,15315,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['load'],['load-mode']
Performance,"7M 1m 36s 476ms ; Write merged clustering; [=================================================================] 100.00% 121.96M 2m 4s 130ms ; Time for merging to clu_redundancy: 0h 1m 28s 54ms; Time for processing: 0h 4m 53s 669ms; createsubdb cluster_tmp/1127447206531551203/clu_redundancy ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 26s 718ms; Time for processing: 0h 1m 14s 12ms; prefilter cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.99 --cov-mode 1 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 . Query database size: 119070883 type: Nucleotide; Estimated memory consumption: 544G; Target database size: 119070883 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 119.07M 11m 59s 618ms ; Index table: Masked residues: 1954198777; Index table: fill; [=================================================================] 100.00% 119.07M 8m 53s 150ms ; Index statistics; Entries: 43365843082; DB size: 248141 MB; Avg k-mer size: 2646841.008423; Top 10 k-mers; AAAAAAA	23063795; AAATTAA	21644433; AATTTAA	21117606; AAAAATT	20537065; AAATTTT	19681970; TTTTTTT	19035614; AATTTTT	18870179; ATTTTTT	17045685; TTTATTT	16633440; ATAAATT	16256141; Time for index table init: 0h 23m 3s 602ms; Process prefiltering step 1 of 1. k-mer similarity thresho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:10653,load,load-mode,10653,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['load'],['load-mode']
Performance,"8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1; Threads 	30; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using split mode; Index table: counting k-mers...; ......................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; .............................................................................	1 Mio. sequences processed; ..........................................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; ...............",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:2001,optimiz,optimized,2001,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['optimiz'],['optimized']
Performance,"8227067/linclust/3267328275516617562/pref_filter1 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_filter2 --filter-file clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 154 0s 13ms; Time for merging to pref_filter2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 79ms; rescorediagonal clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_filter2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 22ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms ] 49.02% 76 eta 0s; Time for processing: 0h 0m 0s 76ms; align clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:24128,load,load-mode,24128,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"8384/pref_filter1 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_filter2 --filter-file ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/order_redundancy --threads 40 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 31.32K 0s 100ms; Time for merging to pref_filter2: 0h 0m 0s 137ms; Time for processing: 0h 0m 0s 847ms; rescorediagonal ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_filter2 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 31.32K 0s 42ms; Time for merging to pref_rescore2: 0h 0m 0s 90ms; Time for processing: 0h 0m 0s 772ms; align ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore2 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,con",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:15343,load,load-mode,15343,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"89869989197200687/search_tmp/6775691152365959592/query_seqs /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 32 --compressed 0 -v 3 . [=================================================================] 1.03M 0s 146ms; Time for merging to query_seqs_split_h: 0h 0m 0s 281ms; Time for merging to query_seqs_split: 0h 0m 0s 333ms; Time for processing: 0h 0m 1s 246ms; prefilter /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 250G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 . Query database size: 1298472 type: Nucleotide; Target split mode. Searching through 12 splits; Estimated memory consumption: 216G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.80M 6m 27s 363ms; Index table: Masked residues: 517008537; Index table: fill; [=================================================================] 7.80M 11m 24s 325ms; Index statistics; Entries: 27958919735; DB size: 168174 MB; Avg k-mer size: 26.038773; Top 10 k-mers; GGGGCAGCGTGATTT	319478; TAATCGTGCAGCGGG	292128; GTGCGCAGCGTATCG	276641; CTCTCGGGGGCGTGG	257406; ACAGTTAGTATGTGT	233646; TCCAGGGAGCATGGG	230906; AGTGG",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:6127,load,load-mode,6127,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['load'],['load-mode']
Performance,"91; [=================================================================] 100.00% 5.99K 4s 202ms . 403.312621 k-mers per position; 5696 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 16 sequences passed prefiltering per query sequence; 20 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 1ms; Time for processing: 0h 0m 5s 300ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 5991 type: Aminoacid; Target database size: 5991 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 5.99K 0s 226ms ; Time for merging to aln_step2: 0h 0m 0s 1ms; 21329 alignments calculated; 6429 sequence pairs passed the thresholds (0.301421 of overall calculated); 1.073110 hits per query sequence; Time for processing: 0h 0m 0s 232ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step2 /tmp/mydir/757478791580079562",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:28452,load,load-mode,28452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"92146066/pref_filter1 cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_filter2 --filter-file cluster_tmp/1127447206531551203/linclust/8761493678692146066/order_redundancy --threads 40 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 119.25M 2m 56s 532ms ; Time for merging to pref_filter2: 0h 1m 34s 791ms; Time for processing: 0h 5m 27s 349ms; align cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_filter2 cluster_tmp/1127447206531551203/linclust/8761493678692146066/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 119253279 type: Nucleotide; Target database size: 119253279 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 119.25M 1h 5m 19s 819ms ; Time for merging to aln: 0h 1m 24s 501ms. 1903287037 alignments calculated.; 119437486 sequence pairs passed the thresholds (0.062753 of overall calculated).; 1.001545 hits per query sequence.; Time for processing: 1h 7m 38s 628ms; clust cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/aln cluster_tmp/1127447206531551203/linclust/8761493678692146066/clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 .",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:7871,load,load-mode,7871,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['load'],['load-mode']
Performance,"949317426677965256/input_step_redundancy tmp97/17949317426677965256/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 19.83K 0s 62ms; Time for merging to query_seqs_h: 0h 0m 0s 261ms; Time for merging to query_seqs: 0h 1m 40s 122ms; Time for processing: 0h 8m 20s 689ms; prefilter tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7.5 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 20 --compressed 0 -v 3. Query database size: 39650 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 19825 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [=================================================================] 100.00% 19.83K 0s 193ms; Index table: Masked residues: 3096; Index table: fill; [=================================================================] 100.00% 19.83K 0s 133ms; Index statistics; Entries: 5861616; DB size: 8225 MB; Avg k-mer size: 0.005459; Top 10 k-mers; GTACGTGAATTGAAT	10331; AAACTGGGAGAAGAT	9920; AAGGGGGGGCCGGTT	9235; CGAACGTGGGAACGG	8944; GGGGAAAGGCTGGGG	7283; TCGATTACGGTAACG	6945; GTGCGCAGCGTATCG	6389; CCCGGCTCACGAATG	5538; ACTGCGTAAGGGTGG	5044; GACCGAGGGCACGGG	4773; Time for index table init: 0h 0m 8s 613ms; Process prefiltering step 1 of 1. k-mer si",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:12701,load,load-mode,12701,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['load'],['load-mode']
Performance,"967198/linclust/14523879757540758787/pref_filter1 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_filter2 --filter-file clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 154 0s 34ms; Time for merging to pref_filter2: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 99ms; rescorediagonal clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_filter2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 7ms; Time for merging to pref_rescore2: 0h 0m 0s 1ms ] 49.67% 77 eta 0s; Time for processing: 0h 0m 0s 37ms; align clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:8508,load,load-mode,8508,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/t_orfs ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/t_orfs_aa ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | convertalis /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/alis_pdb_rna_sequence --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | [=================================================================] 1 0s 0ms; mmseqs-web-worker_1 | Time for merging to alis_pdb_rna_sequence: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 33ms; mmseqs-web-worker_1 | Removing temporary files; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result ; mmseqs-web-worker_1 | ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:30568,load,load-mode,30568,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['load'],['load-mode']
Performance,"9s 536ms; filterdb tmp//16518381706844811497/linclust/1189823685496030198/pref_filter1 tmp//16518381706844811497/linclust/1189823685496030198/pref_filter2 --filter; -file tmp//16518381706844811497/linclust/1189823685496030198/order_redundancy --threads 64 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 74.93M 16s 227ms; Time for merging to pref_filter2: 0h 0m 46s 160ms; Time for processing: 0h 1m 35s 246ms; rescorediagonal tmp//16518381706844811497/linclust/1189823685496030198/input_step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/input; _step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/pref_filter2 tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore2; --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 2 --min-seq-id 0.9 ; --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [================================================================] =74.93M 28m 19s 496ms; Time for merging to pref_rescore2: 0h 0m 51s 111ms; Time for processing: 0h 29m 44s 106ms; align tmp//16518381706844811497/linclust/1189823685496030198/input_step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/input_step_redu; ndancy tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore2 tmp//16518381706844811497/linclust/1189823685496030198/aln --sub-mat 'aa:blos; um62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mo; de 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --; add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --reali",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:8741,load,load-mode,8741,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['load'],['load-mode']
Performance,": /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:1696,Perform,Performing,1696,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,4,['Perform'],['Performing']
Performance,": 0h 0m 0s 46ms; createsubdb tmp/16437734971973434362/order_redundancy tmp/16437734971973434362/pref tmp/16437734971973434362/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 12ms; Time for processing: 0h 0m 0s 36ms; filterdb tmp/16437734971973434362/pref_filter1 tmp/16437734971973434362/pref_filter2 --filter-file tmp/16437734971973434362/order_redundancy. Filtering using file(s); [=================================================================] 140.16K 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 35ms; Time for processing: 0h 0m 0s 92ms; align tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/pref_filter2 tmp/16437734971973434362/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 30000000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 36 --compressed 0 -v 3. Compute score and coverage; Query database size: 140160 type: Nucleotide; Target database size: 140160 type: Nucleotide; Calculation of alignments; [============tmp/16437734971973434362/linclust.sh: line 75: 22654 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; ```; ## Context; I have a Fasta with about 140000 sequences which range from a few thousands nucleotides to about 20 millions. The memory consumption is fine throughout the mmseqs steps. But at some point during the align phase, a segmentation fault is thrown. It doesn't seem like a memory problem. I tried with the easy-clust workflow and the cluster module, both of which fail at the same point.; ## Your Environment; Include as many relevant details about ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:4273,load,load-mode,4273,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['load'],['load-mode']
Performance,"; Extract n lines 0; Numerical comparison operator ; Numerical comparison value 0; Sort entries 0; Include identical Seq. Id. false; join to DB ; Compute Positions ; Replace transitively . Filtering with a filter files.; ..............................................Time for merging files: 0h 0m 0s 668ms; Time for processing: 0h 0m 2s 11ms; Program call:; align contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/input_step_redundancy contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/52586018941986723; 32/input_step_redundancy contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/pref_filter2 contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601; 894198672332/aln --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.99 --seq-id-mode 0 --alt-ali 0 -c 0.6 --cov-mode 1 --max-seq-len 65535 --max-seqs 2147483647 --comp-bias-corr 0 --realign; 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 -v 3 . MMseqs Version: 7.4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0.99; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.6; Coverage Mode 1; Max. sequence length 65535; Max. results per query 2147483647; Compositional bias 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 128; Verbosity 3. Init data structures...; Compute score, coverage and sequence id.; Touch data file contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/input_step_redundancy ... Done.; Query database type: Nucleotide; Target database type: Nucleotide; **Calculation of Smith",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/632:5769,load,load-mode,5769,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632,1,['load'],['load-mode']
Performance,"; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	8; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. **It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace)**; ```; trying `--search-type 3 `throws me this error. `Unrecognized parameter ""--search-type"". Did you mean ""--seed-sub-mat"" (Seed substitution matrix)?; `. For some reason I couldn't switch to nucleotide search. Do you know how can I fix this?; Thanks for your help with this. Andrés. ## Your Environment. conda version of mmseqs MMseqs2 Version: 13.45111. ## Operating system and version:; Fedora",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/507:2978,perform,performed,2978,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507,1,['perform'],['performed']
Performance,"; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile tmp/457325247790757046/pref --sub-mat blosum62.out -s 7.5 -k 5 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern ; Local temporary path ; Threads 10; Verbosity 3. Initialising data structures...; Using 10 threads.; Use index pfam_profile.sk6; Index version: 12; Generated by: 7-4e23d; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: 2; Header",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189:3040,load,load-mode,3040,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189,1,['load'],['load-mode']
Performance,"; Program call:; rescorediagonal tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/input_step_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/input_step_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_filter2 tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore2 --sub-mat blosum62.out --rescore-mode 1 --filter-hits 1 -e 0.001 -c 0.9 --cov-mode 1 --min-seq-id 0.9 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --no-preload 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Rescore mode 	1; Remove hits by seq.id. and coverage 	true; E-value threshold 	0.001; Coverage threshold 	0.9; Coverage Mode 	1; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Include identical Seq. Id. 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; No preload 	false; Threads 	2; Verbosity 	3. Prefilter database: tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_filter2; Query database: tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/input_step_redundancy; Target database: tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/input_step_redundancy; Result database: tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore2; ..........; Done.; Time for merging files: 0h 0m 0s 228ms; Time for processing: 0h 0m 1s 2ms; Program call:; align tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/input_step_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/input_step_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore2 tmp/3578692915323364718/clu_tmp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:12744,perform,performs,12744,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['perform'],['performs']
Performance,============================================================] 882.92K 5m 58s 443ms; Time for merging to aln: 0h 0m 0s 462ms. 88720927 alignments calculated.; 46477238 sequence pairs passed the thresholds (0.523859 of overall calculated).; 52.640373 hits per query sequence.; Time for processing: 0h 6m 3s 620ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 272ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/input_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; offsetalignment tmp/2226585588535541735/query tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/target tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/aln tmp/2226585588535541735/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 26ms; Writing results to: tmp/2226585588535541735/result; [=================================================================] 419.27K 2s 43ms. Time for merging to result: 0h 0m 0s 264ms; Time for processing: 0h 0m 6s 8ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs_aa . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs_aa . Time for processing: 0h 0m 0s,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339:10355,load,load-mode,10355,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339,1,['load'],['load-mode']
Performance,"=======================================================] 100.00% 9.30K 0s 164ms . 2.036021 k-mers per position; 245 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 2 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 265ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 9304 type: Aminoacid; Target database size: 9304 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 9.30K 1s 357ms ; Time for merging to aln_step0: 0h 0m 0s 2ms; 22013 alignments calculated; 18612 sequence pairs passed the thresholds (0.845500 of overall calculated); 2.000430 hits per query sequence; Time for processing: 0h 0m 1s 367ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step0 /tmp/mydir/7574787",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:18769,load,load-mode,18769,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"============================================] 26.23K 0s 384ms. Reading results.; [=================================================================] 26.23K 0s 441ms. Output database: ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00K 0s 144ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 19ms; Time for processing: 0h 0m 2s 119ms; align ./mmseqs_output/tmp/5351426679731834765/seq_seeds.merged ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped_aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 34414 type: Aminoacid; Target database size: 26229 type: Aminoacid; Calculation of alignments; [=================================================================] 34.29K 6m 32s 543ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 85ms; 4335308 alignments calculated; 2294027 sequence pairs passed the thresholds (0.529150 of overall calculated); 66.900757 hits per query sequence; Time for processing: 0h 6m 33s 544ms; filterdb ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped_aln ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:40767,load,load-mode,40767,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"======================================] 100.00% 154 0s 37ms; Write merged clustering; [=================================================================] 100.00% 164 0s 48ms; Time for merging to clu_redundancy: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 68ms; createsubdb clu/sim1_tmp/7842071913732967198/clu_redundancy in/DB_in clu/sim1_tmp/7842071913732967198/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 6ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 2ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 117ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=========",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:12500,load,load-mode,12500,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"===================================] 76.22M 1m 11s 703ms; Time for merging to clu_redundancy: 0h 0m 49s 731ms; Time for processing: 0h 2m 22s 84ms; createsubdb tmp//16518381706844811497/clu_redundancy uniref90-DB-wwmj tmp//16518381706844811497/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 29s 367ms; prefilter tmp//16518381706844811497/input_step_redundancy tmp//16518381706844811497/input_step_redundancy tmp//16518381706844811497/pref_step0 --sub-mat ; 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2; 147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 2 --comp-bias-corr; 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches; 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Query database size: 74390789 type: Aminoacid; Estimated memory consumption: 400G; Target database size: 74390789 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 74.39M 1m 27s 612ms; Index table: Masked residues: 17937595794; Index table: fill; [=================================================================] 74.39M 13s 623ms; Index statistics; Entries: 495972652; DB size: 12603 MB; Avg k-mer size: 0.387479; Top 10 k-mers; CSSCCCS 40539; CSSCSCS 36980; CSCSSCS 36180; CSCSCSS 35290; CSSCDSS 34425; CSCCSSS 33905; CSSCSSS 32740; CSCDSSS 31596; SCSCDSS 30280; CSCSDSS 29715; Time for index table init: 0h 2m 0s 290ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculati",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:12540,load,load-mode,12540,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['load'],['load-mode']
Performance,"=================================] 1 0s 0ms; Time for merging to query_seqs_h: 0h 0m 0s 0ms; Time for merging to query_seqs: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; splitsequence tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 1 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 5 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 5 0s 0ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 5 0s 0ms; Index statistics; Entries: 2994; DB size: 8192 MB; Avg k-mer size: 0.000003; Top 10 k-mers; CCAATCCTCGGCACA	3; CGGCAGACCCGGAGC	3; GGGGCAGCGTGATTT	3; CTCTCGGGGGCGTGG	3; AAGGTGGACAGTTAA	2; ACCTGTAGCCCGTAA	2; GCAGGGTTAAGAGAA	2; GTTATCCCCAACGAA	2; AGAGTGGGTACCGAA	2; TACCGGTATCGCGAA	2; Time for index table init: 0h 0m 8s 169ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:10822,load,load-mode,10822,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['load'],['load-mode']
Performance,"=================================] 100.00% 154 0s 28ms; Write merged clustering; [=================================================================] 100.00% 164 0s 38ms; Time for merging to clu_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 72ms; createsubdb clu/sim2_tmp/12164117771218227067/clu_redundancy in/DB_in clu/sim2_tmp/12164117771218227067/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 14ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 4ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 118ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [========",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:28125,load,load-mode,28125,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,================================] 100.00% 0.02 0s 0ms ] 0.00% 0.01 eta -; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | 0 alignments calculated.; mmseqs-web-worker_1 | 0 sequence pairs passed the thresholds (-nan of overall calculated).; mmseqs-web-worker_1 | 0.000000 hits per query sequence.; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 49ms; mmseqs-web-worker_1 | offsetalignment /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/query /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/aln /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 24 --compressed 0 --db-load-mode 2 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Computing ORF lookup; mmseqs-web-worker_1 | Computing contig offsets; mmseqs-web-worker_1 | Computing contig lookup; mmseqs-web-worker_1 | Time for contig lookup: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Writing results to: /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result; mmseqs-web-worker_1 | [============================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:11145,load,load-mode,11145,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['load'],['load-mode']
Performance,"===============================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 5.7 . Query database size: 54576 type: Nucleotide; Target split mode. Searching through 5 splits; Estimated memory consumption: 679G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 5. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 18.00M 6m 11s 176ms; Index table: Masked residues: 1279892313; Can not allocate entries memory in IndexTable::initMemory; Error: Prefilter died; Error: Search step died; Error: Search died. Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string aft",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:14024,load,load-mode,14024,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['load'],['load-mode']
Performance,"===============] 100.00% 500 23s 390ms; Time for merging to result: 0h 0m 0s 44ms; 68875 alignments calculated; 12897 sequence pairs passed the thresholds (0.187252 of overall calculated); 25.794001 hits per query sequence; Time for processing: 0h 0m 24s 118ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/pref_0 -v 3. Time for processing: 0h 0m 0s 12ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/aln_0 -v 3. Time for processing: 0h 0m 0s 0ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/input_0 -v 3. Time for processing: 0h 0m 0s 0ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/aln_merge -v 3. Time for processing: 0h 0m 0s 0ms; convertalis tmp/18110643841744502873/query tmp/18110643841744502873/target tmp/18110643841744502873/result alnResult.m8 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --format-mode 0 --format-output query,targe t,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --db-output 0 --db-load-mode 0 --search-type 0 --threads 40 --compresse d 0 -v 3. [=================================================================] 100.00% 500 0s 376ms; Time for merging to alnResult.m8: 0h 0m 0s 57ms; Time for processing: 0h 0m 1s 129ms; rmdb tmp/18110643841744502873/result -v 3. Time for processing: 0h 0m 0s 10ms; rmdb tmp/18110643841744502873/target -v 3. Time for processing: 0h 0m 0s 4ms; rmdb tmp/18110643841744502873/target_h -v 3. Time for processing: 0h 0m 0s 2ms; rmdb tmp/18110643841744502873/query -v 3. Time for processing: 0h 0m 0s 1ms; rmdb tmp/18110643841744502873/query_h -v 3. Time for processing: 0h 0m 0s 1ms; [lihuilin@login01 MMseqs2]$ ls; alnResult.m8 azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile examples lib LICENSE.md README.md src tmp util; [lihuilin@login01 MMseqs2]$; [lihuilin@login01 MMseqs2]$ ls; alnResult.m8 azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile ex",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:8275,load,load-mode,8275,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['load'],['load-mode']
Performance,"============] 69.22K 3s 47ms. Time for merging to aln_swap: 0h 0m 0s 21ms; Time for processing: 0h 0m 10s 409ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln -v 3 . Time for processing: 0h 0m 0s 938ms; mvdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 107ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15106287 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 73ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 66ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:8718,load,load-mode,8718,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['load'],['load-mode']
Performance,"==] 100.00K 0s 404ms; Time for merging to clu_redundancy: 0h 0m 0s 145ms; Time for processing: 0h 0m 0s 639ms; createsubdb ./mmseqs_output/tmp/5351426679731834765/clu_redundancy ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 13ms; prefilter ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/pref_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 20942 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 20942 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 20.94K 0s 601ms; Index table: Masked residues: 6638; Index table: fill; [=================================================================] 20.94K 0s 645ms; Index statistics; Entries: 1435009; DB size: 496 MB; Avg k-mer size: 0.022422; Top 10 k-mers; GPGGTL 342; LDMPDG 185; LGDYKP 145; DVLDMP 119; PFLEAR 69; PFPEAR 65; FDDTDS 59; ADYTFS 55; LITRGY 55; GPGGTT 44; Time for index table init: 0h 0m 2s 668ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 20942; Target db start ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:19650,load,load-mode,19650,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"==] 2 0s 1ms; Time for merging to query_seqs_h: 0h 0m 0s 3ms; Time for merging to query_seqs: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 18ms; splitsequence tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 16 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 2ms; prefilter tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --seed-sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3 -s 5.7 . Query database size: 4 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 2 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 2 0s 2ms; Index table: Masked residues: 18; Index table: fill; [=================================================================] 2 0s 2ms; Index statistics; Entries: 8669; DB size: 8192 MB; Avg k-mer size: 0.000008; Top 10 k-mers; AAATAAACAAAAAAA	2; TTAGATCGAAAAAAA	2; AACCAACTAAAAAAA	2; TCCTTTCTCAAAAAA	2; CCAAAATAACAAAAA	2; TTGAATGCACAAAAA	2; AATGTGCTACAAAAA	2; GCAATTAACCAAAAA	2; CTCTGGTACGAAAAA	2; GGGTGGAATGAAAAA	2; Time for index table init: 0h 0m 7s 405ms; Process prefiltering step 1 of 1. k-mer similarity thr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:7215,load,load-mode,7215,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['load'],['load-mode']
Performance,"As far as I know MMSeqs2 uses profile/profile searches to build an MSA by querying a sequence database to a profile database. I couldn't find any way of directly performing profile/profile searches to compare two profile databases. Are there any plans to include this as a separate command (or in the ""search"" command"")?. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/529:162,perform,performing,162,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/529,1,['perform'],['performing']
Performance,"CCATTCTCG	9602; Time for index table init: 0h 2m 35s 948ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1604546; Target db start 1 to 802273; [=================================================================] 1.60M 1h 46m 59s 76ms. 0.996125 k-mers per position; 14106896 DB matches per sequence; 1161942 overflows; 277 sequences passed prefiltering per query sequence; 300 median result list length; 3973 sequences with 0 size result lists; Time for merging to pref: 0h 0m 0s 974ms; Time for processing: 1h 49m 41s 539ms; rescorediagonal tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/pref tmp/16479300059278292880/aln_ungapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.85 -a 0 --cov-mode 0 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 112 --compressed 0 -v 3 . [=================================================================] 1.60M 14m 50s 51ms; Time for merging to aln_ungapped: 0h 0m 1s 439ms; Time for processing: 0h 15m 7s 16ms; subtractdbs tmp/16479300059278292880/pref tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/pref_subtract --threads 112 --compressed 0 -v 3 . subtractdbs tmp/16479300059278292880/pref tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/pref_subtract --threads 112 --compressed 0 -v 3 . Remove tmp/16479300059278292880/aln_ungapped ids from tmp/16479300059278292880/pref; [=================================================================] 1.60M 1s 175ms; Time for merging to pref_subtract: 0h 0m 1s 400ms; Time for processing: 0h 0m 5s 506ms; align tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/pref_subtract tmp/16479300059278292880/aln_gapped --sub-mat 'aa:blosum62.out,nucl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:14011,load,load-mode,14011,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['load'],['load-mode']
Performance,"Compile the specific version [MMseqs2 71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1 (May 28, 2023)](https://github.com/soedinglab/MMseqs2/archive/71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1.zip) under Linux. I encounter a similar error as [here](https://github.com/soedinglab/MMseqs2/issues/480). And the mentioned package `libgcc-ng` has been installed. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. `cd MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; make; make install ; export PATH=/home/liuhongbin/database/colabfoldMSA/MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1/build/bin/:$PATH`. no errors were observed here. ## MMseqs Output (for bugs); error:. (colabfoldMSA) liuhongbin@node7:~/database/colabfoldMSA/MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1/build$ ./bin/mmseqs; ./bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; 71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; g++ (GCC) 5.4.0; cmake version 3.28.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; uname -a | grep x86_64; Linux node7 3.10.0-1160.11.1.el7.x86_64 #1 SMP Fri Dec 18 16:34:56 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; * Operating system and version:; CentOS Linux release 8 (Core). * packages in current environment; `conda",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/795:1017,load,loading,1017,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/795,1,['load'],['loading']
Performance,"DIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	20; Shift hash 	5; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; pan.db /tmp//589280515582180421/clu_redundancy /tmp//589280515582180421/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 1 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional b",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:2650,perform,performs,2650,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['perform'],['performs']
Performance,"Dear MMseqs2 developers,; Thank you for making this excellent tool available. I'm using MMseq2s on an HPC cluster using the Slurm scheduler, and I'm trying to determine the best way to utilize as many cores per node as possible; ## Expected Behavior; MMSeqs2 launches 1 MPI task per node, and uses OpenMP to spawn as many threads as there are cores available on each node (48); ## Current Behavior; 1 MPI task per node is launched, but the number of threads running on any node is capped at 12, regardless of what value argument to `--threads` is provided; ## Steps to Reproduce (for bugs). Job script:. ```; #!/usr/bin/env bash. #SBATCH --job-name=mmseqs; #SBATCH --output=mmseqs_gcc12_test2.log; #SBATCH -N 8; #SBATCH --ntasks-per-node=1; #SBATCH --cpus-per-task=48; #SBATCH --time=08:00:00; #SBATCH -p medium. module load slurm; module load openmpi/gcc12.1.0/4.1.4. export PATH=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45/bin:$PATH. DBDIR=/lustre/projects/carlson-group/mmseqs2-project/DBs. RUNNER=""mpirun -pernode -np 8"" mmseqs search human_prot.db $DBDIR/UniRef50 human_prot_results_test2 ./tmp; ```. ## MMseqs Output (for bugs); ```. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:820,load,load,820,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,2,['load'],['load']
Performance,"Dear MMseqs2 team,. I got some wired results which I could not explain by myself. I hope you can help me with it. ## Expected Behavior; I was expecting MMseqs2 to be more sensitive if using default options (*spaced-kmer-mode* enabled and *kmer-matching* disabled). ## Current Behavior; Using MMseqs2 search with default options (*spaced-kmer-mode* enabled and *kmer-matching* disabled), the program found less results than if disabling *spaced-kmer-mode* and enabling *kmer-matching*. ## Context; I thought that MMseqs2 uses spaced seeds and no exact k-mer matching to increase the sensitivity during search. I was curious to see how many alignments are found by MMseqs2 exclusively because of this. Therefore, I performed two searches with MMseqs2 search either using spaced seeds and no exact k-mer matching or the opposite. Surprisingly, I looks like using no spaced seeds and an exact k-mer matching increases the programs sensitivity as there are more results found. Do you have an explanation for this results?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/266:713,perform,performed,713,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/266,1,['perform'],['performed']
Performance,"Dear all,. Does MMSeqs2 provide a way (a command) to generate PSSM profiles from the MMSeqs2 multiple sequence alignment (msa) output file out.mm_msa?. I think providing such a functionality can help a lot. In this way, we don't need to call psiblast (which downgrades the runtime performance of the machine-learning tools) anymore to generate PSSM features for the protein residues. Alright?. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/580:281,perform,performance,281,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/580,1,['perform'],['performance']
Performance,"Dear developers,. I am trying to perform clustering on the set of closely-related sequences of retrotransposons (n = 736,771). The module ""easy-linclust"" works fine for this dataset. But whenever I used the ""cluster"" module (and also the ""easy-cluster"" module), I got a long list of error messages such as the following. Error: there must be an error: 98829 deleted from 373971 that now is empty, but not assigned to a cluster. I am unsure why these error messages occur and whether they could affect my clustering results or not. Could you please help me to solve this issue? Thank you in advance. MMseqs version: 96d452cb432fc4674991a48952deaf24d1787e77 (self-compiled); Full log: ; [full.log](https://github.com/soedinglab/MMseqs2/files/5384506/full.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/363:33,perform,perform,33,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363,1,['perform'],['perform']
Performance,"Dear developers; Is it possible to replace nt.fna.taxidmapping with a standard one (taxidmapfile)?. ```; http://ftp.ncbi.nih.gov/pub/taxonomy/accession2taxid/nucl_gb.accession2taxid.gz; sed '1d' nucl_gb.accession2taxid | awk '{print $2"" ""$3}' > taxidmapfile; ```. Then ; ```; mmseqs createdb nt.fna nt.fnaDB; mmseqs createtaxdb nt.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file taxidmapfile --threads 16; mmseqs createindex nt.fnaDB tmp --threads 16; ```. ```; mmseqs createtaxdb /media/sergey/Disk_4/MMseq2_DB/nt.fnaDB /media/sergey/Disk_4/MMseq2_DB/tmp --ncbi-tax-dump /media/sergey/Disk_4/taxonomy/ --tax-mapping-file /media/sergey/Disk_4/taxidmapfile --threads 16; Create directory /media/sergey/Disk_4/MMseq2_DB/tmp; createtaxdb /media/sergey/Disk_4/MMseq2_DB/nt.fnaDB /media/sergey/Disk_4/MMseq2_DB/tmp --ncbi-tax-dump /media/sergey/Disk_4/taxonomy/ --tax-mapping-file /media/sergey/Disk_4/taxidmapfile --threads 16. MMseqs Version: 13.45111; NCBI tax dump directory /media/sergey/Disk_4/taxonomy/; Taxonomy mapping file /media/sergey/Disk_4/taxidmapfile; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 16; Verbosity 3. sh: 0: getcwd() failed: No such file or directory; Loading nodes file ... Done, got 2449198 nodes; Loading merged file ... Done, added 69078 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```. MMseqs2 Version: 13.45111; RAM 32Gb + Swp 20 Gb. When using the command to limit memory, I get the following error; Unrecognized parameter ""--split-memory-limit"".",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/624:1191,Load,Loading,1191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/624,3,['Load'],['Loading']
Performance,"Dear mmseqs2 developvers,. I have a list of thousands of subject - query fasta pairs, and I would like to run mmseqs to align each of these pairs in a way that each sequence is only aligned to its pair. This is how my list looks:. ```; S10CNODE_1.fasta S1CNODE_25.fasta; S10CNODE_2.fasta S2CNODE_8.fasta ; S10CNODE_3.fasta S5CNODE_11.fasta ; S10CNODE_4.fasta S3CNODE_7.fasta; S10CNODE_5.fasta S6CNODE_10.fasta; ```; Is there an efficient way to perform these 1:1 alignments? Could I create a database that contains all sequences and then align a database subentry?. I am trying to avoid aligning all against all.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/813:445,perform,perform,445,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/813,1,['perform'],['perform']
Performance,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460:383,optimiz,optimizations,383,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460,3,['optimiz'],['optimizations']
Performance,"Firstly, thank you for making and maintaining such a great tool!. ## Expected Behavior; When performing a search (or similar function like 'taxonomy'), when providing an evalue of `-e 1e-50`, I would expect to have results filtered according to this evalue. ## Current Behavior; No results are returned/all results are filtered out, even though there should be hits with evalues smaller than 1e-50. (i.e. I can see the hits when I use an `-e 1e-30`). ## Steps to Reproduce (for bugs); The input files and outputs are here [didi_e_issue_mmseqs.zip](https://github.com/soedinglab/MMseqs2/files/5872895/didi_e_issue_mmseqs.zip); ```; conda install -c bioconda mmseqs2; mmseqs createdb query_fasta.fasta queryDB; mmseqs createdb target_fasta.fasta targetDB; mkdir no_e_cutoff; mkdir 30; mkdir 50; mmseqs search queryDB targetDB no_e_cutoff/resultDB tmp --search-type 3 >&1 | tee no_e_cutoff/no_e_cutoff.out; mmseqs convertalis queryDB targetDB no_e_cutoff/resultDB no_e_cutoff/resultDB_no_e_cutoff.m8 >&1 | tee -a no_e_cutoff/no_e_cutoff.out; rm -r tmp; mmseqs search queryDB targetDB 30/resultDB tmp -e 1e-30 --search-type 3 >&1 | tee 30/30.out; mmseqs convertalis queryDB targetDB 30/resultDB 30/resultDB_30.m8 >&1 | tee -a 30/30.out; rm -r tmp; mmseqs search queryDB targetDB 50/resultDB tmp -e 1e-50 --search-type 3 >&1 | tee 50/50.out; mmseqs convertalis queryDB targetDB 50/resultDB 50/resultDB_50.m8 >&1 | tee -a 50/50.out; ```. ## MMseqs Output (for bugs); The outputs are contained in the .zip above. ## Context; I'm fairly certain that the problem is being caused due to the fact that 1e-50 when convereted to float will become 0. Therefore the e value will be set to 0. This means that all results are filtered out of the alignment. If this is not fixable, it would at least be extremely helpful to have a strong warning message. It took me a day to break this all down and find out what the cause was. Filter with an e-value of 1e-50 is not uncommon. Especially during taxonomy matches (my act",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/399:93,perform,performing,93,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399,1,['perform'],['performing']
Performance,"GACCGAGGGCACGGG	4773; Time for index table init: 0h 0m 8s 613ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 39650; Target db start 1 to 19825; [=================================================================] 100.00% 39.65K 3s 800ms. 0.928116 k-mers per position; 129909 DB matches per sequence; 0 overflows; 85 sequences passed prefiltering per query sequence; 1 median result list length; 19825 sequences with 0 size result lists; Time for merging to pref: 0h 0m 0s 137ms; Time for processing: 0h 3m 32s 791ms; rescorediagonal tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/pref tmp97/17949317426677965256/aln_ungapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 39.65K 0s 376ms; Time for merging to aln_ungapped: 0h 0m 0s 129ms; Time for processing: 0h 6m 40s 663ms; subtractdbs tmp97/17949317426677965256/pref tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/pref_subtract --threads 20 --compressed 0 -v 3. subtractdbs tmp97/17949317426677965256/pref tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/pref_subtract --threads 20 --compressed 0 -v 3. Remove tmp97/17949317426677965256/aln_ungapped ids from tmp97/17949317426677965256/pref; [=================================================================] 100.00% 39.65K 0s 144ms; Time for merging to pref_subtract: 0h 0m 0s 168ms; Time for processing: 0h 0m 0s 503ms; align tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/pref_subtract tmp97/17949317426677965256/aln_gap",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:14582,load,load-mode,14582,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['load'],['load-mode']
Performance,"GDB showed me I get a segmentation fault [here](https://github.com/soedinglab/MMseqs2/blob/master/src/util/convertalignments.cpp#L33C68-L33C88). ```#0 0x0000555555f577fe in printSeqBasedOnAln (out=...,; seq=0x7ffff789709c ""TATTTTATTTTGTGTAGAGATGGGGTCTCACTAGGTTGCC\n"",; offset=39, bt=..., reverse=false, isReverseStrand=true,; translateSequence=<optimized out>, translateNucl=...); ```. With `offset = 39`, and `seqPos = 40`, and `isReverseStrand = true`, the line of code is walking off the start of this 40bp long sequence. . This seems to be because the backtrace has a length of 41:. ```; (gdb) print bt; $6 = (const std::__1::string &) @0x7fffffff2c70: {; static __endian_factor = 2,; __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__s = {{__is_long_ = 1 '\001',; __size_ = 24 '\030'}, __padding_ = 0x7fffffff2c71 """",; __data_ = ""\000\000\000\000\000\000\000)\000\000\000\000\000\000\000\340E\350VUU\000""}, __l = {{__is_long_ = 1, __cap_ = 24},; __size_ = 41,; __data_ = 0x555556e845e0 'M' <repeats 27 times>, ""I"", 'M' <repeats 12 times>, ""D""}, __r = {__words = {49, 41,; 93825018643936}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<std::__1::__non_trivial_if<true, std::__1::allocator<char> >> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>},; static npos = 18446744073709551615}; ```. I have not yet been able to figure out what the target sequence is to make a minimal reproducible example, but I wanted to see if you had any ideas on what would be causing this walk off the edge behavior.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/863:345,optimiz,optimized,345,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/863,1,['optimiz'],['optimized']
Performance,"Having multiple cpu flags enabled is valid, so we should use if instead of elsif. Otherwise only the first `HAVE_*` variable is actually respected. e.g. before this change we get this on Gentoo:; ```; /usr/bin/x86_64-pc-linux-gnu-g++ -march=native -O2 -pipe -frecord-gcc-switches -Wl,-O1 -Wl,--as-needed -Wl,--defsym=__gentoo_check_ldflags__=0 -rdynamic -fsigned-char -mavx2 -mcx16 -Wa,-q -mcx16 -std=c++1y -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm -Wl,-Bstatic -lzstd lib/microtar/libmicrotar.a -Wl,-Bdynamic -lz -lbz2 && :; ```. i.e. only avx2 is respected, sse2/4 is ignored. After change we get:; ```; /usr/bin/x86_64-pc-linux-gnu-g++ -march=native -O2 -pipe -frecord-gcc-switches -Wl,-O1 -Wl,--as-needed -Wl,--defsym=__gentoo_check_ldflags__=0 -rdynamic -fsigned-char -mavx2 -mcx16 -Wa,-q -msse4.1 -mcx16 -msse2 -std=c++1y -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm -Wl,-Bstatic -lzstd lib/microtar/libmicrotar.a -Wl,-Bdynamic -lz -lbz2 && :; ```. https://github.com/gentoo/sci/pull/1143. Signed-off-by: Andrew Ammerlaan <andrewammerlaan@gentoo.org>",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/533:442,optimiz,optimization,442,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/533,2,['optimiz'],['optimization']
Performance,"Hello I have performed a search using as query nucleotide multifasta and as a target an aminoacidic multifasta. The alignment is performed at aminoacidic level by translating the nucleotide multifasta. So, when I run `mmseqs convertalis` and I retrieve a blastn output format 6 table, this table shows the information about the aminoacidic alignment? . I'm particularly parsing the 7th and 8th column of the table (start and end position of alignment of the query sequence) and want to be sure if I'm looking the start and end of the nucleotide or aminoacidic sequence. Thanks for your time",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/570:13,perform,performed,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/570,2,['perform'],['performed']
Performance,"Hello,. First of all thank you for making such an amazing program, secondly I was wondering if you could provide some advice on how to handle a very large query database. I have several terabytes that I would like to check against the nr. Currently I am using the easy-taxonomy workflow, I have loaded about 1/15th of my data as a proof of concept. However as you will see in the log below this will take quite some time. My main questions are: is this expected behaviour and how am I able to speed this up?. ## Current Behavior; LSBATCH: User input; mmseqs easy-taxonomy ./sample.fastq.gz ./nr ./result ./tmp -s 0.5. MMseqs Version: 	13.45111; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	26; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary pa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422:295,load,loaded,295,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422,1,['load'],['loaded']
Performance,"Hello,. I have installed mmseqs2 using conda. This has worked ok. The installed package has the following version attributes. `mmseqs2 11.e1a1c h2d02072_0 bioconda`. However, when I go to perform an RBH, using easy-rbh as mentioned in the userguide, I get the error below. `Invalid Command: easy-rbh`; `Did you mean ""mmseqs easy-search""?`. I think easy-rbh is not updated for conda installation. Please advice what to do. Thanks; Abhijit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/332:188,perform,perform,188,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332,1,['perform'],['perform']
Performance,"Hello,. I would like to perform clustering of a large nucleotide sequence with the easy-clust .; However, it is not clear for me whether the ""--min-seq-id"" and ""-c"" parameters refer to alignments in nucleotide space or alignments in amino-acid space after sequence translation. Thanks,; Florian",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/512:24,perform,perform,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/512,1,['perform'],['perform']
Performance,"Hello,. I'm trying to run the search algorithm on a database comprised of over 20k sequences against the uniref100 db. This is the command I'm using and the version, followed by the error after approx. 18 minutes in the run. ##. search ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --split-memory-limit 150G. MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b. mem_align could not allocate memory.; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/3121500954244133633/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; Error: Alignment died. ##. I've tried increasing the memory, thinking this could be the issue, but so far the problem persists. Any help is appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/510:887,load,load-mode,887,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/510,1,['load'],['load-mode']
Performance,"Hello,. My conda environment is as follows. active environment : ClusterEnv; active env location : /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv; shell level : 2; user config file : /home/sanyalab/.condarc; populated config files : /home/sanyalab/.condarc; conda version : 4.10.1; conda-build version : 3.18.9; python version : 3.7.4.final.0; virtual packages : __linux=2.6.32=0; __glibc=2.12=0; __unix=0=0; __archspec=1=x86_64; base environment : /mnt/common/rh6/annotate/Anaconda3 (writable); conda av data dir : /mnt/common/rh6/annotate/Anaconda3/etc/conda; conda av metadata url : https://repo.anaconda.com/pkgs/main; channel URLs : https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /mnt/common/rh6/annotate/Anaconda3/pkgs; /home/sanyalab/.conda/pkgs; envs directories : /mnt/common/rh6/annotate/Anaconda3/envs; /home/sanyalab/.conda/envs; platform : linux-64; user-agent : conda/4.10.1 requests/2.22.0 CPython/3.7.4 Linux/2.6.32-696.30.1.el6.x86_64 rhel/6.9 glibc/2.12; UID:GID : 101430:237; netrc file : None; offline mode : False. MMseqs installs ok (I think). However, I get a GLIBC error when running `mmseqs --help` like below. `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`. Please advice what to do. Thanks; Ab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/461:914,cache,cache,914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461,1,['cache'],['cache']
Performance,Hello. my apologies if I'm posting this message in the wrong place (I am not reporting a potential bug here). I would like to align a dataset containing ~30Mio illumina reads against TrEMBL. . However the run crashes because the generated files are huge and I eventually run out of disk space. Can someone help me to optimize the search parameters to limit the disk space usage (I am only interested in finding the 10 best hits of each read). I am currently running this command:. mmseqs search QUERY.mms TrEMBL RESULT.mms /tmp/tmp_mmseqs.55447 --remove-tmp-files true --threads 60 -a -e 1E-3 -v 3 -s 2.5 --max-rejected 10 --max-seqs 100000. and get this warning: Hard disk might not have enough free space (1T left).The prefilter result might need up to 353T. Thank you for the help; best regards; Guillaume,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/380:317,optimiz,optimize,317,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/380,1,['optimiz'],['optimize']
Performance,"Hi all, . I am trying to search many (30M) small peptides (15aa length) against a database of ; all known protein sequences (BLAST NR). I know that each of the peptides is contained in the database, i.e. ; there should be at least one exact match in the database. I only care about exact or very close matches, ; a very sensitive search should not be necessary. . However, the result table contains only 1.6M entries. I manually checked a few peptides, and they are indeed included ; in the database (using `grep` on the mmseqs db). . So far, I have been using `easy-search` using default parameters: . ```bash; mmseqs easy-search \; query.fa \; /path/to/nr \; result.tsv \; ./tmp; ```. Can you guide me what parameters I need to tune to get more hits (including the exact matches) and at the same ; time not compromise the runtime? Also, I don't understand the differences between the `search` and the `map` command. Should I use the latter for my purpose? . Thanks in advance, ; Gregor . ## Your Environment. * `MMseqs2 Version: 45c4de7f1daefa06b45688195305eadedaea4d97`; * static build with AVX2 support; * `Intel(R) Xeon(R) CPU E5-2699A v4 @ 2.40GHz`, 44 cores, 1TB RAM; * Operating system and version: `CentOS Linux 7 64bit / Linux 3.10.0-1127.13.1.el7.x86_64)`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/373:730,tune,tune,730,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373,1,['tune'],['tune']
Performance,"Hi everybody,; First of all, let me tell you that MMseqs really allowed me to perform exactly the kind of analysis I have been trying to perform in months! It really saved my day.; I have a rather simple question: is there a way to extract from a query DB (a metagenome in FASTQ format) the sequences matching the targetDB (a custom protein reference database). I guess there's some option I'm not looking at...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/356:78,perform,perform,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/356,2,['perform'],['perform']
Performance,"Hi mmseq team,. I need some help in updating a previous mmseq based (near complete) clustered db (A) with additional sequences (B). My mmseq run for A, using easy-cluster, timed out at the stage of moving result files and deleting temporary files, a log and resulting files list is attached.; [mmseq.earthbiome.fna.2tb.log.gz](https://github.com/soedinglab/MMseqs2/files/5187248/mmseq.earthbiome.fna.2tb.log.gz); [resultfiles.txt](https://github.com/soedinglab/MMseqs2/files/5187249/resultfiles.txt). Now I have additional sequences as set B that I want to use to update set A to perform clustering and updating the final database. mmseq GitHub documentation says about updating a database as:. mmseqs createdb DB_trimmed.fasta DB_trimmed; mmseqs cluster DB_trimmed DB_trimmed_clu tmp. To update the clustering DB_trimmed_clu with the new version of your database DB_new:. mmseqs createdb DB.fasta DB_new; mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_new_updated DB_update_clu tmp. My worry is if If I cluster bigger dataset A again, it will take quite a few days, as in the last case the job was terminated on a 3 Tb memory machine after 7 days, without completing the last step of moving results and deleting temp files. In summary I need help in 1. saving or moving important result files and safely remove temporary files. and 2. a correct way of updating and clustering my dataset B with database A. Many Thanks,. IA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348:580,perform,perform,580,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348,1,['perform'],['perform']
Performance,"Hi soedinglab,. I am running the `nf-core/funcscan` pipeline to assign taxonomy to contigs using MMseqs2 with the GTDB database. My contigs are around 100-200 MB in size, and I am running the pipeline on a machine with the following specs:; - 36 cores; - 256 GB RAM. Despite utilizing all available resources, `mmseq2` takes more than 4 hours per sample and does not finish. I am wondering if this runtime is normal or if there are ways to optimize the process to make it faster. . **Questions:**; 1. What are the common bottlenecks when running MMseqs2 with the GTDB database, and how can I address them?; 2. What is the expected runtime for MMseqs2 on contigs of this size?; 3. Are there specific MMseqs2 settings (e.g., sensitivity, database partitioning) that could help speed up the analysis without compromising too much accuracy?. Any advice or insights from your experience with MMseqs2 and GTDB would be appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/895:440,optimiz,optimize,440,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/895,2,"['bottleneck', 'optimiz']","['bottlenecks', 'optimize']"
Performance,"Hi there! I'm attempting to perform a homology search for a single gene (a bacterial protein) across all sequenced bacterial genomes to estimate the % of species that carry the gene. Is there a way to partition a wider database (like Uniprot) so that my search only covers bacterial genomes? If not, could I request an additional database that covers all sequenced bacterial genomes (like UniprotKB Bacteria or EnsemblBacteria)?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/341:28,perform,perform,28,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341,1,['perform'],['perform']
Performance,"Hi, I am in the process of building a searchable database of antibody and T cell receptor repertoires (here, a ""repertoire"" is a set of antibody or TCR sequences from a single blood sample from a single donor). Searches are performed using mmseqs, with each repertoire stored as a mmseqs DB. So far, the search function is working nicely. Next, I'd like to implement a clustering option. My idea was to allow a set of repertoire DBs to be selected and clustered using linclust. My questions are: . 1. can either mergedbs or concatdbs be used to combine a set of DBs for clustering by linclust?; 2. is there a more efficient strategy than combining the individual DBs? . Each DB is typically tens of thousands of sequences or more with typical length ~40 amino acids (i.e. just the three CDR regions concatenated; not full-length protein). Thanks in advance for your help! ; -Daron",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/519:224,perform,performed,224,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/519,1,['perform'],['performed']
Performance,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/212:153,Load,Loading,153,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212,7,['Load'],['Loading']
Performance,"Hi, thanks for making this toolkit! I'm excited to start using it with my data. I have a set of viral genomes that I would like to cluster. From the wiki and the paper, I understand that linclust by default runs a process that's optimized for protein sequences (using blosum64, kmer length..). Can it run on nucleotide sequences? What would be the way to go about it?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/715:229,optimiz,optimized,229,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/715,1,['optimiz'],['optimized']
Performance,"Hi,. I just want to ask a quick question. ; Say I create index for the uniref30_2103_db database with 3 splits: `mmseqs createindex uniref30_2103_db tmp --split 3` and I perform 50 queries (in a single .fasta file) on it using the `colabfold_search.sh` script provided on https://colabfold.mmseqs.com. Will each of the three partial index be loaded into memory for ~50 times? Assume my RAM cannot hold more than one partial index and I don't use the colabfold_envdb. In other words, I'm wondering if mmseqs works like either ; 1); ```; for query in queries_in_fasta:; 	for partial_index_file in indices:; 		search(query, partial_index_file); ```; or 2); ```; for partial_index_file in indices:; 	for query in queries_in_fasta:; 		search(query, partial_index_file); ```; In the first case I guess each partial index will be loaded into RAM from storage repeatedly for `num_of_queries` times which is slow, but for the second case it's just once. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/527:170,perform,perform,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/527,3,"['load', 'perform']","['loaded', 'perform']"
Performance,"Hi,. I'm currently attempting to search a multifasta file against itself using `mmseqs search`. The file contains 10432883 sequences so naturally it's going to take a long time. I stopped the pre-filtering step after about 24 hours and am now trying to optimise my parameters to speed up the search process. I'm wondering if you could advise me on the recommended settings for doing this?. After doing some reading and generally trying to get my head around what is happening, this is what I've come up with so far:. ```; mmseqs \; createdb \; /gut/output_noblast/gut_p/combined_ffn.fasta \; /gut/mmseqs/querydb/queryDB;. mmseqs \; createindex \; /gut/mmseqs/querydb/queryDB \; /temp_data/akjshdf;. mmseqs \; touchdb \; /gut/mmseqs/querydb/queryDB;. mmseqs \; search \; /gut/mmseqs/querydb/queryDB \; /gut/mmseqs/querydb/queryDB \; /gut/mmseqs/resultdb/resultDB \; --search-type 3 \; --threads 40 \; --start-sens 1 \; --sens-steps 3 \; -s 7 \; --db-load-mode 2 \; /temp_data/akjshdf;; ```. Are there further optimisations I could make or something else I could be doing differently?. Many thanks for your help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/589:949,load,load-mode,949,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/589,1,['load'],['load-mode']
Performance,"Hi,. I'm running `linclust` on a cloud instance with network file systems. I'm wondering which `--db-load-mode` should I use to alleviate the I/O bottleneck of NFS.; ```; --db-load-mode INT Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]; ```. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/559:101,load,load-mode,101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/559,3,"['bottleneck', 'load']","['bottleneck', 'load-mode']"
Performance,"Hi,. I'm using MMseqs2 for all-vs-all alignments. As indicated in the user guide pdf, I'm using the bash script to perform a fake prefiltering step before aligning. That seems to work, as all alignments are computed, but the results are a bit unexpected:; ```; >Q8CD91; EERVVHWYFKLLDKNSSGDIGKKEIKPFKRFLRKKSKPKKCVKKFVEYCDMNNDKSITVQELMGCLGVTREEGKANTRKRHTPRGNAESSSSNRQPRKQG; >Q95JC9; GPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPPPGPSPPRPPPGPPPQ; ```; I didn't change much of the defaults; ```; mmseqs createdb --dbtype 1 dummyfasta.fasta seq_db; mmseqs_fake_prefilter.sh seq_db seq_db pref; mmseqs align seq_db seq_db pref align_db --alignment-mode 3 -e inf --min-seq-id 0.3; mmseqs convertalis seq_db seq_db align_db check_alignments.tab; ```. ```; query target fident alnlen mismatch gapopen qstart qend tstart tend evalue bits; Q8CD91 Q8CD91 1.000 100 0 0 1 100 1 100 1.707E-71 202; Q8CD91 Q95JC9 1.000 2 0 0 83 84 91 92 4.610E+01 9; Q95JC9 Q95JC9 1.000 100 0 0 1 100 1 100 7.088E-35 108; Q95JC9 Q8CD91 0.333 3 1 0 11 13 21 23 1.508E+02 7; ```; The second alignment's `fident` makes no sense to me. I understand that the e-value is high too, but I really want all pairwise % identities returned so I don't use it for filtering. Do I need to use a different configuration to make this work, or is mmseqs2 just not suitable for this all-vs-all identity task?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/498:115,perform,perform,115,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/498,1,['perform'],['perform']
Performance,"Hi,. Imagining I want to perform a hierarchical cluster manually. ; The common steps are: ; 1- create a sequence DB `createdb`; ; 2- create prefilter `prefilter`; ; 3- perform alignments `align`; ; 4- perform cluster `clust`; ; 5- subset the representatives `createsubdb`; ; 6- repeat everything changing the parameters. I had a few questions about this:; 1- Am I doing right the cluster?; 2- I want to hierarchically cluster, for example, at 90% identity, 60%, and at least 30%. ; - If I perform the alignment for 30% identity, can I use `apply` to build an alignment DB to the results to create a subset with different criteria? This way I must run `mmseqs align` only once. ; 3- Since one sequence DB is a subset from another, when I perform `createsubdb` will I get a new DB or just the subset index to the original DB? I mean, how the disk usage increase to each subset? . Thanks a lot.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/308:25,perform,perform,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/308,5,['perform'],['perform']
Performance,"Hi,. Quite impressed with the speed at which mmseq performs pairwise alignments. Have a couple of questions:. 1. Can i perform alignments using sequences with degenerate characters? Right now the program considers these positions as mismatches. Can i change the way mismatches are counted? So an alignment of X against any of the 20 amino acids can still be considered as a match. 2. Can i search using the protein motif patterns found in PROSITE? . Thanks in advance,; Shiv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/204:51,perform,performs,51,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/204,2,['perform'],"['perform', 'performs']"
Performance,"Hi,; I ran the `mmseqs search` command on one sample (named 'B001'), and all went well. Now I would like to use `mmseqs convertalis` to convert the result database file into a .m8 file; however, `mmseqs convertalis` expects one file as input for the result database, and the output from `mmseqs search` produced 10 result_db files from one sample:. `mmseqs2_B001_result_db.0	mmseqs2_B001_result_db.6; mmseqs2_B001_result_db.1	mmseqs2_B001_result_db.7; mmseqs2_B001_result_db.2	mmseqs2_B001_result_db.8; mmseqs2_B001_result_db.3	mmseqs2_B001_result_db.9; mmseqs2_B001_result_db.4	mmseqs2_B001_result_db.dbtype; mmseqs2_B001_result_db.5	mmseqs2_B001_result_db.index`. Is this acceptable? If so, is there a way to merge the 'result_db' files into one file? Alternatively, should I convert each of these outputs into a .m8 file separately, and then merge?. For reference, I ran this command to produce the above output:. `mmseqs search /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_query_db/mmseqs_B001_queryDB /Volumes/FireFly_Promise_Pegasus/Databases/mmseqs2_uniref90_db/UniRef90 /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/tmp --db-load-mode 3 --threads 10 --max-seqs 25 -s 1 -a -e 1e-5`. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/579:1387,load,load-mode,1387,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/579,1,['load'],['load-mode']
Performance,"Hi,; is it please possible to set a limit on the amount of memory MMseqs2 uses for its computations? Or to set the number of computation chunks?; I know from the MMseqs2 wiki it automatically detects how much memory it can use and eventually it splits database into chunks etc. But this is not practical for grid computing environment where you have to request a specific amount of memory a priori and your job is then executed on a machine which actually has much more memory but it is shared with other jobs. It can then happen that MMseqs2 will consume more memory than allowed just because its available from the system point of view. The queue management software will then kill the job as it exceeded assigned resources.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58:643,queue,queue,643,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58,1,['queue'],['queue']
Performance,"Hi. I was trying to search single queries against NCBI NR just for test. ; Somehow, I got just a few results ~450 results by a query. The point is, the lowest e-value is too low ~1e-50. I've got no error message. Then, I think I'm doing something wrong in `createindex`.; Probably I need to change some parameters as `--max-seqs`. For example, I used this query:; ```; >WP_066948057.1 AAA family ATPase [Microtetraspora fusca]; MRKVPLPEPVSAALTDALDQLRLAVEDLHFGLDIPGAEEARKAQAAVLAQLEDYVIPRVHMSTAPALIVVAGSTGAGKST; LVNTLAAQRVSTTGVRRPTTGTPVLVCHPDDHEWFAEGDLLGGLTRLERPVEGVGTDSVVLSTTERLPPGVALLDTPDID; SVVEEHHEIAHRMLDAADMWVFVTTASRYADAPSWNLLRLAKERGARLVIVLSRVPEKSRDVIVKHFGRMLDEYGLADAE; RFVIKETTVTEGRLPDKEVSELRMWLAHLSVDDERRAAAVRTTLNGVLDSFRNRVPALARHLETQVALRADLRSDVDAAY; MGALADIDEATRNGSLLRGEVLARWQDFAGSGDLIRTLQLRRGGKGGQRGPQRARALRTAIRNALESVINSAAERAAEEV; VVRWRQRAGAGDRLAATPGLGRSSDEATQRTSRAIGAWQDHVTELIRTEGVTKRSVARLVSFDVESLALIFTVSLLGYGA; TDVSSGRGAGALPQRLLRALLGAESLRNISAKARSDLRARIGMVFDEETLRYVDELDGAGIPDEAAATRLYQATYNLEVA; R; ```. The NR was prepared with; ```; mmseqs databases NR nr tmp; mmseqs createindex nr tmp; ```. And the search was performed like this; ```; mmseqs easy-search query.fa nr result tmp; ```. The same query with blastp has returned me 5000 results using `-max_target_seqs 5000`. https://github.com/soedinglab/MMseqs2/wiki#disk-space. Do I need to change the parameters in `createindex` ?. I'd like to maximize the number of results for a e-value threshold. As returning all results down to 1e-3 of e-value or other value I choose. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/300:1120,perform,performed,1120,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/300,1,['perform'],['performed']
Performance,"I generated the index files for some Uniprot databases:. ```; mmseqs createdb <databases.fasta.gz> input/targetDB; mmseqs createindex input/targetDB tmp; ```. This step has generated a bunch of ""targetDB.idx.0,1,2...14 ""(each is 52GB), and a ""targetDB.idx.dbtype"" + ""targetDB.idx.index"". It seems there should be only one ""targetDB.idx"" file generated. However, that file was not there although it says in the last few lines of the log ""Time for merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My quest",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/757:806,cache,cache,806,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757,1,['cache'],['cache']
Performance,"I get the following when compiling on mac:. ```bash; make VERBOSE=1; ...; [ 69%] Linking CXX executable mmseqs; cd /Users/rfonseca/Programs/mmseqs2/build/src && /usr/local/Cellar/cmake/3.6.3/bin/cmake -E cmake_link_script CMakeFiles/mmseqs.dir/link.txt --verbose=1; /usr/local/bin/gcc-6 -DOPENMP=1 -fopenmp -mavx2 -mfpmath=sse -Wa,-q -std=c++0x -m64 -pedantic -Wall -Wextra -Winline -Wdisabled-optimization -Wno-unused-parameter -O3 -DNDEBUG -mavx2 -mfpmath=sse -Wa,-q -O3 -DNDEBUG -ffast-math -fno-exceptions -ftree-vectorize -fno-strict-aliasing -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o mmseqs util/libutil.a workflow/libworkflow.a /usr/lib/libz.dylib util/libutil.a prefiltering/libprefiltering.a alignment/libalignment.a clustering/libclustering.a commons/libcommons.a; Undefined symbols for architecture x86_64:; ""std::ctype<char>::_M_widen_init() const"", referenced from:; diffseqdbs(int, char const**, Command const&) in libutil.a(diffseqdbs.cpp.o); createsubdb(int, char const**, Command const&) in libutil.a(createsubdb.cpp.o); readAllKeysIntoMap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) in libutil.a(swapresults.cpp.o); mergeClusteringResults(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) in libutil.a(mergeclusters.cpp.o); readLength(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) in libutil.a(summarizetabs.cpp.o); getEntries(unsigned int, char*, unsigned long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, std::less<std::__cxx11::basic_string<char, std::char_traits<char>",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/8:394,optimiz,optimization,394,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/8,1,['optimiz'],['optimization']
Performance,"I had carefully read this similar issue below. I think my problem may be different and with more details.; https://github.com/soedinglab/MMseqs2/issues/658; ## Expected Behavior; mmseqs local runs with similar response time as that in mmseqs colabfold api.; Is there a solution for ColabFold multimer prediction msa search with a good speed(not fastest, but faster) with 256GB memeory?; ## Current Behavior; for 1 sequence pair(164 mers and 6 mers) input, local mmseqs msa server use more than 4 hours to process, even much slower than Alphafold orig MSA local running at the same local hardware environment.; **I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.**; **Is this very low speed caused by I didn't keep all database into memory?**; >HAGPIA; ## Steps to Reproduce (for bugs); I follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690:210,response time,response time,210,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690,1,['response time'],['response time']
Performance,"I have a request for describing some mmseq's options in more depth, at least with a suggestion what effect might have a specific parameter set to its extreme. Especially, maybe they wouldn't be relevant eventually, but I think that's good to know when thinking about optimizing and shaping profiles / searches / clusterings. For instance:. **result2profile**; --qid (intuitive, but how does it affect final profile's e.g. sensitivity?); --qsc (especially the range - what does the default setting mean compared to extremes?); --pca; --pcb; --diff (I see explanation in commandline help but get confused by the window and don't know whether should I modify that for manipulating profile's characteristics - mainly specific/nonspecific feature). **prefilter**; --min-ungapped-score (set up to 15, what does it mean? Does it affect minimum length of k-mer alignment that is needed?); --k-score; --diag-score. Could you add some comment in documentation what do these do? How varying them affect (or is expected to affect) results? Maybe some of them are hidden in the code, but that's hard to infer for non developer. I can see also that search doesn't produce results for very short sequences, e.g. the shortest PFAM consensus sequences, what additionally inspire me to rethink all procedures more throughly. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/85:267,optimiz,optimizing,267,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/85,1,['optimiz'],['optimizing']
Performance,I tried [cluster using profiles](https://github.com/soedinglab/MMseqs2/wiki#how-to-cluster-using-profiles) using this [test dataset](https://github.com/soedinglab/MMseqs2/files/2765258/subset.txt). I performed this procedure:. > mmseqs createdb subset.fa subset.db; > mmseqs prefilter subset.db subset.db subset.prefilter.db -s 8.5; > mmseqs align subset.db subset.db subset.prefilter.db subset.align.db --min-seq-id 0.9; > mmseqs clust subset.db subset.align.db subset.clust.db; > ; > mmseqs createsubdb subset.clust.db subset.db subset.90.db; > mmseqs prefilter subset.90.db subset.90.db subset.90.prefilter.db -s 8.5; > mmseqs align subset.90.db subset.90.db subset.90.prefilter.db subset.20.aling.db --min-seq-id 0.2 ; > mmseqs clust subset.90.db subset.20.aling.db subset.20.clust.db; > ; > mmseqs mergeclusters subset.db final_clu subset.clust.db subset.20.clust.db ; > mmseqs createtsv subset.db subset.db final_clu final_clu.tsv; > mmseqs result2profile subset.db subset.db final_clu final_clu.profile ; > mmseqs search final_clu.profile final_clu.profile_consensus final_clu.profile.DB2 tmp --add-self-matches ; > mmseqs clust final_clu.profile final_clu.profile.DB2 final_clu.profile.clu ; > mmseqs createtsv final_clu.profile final_clu.profile.clu final_clu.profile.clu.tsv. In the end I got this [meaningless tsv](https://github.com/soedinglab/MMseqs2/files/2765314/final_clu.profile.clu.txt). I didn't understand this tsv which is different from those created with simple cluster of proteins. I'd like to know if I did something wrong or how to understand this file. Thanks in advance,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/151:200,perform,performed,200,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/151,1,['perform'],['performed']
Performance,"I was wondering if it is possible to copy the database index to /dev/shm instead of page cache? This would have the advantage that in a slurm cluster environment, one could reserve the memory needed for the index. When the database gets copied to cache and pages are locked by vmtouch, this would not be covered by the slurm reservation as far as I understand. It wouldn't be a problem that the database index gets deleted after the job finishes (when it is copied to /dev/shm). Update:; I could run the job now by copying the index to /dev/shm and making symlinks in the /dev/shm directory to the other database files on the network share because otherwise (without the links) there is a file not found error when using db-load-mode 3.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/629:89,cache,cache,89,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/629,3,"['cache', 'load']","['cache', 'load-mode']"
Performance,"I'm examining the efficiency of template retrieval using different MMseqs2 configurations for MSA generation, which is crucial for identifying templates via hhsearch. Notably, the **ColabFold MMseqs2 detailed version** involves complex steps like search, expansion, alignment, and filtering, offering high accuracy but with significant time investment. On the other hand, the **MMseqs2 easy search version** simplifies the process, potentially reducing time but at a possible cost to accuracy. Given that my project processes a large volume of PDB chains (around 400k), understanding the trade-offs between these methods is essential. Key inquiries:; **Does the difference in MSA quality between the two MMseqs2 versions significantly affect template identification accuracy?; How can I optimize the MMseqs2 template search to balance efficiency and precision effectively?**; I appreciate any insights or experiences with these tools. <Colabfold mmseqs2>; `def mmseqs_search_monomer(; dbbase: Path,; base: Path,; uniref_db: Path = Path(""uniref30_2202_db""),; template_db: Path = Path(""""), # Unused by default; metagenomic_db: Path = Path(""colabfold_envdb_202108_db""),; mmseqs: Path = Path(""mmseqs""),; use_env: bool = True,; use_templates: bool = False,; filter: bool = True,; expand_eval: float = math.inf,; align_eval: int = 10,; diff: int = 3000,; qsc: float = -20.0,; max_accept: int = 1000000,; prefilter_mode: int = 0,; s: float = 8,; db_load_mode: int = 2,; threads: int = 32,; ):; #Run mmseqs with a local colabfold database set; #; #db1: uniprot db (UniRef30); #db2: Template (unused by default); #db3: metagenomic db (colabfold_envdb_202108 or bfd_mgy_colabfold, the former is preferred); ; uniref_db = Path(""/store/colabfold/db/uniref30_2202_db""); template_db = Path(""/store/colabfold/db/pdb70_220313""); if filter:; # 0.1 was not used in benchmarks due to POSIX shell bug in line above; # EXPAND_EVAL=0.1; align_eval = 10; qsc = 0.8; max_accept = 100000. used_dbs = [uniref_db]; if use_templa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:787,optimiz,optimize,787,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['optimiz'],['optimize']
Performance,"I'm running a 3 iteration search job and it crushed towards the end of the prefiltering of the last iteration. I tried to run again the same command in order to resume from where I stopped, but it seems to me that it is starting from the beginning. ## Expected Behavior; Start from:; ```; Program call:; prefilter tmpC/10139724895635470572/profile_1 genes.db tmpC/10139724895635470572/pref_2 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 48 -v 3 . ```; ## Current Behavior; creates new folder inside the tmp folder and starts a new run; ```; Program call:; prefilter geneC.db genes.db tmpC/13630618462368123119/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 56 -v 3 . ```. ## Steps to Reproduce (for bugs); ```; #BSUB -R ""rusage[mem=200000]""; #BSUB -a openmpi; #BSUB -J ""GeneC"". module load MMseqs2/6-f5a1c. runner=""mpirun"" mmseqs search geneC.db genes.db geneC-v-all_3itr.db tmpC --no-preload --max-seqs 1000 --num-iterations 3; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160:1434,load,load,1434,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160,1,['load'],['load']
Performance,"I've been trying to perform some basic tests with MMSeqs2 and have encountered an issue where I repeated get the following error message:. Init data structures...; Compute score only.; Could not open data file [path_to_dir]/mmseqs_tmp/pref_4!. The ""[path_to_dir]/mmseqs_tmp/"" directory contains two temporary files (pref_4.index_tmp_0.0 and pref_4_tmp_0.0) along with a blastp.sh script. I'm not using any advanced options for my search, and both input databases are (as far as I can see) formatted correctly. Maybe I'm overlooking something embarrassingly simple?. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/11:20,perform,perform,20,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/11,1,['perform'],['perform']
Performance,"Improve gff2db to parse multiple files, and try multi-threading",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/468:48,multi-thread,multi-threading,48,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/468,1,['multi-thread'],['multi-threading']
Performance,Is it possible to perform the suite on DNA sequence?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/26:18,perform,perform,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/26,1,['perform'],['perform']
Performance,Load index to /dev/shm instead of page cache?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/629:0,Load,Load,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/629,2,"['Load', 'cache']","['Load', 'cache']"
Performance,"Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locke",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:9936,load,load-mode,9936,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['load'],['load-mode']
Performance,Multi-threading not working when installing from brew on OSX Catalina,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/289:0,Multi-thread,Multi-threading,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/289,1,['Multi-thread'],['Multi-threading']
Performance,"PO07_megahitDB $taxDB KLEB_PO07_megahit_result tmp; ```. ## MMseqs Output (for bugs); [Full output can be found in this gist.](https://gist.github.com/sean-workman/531e9d5fc73635dee8c000f9da137fe0). I also see this output in my error file:; `tmp/1193166584733320518/tmp_taxonomy/17149912652888480377/tmp_hsp1/10699950925961740214/blastp.sh: line 135: 8379 Bus error (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""`. ## Context; I created metagenomic assemblies using megahit and metaSPAdes. I am trying to get MMseqs2 working to do taxonomic classification. I am running on Digital Research Alliance of Canada clusters. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15-6f452; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Loaded as a module on a cluster.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: Unsure. I ran `lscpu` on a login node and got what is shown below, but the memory and CPUs that I had for the job were specified in the slurm job script shown above. ```; lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) CPU E5-2667 v4 @ 3.20GHz; CPU family: 6; Model: 79; Thread(s) per core: 2; Core(s) per socket: 8; Socket(s): 2; Stepping: 1; CPU(s) scaling MHz: 100%; CPU max MHz: 3200.0000; CPU min MHz: 1200.0000; BogoMIPS: 6384.78; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx; pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 d; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838:2208,Load,Loaded,2208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838,1,['Load'],['Loaded']
Performance,Parameters optimized for aligning a relatively large illumina dataset against TrEmbl,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/380:11,optimiz,optimized,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/380,1,['optimiz'],['optimized']
Performance,"Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time for processing: 4h 41m 10s 259ms; rescorediagonal /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3; ```; ^^^^^^; There is no more printed info after the last line in the above output, and it got stuck for more than 12h. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `cab0e83840f5afa0632aada56e6bacaf46211c33`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:5549,load,load-mode,5549,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['load'],['load-mode']
Performance,"Question on ""bit score"" when performing search with --num-iterations 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:29,perform,performing,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['perform'],['performing']
Performance,"Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	mpirun -pernode -np 8; Force restart with latest tmp 	false; Remove temporary files 	false. MPI Init; Rank: 0 Size: 8; prefilter human_prot.db /lustre/projects/carlson-group/mmseqs2-project/DBs/UniRef50 ./tmp/4797566427929930176/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 384 --compressed 0 -v 3 -s 5.7 . Query database size: 20588 type: Aminoacid; Target split mode. Searching through 83 splits; Estimated memory consumption: 24G; Target database size: 53625855 type: Aminoacid; Process prefiltering step 1 of 83. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052; LAMHETP	888; AYITSTG	696; FLNSHRT	695; GRFVVEV	501; RGAVAVR	415; IEAAGGR	407; RAEGRAV	401; LLGPGKT	371; TSSGRGV	307; Time for index table init: 0h 0m 38s 705ms; k-mer similarity threshold: 122; Starting",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:4328,load,load-mode,4328,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['load'],['load-mode']
Performance,"Since cluster module needs too much memory. (I have 2 million nucleotide seqs, about 30G, and 1T memory, and segment fault occurred). I try to use LINCLUST instead. But I also want a better performance of clustering. I try to increase the --kmer-per-seq, the number of clusters decreased until about --kmer-per-seq 2000 (My shortest sequences are 2000bp). I think this may indicate that the clustering performance has improved. I compared results in a 3G test dataset, between ""Linclust --kmer-per-seq 2000"" and ""Cluster""， the number of cluster produced by former is relatively closed to the latter. . But I still wonder if it make sense to set --kmer-per-seq 2000, since the default is only 20.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/831:190,perform,performance,190,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/831,2,['perform'],['performance']
Performance,"Some issues / unexpected behavior when running mmseqs search and other features used in colabfold. But the low speed happens in the mmseqs step, so I think this is the place to ask. Unexpected observations:. 1. running mmseqs locally on our cluster is much slower than the responses we get from the colabfold server for equivalent inputs; 2. mmseqs search speed does not scale at all with added threads or added physical cores, for small inputs (1-2 sequences) - is this expected? Will it only speed up with large input count?. Welcoming any input! Many thanks!. ## Expected Behavior; Runtime of mmseqs2 for a given input similar to response time from the colabfold server. ## Current Behavior; Considerably slower. For a given input (~250 aa) the server gives a full result in 20-30s, paired + unpaired reads (so, including at least 1 search each against uniref30 and colabfold_envdb, plus a number of expandaln / align calls).; The local version takes 60-90 seconds to run just the initial mmseqs search against uniref30, when using vmtouch and db load mode 2, and ~300 seconds against colabfold_envdb. Db load mode 3 somewhat slower, db load mode 0 and 1 much slower as expected.; Index was created without splits. The mmseqs search step is timed after vmtouch and other preparations are complete. The runtime is independent of either thread count or number of cpus provided.; Splitting the target db index 2 4 8 or 16-fold and running in parallel with MPI does not speed it up either (slightly slows down). Placing the entire run directory fast SSD or RAM (/dev/shm) does not change the speed.; This happens with the docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLT",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:633,response time,response time,633,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,1,['response time'],['response time']
Performance,Speed up mmseqs for large database and multiple large query sets by loading target into memory,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214:68,load,loading,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214,1,['load'],['loading']
Performance,"Suffix2}""), base.joinpath(""res_exp""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + expand_param); run_mmseqs(mmseqs, [""align"", base.joinpath(""prof_res""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""), base.joinpath(""res_exp""), base.joinpath(""res_exp_realign""), ""--db-load-mode"", str(db_load_mode), ""-e"", str(align_eval), ""--max-accept"", str(max_accept), ""--threads"", str(threads), ""--alt-ali"", ""10"", ""-a""]); run_mmseqs(mmseqs, [""filterresult"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign""), base.joinpath(""res_exp_realign_filter""), ""--db-load-mode"",; str(db_load_mode), ""--qid"", ""0"", ""--qsc"", str(qsc), ""--diff"", ""0"", ""--threads"",; str(threads), ""--max-seq-id"", ""1.0"", ""--filter-min-enable"", ""100""]); run_mmseqs(mmseqs, [""result2msa"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign_filter""), base.joinpath(""uniref.a3m""), ""--msa-format-mode"",; ""6"", ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + filter_param); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign_filter"")]); ; if use_templates:; run_mmseqs(mmseqs, [""search"", base.joinpath(""prof_res""), dbbase.joinpath(template_db), base.joinpath(""res_pdb""),; base.joinpath(""tmp2""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads), ""-s"", ""7.5"", ""-a"", ""-e"", ""0.1"", ""--prefilter-mode"", str(prefilter_mode)]); run_mmseqs(mmseqs, [""convertalis"", base.joinpath(""prof_res""), dbbase.joinpath(f""{template_db}{dbSuffix3}""), base.joinpath(""res_pdb""),; base.joinpath(f""{template_db}""), ""--format-output"",; ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar"",; ""--db-output"", ""1"",; ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)]); run_mmseqs(mmse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:4784,load,load-mode,4784,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['load'],['load-mode']
Performance,"The `convertalis` command exits with an error when no match is found in the DB. Maybe this could be caught by the web server and an informative message could be displayed in the results page (instead of the standard `Error!`).; ```; mmseqs-web-worker_1 | easy-search /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/job.fasta /opt/mmseqs-web/databases/test_nt /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/alis_test_nt /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp --dont-shuffle --db-output --db-load-mode 2 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --search-type 3 --strand 2 --greedy-best-hits; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | MMseqs Version: 	d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | Substitution matrix 	blosum62.out; mmseqs-web-worker_1 | Add backtrace 	false; mmseqs-web-worker_1 | Alignment mode 	3; mmseqs-web-worker_1 | E-value threshold 	0.001; mmseqs-web-worker_1 | Seq. id. threshold 	0; mmseqs-web-worker_1 | Min. alignment length 	0; mmseqs-web-worker_1 | Seq. id. mode 	0; mmseqs-web-worker_1 | Alternative alignments 	0; mmseqs-web-worker_1 | Coverage threshold 	0; mmseqs-web-worker_1 | Coverage mode 	0; mmseqs-web-worker_1 | Max sequence length 	65535; mmseqs-web-worker_1 | Compositional bias 	1; mmseqs-web-worker_1 | Realign hits 	false; mmseqs-web-worker_1 | Max reject 	2147483647; mmseqs-web-worker_1 | Max accept 	2147483647; mmseqs-web-worker_1 | Include identical seq. id. 	false; mmseqs-web-worker_1 | Preload mode 	2; mmseqs-web-worker_1 | Pseudo count a 	1; mmseqs-web-worker_1 | Pseudo count b 	1.5; mmseqs-web-worker_1 | Score bias 	0; mmseqs-web-worker_1 | Gap open cost 	11; mmseqs-web-worker_1 | Gap extension cost 	1; mmseqs-web-worker_1 | Threads 	24; mmseqs-web-worker_1 | Compressed 	0; mmseqs-web-worker_1 | Verbosity 	3; mmseqs-web-worker_1 | Seed substitution matrix 	VTML80.out; mmseqs-web-worker_1 | Se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:540,load,load-mode,540,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['load'],['load-mode']
Performance,"The `expandaln` command fails to properly read index, producing an '`Invalid database read for database data`' error. ## Expected Behavior. Command to run without error messages. ## Current Behavior. Command fails instantly with following error message:. ```; Invalid database read for database data file=db/human.idx, database index=db/human.idx.index; getData: local id (4294967295) >= db size (22); ```. ## Steps to Reproduce (for bugs); ```bash; mkdir db; mkdir job; mmseqs createdb uniprotkb_human.fasta db/human; mmseqs createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1; mmseqs createdb query.fasta job/qdb. mmseqs search job/qdb db/human job/res job/tmp1 --num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000. mmseqs mvdb job/tmp1/latest/profile_1 job/prof_res; mmseqs lndb job/qdb_h job/prof_res_h. # Command which fails:; mmseqs expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95; ```. ## MMseqs Output (for bugs); createdb:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [79690] 0s 233ms; Time for merging to human_h: 0h 0m 0s 24ms; Time for merging to human: 0h 0m 0s 53ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 472ms; ```. createindex:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616:706,load,load-mode,706,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616,2,['load'],['load-mode']
Performance,"The colabdb_search.sh script calls `mmseqs result2msa --msa-format-mode 6` (`""${MMSEQS}"" result2msa ""${BASE}/qdb"" ""${DBBASE}/${DB1}.idx"" ""${BASE}/res_exp_realign_filter"" ""${BASE}/uniref.a3m"" --msa-format-mode 6 --db-load-mode 2 ${FILTER_PARAM}` to be exact), which replaces `X` with `-` in the query. [Q58725.fasta](https://www.uniprot.org/uniprot/Q58725.fasta) according to uniprot:. ```; >sp|Q58725|MAP2_METJA Methionine aminopeptidase OS=Methanocaldococcus jannaschii (strain ATCC 43067 / DSM 2661 / JAL-1 / JCM 10045 / NBRC 100440) OX=243232 GN=map PE=3 SV=1; MEIEGYEKIIEAGKIASKVREEAVKLIXPGVKLLEVAEFVENRIRELGGEPAFPCNISIN; EIAAHYTPKLNDNLEFKDDDVVKLDLGAHVDGYIADTAITVDLSNSYKDLVKASEDALYT; VIKEINPPMNIGEMGKIIQEVIESYGYKPISNLSGHVMHRYELHTGISIPNVYERTNQYI; DVGDLVAIEPFATDGFGMVKDGNLGNIYKFLAKRPIRLPQARKLLDVISKNYPYLPFAER; WVLKNESERLALNSLIRASCIYGYPILKERENGIVGQAEHTILITENGVEITTK; ```. a3m file from `result2msa` (there's a `-` in the second line):. ```; >Q58725; MEIEGYEKIIEAGKIASKVREEAVKLI-PGVKLLEVAEFVENRIRELGGEPAFPCNISINEIAAHYTPKLNDNLEFKDDDVVKLDLGAHVDGYIADTAITVDLSNSYKDLVKASEDALYTVIKEINPPMNIGEMGKIIQEVIESYGYKPISNLSGHVMHRYELHTGISIPNVYERTNQYIDVGDLVAIEPFATDGFGMVKDGNLGNIYKFLAKRPIRLPQARKLLDVISKNYPYLPFAERWVLKNESERLALNSLIRASCIYGYPILKERENGIVGQAEHTILITENGVEITTK; >Q6GNF9	341	0.334	1.229E-101	0	293	294	159	475	480; MDqaSEEIwTDFRQAAEAHRQVRKYVMSWIKPGMTMIEICEKLEDcsrkLIKENGLYagLAFPTGCSLNNCAAHYTPNAGDPTVLQYDDVCKIDFGTHINGRIIDCAFTVTFNPKYDKLLEAVKDATNTGIRCSGIDVRLCDVGEAIQEVMESYeveidGktyqVKPIRNLNGHSIGPYRIHAGKTVPIVKGGEATRMEEGEVYAIETFGSTGKGVVHDDMECSHYMknFDvGHVPIRLPRAKHLLNVINEKFGTLAFCRRWLDrlGESKYLMALKNLCDLGIVDPYPPLCDMKGSYTAQFEHTILLRPNCKEVVSR; >A0A3B3D0Y5	336	0.331	1.005E-99	0	293	294	180	496	501; MDkaNEEmWNDFRQAAEAHRQVRKHVRSFLKPGMTMIEICERLEDcsrkLIKENGlnAGLAFPTGCSLNHCAAHYTPNAGDTTVLQYDDVCKIDFGTHINGRIIDCAFTVTFNPKYDKLLEAVRDATNTGIKNAGIDVRLCDVGEAIQEVMESYeveldGktyqVKPIRNLNGHSIGQYRIHAGKTVPIVKGGEATRMEEGEVYAIETFGSTGKGVVHDDMECSHYMknFDvGHVPIRLPRAKHLLNVVNENFGTLAFCRRWLDrlGESKYLMALKNLCDLGIVDPYPPLCDTKGCYTAQFEHTILLRPTCKEVVSR; ```. ## E",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/497:216,load,load-mode,216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/497,1,['load'],['load-mode']
Performance,Time for merging to pref_0_tmp_7: 0h 0m 34s 449ms; Time for merging to pref_0_tmp_7_tmp: 0h 1m 30s 262ms; Merging 8 target splits to pref_0; Preparing offsets for merging: 0h 1m 18s 365ms; [=================================================================] 100.00% 55.24M 8m 35s 231ms; ```. ### htop screen grab; ![Screen Shot 2021-03-10 at 12 16 09 PM](https://user-images.githubusercontent.com/14060382/110706285-7c9db380-81ac-11eb-8e42-efd46778a3ce.png). ### gdb output on an S status prefilter process:; ```; gdb -p 9878. Attaching to process 9878. warning: process 9878 is a cloned process; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/mmseqs...(no debugging symbols found)...done.; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...d,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:33046,Load,Loaded,33046,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,"Time for merging to query_seqs_h: 0h 0m 0s 62ms; Time for merging to query_seqs: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 213ms; splitsequence tmp/7935334228278574252/query_seqs tmp/7935334228278574252/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 96 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7.5 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 . Query database size: 4000 type: Nucleotide; Estimated memory consumption: 11G; Target database size: 365688 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 100.00% 365.69K 16s 177ms ; Index table: Masked residues: 1079896; Index table: fill; [=================================================================] 100.00% 365.69K 12s 498ms ; Index statistics; Entries: 297952985; DB size: 9896 MB; Avg k-mer size: 0.277490; Top 10 k-mers; GGCGCAGCGCGGTGC	366; TCCGGGCCGCACGGT	330; GTCGCGGCAGCGCCG	209; CAGACGCGCGTGCCG	204; CGCGCGCGTCGCGCG	167; CGCGCGCGTGGCGCG	157; GCTGCGCGCGGCGCG	151; CGCGGGCGTGGCGCG	149; CGTGCGCGTGGCGCG	147; CGCGCGCCCGGCGCG	133; Time for index table init: 0h 0m 39s 203ms; Process prefiltering step 1 of 1. k-me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:4868,load,load-mode,4868,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,1,['load'],['load-mode']
Performance,"Users 31G Mar 9 21:51 pref_0_tmp_1; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 21:51 pref_0_tmp_1.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 21:51 pref_0_tmp_1.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 9 22:41 pref_0_tmp_2; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 22:41 pref_0_tmp_2.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 22:41 pref_0_tmp_2.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 9 23:30 pref_0_tmp_3; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 23:31 pref_0_tmp_3.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 23:31 pref_0_tmp_3.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 10 00:20 pref_0_tmp_4; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 00:21 pref_0_tmp_4.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 00:21 pref_0_tmp_4.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 10 01:10 pref_0_tmp_5; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 01:11 pref_0_tmp_5.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 01:11 pref_0_tmp_5.index; -rw-r--r-- 1 dportik Domain Users 33G Mar 10 01:59 pref_0_tmp_6; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 02:00 pref_0_tmp_6.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 02:00 pref_0_tmp_6.index; -rw-r--r-- 1 dportik Domain Users 33G Mar 10 02:49 pref_0_tmp_7; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 02:49 pref_0_tmp_7.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 02:49 pref_0_tmp_7.index; ```. ## Your Environment; Conda installation: showing mmseqs 13.45111. Running SGE. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 48; On-line CPU(s) list: 0-47; Thread(s) per core: 2; Core(s) per socket: 12; Socket(s): 2; NUMA node(s): 2; Vendor ID: GenuineIntel; CPU family: 6; Model: 63; Model name: Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz; Stepping: 2; CPU MHz: 1736.914; BogoMIPS: 5004.72; Virtualization: VT-x; L1d cache: 32K; L1i cache: 32K; L2 cache: 256K; L3 cache: 30720K; NUMA node0 CPU(s): 0-11,24-35; NUMA node1 CPU(s): 12-23,36-47",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:42019,cache,cache,42019,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,4,['cache'],['cache']
Performance,"Weight file name ; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 1; linclust uniref90-DB-wwmj tmp//16518381706844811497/clu_redundancy tmp//16518381706844811497/linclust --cluster-mode 3 --max-iterations 1000 --similarity; -type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignme; nt-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp; -bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,co; ntext:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.; 000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 -; -ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-ca",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:3786,load,load-mode,3786,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['load'],['load-mode']
Performance,"Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 100.00% 79.74K 2s 947ms ; Index table: Masked residues: 1262029; Index table: fill; [=================================================================] 100.00% 79.74K 4s 125ms ; Index statistics; Entries: 25991856; DB size: 637 MB; Avg k-mer size: 0.406123; Top 10 k-mers; VMEYLV 439; QRLRML 421; LYDMNY 403; TFDAFS 367; YRVLYR 257; VAESEW 236; TGYKLS 202; GEVLSS 200; VTSSSS 199; TFDAFT 194; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Time for merging to human.idx: 0h 0m 0s 0ms; Time for processing: 0h 0m 11s 156ms; ```. expandaln:; ```; expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95 . MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Expansion mode 0; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Max sequence length 65535; Score bias 0; Compositional bias 1; Compositional bias 1; E-value threshold inf; Seq. id. threshold 0; Coverage threshold 0; Coverage mode 0; Pseudo count mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Expand filter clusters 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.95; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Preload mode 1; Compressed 0; Threads 4; Verbosity 3. Index version: 16; Generated by: 8799829d213f31b647fc69e0572a0c828c5aaf63; ScoreMatrix: VTML80.out; Index version: 16; Generated by: 8799829d213f31b647fc69e0572a0c828c5aaf63; ScoreMatrix: VTML80.out; Invalid database ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616:4978,load,load-mode,4978,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616,1,['load'],['load-mode']
Performance,"[mmseqs2.log.txt](https://github.com/soedinglab/MMseqs2/files/3654776/mmseqs2.log.txt); ## Expected Behavior; To be faster. ## Current Behavior; It takes the double of time than Diamond to perform the same task with similar results over the same query and target database. ## Steps to Reproduce (for bugs); time diamond blastx -d /d/Databases/Kegg/sram/kegg -q MOMZ_moomz1_200m.fna -o MO; MZ_moomz1_200m.kegg.raw --sensitive --max-target-seqs 1; real 32m12.614s; user 1091m19.492s; sys 34m5.028s. time mmseqs easy-search MOMZ_moomz1_200m.fna /d/Databases/Kegg/sram/mmseqs/ke; gg mmseqs_results2.m8 tmp --start-sens 1 --sens-steps 3 -s 6 --strand 2 --max-seqs 1; real 56m26.161s; user 2146m1.584s; sys 37m49.528s. ## Your Environment; MMseqs2 Version: 4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; 40 cores Intel(R) Xeon(R) CPU E5-2650 v3 @ 2.30GHz; 128 GB main memory; Query Fasta: 516296 metagenomic sequences (454 FLX), average seq size ~400bp; No other processes were running during the tests (besides those elementary to the SO)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231:189,perform,perform,189,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231,1,['perform'],['perform']
Performance,"a.gz IMG_tax_db/IMG_tax_db; createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loading nodes file ... Done, got 6986 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```. the job was submitted with teh following batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/IMG_VR_2022_12_19_7.1/IMG_tax_db; export OTU_dir=/home/bbrow6/vaginal_virome/Run_021723/identified_viral_sequences/OTUs/geNomad/genomad_output_1000bps/clustered_spades_cross_assembly_contigs_gt1000bps_summary/. source activate mmseqs2; module load OpenMPI. mmseqs easy-taxonomy $OTU_dir/clustered_spades_cross_assembly_contigs_gt1000bps_virus.fna $DBs/IMG_tax_db vag_taxonomy_results_IMG tmp -e 1e-5 -s 6 --blacklist ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:1995,Load,Loading,1995,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['Load'],['Loading']
Performance,"ab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=this@entry=0x7fffffffd290, __position=__position@entry=...); at /usr/include/c++/9/bits/vector.tcc:440; #11 0x000000000060c68b in std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=0x7f",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/666:2620,optimiz,optimized,2620,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666,2,['optimiz'],['optimized']
Performance,"adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Database size: 51992 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 51.99K 0s 346ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 62ms; Sort by rep. sequence 0h 0m 0s 19ms; Time for fill: 0h 0m 0s 27ms; Time for merging to pref: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 567ms; rescorediagonal shrimpDB shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref tmp97/17949317426677965256/linclust/6279588666755106708/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 51.99K 0s 101ms; Time for merging to pref_rescore1: 0h 0m 0s 185ms================>] 99.62% 51.80K eta 0s; Time for processing: 0h 5m 0s 451ms; clust shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref_rescore1 tmp97/17949317426677965256/linclust/6279588666755106708/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Clustering mode: Set Cover; [=================================================================] 100.00% 51.99K 0s 51ms; Sort entries; Find missing connections; Found 39230 new connections.; Reconstruct initial order; [=================================================================] 100.00% 51.99K 0s 55ms; Add missing connections; [=================================================================] 100.00% 51.99K 0s 6ms. Time for read in:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:5999,load,load-mode,5999,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['load'],['load-mode']
Performance,"age 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	1; Search steps 	3; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 1.000 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 8408 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8408; Target db start 1 to 756891; [=================================================================] 100.00% 8.41K 0s 981ms . 0.020249 k-mers per position; 72 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 8273 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 10ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:4807,load,load-mode,4807,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['load'],['load-mode']
Performance,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/567:4374,Perform,Performing,4374,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567,14,['Perform'],['Performing']
Performance,"an.db; Data file is fam.db; Start writing file to fam.tsv; Done.; ```. ## Context. These 2 sequences come from a vibro cholerae genome. . ## Your Environment. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): GITDIR-NOTFOUND (corresponds to the last release: 2-23394). * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled using GNU Make 3.81 and cmake version 2.8.12.2. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: self-compiled using GNU Make 3.81 and cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; less /proc/cpuinfo; processor : 0; vendor_id : AuthenticAMD; cpu family : 21; model : 2; model name : AMD Opteron(tm) Processor 6344 ; stepping : 0; cpu MHz : 2599.862; cache size : 2048 KB; physical id : 0; siblings : 12; core id : 0; cpu cores : 6; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext; fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1; sse4_2 popcnt aes xsave avx f16c lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt ; lwp fma4 tce nodeid_msr tbm topoext perfctr_core perfctr_nb cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassis; ts pausefilter pfthreshold bmi1; bogomips : 5199.72; TLB size : 1536 4K pages; clflush size : 64; cache_alignment : 64; address sizes : 48 bits physical, 48 bits virtual; power management: ts ttp tm 100mhzsteps hwpstate cpb eff_freq_ro; ```; * Operating system and version:; ```; $uname -a; Linux XXX 2.6.32-696.20.1.el6.x86_64 #1 SMP Fri Jan 26 17:51:45 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:18724,cache,cache,18724,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['cache'],['cache']
Performance,"and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:3908,load,load-mode,3908,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['load'],['load-mode']
Performance,"appingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $conda create --prefix /project/winter_pea_endophytes_2022/MMseqs; $source activate /project/winter_pea_endophytes_2022/MMseqs; $conda install -c conda-forge -c bioconda mmseqs2; and run it as environment; $conda activate /project/winter_pea_endophytes_2022/MMseqs. Server:; ceres.scinet.usda; resources allocation; $salloc -p short -N 2 -n 80 -t 12:00:00",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/689:2038,load,load,2038,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689,1,['load'],['load']
Performance,"arch type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: b4c1bc7cf89bc0bd577c5a9d3c1f7bedc1f74152; * Which MMseqs version: f5b588be54de35876eff90f3694b67e1d00856ef; * Server specifications: Intel(R) Xeon(R) W-2255 CPU, 64GB RAM; * Operating system and version: Ubuntu20 LTS. [nohupout.txt](https://github.com/soedinglab/MMseqs2/files/10728242/nohupout.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:5032,optimiz,optimize,5032,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['optimiz'],['optimize']
Performance,"atch illumina metagenomic reads against the Refseq proteins database. ; This is the workflow I have followed so far; - create mmseqs db for the target (Refseq here) ; mmseqs createdb RSComplete/*.gz mmseqsRefSeqCompleteDB; - create an index for the target db (in a temp folder ""tmp""); mmseqs createindex RefSeqCompleteDB tmp ; - load the target into memory for repeated searching; mmseqs touchdb mmseqsRefSeqCompleteDB. And then for a set of query files: ; - create mmseqs db for the query file; mmseqs createdb $file $outpath/$querydb; - search against the target db loaded in memory; mmseqs search $outpath/$querydb $db $outpath/$result_db tmp --db-load-mode 3 --threads 2 --max-seqs 25 -s 1 -a -e 1e-5. Is this the correct way of processing multiple searches using mmseqs? Is there any way to speed up searches for large query sets and large database files?. Any information would be greatly appreciated.; Thanking you,. regards,; Dhwani Desai; ## Current Behavior; It does not seem to make a difference to the runtime when I try it with or without the --db-load-mode option. Is there a way to speed up these kinds of repeated searches?; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 73ce3b88754987122b4fc5e69a721beeecd677d0. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; installation (using Git):; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2; mkdir build; cd build; cmake -DCMAKE_BU",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214:1154,load,load-mode,1154,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214,1,['load'],['load-mode']
Performance,"ay:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1508,load,loading,1508,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['load'],['loading']
Performance,"b --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loading nodes file ... Done, got 6986 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```. the job was submitted with teh following batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/IMG_VR_2022_12_19_7.1/IMG_tax_db; export OTU_dir=/home/bbrow6/vaginal_virome/Run_021723/identified_viral_sequences/OTUs/geNomad/genomad_output_1000bps/clustered_spades_cross_assembly_contigs_gt1000bps_summary/. source activate mmseqs2; module load OpenMPI. mmseqs easy-taxonomy $OTU_dir/clustered_spades_cross_assembly_contigs_gt1000bps_virus.fna $DBs/IMG_tax_db vag_taxonomy_results_IMG tmp -e 1e-5 -s 6 --blacklist """" --tax-lineage 1; ```. ## MMseqs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:2040,Load,Loading,2040,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['Load'],['Loading']
Performance,"base created based on a `seqdb` created from UniProt sequences. ## Current Behavior. Program crashed with `core dumped` error and reports `Error: createbintaxonomy failed`. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; mmseqs createdb ""uniprot_2024_03.fasta"" seqdb; ```; then; ```; mmseqs createtaxdb seqdb tmp ; ```. We attempted to vary `--tax-db-mode`, `--tax-mapping-mode`, and `--threads` parameters but observed the same behavior. Any help would be highly appreciated. We are able to reproduce this issue with a minimal database containing 1000 sequences. ## MMseqs Output (for bugs). ```; > mmseqs createtaxdb seqdb tmp ; createtaxdb seqdb tmp . MMseqs Version: 15.6f452; NCBI tax dump directory; Taxonomy mapping file ; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 48; Verbosity 3. Loading nodes file ... Done, got 2601214 nodes; Loading merged file ... Done, added 79743 merged nodes.; Loading names file ... Done; mmseqs: malloc.c:2379: sysmalloc: Assertion `(old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)' failed.; Aborted (core dumped); Error: createbintaxonomy failed; ```. ## Context. We are trying to create a custom taxonomy database for MSA, such that the resulting .a3m files contain taxonomy information. Is a taxonomy database already available for download for uniprot_2024_03 for similar releases?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of syst",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871:1026,Load,Loading,1026,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871,1,['Load'],['Loading']
Performance,base size: 2 type: Nucleotide; Calculation of alignments; [=================================================================] 4 0s 0ms; Time for merging to aln: 0h 0m 0s 0ms; 4 alignments calculated; 4 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 17ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/input_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; offsetalignment tmp/9586069750715556969/query tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/target tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/aln tmp/9586069750715556969/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 16 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 0ms; Writing results to: tmp/9586069750715556969/result; [=================================================================] 2 0s 0ms. Time for merging to result: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; test.fa.easy-,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:10718,load,load-mode,10718,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['load'],['load-mode']
Performance,"bs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | prefilter /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 5.7 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Query database size: 1 type: Nucleotide; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Target database size: 10754 type: Nucleotide; mmseqs-web-worker_1 | Process prefiltering step 1 of 1; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | k-mer similarity threshold: 0; mmseqs-web-worker_1 | Starting prefiltering scores calculation (step 1 of 1); mmseqs-web-worker_1 | Query db start 1 to 1; mmseqs-web-worker_1 | Target db start 1 to 10754; mmseqs-web-worker_1 | [=================================================================] 1 0s 4ms; mms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:23034,load,load-mode,23034,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['load'],['load-mode']
Performance,"c db (colabfold_envdb_202108 or bfd_mgy_colabfold, the former is preferred); ; uniref_db = Path(""/store/colabfold/db/uniref30_2202_db""); template_db = Path(""/store/colabfold/db/pdb70_220313""); if filter:; # 0.1 was not used in benchmarks due to POSIX shell bug in line above; # EXPAND_EVAL=0.1; align_eval = 10; qsc = 0.8; max_accept = 100000. used_dbs = [uniref_db]; if use_templates:; used_dbs.append(template_db); if use_env:; used_dbs.append(metagenomic_db). for db in used_dbs:; if not dbbase.joinpath(f""{db}.dbtype"").is_file():; raise FileNotFoundError(f""Database {db} does not exist""); if (; (; not dbbase.joinpath(f""{db}.idx"").is_file(); and not dbbase.joinpath(f""{db}.idx.index"").is_file(); ); or os.environ.get(""MMSEQS_IGNORE_INDEX"", False); ):; logger.info(""Search does not use index""); db_load_mode = 0; dbSuffix1 = ""_seq""; dbSuffix2 = ""_aln""; dbSuffix3 = """"; else:; dbSuffix1 = "".idx""; dbSuffix2 = "".idx""; dbSuffix3 = "".idx"". # fmt: off; # @formatter:off; search_param = [""--num-iterations"", ""3"", ""--db-load-mode"", str(db_load_mode), ""-a"", ""-e"", ""0.1"", ""--max-seqs"", ""10000""]; search_param += [""--prefilter-mode"", str(prefilter_mode)]; if s is not None:; search_param += [""-s"", ""{:.1f}"".format(s)]; else:; search_param += [""--k-score"", ""'seq:96,prof:80'""]. filter_param = [""--filter-msa"", str(filter), ""--filter-min-enable"", ""1000"", ""--diff"", str(diff), ""--qid"", ""0.0,0.2,0.4,0.6,0.8,1.0"", ""--qsc"", ""0"", ""--max-seq-id"", ""0.95"",]; expand_param = [""--expansion-mode"", ""0"", ""-e"", str(expand_eval), ""--expand-filter-clusters"", str(filter), ""--max-seq-id"", ""0.95"",]. run_mmseqs(mmseqs, [""search"", base.joinpath(""qdb""), dbbase.joinpath(uniref_db), base.joinpath(""res""), base.joinpath(""tmp""), ""--threads"", str(threads)] + search_param); #queryDB 데이터베이스에서 uniref30_2103_db 데이터베이스를 대상으로 검색을 수행합니다.; #검색 결과는 res 디렉토리에 저장되고, 임시 파일은 tmp 디렉토리에 저장됩니다; ; run_mmseqs(mmseqs, [""mvdb"", base.joinpath(""tmp/latest/profile_1""), base.joinpath(""prof_res"")]); run_mmseqs(mmseqs, [""lndb"", base.joinpath(""qdb_h""),",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:2636,load,load-mode,2636,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['load'],['load-mode']
Performance,"c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1365,load,load,1365,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['load'],['load']
Performance,"clu_tmp/9745907189971917257/pref_filter1 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_filter2 --filter-file All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/order_redundancy --threads 56 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 35.67M 56s 656ms; Time for merging to pref_filter2: 0h 0m 11s 819ms; Time for processing: 0h 1m 22s 652ms; rescorediagonal All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_filter2 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 35.67M 9s 733ms; Time for merging to pref_rescore2: 0h 0m 12s 355ms; Time for processing: 0h 0m 38s 935ms; align All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore2 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:8372,load,load-mode,8372,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['load'],['load-mode']
Performance,"d clustering on a database:; `mmseqs cluster pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --cascaded -t 24`; but the program doesn't recognize --cascaded option, although it is mentioned on the wikipage. I found out another option from the '-h' help: --single-step-clustering and set it up to false:; `mmseqs cluster pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --threads 24 --single-step-clustering false`; and I get:. > Program call:; > pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --threads 24 --single-step-clustering false; > ; > MMseqs Version: GITDIR-NOTFOUND; > Sub Matrix blosum62.out; > Sensitivity 4; > K-mer size 0; > K-score 2147483647; > Alphabet size 21; > Max. sequence length 32000; > Max. results per query 20; > Offset result 0; > Split DB 0; > Split mode 2; > Split Memory Limit 0; > Coverage threshold 0.8; > Coverage Mode 0; > Compositional bias 1; > Diagonal Scoring 1; > Mask Residues 1; > Minimum Diagonal score 15; > Include identical Seq. Id. false; > Spaced Kmer 1; > No preload false; > Early exit false; > Pseudo count a 1; > Pseudo count b 1.5; > Threads 24; > Verbosity 3; > Add backtrace false; > Alignment mode 3; > E-value threshold 0.005; > Seq. Id Threshold 0; > Realign hit false; > Max Reject 2147483647; > Max Accept 2147483647; > Cluster mode 1; > Max depth connected component 1000; > Similarity type 2; > Single step clustering false; > Cascaded clustering steps 3; > Remove Temporary Files false; > Sets the MPI runner; > Kmer per sequence 20; > Shift hash 5; > Rescore mode 0; > Remove hits by seq.id. and coverage false; > In substitution scoring mode, performs global alignment along the diagonal false; > ; > Set cluster settings automatic to s=6; > Set cluster iterations to 3; > Please provide \<sequenceDB\> \<outDB\> \<tmp\>. I use self compiled version, cloned from the git yesterday (20180220).; `mmseqs`. > MMseqs2 Version: GITDIR-NOTFOUND. So how to run cascaded clustering? I'm also not sure whether missing version number means something went wrong...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/65:1612,perform,performs,1612,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/65,1,['perform'],['performs']
Performance,"d component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterlinclust ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/clu_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:9887,load,load-mode,9887,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"database size: 1604546 type: Nucleotide; Target database size: 802273 type: Nucleotide; Calculation of alignments; [=================================================================] 1.60M 22m 53s 435ms; Time for merging to aln_gapped: 0h 0m 0s 903ms; 70826259 alignments calculated; 3445894 sequence pairs passed the thresholds (0.048653 of overall calculated); 2.147582 hits per query sequence; Time for processing: 0h 23m 4s 596ms; concatdbs tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/aln_gapped tmp/16479300059278292880/aln --preserve-keys --take-larger-entry --threads 112 --compressed 0 -v 3 . [=================================================================] 1.60M 0s 217ms; [=================================================================] 1.60M 0s 385ms; Time for merging to aln: 0h 0m 1s 623ms; Time for processing: 0h 0m 3s 354ms; offsetalignment tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/aln tmp/16479300059278292880/aln_off --chain-alignments 0 --merge-query 1 --search-type 3 --threads 112 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 560ms; Writing results to: tmp/16479300059278292880/aln_off; [Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; I",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:16867,load,load-mode,16867,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['load'],['load-mode']
Performance,"db nr_rep_seq_db tmp --tax-mapping-file /data/clustered_nr/nr_rep_seq_to_taxid.map -v 3 . MMseqs Version: 	2fad714b525f1975b62c2d2b5aff28274ad57466; NCBI tax dump directory	; Taxonomy mapping file 	/data/clustered_nr/nr_rep_seq_to_taxid.map; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	20; Verbosity 	3. Download taxdump.tar.gz. 02/01 11:29:59 [NOTICE] Downloading 1 item(s); [#b8b044 0B/0B CN:1 DL:0B] ; 02/01 11:30:01 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; [#b8b044 51MiB/61MiB(84%) CN:1 DL:10MiB] ; 02/01 11:30:08 [NOTICE] Download complete: tmp/taxdump.tar.gz. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; b8b044|OK | 9.1MiB/s|tmp/taxdump.tar.gz. Status Legend:; (OK):download completed.; Loading nodes file ... Done, got 2550743 nodes; Loading merged file ... Done, added 75930 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```; ## Context; I want to search some query sequences locally against a clustered version of the NR database. I downloaded the clustered database and taxonomy files (nr_cluster_taxid_formatted_final.tsv.gz, nr_rep_seq.fasta.gz) from [here](https://osf.io/tejwd/), which was created as per: https://research.arcadiascience.com/pub/resource-nr-clustering/release/3. I then processed the files like so:. ```; gunzip -c nr_cluster_taxid_formatted_final.tsv.gz | cut -f1,2 > nr_rep_seq_to_taxid.map; mmseqs createdb nr_rep_seq.fasta.gz nr_rep_seq_db; ```. After these completed successfully, I tried to create the taxdb as per the above:. ```; mmseqs createtaxdb nr_rep_seq_db tmp --tax-mapping-file '/data/clustered_nr/nr_rep_seq_to_taxid.map' -v 3; ```. But the job was killed. Questions:; * Was it likely killed because of exhausting my available RAM? ; - If so, is there a way to restrict it during taxdb creation? I tried out `--split-memory-limit 50G` ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/811:1670,Load,Loading,1670,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811,1,['Load'],['Loading']
Performance,"db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loading nodes file ... Done, got 6986 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```. the job was submitted with teh following batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/IMG_VR_2022_12_19_7.1/IMG_tax_db; export OTU_dir=/home/bbrow6/vaginal_virome/Run_021723/identified_viral_sequences/OTUs/geNomad/genomad_output_1000bps/clustered_spades_cross_assembly_contigs_gt1000bps_summary/. source activate mmseqs2; module load OpenMPI. mmseqs easy-taxonomy $OTU_dir/clustered_spades_cross_assembly_contigs_gt1000bps_virus.fna $DBs/IMG_tax_db vag_taxonomy_results_IMG tmp -e 1e-5 -s 6 --blacklist """" --tax-lineage 1; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:2093,Load,Loading,2093,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['Load'],['Loading']
Performance,"dd orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 3; Start sensitivity 4; Search iterations 3 [5/1999]; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter search_results/qdb db/uniref30_2103_db.idx search_results/tmp/12005814431969335264/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nuc; l:nucleotide.out -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 8 --split-mode 2 --split-memory-limit 0; -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kme; r-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 72 --compressed 0 -v 3. Index version: 16; Generated by: b768f48f0bd73688b6a68132159a97f7b6310f03; ScoreMatrix: VTML80.out; Query database size: 190 type: Aminoacid; Estimated memory consumption: 148G; Target database size: 29291635 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 96; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 190; Target db start 1 to 29291635; ^CTraceback (most recent call last): ] 37.57% 72 eta 0s; </pre>. I had to stop it as mmseqs took hours without progress. ## Context; I am quite puzzled what I should do to figure this out. ; The machine is located on our cluster, so there is enough disk space and memory.; I tried to check the process status, and it is always in the `D` status with 100-200% CPU usage ( based on `htop` outputs).; Not sure how I can speed things up at this ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517:3949,load,load-mode,3949,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517,1,['load'],['load-mode']
Performance,"de 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward frames 	1,2,3; > Reverse frames 	1,2,3; > Translation table 	1; > Translate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 446 type: Aminoacid; > Target split mode. Searching through 12 splits; > Estimated memory consumption: 91G; > Target database size: 230328648 type: Aminoacid; > Process prefiltering step 1 of 12; > ; > Index table k-mer threshold: 122 at k-mer size 7 ; > Index table: counting k-mers; > tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/blastp.sh : ligne 99 : 10291 Instruction non permise $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; > Error: Prefilter died. ## Context. TrEMBL installed using the mmseqs databases command. ## Your Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. Operating system and version:; Lin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/564:3228,load,load-mode,3228,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564,1,['load'],['load-mode']
Performance,"e for index table init: 0h 0m 5s 872ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 500; Target db start 1 to 20000; [=================================================================] 100.00% 500 2s 36ms. 296.967038 k-mers per position; 19293 DB matches per sequence; 0 overflows; 137 sequences passed prefiltering per query sequence; 113 median result list length; 1 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 162ms; Time for processing: 0h 0m 11s 426ms; align tmp/18110643841744502873/query tmp/18110643841744502873/target tmp/18110643841744502873/search_tmp/5440497380282616509/pref_0 tmp/18110643841744502873/result --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-cor r-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realig n-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 500 type: Aminoacid; Target database size: 20000 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 500 23s 390ms; Time for merging to result: 0h 0m 0s 44ms; 68875 alignments calculated; 12897 sequence pairs passed the thresholds (0.187252 of overall calculated); 25.794001 hits per query sequence; Time for processing: 0h 0m 24s 118ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/pref_0 -v 3. Time for processing: 0h 0m 0s 12ms; rmdb tmp/18110643841744502873/se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:6700,load,load-mode,6700,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['load'],['load-mode']
Performance,"e order of 3 to 4million nucleotide sequences. When I subset the sequences to about 200K sequences, easy-cluster runs to completion. ## Your Environment. I am running this on an AWS EC2 instance of type g4dn (128GB RAM). Here you go:. $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) Platinum 8259CL CPU @ 2.50GHz; CPU family: 6; Model: 85; Thread(s) per core: 2; Core(s) per socket: 16; Socket(s): 1; Stepping: 7; BogoMIPS: 4999.98; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht; syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid ap; erfmperf tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt; tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch pti fsgsbase; tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx avx512f avx512dq rdseed adx smap clflushopt clwb avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves ida arat pku ospke avx512_vnni; Virtualization features: ; Hypervisor vendor: KVM; Virtualization type: full; Caches (sum of all): ; L1d: 512 KiB (16 instances); L1i: 512 KiB (16 instances); L2: 16 MiB (16 instances); L3: 35.8 MiB (1 instance); NUMA: ; NUMA node(s): 1; NUMA node0 CPU(s): 0-31; Vulnerabilities: ; Gather data sampling: Unknown: Dependent on hypervisor status; Itlb multihit: KVM: Mitigation: VMX unsupported; L1tf: Mitigation; PTE Inversion; Mds: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Meltdown: Mitigation; PTI; Mmio stale data: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Retbleed: Vulnerable; Spec rstack overflow: Not affected; Spec store bypass: Vulnerable; Spectre v1: Mitigation; usercopy/swapgs barriers and __user pointer sanitization; Sp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822:3097,Cache,Caches,3097,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822,1,['Cache'],['Caches']
Performance,"e score and coverage; Query database size: 8408 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.41K 0s 647ms ; Time for merging to aln_0: 0h 0m 0s 8ms. 2061 alignments calculated.; 2061 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.245124 hits per query sequence.; Time for processing: 0h 0m 1s 887ms; createsubdb tmp/16138406286044646862/order_0 IP_DB/IP_DB tmp/16138406286044646862/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; prefilter tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 6.5 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 8273 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 105; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8273; Target db start 1 to 756891; [=================================================================] 100.00% 8.27K 1s 888ms . 7.501658 k-mers per position; 14614 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 5 sequences passed prefiltering per query sequence; 0 median result list length; 7780 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 6ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:7448,load,load-mode,7448,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['load'],['load-mode']
Performance,"e size: 8408 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8408; Target db start 1 to 756891; [=================================================================] 100.00% 8.41K 0s 981ms . 0.020249 k-mers per position; 72 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 8273 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 10ms; Time for processing: 0h 0m 11s 757ms; align IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 tmp/16138406286044646862/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 8408 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.41K 0s 647ms ; Time for merging to aln_0: 0h 0m 0s 8ms. 2061 alignments calculated.; 2061 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.245124 hits per query sequence.; Time for processing: 0h 0m 1s 887ms; createsubdb tmp/16138406286044646862/order_0 IP_DB/IP_DB tmp/16138406286044646862/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; prefilter tmp/16138406286044646862/input_0 Cryptic_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:6109,load,load-mode,6109,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['load'],['load-mode']
Performance,e: Nucleotide; Target database size: 19825 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 39.65K 11s 920ms; Time for merging to aln_gapped: 0h 1m 40s 131ms; 2105218 alignments calculated; 1620 sequence pairs passed the thresholds (0.000770 of overall calculated); 0.040858 hits per query sequence; Time for processing: 0h 5m 12s 297ms; concatdbs tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/aln_gapped tmp97/17949317426677965256/aln --preserve-keys --take-larger-entry --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 39.65K 0s 67ms; [=================================================================] 100.00% 39.65K 0s 98ms; Time for merging to aln: 0h 0m 0s 389ms; Time for processing: 0h 0m 0s 669ms; offsetalignment tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/aln tmp97/17949317426677965256/aln_off --chain-alignments 0 --merge-query 1 --search-type 3 --threads 20 --compressed 0 --db-load-mode 0 -v 3. Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 3ms; Writing results to: tmp97/17949317426677965256/aln_off; [=================================================================] 100.00% 51.99K 0s 153ms. Time for merging to aln_off: 0h 0m 0s 136ms; Time for processing: 0h 3m 20s 468ms; clust tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/aln_off tmp97/17949317426677965256/clu --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Clustering mode: Set Cover; [=================================================================] 100.00% 19.83K 0s 53ms; Sort entries; Find missing connections; Found 49253 new conne,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:17500,load,load-mode,17500,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['load'],['load-mode']
Performance,e; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 472779 sequences with 0 size result lists; Time for merging to pref_0_tmp_7: 0h 0m 34s 449ms; Time for merging to pref_0_tmp_7_tmp: 0h 1m 30s 262ms; Merging 8 target splits to pref_0; Preparing offsets for merging: 0h 1m 18s 365ms; [=================================================================] 100.00% 55.24M 8m 35s 231ms; ```. ### htop screen grab; ![Screen Shot 2021-03-10 at 12 16 09 PM](https://user-images.githubusercontent.com/14060382/110706285-7c9db380-81ac-11eb-8e42-efd46778a3ce.png). ### gdb output on an S status prefilter process:; ```; gdb -p 9878. Attaching to process 9878. warning: process 9878 is a cloned process; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/mmseqs...(no debugging symbols found)...done.; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Load,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:32852,Load,Loaded,32852,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,"e; 1 overflows; 26270 sequences passed prefiltering per query sequence; 26950 median result list length; 0 sequences with 0 size result lists; Time for merging to pref: 0h 0m 0s 15ms; Time for processing: 0h 8m 44s 825ms; result2stats tmp/5233442526903138997/profileDB Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/pref tmp/5233442526903138997/pref_count.tsv --stat linecount --tsv --threads 16 --compressed 0 -v 3 . [=================================================================] 100.00% 75.23K 1s 543ms ; Time for merging to pref_count.tsv: 0h 0m 0s 20ms; Time for processing: 0h 0m 1s 810ms; align tmp/5233442526903138997/profileDB Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/pref tmp/5233442526903138997/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 1 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score and coverage; Query database size: 75233 type: Aminoacid; Target database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 41m 40s 149ms ; Time for merging to aln: 0h 0m 0s 11ms; 1976417423 alignments calculated; 672599536 sequence pairs passed the thresholds (0.340313 of overall calculated); 8940.219727 hits per query sequence; Time for processing: 1h 41m 41s 324ms; rmdb tmp/5233442526903138997/pref -v 3 . Time for processing: 0h 0m 0s 616ms; mvdb tmp/5233442526903138997/aln tmp/5233442526903138997/aln_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:6086,load,load-mode,6086,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['load'],['load-mode']
Performance,"e_cutoff/resultDB no_e_cutoff/resultDB_no_e_cutoff.m8 >&1 | tee -a no_e_cutoff/no_e_cutoff.out; rm -r tmp; mmseqs search queryDB targetDB 30/resultDB tmp -e 1e-30 --search-type 3 >&1 | tee 30/30.out; mmseqs convertalis queryDB targetDB 30/resultDB 30/resultDB_30.m8 >&1 | tee -a 30/30.out; rm -r tmp; mmseqs search queryDB targetDB 50/resultDB tmp -e 1e-50 --search-type 3 >&1 | tee 50/50.out; mmseqs convertalis queryDB targetDB 50/resultDB 50/resultDB_50.m8 >&1 | tee -a 50/50.out; ```. ## MMseqs Output (for bugs); The outputs are contained in the .zip above. ## Context; I'm fairly certain that the problem is being caused due to the fact that 1e-50 when convereted to float will become 0. Therefore the e value will be set to 0. This means that all results are filtered out of the alignment. If this is not fixable, it would at least be extremely helpful to have a strong warning message. It took me a day to break this all down and find out what the cause was. Filter with an e-value of 1e-50 is not uncommon. Especially during taxonomy matches (my actual goal) to for example perform QC on raw seq data. ## Your Environment; I installed using conda:; ```; # Name Version Build Channel; mmseqs2 12.113e3 h2d02072_2 bioconda; ```; The running server:; ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 256; On-line CPU(s) list: 0-254; Off-line CPU(s) list: 255; Thread(s) per core: 1; Core(s) per socket: 64; Socket(s): 2; NUMA node(s): 2; Vendor ID: AuthenticAMD; CPU family: 23; Model: 49; Model name: AMD EPYC 7702 64-Core Processor; Stepping: 0. NAME=""Ubuntu""; VERSION=""18.04.4 LTS (Bionic Beaver)""; ID=ubuntu; ID_LIKE=debian; PRETTY_NAME=""Ubuntu 18.04.4 LTS""; VERSION_ID=""18.04""; HOME_URL=""https://www.ubuntu.com/""; SUPPORT_URL=""https://help.ubuntu.com/""; BUG_REPORT_URL=""https://bugs.launchpad.net/ubuntu/""; PRIVACY_POLICY_URL=""https://www.ubuntu.com/legal/terms-and-policies/privacy-policy""; VERSION_CODENAME=bionic; UBUNTU_CODENAME=bionic; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/399:2026,perform,perform,2026,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399,1,['perform'],['perform']
Performance,easy-clust and MPI-mode scalability,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/331:24,scalab,scalability,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/331,1,['scalab'],['scalability']
Performance,"eb-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | rmdb /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/aln_merge -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | convertalis /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/result /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/alis_pdb_protein_sequence --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 0 --threads 2 --compressed 0 -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | [=================================================================] 1 0s 1ms; docker-compose-mmseqs-web-worker-1 | Time for merging to alis_pdb_protein_sequence: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 3ms; docker-compose-mmseqs-web-worker",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717:8615,load,load-mode,8615,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717,1,['load'],['load-mode']
Performance,"ed the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15-6f452; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Loaded as a module on a cluster.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: Unsure. I ran `lscpu` on a login node and got what is shown below, but the memory and CPUs that I had for the job were specified in the slurm job script shown above. ```; lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) CPU E5-2667 v4 @ 3.20GHz; CPU family: 6; Model: 79; Thread(s) per core: 2; Core(s) per socket: 8; Socket(s): 2; Stepping: 1; CPU(s) scaling MHz: 100%; CPU max MHz: 3200.0000; CPU min MHz: 1200.0000; BogoMIPS: 6384.78; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx; pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 d; s_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16; c rdrand lahf_lm abm 3dnowprefetch epb cat_l3 cdp_l3 invpcid_single intel_ppin ssbd rsb_ctxsw ibrs ibpb stibp tpr_shadow vnmi flexp; riority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm rdt_a rdseed adx smap intel_pt xsaveopt cqm_llc c; qm_occup_llc cqm_mbm_total cqm_mbm_local dtherm arat pln pts md_clear spec_ctrl intel_stibp flush_l1d; Virtualization features:; Virtualization: VT-x; Caches (sum of all):; L1d: 512 KiB (16 instances); L1i: 512 KiB (16 instances); L2: 4 MiB (16 instances); L3: 50 MiB (2 instances); NUMA:; NUMA node(s): 2; NUMA node0 CPU(s): 0-7,16-23; NUMA node1 CPU(s): 8-15,24-31; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838:3773,Cache,Caches,3773,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838,1,['Cache'],['Caches']
Performance,"ed-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 31.32K 0s 42ms; Time for merging to pref_rescore2: 0h 0m 0s 90ms; Time for processing: 0h 0m 0s 772ms; align ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore2 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 31321 type: Aminoacid; Target database size: 31321 type: Aminoacid; Calculation of alignments; [=================================================================] 31.32K 3s 713ms; Time for merging to aln: 0h 0m 0s 107ms; 53166 alignments calculated; 45707 sequence pairs passed the thresholds (0.859704 of overall calculated); 1.459308 hits per query sequence; Time for processing: 0h 0m 4s 203ms; clust ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/aln ./mmseqs_output",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:16249,load,load-mode,16249,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"elevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; L1i cache: 32K; L2 cache: 4096K; L3 cache: 16384K; NUMA node0 CPU(s): 0-37; NUMA node1 CPU(s): 38-75; NUMA node2 CPU(s): 76-113; NUMA node3 CPU(s): 114-151; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:4412,cache,cache,4412,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,4,['cache'],['cache']
Performance,"emory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . Database size: 440656032 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 440.66M 1m 58s 106ms; Sort kmer 0h 1m 9s 431ms; Sort by rep. sequence 0h 0m 39s 418ms; Time for fill: 0h 2m 31s 613ms; Time for merging to pref: 0h 0m 0s 1ms; Time for processing: 0h 9m 8s 726ms; rescorediagonal All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 440.66M 7m 9s 976ms; Time for merging to pref_rescore1: 0h 2m 33s 403ms; Time for processing: 0h 11m 51s 610ms; clust All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore1 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 56 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 1m 32s 562ms. Size of the sequence database: 440656032; Size of the alignment database: 440656032; Number of clusters: 35665237. Writing results 0h 0m 11s 300ms; Time for merging to pre_clust: 0h 0m 0s 0ms; Time for processing: 0h 2m 42s 666ms; createsubdb All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/order_redundancy All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:5820,load,load-mode,5820,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['load'],['load-mode']
Performance,"emory. PS: Y'all are ANGELS for keeping up with all the users and issues listed for mmseqs. Seriously grateful, hoping you have ample funding to keep the devs happy... . ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs easy-cluster contigs.fasta contigs99 contigs99.tmp --min-seq-id 0.99 -c 0.6 --cov-mode 1. in addition, i think these posts are also relevant ; https://github.com/soedinglab/MMseqs2/issues/617; https://github.com/soedinglab/MMseqs2/issues/608. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMseqs Version: 7.4e23d; Sub Matrix blosum62.out; Rescore mode 0; Remove hits by seq.id. and coverage false; E-value threshold 0.001; Coverage threshold 0.6; Coverage Mode 1; Seq. Id Threshold 0.99; Seq. Id. Mode 0; Include identical Seq. Id. false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Preload mode 0; Threads 128; Verbosity 3. Prefilter database: contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/pref; Query database: contigs99.tmp/13034246008736284953/input; Touch data file contigs99.tmp/13034246008736284953/input ... Done.; Target database: contigs99.tmp/13034246008736284953/input; Result database: contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/pref_rescore1; ...............................................; Done.; Time for merging files: 0h 0m 0s 679ms; Time for processing: 0h 0m 1s 529ms; Program call:; clust contigs99.tmp/13034246008736284953/input contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/pref_rescore1 contigs99.tmp/13034246008736284953/clu_tmp/2990889066216; 221615/linclust/5258601894198672332/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 -v 3 . MMseqs Version",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/632:1371,perform,performs,1371,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632,1,['perform'],['performs']
Performance,"ence in the queryDB aginst a larger DB of amino acid sequences. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): home-brew; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: MMseqs2/13-45111; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; * Operating system and version:; * $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 40; On-line CPU(s) list: 0-39; Thread(s) per core: 1; Core(s) per socket: 20; Socket(s): 2; NUMA node(s): 2; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6148 CPU @ 2.40GHz; Stepping: 4; CPU MHz: 2400.000; BogoMIPS: 4800.00; Virtualization: VT-x; L1d cache: 32K; L1i cache: 32K; L2 cache: 1024K; L3 cache: 28160K; NUMA node0 CPU(s): 0-19; NUMA node1 CPU(s): 20-39; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch epb cat_l3 cdp_l3 invpcid_single intel_ppin ssbd mba rsb_ctxsw ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts pku ospke md_clear spec_ctrl intel_stibp flush_l1d arch_capabilities",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/817:4630,cache,cache,4630,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/817,4,['cache'],['cache']
Performance,"eotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 278.90K 3m 30s 81ms; Time for merging to aln: 0h 0m 0s 79ms. 356498221 alignments calculated.; 350372623 sequence pairs passed the thresholds (0.982817 of overall calculated).; 1256.243652 hits per query sequence.; Time for processing: 0h 3m 35s 108ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 0s 344ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 278.90K 0s 550ms. Reading results.; [=================================================================] 278.90K 1s 198ms. Output database: /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap; [=================================================================] 69.22K 3s 47ms. Time for merging to aln_swap: 0h 0m 0s 21ms; Time for processing: 0h 0m 10s 409ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln -v 3 . Time for processing: 0h 0m 0s 938ms; mvdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 107ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:7186,load,load-mode,7186,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['load'],['load-mode']
Performance,"eq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 9.50M 1m 30s 166ms; Time for merging to pref_rescore1: 0h 0m 3s 976ms; Time for processing: 0h 1m 39s 656ms; clust DB tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 tmp/576731152808920235/linclust/1790908825406232727/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 1s 66ms. Size of the sequence database: 9502826; Size of the alignment database: 9502826; Number of clusters: 8785102. Writing results 0h 0m 1s 200ms; Time for merging to pre_clust: 0h 0m 0s 5ms; Time for processing: 0h 0m 5s 962ms; createsubdb tmp/576731152808920235/linclust/1790908825406232727/order_redundancy DB tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 4ms; Time fo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:6060,load,load-mode,6060,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['load'],['load-mode']
Performance,"eqs search id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN /tmp/ --threads 40 -s 7.5 -a -e 1e-10 --alt-ali 1 &> allvsall.search.log ; mmseqs convertalis id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.tsv --threads 40 ; mmseqs extractalignedregion id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.SEQ --threads 40; mmseqs cluster pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ.CLU /tmp/ -e 1e-10 -c 0 -a -s 7.5 --threads 40 ; ```. But it fails in the last step with this message. ```; rescorediagonal pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 1e-10 -c 0.5 -a 1 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 204.52K 0s 215ms; Time for merging files: 0h 0m 0s 94ms; Time for processing: 0h 0m 0s 845ms; clust pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 /tmp//1456503536827778696/linclust/7100099902620488817/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Sequence db size != result db size; Error: Pre-clustering step died; Error: linclust died; ```. I think it is happening because of the number of files generated by the `extractalignedregion` module.; If it isn't, how do I get the aligned regions to use in a search? I'm trying to get aligned regions to cluster them to find possible domains in a set of protein. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/210:1319,load,load-mode,1319,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/210,1,['load'],['load-mode']
Performance,"eqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/first /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 24 -s 2 --split-memory-limit 80G --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1. prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 2.0. Query database size: 55235334 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 8s 472ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 5s 3ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:21741,load,load-mode,21741,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['load'],['load-mode']
Performance,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:11722,Perform,Performing,11722,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,25,"['Perform', 'optimiz']","['Performing', 'optimization']"
Performance,"er-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 100.00% 121.96M 5m 3s 965ms ; Time for merging to pref_rescore1: 0h 1m 26s 443ms; Time for processing: 0h 7m 19s 298ms; clust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 cluster_tmp/1127447206531551203/linclust/8761493678692146066/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 0m 53s 944ms. Size of the sequence database: 121964581; Size of the alignment database: 121964581; Number of clusters: 119253279. Writing results 0h 1m 14s 106ms; Time for merging to pre_clust: 0h 0m 55s 443ms; Time for processing: 0h 4m 11s 817ms; createsubdb cluster_tmp/1127447206531551203/linclust/8761493678692146066/order_redundancy ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:5278,load,load-mode,5278,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['load'],['load-mode']
Performance,"erlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter phrogs_mmseqs_db/phrogs_profile_db mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins.target_seq mmseqs_target_seq/[bacteria_of_interest]/tmp/15822818178659183495/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 7.0 . Query database size: 38880 type: Profile; Estimated memory consumption: 488M; Target database size: 125 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 125 0s 5ms; Index table: Masked residues: 124; Index table: fill; [=================================================================] 125 0s 6ms; Index statistics; Entries: 25103; DB size: 488 MB; Avg k-mer size: 0.000392; Top 10 k-mers; ALGLAA	2; TTGTAA	2; AAARKA	2; KASRKA	2; TEEALA	2; EDLLRA	2; INGNED	2; ASARED	2; GKHHRD	2; AELKAE	2; Time for index table init: 0h 0m 0s 511ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 38880; Target db start 1 to 125; [=mmseqs_targe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:5512,load,load-mode,5512,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,1,['load'],['load-mode']
Performance,"es calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 5; [=================================================================] 2 0s 0ms. 0.803571 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 8s 631ms; align tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 1 --compressed 0 -v 3 . Compute score only; Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; Calculation of alignments; [=================================================================] 2 0s 0ms; Time for merging to aln_0: 0h 0m 0s 0ms; 0 alignments calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:12791,load,load-mode,12791,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['load'],['load-mode']
Performance,"essing: 0h 0m 0s 38ms; createdb seq.fasta tmp/15248047069833069253/target --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences. Time for merging to target_h: 0h 0m 0s 9ms; Time for merging to target: 0h 0m 0s 8ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 40ms; Create directory tmp/15248047069833069253/search_tmp; search tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/result tmp/15248047069833069253/search_tmp -a 1 --alignment-mode 3 -c 1 --cov-mode 1 -s 5.7 --remove-tmp-files 1 . prefilter tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 1 --cov-mode 1 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7 . Query database size: 1 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 1 eta -; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 1 eta -; Index statistics; Entries: 41; DB size: 488 MB; Avg k-mer size: 0.000001; Top 10 k-mers; DFVKIA	1; ATLTKA	1; SEEGLA	1; IWEEIC	1; PFDSKD	1; CLRHLD	1; DMAGTD	1; QNRWRE	1; GENRSE	1; LAKPDF	1; Time for index table init: 0h 0m 0s 778ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:5686,load,load-mode,5686,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,1,['load'],['load-mode']
Performance,"ession/tree/master/sacc_tax); 2. Run the commands above. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): e2510e8f6911e4340c62989aa9ba1b9c58e18d60; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.5.1, c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/320:1914,Load,Loading,1914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320,1,['Load'],['Loading']
Performance,"esubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 9304 type: Aminoacid; Estimated memory consumption: 1007M; Target database size: 9304 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 9.30K 0s 119ms ; Index table: Masked residues: 99774; Index table: fill; [=================================================================] 100.00% 9.30K 0s 66ms ; Index statistics; Entries: 1733458; DB size: 498 MB; Avg k-mer size: 0.027085; Top 10 k-mers; IHDKNI 46; GPGGTL 34; LGGFVY 21; GQQIAR 19; HRLPLL 15; SCLWYL 15; RCKCRW 15; GGTHAY 15; GRGLAY 15; KSRRNY 15; Time for index table init: 0h 0m 0s 736ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9304; Targe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:16704,load,load-mode,16704,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"esult); docker-compose-mmseqs-web-worker-1 | 6 sequences passed prefiltering per query sequence; docker-compose-mmseqs-web-worker-1 | 6 median result list length; docker-compose-mmseqs-web-worker-1 | 0 sequences with 0 size result lists; docker-compose-mmseqs-web-worker-1 | Time for merging to pref_0: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 8ms; docker-compose-mmseqs-web-worker-1 | align /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/pref_0 /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/result --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 2 --compressed 0 -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Compute score, coverage and sequence identity; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Calculation of alignments; docker-compose-mmseqs-web-worker-1 | [=================================================================] 1 0s 2ms; docker-compose-mmseqs-web-worker-1 | Time for merging to result: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | ; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717:5576,load,load-mode,5576,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717,1,['load'],['load-mode']
Performance,"et database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 41m 40s 149ms ; Time for merging to aln: 0h 0m 0s 11ms; 1976417423 alignments calculated; 672599536 sequence pairs passed the thresholds (0.340313 of overall calculated); 8940.219727 hits per query sequence; Time for processing: 1h 41m 41s 324ms; rmdb tmp/5233442526903138997/pref -v 3 . Time for processing: 0h 0m 0s 616ms; mvdb tmp/5233442526903138997/aln tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 0ms; align /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/aln_merged tmp/5233442526903138997/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score and coverage; Query database size: 75233 type: Aminoacid; Target database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 9m 57s 768ms ; Time for merging to aln: 0h 0m 0s 17ms; 672599536 alignments calculated; 672599536 sequence pairs passed the thresholds (1.000000 of overall calculated); 8940.219727 hits per query sequence; Time for processing: 1h 9m 58s 713ms; rmdb tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 73ms; swapresults /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:7546,load,load-mode,7546,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['load'],['load-mode']
Performance,"et result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0.8; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 2; Verbosity 3; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Single step clustering true; Cascaded clustering steps 3; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; /mnt/DB /mnt/tmp/4359821638123540538/clu_redundancy /mnt/tmp/4359821638123540538/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 2 -; -sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence leng",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:1942,perform,performs,1942,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['perform'],['performs']
Performance,"expected behavior when running mmseqs search and other features used in colabfold. But the low speed happens in the mmseqs step, so I think this is the place to ask. Unexpected observations:. 1. running mmseqs locally on our cluster is much slower than the responses we get from the colabfold server for equivalent inputs; 2. mmseqs search speed does not scale at all with added threads or added physical cores, for small inputs (1-2 sequences) - is this expected? Will it only speed up with large input count?. Welcoming any input! Many thanks!. ## Expected Behavior; Runtime of mmseqs2 for a given input similar to response time from the colabfold server. ## Current Behavior; Considerably slower. For a given input (~250 aa) the server gives a full result in 20-30s, paired + unpaired reads (so, including at least 1 search each against uniref30 and colabfold_envdb, plus a number of expandaln / align calls).; The local version takes 60-90 seconds to run just the initial mmseqs search against uniref30, when using vmtouch and db load mode 2, and ~300 seconds against colabfold_envdb. Db load mode 3 somewhat slower, db load mode 0 and 1 much slower as expected.; Index was created without splits. The mmseqs search step is timed after vmtouch and other preparations are complete. The runtime is independent of either thread count or number of cpus provided.; Splitting the target db index 2 4 8 or 16-fold and running in parallel with MPI does not speed it up either (slightly slows down). Placing the entire run directory fast SSD or RAM (/dev/shm) does not change the speed.; This happens with the docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLTWQGLIVPDNPPYDKG",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:1050,load,load,1050,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,1,['load'],['load']
Performance,"extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 20.00K 0s 10ms ; Time for merging to pref_rescore1: 0h 0m 0s 4ms==================>] 99.51% 19.90K eta 0s ; Time for processing: 0h 0m 0s 25ms; clust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 20.00K 0s 7ms ; Sort entries; Find missing connections; Found 12302 new connections.; Reconstruct initial order; [=================================================================] 100.00% 20.00K 0s 12ms ; Add missing connections; [==============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:7132,load,load-mode,7132,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"f:80' -e 0.1 --max-seqs 10000 ; prefilter input_script7/qdb uniref30_2302_db.idx input_script7/tmp1/1006494840762416450/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ### Without single-quotation; ```; createdb input.fasta input_script5/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 32ms; Time for merging to qdb: 0h 0m 0s 47ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 226ms; Create directory input_script5/tmp1; search input_script5/qdb uniref30_2302_db input_script5/res input_script5/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000 ; prefilter input_script5/qdb uniref30_2302_db.idx input_script5/tmp1/16308606893082150349/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:96,prof:80 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ## Context; I am trying to do a mmseqs2 colabfold search locally.; However, the local result doesn'",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/759:2387,load,load-mode,2387,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/759,1,['load'],['load-mode']
Performance,"f_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign""), base.joinpath(""res_exp_realign_filter""), ""--db-load-mode"",; str(db_load_mode), ""--qid"", ""0"", ""--qsc"", str(qsc), ""--diff"", ""0"", ""--threads"",; str(threads), ""--max-seq-id"", ""1.0"", ""--filter-min-enable"", ""100""]); run_mmseqs(mmseqs, [""result2msa"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign_filter""), base.joinpath(""uniref.a3m""), ""--msa-format-mode"",; ""6"", ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + filter_param); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign_filter"")]); ; if use_templates:; run_mmseqs(mmseqs, [""search"", base.joinpath(""prof_res""), dbbase.joinpath(template_db), base.joinpath(""res_pdb""),; base.joinpath(""tmp2""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads), ""-s"", ""7.5"", ""-a"", ""-e"", ""0.1"", ""--prefilter-mode"", str(prefilter_mode)]); run_mmseqs(mmseqs, [""convertalis"", base.joinpath(""prof_res""), dbbase.joinpath(f""{template_db}{dbSuffix3}""), base.joinpath(""res_pdb""),; base.joinpath(f""{template_db}""), ""--format-output"",; ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar"",; ""--db-output"", ""1"",; ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)]); run_mmseqs(mmseqs, [""unpackdb"", base.joinpath(f""{template_db}""), base.joinpath("".""), ""--unpack-name-mode"", ""0"", ""--unpack-suffix"", "".m8""]); run_mmseqs(mmseqs, [""rmdb"", base.joinpath(""res_pdb"")]); run_mmseqs(mmseqs, [""rmdb"", base.joinpath(f""{template_db}"")]). run_mmseqs(mmseqs, [""unpackdb"", base.joinpath(""final.a3m""), base.joinpath("".""), ""--unpack-name-mode"", ""0"", ""--unpack-suffix"", "".a3m""]); run_mmseqs(mmseqs, [""rmdb"", base.joinpath(""final.a3m"")]); run_mmseqs(mmseqs, [""rmdb"", base.joinpath(""uniref.a3m"")]); run_mmseqs(m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:5294,load,load-mode,5294,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['load'],['load-mode']
Performance,false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; indexdb nr.DB nr.DB --sub-mat blosum62.out -k 0 --comp-bias-corr 1 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 2 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --include-headers 1 --check-compatible 0 --split 0 --split-memory-limit 126000000 --threads 15 -v 3 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using Target split mode.; Needed memory (631391886584 byte) of total memory (129024000000 byte); WARNING: MMseqs processes needs more main memory than available.Increase the size of --split or set it to 0 to automatically optimize target database split.; Write VERSION (0); Write META (1); MaxSeqLength: 65535; KmerSize: 7; CompBiasCorr: 1; AlphabetSize: 21; Masked: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers1: 1; Headers2: 0; Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Index table: counting k-mers...; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ...................................................................................................	3 Mio. sequences processed; ...................................................................................................	4 Mio. sequences processed; ...................................................................................................	5 Mio. sequences processed; ..........................................,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/161:2233,optimiz,optimize,2233,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161,1,['optimiz'],['optimize']
Performance,"filtering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1270615; Target db start 1 to 1270615; [=================================================================] 1.27M 2h 31m 44s 357ms. 1266.108246 k-mers per position; 3373560 DB matches per sequence; 626307 overflows; 21 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 601 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 657ms; Time for processing: 2h 32m 1s 811ms; align euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 euk72-90.profile_search2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 48 --compressed 0 -v 3 . Compute score and coverage; Query database size: 1270615 type: Profile; Target database size: 1270615 type: Aminoacid; Calculation of alignments; [=================================================================] 1.27M 33m 52s 295ms; Time for merging to euk72-90.profile_search2: 0h 0m 0s 650ms; 109004199 alignments calculated; 56769447 sequence pairs passed the thresholds (0.520801 of overall calculated); 44.678715 hits per query sequence; Time for processing: 0h 33m 55s 605ms; clust euk72-90.profile2 euk72-90.profile_search2 euk72-90.clust2 --threads 48 . MMseqs Version: 	aabc78c298f35cbc7a4136206c1a83adaa68695f; Cluster mode 	0; Max conne",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:10568,load,load-mode,10568,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['load'],['load-mode']
Performance,"for merging to query: 0h 0m 0s 35ms ; Database type: Aminoacid ; Time for processing: 0h 0m 0s 296ms ; Create directory tmp1/1465312676443513838/search_tmp ; search tmp1/1465312676443513838/query mmseqs/mmseqs_clu_rep_db/DB tmp1/1465312676443513838/result tmp1/1465312676443513838/search_tmp --alignment-mode 3 -e 1e-05 -s 6 --max-seqs 1000000 --num-iterations 5 --remove-tmp-files 1 ; ; prefilter tmp1/1465312676443513838/query mmseqs/mmseqs_clu_rep_db/DB.idx tmp1/1465312676443513838/search_tmp/12840997425876760019/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 6 -k 0 --target-search-mode 0 --k; -score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1000000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob; 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 . Index version: 16 ; Generated by: bb0a1b3569b9fe115f3bf63e5ba1da234748de23; ScoreMatrix: VTML80.out ; Query database size: 1000 type: Aminoacid; Estimated memory consumption: 101G; Target database size: 33611651 type: Aminoacid ; Process prefiltering step 1 of 1; ; k-mer similarity threshold: 118 ; Starting prefiltering scores calculation (step 1 of 1) ; Query db start 1 to 1000 ; Target db start 1 to 33611651 ; [=================================================================] 100.00% 1.00K 53s 841ms ; tmp1/1465312676443513838/search_tmp/12840997425876760019/blastpgp.sh: line 139: 3819000 Segmentation fault (core dumped) $RUNNER $PREF ""$QUERYDB"" ""$2"" ""$TMP_PATH/pref_$STEP"" ${TMP} ; Error: Prefilter died ; Error: Search died ; ```. ## Context. I thought maybe it's due to some special symbols in sequences in the failed fastas or larg",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/774:4664,load,load-mode,4664,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/774,1,['load'],['load-mode']
Performance,"frames tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 112 --compressed 0 -v 3 . [=================================================================] 802.27K 9s 504ms; Time for merging to query_seqs_h: 0h 0m 0s 682ms; Time for merging to query_seqs: 0h 0m 38s 582ms; Time for processing: 0h 0m 52s 983ms; prefilter tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.85 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 112 --compressed 0 -v 3 . Query database size: 1604546 type: Nucleotide; Estimated memory consumption: 105G; Target database size: 802273 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 802.27K 1m 13s 891ms; Index table: Masked residues: 47468793; Index table: fill; [=================================================================] 802.27K 1m 7s 245ms; Index statistics; Entries: 14067080711; DB size: 88684 MB; Avg k-mer size: 13.100990; Top 10 k-mers; CCCTCGCAAGGTTAC	15119; TGGGATCCCCGGGGG	14445; GGTCGGGTCCCGTAG	12691; GGTATCCCCTCGAGG	12523; CATAAAAACCGAGGG	12298; TAAAAACCCCGGGGG	12038; TTTTATTTTATTCTT	9764; CTTAGGGGTTACGTT	9670; GTGTAATCCCTCGAG	9663; CTGAAACCATTCTCG	9602; Time for index table init: 0h 2m 35s 948ms; Process prefiltering step",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:12110,load,load-mode,12110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['load'],['load-mode']
Performance,"g k-mer size: 7.824739; Top 10 k-mers; DFEQLPH	65289; NVPGWSP	65148; FRYAFPS	64963; RYYVLGW	64817; VDRLNTQ	63812; WRLDFLN	62949; TVDGDFS	62609; NKTDFVQ	61859; QDWVQIP	61316; LDGAYVP	59471; Time for index table init: 0h 16m 9s 488ms; Time for processing: 0h 16m 22s 538ms; lcaalign /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Input /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 does not exist; Error: Alignment died; Error: First search died; Error: taxonomy died; Error: Search died; ```. Many thanks; Antonio. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 5daca424b162cc5fdf0b9cd151aebed86975cbf6; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Sel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/433:1946,load,load-mode,1946,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433,1,['load'],['load-mode']
Performance,"g/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/team.c:124; #5 0x00002aefd1060dc5 in start_thread (arg=0x2aefd1c45700) at pthread_create.c:308; #6 0x00002aefd136bced in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:113; ```. ### Last files to be created in temp directory:; ```; ls -lh /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/; total 506G; -rwx------ 1 dportik Domain Users 4.0K Mar 9 20:15 blastp.sh; -rw-r--r-- 1 dportik Domain Users 8.4G Mar 10 02:59 pref_0.0; -rw-r--r-- 1 dportik Domain Users 7.9G Mar 10 02:59 pref_0.1; -rw-r--r-- 1 dportik Domain Users 14G Mar 10 03:00 pref_0.10; -rw-r--r-- 1 dportik Domain Users 9.0G Mar 10 03:00 pref_0.11; -rw-r--r-- 1 dportik Domain Users 14G Mar 10 02:59 pref_0.12; -rw-r--r-- 1 dportik Domain Users 14G Mar 10 02:59 pref_0.13; -rw-r--r-- 1 dportik Domain Users 14G Ma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:36191,optimiz,optimized,36191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['optimiz'],['optimized']
Performance,"gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. align //app/database/sequences/sequences //app/database/sequences/sequences; B tmp/17369488595077942690/pref_0 //app/clustering/sequences/sequences_output --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq; -id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 21474; 83647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0; --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:2 --gap-ex; tend nucl:5,aa:0 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score and coverage; Query database size: 74 type: Aminoacid; Target database size: 74 type: Aminoacid; Calculation of alignments; terminate called after throwing an instance of 'Sls::error'; Aborted; Error: Alignment died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ad5837b3444728411e6c90f8c6ba9370f665c443; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): lastest Docker container; * Operating system and version: Windows 10 (Docker in git bash)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:5032,load,load-mode,5032,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,1,['load'],['load-mode']
Performance,"h data file tcdb_query.nr.db ... Done.; > Query database type: Aminoacid; > Target database type: Aminoacid; > Calculation of Smith-Waterman alignments.; > Error: Alignment died; > . ## Context; I have two databases, they don't have equal entries but some sequences have 100% identity.; I try to search using --add-self-matches to cluster the result.; The search fails in alignment step when I use this options, without this options the search run well. . ## Your Environment. * Git commit used: 7ca117893675cdca309e2c9dfc444bbc7462e858; * Which MMseqs version was used: Linuxbrew; * Compiler and Cmake: cmake version 3.12.3; * Server specifications: 188Gb ; lscpu:; `; Architecture: x86_64 ; CPU op-mode(s): 32-bit, 64-bit ; Byte Order: Little Endian ; CPU(s): 36 ; On-line CPU(s) list: 0-35 ; Thread(s) per core: 2 ; Core(s) per socket: 18 ; Socket(s): 1 ; NUMA node(s): 1 ; Vendor ID: GenuineIntel ; CPU family: 6 ; Model: 85 ; Model name: Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz ; Stepping: 4 ; CPU MHz: 2680.333 ; BogoMIPS: 4600.00 ; Virtualization: VT-x ; L1d cache: 32K ; L1i cache: 32K ; L2 cache: 1024K ; L3 cache: 25344K ; NUMA node0 CPU(s): 0-35 ; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts pku ospke ; `",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:9414,cache,cache,9414,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,4,['cache'],['cache']
Performance,"h pbps.neighbors.DB pfam_profile result tmp -k 6 -s 7.5 --threads 10 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 10; Verbosity 3; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile tmp/457325247790757046/pref --sub-mat blosum62.out -s 7.5 -k 5 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189:1838,perform,performs,1838,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189,1,['perform'],['performs']
Performance,"hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:6061,perform,performs,6061,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['perform'],['performs']
Performance,"hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	1; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB clus",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:3069,load,load-mode,3069,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['load'],['load-mode']
Performance,how is index loaded into memory when performing multiple queries?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/527:13,load,loaded,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/527,2,"['load', 'perform']","['loaded', 'performing']"
Performance,"hreads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 0s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 0s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 0s; Rescore diagonals.; Program call:; pan.db pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Rescore mode 	0; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; Threads 	1; Verbosity 	3. Query file: pan.db; Target file: pan.db; Prefilter database: /tmp//589280515582180421/linclust/13903844144087712329/pref; Result database: /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore1; Done.; Time for merging files: 0 h 0 m 0 s; Time for diagonal calculation: 0 h 0 m 0s; Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore1 /tmp//589280515582180421/linclust/13903844144087712329/pre_clust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 1 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component	1000; Similarity type 	2; Threads 	1. Init...; Opening sequence database...; Opening alignment database...; done.; Clustering mode: Set Cover. Sort entries. Find missing connection",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:5673,perform,performs,5673,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['perform'],['performs']
Performance,"i-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 1.39K 0s 32ms; Time for merging to pref_rescore1_tmp_0: 0h 0m 0s 202ms========> ] 96.68% 1.34K eta 0s; Time for merging to pref_rescore1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 961ms; clust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 1.39K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [=================================================================] 100.00% 1.39K 0s 4ms; Add missing connections; [==================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:6021,load,load-mode,6021,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['load'],['load-mode']
Performance,"ide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 2 --min-seq-id 0.9 ; --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [================================================================] =74.93M 28m 19s 496ms; Time for merging to pref_rescore2: 0h 0m 51s 111ms; Time for processing: 0h 29m 44s 106ms; align tmp//16518381706844811497/linclust/1189823685496030198/input_step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/input_step_redu; ndancy tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore2 tmp//16518381706844811497/linclust/1189823685496030198/aln --sub-mat 'aa:blos; um62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mo; de 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --; add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-sc; ore-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0; -v 3 . Compute score, coverage and sequence identity; Query database size: 74926526 type: Aminoacid; Target database size: 74926526 type: Aminoacid; Calculation of alignments; [=================================================================] 74.93M 3m 46s 500ms; Time for merging to aln: 0h 0m 54s 46ms; 92521862 alignments calculated; 75488967 sequence pairs passed the thresholds (0.815904 of overall calculated); 1.007507 hits per query sequence; Time for processing: 0h 5m 20s 32ms; clust tmp//16518381706844811497/linclust/1189823685496030198/input_step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/aln tmp//165183; 81706844",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:9613,load,load-mode,9613,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['load'],['load-mode']
Performance,"iltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 93ms; align tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 tmp_easy_search/6745795380167965363/result --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 104664 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 0ms; Time for merging to result: 0h 0m 0s 0ms; 300 alignments calculated; 300 sequence pairs passed the thresholds (1.000000 of overall calculated); 300.000000 hits per query sequence; Time for processing: 0h 0m 0s 18ms; convertalis tmp_easy_search/6745795380167965363/query target_D",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:6945,load,load-mode,6945,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['load'],['load-mode']
Performance,"index table init: 0h 0m 17s 833ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Context; Used the same db (hmmsearchDB) to cluster my sequences using mmseqs cluster. Now I'm trying to see what each cluster is comprised of by running a search against Uniref100. ## Your Environment. IBM SR650 ServerIntel Xeon Silver 4216, 2 CPUs, 2.1Ghz, 64 threads - 1TB DDR4 2933mhz RDIMM - HDD 12TB SAS. Tit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:5269,load,load-mode,5269,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,1,['load'],['load-mode']
Performance,"inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124**. I have created the Uniprotdb using mmseqs createdb command so the uniportdb.index file was created with it. ## Current Behavior; But I am seeing after giving expandaln command facing an issue saying the uniprotdb.index is generic type ; Input database ""./uniprot/uniprotdb.index"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; MMSEQS=""$1""; QUERY=""$2""; BASE=""$4""; DB1=""$5""; DB2=""$6""; DB3=""$7""; USE_ENV=""$8""; USE_TEMPLATES=""$9""; FILTER=""${10}""; TAXONOMY=""${11}""; M8OUT=""${12}""; EXPAND_EVAL=inf; ALIGN_EVAL=10; DIFF=3000; QSC=-20.0; MAX_ACCEPT=1000000; if [ ""${FILTER}"" = ""1"" ]; then; 0.1 was not used in benchmarks due to POSIX shell bug in line above; EXPAND_EVAL=0.1; ALIGN_EVAL=10; QSC=0.8; MAX_ACCEPT=100000; fi; export MMSEQS_CALL_DEPTH=1; SEARCH_PARAM=""--num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000""; FILTER_PARAM=""--filter-min-enable 1000 --diff ${DIFF} --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95""; EXPAND_PARAM=""--expansion-mode 0 -e ${EXPAND_EVAL} --expand-filter-clusters ${FILTER} --max-seq-id 0.95""; mkdir -p ""${BASE}""; mkdir -p ""${BASE}""; ""${MMSEQS}"" createdb ""${QUERY}"" ""${BASE}/qdb""; ""${MMSEQS}"" search ""${BASE}/qdb"" ""${DB1}"" ""${BASE}/res"" ""${BASE}/tmp1"" $SEARCH_PARAM; ""${MMSEQS}"" mvdb ""${BASE}/tmp1/latest/profile_1"" ""${BASE}/prof_res""; ""${MMSEQS}"" lndb ""${BASE}/qdb_h"" ""${BASE}/prof_res_h""; **mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124** ; # I got stucked at the above command. **next I am gonna do** ; ""${MMSEQS}"" align ""${BASE}/prof_res"" ""${DB1}.idx"" ""${BASE}/res_exp"" ""${BASE}/res_exp_realign"" --db-load-mode 2 -e ${AL",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:1227,load,load-mode,1227,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['load'],['load-mode']
Performance,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/567:5069,Perform,Performing,5069,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567,12,['Perform'],['Performing']
Performance,ing: 0h 0m 0s 113ms; rmdb All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_filter2 -v 3 . Time for processing: 0h 0m 0s 366ms; rmdb All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore2 -v 3 . Time for processing: 0h 0m 0s 306ms; rmdb All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/aln -v 3 . Time for processing: 0h 0m 0s 614ms; rmdb All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/clust -v 3 . Time for processing: 0h 0m 0s 192ms; createtsv All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu All_cohort_tmp//9948387321092861199/cluster.tsv --threads 56 -v 3 . Time for merging to cluster.tsv: 0h 3m 32s 713ms; Time for processing: 0h 6m 13s 976ms; result2repseq All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu All_cohort_tmp//9948387321092861199/clu_rep --db-load-mode 0 --compressed 0 --threads 56 -v 3 . [=================================================================] 30.25M 27s 445ms; Time for merging to clu_rep: 0h 0m 24s 792ms; Time for processing: 0h 1m 43s 420ms; result2flat All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_rep All_cohort_tmp//9948387321092861199/rep_seq.fasta --use-fasta-header -v 3 . Time for processing: 0h 2m 39s 415ms; createseqfiledb All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu All_cohort_tmp//9948387321092861199/clu_seqs --threads 56 -v 3 . [=================================================================] 30.25M 2m 3s 327ms; Time for merging to clu_seqs: 0h 0m 12s 135ms; Time for processing: 0h 4m 5s 680ms; result2flat All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/input All_cohort_tmp//994,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:12879,load,load-mode,12879,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['load'],['load-mode']
Performance,"ist length; 1350 sequences with 0 size result lists; Time for merging to pref_0_tmp_11: 0h 0m 0s 427ms; Time for merging to pref_0_tmp_11_tmp: 0h 0m 0s 867ms; Merging 12 target splits to pref_0; Preparing offsets for merging: 0h 0m 1s 151ms; [=================================================================] 1.30M 14s 938ms; Time for merging to pref_0: 0h 0m 0s 523ms; Time for merging target splits: 0h 0m 18s 286ms; Time for merging to pref_0_tmp: 0h 0m 6s 63ms; Time for processing: 11h 52m 0s 943ms; align /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 /tmp//2989869989197200687/search_tmp/6775691152365959592/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1298472 type: Nucleotide; Target database size: 90056195 type: Nucleotide; Calculation of alignments; [=================================================================] 1.30M 1h 24m 48s 423ms; Time for merging to aln: 0h 0m 0s 504ms; 662682155 alignments calculated; 492943101 sequence pairs passed the thresholds (0.743861 of overall calculated); 379.633209 hits per query sequence; Time for processing: 1h 27m 9s 264ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 746ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/aln_0 -v 3 . Time for proces",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:23368,load,load-mode,23368,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['load'],['load-mode']
Performance,"ist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:. cmake --version; cmake version 2.8.12.2; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; c++ --version; c++ (GCC) 6.2.1 20160916 (Red Hat 6.2.1-3). * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; cat /proc/cpuinfo. ```; processor	: 63; vendor_id	: GenuineIntel; cpu family	: 6; model		: 46; model name	: Intel(R) Xeon(R) CPU X7560 @ 2.27GHz; stepping	: 6; microcode	: 0xb; cpu MHz		: 1064.000; cache size	: 24576 KB; physical id	: 3; siblings	: 16; core id		: 11; cpu cores	: 8; apicid		: 119; initial apicid	: 119; fpu		: yes; fpu_exception	: yes; cpuid level	: 11; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 x2apic popcnt lahf_lm ida epb dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips	: 4527.83; clflush size	: 64; cache_alignment	: 64; address sizes	: 44 bits physical, 48 bits virtual; power management:; ```; free; ```; total used free shared buff/cache available; Mem: 528377212 3193792 142947764 9564 382235656 523907652; Swap: 0 0 0. ```; * Operating system and version:; cat /etc/redhat-release ; CentOS Linux release 7.3.1611 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31:6160,cache,cache,6160,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31,2,['cache'],['cache']
Performance,"k-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 172ms; rescorediagonal in/DB_in in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 164 0s 38ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms ] 25.77% 43 eta 0s; Time for processing: 0h 0m 0s 102ms; clust in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 164 0s 7ms; Sort entries; Find missing connections; Found 10 new connections.; Reconstruct initial order; [=================================================================] 100.00% 164 0s 6ms; Add missing connections; [=================================================================] 100.00% 164 0s 1ms. Time for read in: 0h 0m 0s 92ms; Total time: 0h 0m 0s 156ms. Size of the se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:21258,load,load-mode,21258,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"k-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 170ms; rescorediagonal in/DB_in in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 164 0s 28ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 84ms; clust in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 164 0s 12ms; Sort entries; Find missing connections; Found 10 new connections.; Reconstruct initial order; [=================================================================] 100.00% 164 0s 12ms; Add missing connections; [=================================================================] 100.00% 164 0s 2ms. Time for read in: 0h 0m 0s 114ms; Total time: 0h 0m 0s 153ms. Size of the sequence database: ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:5655,load,load-mode,5655,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 46ms. 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 845ms; align clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 clu/sim1_tmp/7842071913732967198/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 55ms; Time for merging to aln_step0: 0h 0m 0s 5ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 106ms; clust clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/aln_step0 clu/sim1_tmp/7842071913732967198/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=======",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:14329,load,load-mode,14329,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"lculation (step 1 of 1); Query db start 1 to 882920; Target db start 1 to 311921; [=================================================================] 882.92K 1m 16s 342ms. 0.958336 k-mers per position; 27663 DB matches per sequence; 7 overflows; 0 queries produce too much hits (truncated result); 100 sequences passed prefiltering per query sequence; 63 median result list length; 205 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 481ms; Time for processing: 0h 2m 41s 423ms; align tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 tmp/2226585588535541735/search_tmp/11167723337111805049/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 882920 type: Nucleotide; Target database size: 311921 type: Nucleotide; Calculation of alignments; [=================================================================] 882.92K 5m 58s 443ms; Time for merging to aln: 0h 0m 0s 462ms. 88720927 alignments calculated.; 46477238 sequence pairs passed the thresholds (0.523859 of overall calculated).; 52.640373 hits per query sequence.; Time for processing: 0h 6m 3s 620ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 272ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/1116772",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339:8853,load,load-mode,8853,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339,1,['load'],['load-mode']
Performance,"le 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_1. align result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:3617,load,load-mode,3617,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance,"le 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_2. align result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_2 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:6591,load,load-mode,6591,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance,"le init: 0h 0m 0s 778ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 1; [=================================================================] 100.00% 1 eta -. 602.620000 k-mers per position; 41 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 740ms; align tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 tmp/15248047069833069253/result --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 1 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 1 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Time for merging to result: 0h 0m 0s 0ms; 1 alignments calculated; 1 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 28ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:7468,load,load-mode,7468,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,1,['load'],['load-mode']
Performance,"len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:4043,perform,performs,4043,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['perform'],['performs']
Performance,"leotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --g",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:2020,load,load-mode,2020,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance,"lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:34514,Load,Loaded,34514,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,"lign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 104664 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 0ms; Time for merging to result: 0h 0m 0s 0ms; 300 alignments calculated; 300 sequence pairs passed the thresholds (1.000000 of overall calculated); 300.000000 hits per query sequence; Time for processing: 0h 0m 0s 18ms; convertalis tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/result result.tsv --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --format-mode 4 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qseq,tseq --translation-table 1 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --db-output 0 --db-load-mode 0 --search-type 0 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; [=================================================================] 1 0s 0ms; Time for merging to result.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 9ms; ```. ## Context; * I would like to create a multiple sequence alignment FASTA file from the results from `easy-search` to use as input to other tools. ## Your Environment; * MMseqs2 Version: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32. * Operating system and version:. ```; uname -a; Linux lambda-servername 5.4.0-144-generic #161-Ubuntu SMP Fri Feb 3 14:49:04 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; ``",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:8171,load,load-mode,8171,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['load'],['load-mode']
Performance,"lter_param = [""--filter-msa"", str(filter), ""--filter-min-enable"", ""1000"", ""--diff"", str(diff), ""--qid"", ""0.0,0.2,0.4,0.6,0.8,1.0"", ""--qsc"", ""0"", ""--max-seq-id"", ""0.95"",]; expand_param = [""--expansion-mode"", ""0"", ""-e"", str(expand_eval), ""--expand-filter-clusters"", str(filter), ""--max-seq-id"", ""0.95"",]. run_mmseqs(mmseqs, [""search"", base.joinpath(""qdb""), dbbase.joinpath(uniref_db), base.joinpath(""res""), base.joinpath(""tmp""), ""--threads"", str(threads)] + search_param); #queryDB 데이터베이스에서 uniref30_2103_db 데이터베이스를 대상으로 검색을 수행합니다.; #검색 결과는 res 디렉토리에 저장되고, 임시 파일은 tmp 디렉토리에 저장됩니다; ; run_mmseqs(mmseqs, [""mvdb"", base.joinpath(""tmp/latest/profile_1""), base.joinpath(""prof_res"")]); run_mmseqs(mmseqs, [""lndb"", base.joinpath(""qdb_h""), base.joinpath(""prof_res_h"")]); ; run_mmseqs(mmseqs, [""expandaln"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""), base.joinpath(""res""), dbbase.joinpath(f""{uniref_db}{dbSuffix2}""), base.joinpath(""res_exp""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + expand_param); run_mmseqs(mmseqs, [""align"", base.joinpath(""prof_res""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""), base.joinpath(""res_exp""), base.joinpath(""res_exp_realign""), ""--db-load-mode"", str(db_load_mode), ""-e"", str(align_eval), ""--max-accept"", str(max_accept), ""--threads"", str(threads), ""--alt-ali"", ""10"", ""-a""]); run_mmseqs(mmseqs, [""filterresult"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign""), base.joinpath(""res_exp_realign_filter""), ""--db-load-mode"",; str(db_load_mode), ""--qid"", ""0"", ""--qsc"", str(qsc), ""--diff"", ""0"", ""--threads"",; str(threads), ""--max-seq-id"", ""1.0"", ""--filter-min-enable"", ""100""]); run_mmseqs(mmseqs, [""result2msa"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign_filter""), base.joinpath(""uniref.a3m""), ""--msa-format-mode"",; ""6"", ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + filter_param); subprocess.run([mmseqs] + [""rmdb""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:3851,load,load-mode,3851,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['load'],['load-mode']
Performance,"m 0s 29ms; Writing results to: /tmp//2989869989197200687/result; [=================================================================] 514.46K 49s 642ms. Time for merging to result: 0h 0m 0s 988ms; Time for processing: 0h 0m 58s 569ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 32 --compressed 0 -v 3 . [====terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; **Error: Convert Alignments died**. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 1f302134aa1c6c7c4e2b9da272fd26af33860780; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD EPYC 7742 64-Core Processor; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:26168,load,load-mode,26168,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['load'],['load-mode']
Performance,"mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_1. align result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_0 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. rmdb result_20230419_115721/tmp/16464230693756166324/aln_0; rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. result2profile result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/profile_1 --sub-mat 'aa:blosum62.out,nucl:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:4605,load,load-mode,4605,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance,"mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_2. align result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_2 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_1 result_20230419_115721/res result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. expandaln result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/res /home/user/project/target_DB/target_DB.idx result_20230419_115721/res_exp --db-load-mode 2 --threads 96 --expansion-mode 0 -e 1.7976931348623157e+308 --expand-filter-clusters 1 --max-seq-id 0.95. Invalid database read for database data file",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:7579,load,load-mode,7579,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance,"mber of cpus provided.; Splitting the target db index 2 4 8 or 16-fold and running in parallel with MPI does not speed it up either (slightly slows down). Placing the entire run directory fast SSD or RAM (/dev/shm) does not change the speed.; This happens with the docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLTWQGLIVPDNPPYDKGAFRIEINFPAEYPFKPPKITFKTKIYHPNIDEKGQVCLPVISAENWKPATKTDQVIQSLIALVNDPQPEHPLRADLAEEYSKDRKKFCKNAEEFTKKYGEKRPVD; >Ub; MQIFVKTLTGKTITLEVEPSDTIENVKAKIQDKEGIPPDQQRLIFAGKQLEDGRTLSDYNIQKESTLHLVLRLRGG; EOF; mkdir -p out/tmp; mmseqs createdb mmseqs_in.fasta out/qdb; vmtouch -ldw /path/to/database/uniref30_2202_db*idx*; mmseqs search out/qdb /path/to/database/uniref30_2202_db out/res out/tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. ```. ## MMseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:2433,load,load-mode,2433,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,1,['load'],['load-mode']
Performance,"me 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust 1831648_seqs.mmseqs2db tmp/16479300059278292880/clu_redundancy tmp/16479300059278292880/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:3028,load,load-mode,3028,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['load'],['load-mode']
Performance,"merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My questions are:; 1) How big of a RAM is required for the createindex step? Was that the reason a ""targetDB.idx"" was not generated?. 2) How much memory do I need for the indexed files to be fetched into memory (i.e. the""touchdb"" step)? Is it the total of all the ""targetDB.idx.0,1,2...14 "" files which will be over 1TB? Or is it something smaller?. 3) The log message for mmseqs touchdb step wasn't very helpful. Did it work or not?. Thank you,; Tongji",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/757:1510,load,load-mode,1510,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757,1,['load'],['load-mode']
Performance,mmseqs local runs considerably slower than mmseqs colabfold api regardless of optimizations,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:78,optimiz,optimizations,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,1,['optimiz'],['optimizations']
Performance,"mmseqs2 is installed with conda, but the cpu utilization is low when performing the retrieval library",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/752:69,perform,performing,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/752,2,['perform'],['performing']
Performance,"mp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 278.90K 0s 59ms; Time for merging to pref_count.tsv: 0h 0m 0s 61ms; Time for processing: 0h 0m 0s 594ms; align /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 278905 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 278.90K 3m 30s 81ms; Time for merging to aln: 0h 0m 0s 79ms. 356498221 alignments calculated.; 350372623 sequence pairs passed the thresholds (0.982817 of overall calculated).; 1256.243652 hits per query sequence.; Time for processing: 0h 3m 35s 108ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 0s 344ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:5911,load,load-mode,5911,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['load'],['load-mode']
Performance,"mp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 10ms; Time for processing: 0h 0m 0s 41ms; filterdb /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 --filter-file /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 757 0s 4ms; Time for merging to pref_filter2: 0h 0m 0s 62ms; Time for processing: 0h 0m 0s 270ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/linclust.sh: line 68: 88046 Segmentation fault: 11 $RUNNER ""$MMSEQS"" rescorediagonal ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/pref_rescore2"" ${UNGAPPED_ALN_PAR}; Error: Ungapped alignment step died; Error: linclust died; Error: Search died. Running on Mac intel i9 and mmseqs2 14-7e284. Thank you all for your help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:9734,load,load-mode,9734,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['load'],['load-mode']
Performance,mp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; [=================================================================] 100.00% 0.02 0s 6ms ] 0.00% 0.01 eta -; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 3ms; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 2ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 73ms; mmseqs-web-worker_1 | prefilter /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.7; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Using 24 threads.; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Estimated memory consumption 12072 MB; mmseqs-web-worker_1 | Target database size: 117752 type: Nucleotide; mmseqs-web-worker_1 | Query database size: 2 type: Nucleotide; mmseqs-web-worker_1 | Process prefiltering step 1 of 1; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | k-mer similarity threshold: 0; mmseqs-web-worker_1 | Starting prefiltering scores calculation (step 1 of 1); mmseqs-web-worker_1 | Query db start 1 to 2; mmseqs-web-worker_1 | Target db start 1 to 117752; [=========================================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:7330,load,load-mode,7330,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['load'],['load-mode']
Performance,"mum coverage 	0; > Select n most diverse seqs 	1000; > Omit Consensus 	false; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward Frames 	1,2,3; > Reverse Frames 	1,2,3; > Translation Table 	1; > Use all table starts 	false; > Offset of numeric ids 	0; > Add Orf Stop 	false; > Number search iterations 	3; > Start sensitivity 	4; > Search steps 	1; > Run a seq-profile search in slice mode 	false; > Strand selection 	1; > Disk space limit 	0; > Sets the MPI runner 	; > Remove Temporary Files 	false; > ; > Program call:; > prefilter tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 --sub-mat blosum62.out -s 7.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 17702628 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 1 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 15 -v 3 ; > ; > MMseqs Version: 	7ca117893675cdca309e2c9dfc444bbc7462e858; > Sub Matrix 	blosum62.out; > Sensitivity 	7.5; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	65535; > Max. results per query 	17702628; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Split Memory Limit 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Exact k-mer matching 	0; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	true; > Spaced Kmer 	1; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Spaced k-mer pattern 	; > Threads 	15; > Verbosity 	3; > ; > Initialising data structures...; > Using 15 threads.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength: 65535; > KmerSize: ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:2941,load,load-mode,2941,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,1,['load'],['load-mode']
Performance,"my output mode 0. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. prefilter ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs.idx temp/9118733262229857306/tmp_hsp1/5064659849361391999/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --s; plit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7. Index version: 16; Generated by: 98c37f3c32b222632ada6011504380e91351276b; ScoreMatrix: VTML80.out; Query database size: 6282 type: Aminoacid; split was set to 5 but at least 8 are required. Please run with default paramerters; Target split mode. Searching through 5 splits; Estimated memory consumption: 138G; Process needs more than 113G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 213522593 type: Aminoacid; Process prefiltering step 1 of 5. k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 5); Query db start 1 to 6282; Target db start 1 to 42795128; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/278:4594,load,load-mode,4594,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278,2,"['load', 'optimiz']","['load-mode', 'optimize']"
Performance,"n(R) Gold 6130 CPU @ 2.10GHz; stepping : 4; microcode : 0x2007006; cpu MHz : 2100.000; cache size : 22528 KB; physical id : 0; siblings : 32; core id : 0; cpu cores : 16; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 22; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts hwp hwp_act_window hwp_epp hwp_pkg_req pku ospke md_clear flush_l1d arch_capabilities; vmx flags : vnmi preemption_timer posted_intr invvpid ept_x_only ept_ad ept_1gb flexpriority apicv tsc_offset vtpr mtf vapic ept vpid unrestricted_guest vapic_reg vid ple shadow_vmcs pml ept_mode_based_exec tsc_scaling; bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit mmio_stale_data; bogomips : 4200.00; clflush size : 64; cache_alignment : 64; address sizes : 46 bits physical, 48 bits virtual; power management:. $ free; total used free shared buff/cache available; Mem: 791192240 20105804 63519620 33656 707566816 765066152; Swap: 0 0 0; ```; * Operating system and version:; ```; $ cat /etc/*release; DISTRIB_ID=Ubuntu; DISTRIB_RELEASE=22.04; DISTRIB_CODENAME=jammy; DISTRIB_DESCRIPTION=""Ubuntu 22.04.3 LTS""; PRETTY_NAME=""Ubuntu 22.04.3 LTS""; <truncated>; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/833:5865,cache,cache,5865,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/833,1,['cache'],['cache']
Performance,"ng results 0h 0m 0s 66ms; Time for merging to clu_step0: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 628ms; createsubdb ./mmseqs_output/tmp/5351426679731834765/clu_step0 ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/input_step1 -v 3 --subdb-mode 1 . Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 7ms; prefilter ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 4 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 10966 type: Aminoacid; Estimated memory consumption: 1010M; Target database size: 10966 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 10.97K 0s 560ms; Index table: Masked residues: 4144; Index table: fill; [=================================================================] 10.97K 0s 667ms; Index statistics; Entries: 1798942; DB size: 498 MB; Avg k-mer size: 0.028108; Top 10 k-mers; IGAALA 68; GPGGTL 58; GIVAPG 43; ALTAGI 42; ALGNGK 34; GLGNGK 32; ELPGVN 31; DLLDLP 29; GQQVAR 24; GEQVAR 23; Time for index table init: 0h 0m 2s 664ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10966; Target db start ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:24287,load,load-mode,24287,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"noacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 434ms; align profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 /tmp/15358673946673749737/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:5173,load,load-mode,5173,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['load'],['load-mode']
Performance,"nore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 1.81K 0s 7ms; Time for merging to pref_rescore1: 0h 0m 0s 64ms; Time for processing: 0h 0m 0s 310ms; clust /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Greedy Low Mem; Total time: 0h 0m 0s 13ms. Size of the sequence database: 1807; Size of the alignment database: 1807; Number of clusters: 757. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 49ms; createsubdb /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/order_redundancy /Volumes/s/tmp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:6786,load,load-mode,6786,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['load'],['load-mode']
Performance,"nt Behavior; Error: Alignment died. All .index are empty. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb GENOMAD/genomad_output/Bins_summary/Bins_virus_proteins.faa PHROGS/target_seq ##This command seems to work. mmseqs search PHROGS/phrogs_mmseqs_db/phrogs_profile_db PHROGS/target_seq PHROGS/Bins_PHROGS PHROGS/tmp -s 7 . ##This command is very long and failed. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. align MMSEQ2_PHROGS/phrogs_mmseqs_db/phrogs_profile_db MMSEQ2_PHROGS/target_seq MMSEQ2_PHROGS/tmp/3583634493861447998/pref_0 MMSEQ2_PHROGS/Bins_PHROGS --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 38880 type: Profile; Target database size: 75478 type: Aminoacid; Calculation of alignments; Score of forward/backward SW differ: 539 542. Q: 0 T: 31246. ] 0.00% 1 eta -; Start: Q: 6, T: 0. End: Q: 192, T 154; Score of forward/backward SW differ: 1751 1748. Q: 5165 T: 52236.; Start: Q: 2, T: 7. End: Q: 182, T 267; Error: Alignment died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit us",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/677:1193,load,load-mode,1193,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/677,1,['load'],['load-mode']
Performance,"o 6712; [=================================================================] 100.00% 6.71K 0s 701ms . 36.614229 k-mers per position; 788 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 4 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 802ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 6712 type: Aminoacid; Target database size: 6712 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 6.71K 0s 264ms ; Time for merging to aln_step1: 0h 0m 0s 1ms; 13873 alignments calculated; 8509 sequence pairs passed the thresholds (0.613350 of overall calculated); 1.267729 hits per query sequence; Time for processing: 0h 0m 0s 270ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step1 /tmp/mydir/757478791580079562",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:23620,load,load-mode,23620,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"oacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 105; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8273; Target db start 1 to 756891; [=================================================================] 100.00% 8.27K 1s 888ms . 7.501658 k-mers per position; 14614 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 5 sequences passed prefiltering per query sequence; 0 median result list length; 7780 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 6ms; Time for processing: 0h 0m 23s 645ms; align tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 tmp/16138406286044646862/aln_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 8273 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.27K 1s 879ms ; Time for merging to aln_1: 0h 0m 0s 9ms. 41734 alignments calculated.; 41734 sequence pairs passed the thresholds (1.000000 of overall calculated).; 5.044603 hits per query sequence.; Time for processing: 0h 0m 5s 83ms; mergedbs IP_DB/IP_DB tmp/16138406286044646862/aln_merge_new tmp/16138406286044646862/aln_0 tmp/16138406286044646862/aln_1 --compressed 0 -v 3 . Merging the results to tmp/16138406286044646862/aln_merge_new; Time for merging to aln_merge_new",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:8771,load,load-mode,8771,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['load'],['load-mode']
Performance,"oaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:34685,Load,Loaded,34685,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,obacteriota; ```. Each job was given 24 threads with 30Gb per thread (720Gb total) - more is possible. ; As there are 24 files and I used 24 threads - I would assume that the error lies somewhere in how the data is put back together?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb sampleX_scaffolds.fasta sampleX_DB; mmseqs taxonomy sampleX_DB /home/mmseqs2/NR/NR sampleX_mmseqs_taxonomy.txt sampleX_temp --tax-lineage 1 --orf-filter 1 --threads 24 --split-memory-limit 500G; ```. ## MMseqs Output (for bugs); [mmseqs.29360353.out.txt](https://github.com/soedinglab/MMseqs2/files/13532025/mmseqs.29360353.out.txt); [mmseqs.29360398.out.txt](https://github.com/soedinglab/MMseqs2/files/13532026/mmseqs.29360398.out.txt). ## Context; Trying to classify metagenomic contigs for kingdom binning. . ## Your Environment; * Git commit used : MMseqs2 Version: 15.6f452; * Which MMseqs version was used: conda; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; free -m; total used free shared buff/cache available; Mem: 256830 27571 113148 2175 116109 223713; Swap: 131071 9427 121644; ```. ```; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 invpcid_single ssbd mba ibrs ibpb stibp ibrs_enhanced fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm rdt_a avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb intel_pt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local split_lock_detect wbnoinvd dtherm arat pln pts hwp hwp_act_window hwp_pkg_req avx512vbmi umi,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/786:2881,cache,cache,2881,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/786,1,['cache'],['cache']
Performance,"ode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_1 result_20230419_115721/res result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. expandaln result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/res /home/user/project/target_DB/target_DB.idx result_20230419_115721/res_exp --db-load-mode 2 --threads 96 --expansion-mode 0 -e 1.7976931348623157e+308 --expand-filter-clusters 1 --max-seq-id 0.95. Invalid database read for database data file=/home/user/project/target_DB/target_DB.idx, database index=/home/user/project/target_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. ## MMseqs Output (for bugs); [MMseqs output](https://gist.github.com/bchodkowski-vir/a144575014463748bfed089df6a8c03a). ## Context; I wish to run `colabfold_search` on my own database via `--db1 'target_DB'`. `colabfold_search` works fine with `--db1 'uniref30_2103_db'`. Number of sequences in `query.fasta`: 1; ```; egrep -c '^>' query.fasta; 1. wc -l result_20230419_115721/qdb; 1 result_20230419_115721/qdb; ```. Number of sequences in `target_DB.fasta`: 104664; ```; egrep -c '^>' target_DB.fasta; 104664. wc -l target_DB; 104664 target_DB; ```. Number of sequences in resulting database `res`: 1011; ```; wc -l result_20230419_115721/res; 1011 result_20230419_115721/res; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:8325,load,load-mode,8325,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance,"ode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 25.00K 0s 11ms ; Time for merging to pref_rescore1: 0h 0m 0s 8ms==================>] 99.34% 24.84K eta 0s ; Time for processing: 0h 0m 0s 48ms; clust experiments/small.mm.db experiments/tmp//6404161245249296443/pref_rescore1 experiments/tmp//6404161245249296443/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 25.00K 0s 9ms ; Sort entries; Find missing connections; Found 597 new connections.; Reconstruct initial order; [=================================================================] 100.00% 25.00K 0s 17ms ; Add missing connections; [=================================================================] 100.00% 25.00K 0s 1ms . Time for read in: 0h 0m 0s 42ms; Total time: 0h 0m 0s 47ms. Size of the",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:5979,load,load-mode,5979,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['load'],['load-mode']
Performance,"ode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3 . [=================================================================] 177.98K 0s 684ms; Time for merging to q_orfs_aa_h: 0h 0m 0s 101ms; Time for merging to q_orfs_aa: 0h 0m 0s 105ms; Time for processing: 0h 0m 1s 79ms; prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:4551,load,load-mode,4551,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['load'],['load-mode']
Performance,"of prefilter, rescorediagonal is executed, some merge steps are executed, new tmp directories are created, and the program dies partway through the second round of prefilter. ## Steps to Reproduce (for bugs); Downloaded the UniRef90 database with wget:; `wget https://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref90/uniref90.fasta.gz`. Decompressed with gunzip, then ran createdb:; `mmseqs createdb uniref90.fasta uniref90`; ; Augmented with taxonomic information (used -db-mode 0 because createbintaxonomy kept crashing as well):; `mmseqs createtaxdb uniref90 tmp --tax-db-mode 0`. Created database for my query sequences:; `mmseqs createdb KLEB_PO07_megahit.fasta KLEB_PO07_megahitDB`. Ran mmseqs taxonomy on cluster with slurm script:; ```; #!/usr/bin/env bash. #SBATCH --job-name=KLEB_PO07_mmseqs; #SBATCH --cpus-per-task=32; #SBATCH --mem=150G; #SBATCH --time=0-3:00; #SBATCH --output=KLEB_PO07_mmseqs.log; #SBATCH --error=KLEB_PO07_mmseqs.err. module load mmseqs2/15-6f452; taxDB=/home/sdwork/scratch/metagenomics/uniref_db/uniref90. mmseqs taxonomy KLEB_PO07_megahitDB $taxDB KLEB_PO07_megahit_result tmp; ```. ## MMseqs Output (for bugs); [Full output can be found in this gist.](https://gist.github.com/sean-workman/531e9d5fc73635dee8c000f9da137fe0). I also see this output in my error file:; `tmp/1193166584733320518/tmp_taxonomy/17149912652888480377/tmp_hsp1/10699950925961740214/blastp.sh: line 135: 8379 Bus error (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""`. ## Context; I created metagenomic assemblies using megahit and metaSPAdes. I am trying to get MMseqs2 working to do taxonomic classification. I am running on Digital Research Alliance of Canada clusters. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15-6f452; * Which MMseqs version was used (",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838:1118,load,load,1118,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838,1,['load'],['load']
Performance,"ogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target split mode. Searching through 4 splits; Estimated memory consumption: 149G; Target database size: 152631149 type: Aminoacid; Process prefiltering step 1 of 4. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 38.15M 2m 48s 107ms; Index table: Masked residues: 98253761; Index table: fill; [=================================================================Floating point exception (core dumped); Error: Prefilter died; Error: First search died; Error: taxonomy died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs V",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/473:1976,load,load-mode,1976,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473,1,['load'],['load-mode']
Performance,"okup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: b4c1bc7cf89bc0bd577c5a9d3c1f7bedc1f74152; * Which MMseqs version: f5b588be54de35876eff90f3694b67e1d00856ef; * Server specifications: Intel(R) ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:4496,load,load-mode,4496,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['load'],['load-mode']
Performance,"ompiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/casser",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:1198,Perform,Performing,1198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,6,['Perform'],['Performing']
Performance,"on-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124** ; # I got stucked at the above command. **next I am gonna do** ; ""${MMSEQS}"" align ""${BASE}/prof_res"" ""${DB1}.idx"" ""${BASE}/res_exp"" ""${BASE}/res_exp_realign"" --db-load-mode 2 -e ${ALIGN_EVAL} --max-accept ${MAX_ACCEPT} --alt-ali 10 -a; ""${MMSEQS}"" filterresult ""${BASE}/qdb"" ""${DB1}.idx"" ""${BASE}/res_exp_realign"" ""${BASE}/res_exp_realign_filter"" --db-load-mode 2 --qid 0 --qsc $QSC --diff 0 --max-seq-id 1.0 --filter-min-enable 100. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; $ time mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124; expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124 . MMseqs Version: 	GITDIR-NOTFOUND; Expansion mode 	0; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Max sequence length 	65535; Score bias 	0; Compositional bias 	1; Compositional bias 	1; E-value threshold 	inf; Seq. id. threshold 	0; Coverage threshold 	0; Coverage mode 	0; Pseudo count mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Expand filter clusters 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.95; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	2; Compressed 	0; Threads 	124; Verbosity 	3. Input database ""./uniprot/uniprotdb.index"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid. ## Context; trying to get the mmseqs out in the MSA format so we c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:2914,load,load-mode,2914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['load'],['load-mode']
Performance,"or. The first two commands result in two different databases:. `wc -l test1`; 15447 test1. `wc -l test2`; 32 test2. The third command runs without issuing any warning (it effectively does nothing to the database). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1. Download a small NCBI-like taxonomy database **swissProtSomeClasses** from [here](https://github.com/soedinglab/metaeuk-regression/tree/master/sacc_tax); 2. Run the commands above. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The stri",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/320:1444,Load,Loading,1444,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320,1,['Load'],['Loading']
Performance,"or; Run mmseq search with an array of jobs. ## Current Behavior; As a test, I began with an array of 5 jobs only. 2 of them failed with a different error message. When I run them alone, they work. This behaviour is similar to the issue #239 . ## Steps to Reproduce (for bugs); `sarray -J mmseq --mail-type=ARRAY_TASKS,FAIL commandMMseqs --%=5`; where commandMMseqs contains:; `sbatch command_mmseq2_model.sbatch GCA_018105865.1 GCA_901001135.2` ; `sbatch command_mmseq2_model.sbatch GCA_009193005.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_905160935.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_019095985.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_001703475.1 GCA_901001135.2`. command_mmseq2_model.sbatch contains:; ```; #!/bin/bash; #; #SBATCH -N 1 # nombre de nœuds; #SBATCH -c 20 # nombre de cœurs sur ce meme noeud; #SBATCH --mem 50G # mémoire vive pour l'ensemble des cœurs; #SBATCH -J mmseq. module load system/Miniconda3-4.7.10 ; module load bioinfo/mmseqs2-v13.45111. mmseqs search copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out tmp -s 5.7 --search-type 3 --threads 20 --max-seqs 50 ; mmseqs filterdb mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit --extract-lines 1 ; mmseqs convertalis copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.*[0-9]* &; awk '{if ($3>=0.75 && $4>=300 && $12>=200) print $0}' mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab > mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab.filtered; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; ```. ## MMseqs Output (for bugs); One job fails with `Could not de",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/607:1012,load,load,1012,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/607,1,['load'],['load']
Performance,"osity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=this@entry=0x7fffffffd290, __position=__position@entry=...); at /usr/include/c++/9/bits/vector.tcc:440; #11 0x000000000060c68b in std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/666:2303,optimiz,optimized,2303,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666,1,['optimiz'],['optimized']
Performance,"otation; ```; createdb input.fasta input_script7/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 31ms; Time for merging to qdb: 0h 0m 0s 31ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 145ms; Create directory input_script7/tmp1; search input_script7/qdb uniref30_2302_db input_script7/res input_script7/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000 ; prefilter input_script7/qdb uniref30_2302_db.idx input_script7/tmp1/1006494840762416450/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ### Without single-quotation; ```; createdb input.fasta input_script5/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 32ms; Time for merging to qdb: 0h 0m 0s 47ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 226ms; Create directory input_script5/tmp1; search input_script5/qdb uniref30_2302_db input_script5/res input_script5/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000 ; prefilter input_script5/qdb uniref30_2302_db.idx input_script5/tmp1/16308606893082150349/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:96,prof:80 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-b",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/759:1870,load,load-mode,1870,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/759,1,['load'],['load-mode']
Performance,"ou may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 of overall calculated).; 1.097190 hits per query sequence.; Time for merging to aln: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 84ms; clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compresse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:11775,load,load-mode,11775,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['load'],['load-mode']
Performance,"p pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Create directory tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1; search BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/first tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1 --alignment-mode 1 -e 0.0001 --max-rejected 5 --max-accept 30 --threads 36 -s 3 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1. prefilter BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1/10054445979770264072/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 36 --compressed 0 -v 3 -s 3.0. Query database size: 355695 type: Aminoacid; Estimated memory consumption: 2T; Target database size: 532633656 type: Aminoacid; Index table k-mer threshold: 152 at k-mer size 7; Index table: counting k-mers. ```. Thank you.; Best,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/678:4482,load,load-mode,4482,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678,1,['load'],['load-mode']
Performance,"p/3198441352783276465/input tmp/3198441352783276465/clu tmp/3198441352783276465/clu_tmp --max-seqs 20 -c 0 --cov-mode 5 --spaced-kmer-mode 1 --threads 24 --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --cluster-mode 1 --cluster-reassign 1 --remove-tmp-files 1 . Set cluster sensitivity to -s 1.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusteringSet cluster iterations to 1; linclust tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/clu_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 5 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjus",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:4978,load,load-mode,4978,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['load'],['load-mode']
Performance,performance fail on single query search,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/165:0,perform,performance,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/165,1,['perform'],['performance']
Performance,"phafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 180, in main; mmseqs_search(; File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 100, in mmseqs_search; run_mmseqs(mmseqs, [""search"", base.joinpath(""prof_res""), dbbase.joinpath(metagenomic_db), base.joinpath(""res_env""), base.joinpath(""tmp""), ""--threads"", str(threads)] + search_param); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 21, in run_mmseqs; subprocess.check_call([mmseqs] + params); File ""/usr/lib/python3.8/subprocess.py"", line 364, in check_call; raise CalledProcessError(retcode, cmd); subprocess.CalledProcessError: Command '[PosixPath('/home/x/genomic/mmseqs2/MMseqs2/build/bin/mmseqs'), 'search', PosixPath('results_700_only_456_fasta_700_5/prof_res'), PosixPath('../db_sources/colabfold_envdb_202108_db'), PosixPath('results_700_only_456_fasta_700_5/res_env'), PosixPath('results_700_only_456_fasta_700_5/tmp'), '--threads', '64', '--num-iterations', '3', '--db-load-mode', '2', '-a', '-s', '8', '-e', '0.1', '--max-seqs', '10000']' returned non-zero exit status 1.; ```. ## Steps to Reproduce (for bugs). Put in `input_sequences.fasta` anywhere (it affects single entry fasta and also miltientry fasta) one of those examples:; * `SEGGQDFWL`; * `GSSGLISMPRV`. Setup ColabFold databases from https://github.com/sokrypton/ColabFold/blob/main/setup_databases.sh; Run `colabfold_search input_sequences.fasta /path/to/db_folder search_results`; you will see above crash. **OR**. Go to https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb and try to fold one of the examples, you will see:; > Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/538:2926,load,load-mode,2926,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538,1,['load'],['load-mode']
Performance,"port for AVX2/SSE and amount of system memory):; ```; $ cat /proc/cpuinfo [truncated to 1 core]; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 85; model name : Intel(R) Xeon(R) Gold 6130 CPU @ 2.10GHz; stepping : 4; microcode : 0x2007006; cpu MHz : 2100.000; cache size : 22528 KB; physical id : 0; siblings : 32; core id : 0; cpu cores : 16; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 22; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts hwp hwp_act_window hwp_epp hwp_pkg_req pku ospke md_clear flush_l1d arch_capabilities; vmx flags : vnmi preemption_timer posted_intr invvpid ept_x_only ept_ad ept_1gb flexpriority apicv tsc_offset vtpr mtf vapic ept vpid unrestricted_guest vapic_reg vid ple shadow_vmcs pml ept_mode_based_exec tsc_scaling; bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit mmio_stale_data; bogomips : 4200.00; clflush size : 64; cache_alignment : 64; address sizes : 46 bits physical, 48 bits virtual; power management:. $ free; total used free shared buff/cache available; Mem: 791192240 20105804 63519620 33656 707566816 765066152; Swap: 0 0 0; ```; * Operating system and vers",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/833:4264,cache,cache,4264,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/833,1,['cache'],['cache']
Performance,"prof:80'` is passed to search or `--k-score seq:96,prof:80`,; `--k-score seq:96,prof:80` is passed internally to prefilter.; ## Current Behavior; When `--k-score 'seq:96,prof:80'` is passed to `mmseqs search`, `--k-score seq:2147483647,prof:2147483647` is passed to prefilter,; and when `--k-score seq:96,prof:80` is passed, `--k-score seq:96,prof:80` is passed.; ## Steps to Reproduce (for bugs); ```; export MMSEQS_CALL_DEPTH=1; SEARCH_PARAM=""--num-iterations 3 --db-load-mode 0 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000""; # or; SEARCH_PARAM=""--num-iterations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000"". mmseqs search ""${BASE}/qdb"" ""${DB1}"" ""${BASE}/res"" ""${BASE}/tmp1"" $SEARCH_PARAM; ```; ## MMseqs Output (for bugs); ### With single-quotation; ```; createdb input.fasta input_script7/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 31ms; Time for merging to qdb: 0h 0m 0s 31ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 145ms; Create directory input_script7/tmp1; search input_script7/qdb uniref30_2302_db input_script7/res input_script7/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000 ; prefilter input_script7/qdb uniref30_2302_db.idx input_script7/tmp1/1006494840762416450/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ### Without single-quotation; ```; createdb input.fasta inpu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/759:1205,load,load-mode,1205,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/759,1,['load'],['load-mode']
Performance,"put: 0h 0m 0s 1ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 33ms; Create directory tmp2/6664721939282577716/clu_tmp; cluster tmp2/6664721939282577716/input tmp2/6664721939282577716/clu tmp2/6664721939282577716/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:4557,load,load-mode,4557,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['load'],['load-mode']
Performance,"put_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 5ms; Time for processing: 0h 0m 1s 628ms; extractframes tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 6.46M 24s 391ms; Time for merging to query_seqs_h: 0h 0m 3s 920ms; Time for merging to query_seqs: 0h 0m 19s 622ms; Time for processing: 0h 0m 57s 140ms; prefilter tmp/576731152808920235/query_seqs tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 128 --compressed 0 -v 3 . Query database size: 12919340 type: Nucleotide; Estimated memory consumption: 95G; Target database size: 6459670 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 6.46M 24s 264ms; Index table: Masked residues: 231705872; Index table: fill; [=================================================================] 6.46M 51s 182ms; Index statistics; Entries: 7104738736; DB size: 48845 MB; Avg k-mer size: 6.616804; Top 10 k-mers; GAACAACCGGCTTAG	562246; CTCACCACGAAACGG	555944; TCATGATAAGCGCTG	492357; GTTGCTCATGAAGGT	467881; CCCGTTCGTTGCAGG	454633; CCGTTGGCCAGTAAG	425430; TCTTCACTAGACCGT	407926; CTGGATGTCCACCAG	396183; GCCCTGCAACCACGG	387874; CTACCTCTCCCCTTG	382664; Time for index table init: 0h 1m 21s 797ms; Process prefiltering step 1 of 1. k-me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:11463,load,load-mode,11463,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['load'],['load-mode']
Performance,"qs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	5; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	1; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner 	; Remove Temporary Files 	true; Alignment Format 	0; Format alignment output 	query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen; Database Output 	false; Overlap 	0; Split Seq. by len 	true; Do not shuffle input da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:1873,perform,performs,1873,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['perform'],['performs']
Performance,"qs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; --rescore-mode 	0 	Rescore diagonal with: 0: Hamming distance, 1: local alignment (score only) or 2: local alignment; --min-length 	30 	minimum codon number in open reading frames ; --max-length 	32734 	maximum codon number in open reading frames ; --max-gaps 	2147483647	maximum number of codons with gaps or unknown residues before an open reading frame is rejected; --contig-start-mode 	2 	Contig start can be 0: incomplete, 1: complete, 2: both ; --contig-end-mode 	2 	Contig end can be 0: incomplete, 1: complete, 2: both ; --orf-start-mode 	1 	Orf fragment can be 0: from start to stop, 1: from any to stop, 2: from last encountered start to stop (no start in the middle); --forward-frames 	1,2,3 	comma-seperated list of ORF frames on the forward strand to be extracted; --reverse-frames 	1,2,3 	comma-seperated list of ORF frames on the reverse strand to be extracted; --translation-table 	1 	1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE, 9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL, 15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL, 23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA, 29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA; --use-all-table-starts	false 	use all alteratives for a start codon in the genetic table, if false - only ATG (AUG); --id-offset 	0 	numeric ids in index file are offset by this value ; --add-orf-stop 	false 	add * at complete start and end ; --start-sens 	4.000 	start sensitivity ; --sens-steps 	1 	Search steps performed from --sta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:8620,load,load-mode,8620,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['load'],['load-mode']
Performance,"r), ""--max-seq-id"", ""0.95"",]. run_mmseqs(mmseqs, [""search"", base.joinpath(""qdb""), dbbase.joinpath(uniref_db), base.joinpath(""res""), base.joinpath(""tmp""), ""--threads"", str(threads)] + search_param); #queryDB 데이터베이스에서 uniref30_2103_db 데이터베이스를 대상으로 검색을 수행합니다.; #검색 결과는 res 디렉토리에 저장되고, 임시 파일은 tmp 디렉토리에 저장됩니다; ; run_mmseqs(mmseqs, [""mvdb"", base.joinpath(""tmp/latest/profile_1""), base.joinpath(""prof_res"")]); run_mmseqs(mmseqs, [""lndb"", base.joinpath(""qdb_h""), base.joinpath(""prof_res_h"")]); ; run_mmseqs(mmseqs, [""expandaln"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""), base.joinpath(""res""), dbbase.joinpath(f""{uniref_db}{dbSuffix2}""), base.joinpath(""res_exp""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + expand_param); run_mmseqs(mmseqs, [""align"", base.joinpath(""prof_res""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""), base.joinpath(""res_exp""), base.joinpath(""res_exp_realign""), ""--db-load-mode"", str(db_load_mode), ""-e"", str(align_eval), ""--max-accept"", str(max_accept), ""--threads"", str(threads), ""--alt-ali"", ""10"", ""-a""]); run_mmseqs(mmseqs, [""filterresult"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign""), base.joinpath(""res_exp_realign_filter""), ""--db-load-mode"",; str(db_load_mode), ""--qid"", ""0"", ""--qsc"", str(qsc), ""--diff"", ""0"", ""--threads"",; str(threads), ""--max-seq-id"", ""1.0"", ""--filter-min-enable"", ""100""]); run_mmseqs(mmseqs, [""result2msa"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign_filter""), base.joinpath(""uniref.a3m""), ""--msa-format-mode"",; ""6"", ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + filter_param); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign_filter"")]); ; if use_templates:; run_mmseqs(mmse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:4092,load,load-mode,4092,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['load'],['load-mode']
Performance,"rce restart with latest tmp 	false; Remove temporary files 	false. extractorfs kelp_database tmp/3499313520568641582/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2; --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-; starts 0 --id-offset 0 --create-lookup 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 714.62K 18s 1ms; Time for merging to q_orfs_aa_h: 0h 0m 17s 230ms; Time for merging to q_orfs_aa: 0h 0m 22s 109ms; Time for processing: 0h 1m 20s 933ms; prefilter tmp/3499313520568641582/q_orfs_aa uniref50 tmp/3499313520568641582/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --sp; lit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lo; wer-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed ; 0 -v 3 -s 5.7 . Query database size: 61153309 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 99G; Target database size: 48531432 type: Aminoacid; Process prefiltering step 1 of 2. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 24.26M 1m 44s 733ms; Index table: Masked residues: 187925951; Index table: fill; [=================================================================] 24.26M 3m 17s 822ms; Index statistics; Entries: 6286866786; DB size: 45739 MB; Avg k-mer size: 4.911615; Top 10 k-mers; DFEQLPH	32892; NVPGWSP	32831; FRYAFPS	32736; RYYVLGW	32688; WRLDFLN	31763; TVDGDFS	31579; NKTDFVQ	31135; QDWVQIP	30874; LDGAYVP	30051; ETGRYNV	29832; Ti",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/478:3526,load,load-mode,3526,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478,1,['load'],['load-mode']
Performance,"re](https://github.com/soedinglab/metaeuk-regression/tree/master/sacc_tax); 2. Run the commands above. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): e2510e8f6911e4340c62989aa9ba1b9c58e18d60; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.5.1, c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609; * Server specifications (especially CPU s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/320:1845,Load,Loading,1845,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320,2,['Load'],['Loading']
Performance,"reateindex DB tmp; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; createindex DB tmp . Program received signal SIGILL, Illegal instruction.; Parameters::printParameters (this=0x56b9c090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; 2017	 ss << ByteParser::format(*((size_t *)par[i]->value), 'a', 'h');; (gdb) bt; #0 Parameters::printParameters (this=0x56b9c090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; #1 0x566a3d88 in Parameters::checkIfDatabaseIsValid (this=0x56b9c090, command=..., argc=2, argv=0xffffcddc, isStartVar=false, isMiddleVar=false, isEndVar=false); at ./src/commons/Parameters.cpp:1905; #2 0x566a7f29 in Parameters::parseParameters (this=0x56b9c090, argc=2, pargv=0xffffcddc, command=..., printPar=<optimized out>, parseFlags=0, outputFlags=0); at ./src/commons/Parameters.cpp:1850; #3 0x568ab4cc in createindex (argc=2, argv=0xffffcddc, command=...) at ./src/workflow/CreateIndex.cpp:137; #4 0x565bc79d in runCommand (p=0x56ba50c0, argc=2, argv=0xffffcddc) at ./src/commons/Application.cpp:38; #5 0x565ab4cb in main (argc=4, argv=0xffffcdd4) at ./src/commons/Application.cpp:196; ```; same with the sse4.1 variant, etc..; ```; (gdb) run createindex DB tmp; Starting program: /usr/bin/mmseqs-sse4.1 createindex DB tmp; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; createindex DB tmp . Program received signal SIGILL, Illegal instruction.; Parameters::printParameters (this=0x56bba090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; 2017	 ss << ByteParser::format(*((size_t *)par[i]->value), 'a', 'h');; (gdb) bt; #0 Parameters::printParameters (this",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418:1116,optimiz,optimized,1116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418,1,['optimiz'],['optimized']
Performance,"reateindex DB tmp; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; createindex DB tmp . Program received signal SIGILL, Illegal instruction.; Parameters::printParameters (this=0x56bba090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; 2017	 ss << ByteParser::format(*((size_t *)par[i]->value), 'a', 'h');; (gdb) bt; #0 Parameters::printParameters (this=0x56bba090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; #1 0x5669efec in Parameters::checkIfDatabaseIsValid (this=0x56bba090, command=..., argc=2, argv=0xffffcddc, isStartVar=false, isMiddleVar=false, isEndVar=false); at ./src/commons/Parameters.cpp:1905; #2 0x566a32a9 in Parameters::parseParameters (this=0x56bba090, argc=2, pargv=0xffffcddc, command=..., printPar=<optimized out>, parseFlags=0, outputFlags=0); at ./src/commons/Parameters.cpp:1850; #3 0x5689d5ac in createindex (argc=2, argv=0xffffcddc, command=...) at ./src/workflow/CreateIndex.cpp:137; #4 0x565bbf0d in runCommand (p=0x56bc30c0, argc=2, argv=0xffffcddc) at ./src/commons/Application.cpp:38; #5 0x565aabcb in main (argc=4, argv=0xffffcdd4) at ./src/commons/Application.cpp:196; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; ```; mmseqs-avx2 createdb examples/DB.fasta DB; mmseqs-avx2 createindex DB tmp; ```. ## MMseqs Output (for bugs); ```; Create directory tmp; createindex DB tmp . Illegal instruction (core dumped); ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418:2598,optimiz,optimized,2598,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418,1,['optimiz'],['optimized']
Performance,"red_nr/nr_rep_seq_to_taxid.map' -v 3; Create directory tmp; createtaxdb nr_rep_seq_db tmp --tax-mapping-file /data/clustered_nr/nr_rep_seq_to_taxid.map -v 3 . MMseqs Version: 	2fad714b525f1975b62c2d2b5aff28274ad57466; NCBI tax dump directory	; Taxonomy mapping file 	/data/clustered_nr/nr_rep_seq_to_taxid.map; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	20; Verbosity 	3. Download taxdump.tar.gz. 02/01 11:29:59 [NOTICE] Downloading 1 item(s); [#b8b044 0B/0B CN:1 DL:0B] ; 02/01 11:30:01 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; [#b8b044 51MiB/61MiB(84%) CN:1 DL:10MiB] ; 02/01 11:30:08 [NOTICE] Download complete: tmp/taxdump.tar.gz. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; b8b044|OK | 9.1MiB/s|tmp/taxdump.tar.gz. Status Legend:; (OK):download completed.; Loading nodes file ... Done, got 2550743 nodes; Loading merged file ... Done, added 75930 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```; ## Context; I want to search some query sequences locally against a clustered version of the NR database. I downloaded the clustered database and taxonomy files (nr_cluster_taxid_formatted_final.tsv.gz, nr_rep_seq.fasta.gz) from [here](https://osf.io/tejwd/), which was created as per: https://research.arcadiascience.com/pub/resource-nr-clustering/release/3. I then processed the files like so:. ```; gunzip -c nr_cluster_taxid_formatted_final.tsv.gz | cut -f1,2 > nr_rep_seq_to_taxid.map; mmseqs createdb nr_rep_seq.fasta.gz nr_rep_seq_db; ```. After these completed successfully, I tried to create the taxdb as per the above:. ```; mmseqs createtaxdb nr_rep_seq_db tmp --tax-mapping-file '/data/clustered_nr/nr_rep_seq_to_taxid.map' -v 3; ```. But the job was killed. Questions:; * Was it likely killed because of exhausting my available RAM? ; - If so, is there a way to restri",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/811:1613,Load,Loading,1613,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811,1,['Load'],['Loading']
Performance,"ref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; mpic++/ 4.8.5 20150623 (Red Hat 4.8.5-36); cmake/3.12.3 ; module load cmake/3.12.3 ; module load openmpi/gcc/64/1.10.3 ; cd mmseqs2; mkdir build ; cd build ; CC=mpicc CXX=mpic++ cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/hpcf/authorized_apps/rhel7_apps/mmseqs2/install/11-e1a1c_sse4.1 -DHAVE_SSE4_1=1 ; make; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; LSF with SSE4 support. The job was submitted using 24 slots with 8 slots per host with a total requested memory of 199992.00 MB; * Operating system and version:; uname -a; Linux nodecn104 3.10.0-957.21.3.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:45726,load,load,45726,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,2,['load'],['load']
Performance,"res calculation (step 1 of 1); Query db start 1 to 8338; Target db start 1 to 8338; [=================================================================] 8.34K 26s 907ms. 903.365687 k-mers per position; 4641 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 88 sequences passed prefiltering per query sequence; 76 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 36ms; Time for processing: 0h 0m 32s 520ms; align ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/pref_step2 ./mmseqs_output/tmp/5351426679731834765/aln_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 8338 type: Aminoacid; Target database size: 8338 type: Aminoacid; Calculation of alignments; [=================================================================] 8.34K 17s 958ms; Time for merging to aln_step2: 0h 0m 0s 88ms; 489475 alignments calculated; 8622 sequence pairs passed the thresholds (0.017615 of overall calculated); 1.034061 hits per query sequence; Time for processing: 0h 0m 18s 545ms; clust ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/aln_step2 ./mmseqs_output/tmp/5351426679731834765/clu_step2 --cluster-mode 1 --ma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:30831,load,load-mode,30831,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:3016,load,load-mode,3016,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['load'],['load-mode']
Performance,"rget database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.11M 1h 57m 11s 538ms; Time for merging to aln: 0h 0m 19s 511ms. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:12806,load,load-mode,12806,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['load'],['load-mode']
Performance,"rging to query: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Database type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Time for merging to query.lookup: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Tmp /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp folder does not exist or is not a directory.; docker-compose-mmseqs-web-worker-1 | prefilter /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 7.5 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Estimated memory consumption: 1G; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Process prefiltering step 1 of 1; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | k-mer similarity threshold: 96; docker-compose-mmseqs-web-worker-1 | Starting prefiltering scores calculation (step 1 of 1); docker-compose-mmseqs-web-worker-1 | Q",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717:3116,load,load-mode,3116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717,1,['load'],['load-mode']
Performance,"rity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 4000; Target db start 1 to 365688; [=================================================================] 100.00% 4.00K 0s 74ms ; [================================================================>] 99.72% 3.99K eta 0s ; 0.926667 k-mers per position; 434 DB matches per sequence; 0 overflows; 4 sequences passed prefiltering per query sequence; 1 median result list length; 1762 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 5ms; Time for processing: 0h 0m 40s 369ms; align tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 tmp/7935334228278574252/search/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 2 --max-seq-len 10000 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Compute score only; Query database size: 4000 type: Nucleotide; Target database size: 365688 type: Nucleotide; Calculation of alignments; Query sequence 236 has a result with no diagonal information. Please check your database.; Error: Alignment died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used:`df77d9e6cf640fe8990f247441ab44d4f4ad9cdc`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):**_Statically-compiled_**; * Server specifications (especially CPU support for AVX2/SSE",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:6940,load,load-mode,6940,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,1,['load'],['load-mode']
Performance,"rop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; [=================================================================Segmentation fault; Error: Create profile died; ```. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; * Which MMseqs version was used:Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 32-core, 256 GB ram, vmtouch'ed target into memory (crash happens either way though); * Operating system and version: Debian GNU/Linux 11 (bullseye)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:6481,load,load-mode,6481,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['load'],['load-mode']
Performance,"rt + 1 + hsp.sbjct_end - hsp.sbjct_start + 1) / (alignment.length + record.query_length); if coverage < 0.9:; es.append(None); perc_identities.append(None). # check that the first hsp of the first align is indeed the best; for align in record.alignments:; for hsp in align.hsps:; if hsp.expect < e:; raise ValueError('Not the best hsp'). es.append(e); perc_identities.append(hsp.identities / ((alignment.length + record.query_length)/2)). num_aligned = len([e for e in es if e is not None]); # remove nans; es = [e for e in es if e is not None]; perc_identities = [p for p in perc_identities if p is not None]; mean_percid = sum(perc_identities)/len(perc_identities); mean_e = sum(es)/len(es); max_percid = max(perc_identities); min_e = min(es). result_dict = MMSEQS_PARAMS; result_dict['num_aligned'] = num_aligned; result_dict['mean_percid'] = mean_percid; result_dict['mean_e'] = mean_e; result_dict['max_percid'] = max_percid; result_dict['min_e'] = min_e. # load the current results (tsv) and append the new results; results_path = os.path.join('./', ""results.tsv""); if os.path.exists(results_path):; results = pd.read_csv(results_path, sep='\t'); results = results.append(result_dict, ignore_index=True); else:; results = pd.DataFrame([result_dict]). results.to_csv(results_path, sep='\t', index=False). if __name__ == ""__main__"":; main(); ```. ## MMseqs Output (for bugs); Here is one output example, though I have run the above script varying the parameters for a number of params. ```; cluster ./mms_smallDB ./mmseqs_output/mmseq_clu ./mmseqs_output/tmp --cluster-mode 1 --cluster-steps 3 --cluster-reassign 1 --cov-mode 0 -c 0.8 -e 0.001 -s 7 --min-seq-id 0.4 --threads 40 --max-seqs 200 --max-iterations 1000 --alignment-mode 3 --similarity-type 2 . MMseqs Version: 14.7e284; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 7; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:6639,load,load,6639,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load']
Performance,"rt mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --k-score 2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 5.7. Query database size: 25293 type: Aminoacid; Estimated memory consumption: 18G; Target database size: 3570076 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 3.57M 8s 444ms; Index table: Masked residues: 11969832; Index table: fill; [=================================================================] 100.00% 3.57M 8s 228ms; Index statistics; Entries: 1027253274; DB size: 6366 MB; Avg k-mer size: 16.050832; Top 10 k-mers; TGPTYY 27757; AFYRLP 26608; PIPVFY 26525; FTVGTY 26386; TLTNDY 25757; SALDYW 25262; EPVKNS 25067; GAFLPY 24885; AGYFDW 24698; HYFVAV 24187; Time for index table init: 0h 0m 17s 833m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:3359,load,load-mode,3359,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,1,['load'],['load-mode']
Performance,"rtik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:33864,Load,Loaded,33864,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,"s 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 48 --compressed 0 -v 3 -s 7.0 . Query database size: 1270615 type: Profile; Estimated memory consumption: 7G; Target database size: 1270615 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 1.27M 6s 285ms; Index table: Masked residues: 39476984; Index table: fill; [=================================================================] 1.27M 5s 428ms; Index statistics; Entries: 522806522; DB size: 3479 MB; Avg k-mer size: 8.168852; Top 10 k-mers; IHDKNI	9354; DVSGLL	6729; LGGFVY	6623; SSSSSS	5575; IGGFVY	4538; LSCHLV	4001; EKDYGV	3708; LIMAGS	3629; FGVKLP	3541; KSVSVV	3538; Time for index table init: 0h 0m 12s 974ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:8662,load,load-mode,8662,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['load'],['load-mode']
Performance,"s 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Prefilter mode 	0; Exhaustive search mode 	true; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter tmp/5233442526903138997/profileDB Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 75233 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 . Query database size: 75233 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 75233 type: Aminoacid; Index table k-mer threshold: 91 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 75.23K 0s 271ms ; Index table: Masked residues: 52417; Index table: fill; [=================================================================] 100.00% 75.23K 0s 415ms ; Index statistics; Entries: 23045881; DB size: 620 MB; Avg k-mer size: 0.360092; Top 10 k-mers; GGNQHH	4218; NTSHHH	3502; NYHFDY	2183; LEVYHY	2100; VTDHHH	1805; TPMRHS	1770; GWNHFP	1732; LIWRGT	1732; GLYIHL	1684; WAHVSS	1682; Time for index table init: 0h 0m 1s 16ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:3816,load,load-mode,3816,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['load'],['load-mode']
Performance,"s 128 --compressed 0 -v 3 ; ```; ### Without single-quotation; ```; createdb input.fasta input_script5/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 32ms; Time for merging to qdb: 0h 0m 0s 47ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 226ms; Create directory input_script5/tmp1; search input_script5/qdb uniref30_2302_db input_script5/res input_script5/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000 ; prefilter input_script5/qdb uniref30_2302_db.idx input_script5/tmp1/16308606893082150349/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:96,prof:80 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ## Context; I am trying to do a mmseqs2 colabfold search locally.; However, the local result doesn't match the MSA server results.; To reproduce the server results, I am trying to find out which option the MSA server is actually using. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): bb0a1b3569b9fe115f3bf63e5ba1da234748de23 or 14.7e284; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled or anaconda ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/759:3012,load,load-mode,3012,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/759,1,['load'],['load-mode']
Performance,"s calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Profile; Estimated memory consumption: 21K; Target database size: 5 type: Nucleotide; Can not allocate entries memory in IndexTable; Error: Prefilter died; Error: Search step died; Error: Search died. ## Your Environment; MMseqs2 Version: 13.45111 (installed from anaconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:14892,load,load-mode,14892,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['load'],['load-mode']
Performance,"s the NR database, but it keeps SegFaulting on me. The job had 750G memory available, and as far as I can tell it doesn't seem to be overblowing that (the core dump is <400G). I ran createindex in the same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1025,load,loading,1025,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,3,['load'],"['load', 'loading']"
Performance,"s, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file. This fasta file size <1gb but I first tried to run this process on a >80gb file on remote compute node and was concerned when I saw the job was using only a small part of the resources.; Not part of this issue but realted; also tried to do the same thing with a large protein file but I get invalid fasta entry errors (maybe because of the ""*"" marking STOPs left by the ORF predictor, but that wouldn't happen in the nucleic acid file example above). ## Your Environment; * Git commit used:; I tried on my personal machine and a compute node (PBS), similar behaviour in both. ; Personal machine MMseqs2 Version: 48a037a2e2cf5ea140c6c5de357b7147e5310b4d.; Server MMseqs2 Version: 2a8c5f00f820c5c9a577676707095ef17bcff04a.; * Which MMseqs version was used: Statically-compiled; * Server specifications:; Server: (2a8c5f00f820c5c9a577676707095ef17bcff04a); CPU: Intel(R) Xeon(R) Platinum 8168; Memory: 366 GB; Personal machine: (48a037a2e2cf5ea140c6c5de357b7147e5310b4d); CPU: Intel Core i7-8700 6-Core model: bits: 64 type: L2 cache: 12.0 MiB ; Memory: 15.33 GB; * Operating system and version:; Personal machine: Linux Mint 19.2 Tina Kernel: 4.15.0-72-generic x86_64; ; Server: Linux 3.10.0-693.el7.x86_64. Thanks for developing and maintaining this totally amazing tool !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261:3027,cache,cache,3027,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261,1,['cache'],['cache']
Performance,s; [=================================================================] 1.30M 1h 24m 48s 423ms; Time for merging to aln: 0h 0m 0s 504ms; 662682155 alignments calculated; 492943101 sequence pairs passed the thresholds (0.743861 of overall calculated); 379.633209 hits per query sequence; Time for processing: 1h 27m 9s 264ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 746ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/input_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; offsetalignment /tmp//2989869989197200687/query /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/aln /tmp//2989869989197200687/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 32 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 29ms; Writing results to: /tmp//2989869989197200687/result; [=================================================================] 514.46K 49s 642ms. Time for merging to result: 0h 0m 0s 988ms; Time for processing: 0h 0m 58s 569ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs_aa -v 3 . Time for proce,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:24961,load,load-mode,24961,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['load'],['load-mode']
Performance,"s_exp_realign_filter""), base.joinpath(""uniref.a3m""), ""--msa-format-mode"",; ""6"", ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + filter_param); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign_filter"")]); ; if use_templates:; run_mmseqs(mmseqs, [""search"", base.joinpath(""prof_res""), dbbase.joinpath(template_db), base.joinpath(""res_pdb""),; base.joinpath(""tmp2""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads), ""-s"", ""7.5"", ""-a"", ""-e"", ""0.1"", ""--prefilter-mode"", str(prefilter_mode)]); run_mmseqs(mmseqs, [""convertalis"", base.joinpath(""prof_res""), dbbase.joinpath(f""{template_db}{dbSuffix3}""), base.joinpath(""res_pdb""),; base.joinpath(f""{template_db}""), ""--format-output"",; ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar"",; ""--db-output"", ""1"",; ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)]); run_mmseqs(mmseqs, [""unpackdb"", base.joinpath(f""{template_db}""), base.joinpath("".""), ""--unpack-name-mode"", ""0"", ""--unpack-suffix"", "".m8""]); run_mmseqs(mmseqs, [""rmdb"", base.joinpath(""res_pdb"")]); run_mmseqs(mmseqs, [""rmdb"", base.joinpath(f""{template_db}"")]). run_mmseqs(mmseqs, [""unpackdb"", base.joinpath(""final.a3m""), base.joinpath("".""), ""--unpack-name-mode"", ""0"", ""--unpack-suffix"", "".a3m""]); run_mmseqs(mmseqs, [""rmdb"", base.joinpath(""final.a3m"")]); run_mmseqs(mmseqs, [""rmdb"", base.joinpath(""uniref.a3m"")]); run_mmseqs(mmseqs, [""rmdb"", base.joinpath(""res"")]); # @formatter:on; # fmt: on. for file in base.glob(""prof_res*""):; file.unlink(); shutil.rmtree(base.joinpath(""tmp"")); if use_templates:; shutil.rmtree(base.joinpath(""tmp2"")); if use_env:; shutil.rmtree(base.joinpath(""tmp3""))`; ; ; <MMseqs2 (easy) search> ; mmseqs createdb {query_db.fa} {queryDB_name}; mmseqs createdb /applic/AlphaFold/curren",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:5732,load,load-mode,5732,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['load'],['load-mode']
Performance,"scores calculation (step 1 of 1); Query db start 1 to 10966; Target db start 1 to 10966; [=================================================================] 10.97K 3s 91ms. 46.510777 k-mers per position; 438 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 13 sequences passed prefiltering per query sequence; 7 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 41ms; Time for processing: 0h 0m 8s 706ms; align ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/pref_step1 ./mmseqs_output/tmp/5351426679731834765/aln_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 10966 type: Aminoacid; Target database size: 10966 type: Aminoacid; Calculation of alignments; [=================================================================] 10.97K 9s 362ms; Time for merging to aln_step1: 0h 0m 0s 91ms; 128470 alignments calculated; 17027 sequence pairs passed the thresholds (0.132537 of overall calculated); 1.552708 hits per query sequence; Time for processing: 0h 0m 9s 872ms; clust ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/aln_step1 ./mmseqs_output/tmp/5351426679731834765/clu_step1 --cluster-mode 1 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:26241,load,load-mode,26241,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"se; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Estimated memory consumption: 127G; Target database size: 34746192 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 434ms; align profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURAR",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:3773,load,load-mode,3773,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['load'],['load-mode']
Performance,sions used and their invocation:; g++ (GCC) 5.4.0; cmake version 3.28.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; uname -a | grep x86_64; Linux node7 3.10.0-1160.11.1.el7.x86_64 #1 SMP Fri Dec 18 16:34:56 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; * Operating system and version:; CentOS Linux release 8 (Core). * packages in current environment; `conda list; packages in environment at /home/liuhongbin/anaconda3/envs/colabfoldMSA:. Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 2_gnu conda-forge; absl-py 1.4.0 pypi_0 pypi; alphafold-colabfold 2.3.6 pypi_0 pypi; appdirs 1.4.4 pypi_0 pypi; astunparse 1.6.3 pypi_0 pypi; binutils 2.40 hdd6e379_0 conda-forge; binutils_impl_linux-64 2.40 hf600244_0 conda-forge; binutils_linux-64 2.40 hbdbef99_2 conda-forge; biopython 1.82 pypi_0 pypi; bzip2 1.0.8 hd590300_5 conda-forge; c-compiler 1.7.0 hd590300_0 conda-forge; ca-certificates 2023.11.17 hbcca054_0 conda-forge; cachetools 5.3.2 pypi_0 pypi; certifi 2023.11.17 pypi_0 pypi; charset-normalizer 3.3.2 pypi_0 pypi; chex 0.1.85 pypi_0 pypi; colabfold 1.5.5 pypi_0 pypi; contextlib2 21.6.0 pypi_0 pypi; contourpy 1.2.0 pypi_0 pypi; cxx-compiler 1.7.0 h00ab1b0_0 conda-forge; cycler 0.12.1 pypi_0 pypi; dm-haiku 0.0.10 pypi_0 pypi; dm-tree 0.1.8 pypi_0 pypi; flatbuffers 23.5.26 pypi_0 pypi; fonttools 4.47.0 pypi_0 pypi; gast 0.5.4 pypi_0 pypi; gcc 12.3.0 h8d2909c_2 conda-forge; gcc_impl_linux-64 12.3.0 he2b93b0_3 conda-forge; gcc_linux-64 12.3.0 h76fc315_2 conda-forge; google-auth 2.26.1 pypi_0 pypi; google-auth-oauthlib 1.2.0 pypi_0 pypi; google-pasta 0.2.0 pypi_0 pypi; grpcio 1.60.0 pypi_0 pypi; gxx 12.3.0 h8d2909c_2 conda-forge; gxx_impl_linux-64 12.3.0 he2b93b0_3 conda-forge; gxx_linux-64 12.3.0 h8a814eb_2 conda-forge; h5py 3.10.0 pypi_0 pypi; idna 3.6 pypi_0 pypi; immutabledict 4.1.0 pypi_0 pypi; importlib-metadata 4.13.0 pypi_0 pypi; jax 0.4.23 pypi_0 pypi; jaxlib 0.4.23 pypi_0 pypi; jmp 0.0.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/795:2628,cache,cachetools,2628,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/795,1,['cache'],['cachetools']
Performance,"so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctn",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:34347,Load,Loaded,34347,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,"split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 split; [=================================================================] 100.00% 541.12M 11m 3s 10ms ; Sort kmer 0h 0m 24s 363ms; Sort by rep. sequence 0h 0m 9s 647ms; Generate k-mers list for 4 split; [=================================================================] 100.00% 541.12M 11m 6s 122ms ; Sort kmer 0h 0m 14s 827ms; Sort by rep. sequence 0h 0m 3s 410ms; Merge splits ... Time for fill: 0h 14m 22s 381ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 1h 16m 36s 224ms; rescorediagonal DB DB tmp/10260956542131223380/linclust/4311072182387952617/pref tmp/10260956542131223380/linclust/4311072182387952617/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 1 -v 3 . Can not touch 215222407074 into main memory; [> ] 0.00% 1 eta -. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:7002,load,load-mode,7002,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['load'],['load-mode']
Performance,"ssed 0 -v 3 . [=================================================================] 100.00% 1.32M 0s 321ms ; Time for merging to query_seqs_h: 0h 0m 0s 490ms; Time for merging to query_seqs: 0h 0m 2s 39ms; Time for processing: 0h 0m 3s 738ms; splitsequence tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 100.00% 2.64M 0s 246ms ; Time for merging to query_seqs_split_h: 0h 0m 0s 507ms; Time for merging to query_seqs_split: 0h 0m 0s 573ms; Time for processing: 0h 0m 2s 178ms; prefilter tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/target_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 2.0 . Query database size: 2644526 type: Nucleotide; Target split mode. Searching through 13 splits; Estimated memory consumption: 247G; Target database size: 99637107 type: Nucleotide; Process prefiltering step 1 of 13. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: Prefilter died; Error: Search step died; Error: First search died. ```. ## Environment; * AMD EPYC 7502P 32-Core Processor; * 320GB memory; * OS:; Ubuntu 20.04.2 LTS; Kernel: 5.4.0-70-generic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438:6803,load,load-mode,6803,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438,1,['load'],['load-mode']
Performance,"st/10067396915876818640/pref_filter1 tmp/16479300059278292880/linclust/10067396915876818640/pref_filter2 --filter-file tmp/16479300059278292880/linclust/10067396915876818640/order_redundancy --threads 112 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 855.53K 0s 584ms; Time for merging to pref_filter2: 0h 0m 1s 180ms; Time for processing: 0h 0m 3s 237ms; align tmp/16479300059278292880/linclust/10067396915876818640/input_step_redundancy tmp/16479300059278292880/linclust/10067396915876818640/input_step_redundancy tmp/16479300059278292880/linclust/10067396915876818640/pref_filter2 tmp/16479300059278292880/linclust/10067396915876818640/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 112 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 855530 type: Nucleotide; Target database size: 855530 type: Nucleotide; Calculation of alignments; [=================================================================] 855.53K 2m 53s 344ms; Time for merging to aln: 0h 0m 0s 811ms; 12214778 alignments calculated; 932129 sequence pairs passed the thresholds (0.076312 of overall calculated); 1.089534 hits per query sequence; Time for processing: 0h 3m 4s 809ms; clust tmp/16479300059278292880/linclust/10067396915876818640/input_step_redundancy tmp/16479300059278292880/linclust/10067396915876818640/aln tmp/16479300059278292880/li",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:8406,load,load-mode,8406,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['load'],['load-mode']
Performance,"step 1 of 1. k-mer similarity threshold: 82; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1303062545; Target db start 1 to 349750; [=================================================================] 1.30B 86h 42m 2s 376ms. 0.785483 k-mers per position; 240012 DB matches per sequence; 5731753 overflows; 0 queries produce too many hits (truncated result); 269 sequences passed prefiltering per query sequence; 300 median result list length; 134238 sequences with 0 size result lists; Time for merging to pref: 0h 30m 15s 580ms; Time for processing: 88h 9m 11s 291ms; swapresults repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/q_orfs_aa databases/eggnog repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref_swapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --split-memory-limit 300G --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --threads 56 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 1.30B 2h 8m 45s 98ms. Reading results.; [=================================================================] 1.30B 5h 47m 7s 401ms. Output database: repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref_swapped; [=================================================================] 26.35K 11m 16s 126ms. Time for merging to pref_swapped_0: 0h 40m 12s 625ms. Reading results.; [=================================================================] 1.30B 5h 40m 43s 346ms. Output database: repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref_swapped; [=================================================================] 32.57K 11m 9s 696ms. Time for merging to pref_swapped_1: 0h 38m 42s 418ms. Reading results.; [=================================================================] 1.30B 5h 39m 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/594:19631,load,load-mode,19631,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594,1,['load'],['load-mode']
Performance,"t HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salvocos/tmp/test_sonicpara/mmseqs2_src/build; ```; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 40 CPUs 500Gbytes of shared memory; ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fpu_exception	: yes; cpuid level	: 15; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer xsave avx f16c rdrand lahf_lm abm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm xsaveopt cqm_llc cqm_occup_llc dtherm ida arat pln pts; bogomips	: 5199.77; clflush size	: 64; cache_alignment	: 64; address sizes	: 46 bits physical, 48 bits virtual. ...; ```; * Operating system and version:; ```; $uname -a; Linux XXX 3.10.0-693.11.1.el7.x86_64 #1 SMP Fri Oct 27 05:39:05 EDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:13579,cache,cache,13579,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,1,['cache'],['cache']
Performance,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimate",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:26610,load,load-mode,26610,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['load'],['load-mode']
Performance,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:5368,load,load-mode,5368,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,26,['load'],['load-mode']
Performance,"t,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 22ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms ] 49.02% 76 eta 0s; Time for processing: 0h 0m 0s 76ms; align clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 34ms; Time for merging to aln: 0h 0m 0s 2ms; 154 alignments calculated; 154 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 142ms; clust clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/clust --cluster-mode 0 --max-iterations 1000 --similarity-typ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:24982,load,load-mode,24982,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"tep 1; [=================================================================] 20.94K 0s 219ms; Clustering step 2; [=================================================================] 10.97K 0s 427ms; Clustering step 3; [=================================================================] 8.34K 0s 657ms; Clustering step 4; [=================================================================] 8.19K 0s 758ms; Write merged clustering; [=================================================================] 100.00K 0s 956ms; Time for merging to clu: 0h 0m 0s 164ms; Time for processing: 0h 0m 1s 268ms; align ./mms_smallDB ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/clu ./mmseqs_output/tmp/5351426679731834765/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 100000 type: Aminoacid; Target database size: 100000 type: Aminoacid; Calculation of alignments; [=================================================================] 8.19K 8s 160ms; Time for merging to aln: 0h 0m 0s 15ms; 99829 alignments calculated; 73771 sequence pairs passed the thresholds (0.738974 of overall calculated); 9.012951 hits per query sequence; Time for processing: 0h 0m 8s 437ms; subtractdbs ./mmseqs_output/tmp/5351426679731834765/clu ./mmseqs_output/tmp/5351426679731834765/aln ./mmseqs_output/tmp/5351426679731834765/clu_not_accepted --e-profile 100000000 -e 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:33900,load,load-mode,33900,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"th 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 1.98M 1m 21s 501ms; Time for merging to orfs_aa_h: 0h 2m 11s 439ms; Time for merging to orfs_aa: 0h 2m 30s 736ms; Time for processing: 0h 7m 50s 411ms; prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 310097721 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 18s 71ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 52s 198ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 183",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:7005,load,load-mode,7005,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['load'],['load-mode']
Performance,"that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-file ../test/nr.fsa.taxidmapping. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; NCBI tax dump directory ../test/taxonomy/; Taxonomy mapping file ../test/nr.fsa.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 36; Verbosity 3. Loading nodes file ... Done, got 2304309 nodes; Loading merged file ... Done, added 61039 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```; Thanks for taking the time to look at this!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401:3110,Load,Loading,3110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401,3,['Load'],['Loading']
Performance,"tion (step 1 of 1); Query db start 1 to 4; Target db start 1 to 2; [================================================] 4 ================0s 6ms; =; 0.991092 k-mers per position; 4326 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 2 median result list length; 2 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 8s 1ms; align tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 tmp/9586069750715556969/search_tmp/1133007989511978496/aln --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 4 type: Nucleotide; Target database size: 2 type: Nucleotide; Calculation of alignments; [=================================================================] 4 0s 0ms; Time for merging to aln: 0h 0m 0s 0ms; 4 alignments calculated; 4 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 17ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:9203,load,load-mode,9203,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['load'],['load-mode']
Performance,"tmp --tax-mapping-file '/data/clustered_nr/nr_rep_seq_to_taxid.map' -v 3; Create directory tmp; createtaxdb nr_rep_seq_db tmp --tax-mapping-file /data/clustered_nr/nr_rep_seq_to_taxid.map -v 3 . MMseqs Version: 	2fad714b525f1975b62c2d2b5aff28274ad57466; NCBI tax dump directory	; Taxonomy mapping file 	/data/clustered_nr/nr_rep_seq_to_taxid.map; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	20; Verbosity 	3. Download taxdump.tar.gz. 02/01 11:29:59 [NOTICE] Downloading 1 item(s); [#b8b044 0B/0B CN:1 DL:0B] ; 02/01 11:30:01 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; [#b8b044 51MiB/61MiB(84%) CN:1 DL:10MiB] ; 02/01 11:30:08 [NOTICE] Download complete: tmp/taxdump.tar.gz. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; b8b044|OK | 9.1MiB/s|tmp/taxdump.tar.gz. Status Legend:; (OK):download completed.; Loading nodes file ... Done, got 2550743 nodes; Loading merged file ... Done, added 75930 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```; ## Context; I want to search some query sequences locally against a clustered version of the NR database. I downloaded the clustered database and taxonomy files (nr_cluster_taxid_formatted_final.tsv.gz, nr_rep_seq.fasta.gz) from [here](https://osf.io/tejwd/), which was created as per: https://research.arcadiascience.com/pub/resource-nr-clustering/release/3. I then processed the files like so:. ```; gunzip -c nr_cluster_taxid_formatted_final.tsv.gz | cut -f1,2 > nr_rep_seq_to_taxid.map; mmseqs createdb nr_rep_seq.fasta.gz nr_rep_seq_db; ```. After these completed successfully, I tried to create the taxdb as per the above:. ```; mmseqs createtaxdb nr_rep_seq_db tmp --tax-mapping-file '/data/clustered_nr/nr_rep_seq_to_taxid.map' -v 3; ```. But the job was killed. Questions:; * Was it likely killed because of exhausting my available RAM",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/811:1565,Load,Loading,1565,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811,1,['Load'],['Loading']
Performance,"tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died; ```. I removed the temporary directory created by my previous failed run of `mmseq map`, and then this `Please provid",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:3946,perform,performs,3946,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['perform'],['performs']
Performance,"tmp/2226585588535541735/search_tmp/11167723337111805049/aln tmp/2226585588535541735/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 26ms; Writing results to: tmp/2226585588535541735/result; [=================================================================] 419.27K 2s 43ms. Time for merging to result: 0h 0m 0s 264ms; Time for processing: 0h 0m 6s 8ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs_aa . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs_aa . Time for processing: 0h 0m 0s 0ms; convertalis tmp/2226585588535541735/query tmp/2226585588535541735/target tmp/2226585588535541735/result output.tsv --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,evalue,pident,tstart,tend,qlen,alnlen,qcov --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 64 --compressed 0 -v 3 . [=================================================================] 419.27K 3s 600ms; Time for merging to output.tsv: 0h 0m 3s 849ms; Time for processing: 0h 0m 12s 294ms; Removing temporary files; rmdb tmp/2226585588535541735/result . Time for processing: 0h 0m 2s 15ms; rmdb tmp/2226585588535541735/target . Time for processing: 0h 0m 0s 486ms; rmdb tmp/2226585588535541735/target_h . Time for processing: 0h 0m 0s 1ms; rmdb tmp/2226585588535541735/query . Time for processing: 0h 0m 0s 102ms; rmdb tmp/2226585588535541735/query_h . Time for processing: 0h 0m 0s 5ms; ```. ## Your Environment. I'm using the `11.e1a1c` conda release on Linux;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339:11471,load,load-mode,11471,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339,1,['load'],['load-mode']
Performance,"ts/tmp//6404161245249296443/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_rescore2: 0h 0m 0s 19ms=================>] 99.48% 24.47K eta 0s ; Time for processing: 0h 0m 0s 59ms; align experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_rescore2 experiments/tmp//6404161245249296443/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 12 --compressed 0 -v 3 . Compute score and coverage; Query database size: 24598 type: Aminoacid; Target database size: 24598 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 24.60K 0s 159ms ; Time for merging to aln: 0h 0m 0s 22ms. 25322 alignments calculated.; 24830 sequence pairs passed the thresholds (0.980570 of overall calculated).; 1.009432 hits per query sequence.; Time for processing: 0h 0m 0s 211ms; clust experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/aln experiments/tmp//6404161245249296443/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 24.60K 0s 10ms ; Sort entries",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:9327,load,load-mode,9327,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['load'],['load-mode']
Performance,"ttaching to process 9878. warning: process 9878 is a cloned process; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/mmseqs...(no debugging symbols found)...done.; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:33575,Load,Loaded,33575,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,"type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB tmp/10260956542131223380/clu_redundancy tmp/10260956542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:3748,load,load-mode,3748,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['load'],['load-mode']
Performance,"ubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 -v 3 --subdb-mode 1 . Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 3.5 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 6712 type: Aminoacid; Estimated memory consumption: 998M; Target database size: 6712 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 6.71K 0s 98ms ; Index table: Masked residues: 74049; Index table: fill; [=================================================================] 100.00% 6.71K 0s 81ms ; Index statistics; Entries: 2455512; DB size: 502 MB; Avg k-mer size: 0.038367; Top 10 k-mers; IHDKNI 28; GPGGTL 17; LGGFVY 14; GQQVAR 10; SGQQAI 9; RDKELL 9; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; Time for index table init: 0h 0m 0s 735ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6712; Target db st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:21582,load,load-mode,21582,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"ult.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1; Threads 	30; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using split mode; Index table: counting k-mers...; ......................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; ............",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1598,load,loading,1598,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['load'],['loading']
Performance,"um62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=================================================================] 140.20K 2m 37s 793ms; Time for merging to pref_rescore1: 0h 0m 0s 35ms; Time for processing: 0h 2m 48s 60ms; clust db/dbclust tmp/16437734971973434362/pref_rescore1 tmp/16437734971973434362/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 36 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 140.20K 0s 7ms; Sort entries; Find missing connections; Found 44 new connections.; Reconstruct initial order; [=================================================================] 140.20K 0s 7ms; Add missing connections; [=================================================================] 140.20K 0s 3ms. Time for read in: 0h 0m 0s 42ms; Total time: 0h 0m 0s 64ms. Size of the sequence database: 140204; Size of the alignment database: 140204; Number of clusters: 140160. Writing res",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:1917,load,load-mode,1917,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['load'],['load-mode']
Performance,"unadopted data in the 'assignGroup' function, allowing for more effective clustering. ### Details. **1 Extended Search Process :**. > For the same k-mer group, the process of combining the representative sequence with each sequence has been extended. The algorithm now calculates sequence dissimilarity using adjacent sequence information. The most dissimilar sequence is selected as the next representative sequence, and this exploration process is repeated. If there are multiple sequences with the same level of dissimilarity, the most recently explored sequence is chosen as the representative sequence. Additionally, the selection of the most dissimilar sequence is limited to sequences that follow the current representative sequence in the search order. **2. Data Structure Challenges**. > The implementation of this method introduced challenges in maintaining the original in-place data structure. To overcome these challenges, a new data structure has been introduced with an additional buffer (slack space) at the end. The new data structure includes a default buffer size of 5%. . **3. Dynamic Memory Allocation**. > If memory becomes insufficient during operation, the structure dynamically resizes by splitting and reallocating memory based on the progress of the previous process. This approach ensures efficient memory usage and prevents potential memory shortages. ### Benchmark Results. > I conducted benchmarking on datasets randomly selected from the UniParc dataset, with sizes of 1.3M, 2.7M, 5.3M, 11M, 21M, 42M, and 85M. The results confirmed that the new algorithm effectively reduces the number of clusters while maintaining linearity, showing no significant time difference compared to the existing Linclust method. Despite these improvements, the algorithm still lags behind the easy-cluster method and does not fully reach the ideal results obtained by performing a quadratic search that captures all possible combinations. Thus, there remains room for further improvement.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/873:2070,perform,performing,2070,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873,1,['perform'],['performing']
Performance,uncated; > .Sequence 10717 produces too many hits. Results might be truncated; > Sequence 11844 produces too many hits. Results might be truncated; > Sequence 12630 produces too many hits. Results might be truncated; > Sequence 12971 produces too many hits. Results might be truncated; > ; > 38654 k-mers per position.; > 57944556 DB matches per sequence.; > 8775 Overflows.; > 1852622 sequences passed prefiltering per query sequence.; > Median result list size: 1612533; > 0 sequences with 0 size result lists.; > ; > Time for prefiltering scores calculation: 0h 56m 42s 147ms; > Time for merging files: 0h 17m 3s 113ms; > Time for processing: 1h 16m 55s 652ms; > Program call:; > align tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 tmp/18071041534032520912/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 17702628 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 15 -v 3 ; > ; > MMseqs Version: 	7ca117893675cdca309e2c9dfc444bbc7462e858; > Sub Matrix 	blosum62.out; > Add backtrace 	true; > Alignment mode 	2; > E-value threshold 	0.1; > Seq. Id Threshold 	0; > Seq. Id. Mode 	0; > Alternative alignments 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Max. sequence length 	65535; > Max. results per query 	17702628; > Compositional bias 	1; > Realign hit 	true; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id.	true; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	11; > Gap extension cost 	1; > Threads 	15; > Verbosity 	3; > ; > Init data structures...; > Compute score only.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength:,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:7225,load,load-mode,7225,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,1,['load'],['load-mode']
Performance,"ut,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 7ms; Time for merging to pref_rescore2: 0h 0m 0s 1ms ] 49.67% 77 eta 0s; Time for processing: 0h 0m 0s 37ms; align clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 42ms; Time for merging to aln: 0h 0m 0s 4ms; 154 alignments calculated; 154 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 74ms; clust clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/clust --cluster-mode 0 --max-iterations 1000 --similarity-type",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:9361,load,load-mode,9361,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"v-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.31B 2h 34m 42s 85ms; Sort kmer 0h 0m 52s 653ms; Sort by rep. sequence 0h 0m 31s 645ms; Generate k-mers list for 2 split; [=================================================================] 1.31B 2h 36m 22s 543ms; Sort kmer 0h 0m 44s 690ms; Sort by rep. sequence 0h 0m 26s 121ms; Merge splits ... Time for fill: 1h 31m 44s 960ms; Time for merging to pref: 0h 0m 0s 6ms; Time for processing: 10h 13m 54s 576ms; rescorediagonal JGI JGI tmp/14756877054557405347/pref tmp/14756877054557405347/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 . Can not touch 407600133816 into main memory. ## Your Environment; Latest precompiled AVX2 version Release 15-6f452",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:4282,load,load-mode,4282,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['load'],['load-mode']
Performance,"value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp//3961034198315058036 --sub-mat blosum62.out -s 2 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 -v 3 --rescore-mode 2 --filter-hits 0 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --sort-results 1 --global-alignment 0 --min-length 1 --max-length 2147483647 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --start-sens 4 --sens-steps 1 --remove-tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Inclu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:2514,load,load-mode,2514,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['load'],['load-mode']
Performance,"ve. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): e2510e8f6911e4340c62989aa9ba1b9c58e18d60; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.5.1, c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version: ubuntu1~16.04.12",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/320:1967,Load,Loading,1967,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320,1,['Load'],['Loading']
Performance,"wc -l test1`; 15447 test1. `wc -l test2`; 32 test2. The third command runs without issuing any warning (it effectively does nothing to the database). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1. Download a small NCBI-like taxonomy database **swissProtSomeClasses** from [here](https://github.com/soedinglab/metaeuk-regression/tree/master/sacc_tax); 2. Run the commands above. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/320:1497,Load,Loading,1497,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320,1,['Load'],['Loading']
Performance,"with 0 size result lists; Time for merging to orfs_pref_tmp_7: 0h 3m 12s 265ms; Time for merging to orfs_pref_tmp_7_tmp: 0h 1m 51s 505ms; Merging 8 target splits to orfs_pref; Preparing offsets for merging: 0h 4m 24s 509ms; [=================================================================] 100.00% 310.10M 1m 43s 629ms; Time for merging to orfs_pref: 0h 2m 28s 649ms; Time for merging target splits: 0h 8m 46s 959ms; Time for merging to orfs_pref_tmp: 0h 1m 57s 44ms; Time for processing: 10h 1m 11s 163ms; rescorediagonal /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_pref /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0 -e 100 -c 0 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 310.10M 1m 26s 457ms; Time for merging to orfs_aln: 0h 2m 24s 668ms; Time for processing: 0h 4m 43s 316ms; createsubdb /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aln.list /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter --subdb-mode 1 -v 3. Time for merging to orfs_filter: 0h 0m 0s 6ms; Time for processing: 0h 0m 41s 304ms; rmdb /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter_h -v 3. Time for processing: 0h 0m 0s 5ms; createsubdb /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aln.list /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:18441,load,load-mode,18441,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['load'],['load-mode']
Performance,"x 	blosum62.out; > Add backtrace 	true; > Alignment mode 	2; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Seq. Id. Mode 	0; > Alternative alignments 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Max. sequence length 	65535; > Max. results per query 	17702628; > Compositional bias 	1; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	true; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	11; > Gap extension cost 	1; > Threads 	15; > Verbosity 	3; > Sensitivity 	7.5; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Split Memory Limit 	0; > Diagonal Scoring 	1; > Exact k-mer matching 	0; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Spaced k-mer pattern 	; > Rescore mode 	0; > Remove hits by seq.id. and coverage 	false; > Sort results 	0; > In substitution scoring mode, performs global alignment along the diagonal	false; > Mask profile 	1; > Profile e-value threshold 	0.1; > Use global sequence weighting 	false; > Filter MSA 	1; > Maximum sequence identity threshold 	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	1000; > Omit Consensus 	false; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward Frames 	1,2,3; > Reverse Frames 	1,2,3; > Translation Table 	1; > Use all table starts 	false; > Offset of numeric ids 	0; > Add Orf Stop 	false; > Number search iterations 	3; > Start sensitivity 	4; > Search steps 	1; > Run a seq-profile search in slice mode 	false; > Strand selection 	1; > Disk space limit 	0; > Sets the MPI runner 	; > Remove Temporary Files 	false; > ; > Program call:; > prefilter tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 --sub-mat blosum62.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:1610,perform,performs,1610,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,1,['perform'],['performs']
Performance,"x-gnu/libthread_db.so.1"".; nr_mmseqs/nr_db_mapping exists and will be overwritten; nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3 . MMseqs Version:	f5b588be54de35876eff90f3694b67e1d00856ef; Threads 	16; Verbosity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/666:2053,optimiz,optimized,2053,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666,2,['optimiz'],['optimized']
Performance,"x: :; [=================================================================] 323 0s 253ms; Time for merging into tmp/2730103712073724212/search/reverse_ungapaln by mergeResults: 0h 0m 0s 177ms; Time for processing: 0h 0m 0s 855ms; filterdb tmp/2730103712073724212/search/pref tmp/2730103712073724212/search/pref_filter --filter-file tmp/2730103712073724212/search/reverse_ungapaln --positive-filter 0 . Filtering with filter files.; [=================================================================] 323 0s 12ms; Time for merging into tmp/2730103712073724212/search/pref_filter by mergeResults: 0h 0m 0s 171ms; Time for processing: 0h 0m 0s 397ms; align /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/pref_filter tmp/2730103712073724212/search/reverse_aln --sub-mat nucl:nucleotide.out,aa:blos; um62.out -a 0 --alignment-mode 2 -e 100000 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2; 147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Compute score and coverage; Query database size: 561568 type: Aminoacid; Target database size: 14926 type: Aminoacid; Calculation of alignments; [=================================================================] 323 0s 62ms; Time for merging into tmp/2730103712073724212/search/reverse_aln by mergeResults: 0h 0m 0s 109ms. 335 alignments calculated.; 323 sequence pairs passed the thresholds (0.964179 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 427ms; swapresults /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/reverse_aln tmp/2730103712073724212/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out ; -e 0.001 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:4896,load,load-mode,4896,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,1,['load'],['load-mode']
Performance,"y-limit 60G; mmseqs createsubdb viral_clu viral_db viral_rep; ```; Then I merged 2 fastq files with _plass_; `plass mergereads ./OUT/8813_paired_1.fastq ./OUT/8813_paired_2.fastq ./OUT/8813_db --threads 10; `; I thought [this was the way](https://github.com/soedinglab/MMseqs2/issues/436) to feed the next steps, 8813_db would be the query in this case. I reasoned since the database of nonredundant proteins is in nucleotide format and the reads created a nucleotide database the search would be between nucleotide. . **I run** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --search-type 3; `. I got this error ; ```; Unrecognized parameter --search-type; Did you mean ""--seed-sub-mat""?; ```. **Or** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --seed-sub-mat nucl`. and I got this message error; ```; It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. Using 8813_FA as a query which -a simple database created from a fasta, part of the assembly of that sample, the search works. `mmseqs search 8813_FA ../DATABASE/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:1568,perform,performed,1568,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,1,['perform'],['performed']
Performance,"y_h: 0h 0m 0s 0ms; Time for merging to query: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 4ms; Create directory tmp_easy_search/6745795380167965363/search_tmp; search tmp_easy_search/6745795380167965363/query target_DB tmp_easy_search/6745795380167965363/result tmp_easy_search/6745795380167965363/search_tmp -a 1 --alignment-mode 3 --threads 96 -s 5.7 --sort-results 0 --remove-tmp-files 0 . prefilter tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 -s 5.7 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Query database size: 1 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 104664 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 93ms; align tmp_easy_search/67457953801679",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:5487,load,load-mode,5487,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['load'],['load-mode']
Performance,"y_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 24 --compressed 0 -v 3 . [=================================================================] 100.00% 9.78K 0s 59ms ; Time for merging to query_seqs_h: 0h 0m 0s 439ms; Time for merging to query_seqs: 0h 0m 0s 494ms; Time for processing: 0h 0m 2s 117ms; prefilter tmp/3198441352783276465/clu_tmp/13016959338117486175/query_seqs tmp/3198441352783276465/clu_tmp/13016959338117486175/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 5 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3 . Query database size: 19552 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 9776 type: Nucleotide; tmp/3198441352783276465/clu_tmp/13016959338117486175/nucleotide_clustering.sh: line 48: 1648954 Killed $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am trying to cluster a number of gene sequences with an identity of 0.8 and no minimum length for the aligned portion of the genes. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15.6f452; * Which MMseqs versio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:16440,load,load-mode,16440,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['load'],['load-mode']
Performance,"zdrop 40 --threads 1 --compressed 0 -v 3 . Compute score only; Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; Calculation of alignments; [=================================================================] 2 0s 0ms; Time for merging to aln_0: 0h 0m 0s 0ms; 0 alignments calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:13912,load,load-mode,13912,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['load'],['load-mode']
Performance,"}/prof_res""; ""${MMSEQS}"" lndb ""${BASE}/qdb_h"" ""${BASE}/prof_res_h""; **mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124** ; # I got stucked at the above command. **next I am gonna do** ; ""${MMSEQS}"" align ""${BASE}/prof_res"" ""${DB1}.idx"" ""${BASE}/res_exp"" ""${BASE}/res_exp_realign"" --db-load-mode 2 -e ${ALIGN_EVAL} --max-accept ${MAX_ACCEPT} --alt-ali 10 -a; ""${MMSEQS}"" filterresult ""${BASE}/qdb"" ""${DB1}.idx"" ""${BASE}/res_exp_realign"" ""${BASE}/res_exp_realign_filter"" --db-load-mode 2 --qid 0 --qsc $QSC --diff 0 --max-seq-id 1.0 --filter-min-enable 100. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; $ time mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124; expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124 . MMseqs Version: 	GITDIR-NOTFOUND; Expansion mode 	0; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Max sequence length 	65535; Score bias 	0; Compositional bias 	1; Compositional bias 	1; E-value threshold 	inf; Seq. id. threshold 	0; Coverage threshold 	0; Coverage mode 	0; Pseudo count mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Expand filter clusters 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.95; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	2; Compressed 	0; Threads 	124; Verbosity 	3. ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:2712,load,load-mode,2712,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['load'],['load-mode']
Performance,"렉토리에 저장됩니다; ; run_mmseqs(mmseqs, [""mvdb"", base.joinpath(""tmp/latest/profile_1""), base.joinpath(""prof_res"")]); run_mmseqs(mmseqs, [""lndb"", base.joinpath(""qdb_h""), base.joinpath(""prof_res_h"")]); ; run_mmseqs(mmseqs, [""expandaln"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""), base.joinpath(""res""), dbbase.joinpath(f""{uniref_db}{dbSuffix2}""), base.joinpath(""res_exp""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + expand_param); run_mmseqs(mmseqs, [""align"", base.joinpath(""prof_res""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""), base.joinpath(""res_exp""), base.joinpath(""res_exp_realign""), ""--db-load-mode"", str(db_load_mode), ""-e"", str(align_eval), ""--max-accept"", str(max_accept), ""--threads"", str(threads), ""--alt-ali"", ""10"", ""-a""]); run_mmseqs(mmseqs, [""filterresult"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign""), base.joinpath(""res_exp_realign_filter""), ""--db-load-mode"",; str(db_load_mode), ""--qid"", ""0"", ""--qsc"", str(qsc), ""--diff"", ""0"", ""--threads"",; str(threads), ""--max-seq-id"", ""1.0"", ""--filter-min-enable"", ""100""]); run_mmseqs(mmseqs, [""result2msa"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign_filter""), base.joinpath(""uniref.a3m""), ""--msa-format-mode"",; ""6"", ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + filter_param); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign_filter"")]); ; if use_templates:; run_mmseqs(mmseqs, [""search"", base.joinpath(""prof_res""), dbbase.joinpath(template_db), base.joinpath(""res_pdb""),; base.joinpath(""tmp2""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads), ""-s"", ""7.5"", ""-a"", ""-e"", ""0.1"", ""--prefilter-mode"", str(prefilter_mode)]); run_mmseqs(mmseqs, [""convertalis""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:4417,load,load-mode,4417,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['load'],['load-mode']
Safety,"	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	1; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. I don't know if the error is right at the start using _plass_ int this context or with the _map_ command. Could you let me know how to proceed to use paired fastq data with the 'map pipeline'? ; Thanks for your help!. ## Context. After clustering all the proteins found in several samples I am trying to estimate the relative abundance of proteins in a non-redundant database considering the paired read files I have. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; using MMseqs2 Version: 113e3212c137d026e297c7540e1fcd039f6812b1 or 12 in a cluster ; and the plass-linux-sse41.tar.gz executable for plass. ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:4099,redund,redundant,4099,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,1,['redund'],['redundant']
Safety," 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.75; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	62G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; Error: Pre-clustering step died; ```; I also have an error log : . ```; + mmseqs linclust /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB_clu /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp --min-seq-id 0.75 --threads 20 -v 3 --force-reuse 1 --split-memory-limit 62G; /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/linclust.sh: line 37: 1000278 Killed ""$MMSEQS"" clust ""$INPUT"" ""${TMP_PATH}/pref_rescore1"" ""${TMP_PATH}/pre_clust"" ${CLUSTER_PAR}. real	8m30.284s; user	12m57.207s; sys	2m3.531s; slurmstepd: error: Detected 1 oom_kill event in StepId=1504095.batch. Some of the step tasks have been OOM Killed.; ```. I see that it's a memory issue but I don't know what to do to solve this.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:10091,Detect,Detected,10091,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['Detect'],['Detected']
Safety," Environment. I am running this on an AWS EC2 instance of type g4dn (128GB RAM). Here you go:. $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) Platinum 8259CL CPU @ 2.50GHz; CPU family: 6; Model: 85; Thread(s) per core: 2; Core(s) per socket: 16; Socket(s): 1; Stepping: 7; BogoMIPS: 4999.98; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht; syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid ap; erfmperf tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt; tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch pti fsgsbase; tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx avx512f avx512dq rdseed adx smap clflushopt clwb avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves ida arat pku ospke avx512_vnni; Virtualization features: ; Hypervisor vendor: KVM; Virtualization type: full; Caches (sum of all): ; L1d: 512 KiB (16 instances); L1i: 512 KiB (16 instances); L2: 16 MiB (16 instances); L3: 35.8 MiB (1 instance); NUMA: ; NUMA node(s): 1; NUMA node0 CPU(s): 0-31; Vulnerabilities: ; Gather data sampling: Unknown: Dependent on hypervisor status; Itlb multihit: KVM: Mitigation: VMX unsupported; L1tf: Mitigation; PTE Inversion; Mds: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Meltdown: Mitigation; PTI; Mmio stale data: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Retbleed: Vulnerable; Spec rstack overflow: Not affected; Spec store bypass: Vulnerable; Spectre v1: Mitigation; usercopy/swapgs barriers and __user pointer sanitization; Spectre v2: Mitigation; Retpolines, STIBP disabled, RSB filling, PBRSB-eIBRS Not affected; Srbds: Not affected; Tsx async abort: Not affected",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822:3946,abort,abort,3946,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822,1,['abort'],['abort']
Safety," as I can tell it doesn't seem to be overblowing that (the core dump is <400G). I ran createindex in the same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib6",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1174,safe,safe-path,1174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['safe'],['safe-path']
Safety," files, however, only one (resultDB.index.7) is getting larger with time (and is > 0 in size). Meanwhile only one thread seems to be utilized (around 8% of the total 10 threads given).; When the clusthash finishes there is one resultsDB.index file, and 10 resultsDB files, 8 with zero size, and resultsDB.index7 and resultsDB.index both with the same size). After this, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file. This fasta file size <1gb but I first tried to run this process on a >80gb file on remote compute node and was concerned when I saw the job was using only a small part of the resources.; Not part of this issue but realted; also tried to do the same thing with a large protein file but I get invalid fasta entry errors (maybe because of the ""*"" marking STOPs left by the ORF predictor, but that wouldn't happen in the nucleic acid file example above). ## Your Environment; * Git commit used:; I tried on my personal machine and a compute node (PBS), similar behaviour in both. ; Personal machine MMseqs2 Version: 48a037a2e2cf5ea140c6c5de357b7147e5310b4d.; Server MMseqs2 Version: 2a8c5f00f820c5c9a577676707095ef17bcff04a.; * Which MMseqs version was used: Statically-compiled; * Server specifications:; Server: (2a8c5f00f820c5c9a577676707095ef17bcff04a); CPU: Intel(R) Xeon(R) Platinum 8168; Memory: 366 GB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261:1846,redund,redundancy,1846,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261,1,['redund'],['redundancy']
Safety,"""; Error: Prefilter died; createtsv phrogs_mmseqs_db/phrogs_profile_db mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins.target_seq mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins_mmseqs mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins_mmseqs.tsv --full-header . MMseqs Version: 	14.7e284; First sequence as representative	false; Target column 	1; Add full header 	true; Sequence source 	0; Database output 	false; Threads 	64; Compressed 	0; Verbosity 	3. No datafile could be found for mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins_mmseqs!; cp: cannot stat 'mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins_mmseqs.tsv': No such file or directory; file: mmseqs_target_seq/[bacteria_of_interest]_targetofinterest_proteins_mmseqs.tsv; sample: [bacteria_of_interest]; [bacteria_of_interest]; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=4226926.batch. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:7682,Detect,Detected,7682,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,1,['Detect'],['Detected']
Safety,"## Context; I need to create MSAs for a very large set of protein sequences: about 25 million. I was planning to use the ColabFold workflow. I figured that this would be achievable given the nonlinear scaling to large query sets. That being said, extremely remote alignments are not necessary for my use case in the same way they they are helpful for structure prediction. I am looking for relative small MSAs (no more than 256 sequences) of diverse sets that do not have small fragments eg. high coverage. . I had intended to run some scaling tests over query size as well as parameters (first thoughts being sensitivity, max_seqs, align eval, max_except), as well as not using the metagenomic database. I figured I would first **chat with experts and save some compute carbon** before doing this. Is there any params I am missing? Any that would be good to change from default and forget? Am I totally off in thinking my job is accessible with a 104 thread compute note and a week of runtime?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897:361,predict,prediction,361,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897,1,['predict'],['prediction']
Safety,"## Context; It appears that the documentation gives only 5 parameters for clusterupdate:; mmseqs clusterupdate oldDB newDB oldDB_clustering outDB tmp. However, from the code, it seems that mmseq2 actually requires 6 input parameters:; mmseqs clusterupdate OLDB NEWDB OLDCLUST NEWMAPDB NEWCLUST TMP_PATH. I am not sure what NEWMAPDB is vs NEWDB, and so I've tried running the code giving a unique name to each. The clustering appears to run, but the tools for generating fasta and tsv results fail (see detail below) . ## Expected Behavior; Looking to generate fasta and tsv results from updated clusters with a new database that contains both the old database and a set of new sequences. . ## Current Behavior; While clustering appears to run, I am not able to successfully generate fasta and tsv files. ; For the fasta, I get output that looks like the following: ; Entry does not contain a header!2509593Entry 4480592Entry ; Entry 1542108 does not contain a header! does not contain a header!4479347 does not contain a header!Entry ; 4477267; Entry ; Entry ; 5003334. For tsv, the tool fails with:; MMseqs Version: 	f3b88f27def72ac5392131b98e079930f3b087c7; first sequence as respresentative	false; Target column 	0; Add Full Header 	false. Query file is x; Data file is x_clu ; Start writing file to x.tsv; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_S_construct null not valid; Aborted. This issue was also brought to the attention of Dr. Söding in a recent email . Thank you, . Irena",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103:1428,Abort,Aborted,1428,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103,1,['Abort'],['Aborted']
Safety,"## Current Behavior; We are consistently receiving the following error:; munmap_chunk(): invalid pointer ; leading to ; .../linclust/sh: line 76: 2444 Aborted (core dumped) $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; leading to:; ""Error: Alignment step died""; ""Error: Search died"". ## Steps to Reproduce (for bugs); file used: seqs.fasta (download seqs.txt from this issue, then change the file name extension to .fasta); command used: mmseqs easy-linclust seqs.fasta /tmp/mmseqs /tmp --min-seq-id 0.9 -c 1.0 --cov-mode 0. ## MMseqs Output (for bugs); see screenshot. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 13.4511 (see screenshot); * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Bioconda; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: /; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): support for both AVX2 and SSE; * Operating system and version: centos 8, 48 CPU, 192 GB RAM, 512 GB disk memory (m5.12xlarge instance AWS). [seqs.txt](https://github.com/soedinglab/MMseqs2/files/7659879/seqs.txt). ![image](https://user-images.githubusercontent.com/81355666/144828610-af12b66a-7a58-4bf6-b90b-96e6dc7e3eb9.png). Please let us know if there is anything else you need. Thanks in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/511:151,Abort,Aborted,151,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/511,1,['Abort'],['Aborted']
Safety,"## Description; bugfix for a segmentation fault in `mmseqs prefilter`, which occured in the following circumstances:. - `seqLen` of sequences larger than `32768` are overridden to `1` to lower their priority in diagonal score calculation; - `min(seqs[i].seqLen - minDistToDiagonal, minSeqLen);` returns an underflowed value for low `seqLen`, which holds for the above case (`UngappedAlignment L:279`). => this invalid `seqLength` value causes `unrolledDiagonalScoring(...)` to access memory out of bounds, causing a seg fault. ## Changes; - added a safety check to prevent `seqLength` having invalid(underflowed) values; - `seqLen` larger than `32768` are overridden to `0` instead of `1`, in order to completely skip the processing inside `unrolledDiagonalScoring(...)`. ## Other Details; - error encountered when running mmseqs easy-cluster on uniparc DB; - stack trace:; ```; #0 UngappedAlignment::unrolledDiagonalScoring<21u> (...) ; at MMseqs2/src/prefiltering/UngappedAlignment.cpp:58; #1 UngappedAlignment::scoreDiagonalAndUpdateHits (...) ; at MMseqs2/src/prefiltering/UngappedAlignment.cpp:281; #2 UngappedAlignment::computeScores (...) ; at /MMseqs2/src/prefiltering/UngappedAlignment.cpp:349; #3 UngappedAlignment::align (...); at /MMseqs2/src/prefiltering/UngappedAlignment.cpp:26; #4 QueryMatcher::match (...); at /MMseqs2/src/prefiltering/QueryMatcher.cpp:295; #5 QueryMatcher::matchQuery (...); at /MMseqs2/src/prefiltering/QueryMatcher.cpp:103; #6 Prefiltering::runSplit (...); at /MMseqs2/src/prefiltering/Prefiltering.cpp:843; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/872:549,safe,safety,549,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/872,1,['safe'],['safety']
Safety,"## Expected Behavior ; I would like to run MMseq2 to search for genes in a reference genome. As a sanity check, I simply searched for the genes annotated on the genome in the reference genome, so they should match perfectly. (Next, I'll run it on genes that might not perfectly match the reference as they can have some differences in the third char of each coddon.). ## Current Behavior; When running a nucleotides search I get ~5K results, most of them are long enough and mapped well.; When running a translated search I get 89K results that are very short and non of them covers the entire gene.; I assume that this is not a bug but rather an intended behavior. What am I missing?. ## Steps to Reproduce (for bugs); the files can be found here:; query - https://files.cs.huji.ac.il/morani/cds_from_genomic.fna; target - https://files.cs.huji.ac.il/morani/GCF_000011885.1_ASM1188v1_genomic.fna ; translated search command -` mmseqs easy-search cds_from_genomic.fna GCF_000011885.1_ASM1188v1_genomic.fna memseq_igc_to_salmonella_atcc_9150_translated.m8 tmp --search-type 2 -a --format-mode 4 --format-output ""target,query,tstart,tend,nident,qlen""`; regular search command - `mmseqs easy-search cds_from_genomic.fna GCF_000011885.1_ASM1188v1_genomic.fna memseq_igc_to_salmonella_atcc_9150_nucleotides.m8 tmp --search-type 3 -a --format-mode 4 --format-output ""target,query,tstart,tend,nident,qlen""`. ## MMseqs Output (for bugs); output files:; translated search - https://files.cs.huji.ac.il/morani/memseq_igc_to_salmonella_atcc_9150_translated.m8; regular search - https://files.cs.huji.ac.il/morani/memseq_igc_to_salmonella_atcc_9150_nucleotides.m8. ## Context; For a pipeline I'm designing, I'm comparing a few tools that can search for gene in a reference genome. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used : 15.6f452; * Downloaded using conda; * Server info:; NAME=""Debian GNU/Linux""; VERSION_ID=""10""; VERSION=""10 (",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/796:98,sanity check,sanity check,98,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/796,1,['sanity check'],['sanity check']
Safety,"## Expected Behavior. Cluster nucleotide genome sequences (e.g., wgs records, contigs, scaffolds, complete genomes) in a few hours using `easy-linclust`. ## Current Behavior. Running `easy-linclust` using the following command ran for more than 24 hours and was at the `rescorediagonal` step for +20 hours:; ```; mmseqs easy-linclust input.fna cluster tmp --min-seq-id 0.9 -c 0.9 --alignment-mode 3 --db-load-mode 2 --split-memory-limit 2000G; ```. input.fna is 642 GB with approximately 2.5 MM sequences. ## Context. I want to cluster nucleotide genome sequences from NCBI to reduce the burden on similarity search for highly similar / redundant sequences. ## Your Environment; * MMseqs Version: Commit f5f780acd64482cd59b46eae0a107f763cd17b4d (statically-compiled AVX2); * Machine: 128 CPUs, 4 TB RAM, 2 x 1.9 TB NVMe SSD; * Operating system and version: Amazon Linux 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/726:637,redund,redundant,637,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/726,1,['redund'],['redundant']
Safety,"## Expected Behavior. Dear all, I created a toy example downloading 2 fastq.gz, assembling a bacterial genome and predicting proteins with prokka. Then I used just 3 proteins as a source of a collection of genes in order to estimate the abundance of these genes in each sample [and then scale this strategy further]. Yesterday Milot helped a lot by suggesting using '_summarizealis_' + '_createtsv_'. . ## Current Behavior. I am getting a table like the one below (I just added that row as 'headers' for simplicity). > **READS	PROTEIN	#3	#4	#5**; > SRR4213076.15870	EMNFODFG_00006	0.486	0.486	1; > SRR4213076.580999	EMNFODFG_00006	0.965	0.965	1; > SRR4213076.382442	EMNFODFG_00006	0.988	0.988	1. ## Steps to Reproduce (for bugs); I followed these steps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb protein.faa collection_db; mmseqs cluster collection_db collection_clu temporal; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporalx; mmseqs convertalis sample_db collection_db sample_map result.m8; mmseqs summarizealis sample_map sample_map_summary; mmseqs createtsv sample_db collection_db sample_map_summary sample_map_summary.tsv; ```. ## MMseqs Output (for bugs). The full file [sample_map_summary.tsv is here](https://github.com/soedinglab/MMseqs2/files/7523250/sample_map_summary.txt). ## Context. In the sample_map_summary.tsv when I sort it I get 1079 'lines' (hits?) for one of the proteins. **I have 2 questions** . A) can you detail what are columns 3-4-5 (I guess it is overlap protein/read estimated in different ways). B) is it correct then to calculate abundance [for this protein] as 1079 / [total number reads = wc -l sample_db.index ] or `1079/1443540` . I am trying to estimate the abundance and coverage of a collection of proteins in metagenomic data (using the reads as query in this case). I am trying to use mmseqs due to its speed and the scale of the task in this case. ; Thanks for your hel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/504:114,predict,predicting,114,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/504,1,['predict'],['predicting']
Safety,"## Expected Behavior. Dear all, my goal is to estimate the abundance of a collection of genes against several samples or reads from metagenomes. The strategy works fine but only if I use proteins instead of nucleotides. I created a toy example downloading two fastq.gz, assembling a bacterial genome with 'shovill' and then predicting proteins with prokka on top of this assembled genome. . For the example I used just 3 proteins (from the file genome.faa) like a collection of genes. Then when I try 3 nucleotide sequences (extracted from the genome.ffn file) it throws me the error copied below. I wanted to fix this since my collection contains nucleotide sequences. . ## Current Behavior. ```; **It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace)**; ```. ## Steps to Reproduce (for bugs). I followed these steps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb genome.faa collection_db; # or mmseqs createdb genome.ffn collection_db; mmseqs cluster collection_db collection_clu temp; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporal; ```. Here are both files ; [genome.ffn.txt](https://github.com/soedinglab/MMseqs2/files/7558993/genome.ffn.txt); [genome.faa.txt](https://github.com/soedinglab/MMseqs2/files/7558994/genome.faa.txt). ## MMseqs Output (for bugs). ```; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/507:324,predict,predicting,324,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507,1,['predict'],['predicting']
Safety,"## Expected Behavior. I am following this tutorial https://github.com/soedinglab/MMseqs2/wiki/Tutorials#metagenomic-pathogen-detection , specially the **'Annotating the catalogue'** section, I followed this to search for Pfam domains in several genomes. The pipeline looks great and worked fine. From the tutorial, I understood column 5 is the e-value, the first 2 are self-explanatory and I am also familiar with the blast output but in this case I got 11 columns and I am not fully sure this tsv is similar. . My question is can I have a list of all the columns so I can parse it accordingly? Thanks ; ; Sorry if this info is elsewhere but I couldn't find it I also searched here the issues but I couldn't find it. ## Current Behavior. I got a tsv file with rows like this. `genome1 PF20143.1 100 0.412 3.484E-23 156 291 298 73 205 259`. ## Steps to Reproduce (for bugs). ## MMseqs Output (for bugs). I followed this tutorial https://github.com/soedinglab/MMseqs2/wiki/Tutorials#metagenomic-pathogen-detection no bug or anomaly in this case. ## Context. Sorry if the question is similar to https://github.com/soedinglab/MMseqs2/issues/434 but I don't even have the list of column headers in this cae. . ## Your Environment. MMseqs2 Version: 13.45111; Ubuntu 20.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/458:125,detect,detection,125,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/458,2,['detect'],['detection']
Safety,"## Expected Behavior. I'm doing a search of proteins against another protein database using high sensitivity and high number of iterations (`-s 7.5 --num-iterations 4`). ## Current Behavior. I get an error:. ```; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_M_construct null not valid; /scratch/aoh/qwfp/4982015852642442181/blastpgp.sh: line 81: 24849 Aborted (core dumped) $RUNNER ""$MMSEQS"" result2profile ""$QUERYDB"" ""$2"" ""$TMP_PATH/aln_0"" ""$TMP_PATH/profile_$STEP"" ${TMP}; ```. However, when I use `--num-iterations 1`, I don't get the error. ## Steps to Reproduce (for bugs). I took a small sample of sequences to reproduce the error. ```; mmseqs createdb two.fa two.db; mmseqs createdb rest.fa rest.db; mmseqs search two.db rest.db two_v_rest.db /scratch/aoh/qwfp -s 7.5 --num-iterations 4; ```. Here are the files used to recreate the error. [rest.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890804/rest.fa.txt); [two.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890805/two.fa.txt). ## MMseqs Output (for bugs). [mmseqs.err.txt](https://github.com/soedinglab/MMseqs2/files/1890802/mmseqs.err.txt); [mmseqs.out.txt](https://github.com/soedinglab/MMseqs2/files/1890803/mmseqs.out.txt). ## Your Environment. * Git commit used: `2cfdedc95f6a998826f45a7594971751a5e535f3`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * Operating system and version: Fedora release 24 server edition. Here are the outputs from `make` and `cmake` from when I compiled mmseqs like so:. ```; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. 1> cmake.out.txt 2> cmake.err.txt; make -j32 1> make.out.txt 2> make.err.txt; make install 1> make_install.out.txt 2> make_install.err.txt; ```. [mmseqs_build_output.tar.gz](https://github.com/soedinglab/MMseqs2/files/1890845/mmseqs_build_output.tar.gz)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/79:397,Abort,Aborted,397,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/79,1,['Abort'],['Aborted']
Safety,"## Expected Behavior. I'm using gene predictions form Refseq. They unified the gene names, so that the same gene in different genomes has the same name, e.g. `WP_012419350.1`. Now I can pass this perfectly trough linclust, createtsv and result2repseq . The two identical proteins get clustered to the same cluster. And some end up as cluster representative. Which then put them multiple times in the `result2flat` output. . I wondered if mmseqs uses the sequence names, what if the sequences are different but the names are the same?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/270:37,predict,predictions,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/270,1,['predict'],['predictions']
Safety,"## Expected Behavior. Running a cluster analysis in all 128 cores. ## Current Behavior. I'm running a clustering analysis to leave out redundant sequences in a big dataset of approximately 10 millon DNA sequences of lengths varying between 1150 and 1250 bp. The problem I'm having is that it looks like the program is running in a single core instead of the 128 threads I tell the program to use, hence it takes a really long time to analyze this dataset. I'm assuming it shouldn't take long based on the fact that your package is supposed to analyze even bigger datasets in a couple hours. . I ran into the same issue running CD-HIT, and this is why I'm giving a try to your package. I've already tried compiling your package using:. cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. .. However this gave me issues when running a submission script and my job was killed with the error:. mpirun noticed that process rank 2 with PID xxxx on node xxxx exited on signal 9 (Killed). . For this reason I decided to install mmseqs in a conda environment using:; conda install -c conda-forge -c bioconda mmseqs2. I know the program is running in a single core because I'm using ssh cpu-<number> and ps aux | grep <username> and only one process appears to be running the prefilter step right now. . ## Steps to Reproduce (for bugs). #!/bin/bash; #SBATCH --job-name=mmseqs; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:135,redund,redundant,135,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['redund'],['redundant']
Safety,"## Expected Behavior. When aligning assembled proteins to representative sequences of clusters (clustered at 90% amino acid identity) there should be 0 or 1 hit with > 90% identity and >90% coverage. ## Current Behavior. A single protein can align to over 200 representative sequences while fitting the identity and coverage criteria. ## Steps to Reproduce (for bugs). ### Data. 95,303,635 non-redundant proteins from UHGP v2.0 ([FTP link](http://ftp.ebi.ac.uk/pub/databases/metagenomics/mgnify_genomes/human-gut/v2.0/protein_catalogue/uhgp-100.tar.gz)). 2 proteins serving as probes (uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing)). ### Clustering. 3 different clustering approaches were tested:; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering`. However, all three approaches lead to the same behavior (although the exact number of alignments changes) . ### Testing. `mmseqs easy-search probes/probes.faa {clustering_dir}/uhgp90_rep_seq.fasta results/single-step-clustering-uhgp90.m8 tmp --min-seq-id 0.9 -c 0.9 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln"" --threads 16`. ## Output. The m8 files obtained with the `easy-search` command were uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing). ## Context. I want to assign assembled proteins from metagenomes to clusters from a catalog of bacterial proteins, namely [UHGP](https://www.ebi.ac.uk/metagenomics/genome-catalogues/human-gut-v2-0). I have noticed that ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/639:394,redund,redundant,394,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/639,1,['redund'],['redundant']
Safety,"## Expected Behavior. `asan` and `msan` should not detect issues. ## Current Behavior. We ran address sanitizer and memory sanitizer on mmseqs2 and they flagged a few issues. #### asan. 1. ODR violation over `binary_name`.; 2. Possible signed overflow in random number generation using unsigned integer types.; 3. '[initialisation order fiasco](https://github.com/google/sanitizers/wiki/AddressSanitizerInitializationOrderFiasco)'. #### msan; 4. String not terminated. ## Fixes. We fixed these issues, respectively, by:. 1. Changing [this line](https://github.com/soedinglab/MMseqs2/blob/master/src/mmseqs.cpp#L5) to:; ```; __attribute__ ((weak)) const char* binary_name = ""mmseqs"";; ```. 2. Applying this patch to [lib/alp/njn_random.cpp](https://github.com/soedinglab/MMseqs2/blob/master/lib/alp/njn_random.cpp):. ```; --- a/lib/alp/njn_random.cpp; +++ b/lib/alp/njn_random.cpp; @@ -50,19 +50,19 @@ namespace {; ; 	const size_t r_off = 12;; ; -	long	state [33] = {; -	static_cast <long> (0xd53f1852), static_cast <long> (0xdfc78b83), static_cast <long> (0x4f256096), static_cast <long> (0xe643df7),; -	static_cast <long> (0x82c359bf), static_cast <long> (0xc7794dfa), static_cast <long> (0xd5e9ffaa), static_cast <long> (0x2c8cb64a),; -	static_cast <long> (0x2f07b334), static_cast <long> (0xad5a7eb5), static_cast <long> (0x96dc0cde), static_cast <long> (0x6fc24589),; -	static_cast <long> (0xa5853646), static_cast <long> (0xe71576e2), static_cast <long> (0xdae30df), static_cast <long> (0xb09ce711),; -	static_cast <long> (0x5e56ef87), static_cast <long> (0x4b4b0082), static_cast <long> (0x6f4f340e), static_cast <long> (0xc5bb17e8),; -	static_cast <long> (0xd788d765), static_cast <long> (0x67498087), static_cast <long> (0x9d7aba26), static_cast <long> (0x261351d4),; -	static_cast <long> (0x411ee7ea), static_cast <long> (0x393a263), static_cast <long> (0x2c5a5835), static_cast <long> (0xc115fcd8),; -	static_cast <long> (0x25e9132c), static_cast <long> (0xd0c6e906), static_cast <long> (0xc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/661:51,detect,detect,51,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661,1,['detect'],['detect']
Safety,"## Expected Behavior. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 469186; Target db start 1 to 579233; [=================================================================] 100.00% 469.19K 3s 382ms. 6.094516 k-mers per position; 435 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 464221 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 0s 75ms; munmap_chunk(): invalid pointer; tmp/12438089539006473617/taxonomy_tmp/18301032544654743241/taxpercontig.sh: line 66: 3001403 Aborted (core dumped) $RUNNER ""$MMSEQS"" prefilter ""${ORFS_DB}"" ""${TARGETDB_IDX}"" ""${TMP_PATH}/orfs_pref"" ${ORF_FILTER_PREFILTER}; Error: orf filter prefilter died; Error: Search died. ## Steps to Reproduce (for bugs); mmseqs easy-taxonomy -s 7.5 C10.fasta ../db/refseq-prot/mmseqs/refseq_viral result tmp --lca-mode 2. ## Context. I try to annotate virus contig with refseq database uing mmseqs easy-taxonomy, I get errors below, When I use the same command with tmp files, I can get the taxonomy annotation files. But I use '--orf-filter 0', I get no errors. ## Your Environment. mmseqs version; 45111b641859ed0ddd875b94d6fd1aef1a675b7e; mmseqs2-sse4-r13",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/556:682,Abort,Aborted,682,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/556,1,['Abort'],['Aborted']
Safety,"## Expected Behavior; After using “mmseqs easy-linclust” clustering, the retained sequence is non-redundant. ## Current Behavior; After using “mmseqs easy-linclust” clustering, he retained sequence is redundant，and clustering again with the same parameters, there are still many sequences that are filtered out. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. this is my command,. mmseqs easy-linclust all.pep.fa all.pep.clust ./temp1 --threads 10 --cov-mode 1 -c 0.99 --min-seq-id 0.95. input file: **all.pep.fa** the number of Sequences in **all.pep.fa**: **202272018** . output file: all.pep.clust_cluster.tsv,**all.pep.clust_rep_seq.fasta**,all.pep.clust_all_seqs.fasta. the number of sequecses in **all.pep.clust_rep_seq.fasta** : **115242017**. Cluster again：. mmseqs easy-linclust all.pep.clust_rep_seq.fasta all_lincluster1 ./temp2 --threads 10 --cov-mode 1 -c 0.99 --min-seq-id 0.95. output file: all_lincluster1_cluster.tsv,**all_lincluster1_rep_seq.fasta**,all_lincluster1_all_seqs.fasta; the number of sequecses in **all_lincluster1_rep_seq.fasta** : **112714365**. my question is, Why are there so many redundant sequences after the first clustering?. and another question: Can MMseq2 software be used for nucleotide clustering? Is there any published paper. . Thanks a lot; David",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/420:98,redund,redundant,98,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/420,3,['redund'],['redundant']
Safety,"## Expected Behavior; Completion of download and db creation for GTDB. ## Current Behavior; I installed release 14-7e284 via conda yesterday and tried to download various databases via the databases module. The following error messages were generated for GTDB; other databases were generated without errors. I thought problems with GTDB were fixed in previous versions (e.g., see issue [#742](https://github.com/soedinglab/MMseqs2/pull/742)), but perhaps changes were reverted in the latest release via conda?. Here are the relevant error messages (full output also included below):. 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseComma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:625,abort,aborted,625,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['abort'],['aborted']
Safety,"## Expected Behavior; Downloading NR database using ```mmseqs databases NR NR tmp```; ## Current Behavior; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operati",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/668:440,Abort,Aborted,440,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668,1,['Abort'],['Aborted']
Safety,"## Expected Behavior; I am using the easy cluster pipeline to cluster sequences with min-seq-id = 0.5. So, the centroids of the clusters should be less than 50% identical. . ## Current Behavior; However, when I am running a sanity check to make sure that the centroids are indeed less than 50% identical I get . 1. # Centroids with identity > 50%: ~10000; 2. # Centroids with identity < 70%: ~9000; 3. # Centroids with identity > 90%: ~500; 4. # Centroids with identity == 100%: ~70. So, identities of around 50% were expected. But anything over 90% and especially 100% identical was a surprise. ; ; ## Steps to Reproduce (for bugs); **Clustring Pipeline:** ; mmseqs easy-cluster sequences.fasta mmseqs_clustered tmp -s 7.5 -c 0.8 --cov-mode 0 --min-seq-id 0.5 --cluster-reassign --alignment-mode 3. **Sanity Check:**; 1. mmseqs createdb mmseqs_clustered_rep_seq.fasta DataBases/SeqDB; 2. mmseqs createindex DataBases/SeqDB tmp; 3. mmseqs search DataBases/SeqDB DataBases/SeqDB DataBases/AlnDB tmp --min-seq-id 0.5 -s 7.0 -c 0.8 --cov-mode 0 --alignment-mode 3; 4. mmseqs convertalis DataBases/SeqDB DataBases/SeqDB DataBases/AlnDB Alignment_Results --format-output ""query,target,evalue,pident""; 5. FIlter of Alignment_Results: Remove rows where QueryID == TargetID (They will always have 100% identity)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/612:224,sanity check,sanity check,224,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612,2,"['Sanity Check', 'sanity check']","['Sanity Check', 'sanity check']"
Safety,"## Expected Behavior; I created a database of 100% identical amino acid sequences with 100% coverage. I expect after going through the prefiltering step and alignment step I would see 100% identical hits. ; ## Current Behavior; Instead I found hits with of approximately 93% with reported mismatches of 22 with the same e-values as those with 100% identity. ; ## Steps to Reproduce (for bugs). Attached is the example sequence I found for this bug ([redundant.zip](https://github.com/user-attachments/files/16111570/redundant.zip)). Protein sequence is 303 AA in length with fake names given to the same sequence. I ran the following commands to create the alignment file where I found the issue. . ```; mmseqs createdb redundant.fasta sequenceDB; mmseqs kmermatcher sequenceDB prefilterDB; mmseqs align sequenceDB sequenceDB prefilterDB alignmentDB; mmseqs convertalis sequenceDB sequenceDB alignmentDB alignmentFile; ```. ## MMseqs Output (for bugs); Below is the TSV file of the resulting alignment. As you can see these identical sequences sometimes match at 100% others at 93% with some amount of mismatch and all the same bit-scores etc. ; ![Screenshot from 2024-07-05 10-47-23](https://github.com/soedinglab/MMseqs2/assets/44539035/4d073d41-99e7-4abc-b057-70974cde7ab0). ## Context. I am attempting to replicate some uniref clusters and found this irregularity and chose to isolate and replicate the issue by creating a completely redundant database. This may be a related to #688 . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 6f45232ac8daca14e354ae320a4359056ec524c2. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled from release 15-6f452. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; AMD 3950X with 128GB ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/861:450,redund,redundant,450,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/861,3,['redund'],['redundant']
Safety,"## Expected Behavior; I tried using easy-clust to perform clustering to generate smaller representative subsets from Uniref50 (Uniref40, Uniref 30, Uniref 20, etc.). ## Current Behavior; The clustering dies after a few steps with an Out of Memory Error. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; tmp/5521603387764364218/clu_tmp/3834389364932800683/cascaded_clustering.sh: line 102: 208445 Killed $RUNNER ""$MMSEQS"" prefilter; ""$INPUT"" ""$INPUT"" ""${TMP_PATH}/pref_step$STEP"" ${TMP}; slurmstepd: error: Detected 1 oom_kill event in StepId=16746209.batch. Some of the step tasks have been OOM Killed. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; #SBATCH --output=slurm_mlm.out; #SBATCH -e slurm_mlm.err; #SBATCH -p scavenger-gpu; #SBATCH --gres=gpu:1; #SBATCH --mem=200G; #SBATCH -c 32; mmseqs easy-cluster /hpc/group/naderilab/eleanor/prose/data/uniref50.fasta uniref40 tmp --min-seq-id 0.4 -c 0.8 --cov-mode 1 --split-memory-limi; t 160G --threads 12. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/898:723,Detect,Detected,723,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/898,1,['Detect'],['Detected']
Safety,"## Expected Behavior; I'm using mmseqs driven by colabfold to search against large db.; ## Current Behavior; When colabfold executing ""search"" step, mmseqs generates ""prefilter"" step, and args are ""--split 0 --split-mode 2 --split-memory-limit 0"", then the split number is set to 3 but smaller than 4. So mmseqs use entire index, which is too large for my memory (64GB). Thus mmseqs avoid using index, which makes searching step very slow.; ## Steps to Reproduce (for bugs); colabfold_search x.fasta ColabFold/Datas/ --use-env 1 --use-templates 0 MSA_200 ; (colabfold_search execute search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 ). ## MMseqs Output (for bugs). MSA_200/qdb exists and will be overwritten; createdb MSA_200/query.fas MSA_200/qdb --shuffle 0 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Database type 	0; Shuffle input database	false; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 0ms; Time for merging to qdb: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 0ms; search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:383,avoid,avoid,383,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['avoid'],['avoid']
Safety,## Expected Behavior; It would build succesfully; ## Current Behavior; it fails; ## Steps to Reproduce (for bugs). cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. -DHAVE_MPI=1 -DHAVE_SSE4_1=1 .. ## MMseqs Output (for bugs); ```; -- The CXX compiler identification is GNU 5.4.0; -- The C compiler identification is GNU 5.4.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; --,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:445,Detect,Detecting,445,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,11,['Detect'],['Detecting']
Safety,"## Expected Behavior; MSA completes. ## Current Behavior; Currently, the result2msa command seems to be throwing errors on any operating system and build I try. Also perhaps worth noting it only happens on certain input sequences for whatever reason (you can see from my Windows attempt, it aborts halfway through). ## Steps to Reproduce (for bugs); create db; index db; search db with query file; try to run result2msa -> crash; Files can be supplied as requested. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Ubuntu, self-compile:. mmseqs result2msa /hdd/mmtestoutput3/mmseqs_files/in.mmdb /hdd/humanref/jhhutargetDB /hdd/mmtestoutput3/mmseqs_files//out.mm_search /hdd/mmtestoutput3/mmseqs_files//out.mm_msa; result2msa /hdd/mmtestoutput3/mmseqs_files/in.mmdb /hdd/humanref/jhhutargetDB /hdd/mmtestoutput3/mmseqs_files//out.mm_search /hdd/mmtestoutput3/mmseqs_files//out.mm_msa . MMseqs Version: 	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 	0.001; Allow deletions 	false; Add internal id. 	false; Compositional bias 	1; Filter MSA 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Threads 	4; Compress MSA 	false; Summarize headers 	false; Summary prefix 	cl; Omit consensus 	false; Skip query 	false; Gap open cost 	11; Gap extension cost 	1; Compressed 	0; Verbosity 	3. Start computing multiple sequence alignments.; Query database size: 11 type: Aminoacid; Target database size: 20667 type: Aminoacid; [> ] 0.00% 1 eta [======> ] 10.00% 2 etaSegmentation fault (core dumped). Windows 7 static compile (different db/query file):. F:\>mmseqs result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkou; t2/mmseqs_files/out.mm_search plsworkout2/mmseqs_files/out.mm_msa; result2msa plsworkout2/mmseqs_files/in.mmdb db/test",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/229:291,abort,aborts,291,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229,1,['abort'],['aborts']
Safety,## Expected Behavior; Obtain a result2dnamsa . ## Current Behavior; Error in execution. ## Steps to Reproduce (for bugs); mmseqs.sse41 result2dnamsa all.mmseq all.mmseq all.cluster try.msa. ## MMseqs Output (for bugs); result2dnamsa all.mmseq all.mmseq all.cluster try.msa . MMseqs Version:	113e3212c137d026e297c7540e1fcd039f6812b1; Threads 	24; Skip query	false; Compressed	0; Verbosity 	3. Query database size: 244672 type: Nucleotide; Target database size: 244672 type: Nucleotide; Invalid alignment result record. ] 0.00% 1 eta -; Invalid alignment result record.; Invalid alignment result record. ## Context; I'm trying to recover the msa alingment of each cluster but I have an error. However the same steps with Aminoacid database (same dataset but translated) work really well.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/364:628,recover,recover,628,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/364,1,['recover'],['recover']
Safety,"## Expected Behavior; The search function should complete for any combination of amino acid gap open and gap extension parameters. ## Current Behavior; The search function fails for amino acid gap open penalties below 8 and/or a gap extension penalty of 0. ; It gives an error:; ```; terminate called after throwing an instance of 'Sls::error'; Aborted Error: ; Alignment died.; ```. It fails in the ""align"" step. ## Steps to Reproduce (for bugs). `mmseqs search {dataset} {dataset} {dataset_output} tmp --gap-open nucl:5,aa:2 --gap-extend nucl:5,aa:0`. Using the following dataset of 74 amino acid sequences:; CAAAPAVMTAGWFDPW; CAKDGSGSYYGWFDPW; CAREGEVEGYNDFWSGYSRDRYYFDYW; CATSFPIRGDPSYYYYYYGMDVW; CARDPRVVVTARMYNWFDPW; CARRSTSRWGYYYMDVW; CARRSYRSSWYYYYGMDVW; CARDPGSRYSGGWYDYYYAMDVW; CARDLERAGGMDVW; CARDWAPTYYDMPSAFDIW; CAHRRGILTEDAFDIW; CAREAYGMDVW; CAREARSRYFDWLPSYYFDYW; CAQGRGGYYSPFDDW; CARDLVWATVSGTMDVW; CARDQEWFRELFLFDYW; CAREGQGTYLDYW; CAKDTGYCGDDCYIKLIRGGPDYW; CARVNGNSNWNFGSYYYYYMDVW; CARRGEAAGIWYFDLW; CARPPRNYYDRSGYYQRAEYFQHW; CARWLQLRSDYYYFGMDVW; CARDGGNAYSSGWYRYYYHMDVW; CARVEWAAAGTFYW; CARAPRERLQWGEYYFDYW; CARRTYYDLWSAYSSTAYYCMDVW; CARGVEDPVVPAAIPWCWFDPW; CARPPQAARIHYYYYMDVW; CARGLISLFRGAIFHYYYGMDVW; CARDYTRGAWFGESLIGGFDNW; CAKNERITMLVVVTLFDYW; CARDRSNLERLVMTFGGIIAGAFDIW; CARHDGSGEMDTITWGPIYYYMDVW; CAIYGYYYYGLDVW; CARTTWGTWIQAWYFDIW; CARLTFGGSGSYYFYYNGMDVW; CAKLLGSGITLDNDAFDIW; CARSPPASYYNPSTGYFDYW; CARRGNYYDSKNWFDPW; CAHRAVILNFDHW; CARDPYDLYGDYGGTFDYW; CAKEGGSGSLRYYYYGMDVW; CAREDYYGSGSLVDPYYYYRMDVW; CATSTAVAGTPDLFDYYYGMDVW; CARGWGWGAVAGRAEYYFDYW; CARDWDYDILTGSWFGAFDIW; CARDQRQFQLLGRFGWFDPW; CARELFTAVAGKGGIDYW; CARGWYFDYW; CARSSSRGFDYW; CARIVLGASGTYPSPGFDPW; CARIPGWDRGTDRNWNDDW; CAKDSRSGIAGVDAFDIW; CARTYSFDSSGYYYDYW; CARDQDSGYPTYYYYYMDVW; CARAFYDSNWSVGSYFDSW; CARDSGGNYGDSYFDYW; CAKDVRYCSSTSCYFSAFDIW; CARDLAGVPAALGCWFDPW; CARGGGSYYYWFDPW; CVRDLALFEVVIQQGVW; CARVQRYYPDSSGFYGRRFDIW; CAHNRFQYCSSTTCYTLLPFDYW; CARSGGGSYRGPFDYW; CARRRSSSRYSSGWYMYYYYMDVW; CAKEGRPSDIVVVVAF",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:345,Abort,Aborted,345,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,1,['Abort'],['Aborted']
Safety,"## Issue. Hello, I want to use easy-taxonomy on homology hits I got from mmseqs search between insect genomes and viruses (Refseq viruses). I want to run taxonomic assignment on the hits to determine which are really viral sequences and which are eukaryotic sequences that hit on viruses in the homology search step. For taxonomic assignment, I use a taxonomic generalist database from which I remove insect sequences. ; I'd like help in choosing the parameters and options useful for maximizing the sensitivity of taxonomic assignment, to make sure that when it's a sequence of viral origin it's detected as such (reduce the unclassified portion). ; I've identified these parameters as potentially interesting, but I don't know which values to choose, and if it's really these parameters that I should use : . --max-seqs INT Maximum results per query sequence allowed to pass the prefilter (affects sensitivity) [0.000]; --min-ungapped-score INT Accept only matches with ungapped alignment score above threshold [15]; -e DOUBLE List matches below this E-value (range 0.0-inf) [1.000E-03]; --min-aln-len INT Minimum alignment length (range 0-INT_MAX) [0]; --e-profile DOUBLE Include sequences matches with < E-value thr. into the profile (>=0.0) [1.000E-03]; --lca-mode INT LCA Mode 1: single search LCA , 2/3: approximate 2bLCA, 4: top hit [3]; --allow-deletion BOOL Allow deletions in a MSA [0]; --max-gaps INT Maximum number of codons with gaps or unknown residues before an open reading frame is rejected [2147483647]. Thank you for your help !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/767:597,detect,detected,597,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/767,1,['detect'],['detected']
Safety,"0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124 . MMseqs Version: 	GITDIR-NOTFOUND; Expansion mode 	0; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Max sequence length 	65535; Score bias 	0; Compositional bias 	1; Compositional bias 	1; E-value threshold 	inf; Seq. id. threshold 	0; Coverage threshold 	0; Coverage mode 	0; Pseudo count mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Expand filter clusters 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.95; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	2; Compressed 	0; Threads 	124; Verbosity 	3. Input database ""./uniprot/uniprotdb.index"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid. ## Context; trying to get the mmseqs out in the MSA format so we can input that to Alphafold to predict the structure of protein. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 (Many against Many sequence searching) is an open-source software suite for very fast, ; parallelized protein sequence searches and clustering of huge protein sequence data sets. Please cite: M. Steinegger and J. Soding. MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). MMseqs2 Version: GITDIR-NOTFOUND; © Martin Steinegger (martin.steinegger@snu.ac.kr). usage: mmseqs <command> [<args>]. Easy workflows for plain text input/output; easy-search 	Sensitive homology search; easy-cluster 	Slower, sensitive clustering; easy-linclust 	Fast linear time cluster, less sensitive clustering; easy-taxonomy 	Taxonomic classificatio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:3975,predict,predict,3975,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['predict'],['predict']
Safety,"0; Top 10 k-mers; VVGAAA	1; PILEAA	1; DFNFAA	1; VGVIAA	1; GDCKAA	1; GVDVAA	1; CSEYAA	1; AVFCDA	1; CFRVDA	1; IMTAEA	1; Time for index table init: 0h 0m 6s 612ms; Entries: 629; DB size: 488 MB; Avg k-mer size: 0.000010; Top 10 k-mers; VVGAAA	1; PILEAA	1; DFNFAA	1; VGVIAA	1; GDCKAA	1; GVDVAA	1; CSEYAA	1; AVFCDA	1; CFRVDA	1; IMTAEA	1; Time for index table init: 0h 0m 6s 606ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:44630,abort,aborted,44630,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['abort'],['aborted']
Safety,"0m 6s 612ms; Entries: 629; DB size: 488 MB; Avg k-mer size: 0.000010; Top 10 k-mers; VVGAAA	1; PILEAA	1; DFNFAA	1; VGVIAA	1; GDCKAA	1; GVDVAA	1; CSEYAA	1; AVFCDA	1; CFRVDA	1; IMTAEA	1; Time for index table init: 0h 0m 6s 606ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; mpic++/ 4.8.5 20150623 (Red Hat 4.8.5-36); cmake/3.12.3 ; module load cmake/3.12.3 ; module load openm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:44784,detect,detected,44784,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['detect'],['detected']
Safety,2 minor improvements for safety and expressiveness,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/254:25,safe,safety,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/254,2,['safe'],['safety']
Safety,"79/result /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best -a 1 --overlap 0 -e 0.001 -c 0 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | [=================================================================] 100.00% 0.01 eta -; mmseqs-web-worker_1 | Can not map any alingment results for entry 0!; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 1ms; mmseqs-web-worker_1 | terminate called after throwing an instance of 'std::logic_error'; mmseqs-web-worker_1 | what(): basic_string::_M_construct null not valid; mmseqs-web-worker_1 | convertalis /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/query /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/alis --sub-mat blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Error: Convert Alignments died; mmseqs-web-worker_1 | Aborted (core dumped); mmseqs-web-worker_1 | 2019/07/02 08:52:20 Execution Error: exit status 1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:14300,Abort,Aborted,14300,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['Abort'],['Aborted']
Safety,"915501/query --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3 . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query ... Done.; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query_h ... Done.; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 38ms; mmseqs search:; Searches with the sequences or profiles query DB through the target sequence DB by running the prefilter tool and the align tool for Smith-Waterman alignment. For each query a results file with sequence matches is written as entry into a database of search results (alignmentDB).; In iterative profile search mode, the detected sequences satisfying user-specified criteria are aligned to the query MSA, and the resulting query profile is used for the next search iteration. Iterative profile searches are usually much more sensitive than (and at least as sensitive as) searches with single query sequences. Please cite:; Steinegger, M. & Soding, J. MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). © Martin Steinegger <martin.steinegger@mpibpc.mpg.de>. Usage: <i:queryDB> <i:targetDB> <o:alignmentDB> <tmpDir> [options]. prefilter options 	default 	description [value range]; --comp-bias-corr 	0 	correct for locally biased amino acid composition [0,1] ; --add-self-matches 	false 	artificially add entries of queries with themselves (for clustering); -s 	5.700 	sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive [1.0,7.5]; -k 	0 	k-mer size in the range (0: set automatically to optimum) ; --k-score 	2147483647	k-mer threshold for generating similar-k-mer lists ; --alph-si",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:3941,detect,detected,3941,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['detect'],['detected']
Safety,"; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 1 --split-memory-limit 0 -v 3 --threads 56 . Estimated memory consumption: 780G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================tmp2/7152678087979496025/createindex.sh: line 56: 37309 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Your Environment; I am running the script on a cluster. You will find below the batch script parameters:; #!/bin/bash; #SBATCH --job-name Install_ColabFold_DB; ##SBATCH --account=def-someuser; #SBATCH --time 24:00:00 ### (HH:MM:SS) the job will expire after this time, the maximum is 168:00:00; #SBATCH -N 1 ### number of nodes (1 node -> several CPUs); #SBATCH --ntasks 1; #SBATCH --cpus-per-task 24; #SBATCH --mem-per-cpu 10000; #SBATCH -A p_linkpredic; ##SBATCH -e %j.err ### redirects stderr to this file; ##SBATCH -o %j.out ### redirects standard output stdout to this file; #SBATCH -p haswell ### types of nodes on taurus: west, dandy, smp, gpu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/583:5078,Detect,Detected,5078,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583,1,['Detect'],['Detected']
Safety,According to NCBI they clustered NR at 90% id and 90% cov. I was wondering what would be the correct cluster mode & cover mode to reproduce the clustering?. >Reduced redundancy. Faster searches. More diverse proteins and organisms in your BLAST results. Check out our new ClusteredNR database – derived from the default BLAST protein nr database by clustering sequences at 90% identity / 90% length ([details below](https://ncbiinsights.ncbi.nlm.nih.gov/2022/05/02/clusterednr_1/#more-about-clusters)). Get quicker results and access to information about the distribution of your hits across a wider range of organisms and evolutionary distances.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/651:166,redund,redundancy,166,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/651,1,['redund'],['redundancy']
Safety,Avoid index after query seq name & Deal with MPI parameter.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/163:0,Avoid,Avoid,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/163,1,['Avoid'],['Avoid']
Safety,Avoid sequence id parsing,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/565:0,Avoid,Avoid,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/565,1,['Avoid'],['Avoid']
Safety,Avoid tmp file,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/237:0,Avoid,Avoid,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/237,1,['Avoid'],['Avoid']
Safety,"Based on the graph below, which I pulled from the MMSeqs2 [paper supplement](https://www.biorxiv.org/content/biorxiv/suppl/2017/06/07/079681.DC5/079681-1.pdf), I was expecting my query to take less than an hour (even with higher sensitivity). However, it seems to be taking much, much longer. Additionally, it seems to be hanging on the stage after `Index table: fill` is printed, after printing a good portion of the progress bar. . ![image](https://github.com/soedinglab/MMseqs2/assets/49450966/7ed7b5b0-8236-477c-93f1-904cb461d691). My query database is only 14 sequences in size (which I realize is much smaller than the MMSeqs2 program is intended to work with). The target database, which is the result of splitting all of GTDB into sub-datasets, is about 6 million sequences (6,263,739 to be exact). This is the command I executed. . `mmseqs easy-search -s 7 query.fasta targetDB_split result.m8`. Here is some information about my computing environment. I should also note that I am submitting the job using ``slurm``, and allocated 50 GB of memory (which is less than the 23 GB predicted by the program). . ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Thread(s) per core: 1; Core(s) per socket: 16; ```; It is possible that this is just a slurm issue, or something else going on which is not related to MMSeqs -- I just wanted to double-check that there is nothing glaringly wrong with this workflow. Also, thank you so much for how quickly you respond to issue requests! I really appreciate it.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805:1087,predict,predicted,1087,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805,1,['predict'],['predicted']
Safety,"Cryptic_DB/Cryptic_DB`. `mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0`; `mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0`. `mmseqs search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf -s 2 --spaced-kmer-pattern 11011101 --gap-open 16 --gap-extend 2 -k 6 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. This didn't find all the peptides. I have experimented with increasing gap penalties, variying k-mer sizes (5-7), and sensitivity. I have also tried explicitly stating --spaced-kmer-pattern and k-mer length during createindex step. ; The best result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; Thanks in advance,; Yehor. ## MMseqs Output; search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 --start-sens 1 --sens-steps 3 -s 12 --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	inf; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:1622,detect,detected,1622,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['detect'],['detected']
Safety,"Dear mmseqs2 developvers,. I have a list of thousands of subject - query fasta pairs, and I would like to run mmseqs to align each of these pairs in a way that each sequence is only aligned to its pair. This is how my list looks:. ```; S10CNODE_1.fasta S1CNODE_25.fasta; S10CNODE_2.fasta S2CNODE_8.fasta ; S10CNODE_3.fasta S5CNODE_11.fasta ; S10CNODE_4.fasta S3CNODE_7.fasta; S10CNODE_5.fasta S6CNODE_10.fasta; ```; Is there an efficient way to perform these 1:1 alignments? Could I create a database that contains all sequences and then align a database subentry?. I am trying to avoid aligning all against all.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/813:581,avoid,avoid,581,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/813,1,['avoid'],['avoid']
Safety,"Dear, . I am using mmseqs2 to remove redundant sequences and isoforms from eukaryotic proteomes. However, we obtained some unexpected and undesired clusters and we would like to understand what is going on. We would like to know if this result is actually the expected one (which I'm not sure beucase both clustered seqs are divergent), or if this is a bug, or something that we do not consider in the command line. . We used the proteome of Trichoplax adhaerens (https://www.uniprot.org/proteomes/UP000009022). **## Expected Behavior**; We have focused on two sequences as example that should be in different clusters, B3RQY5 and B3S420. ; The sequence similarity of both sequences is the following (aligned with needle):; - Length: 643; - Identity: 146/643 (22.7%); - Similarity: 199/643 (30.9%); - Gaps: 358/643 (55.7%); - Score: 682.5; >B3S420 ; DHVFANENDNSDVYQKVASPIVTAAMEGFNGTIFAYGQTSSGKTHTMMGNHNDPGVIPLA; VNEIFRYINQKPNREFLLRVSYMEIYNEVITDLLNPSNTNLKIHENQKKEVYVGSLTENI; VNSPSQILTIMTQGETHRHTGGTNMNERSSRSHTIFRMIIESREQNQDQNEADQDTAVKV; SALNLVDLAGSERVSQTGSEGIRLKEGGFINKSLLTLGSVIAKLSEGEGNFIPFRDSKLT; RILQSSLGGNALTAIICTVTPVSLDETSSTLKFASRAKKIKNKPEVNEVVDDE; > B3RQY5; MNSEDACNIRVVCRVRPLNSAETHAGSEFIPKFPNEGQIVLSGKSFSFDHVLNSSTNQQS; MYDIAAKPIVKDVLAGYNGTIFAYGQTSSGKTHTMEGVIGDPEWQGIIPRIIGDIFAYIY; TMDENLEFHIKVSYFEIYMDKIRDLLDVTKTNLAVHEDKNRIPYVKNITERFVSSPEEVF; EIIDEGKSNRHVAVTNMNEHSSRSHSIFLIHIKQENVETHKSVHGKLYLVDLAGSEKVSK; TGAEGMVLDEAKNINKSLSALGNVISALSEATKSHVPYRDSKLTRILQESLGGNARTTII; ICCSPSSINESETKTTLQFGARAKTIKNSVKVNEELPAEEWKRRYEKEREKSSRIKRVLE; NYELELKKWRDGENVPVNEQAGGKDEGKLTSNHSTSKINIADALGESERVQFDEERNRLY; EQIDEKDDELNNRNTLIEQLRRQLEDKDEEFHLIKNESTRRQAQINALEDELQDSKDEVK; EVLNALEELYVNFDEKSRQLEVKSQEYEKNLEELMGIKSKLSNMEENFEETKDTEKRYKR; RVTESIKNLLQDMHEIGDVLQDEELKTAIAKDSEKVSDEELTLARLHFGKIKGELKILVS; RNHTIESERAELEKKLNVSEANLSENQLLLTEACF. **## Current Behavior**; Both sequences are in the same cluster using easy-cluster. . **## Steps to Reproduce (for bugs)**; We used this command to obtain such result:; mmseqs easy-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/544:37,redund,redundant,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/544,1,['redund'],['redundant']
Safety,"Greetings,. The program correctly detects and parses Uniprot header, as described in [https://github.com/soedinglab/mmseqs2/wiki#identifier-parsing](url). Is there a way to avoid parsing it and keep the entire FASTA sequence identifier (e.g. `sp|Q8I6R7|ACN2_ACAGO` instead of only `Q8I6R7`) in the result file when doing a search ?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/565:34,detect,detects,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/565,2,"['avoid', 'detect']","['avoid', 'detects']"
Safety,"Hello there, . I want to create a taxonomy db from the GTDB release 89. . I have found that Annotree presents a file with all the predicted gene sequences here:; [https://data.ace.uq.edu.au/public/misc_downloads/annotree/r89/](https://data.ace.uq.edu.au/public/misc_downloads/annotree/r89/). From this I could obtain a db easily and generate a tab-separating mapping file explicitly pointing to a genome: . ```; NZ_FWXU01000077.1_1 RS_GCF_900176345.1; NZ_FWXU01000059.1_5 RS_GCF_900176345.1; NZ_FWXU01000047.1_9 RS_GCF_900176345.1; NZ_FWXU01000020.1_25 RS_GCF_900176345.1; NZ_FWXU01000020.1_57 RS_GCF_900176345.1; NZ_FWXU01000020.1_89 RS_GCF_900176345.1; NZ_FWXU01000018.1_9 RS_GCF_900176345.1; NZ_FWXU01000018.1_41 RS_GCF_900176345.1; NZ_FWXU01000018.1_73 RS_GCF_900176345.1; NZ_FWXU01000018.1_105 RS_GCF_900176345.1; ```; There is also a taxonomy file [here](https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/) in which for each genome there is the taxonomic information in the following structure: . ```; RS_GCF_900234795.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Methylobacterium;s__Methylobacterium extorquens; RS_GCF_000012905.2	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhodobacterales;f__Rhodobacteraceae;g__Rhodobacter_A;s__Rhodobacter_A sphaeroides; GB_GCA_003096615.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Methylobacterium;s__Methylobacterium organophilum; GB_GCA_002709955.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__UBA8366;f__GCA-2696645;g__GCA-2696645;s__GCA-2696645 sp002709955; RS_GCF_001556125.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Bosea;s__Bosea sp001556125; RS_GCF_001555965.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Sphingomonadales;f__Sphingomonadaceae;g__Sphingomonas;s__Sphingomonas sp001555965; RS_GCF_900101505.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacte",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/244:130,predict,predicted,130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/244,1,['predict'],['predicted']
Safety,Hello! I used MMseqs2 concatdb to concatenate two reference databases (NR and MMETSP) and everything ran fine with Metaeuk (predictexons and reduceredundancy) but when I try to do unitesetstofasta it says the db_h file is not there. I realise when I did concatdb it did not generate a concatdb_h file or a concatdb_h.dbtype or concatdb_h.index.; I tried just manually concatenating the two _h files (NR_h and MMETSP_h) and that seems to work but it also asks for the .index file and I don't really know what that contains or how to generate it. ; Help please? Thank you!!,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/537:124,predict,predictexons,124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/537,1,['predict'],['predictexons']
Safety,"Hello, . I've been encountering an issue for creating index of ColabDB. It looks like it is a memory consumption issue. Could you help me with this matter please? ; Thank you in advance for your help. . Sincerely,; Ilyes. ## Expected Behavior; An index file of the colabfold_envdb_202108_db is computed for a fast read-in. ## Current Behavior; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Steps to Reproduce (for bugs); I am using the following commands to build the database as indicated here: https://colabfold.mmseqs.com/; Uniref30 was successful but not ColabDB. . `wget https://raw.githubusercontent.com/sokrypton/ColabFold/main/setup_databases.sh`; `chmod +x setup_databases.sh`; `./setup_databases.sh database/`. ## MMseqs Output (for bugs). + ARIA_NUM_CONN=8; + WORKDIR=database/; + cd database/; ++ pwd; + export PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + STRATEGY=; + hasCommand aria2c; + command -v aria2c; + hasCommand curl; + command -v curl; + STRATEGY=' CURL'; + hasCommand wget; + command -v wget; + STRATEGY=' CURL WGET'; + '[' ' CURL WGET' = '' ']'; + '[' '!' -f COLABDB_READY ']'; + mmseqs createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1; createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Vers",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/583:384,Detect,Detected,384,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583,1,['Detect'],['Detected']
Safety,"Hello, ; I am trying to use MMSEQS2 to assign taxonomy to a large set of predicted genes. However, the command “mmseqs taxonomy” is not identified. ; I am using version 1d62934a57769c971fec3724d3e805f8162b976a . Could you please let me know how I should enable this option?; Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/71:73,predict,predicted,73,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/71,1,['predict'],['predicted']
Safety,"Hello, I have a huge target database (123K microbial genomes) and must `search` 60 datasets ranging from a few sequences of size 31 to 200K sequences with some reaching more than 100K nucleotides. Even for the smallest query, the pre-filter step takes most of the time (about 30 hours) on an EPYC cpu (120 threads used). The total run time would be about 80 days. How much could I improve the running time if I `createindex` the database ? I couldnt find the information in the publication, and the other issue I found was about `taxonomy`. EDIT: the target dabatase:; ```; total 299G; -rwxrwx--- 1 guelou01 4294967294 447G Aug 18 19:33 NCBI_ALL_DB; -rwxrwx--- 1 guelou01 4294967294 4 Aug 18 19:34 NCBI_ALL_DB.dbtype; -rwxrwx--- 1 guelou01 4294967294 954M Aug 18 18:11 NCBI_ALL_DB_h; -rwxrwx--- 1 guelou01 4294967294 4 Aug 18 18:11 NCBI_ALL_DB_h.dbtype; -rwxrwx--- 1 guelou01 4294967294 195M Aug 18 19:34 NCBI_ALL_DB_h.index; -rwxrwx--- 1 guelou01 4294967294 236M Aug 18 19:34 NCBI_ALL_DB.index; -rwxrwx--- 1 guelou01 4294967294 257M Aug 18 19:34 NCBI_ALL_DB.lookup; -rwxrwx--- 1 guelou01 4294967294 17 Aug 18 18:10 NCBI_ALL_DB.source; ```; Is there a way to predict how much space it can take ?. Command:; ```; mmseqs search query_DB target_DB result_DB ~/tmp --search-type 3 --threads 120 -a --max-seq-len 1000000 --start-sens 1 --sens-steps 3 -s 7 ; ``` ; Any other suggestions to speed up the process ?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/748:1159,predict,predict,1159,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748,1,['predict'],['predict']
Safety,"Hello,. First, thank you for the fantastic work on mmseqs2, its super fast! I think I’ve come across an issue where exact matches arent being detected by the mmseqs2 search algorithm. . ## Expected Behavior; Exact matches hit eachother. ## Current Behavior; When a subset of sequences from a reference database are searched against the database, a surprisingly large fraction of proteins do not return themselves as their best hit. The severity of the problem depends on the database size, in the example below 2.8% of proteins do not hit themselves, but when I came across this issue I was generating a larger database where using the same test 31% of proteins were not hitting themselves at all. This result does not change if sensitivity is increased to the maximum (-s 8.5). I find this behaviour concerning given you’d expect an exact matches to be returned in a relatively small database. ## Steps to Reproduce (for bugs); If I grab 10 random genomes ([genome_proteins.tar.gz](https://github.com/soedinglab/MMseqs2/files/1444710/genome_proteins.tar.gz)) from NCBI and create a reference database using their proteins, and use one of these genomes as the query database:; ```; cat *faa > pooled.faa. mmseqs createdb \; 	pooled.faa \; 	reference_DB. mmseqs createdb \; 	GCF_000352185.1_protein.faa \; 	query_DB; ```; Then search query against the reference using default settings, and convert this to a blast-like output:; ```; mkdir tmp . mmseqs search \; 	query_DB \; 	reference_DB \; 	result_DB \; 	tmp . mmseqs convertalis \; 	query_DB \; 	reference_DB \; 	result_DB \; 	result_DB.m8; ```. and grab the top hit for each protein (i.e. first listed):. ```; for i in `cat result_DB.m8 | awk '{print $1}' | uniq `; 	do grep -m 1 -w ^$i result_DB.m8; done > result_DB.top_hits.m8; ```; Then, when we check the results in R:; ```; library('data.table'); d = fread('result_DB.top_hits.m8'); # Check if query matches the reference sequence ID; d$self_match = d$V1 == d$V2. # Check percentage of total ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/48:142,detect,detected,142,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/48,1,['detect'],['detected']
Safety,"Hello,. I downloaded and set up the Uniref100 database for the taxonomy pipeline according to the instructions, but when I run the taxonomy command, the output says `Computed index is too large. Avoid using the index`. It also says `split was set to 5 but at least 8 are required. Please run with default paramerters` even though I never adjusted the default. Are these things I should be worried about, and could I be doing something different to make this search more efficient? I know it is a huge database. Full traceback of commands below. Thank you in advance,; -Matt. ## Commands to set up the taxonomy database; ```; mmseqs databases UniRef100 uniref100.mmseqs tmp. mmseqs createtaxdb uniref100.mmseqs tmp --threads 8; createtaxdb uniref100.mmseqs tmp --threads 8. mmseqs createindex uniref100.mmseqs tmp --threads 8; createindex uniref100.mmseqs tmp --threads 8; ```. ## Search commands; ```; mmseqs createdb N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.faa N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db. mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_42; 5.proteins.taxonomy temp --threads 8; ```. ## Full traceback of search command; ```; mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8; Tmp temp folder does not exist or is not a directory.; Create dir temp; taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8. MMseqs Version: ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/278:195,Avoid,Avoid,195,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278,1,['Avoid'],['Avoid']
Safety,"Hello. I am currently running a variant impact prediction based on MSA.; Recently, an [preprint](https://www.biorxiv.org/content/10.1101/2022.12.13.520259v1.full) was published. . > Alignment-based protein mutational landscape prediction: doing more with less, Marina Abakarova, Céline Marquet, Michael Rera, Burkhard Rost, Elodie Laine, bioRxiv 2022.12.13.520259; doi: https://doi.org/10.1101/2022.12.13.520259. This is that MSAs that can be created in colabfold using mmseqs2 are useful for variant impact prediction. Now that we have our gene database, we would like to run this workflow using our own database.; So we looked at the contents of the colabfold script and found that we need the expandable profile databases that are created by mmseqs2. However, when I looked for how to create this database, I could not find it.; I found the following command on the wiki, which converts already created expandable profile databases, right?; ```; wget http://wwwuser.gwdg.de/~compbiol/colabfold/uniref30_2103.tar.gz; tar xzvf uniref30_2103.tar.gz; mmseqs tsv2exprofiledb uniref30_2103 uniref30_2103_db; ```. Can you please tell me how to create it?; Thank you in advance. Keigo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/656:47,predict,prediction,47,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/656,3,['predict'],['prediction']
Safety,"Hi mmseq team,. I need some help in updating a previous mmseq based (near complete) clustered db (A) with additional sequences (B). My mmseq run for A, using easy-cluster, timed out at the stage of moving result files and deleting temporary files, a log and resulting files list is attached.; [mmseq.earthbiome.fna.2tb.log.gz](https://github.com/soedinglab/MMseqs2/files/5187248/mmseq.earthbiome.fna.2tb.log.gz); [resultfiles.txt](https://github.com/soedinglab/MMseqs2/files/5187249/resultfiles.txt). Now I have additional sequences as set B that I want to use to update set A to perform clustering and updating the final database. mmseq GitHub documentation says about updating a database as:. mmseqs createdb DB_trimmed.fasta DB_trimmed; mmseqs cluster DB_trimmed DB_trimmed_clu tmp. To update the clustering DB_trimmed_clu with the new version of your database DB_new:. mmseqs createdb DB.fasta DB_new; mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_new_updated DB_update_clu tmp. My worry is if If I cluster bigger dataset A again, it will take quite a few days, as in the last case the job was terminated on a 3 Tb memory machine after 7 days, without completing the last step of moving results and deleting temp files. In summary I need help in 1. saving or moving important result files and safely remove temporary files. and 2. a correct way of updating and clustering my dataset B with database A. Many Thanks,. IA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348:1308,safe,safely,1308,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348,1,['safe'],['safely']
Safety,"Hi there,. I runned mmseqs cluster on my dataset of 5,061,557 protein sequences using these 3 command lines (MMseqs2 Version: 9f493f538d28b1412a2d124614e9d6ee27a55f45). ```; mmseqs createdb 3600genomes.4pub.cleaned.faa 3600genomes.4pub.cleaned.faa.mmseqsDB >mmseqs_createdb.log. mmseqs cluster 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB_clu tmp --threads 48 -s 7.5 -c 0.5 --cov-mode 0 --max-seqs 5000 -e 0.001 --cluster-mode 0 >mmseqs_cluster.log. mmseqs createtsv 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB_clu 3600genomes.4pub.cleaned.faa.mmseqsDB_clu.tsv >mmseqs_createtsv.log; ```. When I had a look of the final tsv file (3600genomes.4pub.cleaned.faa.mmseqsDB_clu.tsv), I got two more sequences (5,061,559 instead of 5,061,557). Looking in details 4 new sequences was added:; RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1_0; RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1_1; GWA2_OP3_45_18_gwa2_scaffold_308_1_1; GWA2_OP3_45_18_gwa2_scaffold_308_1_0. whereas 2 sequences were removed:; 'RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1'; 'GWA2_OP3_45_18_gwa2_scaffold_308_1'. looks like mmseqs added a _0 or _1 suffix to the names of the two sequences missing. I'm pretty sure that there are no redundant sequence names in my fasta file dataset (I checked it out). Is there an explanation for these suffix ? . many thanks . Raph",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/97:1435,redund,redundant,1435,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/97,1,['redund'],['redundant']
Safety,"Hi!. I copied the tutorial from the wiki into a Jupyter notebook, and configured binder to be able to run it. Here is an example: [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/luizirber/MMseqs2/tutorial_in_binder?filepath=tutorial%2Ftutorial.ipynb). ## Notes. - I'm building MMseqs2 from master, but you can also pick a specific tag to put in the binder link. ## TODO. - [ ] Link in README.md? (or at least back in the wiki?); - [ ] Tutorial from wiki failed for me because `--report-mode` is missing in the bioconda package?; - [ ] Preload data during the `postBuild` step in binder? Not sure about this one, since it changes the tutorial a bit, but avoids redownloading everything during runtime.; * Need to at least preload the taxdump, I think binder is blocking the download (is it an FTP link? [binder](https://github.com/binder-examples/getting-data/blob/4c9deceab9e4fbe095e704a3aa11671321e0584f/README.md#large-public-files) blocks FTP downloads...); - [ ] Clean up outputs (don't want to spoil what is the mystery pathogen!); - [ ] Fix path to logo in the intro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/250:681,avoid,avoids,681,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/250,1,['avoid'],['avoids']
Safety,"Hi, . Here are the following settings I used in order to get a .m8 file. . ```; mmseqs2=/beegfs/home/TOOLS/mmseqs2/bin/mmseqs; $mmseqs2 createdb\; /path/species.fa\; /path/species_mmseqs2_db; $mmseqs2 search\; /path/species_mmseqs2_db\; /path1/path2/refseq/viral_queries_seq/mmseq_db\; /path1/path2/species/result_mmseqs2\; /path1/path2/species/tpm -a -s 7.5 -e 0.1; $mmseqs2 convertalis\; /path/species_mmseqs2_db\; /path1/path2/refseq/viral_queries_seq/mmseq_db\; /path1/path2/species/result_mmseqs2\; /path1/path2/species/result_mmseqs2_db.m8; ```. and here is the head file.m8 I get: . ```; scaffold_2855_1	YP_009173613.1	0.742	377	96	1	55020	53895	70	446	1.803E-180	566; scaffold_2855_1	YP_004091438.1	0.729	377	101	1	55020	53895	66	442	2.282E-173	546; scaffold_2855_1	YP_007676312.1	0.721	377	104	1	55020	53895	65	441	4.321E-170	536; scaffold_2855_0	YP_093986897.1	0.683	376	119	0	55020	53895	67	442	3.184E-167	528; scaffold_2855_2	YP_009894551.1	0.672	376	123	0	55020	53895	67	442	3.210E-164	519; ```. Here is my question.; **First**, do you know how could I avoid to add the `index _number` after the query's name? such as `scaffold_2855_1 or scaffold_2855_0 or scaffold_2855_2` etc. **Second question:**; I did not really understand the MPI parameters in order to be faster. I have actually a SLURM server where I submit all my jobs (so actually it is one job with 20 threads per run), if I well understood I can run the program from different machines by using this parameter? How could I do with the settings I used above? . Thank you for you help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/163:1066,avoid,avoid,1066,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/163,1,['avoid'],['avoid']
Safety,"Hi, . I have a ~150 samples of protein fasta files, which I'd like to generate a non-redundant set of proteins from. I have tried concatenating the files to run the following:; ```; mmseqs easy-linclust --cov-mode 0 -c 0.8 --min-seq-id 0.3 all_nomis_proteins.faa mmseqs2_output tmp; ```. However, the concatenated file has 400 Mio genes, making it computationally infeasible. What may be the best approach here?. 1. cluster smaller sets of samples and then re-cluster? ; 2. for point-1 above, can one provide multiple inputs or should concatenate the smaller sets?; 3. for `re-clustering` after an initial round, is it possible to output the `non-redundant` fasta file?. Thank you for your input!; -Susheel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/608:85,redund,redundant,85,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608,2,['redund'],['redundant']
Safety,"Hi, I am trying to run `alignall` on a clusterDB and it fails due to lacking `diagonal information` in some queries. . Thank you for this awesome piece of software!. ## Expected Behavior; Alignment of all cluster members when clustering a nucleotide fasta file. ## Current Behavior. `mmseqs alignall` dies with an error. ## Steps to Reproduce (for bugs). `tmp.fa` contains 425 nucleotide sequences between 100 kb to ~5 kb. ```; mmseqs createdb tmp.fa db ; mmseqs cluster db clu /tmp/ --max-seqs 1000 --threads 40 --min-seq-id 0.8 -e 0.000010 -c 0.8; mmseqs alignall db clu alignDb -a ; mmseqs createtsv db db clu clu.tsv; ```. ## MMseqs Output (for bugs); `mmseqs alignall db clu alignDb -a ` returns. ```; Query sequence 400 has a result with no diagonal information. Please check your database.; ```. ## Context; I am trying to cluster TE models predicted by RepeatModeler2, so there is likely quite a bit repetitiveness within and across the sequences. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; `MMseqs2 Version: 7e2840992948ee89dcc336522dc98a74fe0adf00`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled as a HPC cluster module. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; I requested a node with 40 CPUs and 160 GB ram for this job. * Operating system and version:; `uname -a` gives:; ```; Linux g-02-c0082 3.10.0-1062.4.1.el7.x86_64 #1 SMP Fri Oct 18 17:15:30 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/654:848,predict,predicted,848,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/654,1,['predict'],['predicted']
Safety,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/212:1612,Abort,Aborted,1612,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212,1,['Abort'],['Aborted']
Safety,"Hi, just a direct question that when the ORF fasta files (predicted by prodigal) is the input file with easy-taxonomy (MMseqs Version: 	14.7e284), whether the fasta sequence will be again used to predict the ORF first or without ORF prediction and directly for a taxonomy assigment?. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/722:58,predict,predicted,58,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/722,3,['predict'],"['predict', 'predicted', 'prediction']"
Safety,"Hi,. I have written a tool called pharokka (https://github.com/gbouras13/pharokka) that annotates bacteriophage genomes. Pharokka uses mmseqs2 to match predicted CDS to the PHROGs (https://phrogs.lmge.uca.fr), CARD and VFDB databases using mmseqs2 which follows the method at https://phrogs.lmge.uca.fr/READMORE.php. Mmseqs2 is amazingly fast especially for large input metaviromes, so it's a brilliant choice for this clustering - thanks for developing it!. I am coming across a problem with the new version released 10 days ago. With v 13.4511, the 3 mmseqs2 searches take approximately 5-10 minutes in total depending on input, architecture and threads used. However, since mmseqs2 v14-7e284 has been released, users of pharokka have reported that the mmseqs2 step hangs indefinitely (at least 20+ hours) when pharokka with mmseqs2 v14-7e284 is installed with bioconda. I have replicated the issue on my machines also. . The relevant lines in pharokka are 358-369:. https://github.com/gbouras13/pharokka/blob/3b8f7ae207b367366765f482c9dce1dd2cccee80/bin/processes.py#L358 . # create target db; ""mmseqs"", ""createdb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/625:152,predict,predicted,152,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625,1,['predict'],['predicted']
Safety,"Hi,. I'm looking to use the UniRef90 sequences as representatives of gene clusters and then extend these clusters with additional sequences. Is it possible to take the set of ~153 million UniRef90 sequences and indicate that each one should be used as a cluster representative (i.e. if there are X input sequences, I want exactly X clusters)? Ideally, I'd avoid doing any actual clustering here since I've pre-selected the representatives. Thanks for any suggestions or insights you can provide. Cheers,; Donovan",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/671:356,avoid,avoid,356,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/671,1,['avoid'],['avoid']
Safety,"Hi,. I'm trying to convert the MSA of a cluster DB to HH-blits format. . So, I follow [this tutorial](https://github.com/soedinglab/mmseqs2/wiki#how-to-create-a-hhblits-database). > mmseqs result2msa pbps.DB pbps.DB pbps.CLU pbps.CLU.msa --compress ; > ln -s pbps.DB_h pbps_MSA_header.ffdata ; > ln -s pbps.DB_h.index pbps_MSA_header.ffdindex ; > ln -s pbps.DB_h.index pbps_MSA_header.ffindex ; > ln -s pbps.DB pbps_MSA.ffdata ; > ln -s pbps.DB.index pbps_MSA.ffindex . All commands above work nicely, the `pbps.CLU` database are also nice capable to generate the TSV file with all clusters. But when I run:; > mpirun -np 2 /usr/lib/hh/bin/cstranslate -i pbps.CLU.msa_ca3m.ffdata -o pbps.CLU.msa_cs219 -A /usr/lib/hh/data/cs219.lib -D /usr/lib/hh/data/context_data.lib -x 0.4 -c 4 -I ca3m. I got this message:; ```; Reading context library for pseudocounts from context_data.lib ...; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[19728,1],1]; Exit code: 1; --------------------------------------------------------------------------; ```. How can I debug this error?? . Also, when I used the `mmseqs result2msa` with `--compress` option the output are two files with `_ca3m.ffdata` and `_ca3m.ffindex`. Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174:1260,abort,aborted,1260,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174,2,"['abort', 'detect']","['aborted', 'detected']"
Safety,"Hi,. I'm using the mmseqs hosted in linuxbrew version 3-be8f6. I'm using a routine to hierarchical cluster which I remove gradually the redundancy. ; I've got some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/102:136,redund,redundancy,136,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102,1,['redund'],['redundancy']
Safety,"Hi,; I am new to MMSeqs2. It is really a good tool. However, I have 2 queries, may be basic too. But I want your opinions.; In an attempt to build a set of 30-90% sequence similarity, I removed the redundant hits myself firstly and then deployed a minimum sequence identity threshold of 30% and coverage 1 (All 92 input sequences are close homologues and so I want to avoid the partial match to build the good set), it resulted in 52 hits. So, now as you are guiding, the multiple resultant cluster sets have the sequence identity lesser than 30%, but the 52 hits share a sequence identity > 30%. Is this correct that this way my reduced set of 52 hits contains the sequences that are 30-90% identical?. Further, why is it that for another sequence-group, the resultant set spans the same 45 sequences for both 30% and 90% cutoffs. So, does it mean that the length of atleast 1 representative sequence is bigger and it spans multiple sequences in either of these ranges to result in the same set? How should this result be defined?; Thanks for your clarifications.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/173:198,redund,redundant,198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/173,2,"['avoid', 'redund']","['avoid', 'redundant']"
Safety,"Hi,; is it please possible to set a limit on the amount of memory MMseqs2 uses for its computations? Or to set the number of computation chunks?; I know from the MMseqs2 wiki it automatically detects how much memory it can use and eventually it splits database into chunks etc. But this is not practical for grid computing environment where you have to request a specific amount of memory a priori and your job is then executed on a machine which actually has much more memory but it is shared with other jobs. It can then happen that MMseqs2 will consume more memory than allowed just because its available from the system point of view. The queue management software will then kill the job as it exceeded assigned resources.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58:192,detect,detects,192,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58,1,['detect'],['detects']
Safety,"Hi. I am having some strange behavior when using the easy-taxonomy with a query with only one contig. Here you can find the [contig](https://github.com/soedinglab/MMseqs2/files/6821433/477fb4bafa.assm.refined.fasta.gz) and the [log](https://github.com/soedinglab/MMseqs2/files/6821435/477fb4bafa.contig-taxonomy.GTDB.log). I don't think it is related to https://github.com/soedinglab/MMseqs2/issues/31 or https://github.com/soedinglab/MMseqs2/issues/447 . The DB seems fine. I processed hundreds of samples using the same MMseqs2 command, and I only had problems in files with one contig. The samples are complicated to assemble, and sometimes I only can recover one contig. ## Current Behavior. When running ; ```; mmseqs easy-taxonomy /vol/cloud/geogenetics/KapK/results/assembly-refined/477fb4bafa.assm.refined.fasta /vol/cloud/geogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/473:655,recover,recover,655,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473,1,['recover'],['recover']
Safety,"Hi; this is not an issue but a potential enhancement we discussed with @martin-steinegger.; We have a seed clustering database that is continuously updated with new sequences. The size of the DB is growing quite fast, and eventually, we will have problems storing and distributing it. As we have many redundant sequences in each cluster. We thought that having a module that takes a DB and then filters it based on a criterion similar to `--diff` from `result2msa` or `result2profile` would be very useful to keep only informative sequences in the clusters. Thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/316:301,redund,redundant,301,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316,1,['redund'],['redundant']
Safety,How to avoid getting multiple split databases,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/644:7,avoid,avoid,7,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/644,1,['avoid'],['avoid']
Safety,"I encountered an error while executing the command cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ... My cmake version is 3.28.0, and gcc version 7.3. The error message I received is as follows:. -- The CXX compiler identification is GNU 7.3.0 ; -- The C compiler identification is GNU 7.3.0 ; -- Detecting CXX compiler ABI info ; -- Detecting CXX compiler ABI info - failed ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ - broken ; CMake Error at /usr/local/share/cmake-3.28/Modules/CMakeTestCXXCompiler.cmake:60 (message): ; The C++ compiler; ""/home/anaconda3/envs/AlphaFlow/bin/c++"" ; is not able to compile a simple test program. ; It fails with the following output:; Change Dir: '/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz'; Run Build Command(s): /usr/local/bin/cmake -E env VERBOSE=1 /usr/bin/gmake -f Makefile cmTC_8b7b3/fast ; /usr/bin/gmake -f CMakeFiles/cmTC_8b7b3.dir/build.make CMakeFiles/cmTC_8b7b3.dir/build; gmake[1]: Entering directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; Building CXX object CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o ; /home/anaconda3/envs/AlphaFlow/bin/c++ -o CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -c /home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz/testCXXCompiler.cxx ; Linking CXX executable cmTC_8b7b3 ; /usr/local/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8b7b3.dir/link.txt --verbose=1 ; /home/anaconda3/envs/AlphaFlow/bin/c++ -rdynamic CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -o cmTC_8b7b3 ; collect2: fatal error: cannot find 'ld' compilation terminated. ; gmake[1]: *** [cmTC_8b7b3] Error 1 ; gmake[1]: Leaving directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; gmake: *** [cmTC_8b7b3/fast] Error 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/816:308,Detect,Detecting,308,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/816,2,['Detect'],['Detecting']
Safety,"I had carefully read this similar issue below. I think my problem may be different and with more details.; https://github.com/soedinglab/MMseqs2/issues/658; ## Expected Behavior; mmseqs local runs with similar response time as that in mmseqs colabfold api.; Is there a solution for ColabFold multimer prediction msa search with a good speed(not fastest, but faster) with 256GB memeory?; ## Current Behavior; for 1 sequence pair(164 mers and 6 mers) input, local mmseqs msa server use more than 4 hours to process, even much slower than Alphafold orig MSA local running at the same local hardware environment.; **I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.**; **Is this very low speed caused by I didn't keep all database into memory?**; >HAGPIA; ## Steps to Reproduce (for bugs); I follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690:301,predict,prediction,301,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690,1,['predict'],['prediction']
Safety,"I have installed the latest version available via ; `conda install -c conda-forge -c bioconda mmseqs2`. I tried to download the PDB database via ; `mmseqs databases PDB pdb_db tmp`. This leads to the process just hanging. One of the error messages printed shows that the URL seems to be inactive, as described in this [issue](https://github.com/soedinglab/MMseqs2/issues/772#issue-1977470516) (#772). . 03/11 13:57:28 [ERROR] CUID#7 - Download aborted. URI=https://ftp.wwpdb.org/pub/pdb/derived_data/pdb_seqres.txt.gz; Exception: [AbstractCommand.cc:340] errorCode=2 Timeout. Is there a way to specify the URL when calling `mmseqs databases`? Or could you suggest a fix for the code when installed via conda?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/820:444,abort,aborted,444,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/820,2,"['Timeout', 'abort']","['Timeout', 'aborted']"
Safety,"I used easy-linclust (with parameters: -c 0.9; --min-seq-id 0.9; --cov-mode 1; --cluster-mode 2) for clustering and obtained representative sequences. Then I divided it into single sequences (singleton clusters) and representative sequences of non-singleton clusters (those containing ≥ 2 sequences). Subsequently, I used DIAMOND to create a database of representative sequences of non-singleton clusters and then compared the single sequence with the database using diamond blastp (--id 90, --subject-cover 90, or had tried --query-cover 90). The results showed that a large number of sequences were shared over 90% identity (some sequences shared Identity=100%). In the MMseq Output provided below, I have removed the information on Converting sequences, which is over 400 million and too long to read.; ## Expected Behavior; Non-redundant representative sequences should be obtained; ## Current Behavior; a large number of representative sequences are redundant; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; > mmseqs easy-linclust /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort.faa /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort All_cohort_tmp/ --min-seq-id 0.9 --cov-mode 1 -c 0.9 --cluster-mode 2 --max-seq-len 10000 --threads 56; ## MMseqs Output (for bugs); Create directory All_cohort_tmp/; easy-linclust /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort.faa /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort All_cohort_tmp/ --min-seq-id 0.9 --cov-mode 1 -c 0.9 --cluster-mode 2 --max-seq-len 10000 --threads 56 . MMseqs Version: 	13-45111+ds-2; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Threads 	56; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:832,redund,redundant,832,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,2,['redund'],['redundant']
Safety,"I wanted to run the MSA calculation of a set of proteins to do structure prediction. I used the script that calls the mmseqs2 API that colabfold uses for the MSA calculation.; Except that now, I wanted to use mmseqs2 directly to be able to run my calculation in a cluster.; To do this, I used the script colabfold_search.sh without a precomputed index(https://gist.github.com/milot-mirdita/67509c248746c4c774128fc84ab91b6f), with the two databases uniref30_2103 and colabfold_envdb_202108. I set USE_ENV to 1, USE_TEMPLATE to 0 and the FILTER to 1.; The problem is that the resulting MSA is very different from the MSA I got from using the API.; For example, with this protein sequence of 679 in length.; With the API I get an MSA of 20446 sequences, while with colabfold_search.sh I get an MSA of 20865 in size, and only 1150 sequences in common between the two methods.; Is there any way to get the same output as the API using the colabfold_search.sh script?; the input and the outputs are here : ; https://drive.google.com/drive/folders/1ZcAHKRzxT4hK-Bjb8ZKozDfaO_cTptwO?usp=sharing; - The msa of the mmseqs2 API is stored in msa_api.pickle; - The msa of mmseqs2 launched in the cluster is in the form of file.a3m I converted it myself in file msa_mmseqs2.pickle to make the comparison.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/552:73,predict,prediction,73,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/552,1,['predict'],['prediction']
Safety,"I will appreciate if you can help me with a couple of questions regarding; MMseqs2. I've been running it using both approaches, for the alignment against; sequence dbs (mmseq search -> convertalis) and for the taxonomical binning; (mmseq taxonomy -> taxonomyreport), either with a single sequences set or; multiple sets after de-multiplexing barcodes from sequencing run. * The first question is if it is possible to get a taxonomy report directly from; ""search"" option or the other way around, say here get search alignments (or; convertalis-like) from ""taxonomy"" option, in order to avoid two runs of mmseqs; (one for search and one for taxonomy).; * The second question relates to merging the mmseq output, either from search or; taxonomy options, after running mmseqs2 separately on each sequence bin. Is it; possible to get convertalis or taxonomyreport from the output from several; mmseqs ""search"" or ""taxonomy"" runs?. Thanks for your assistance on those questions... Josep F. ## Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MMseqs2 from github, version: 5fcc48fbf4f6697e73e1e2a4b3f53c6cdf87e8f1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; 4 AMD Opteron 6386 SE (avx/sse4_1/sse4_2), 64 cores, 512GB RAM; * Operating system and version:; Linux 4.9.0-9-amd64 #1 SMP Debian 4.9.168-1+deb9u5 (2019-08-11)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/267:585,avoid,avoid,585,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/267,1,['avoid'],['avoid']
Safety,I would like to use `mmseqs taxonomy` to detect contaminations within a transcriptome assembly. The transcriptome is from a metazoan organism. Contaminations are mainly bacterial. I would like to use NR and NT databases for a start (and I successfully run first analyses with mmseqs2). But I can also build my own database.; EDIT: Level of contamination is quite high and contamination is taxonomically quite diverse. Otherwise it would be rather easy. First question: do you have specific recommendations when dealing with a transcriptome as the query? For example taking into account the rather short contigs and splicing. Second question: There are no genome assemblies form closely related species available. What are your thoughts regarding nucl-nucl search VS translated_nucl-prot search in this case?. Third questions: In case I do a translated_nucl-prot search how do I deal with the fact that my queries are both from Euk. and Prok. origin? I mean regarding translation table. Would you worry about this?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/444:41,detect,detect,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444,1,['detect'],['detect']
Safety,I'd like to know whats the difference between `createlinindex` and `createindex`. I did the index to `nr` with `createindex` and after I did `createlinindex` which overwrites the `*.idx` files of the previous index. . There is a way to keep both indexes avoiding one overwrite the other.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/306:254,avoid,avoiding,254,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/306,1,['avoid'],['avoiding']
Safety,"I'm getting the following error when clustering DNA sequences of genes predicted using [prodigal](https://github.com/hyattpd/Prodigal). ```; there must be an error: 4555074 deleted from 8264926 that now is empty, but not assigned to a cluster; there must be an error: 2084676 deleted from 4818957 that now is empty, but not assigned to a cluster; there must be an error: 1856143 deleted from 5943940 that now is empty, but not assigned to a cluster; there must be an error: 5296758 deleted from 711843 that now is empty, but not assigned to a cluster; there must be an error: 7150694 deleted from 6155612 that now is empty, but not assigned to a cluster; there must be an error: 8533816 deleted from 9452727 that now is empty, but not assigned to a cluster; there must be an error: 9521033 deleted from 8465434 that now is empty, but not assigned to a cluster; there must be an error: 2376789 deleted from 9427595 that now is empty, but not assigned to a cluster; ```. I have attached the error and output file for your reference.; Thanks!. [mmseqs2.409914.out.txt](https://github.com/soedinglab/MMseqs2/files/11750406/mmseqs2.409914.out.txt); [mmseqs2.409914.err.txt](https://github.com/soedinglab/MMseqs2/files/11750407/mmseqs2.409914.err.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/719:71,predict,predicted,71,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/719,1,['predict'],['predicted']
Safety,"I've been trying to generate an MSA of each cluster using an external tool. The problem is the external tool doesn't accept input from stdin and requires a file. My workaround was to use ```ffindex_unpack``` to generate a file for each cluster and then pass those to external tool. But this can lead to a lot of trouble and I want to avoid it,. How would one proceed to use ```mmseqs apply``` to generate a temporary file and pass that file to the external tool? . I've been trying to generate a bash script for this but it's my first ever attempt with bash scripting and I'm having trouble ""capturing"" the entire cluster in the temporary file.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/536:334,avoid,avoid,334,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/536,1,['avoid'],['avoid']
Safety,"LFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKG. >S6; ANINAVTKIGNTPLHT. >S7; IVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPIDDFSKSSDLLLCYLRYKFNGSLNYYVLYKLLTKGSDPNCVDEDGLTSLHYYCKHISAFHESNYYKSKSHTKMRAEKRFIYAIIDHGANINAVTKIGNTPLHTYLQQYTKHSPRVVYALLSRGADTRIRNNLNCTPIMEYIKNDCATGHILIMLLNWHEQKYGKLQKEEGQHLLYLFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHKSKLVDKALNKLESTIDSQSRLSYLPPEIMRNIITKLSDYHLNSMLYGKNHY. >S8; LFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHK; ```. ## MMSeqs Tested Command ; ### Test 1 (--min-seq-id 1); mmseqs cluster test_mmseqs/DB test_mmseqs/seqid1_v2 seqid1_tmp_v2 --min-seq-id 1. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1 |; | S2 | S2 |; | S3 | S3 |; | S5 | S5 |; | S6 | S6 |; | S7 | S4, S7 |; | S8 | S8 |. ### Test 2 (--min-seq-id 1, -c 1.0, and --cov-mode 1); mmseqs cluster test/DB test/seqid1_test seqid1_tmp --min-seq-id 1 --cov-mode 1 -c 1.0. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1, S3, S2 |; | S4 | S4, S5, S7, S8 | ; | S6 | S6 | . ** PS: ; 1. This result is close to expected. However, I have no idea why the mmseqs does not group the S6 within the S4 cluster since S6 is a partial sequence of S4. ; 2. There are no differences in the results if reducing the -c from 1.0 to 0. . With these results, I am not sure if I use the correct parameter settings. Kindly advise me on the corresponding parameter to set for the MMSeqs2 cluster that is equivalent to CDHIT in order to have a non-redundant sequence dataset. . Regards, ; Chong",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/601:3744,redund,redundant,3744,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/601,1,['redund'],['redundant']
Safety,"Not sure if this is a bug or if I am missing a flag that would make this all work as expected. ## Expected Behavior; I wish to taxonomically annotate contigs using the `mmseqs easy-taxonomy` workflow.; I see from your documentation (https://github.com/soedinglab/MMseqs2/wiki#taxonomy-output-and-tsv) that it is possible to calculate the LCA of a contig predicted ORFs. With the output file produced listing the contig_name along with the total number of predicted ORFs and the number of those ORFs with top hits that agree with the assigned LCA of the contig. ## Current Behavior; When I run the following command:; ```bash; mmseqs easy-taxonomy contigs.fasta swissprotDB tax tmp; ```; I get the following results files:; ```bash; tax_lca.tsv; tax_report; tax_tophit_aln; tax_tophit_report; ```; None of which contain the expected output described in the documentation. I have had a look at using `aggregatetax` command, but run into problem with the `createtsv` command not reassigning the contig names correctly.; ```bash; mmseqs createdb contigs.fasta contigsDb; mmseqs extractorfs contigsDb orfsAaDb --translate 1; mmseqs taxonomy orfsAaDb swissprotDB taxPerOrf tmp --tax-output-mode 2; mmseqs aggregatetaxweights swissprotDB orfsAaDb_h taxPerOrf taxPerOrf_aln taxPerContig --majority 0.5; mmseqs createtsv orfsAaDb contigsDb taxPerContig aggregatetaxResult.tsv; ```. ## Your Environment; ```bash; MMseqs2 Version: 113e3212c137d026e297c7540e1fcd039f6812b1; Pre-compiled binary; ```. Thanks for your help in advance. Cheers,; Tim.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/851:354,predict,predicted,354,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/851,2,['predict'],['predicted']
Safety,Question: recommendations for contaminant detection within transcriptome assembly,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/444:42,detect,detection,42,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444,1,['detect'],['detection']
Safety,"RI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 245 0 --:--:-- --:--:-- --:--:-- 245. 09/27 13:21:54 [NOTICE] Downloading 1 item(s). 09/27 13:21:54 [NOTICE] Allocat",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:1773,abort,aborted,1773,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['abort'],['aborted']
Safety,"Release 214 of the [GTDB](https://gtdb.ecogenomic.org/) was published in April 2023. A few changes to file formats in the GTDB seems to have broken the `mmseqs databases GTDB` command. ## Expected Behavior; Running `mmseqs databases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:764,abort,aborted,764,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,1,['abort'],['aborted']
Safety,"The default setting for threads of mmseqs2 is to just use all threads. This is not a safe default, especially if multiple people are working on the same system. One student who does not read the manual *carefully* can crash everything for everyone.; Would you consider setting the default to 1?; I realize this slows things down for people who *don't* read the manual/help-function. But I believe it is better to have safe defaults and mildly punish the people who *don't* read instructions than to have convenient defaults that severely punish everybody else...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/539:85,safe,safe,85,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/539,2,['safe'],['safe']
Safety,The representative sequence obtained by easy-linclust is still redundant,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:63,redund,redundant,63,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['redund'],['redundant']
Safety,Unexpected Sequence Identity Values for Redundant Sequences,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/861:40,Redund,Redundant,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/861,1,['Redund'],['Redundant']
Safety,"What are the memory requirements for `clusthash`? I am trying to redundancy filter a database of about 1.4 billion proteins using `clusthash` and when running the program, I get the message; ```; Can not touch 271995225098 into main memory; ```; It then continues to run for ~30 mins and then progress just halts. I left it running for 10 hours with no change in progress. I first tried running with 64G memory and then 128G memory with the same results. Do all the sequences in the database need to fit into memory for `clusthash` to work? Would I be better off running `linclust` with `-c 100`?. Thank you",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/442:65,redund,redundancy,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/442,1,['redund'],['redundancy']
Safety,[Question] Is easy-linclust a safe drop-in replacement for easy-cluster?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/696:30,safe,safe,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/696,1,['safe'],['safe']
Safety,add module to recover longest orf per read after fragment elimination during taxonomy assignment.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/832:14,recover,recover,14,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/832,1,['recover'],['recover']
Safety,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/567:4005,Detect,Detecting,4005,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567,4,['Detect'],['Detecting']
Safety,"arch type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: b4c1bc7cf89bc0bd577c5a9d3c1f7bedc1f74152; * Which MMseqs version: f5b588be54de35876eff90f3694b67e1d00856ef; * Server specifications: Intel(R) Xeon(R) W-2255 CPU, 64GB RAM; * Operating system and version: Ubuntu20 LTS. [nohupout.txt](https://github.com/soedinglab/MMseqs2/files/10728242/nohupout.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:5094,Avoid,Avoid,5094,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['Avoid'],['Avoid']
Safety,"at least x% of target length; --realign 	false 	compute more conservative, shorter alignments (scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs by selecting most diverse set of sequences, keeping at least this many seqs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; --rescore-mode 	0 	Rescore diagonal with: 0: Hamming distance, 1: local alignment (score only) or 2: local alignment; --min-length 	30 	minimum codon number in open reading frames ; --max-length 	32734 	maximum codon number in open reading frames ; --max-gaps 	2147483647	maximum number of codon",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:7982,redund,redundancy,7982,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['redund'],['redundancy']
Safety,"ay:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1516,safe,safe,1516,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['safe'],['safe']
Safety,"busercontent.com/32197833/170818420-30aeb0b4-2f69-462e-ab90-74001fc5a04b.png). ## Context. All the code is available at [matchy233/MMseqs-playground](https://github.com/matchy233/MMseqs-playground). It is (at least imitating) a MMseqs-derived project. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 34aa577a8f1c4269993fcd755526db4f742c5e86; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_E",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/567:3742,Detect,Detecting,3742,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567,4,['Detect'],['Detecting']
Safety,"c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1370,safe,safe-path,1370,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['safe'],['safe-path']
Safety,"computed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing true/false""mode both run, each need 2 hours.; ```python; host_url = 'http://127.0.0.1:8888'; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = 'env'; submission_endpoint = 'ticket/msa'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); ```; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Your Environment; ColabFold 1.5.2; ubuntu 20.04; 256GB RAM, that's why I cannot use vmtouch which need 768GB memory according to the readme.; 32 cores cpu; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145276/log-mmseqs-msa-server.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690:2427,timeout,timeout,2427,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690,2,['timeout'],['timeout']
Safety,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:11385,Detect,Detecting,11385,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,4,['Detect'],['Detecting']
Safety,"er, it always dies in the same way, although I tried changing memory settings and threads. This file is not bigger than the previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 22 --compressed 0 -v 3 . Compute score and coverage; Query database size: 77815083 type: Aminoacid; Target database size: 77815083 type: Aminoacid; Calculation of alignments; [Error: Alignment step died; Error: Search died. The command is the same as u",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/265:1344,Abort,Aborted,1344,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265,1,['Abort'],['Aborted']
Safety,"gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. align //app/database/sequences/sequences //app/database/sequences/sequences; B tmp/17369488595077942690/pref_0 //app/clustering/sequences/sequences_output --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq; -id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 21474; 83647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0; --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:2 --gap-ex; tend nucl:5,aa:0 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score and coverage; Query database size: 74 type: Aminoacid; Target database size: 74 type: Aminoacid; Calculation of alignments; terminate called after throwing an instance of 'Sls::error'; Aborted; Error: Alignment died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ad5837b3444728411e6c90f8c6ba9370f665c443; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): lastest Docker container; * Operating system and version: Windows 10 (Docker in git bash)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:5439,Abort,Aborted,5439,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,1,['Abort'],['Aborted']
Safety,"hed with `core dumped` error and reports `Error: createbintaxonomy failed`. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; mmseqs createdb ""uniprot_2024_03.fasta"" seqdb; ```; then; ```; mmseqs createtaxdb seqdb tmp ; ```. We attempted to vary `--tax-db-mode`, `--tax-mapping-mode`, and `--threads` parameters but observed the same behavior. Any help would be highly appreciated. We are able to reproduce this issue with a minimal database containing 1000 sequences. ## MMseqs Output (for bugs). ```; > mmseqs createtaxdb seqdb tmp ; createtaxdb seqdb tmp . MMseqs Version: 15.6f452; NCBI tax dump directory; Taxonomy mapping file ; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 48; Verbosity 3. Loading nodes file ... Done, got 2601214 nodes; Loading merged file ... Done, added 79743 merged nodes.; Loading names file ... Done; mmseqs: malloc.c:2379: sysmalloc: Assertion `(old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)' failed.; Aborted (core dumped); Error: createbintaxonomy failed; ```. ## Context. We are trying to create a custom taxonomy database for MSA, such that the resulting .a3m files contain taxonomy information. Is a taxonomy database already available for download for uniprot_2024_03 for similar releases?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:. Linux 64-bit, 256G memory; MMseqs Version: 15.6f452",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871:1275,Abort,Aborted,1275,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871,1,['Abort'],['Aborted']
Safety,idx.index creation is not 64-bit safe,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/868:33,safe,safe,33,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/868,1,['safe'],['safe']
Safety,"ion2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Reading symbols from mmseqs...; (gdb) r; Starting program: /home/kthurime/mmseqs/bin/mmseqs nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; nr_mmseqs/nr_db_mapping exists and will be overwritten; nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3 . MMseqs Version:	f5b588be54de35876eff90f3694b67e1d00856ef; Threads 	16; Verbosity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_trait",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/666:1459,Abort,Aborted,1459,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666,1,['Abort'],['Aborted']
Safety,"ior appear to function as intended. Perhaps something in the profile generation or implementation of profile against consensus searches affects the interpretation of the -c parameter? Investigating the alignment data of the attached MSA with mmseqs convertalis (attached below) shows that all hits indeed passes the -c 0.8 cutoff? As such perhaps my understanding of what constitutes alignment coverage is lacking and in that case how would one go about retricting the ""coverage"" to only query-target pairs with lengths within 80% of each other? I have tried --covmode 5 with similar results. . ## Expected Behavior. Restriction of clustered protein sequence lengths by imposing cover limits via the -c parameter in conjunction with any --covmode. ## Current Behavior. Clusters containing sequences of vastly different lengths far outside the range of the -c cutoff. . ## Context. My protocol can be summarized roughly as:. 1) Collapse paralogs and create cluster representatives in order to reduce database redundancy using;; mmseqs cluster initial-database clusters -s 5 -c 0.8 --min-seq-id 0.9 --cluster_mode 0 --max-iterations 3 --max-seqs 100 --covmode 0. 2) Iterate profile generation and searches of profiles against consensus sequences; mmseqs search cluster-representatives cluster-representatives representative-search -s 7 -c 0.8 --covmode 0 --maxseqs 300 -e 0.003; mmseqs result2profile cluster-representatives cluster-representatives representative-search profiles; mmseqs profile2consensus profiles initial-database consensus; mmseqs search profiles consensus profile-search -s 7 -c 0.8 --covmode 0 --maxseqs 300 -e 0.003; mmseqs clust --clustermode 0 consensus profile-search profile-clusters; mmseqs createsubdb profile-clusters initial-database new-cluster-representatives. Here new-cluster-representatives are used as input to round two of searches. . ## Alignment data ; query target fident qcov tcov; XP_645403.1 XP_640770.1 0.369 0.989 0.967; XP_635472.2 XP_640770.1 0.524 0.987 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:1972,redund,redundancy,1972,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['redund'],['redundancy']
Safety,"m 0s 29ms; Writing results to: /tmp//2989869989197200687/result; [=================================================================] 514.46K 49s 642ms. Time for merging to result: 0h 0m 0s 988ms; Time for processing: 0h 0m 58s 569ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 32 --compressed 0 -v 3 . [====terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; **Error: Convert Alignments died**. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 1f302134aa1c6c7c4e2b9da272fd26af33860780; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD EPYC 7742 64-Core Processor; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:26325,Abort,Aborted,26325,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['Abort'],['Aborted']
Safety,"mary as of Sat Nov 4 11:38:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; ----------------------------------------------------------------------------------------------------------------------. *** Download Progress Summary as of Sat Nov 4 11:39:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; ----------------------------------------------------------------------------------------------------------------------. *** Download Progress Summary as of Sat Nov 4 11:40:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; ----------------------------------------------------------------------------------------------------------------------. [#64439b 0B/0B CN:1 DL:0B]; 11/04 11:40:29 [ERROR] CUID#7 - Download aborted. URI=https://ftp.wwpdb.org/pub/pdb/derived_data/pdb_seqres.txt.gz; Exception: [AbstractCommand.cc:340] errorCode=2 Timeout.; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/772:2872,abort,aborted,2872,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/772,2,"['Timeout', 'abort']","['Timeout', 'aborted']"
Safety,"mino acid sequences with 100% coverage. I expect after going through the prefiltering step and alignment step I would see 100% identical hits. ; ## Current Behavior; Instead I found hits with of approximately 93% with reported mismatches of 22 with the same e-values as those with 100% identity. ; ## Steps to Reproduce (for bugs). Attached is the example sequence I found for this bug ([redundant.zip](https://github.com/user-attachments/files/16111570/redundant.zip)). Protein sequence is 303 AA in length with fake names given to the same sequence. I ran the following commands to create the alignment file where I found the issue. . ```; mmseqs createdb redundant.fasta sequenceDB; mmseqs kmermatcher sequenceDB prefilterDB; mmseqs align sequenceDB sequenceDB prefilterDB alignmentDB; mmseqs convertalis sequenceDB sequenceDB alignmentDB alignmentFile; ```. ## MMseqs Output (for bugs); Below is the TSV file of the resulting alignment. As you can see these identical sequences sometimes match at 100% others at 93% with some amount of mismatch and all the same bit-scores etc. ; ![Screenshot from 2024-07-05 10-47-23](https://github.com/soedinglab/MMseqs2/assets/44539035/4d073d41-99e7-4abc-b057-70974cde7ab0). ## Context. I am attempting to replicate some uniref clusters and found this irregularity and chose to isolate and replicate the issue by creating a completely redundant database. This may be a related to #688 . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 6f45232ac8daca14e354ae320a4359056ec524c2. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled from release 15-6f452. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; AMD 3950X with 128GB DDR4 RAM. * Operating system and version:; Ubuntu 22.04.4 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/861:1438,redund,redundant,1438,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/861,1,['redund'],['redundant']
Safety,"mmseqs fails to recover 100% ID hit on first iteration, fails with increased iterations",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/641:16,recover,recover,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/641,1,['recover'],['recover']
Safety,"mpirun is a kind of linux command.; But it has two kinds of very different version: OpenMPI , MPICH. A bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: (Open MPI) 1.10.2; No bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: 3.3a2 (After googled this number, I found this is from MPICH). The bug reports:; Corrupt memory, too many entries!. Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted. mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[38952,1],10]; Exit code: 1. Error: Prefilter died. So could you tell me which mpirun is the base of mmseqs ?; Or How to do with this bug?; Thank you very much in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/213:582,abort,aborted,582,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/213,2,"['abort', 'detect']","['aborted', 'detected']"
Safety,"my output mode 0. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. prefilter ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs.idx temp/9118733262229857306/tmp_hsp1/5064659849361391999/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --s; plit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7. Index version: 16; Generated by: 98c37f3c32b222632ada6011504380e91351276b; ScoreMatrix: VTML80.out; Query database size: 6282 type: Aminoacid; split was set to 5 but at least 8 are required. Please run with default paramerters; Target split mode. Searching through 5 splits; Estimated memory consumption: 138G; Process needs more than 113G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 213522593 type: Aminoacid; Process prefiltering step 1 of 5. k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 5); Query db start 1 to 6282; Target db start 1 to 42795128; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/278:5141,Avoid,Avoid,5141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278,1,['Avoid'],['Avoid']
Safety,"ownloading NR database using ```mmseqs databases NR NR tmp```; ## Current Behavior; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/668:1222,Abort,Aborted,1222,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668,1,['Abort'],['Aborted']
Safety,recover longest orf after fragment elimination,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/832:0,recover,recover,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/832,1,['recover'],['recover']
Safety,"rite-lookup 1`. 3. Run MMSeqs2 cluster module with --cluster-reassign: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use the clusters to create HMMs. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 12.113e3; * Which MMseqs version was used (Conda install): 12.113e3; * Server specifications (especially CPU support for AVX2/SSE ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/415:1397,detect,detected,1397,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415,1,['detect'],['detected']
Safety,s (x86)\mmseqs\\bin/svlogd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/sync: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/syslogd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tac: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tail: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tar: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tcpsvd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tee: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/telnet: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/telnetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/test: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tftp: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tftpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/time: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/timeout: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/top: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/touch: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/traceroute: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/true: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tty: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ttysize: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/udpsvd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uncompress: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/unexpand: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uniq: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/unix2dos: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/unlink: Perm,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:13326,timeout,timeout,13326,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['timeout'],['timeout']
Safety,"s on a node with 500gb memory. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. It will be difficult to send you my sequence file. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; createdb genecatalog/input.faa genecatalog/input_mmseqdb/db. MMseqs Version: 11.e1a1c. Converting sequences; [=================================================================================================== 1 Mio. sequences processed; =================================================================================================== 2 Mio. sequences processed; =================================================================================================== 3 Mio. sequences processed; ... =================================================================================================== 260 Mio. sequences processed; =================================================================================================== 261 Mio. sequences processed; =======================================================================================; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. slurm error:; `slurmstepd: error: Detected 1 oom-kill event(s) in step 33218922.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler.`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/315:1470,Detect,Detected,1470,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/315,1,['Detect'],['Detected']
Safety,"s the NR database, but it keeps SegFaulting on me. The job had 750G memory available, and as far as I can tell it doesn't seem to be overblowing that (the core dump is <400G). I ran createindex in the same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1070,safe,safe-path,1070,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['safe'],['safe-path']
Safety,"s, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file. This fasta file size <1gb but I first tried to run this process on a >80gb file on remote compute node and was concerned when I saw the job was using only a small part of the resources.; Not part of this issue but realted; also tried to do the same thing with a large protein file but I get invalid fasta entry errors (maybe because of the ""*"" marking STOPs left by the ORF predictor, but that wouldn't happen in the nucleic acid file example above). ## Your Environment; * Git commit used:; I tried on my personal machine and a compute node (PBS), similar behaviour in both. ; Personal machine MMseqs2 Version: 48a037a2e2cf5ea140c6c5de357b7147e5310b4d.; Server MMseqs2 Version: 2a8c5f00f820c5c9a577676707095ef17bcff04a.; * Which MMseqs version was used: Statically-compiled; * Server specifications:; Server: (2a8c5f00f820c5c9a577676707095ef17bcff04a); CPU: Intel(R) Xeon(R) Platinum 8168; Memory: 366 GB; Personal machine: (48a037a2e2cf5ea140c6c5de357b7147e5310b4d); CPU: Intel Core i7-8700 6-Core model: bits: 64 type: L2 cache: 12.0 MiB ; Memory: 15.33 GB; * Operating system and version:; Personal machine: Linux Mint 19.2 Tina Kernel: 4.15.0-72-generic x86_64; ; Server: Linux 3.10.0-693.el7.x86_64. Thanks for developing and maintaining this totally amazing tool !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261:2376,predict,predictor,2376,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261,1,['predict'],['predictor']
Safety,"s. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-un",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:13000,Abort,Aborted,13000,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['Abort'],['Aborted']
Safety,"s/nuc_mmseq_DB \; ${dbdir}/gtdb_54kDB data/04_taxgenes/taxresdb ${dbdir}/tmp/; ```. The taxonomy DB is made through the last release of GTDB without applying a cluster, as discussed in #244 . . The db is as follows: . ```; -rw-r--r-- 1 aauladell bio 54G 28 nov 11:05 gtdb_54kDB; -rw-r--r-- 1 aauladell bio 4 28 nov 11:07 gtdb_54kDB.dbtype; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_delnodes.dmp; -rw-r--r-- 1 aauladell bio 3,0G 28 nov 11:00 gtdb_54kDB_h; -rw-r--r-- 1 aauladell bio 4 28 nov 11:01 gtdb_54kDB_h.dbtype; -rw-r--r-- 1 aauladell bio 3,9G 28 nov 11:09 gtdb_54kDB_h.index; -rw-r--r-- 1 aauladell bio 4,3G 28 nov 11:08 gtdb_54kDB.index; -rw-r--r-- 1 aauladell bio 4,6G 28 nov 11:14 gtdb_54kDB.lookup; -rw-r--r-- 1 aauladell bio 2,7G 28 nov 15:43 gtdb_54kDB_mapping; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_merged.dmp; -rw----r-- 1 aauladell bio 1,8M 28 nov 15:43 gtdb_54kDB_names.dmp; -rw----r-- 1 aauladell bio 3,0M 28 nov 15:43 gtdb_54kDB_nodes.dmp; ```. ## Current Behavior. Instead, it raises an `out_of_range` error with a `terminate called recursively` after running for 20 hours. . ## MMseqs Output (for bugs). Raises the following error: ; ```; terminate called recursively; terminate called after throwing an instance of 'std::out_of_range/mnt/lustre/scratch/aauladell/databases/gtdb-r89_54k/tmp//14536420861195881021/taxonomy.sh: line 99: 34258 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```. The output log: ; [mmseqs_lca_log.txt](https://github.com/soedinglab/MMseqs2/files/3955181/mmseqs_lca_log.txt). ## Context; Taxonomic classification of a gene catalog with around 500000 seqs. ; ; ## Your Environment. MMseqs2 Version: 0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported, 36 threads and 400 Gb RAM.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256:1626,Abort,Aborted,1626,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256,1,['Abort'],['Aborted']
Safety,"scription [value range]; -a 	false 	add backtrace string (convert to alignments with mmseqs convertalis utility); --alignment-mode 	2 	How to compute the alignment: 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; -e 	0.001 	list matches below this E-value [0.0, inf] ; --min-seq-id 	0.000 	list matches above this sequence identity (for clustering) [0.0,1.0]; --seq-id-mode 	0 	0: alignment length 1: shorter, 2: longer sequence ; --alt-ali 	5 	Show up to this many alternative alignments ; -c 	0.000 	list matches above this fraction of aligned (covered) residues (see --cov-mode); --cov-mode 	0 	0: coverage of query and target, 1: coverage of target, 2: coverage of query 3: target seq. length needs be at least x% of query length, 4: query seq. length needs be at least x% of target length; --realign 	false 	compute more conservative, shorter alignments (scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:7221,abort,aborted,7221,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['abort'],['aborted']
Safety,"seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 1c7ad90e2a9a249cbe4858b5002dc052b3333475; * Which MMseqs version was used: AVX2 static; * Server specifications: 32GB RAM; * Operating system and version: Ubuntu Linux 16.04.3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:2191,Abort,Aborted,2191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['Abort'],['Aborted']
Safety,"sing Target split mode.; Needed memory (1380352223 byte) of total memory (486687909888 byte); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Index table: counting k-mers... Index table: Masked residues: 3509; Index table: fill... Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 455436; DB Size: 514732616 (byte); Avg Kmer Size: 0.00711619; Top 10 Kmers; 	GPGGTL		17; 	LGNATT		8; 	LSLGLS		6; 	GPGGTT		6; 	SGQQAI		5; 	ALGNGK		5; 	LLGPGK		5; 	LVLILL		5; 	LLSLLL		5; 	LILLSL		5; Min Kmer Size: 0; Empty list: 63557059. Write ENTRIES (7); Write ENTRIESOFFSETS (8); Write SEQINDEXDATASIZE (12); Write SEQINDEXSEQOFFSET (13); Write MASKEDSEQINDEXDATA (11); Write ENTRIESNUM (9); Write SEQCOUNT (10); Write META (1); KmerSize: 6; AlphabetSize: 21; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 0; Write SCOREMATRIXNAME (2); Write VERSION (0); Write DBRINDEX (5); ./dbs/tmp_kora//createindex.sh: line 46: 6458 Aborted (core dumped) ""$MMSEQS"" indexdb ""$INPUT"" ""$INPUT"" $INDEX_PAR; Error: indexdb died. *** Error in `/mmseqs_binaries/c97f09/mmseqs': double free or corruption (!prev): 0x0000000000ed34c0 ***; ======= Backtrace: =========; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x6e5d1)[0x7f40f5a595d1]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x73db6)[0x7f40f5a5edb6]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x74b03)[0x7f40f5a5fb03]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_ZN23PrefilteringIndexReader15createIndexFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8DBReaderIjESA_P10BaseMatrixibbiiii+0x10be)[0x49147e]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_Z7indexdbiPPKcRK7Command+0x223)[0x4c1f33]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_Z10runCommandRK7CommandiPPKc+0x30)[0x442470]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(main+0x62)[0x4386c2]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(__libc_start_main+0xf5)[0x7f40f5a0c075]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:3413,Abort,Aborted,3413,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,1,['Abort'],['Aborted']
Safety,the default setting for threads is not safe,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/539:39,safe,safe,39,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/539,1,['safe'],['safe']
Safety,"to also post the complete output of MMseqs. You can use gist.github.com for large output. Reading symbols from mmseqs...; (gdb) r; Starting program: /home/kthurime/mmseqs/bin/mmseqs nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; nr_mmseqs/nr_db_mapping exists and will be overwritten; nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3 . MMseqs Version:	f5b588be54de35876eff90f3694b67e1d00856ef; Threads 	16; Verbosity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/666:1571,abort,abort,1571,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666,1,['abort'],['abort']
Safety,"ult.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1; Threads 	30; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using split mode; Index table: counting k-mers...; ......................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; ............",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1606,safe,safe,1606,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['safe'],['safe']
Safety,"urnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures...; Compute score only.; Using 32 threads.; Calculation of Smith-Waterman alignments.; Time for merging files: 0 h 0 m 0 s. All sequences processed. 6287 alignments calculated.; 6203 sequence pairs passed the thresholds (0.986639 of overall calculated).; 25.2154 hits per query sequence.; Time for alignments calculation: 0 h 0 m 1s; - checkReturnCode Alignment died; - [ 0 -ne 0 ]; - [ 4 -gt 4 ]; - NEXTINPUT=/home/zcx/Program/MMseqs/2.0/test/tmp/input_step4; - [ 4 -lt 4 ]; - let SENS=SENS+SENS_STEP_SIZE; /home/zcx/Program/MMseqs/2.0/bin/blastp.sh: 57: /home/zcx/Program/MMseqs/2.0/bin/blastp.sh: let: not found. I am running MMseqs2 on Ubuntu 14.04 (trusty) x86-64. On Ubuntu and Debian, the default shell /bi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:5253,Detect,Detect,5253,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['Detect'],['Detect']
Safety,"when I run the mmseqs2 to search sequence, I encounter a an error at blastp.sh:. $ mmseqs createdb queryDB.fasta queryDB; $ mmseqs createdb targetDB.fasta targetDB; $ mmseqs createindex targetDB; $ mkdir -p tmp/; $ mmseqs search queryDB targetDB resultDB tmp --use-index. Program call:; queryDB targetDB resultDB tmp --use-index . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilte",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:513,Detect,Detect,513,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['Detect'],['Detect']
Safety,"xonomy using GTDB (but not NCBI with the same query input), described below. Using a conda install of version 15.6f452. . Thanks for any help!. ## Expected Behavior; Completing without error. ## Current Behavior; Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Steps to Reproduce (for bugs). **Install**. ```bash; mamba create -y -n mmseqs2 -c conda-forge -c bioconda -c defaults mmseqs2==15.6f452; conda activate mmseqs2; ```. **DB setup**; ```bash; mmseqs databases GTDB mmseqs2-GTDB-db tmp; ```. **Making small test data**; ```bash; wget -O e-coli.fasta.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/005/845/GCA_000005845.2_ASM584v2/GCA_000005845.2_ASM584v2_genomic.fna.gz. gunzip e-coli.fasta.gz. grep -c "">"" e-coli.fasta; # there is only one contig, so safe to just pull some lines. printf "">contig_1\n"" > contigs.fasta; sed -n '100,1200p' e-coli.fasta >> contigs.fasta; printf "">contig_2\n"" >> contigs.fasta; sed -n '20000,20600p' e-coli.fasta >> contigs.fasta; printf "">contig_3\n"" >> contigs.fasta; sed -n '26000,26200p' e-coli.fasta >> contigs.fasta; # that's 3 contigs: 88,000 bps; 48,000 bps; and 16,000 bps; ```. **Running the program**; ```bash; mmseqs easy-taxonomy contigs.fasta mmseqs2-GTDB-db GTDB-tax-result tax-tmp \; --threads 20 --tax-lineage 1 --compressed 1 --remove-tmp-files 0; ```. ## MMseqs Output (for bugs). Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Context; Trying to get taxonomy output via GTDB with lineage info added. Using the NCBI database completes successfully on the s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/806:1081,safe,safe,1081,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806,1,['safe'],['safe']
Security,"	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.95; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.99; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:1898,hash,hash,1898,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['hash'],['hash']
Security,"	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:4589,hash,hash-shift,4589,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['hash'],['hash-shift']
Security," 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.75; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	62G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; Error: Pre-clustering step died; ```; I also have an error log : . ```; + mmseqs linclust /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB_clu /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp --min-seq-id 0.75 --threads 20 -v 3 --force-reuse 1 --split-memory-limit 62G; /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/linclust.sh: line 37: 1000278 Killed ""$MMSEQS"" clust ""$INPUT"" ""${TMP_PATH}/pref_rescore1"" ""${TMP_PATH}/pre_clust"" ${CLUSTER_PAR}. real	8m30.284s; user	12m57.207s; sys	2m3.531s; slurmstepd: error: Detected 1 oom_kill event in StepId=1504095.batch. Some of the step tasks have been OOM Killed.; ```. I see that it's a memory issue but I don't know what to do to solve this.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:9227,hash,hash,9227,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['hash'],['hash']
Security," 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.75; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	92G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:2700,hash,hash,2700,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['hash'],['hash']
Security," --remove-tmp-files 1. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time for processing: 4h 41m 10s 259ms; rescorediagonal /export/scratch/SRC-50/8871099322051866948/input /export/scra",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:4074,hash,hash-shift,4074,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['hash'],['hash-shift']
Security," --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:5146,hash,hash-shift,5146,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['hash'],['hash-shift']
Security," --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Database size: 51992 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 51.99K 0s 346ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 62ms; Sort by rep. sequence 0h 0m 0s 19ms; Time for fill: 0h 0m 0s 27ms; Time for merging to pref: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 567ms; rescorediagonal shrimpDB shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref tmp97/17949317426677965256/linclust/6279588666755106708/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 51.99K 0s 101ms; Time for merging",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:5091,hash,hash-shift,5091,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['hash'],['hash-shift']
Security," 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; --------------------------------------------------------------------------; mpirun was unable to launch the specified application as it could not find an executable:; Executable: mmseqs; Node: slave; while attempting to start process rank 1.; --------------------------------------------------------------------------; 2 total processes failed to start; Error: Alignment step died; Error: linclust died; ```. I performed identical installations of mmseqs on both machines. If I just run `mmseqs cluster /mnt/DB mnt/clu /mnt/tmp` on either machine, then it is able to work, but I would like to get the MPI functionality up if possible! Thank you. . ## Your Environment; I am working in Debian 8 (Jesse),",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:3285,hash,hash,3285,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['hash'],['hash']
Security," 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms; rescorediagonal tmpDB tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref tmp/12397138995521121878/linclust/639052995728955397/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:4463,hash,hash-shift,4463,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['hash'],['hash-shift']
Security," Environment. I am running this on an AWS EC2 instance of type g4dn (128GB RAM). Here you go:. $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) Platinum 8259CL CPU @ 2.50GHz; CPU family: 6; Model: 85; Thread(s) per core: 2; Core(s) per socket: 16; Socket(s): 1; Stepping: 7; BogoMIPS: 4999.98; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht; syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid ap; erfmperf tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt; tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch pti fsgsbase; tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx avx512f avx512dq rdseed adx smap clflushopt clwb avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves ida arat pku ospke avx512_vnni; Virtualization features: ; Hypervisor vendor: KVM; Virtualization type: full; Caches (sum of all): ; L1d: 512 KiB (16 instances); L1i: 512 KiB (16 instances); L2: 16 MiB (16 instances); L3: 35.8 MiB (1 instance); NUMA: ; NUMA node(s): 1; NUMA node0 CPU(s): 0-31; Vulnerabilities: ; Gather data sampling: Unknown: Dependent on hypervisor status; Itlb multihit: KVM: Mitigation: VMX unsupported; L1tf: Mitigation; PTE Inversion; Mds: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Meltdown: Mitigation; PTI; Mmio stale data: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Retbleed: Vulnerable; Spec rstack overflow: Not affected; Spec store bypass: Vulnerable; Spectre v1: Mitigation; usercopy/swapgs barriers and __user pointer sanitization; Spectre v2: Mitigation; Retpolines, STIBP disabled, RSB filling, PBRSB-eIBRS Not affected; Srbds: Not affected; Tsx async abort: Not affected",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822:3810,sanitiz,sanitization,3810,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822,1,['sanitiz'],['sanitization']
Security," Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:2487,hash,hash-shift,2487,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['hash'],['hash-shift']
Security," Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (153016352 byte) of total memory (1886452531 byte); Process file into 1 parts; Generate k-mers list 0; ............; Time for fill: 0h 0m 1s 398ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 1s 345ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Program call:; rescorediagonal tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 0.001 -c 0.9 --cov-mode 1 --min-seq-id 0.9 --seq-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:6806,hash,hash,6806,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['hash'],['hash']
Security," and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.31B 2h 34m 42s 85ms; Sort kmer 0h 0m 52s 653ms; Sort by rep. sequence 0h 0m 31s 645ms; Generate k-mers list for 2 split; [=================================================================] 1.31B 2h 36m 22s 543ms; Sort kmer 0h 0m 44s 690ms; Sort by rep. sequence 0h 0m 26s 121ms; Merge splits ... Time for fill: 1h 31m 44s 960ms; Time for merging to pref: 0h 0m 0s 6ms; Time for processing: 10h 13m 54s 576ms; rescorediagonal JGI JGI tmp/14756877054557405347/pref tmp/1475687705455740534",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:2973,hash,hash-shift,2973,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['hash'],['hash-shift']
Security," depth 	1000; Similarity type 	2; Threads 	56; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage mode 	1; Max sequence length 	10000; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Alphabet size 	nucl:5,aa:21; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Mask residues 	1; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort.faa All_cohort_tmp//9948387321092861199/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0. Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 4m 46s 360ms; Create directory All_cohort_tmp//9948387321092861199/clu_tmp; linclust All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu All_cohort_tmp//9948387321092861199/clu_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:2727,hash,hash,2727,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['hash'],['hash']
Security," only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:5003,hash,hash-shift,5003,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['hash'],['hash-shift']
Security," path; Threads 	16; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb /Users/s/Documents/protein/true_plus300_proteins-13-strains_shortname-group.fa /Volumes/s/tmp/3581369344000996149/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [1718] 0s 24ms; Time for merging to input_h: 0h 0m 0s 10ms; Time for merging to input: 0h 0m 0s 10ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 81ms; Create directory /Volumes/s/tmp/3581369344000996149/clu_tmp; cluster /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu /Volumes/s/tmp/3581369344000996149/clu_tmp --max-seqs 20 -c 0.8 --cov-mode 1 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --min-seq-id 0.5 --remove-tmp-files 1. Set cluster sensitivity to -s 3.000000; Set cluster mode GREEDY MEM; Set c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:2366,hash,hash,2366,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['hash'],['hash']
Security,"## Context; I need to create MSAs for a very large set of protein sequences: about 25 million. I was planning to use the ColabFold workflow. I figured that this would be achievable given the nonlinear scaling to large query sets. That being said, extremely remote alignments are not necessary for my use case in the same way they they are helpful for structure prediction. I am looking for relative small MSAs (no more than 256 sequences) of diverse sets that do not have small fragments eg. high coverage. . I had intended to run some scaling tests over query size as well as parameters (first thoughts being sensitivity, max_seqs, align eval, max_except), as well as not using the metagenomic database. I figured I would first **chat with experts and save some compute carbon** before doing this. Is there any params I am missing? Any that would be good to change from default and forget? Am I totally off in thinking my job is accessible with a 104 thread compute note and a week of runtime?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897:930,access,accessible,930,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897,1,['access'],['accessible']
Security,"## Description; bugfix for a segmentation fault in `mmseqs prefilter`, which occured in the following circumstances:. - `seqLen` of sequences larger than `32768` are overridden to `1` to lower their priority in diagonal score calculation; - `min(seqs[i].seqLen - minDistToDiagonal, minSeqLen);` returns an underflowed value for low `seqLen`, which holds for the above case (`UngappedAlignment L:279`). => this invalid `seqLength` value causes `unrolledDiagonalScoring(...)` to access memory out of bounds, causing a seg fault. ## Changes; - added a safety check to prevent `seqLength` having invalid(underflowed) values; - `seqLen` larger than `32768` are overridden to `0` instead of `1`, in order to completely skip the processing inside `unrolledDiagonalScoring(...)`. ## Other Details; - error encountered when running mmseqs easy-cluster on uniparc DB; - stack trace:; ```; #0 UngappedAlignment::unrolledDiagonalScoring<21u> (...) ; at MMseqs2/src/prefiltering/UngappedAlignment.cpp:58; #1 UngappedAlignment::scoreDiagonalAndUpdateHits (...) ; at MMseqs2/src/prefiltering/UngappedAlignment.cpp:281; #2 UngappedAlignment::computeScores (...) ; at /MMseqs2/src/prefiltering/UngappedAlignment.cpp:349; #3 UngappedAlignment::align (...); at /MMseqs2/src/prefiltering/UngappedAlignment.cpp:26; #4 QueryMatcher::match (...); at /MMseqs2/src/prefiltering/QueryMatcher.cpp:295; #5 QueryMatcher::matchQuery (...); at /MMseqs2/src/prefiltering/QueryMatcher.cpp:103; #6 Prefiltering::runSplit (...); at /MMseqs2/src/prefiltering/Prefiltering.cpp:843; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/872:477,access,access,477,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/872,1,['access'],['access']
Security,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/541:207,secur,security,207,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541,10,['secur'],"['secure', 'securely', 'security']"
Security,"## Expected Behavior. I'm trying to concatenate 2 mmseqs sequence databases together via `mmseqs concatdbs`, but I get the error:. ```; maxSetId in db1.lookup is 1 and in db1.source is 2; ```. ## Context. I created both sequence databases via `mmseqs createdb`. None of the sequences overlap between the 2 databases. Note that for DB1, I did copy (all/most) of the associated files from one location to another; maybe I didn't copy them all over, but how would I know??). . Running `mmseqs concatdbs` on the `*_h` files for these databases works without an issue. I just get the problem when trying to run `mmseqs concatdbs` on the main database files. . ## Your Environment. OS: Ubuntu 18.04. conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_3 conda-forge; libstdcxx-ng 9.2.0 hdf63c60_2 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; llvm-openmp 8.0.1 hc9558a2_0 conda-forge; mmseqs2 11.e1a1c h2d02072_0 bioconda; ncurses 6.2 he1b5a44_1 conda-forge; numpy 1.19.0 py38h8854b6b_0 conda-forge; openmp 8.0.1 0 conda-forge; openssl 1.1.1g h516909a_0 conda-forge; perl 5.26.2 h516909a_1006 conda-forge; perl-constant 1.33 pl526_1 bioconda; perl-exporter 5.72 pl526_1 bioconda; perl-file-util 4.161950 pl526_3 bioconda; perl-lib 0.63 pl526_1 bioconda; pigz 2.3.4 hed695b0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/334:860,certificate,certificates,860,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/334,1,['certificate'],['certificates']
Security,"## Expected Behavior. The E-values should be robust to changes in the number of splits. ## Current Behavior. Splitting the database during search (`--split-mode 0`) will result in varying E-values, depending on the number of splits. ## Steps to Reproduce (for bugs). Run `mmseqs search` with `--split-mode 0` and varying values for `--split`. ## MMseqs Output (for bugs). Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Suggestion. One possible way to fix this would be to set a constant database size internally when using `--split-mode 0`. It could be useful to have this parameter exposed to the user, similar to `-Z` in HMMER:. ```; -Z <x> Assert that the total number of targets in your searches is; <x>, for the purposes of per-sequence E-value calculations,; rather than the actual number of targets seen.; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/653:646,expose,exposed,646,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/653,1,['expose'],['exposed']
Security,"## Expected Behavior. `asan` and `msan` should not detect issues. ## Current Behavior. We ran address sanitizer and memory sanitizer on mmseqs2 and they flagged a few issues. #### asan. 1. ODR violation over `binary_name`.; 2. Possible signed overflow in random number generation using unsigned integer types.; 3. '[initialisation order fiasco](https://github.com/google/sanitizers/wiki/AddressSanitizerInitializationOrderFiasco)'. #### msan; 4. String not terminated. ## Fixes. We fixed these issues, respectively, by:. 1. Changing [this line](https://github.com/soedinglab/MMseqs2/blob/master/src/mmseqs.cpp#L5) to:; ```; __attribute__ ((weak)) const char* binary_name = ""mmseqs"";; ```. 2. Applying this patch to [lib/alp/njn_random.cpp](https://github.com/soedinglab/MMseqs2/blob/master/lib/alp/njn_random.cpp):. ```; --- a/lib/alp/njn_random.cpp; +++ b/lib/alp/njn_random.cpp; @@ -50,19 +50,19 @@ namespace {; ; 	const size_t r_off = 12;; ; -	long	state [33] = {; -	static_cast <long> (0xd53f1852), static_cast <long> (0xdfc78b83), static_cast <long> (0x4f256096), static_cast <long> (0xe643df7),; -	static_cast <long> (0x82c359bf), static_cast <long> (0xc7794dfa), static_cast <long> (0xd5e9ffaa), static_cast <long> (0x2c8cb64a),; -	static_cast <long> (0x2f07b334), static_cast <long> (0xad5a7eb5), static_cast <long> (0x96dc0cde), static_cast <long> (0x6fc24589),; -	static_cast <long> (0xa5853646), static_cast <long> (0xe71576e2), static_cast <long> (0xdae30df), static_cast <long> (0xb09ce711),; -	static_cast <long> (0x5e56ef87), static_cast <long> (0x4b4b0082), static_cast <long> (0x6f4f340e), static_cast <long> (0xc5bb17e8),; -	static_cast <long> (0xd788d765), static_cast <long> (0x67498087), static_cast <long> (0x9d7aba26), static_cast <long> (0x261351d4),; -	static_cast <long> (0x411ee7ea), static_cast <long> (0x393a263), static_cast <long> (0x2c5a5835), static_cast <long> (0xc115fcd8),; -	static_cast <long> (0x25e9132c), static_cast <long> (0xd0c6e906), static_cast <long> (0xc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/661:102,sanitiz,sanitizer,102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661,3,['sanitiz'],"['sanitizer', 'sanitizers']"
Security,"## Expected Behavior. `mmseqs convertalis --format-mode 0 --format-output query,target,evalue,pident` writes out table of `mmseq search` hits in blast M8 format, but `pident` seems to be written as a fraction instead of a percent. This affects downstream processing of the table, especially when trying to conduct the same processing to this table and one generated by blast or diamond (`pident` is then written as a percent). . ## Steps to Reproduce (for bugs). ```; mmseqs search; mmseqs convertalis --format-mode 0 --format-output query,target,evalue,pident; ```. ## Your Environment. Ubuntu 18.04.4. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; biolib 0.1.6 py_0 bioconda; boost-cpp 1.70.0 h7b93d67_3 conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py37hc8dfbb8_0 conda-forge; comparem 0.1.1 py_0 bioconda; curl 7.69.1 h33f0ec9_0 conda-forge; cycler 0.10.0 py_2 conda-forge; diamond 0.9.36 h56fc30b_0 bioconda; fqtools 2.0 hc0aa232_5 bioconda; freetype 2.10.2 he06d7ca_0 conda-forge; future 0.18.2 py37hc8dfbb8_1 conda-forge; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; hhsuite 3.2.0 py37pl526h3340039_1 bioconda; htslib 1.9 h4da6232_3 bioconda; icu 67.1 he1b5a44_0 conda-forge; kiwisolver 1.2.0 py37h99015e2_0 conda-forge; krb5 1.17.1 h2fd8d38_0 conda-forge; ld_impl_linux-64 2.34 h53a641e_5 conda-forge; libblas 3.8.0 14_openblas conda-forge; libcblas 3.8.0 14_openblas conda-forge; libcurl 7.69.1 hf7181ac_0 conda-forge; libdeflate 1.6 h516909a_0 conda-forge; libedit 3.1.20191231 h46ee950_0 conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 14_openblas conda-forge; libopenblas 0.3.7 h5ec1e0e_6 conda-forge; libpng 1.6.37 hed695b0_1 conda-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/337:827,certificate,certificates,827,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/337,1,['certificate'],['certificates']
Security,## Expected Behavior; Accession-number-sequence associations should be the same between metaclust and colabfold_envdb. ## Current Behavior. The metaclust id seems to be correct. colabfold_envdb seems to have scrambled the name-sequence associations. Particularly for the JGI sequence IDs (the Uniprot IDs that I checked seemed to be ok). ## Steps to Reproduce (for bugs); input:; ``` bash; wget https://metaclust.mmseqs.com/2018_06/metaclust_nr.fasta.gz; gunzip metaclust_nr.fasta.gz; grep -A1 GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1; ```. output:; ```; >GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1 # 1 # 249 # 1 # ID=3271246_1;partial=11;start_type=Edge;rbs_motif=None;rbs_spacer=None;gc_cont=0.582; HIGGTHYQNHHDFDPYLARVQQGELPVYRALTPSADERLIREFILQLKLGQVSRAYFQKKFGIELCERFRAPFQTLADWGLLA; ```. input:; ``` ; wget http://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar xvf colabfold_envdb_202108.tar.gz; grep GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1 colabfold_envdb_202108_h.tsv; ```. output:; ```; 117269648 GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1; ```. input:; ```; grep 117269648 colabfold_envdb_202108_seq.tsv; ```. output:; ```; 117269648 MAYTLPELSYDYAALEPHVDAETMRIHHDLHHAGYMNKLNAALEKYPEFFEKGIEDLMRNLDKIPEDVRGGVKNNGGGYFNHNLFWESMSPDGGAPEGELKDAIEKSFGSFDEMKEKFSNAAATQFGSGWAWLYKESDGSLGITNTSNQDIPFAEGRTLLMNLDVWEHSYYLKYQNKRPDYIENWWNVLNWKGVAEKFKS; ```. I then go to; ```; https://genome.jgi.doe.gov/portal/pages/dynamicOrganismDownload.jsf?organism=GraSoiStandDraft_25; ```; and download the scaffolds for that sample. I then make a blast database and blast the two sequences; ```; >metaclust; HIGGTHYQNHHDFDPYLARVQQGELPVYRALTPSADERLIREFILQLKLGQVSRAYFQKKFGIELCERFRAPFQTLADWGLLA. >colabfold_envdb_202108; MAYTLPELSYDYAALEPHVDAETMRIHHDLHHAGYMNKLNAALEKYPEFFEKGIEDLMRNLDKIPEDVRGGVKNNGGGYFNHNLFWESMSPDGGAPEGELKDAIEKSFGSFDEMKEKFSNAAATQFGSGWAWLYKESDGSLGITNTSNQDIPFAEGRTLLMNLDVWEHSYYLKYQNKRPDYIENWWNVLNWKGVAEK,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/560:22,Access,Accession-number-sequence,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/560,1,['Access'],['Accession-number-sequence']
Security,"## Expected Behavior; Attempting to run to convert annotation mapping file; mmseqs convertkb uniprot_sprot_trembl.dat.gz targetDB.mapping --kb-columns OX --mapping-file targetDB.lookup. ## Current Behavior; Can not find accession in mapping:. Could not find accession Q6P378 in mapping!; Could not find accession P34974 in mapping!; Could not find accession Q9Z1S9 in mapping!. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1) Downloaded all viral proteins from UniProtKB; 2) Created target DB with UniProtKB entries. mmseqs createdb target.fasta targetDB. 3) Confirmed targetBD.lookup format; 0	H8YHR3; 1	A0A0E3HJU1; 2	A0A0M3M679; 3	A0A142IHD3; 4	A0A1D8Q0G9; 5	I3XPF8; 6	Q66N09; 7	D5XLT2; 8	D9IRE9; 9	Q50BU6. 4) Downloaded and concatenated uniprot_sprot_trembl.dat.gz. 5) Ran:; mmseqs convertkb uniprot_sprot_trembl.dat.gz targetDB.mapping --kb-columns OX --mapping-file targetDB.lookup. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/132:220,access,accession,220,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/132,4,['access'],['accession']
Security,"## Expected Behavior; Completion to provide output file. ## Current Behavior; It dies with the following message:; `Target database size: 460882 type: Nucleotide; tmp/288148333766582684/search_tmp/3592684985880184946/blastp.sh: line 99: 141854 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: Search died`. ## Steps to Reproduce (for bugs); The command I used was:. `mmseqs easy-search --search-type 3 two_test.fa ../../../reference.fna two_test_out tmp`. where `two_test.fa` is a file with two DNA sequences, and reference.fna is a ~4G file with many DNA sequences. . ## MMseqs Output (for bugs); Here's [the gist](https://gist.github.com/sodiumnitrate/5bf79ff79a6ccea91bf32831d9db0ca0) for the full output. ## Context; Trying to search for two DNA sequences in `two_test.fa` within a large reference file `reference.fna`. ## Your Environment; I pulled the latest version (`3e436173321a2d0365a08bfb3b281108ed9ad414`) from the github repo and compiled it myself. Using `CMake v3.24.3` and `GCC v12.2.0`. Running on a node with 32 CPUs, and 5G memory per CPU (160G total). Interestingly, this command worked twice before it stopped working. Tried again by removing the `tmp` folder, but that did not make a difference. I can verify read access to both fasta files, as well as write access to the directory I'm running the command in. What could be the issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/718:1346,access,access,1346,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/718,2,['access'],['access']
Security,"## Expected Behavior; Go to uniclust website (https://uniclust.mmseqs.com/) and click ""Download"" to download uniclust database from ""http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/"". ## Current Behavior; The website http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/ complaint:; Access forbidden!; You don't have permission to access the requested directory. There is either no index document or the directory is read-protected.; If you think this is a server error, please contact the webmaster.; Error 403; wwwuser.gwdg.de. ## Steps to Reproduce (for bugs); http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/32:298,Access,Access,298,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/32,2,"['Access', 'access']","['Access', 'access']"
Security,"## Expected Behavior; I am trying to run mmseqs cluster with the MPI runner option across two nodes (master, slave), but I am unable achieve this effect. I have configured passwordless ssh from master to slave through an ssh-key transfer. SSH can be accomplished through `ssh slave`. Moreover, there is a common NFS mounted to both nodes.; ; ## Steps to Reproduce (for bugs); First, I cd into the NFS directory (`'/mnt'`), then create the DB:. `mmseqs createdb /mnt/QUERY.fasta /mnt/DB`. which runs as expected. Then I run . `RUNNER=""mpirun -np 4 --host master,slave"" mmseqs cluster /mnt/DB /mnt/clu /mnt/tmp`. where /mnt is a NFS that is mounted to both the master and slave nodes. . ## MMseqs Output (for bugs); ```; Program call:; /mnt/DB /mnt/clu /mnt/tmp . MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 20; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0.8; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 2; Verbosity 3; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Single step clustering true; Cascaded clustering steps 3; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:172,password,passwordless,172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['password'],['passwordless']
Security,"## Expected Behavior; I'm running `mmseqs createdb` on a large fasta file. I have checked that every entry is ""valid"" (only valid AA characters, can be read by biopython, there are no spaces between `>` and the accession ids). I expect successful db creation or graceful error handling. . Is there a way to ignore invalid fasta entries in db creation? . ## Current Behavior; Fails with error: ""Fasta entry <entry> is invalid"". ## Steps to Reproduce (for bugs); `mmseqs createdb` . ## MMseqs Output (for bugs); ```; Fasta entry <entry> is invalid; ```. ## Your Environment; MMseqs2 Version: 13.45111; installed with conda",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763:211,access,accession,211,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763,1,['access'],['accession']
Security,"## Expected Behavior; Set RAM to 1.4T as specified by `--split-memory-limit 1400G`; ## Current Behavior; MMseqs set the limit to only 1T RAM; ## Steps to Reproduce (for bugs); I set `--split-memory-limit` to 1400G using the following command; ```; mmseqs easy-linclust {uniprot_sprot,uniprot_trembl,metaclust_nr,MERC,SRC}.fasta \; linclust_results/universedb-100 \; tmp/universedb-100 \; -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 1 \; --split-memory-limit 1400G; ```. ## MMseqs Output (for bugs); In the parameter header printed by MMseqs at the begging, the `Split memory limit` shown as 1T.; ```; MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 1; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 1T # <================ Shown here; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/328:1574,hash,hash,1574,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/328,1,['hash'],['hash']
Security,"## Expected Behavior; The Resfinder database is downloaded and an mmseqs2 index is created. ## Current Behavior; Fails at the download extraction step. ## Steps to Reproduce (for bugs); mmseqs databases Resfinder db/rf tmp. ## MMseqs Output (for bugs); databases Resfinder db/rf tmp . MMseqs Version: 	13.45111; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. --2021-10-08 14:50:24-- https://api.bitbucket.org/2.0/repositories/genomicepidemiology/resfinder_db/commit/master?fields=hash,date; Resolving api.bitbucket.org (api.bitbucket.org)... 18.205.93.8, 18.205.93.6, 18.205.93.7, ...; Connecting to api.bitbucket.org (api.bitbucket.org)|18.205.93.8|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 89 [application/json]; Saving to: 'tmp/9391455786971071082/version'. tmp/9391455786971071082/version 100%[=================================================================================================>] 89 --.-KB/s in 0s . 2021-10-08 14:50:24 (13.7 MB/s) - 'tmp/9391455786971071082/version' saved [89/89]. --2021-10-08 14:50:24-- https://bitbucket.org/genomicepidemiology/resfinder_db/get/master.tar.gz; Resolving bitbucket.org (bitbucket.org)... 104.192.141.1, 2406:da00:ff00::22c3:9b0a, 2406:da00:ff00::34cc:ea4a, ...; Connecting to bitbucket.org (bitbucket.org)|104.192.141.1|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 457328 (447K) [application/x-tar-gz]; Saving to: 'tmp/9391455786971071082/master.tar.gz'. tmp/9391455786971071082/master.tar.gz 100%[=================================================================================================>] 446.61K --.-KB/s in 0.07s . 2021-10-08 14:50:25 (5.88 MB/s) - 'tmp/9391455786971071082/master.tar.gz' saved [457328/457328]. tar: *.fsa: not found in archive; createdb tmp/9391455786971071082/*.fsa db/rf --compressed 0 -v 3 . Input tmp/9391455786971071082/*.fsa does not exist; Error: createdb died. ## Context. ## Your E",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/494:543,hash,hash,543,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/494,1,['hash'],['hash']
Security,"## Expected Behavior; clusthash uses all threads and result2flat produces a complete fasta file (not ending in %) ; ## Current Behavior; clusthash seems to use only 1 of all given threads, and eventually result2flat breaks ""segmentation fault"" ; ## Steps to Reproduce (for bugs); Ran from the terminal in the same directory as a contigs fasta file (DNA) (named ""cated_sk100.fna""):; THREADS=10; mkdir resultsDB scafDB ; mmseqs createdb cated_sk100.fna scafDB/cated_sk100; mmseqs clusthash scafDB/cated_sk100 resultsDB/resultDB --min-seq-id 0.99 --threads $THREADS; mmseqs clust scafDB/cated_sk100 resultsDB/resultDB clusterDB --threads $THREADS; mmseqs result2repseq scafDB/cated_sk100 clusterDB DB_clu_rep; mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header. When ""Compute 1 unique hashes."" is printed, there are 10 resultsDB files and 10 resultDB.index files, however, only one (resultDB.index.7) is getting larger with time (and is > 0 in size). Meanwhile only one thread seems to be utilized (around 8% of the total 10 threads given).; When the clusthash finishes there is one resultsDB.index file, and 10 resultsDB files, 8 with zero size, and resultsDB.index7 and resultsDB.index both with the same size). After this, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261:835,hash,hashes,835,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261,1,['hash'],['hashes']
Security,"## Expected Behavior; easy-cluster should finish execution without errors. ## Current Behavior; mmseqs easy-cluster errors and crashes with:. Error: Prefilter step died; Error: Search died. ## Steps to Reproduce (for bugs). a) Get the input sequences which here I have split into 3 files to fit into Github's upload limits:. [my_seqs.1of3.fasta.gz](https://github.com/soedinglab/MMseqs2/files/14608041/my_seqs.1of3.fasta.gz); [my_seqs.2of3.fasta.gz](https://github.com/soedinglab/MMseqs2/files/14608046/my_seqs.2of3.fasta.gz); [my_seqs.3of3.fasta.gz](https://github.com/soedinglab/MMseqs2/files/14608047/my_seqs.3of3.fasta.gz). b) Consolidate the 3 chunks:. zcat my_seqs.*.fasta.gz > /tmp/my_seqs.fasta. c) Execute and expose the bug:. /opt/mmseqs/bin/mmseqs easy-cluster \; /tmp/my_seqs.fasta /tmp/my_seqs/result /tmp/my_seqs/tmp \; --dbtype 2 --threads 8 --local-tmp /tmp \; --cluster-reassign -s 7.5 --cov-mode 0 -c 0.98 --cluster-mode 2 --min-seq-id 0.99 -v 1. and the bug is shown below. ## MMseqs Output (for bugs). /tmp/my_seqs/tmp/5280277461515018798/clu_tmp/18196956704942050314/nucleotide_clustering.sh: line 48: 4723 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died. ## Context. In my hands, this bug is exposed only when the number of nucleotide sequences is in the order of millions. For small sets (thousands) the execution completes uneventfully. I have tried the precompiled AVX2 version, the SSE4.1 version, I have tried my own compilation of the latest release (15-6f452, Oct 31 2023) and also the latest github version (f6c9880) and other variations. All attempts led to the exact same bug. I have tried also with other three input datasets. All four crash in the same way. All four are in the order of 3 to 4million nucleotide sequences. When I subset the sequences to about 200K sequences, easy-cluster runs to completion. ## Your Environment. I am running this on a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822:719,expose,expose,719,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822,1,['expose'],['expose']
Security,"## Suggestion of a feature. It would be extremely useful if mmseqs have native python bindings. Results from the search could be returned as pandas Dataframe (which is standard python tabular format). It would simplify the usage of mmseqs2 as a building block for bioinformatics aplications.; Such bindings could be implemented using pybind (https://github.com/pybind/pybind11). Currently we are interested in this feature as a [whole organisation](https://github.com/covid-genomics), however we don't have enough resources to create and maintain bindings by ourselves.; With little to no change mmseqs2 could be also used as a Python framework for biological sequences manipulation (similar to [Biopython](https://biopython.org/) of [Biotite](https://www.biotite-python.org/index.html), but faster and dedicated for large volumes of sequences). ## PoC. We created a very rough [PoC with bypind11](https://github.com/covid-genomics/biosnake) to examine how easy it is to create api wrappers.; The bindings are far from being production-ready and the project was just used as a proof that this is possible. ## Possible collaboration. We want to know if you are interested in helping us develop and maintain the bindings. If yes, then we would like to see tight future collaboration to make mmseqs2 more accessible. Bindings would make it easier to use in standard data science pipelines and much more flexible. [Covid Genomics](http://covidgenomics.com/) contact email: [contact@covidgenomics.com](mailto:contact@covidgenomics.com)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/450:1302,access,accessible,1302,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450,1,['access'],['accessible']
Security,* Modified workflow shell scripts to remove hash-named temporary directory ~and symbolic link~ (revoked considering concurrent modification issue),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/555:44,hash,hash-named,44,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/555,1,['hash'],['hash-named']
Security,* Modified workflow source codes to assign `latest` symbolic link to variable `$LATEST`; * Modified workflow shell scripts to remove hash-named temporary directory ~and symbolic link~ (concurrent modification issue),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/551:133,hash,hash-named,133,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/551,1,['hash'],['hash-named']
Security,", the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 1c7ad90e2a9a249cbe4858b5002dc052b3333475; * Which MMseqs version was used: AVX2 static; * Server specifications: 32GB RAM; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:1469,hash,hash,1469,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['hash'],['hash']
Security,"----------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:4050,hash,hash-shift,4050,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['hash'],['hash-shift']
Security,"--no-preload 0 --pca 1 --pcb 1.5 --score-bias 0 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:5847,hash,hash,5847,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['hash'],['hash']
Security,"--pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.; 000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 -; -ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 76215872 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 76.22M 6m 32s 415ms; Sort kmer 0h 0m 14s 675ms; Sort by rep. sequence 0h 0m 0s 974ms; Time for fill: 0h 0m 13s 496ms; Time for merg",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:4776,hash,hash-shift,4776,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['hash'],['hash-shift']
Security,"-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:3837,hash,hash-shift,3837,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['hash'],['hash-shift']
Security,"-mode 0; We recompute with --createdb-mode 1; Time for merging to input_h: 0h 0m 0s 3ms; Time for merging to input: 0h 0m 0s 3ms; [=======; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 2ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 102ms; Create directory tmp/8115150149931881526/clu_tmp; linclust tmp/8115150149931881526/input tmp/8115150149931881526/clu tmp/8115150149931881526/clu_tmp -e 0.001 --min-seq-id 0.4 -c 0.8 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1 . Set cluster mode GREEDY MEM.; kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 77298 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 77.30K 0s 41ms; Sort kmer 0h 0m 0s 46ms; Sort by rep. sequence 0h 0m 0s 22ms; Time for fill: 0h 0m 0s 11ms; Time for merging to pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:3200,hash,hash-shift,3200,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['hash'],['hash-shift']
Security,"-split 16` for `mmseqs createindex` to generate 16 `*.idx` files. Instead, I'm getting 18:. ```; mmseqs_tax_target/mmseqs_tax.db.idx.0; mmseqs_tax_target/mmseqs_tax.db.idx.1; mmseqs_tax_target/mmseqs_tax.db.idx.10; mmseqs_tax_target/mmseqs_tax.db.idx.11; mmseqs_tax_target/mmseqs_tax.db.idx.12; mmseqs_tax_target/mmseqs_tax.db.idx.13; mmseqs_tax_target/mmseqs_tax.db.idx.14; mmseqs_tax_target/mmseqs_tax.db.idx.15; mmseqs_tax_target/mmseqs_tax.db.idx.16; mmseqs_tax_target/mmseqs_tax.db.idx.17; mmseqs_tax_target/mmseqs_tax.db.idx.2; mmseqs_tax_target/mmseqs_tax.db.idx.3; mmseqs_tax_target/mmseqs_tax.db.idx.4; mmseqs_tax_target/mmseqs_tax.db.idx.5; mmseqs_tax_target/mmseqs_tax.db.idx.6; mmseqs_tax_target/mmseqs_tax.db.idx.7; mmseqs_tax_target/mmseqs_tax.db.idx.8; mmseqs_tax_target/mmseqs_tax.db.idx.9; ```. Pipeline software (eg., snakemake) generally requires keeping track of all (important) output files produced; otherwise, untracked output files can accidentally be deleted, which is is causing some downstream problems (eg., seg-fault errors for `mmseqs taxonomy`). . ## Steps to Reproduce (for bugs). ```; mmseqs createindex --threads 8 --split 16 mmseqs_tax.db mmseqs_tax_target/tmp/; ```. ## Your Environment. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 1_gnu conda-forge; bzip2 1.0.8 h7f98852_4 conda-forge; ca-certificates 2021.1.19 h06a4308_1; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 h0b5b191_1005 conda-forge; libffi 3.3 h58526e2_2 conda-forge; libgcc-ng 9.3.0 h2828fa1_18 conda-forge; libgomp 9.3.0 h2828fa1_18 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; libstdcxx-ng 9.3.0 h6de172a_18 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; mmseqs2 13.45111 h95f258a_1 bioconda; openssl 1.1.1k h7f98852_0 conda-forge; pigz 2.6 h27826a3_0 conda-forge; seqkit 0.15.0 0 bioconda; seqtk 1.3 h5bf99c6_3 bioconda; wget 1.20.1 h22169c7_0 conda-forge; zlib 1.2.11 h516909a_1010 conda-forge; ```. OS: `Ubuntu 18.04.5`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432:1411,certificate,certificates,1411,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432,1,['certificate'],['certificates']
Security,"-v 3 --max-iterations 1000 --similarity-type 2 --threads 1 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:3920,hash,hash,3920,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['hash'],['hash']
Security,"//mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:2726,secur,secure-protocol,2726,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['secur'],['secure-protocol']
Security,"/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:4923,hash,hash-shift,4923,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['hash'],['hash-shift']
Security,"/github.com/soedinglab/MMseqs2/files/14608041/my_seqs.1of3.fasta.gz); [my_seqs.2of3.fasta.gz](https://github.com/soedinglab/MMseqs2/files/14608046/my_seqs.2of3.fasta.gz); [my_seqs.3of3.fasta.gz](https://github.com/soedinglab/MMseqs2/files/14608047/my_seqs.3of3.fasta.gz). b) Consolidate the 3 chunks:. zcat my_seqs.*.fasta.gz > /tmp/my_seqs.fasta. c) Execute and expose the bug:. /opt/mmseqs/bin/mmseqs easy-cluster \; /tmp/my_seqs.fasta /tmp/my_seqs/result /tmp/my_seqs/tmp \; --dbtype 2 --threads 8 --local-tmp /tmp \; --cluster-reassign -s 7.5 --cov-mode 0 -c 0.98 --cluster-mode 2 --min-seq-id 0.99 -v 1. and the bug is shown below. ## MMseqs Output (for bugs). /tmp/my_seqs/tmp/5280277461515018798/clu_tmp/18196956704942050314/nucleotide_clustering.sh: line 48: 4723 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died. ## Context. In my hands, this bug is exposed only when the number of nucleotide sequences is in the order of millions. For small sets (thousands) the execution completes uneventfully. I have tried the precompiled AVX2 version, the SSE4.1 version, I have tried my own compilation of the latest release (15-6f452, Oct 31 2023) and also the latest github version (f6c9880) and other variations. All attempts led to the exact same bug. I have tried also with other three input datasets. All four crash in the same way. All four are in the order of 3 to 4million nucleotide sequences. When I subset the sequences to about 200K sequences, easy-cluster runs to completion. ## Your Environment. I am running this on an AWS EC2 instance of type g4dn (128GB RAM). Here you go:. $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) Platinum 8259CL CPU @ 2.50GHz; CPU family: 6; Model: 85; Thread(",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822:1329,expose,exposed,1329,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822,1,['expose'],['exposed']
Security,"0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/temp_linclust/352147678829955415/linclust/9188580091420820903/linclust.sh: line 26: 24508 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}. Do you know what is wrong? Thank you very much. Best,; Sam",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/238:1302,hash,hash-shift,1302,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238,1,['hash'],['hash-shift']
Security,"0 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1831648 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 1.83M 2m 36s 559ms. Adjusted k-mer length 17; Sort kmer 0h 0m 33s 753ms; Sort by rep. sequence 0h 0m 2s 503ms; Time for fill: 0h 0m 4s 992ms; Time for merging to pref: 0h 0m 0s 10ms; Time for processing: 0h 4m 21s 927ms; rescorediago",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:4015,hash,hash-shift,4015,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['hash'],['hash-shift']
Security,"00,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Database size: 51992 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 51.99K 0s 346ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 62ms; Sort by rep. sequence 0h 0m 0s 19ms; Time for fill: 0h 0m 0s 27ms; Time for merging to pref: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 567ms; rescorediagonal shrimpDB shrimpDB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:4574,hash,hash-shift,4574,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['hash'],['hash-shift']
Security,"000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:5701,hash,hash-shift,5701,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['hash'],['hash-shift']
Security,"00; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 40; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.4; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterlinclust ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/clu_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:9135,hash,hash,9135,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['hash'],['hash']
Security,"0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --sp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:3244,hash,hash,3244,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['hash'],['hash']
Security,"0; Spaced k-mer pattern ; Local temporary path ; Threads 64; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name ; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 1; linclust uniref90-DB-wwmj tmp//16518381706844811497/clu_redundancy tmp//16518381706844811497/linclust --cluster-mode 3 --max-iterations 1000 --similarity; -type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignme; nt-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp; -bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,co; ntext:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:3040,hash,hash,3040,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['hash'],['hash']
Security,"1878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extend",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:3448,hash,hash-shift,3448,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['hash'],['hash-shift']
Security,"410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 ; [=================================================================] 292.14M 2m 8s 8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:2196,hash,hash-shift,2196,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,1,['hash'],['hash-shift']
Security,"426677965256/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:4034,hash,hash-shift,4034,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['hash'],['hash-shift']
Security,"47483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 80 --compressed 0 -v 3. No datafile could be found for /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq_h!; Error: extract target orfs step died; Error: Search died; ```. ## Steps to Reproduce (for bugs). The ""old"" sequence database was created with `mmseqs createdb`. The ""new"" sequence databases contains the old and new sequences, and was also created by `mmseqs createdb`. The ""old"" clusters were generated via `mmseqs linclust`. . I'm using `xmmseqs clusterupdate --min-seq-id 0.9 -c 0.8` for updating the cluster db. . ## Your Environment. My os: Ubuntu 18.04.4. My conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_3 conda-forge; libstdcxx-ng 9.2.0 hdf63c60_2 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; llvm-openmp 8.0.1 hc9558a2_0 conda-forge; mmseqs2 11.e1a1c h2d02072_0 bioconda; ncurses 6.2 he1b5a44_1 conda-forge; numpy 1.19.0 py38h8854b6b_0 conda-forge; openmp 8.0.1 0 conda-forge; openssl 1.1.1g h516909a_0 conda-forge; perl 5.26.2 h516909a_1006 conda-forge; perl-constant 1.33 pl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333:3437,certificate,certificates,3437,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333,1,['certificate'],['certificates']
Security,"59278292880/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:3460,hash,hash-shift,3460,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['hash'],['hash-shift']
Security,"6542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:4180,hash,hash-shift,4180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['hash'],['hash-shift']
Security,"6959338117486175/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 5 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mas",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:5410,hash,hash-shift,5410,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['hash'],['hash-shift']
Security,"6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Program call:; createdb final_complete_sequences.fa.gz tmp/3578692915323364718/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. ............Time for merging files: 0h 0m 0s 87ms; Time for merging files: 0h 0m 0s 98ms; Time for merging files: 0h 0m 0s 136ms; Time for merging files: 0h 0m 0s 91ms; Time for processing: 0h 0m 2s 526ms; Program call:; cluster tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_tmp -c 0.9 --cov-mode 1 --threads 2 --min-seq-id 0.9 --kmer-per-seq 80. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:2044,hash,hash,2044,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['hash'],['hash']
Security,"6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set cluster settings automatically to s=1; Set cluster mode GREEDY MEM.; Set cluster iterations to 1; Program call:; linclust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3 --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 0 --pca 1 --pcb 1.5 --score-bias ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:4041,hash,hash,4041,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['hash'],['hash']
Security,"81369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:4537,hash,hash-shift,4537,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['hash'],['hash-shift']
Security,"83647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:4198,hash,hash-shift,4198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['hash'],['hash-shift']
Security,"83647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:19801,hash,hash-shift,19801,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['hash'],['hash-shift']
Security,"94185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 6b9388469a41935813f5d207d6d149767feb4c42-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:4989,hash,hash-shift,4989,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['hash'],['hash-shift']
Security,"97/linclust --cluster-mode 3 --max-iterations 1000 --similarity; -type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignme; nt-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp; -bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,co; ntext:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.; 000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 -; -ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:4223,hash,hash-shift,4223,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['hash'],['hash-shift']
Security,"; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb exp.fa tmp2/6664721939282577716/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [19999] 0s 24ms; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 1ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 33ms; Create directory tmp2/6664721939282577716/clu_tmp; cluster tmp2/6664721939282577716/input tmp2/6664721939282577716/clu tmp2/6664721939282577716/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/66647219392825777",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:2975,hash,hash,2975,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['hash'],['hash']
Security,"; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files true; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb /opt/mmseqs/examples/DB.fasta /tmp/mydir/7574787915800795625/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [19999] 0s 15ms; Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 16ms; Create directory /tmp/mydir/7574787915800795625/clu_tmp; cluster /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1 . Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:2876,hash,hash,2876,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['hash'],['hash']
Security,According to NCBI they clustered NR at 90% id and 90% cov. I was wondering what would be the correct cluster mode & cover mode to reproduce the clustering?. >Reduced redundancy. Faster searches. More diverse proteins and organisms in your BLAST results. Check out our new ClusteredNR database – derived from the default BLAST protein nr database by clustering sequences at 90% identity / 90% length ([details below](https://ncbiinsights.ncbi.nlm.nih.gov/2022/05/02/clusterednr_1/#more-about-clusters)). Get quicker results and access to information about the distribution of your hits across a wider range of organisms and evolutionary distances.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/651:527,access,access,527,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/651,1,['access'],['access']
Security,Address sanitizer & memory sanitizer issues,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/661:8,sanitiz,sanitizer,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661,2,['sanitiz'],['sanitizer']
Security,"BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 2204542403 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 2.20B 2h 9m 12s 463ms; Process file into 17 parts; Generate k-mers list for 1 split; Generate k-mers list for 2 split; Generate k-mers list for 3 split; Generate k-mers list for 4 split; Generate k-mers list for 5 split; Generate k-mers list for 6 split; Generate k-mers list for 7 split; [=================================================================] 2.20B 32m 39s 205ms; Sort kmer 0h 0m 26s 313ms; Sort by rep. sequence 0h 0m 4s 966ms; Generate k-mers list for 8 split; [=================================================================] 2.20B 33m 28s 924ms; Sort kmer 0h 0m 26s 546ms; Sort by rep. sequence 0h 0m 5s 354ms; Generate k",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:3979,hash,hash-shift,3979,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['hash'],['hash-shift']
Security,"Dear colleagues,. I'm Paul DE BOISSIER, PhD student at the IBDM, in Marseille, France.; I'm developing a pipeline in which the first step is an orthologous search. For that, I already implemented a RBH search and an access to OrthoDB.; My problem is that OrthoDB is not quite complete and the RBH took a lot of time to run.; I discussed with my supervisor, Bianca Habermann, and we think that using MMseqs2 can help us a lot to reduce our running time. So, I have deeply read the documentation but maybe I missed something. My pipeline is running with refseq as the main database, especially for the RBH, with all the files in .pal, .pos,...; My problem is that I want to use my already existing blast database with MMseqs2 but I don't find any options to create the MMseqs2 database from such database.; Obviously, I read about the function ""databases"" which downloads the database, and I can use NR or UniProtKB but I don't want to redownload a whole database as I have not a lot of space in our servers, especially as we share it among the team. Do you know how I can manage it please ?. Best. DE BOISSIER Paul; PhD Student - Computational Biology Group; IBDM – Institut de Biologie du Développement de Marseille; paul.de-boissier@univ-amu.fr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/395:216,access,access,216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/395,1,['access'],['access']
Security,"Git SHA1 hash values are used in multiple ways that make for unpleasantness for anyone who has to package this code:; * In tags such as 12-113e3 which determines the version download URL; * In directory names such as MMseqs2-113e3212c137d026e297c7540e1fcd039f6812b1; * In the output of ""mmseqs version"", which defaults to the long-form SHA1 for building from git or ""GIT-NOTFOUND"" if compiled from downloads unless the builder defines VERSION_OVERRIDE at cmake. There are big disadvantages to this scheme:; * SHA1 hashes aren't monotonic, so someone has to look at the complete commit history to figure out whether the installed version; * There are 3 pieces of info, the major version, the long hash, and the number of digits in the shortened hash, that have to be transmitted when updating a package; * GIT-NOTFOUND is a really ugly string to get. Please use semantic versioning, which is ordered and standard.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/396:9,hash,hash,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396,4,['hash'],"['hash', 'hashes']"
Security,"HI, I am getting some memory errors when running the cluster module. The amount of memory I have on my cluster is 100GB and the number of threads is 8. When I run the cluster command as below. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/238:786,hash,hash-shift,786,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238,1,['hash'],['hash-shift']
Security,"Hello,. ## Expected Behavior; Output clustering results.; ## Current Behavior; Segmentation in linclust.sh; ## Steps to Reproduce (for bugs); ```; mmseqs createdb seq.fa db/dbclust; mmseqs linclust db/dbclust clust_result tmp --max-seq-len 30000000; ``` ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=====================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:690,hash,hash-shift,690,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['hash'],['hash-shift']
Security,"Hi all,. Thanks again for making MMseq2 accessible for all of us to use! I am interested in using `MMseq2 clusterupdate` on a publicly available database to add my protein sequences to the original clusters. I have a few questions to ask about that- ; The clusters of the database exists as protein sequence file of cluster representatives [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_clusters.fa.gz](url) or a cluster membership text file [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_cluster_seqs.tsv.gz](url). As it is not in the format that MMseq2 takes as input, I am running the following code to generate that-. `mmseqs cluster DB_trimmed DB_trimmed_clu tmp`; 1. My question is that the database is VERY big, and its taking a long time to generate the `DB_trimmed_clu` clusters. Is it possible to use the available tsv file [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_cluster_seqs.tsv.gz](url) on the website to speed up the process?. 2. I downloaded the cluster representative protein sequences [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_clusters.fa.gz](url) to generate the `DB_trimmed_clu` file. Would I need the complete database to generate the `DB_trimmed_clu` file or the cluster representative protein sequences are okay?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/735:40,access,accessible,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/735,1,['access'],['accessible']
Security,"Hi everyone, I ran a `mmseqs search` and a `convertalis `run in order to get a .m8 output format. I would like to add more informations into this` .m8 `file by adding taxonomy, function, familly etc names of each hit in my file. The accessions number are from NCBI; and the `mmseqs2_db.lookup `file looks like:. ```; 0	YP_008004056.1	0; 1	YP_009304977.1	0; 2	YP_004063493.1	0; 3	YP_003457306.1	0; 4	NP_076520.1	0; 5	YP_009361849.1	0; ```; etc . Do you know if the `mmseqs taxonomy` will work for such a thing? . Thank you for your help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/166:233,access,accessions,233,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/166,1,['access'],['accessions']
Security,"Hi there, thanks for reading this. I am trying to download mmseq2 but it always gives me the error message: cannot verify mmseqs.com's certificate, issued by ‘/C=US/O=Let's Encrypt/CN=R3’: Issued certificate has expired. Could you please help me with this issue?. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/751:135,certificate,certificate,135,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/751,3,"['Encrypt', 'certificate']","['Encrypt', 'certificate']"
Security,"I think I've found a typo on the rolling hash function of linclust, at line; https://github.com/soedinglab/MMseqs2/blob/11e2736028cc12a6523b507b061158903f8de317/src/linclust/kmermatcher.cpp#L55; I guess it should be; ```; h ^= RoL(RAND[x_first], (rol*(length-1)) % 16);; ```; with rol instead of the fixed 5 ? Probably you define rol=5 somewhere so in practice no harm is done. (In the Supplementary Material of the paper it's `5` but I noticed that now is more general...)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/252:41,hash,hash,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/252,1,['hash'],['hash']
Security,"I wondering to know a simple thing about search tool. ; Since I read the [mmseqs paper](https://academic.oup.com/bioinformatics/article/32/9/1323/1744460) I was too interested and start to use it about 1 year with really good results. ; Recently I start to use to iterative searches, since the [wiki](https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter) report higher sensitivity of MMseqs compared with PSI-Blast as reported by this graph. . I wasn't able to reproduce this results, first because I have no access to dataset used to do it and at least I didn't find the parameters used in MMseqs2profile. . So I am just trying to do some different tests against different databases (NCBI nr, PDB, Uniprot50 20 ...) but I yet didn't find any parameter which de sensitivity of MMseqs with 3 or 4 iterations are higher than PSI-Blast. ; So my questions are: ; __Which are the best parameters on MMseqs search keep closer or better than default parameters used on PSI-Blast (NCBI reference)?__. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/106:528,access,access,528,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/106,1,['access'],['access']
Security,"I would like to find the closest human protein sequence for any given query. Often the query sequences are short (10aa). To test if mmseq could help with that, I created a fasta file that contains: ; 1) 10 protein sequences from the filtered swissprot dataset to include just human samples (aka, swissprot_human); 2) 10 short sequences created through sampling one segment of 10aa from the first 10 human sequences . The resulting sequences are illustrated in this [csv](https://docs.google.com/spreadsheets/d/1F_0krK2EAW-siYEheJbwTXaHUxy3gKRR9VAcY_kCHBE/edit?usp=sharing) (I couldn't upload the csv, so I am sharing a link. I hope you can access it). . You will notice that the same query sequence has a different evalue between swissprot and swissprot_human, which I assume plays a role in the reduced number of matches against swissprot. How can I ensure the search results are consistent for the two datasets? . Thank you so much for the help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/827:640,access,access,640,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/827,1,['access'],['access']
Security,Less alignments in alignment tsv file than accessions in cluster tsv file,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/268:43,access,accessions,43,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268,1,['access'],['accessions']
Security,"Sorry if this isn't the right forum, but is there a reference database for determining the sensitivity to the first false positive as plotted here to compare the various `-s` and with other packages? . https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter . Or said another way, are the databases/code used for the plot available somewhere? I'm trying to validate another method and am hoping place it accurately/make a fair comparison with other the rest.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/296:373,validat,validate,373,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/296,1,['validat'],['validate']
Security,"The mmseqs2 wiki mentions `mmseqs createfasta`, but for `MMseqs2 Version: 7.4e23d`, I don't see any `createfasta` subcommand. Is the documentation out of date or is `createfasta` accessed via some other method besides an mmseqs subcommand?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/145:179,access,accessed,179,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/145,1,['access'],['accessed']
Security,"When I run `mmseqs taxonomy`, it converts the *_h file for the input sequence db from a standard file to a symlink that points at itself. So the symlink is then broken, and `mmseqs taxonomy` fails. I'm using a different temporary directory for `mmseqs taxonomy` than where the *_h file is, so that shouldn't be the problem. mmseqs version: 8.fac81. <details><summary>conda env</summary>; <p>. ```; # Name Version Build Channel; bzip2 1.0.6 h14c3975_1002 conda-forge; ca-certificates 2019.3.9 hecc5488_0 conda-forge; curl 7.64.1 hf8cf82a_0 conda-forge; gawk 4.2.1 h14c3975_1001 conda-forge; krb5 1.16.3 h05b26f9_1001 conda-forge; libcurl 7.64.1 hda55be3_0 conda-forge; libdeflate 1.0 h14c3975_1 bioconda; libedit 3.1.20170329 hf8c457e_1001 conda-forge; libgcc-ng 8.2.0 hdf63c60_1; libssh2 1.8.2 h22169c7_2 conda-forge; libstdcxx-ng 8.2.0 hdf63c60_1; llvm-openmp 8.0.0 hc9558a2_0 conda-forge; mmseqs2 8.fac81 hf3e9acd_1 bioconda; ncurses 6.1 hf484d3e_1002 conda-forge; openmp 8.0.0 0 conda-forge; openssl 1.1.1b h14c3975_1 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h8571acd_11 bioconda; seqtk 1.3 h84994c4_1 bioconda; tk 8.6.9 h84994c4_1001 conda-forge; xz 5.2.4 h14c3975_1001 conda-forge; zlib 1.2.11 h14c3975_1004 conda-forge; ```. </p>; </details>. <details><summary>conda info</summary>; <p>. ```; active environment : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; active env location : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; shell level : 2; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.6.11; conda-build version : 3.11.0; python version : 3.6.7.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anacon",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188:470,certificate,certificates,470,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188,1,['certificate'],['certificates']
Security,Wrong accession numbers in colabfold_envdb_202108,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/560:6,access,accession,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/560,1,['access'],['accession']
Security,"_83927407775/mmseqs_search_TMP09. MMseqs Version: 	11.e1a1c; E-value threshold 	0.001; Max accept 	1; Threads 	8; Sensitivity 	6; Max results per query 	100; Split database 	0; Split memory limit 	160G; Search iterations 	2. Failed to mmap memory dataSize=321859477504 File=/ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db.idx. Error 12.; ```. Even if I reduce `--split-memory-limit` to 50% or just 20% of the total memory provided for the qsub job, the job still dies with the same error. Maybe I'm not understanding or using `--split-memory-limit` correctly??. I'm using UniRef90 as the db. If I use 336G for the job mem limit, then the `mmseq search` job runs without an error. . ## Steps to Reproduce (for bugs). `mmseqs search` on UniRef90 to provide a large RAM requirement for the job. . ## Your Environment. Ubuntu 18.04.4. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_2 conda-forge; libstdcxx-ng 9.2.0 hdf63c60_2 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; llvm-openmp 8.0.1 hc9558a2_0 conda-forge; mmseqs2 11.e1a1c h2d02072_0 bioconda; ncurses 6.2 he1b5a44_1 conda-forge; numpy 1.19.0 py38h8854b6b_0 conda-forge; openmp 8.0.1 0 conda-forge; openssl 1.1.1g h516909a_0 conda-forge; perl 5.26.2 h516909a_1006 conda-forge; perl-constant 1.33 pl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338:1975,certificate,certificates,1975,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338,1,['certificate'],['certificates']
Security,"`mmseqs tsv2db` doesn't create a *.dbtype file. Is this intentional? How do I create a *.dbtype file, given that it appears to be a binary file?. In general, I find the ""hidden"" requirements of extra files such as the *.dbtype and *.index files to be very frustrating, because it can be hard to know which files are actually required for each `mmseq` command versus which files are stated as required inputs. This is especially challenging when using pipeline software such as `snakemake`. ```; $ conda list; # packages in environment at /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass:; #; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; ca-certificates 2018.11.29 ha4d7672_0 conda-forge; curl 7.63.0 h74213dd_0 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; krb5 1.16.2 hbb41f41_0 conda-forge; libcurl 7.63.0 hbdb9355_0 conda-forge; libdeflate 1.0 h470a237_0 bioconda; libedit 3.1.20170329 haf1bffa_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libssh2 1.8.0 h5b517e9_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; ncurses 6.1 hfc679d8_2 conda-forge; openmp 7.0.0 h2d50403_0 conda-forge; openssl 1.0.2p h470a237_1 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h8ee4bcc_1 bioconda; tk 8.6.9 ha92aebf_0 conda-forge; xz 5.2.4 h470a237_1 conda-forge; zlib 1.2.11 h470a237_3 conda-forge; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/155:671,certificate,certificates,671,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/155,1,['certificate'],['certificates']
Security,a typo on the rolling hash function,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/252:22,hash,hash,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/252,1,['hash'],['hash']
Security,"abase cannot be combined with --createdb-mode 0; We recompute with --shuffle 0. Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 4m 46s 360ms; Create directory All_cohort_tmp//9948387321092861199/clu_tmp; linclust All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu All_cohort_tmp//9948387321092861199/clu_tmp --cluster-mode 2 --threads 56 -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --max-seq-len 10000 --spaced-kmer-mode 0 --remove-tmp-files 1 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . Database size: 440656032 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 440.66M 1m 58s 106ms; Sort kmer 0h 1m 9s 431ms; Sort by rep. sequence 0h 0m 39s 418ms; Time for fill: 0h 2m 31s 613ms; Time for merging to pref: 0h 0m 0s 1ms; Time for p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:4272,hash,hash-shift,4272,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['hash'],['hash-shift']
Security,"all50.mm.db experiments/tmp/ --min-seq-id 0.5; linclust experiments/small.mm.db experiments/small50.mm.db experiments/tmp/ --min-seq-id 0.5 . MMseqs Version: 	02be0c4ea6183fce9cf45521a8c145d10f3928c1; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Threads 	12; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:4012,hash,hash,4012,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['hash'],['hash']
Security,"ay:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1473,secur,security,1473,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['secur'],['security']
Security,"bstitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 96025 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 96.03K 0s 882ms . Adjusted k-mer length 17; Sort kmer 0h 0m 0s 257ms; Sort by rep. sequence 0h 0m 0s 133ms; Time for fill: 0h 0m 0s 107ms; Time for merging to pref: 0h 0m 0s 28",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:5996,hash,hash-shift,5996,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['hash'],['hash-shift']
Security,"c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1330,secur,security,1330,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['secur'],['security']
Security,"ca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:3982,hash,hash-shift,3982,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['hash'],['hash-shift']
Security,"context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 100000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00K 0s 853ms; Sort kmer 0h 0m 0s 789ms; Sort by rep. sequence 0h 0m 0s 951ms; Time for fill: 0h 0m 0s 155ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:10876,hash,hash-shift,10876,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['hash'],['hash-shift']
Security,"d clustering on a database:; `mmseqs cluster pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --cascaded -t 24`; but the program doesn't recognize --cascaded option, although it is mentioned on the wikipage. I found out another option from the '-h' help: --single-step-clustering and set it up to false:; `mmseqs cluster pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --threads 24 --single-step-clustering false`; and I get:. > Program call:; > pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --threads 24 --single-step-clustering false; > ; > MMseqs Version: GITDIR-NOTFOUND; > Sub Matrix blosum62.out; > Sensitivity 4; > K-mer size 0; > K-score 2147483647; > Alphabet size 21; > Max. sequence length 32000; > Max. results per query 20; > Offset result 0; > Split DB 0; > Split mode 2; > Split Memory Limit 0; > Coverage threshold 0.8; > Coverage Mode 0; > Compositional bias 1; > Diagonal Scoring 1; > Mask Residues 1; > Minimum Diagonal score 15; > Include identical Seq. Id. false; > Spaced Kmer 1; > No preload false; > Early exit false; > Pseudo count a 1; > Pseudo count b 1.5; > Threads 24; > Verbosity 3; > Add backtrace false; > Alignment mode 3; > E-value threshold 0.005; > Seq. Id Threshold 0; > Realign hit false; > Max Reject 2147483647; > Max Accept 2147483647; > Cluster mode 1; > Max depth connected component 1000; > Similarity type 2; > Single step clustering false; > Cascaded clustering steps 3; > Remove Temporary Files false; > Sets the MPI runner; > Kmer per sequence 20; > Shift hash 5; > Rescore mode 0; > Remove hits by seq.id. and coverage false; > In substitution scoring mode, performs global alignment along the diagonal false; > ; > Set cluster settings automatic to s=6; > Set cluster iterations to 3; > Please provide \<sequenceDB\> \<outDB\> \<tmp\>. I use self compiled version, cloned from the git yesterday (20180220).; `mmseqs`. > MMseqs2 Version: GITDIR-NOTFOUND. So how to run cascaded clustering? I'm also not sure whether missing version number means something went wrong...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/65:1509,hash,hash,1509,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/65,1,['hash'],['hash']
Security,"d to both the master and slave nodes. . ## MMseqs Output (for bugs); ```; Program call:; /mnt/DB /mnt/clu /mnt/tmp . MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 20; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0.8; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 2; Verbosity 3; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Single step clustering true; Cascaded clustering steps 3; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; /mnt/DB /mnt/tmp/4359821638123540538/clu_redundancy /mnt/tmp/4359821638123540538/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 2 -; -sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:1773,hash,hash,1773,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['hash'],['hash']
Security,d. 	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Target Coverage threshold 	0; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Cluster mode 	0; > Max depth connected component	1000; > Similarity type 	2; > Cascaded clustering 	false; > Cluster fragments 	false; > Remove Temporary Files 	false; > Sets the MPI runner 	; > ; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Alphabet size 	3; > Seq. Id Threshold 	0; > Max. sequence length	32000; > Threads 	4; > Verbosity 	3; > ; > Y -> F; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > S -> A; > N -> D; > L -> I; > H -> E; > K -> E; > P -> C; > E -> D; > C -> A; > I -> F; > G -> A; > D -> A; > A -> A; > Reduced amino acid alphabet:; > F W X ; > Hashing sequences ... ; > Done.; > Compute 169 unique hashes.; > Time for merging files: 0 h 0 m 0 s; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy tmp/clu_redundancy --cluster-mode 0 --max-seqs 300 -v 3 --max-iterations 1000 --similarity-type 2 --threads 4 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Cluster mode 	0; > Max. results per query 	300; > Verbosity 	3; > Max depth connected component	1000; > Similarity type 	2; > Threads 	4; > ; > Init...; > Opening sequence database...; > Opening alignment database...; > done.; > Clustering mode: Set Cover; > ; > Sort entries.; > ; > Find missing connections.; > ; > Found 7 new connections.; > ; > Reconstruct initial order.; > ; > Add missing connections.; > ; > Time for Read in: 0 m 0s; > ; > Writing results...; > ...done.; > Time for clustering: 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Total time: 0 m 0s; > ; > Size of the sequence database: 176; > Size of the alignment database: 176; > Number of clusters: 169; > Program call:; > t,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:14485,hash,hashes,14485,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['hash'],['hashes']
Security,"d.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:2042,secur,secure-protocol,2042,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['secur'],['secure-protocol']
Security,"dancy ./mmseqs_output/tmp/5351426679731834765/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:10319,hash,hash-shift,10319,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['hash'],['hash-shift']
Security,"de 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.4; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb all_seq.fasta tmp/8115150149931881526/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [Multiline fasta can not be combined with --createdb-mode 0; We recompute with --createdb-mode 1; Time for merging to input_h: 0h 0m 0s 3ms; Time for merging to input: 0h 0m 0s 3ms; [=======; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 2ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 102ms; Create directory tmp/8115150149931881526/clu_tmp; linclust tmp/8115150",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:1581,hash,hash,1581,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['hash'],['hash']
Security,"e aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 144; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; /final/db_profile_vs_consensus/low_1/Genus02938/Genus02938_DB.dbtype exists already!; ```. Yes, `/final/db_profile_vs_consensus/low_1/Genus02938/Genus02938_DB.dbtype` already exists; it was created by `mmseqs search`. I'm not sure why `mmseqs clust` cares? Do you have any ideas - I can't figure this out. Many thanks!!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/844:2610,hash,hash,2610,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/844,1,['hash'],['hash']
Security,"e multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any sequence for key 62888288!; Add missing connections; [=================================================================] 100.00% 45.46M 1s 608ms; Time for read in: 0h 0m 28s 571ms; Total time: 0h 0m 40s 655ms; Size of the sequence database: 45461840; Size of the alignment datab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:2882,hash,hash-shift,2882,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['hash'],['hash-shift']
Security,"e-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:4323,hash,hash-shift,4323,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['hash'],['hash-shift']
Security,"e-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 76215872 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 76.22M 6m 32s 415ms; Sort kmer 0h 0m 14s 675ms; Sort by rep. sequence 0h 0m 0s 974ms; Time for fill: 0h 0m 13s 496ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 7m 46s 594ms; rescorediagonal uniref90-DB-wwmj uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref tmp//16518381706844811497/linclust/11898236; 85496030198/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov; -mode 2 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [=======",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:5306,hash,hash-shift,5306,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['hash'],['hash-shift']
Security,"eads 24; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.8; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Weight file name ; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files true; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb /hps/nobackup/iqbal/dander/amira_panRG_pipeline/Escherichia_coli_panRG_c_0.8_l_0_train_AMR_alleles_removed_mmseqs2/all_sequences.fasta tmp/3198441352783276465/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [95951] 0s 927ms; Time for merging to input_h: 0h 0m 0s 47ms; Time for merging to input: 0h 0m 0s 25ms; Database type: Nucleotide; Time for processing: 0h 0m 1s 143ms; Create directory tmp/3198441352783276465/clu_tmp; cluster tmp/3198441352783276465/input tmp/3198441352783276465/clu tmp/3198441352783276465/clu_tmp --max-seqs 20 -c 0 --cov-mode 5 --spaced-kmer-mode 1 --threads 24 --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --cluster-mode 1 --cluster-reassign 1 --remove-tmp-files 1 . Set cluster sensitivity",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:3105,hash,hash,3105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['hash'],['hash']
Security,"emporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; /mnt/DB /mnt/tmp/4359821638123540538/clu_redundancy /mnt/tmp/4359821638123540538/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 2 -; -sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; -----------------------------------",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:2544,hash,hash-shift,2544,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['hash'],['hash-shift']
Security,"ent 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 0s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 0s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 0s; Rescore diagonals.; Program call:; pan.db pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref /tmp//589280515582180421/li",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:4360,hash,hash-shift,4360,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['hash'],['hash-shift']
Security,"er mode GREEDY MEM.; kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 77298 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 77.30K 0s 41ms; Sort kmer 0h 0m 0s 46ms; Sort by rep. sequence 0h 0m 0s 22ms; Time for fill: 0h 0m 0s 11ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 225ms; rescorediagonal tmp/8115150149931881526/input tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [====",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:3735,hash,hash-shift,3735,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['hash'],['hash-shift']
Security,"eshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (153016352 byte) of total memory (1886452531 byte); Process file into 1 parts; Generate k-mers list 0; ............; Time for fill: 0h 0m 1s 398ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 1s 345ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Prog",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:6438,hash,hash-shift,6438,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['hash'],['hash-shift']
Security,f-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; g++ (GCC) 5.4.0; cmake version 3.28.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; uname -a | grep x86_64; Linux node7 3.10.0-1160.11.1.el7.x86_64 #1 SMP Fri Dec 18 16:34:56 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; * Operating system and version:; CentOS Linux release 8 (Core). * packages in current environment; `conda list; packages in environment at /home/liuhongbin/anaconda3/envs/colabfoldMSA:. Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 2_gnu conda-forge; absl-py 1.4.0 pypi_0 pypi; alphafold-colabfold 2.3.6 pypi_0 pypi; appdirs 1.4.4 pypi_0 pypi; astunparse 1.6.3 pypi_0 pypi; binutils 2.40 hdd6e379_0 conda-forge; binutils_impl_linux-64 2.40 hf600244_0 conda-forge; binutils_linux-64 2.40 hbdbef99_2 conda-forge; biopython 1.82 pypi_0 pypi; bzip2 1.0.8 hd590300_5 conda-forge; c-compiler 1.7.0 hd590300_0 conda-forge; ca-certificates 2023.11.17 hbcca054_0 conda-forge; cachetools 5.3.2 pypi_0 pypi; certifi 2023.11.17 pypi_0 pypi; charset-normalizer 3.3.2 pypi_0 pypi; chex 0.1.85 pypi_0 pypi; colabfold 1.5.5 pypi_0 pypi; contextlib2 21.6.0 pypi_0 pypi; contourpy 1.2.0 pypi_0 pypi; cxx-compiler 1.7.0 h00ab1b0_0 conda-forge; cycler 0.12.1 pypi_0 pypi; dm-haiku 0.0.10 pypi_0 pypi; dm-tree 0.1.8 pypi_0 pypi; flatbuffers 23.5.26 pypi_0 pypi; fonttools 4.47.0 pypi_0 pypi; gast 0.5.4 pypi_0 pypi; gcc 12.3.0 h8d2909c_2 conda-forge; gcc_impl_linux-64 12.3.0 he2b93b0_3 conda-forge; gcc_linux-64 12.3.0 h76fc315_2 conda-forge; google-auth 2.26.1 pypi_0 pypi; google-auth-oauthlib 1.2.0 pypi_0 pypi; google-pasta 0.2.0 pypi_0 pypi; grpcio 1.60.0 pypi_0 pypi; gxx 12.3.0 h8d2909c_2 conda-forge; gxx_impl_linux-64 12.3.0 he2b93b0_3 conda-forge; gxx_linux-64 12.3.0 h8a814eb_2 conda-forge; h5py 3.10.0 pypi_0 pypi; idna 3.6 pypi_0 pypi; immutabledict 4.1.0 pypi_0 pypi; importlib-metadata 4.13.0 pypi_0 pypi; jax 0.4.23 py,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/795:2580,certificate,certificates,2580,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/795,1,['certificate'],['certificates']
Security,"files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1831648 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 1.83M 2m 36s 559ms. Adjusted k-mer length 17; Sort kmer 0h 0m 33s 753ms; Sort by rep. sequence 0h 0m 2s 503ms; Time for fill: 0h 0m 4s 992ms; Time for merging to pref: 0h 0m 0s 10ms; Time for processing: 0h 4m 21s 927ms; rescorediagonal 1831648_seqs.mmseqs2db 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref tmp/16479300059278292880/linclust/10067396915876818640/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.85 -a 0 --cov-mode 0 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 112 --compressed 0 -v 3 . [=================================================================] 1.83M 10s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:4548,hash,hash-shift,4548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['hash'],['hash-shift']
Security,"filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 split; [=================================================================] 100.00% 541.12M 11m 3s 10ms ; Sort kmer 0h 0m 24s 363ms; Sort by rep. sequence 0h 0m ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:5225,hash,hash-shift,5225,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['hash'],['hash-shift']
Security,"g k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:4242,hash,hash-shift,4242,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['hash'],['hash-shift']
Security,"g k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:3641,hash,hash-shift,3641,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['hash'],['hash-shift']
Security,"ging to input: 0h 15m 5s 407ms; Database type: Aminoacid; Time for processing: 0h 51m 25s 878ms; Tmp /export/scratch/SRC-50/8871099322051866948/clu_tmp folder does not exist or is not a directory.; Create dir /export/scratch/SRC-50/8871099322051866948/clu_tmp; linclust /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu /export/scratch/SRC-50/8871099322051866948/clu_tmp --cluster-mode 2 -e 0.001 --min-seq-id 0.5 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --split-memory-limit 500G --remove-tmp-files 1. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [==========================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:3548,hash,hash-shift,3548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['hash'],['hash-shift']
Security,"k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:19244,hash,hash-shift,19244,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['hash'],['hash-shift']
Security,"ld 	0.001; Seq. Id Threshold 	0.8; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	20; Shift hash 	5; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; pan.db /tmp//589280515582180421/clu_redundancy /tmp//589280515582180421/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 1 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:3229,hash,hash-shift,3229,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['hash'],['hash-shift']
Security,"ld be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:3591,hash,hash-shift,3591,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['hash'],['hash-shift']
Security,"le k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:2462,hash,hash-shift,2462,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['hash'],['hash-shift']
Security,"lit memory limit 	0; Coverage threshold 	0.99; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.99; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	1; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --ad",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:2392,hash,hash,2392,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['hash'],['hash']
Security,"llion of antibody sequences; cmd: easy-linclust ./DB.fasta clusterRes tmp --min-seq-id 0.95 -c 0.95. ## MMseqs Output (for bugs). MMseqs Version: 13.45111; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 32; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.95; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.95; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. linclust tmp/14608094218366142978/input tmp/14608094218366142978/clu tmp/14608094218366142978/clu_tmp -e 0.001 --min-seq-id 0.95 -c 0.95 --spaced-kmer-mode 0 --remove-tmp-files 1. Set cluster mode SET COVER.; Killed; Error: Rescore with hamming distance step died; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 13.45111; OS: Ubuntu 22.04; CPU: Intel(R) Core(TM) i9-13900K; Memory: 64GB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/730:1277,hash,hash,1277,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/730,1,['hash'],['hash']
Security,"lse; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:3297,hash,hash-shift,3297,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['hash'],['hash-shift']
Security,"lter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 100000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00K 0s 853ms; Sort kmer 0h 0m 0s 789ms; Sort by rep. sequence 0h 0m 0s 951ms; Time for fill: 0h 0m 0s 155ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 3s 166ms; rescorediagonal ./mms_smallDB ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:11379,hash,hash-shift,11379,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['hash'],['hash-shift']
Security,"lter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 170ms; rescorediagonal in/DB_in in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:4701,hash,hash-shift,4701,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['hash'],['hash-shift']
Security,"lter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 172ms; rescorediagonal in/DB_in in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:20304,hash,hash-shift,20304,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['hash'],['hash-shift']
Security,"m/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[===============================================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:1527,secur,secure-protocol,1527,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['secur'],['secure-protocol']
Security,"min-seq-id 1.00 -c 0.90 -s 8 --max-seqs 1000 --cluster-mode 1 --threads 6; ```; the program crashes with:; ```; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007f4554305010 ***; ```; If I subselect some sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_ch",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:1103,hash,hash-shift,1103,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['hash'],['hash-shift']
Security,"n hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 0s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 0s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 0s; Rescore diagonals.; Program call:; pan.db pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Rescore mode 	0; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	false; In substitution scorin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:4651,hash,hash,4651,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['hash'],['hash']
Security,"n:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [======================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:4714,hash,hash-shift,4714,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['hash'],['hash-shift']
Security,"ntext:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:5521,hash,hash-shift,5521,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['hash'],['hash-shift']
Security,"ntical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --spl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:2645,hash,hash,2645,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['hash'],['hash']
Security,"ntical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:18246,hash,hash,18246,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['hash'],['hash']
Security,"ory-limit 500G. MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500G; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb SRC.fasta /export/scratch/SRC-50/8871099322051866948/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [2022891328] 19m 44s 787ms; Time for merging to input_h: 0h 15m 26s 958ms; Time for merging to input: 0h 15m 5s 407ms; Database type: Aminoacid; Time for processing: 0h 51m 25s 878ms; Tmp /export/scratch/SRC-50/8871099322051866948/clu_tmp folder does not exist or is not a directory.; Create dir /export/scratch/SRC-50/8871099322051866948/clu_tmp; linclust /export/scratch/SRC-50/8871",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:1879,hash,hash,1879,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['hash'],['hash']
Security,"p/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 96025 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 96.03K 0s 882ms . Adjusted k-mer length 17; Sort kmer 0h 0m 0s 257ms; Sort by rep. sequence 0h 0m 0s 133ms; Time for fill: 0h 0m 0s 107ms; Time for merging to pref: 0h 0m 0s 28ms; Time for processing: 0h 0m 1s 808ms; rescorediagonal tmp/3198441352783276465/input tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.5 -a 0 --cov-mode 5 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 24 --compres",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:6559,hash,hash-shift,6559,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['hash'],['hash-shift']
Security,"path 	; Threads 	112; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.95; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust 1831648_seqs.mmseqs2db tmp/16479300059278292880/clu_redundancy tmp/16479300059278292880/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:2279,hash,hash,2279,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['hash'],['hash']
Security,plit DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id. 	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Target Coverage threshold 	0; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Cluster mode 	0; > Max depth connected component	1000; > Similarity type 	2; > Cascaded clustering 	false; > Cluster fragments 	false; > Remove Temporary Files 	false; > Sets the MPI runner 	; > ; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Alphabet size 	3; > Seq. Id Threshold 	0; > Max. sequence length	32000; > Threads 	4; > Verbosity 	3; > ; > Y -> F; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > S -> A; > N -> D; > L -> I; > H -> E; > K -> E; > P -> C; > E -> D; > C -> A; > I -> F; > G -> A; > D -> A; > A -> A; > Reduced amino acid alphabet:; > F W X ; > Hashing sequences ... ; > Done.; > Compute 169 unique hashes.; > Time for merging files: 0 h 0 m 0 s; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy tmp/clu_redundancy --cluster-mode 0 --max-seqs 300 -v 3 --max-iterations 1000 --similarity-type 2 --threads 4 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Cluster mode 	0; > Max. results per query 	300; > Verbosity 	3; > Max depth connected component	1000; > Similarity type 	2; > Threads 	4; > ; > Init...; > Opening sequence database...; > Opening alignment database...; > done.; > Clustering mode: Set Cover; > ; > Sort entries.; > ; > Find missing connections.; > ; > Found 7 new connections.; > ; > Reconstruct initial order.; > ; > Add missing connections.; > ; > Time for Read in: 0 m 0s; > ; > Writing results...; > ...done.; > Time for clustering: 0 m 0s; > Time for m,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:14431,Hash,Hashing,14431,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['Hash'],['Hashing']
Security,"q-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:4752,hash,hash-shift,4752,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['hash'],['hash-shift']
Security,"q-len 10000 --spaced-kmer-mode 0 --remove-tmp-files 1 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . Database size: 440656032 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 440.66M 1m 58s 106ms; Sort kmer 0h 1m 9s 431ms; Sort by rep. sequence 0h 0m 39s 418ms; Time for fill: 0h 2m 31s 613ms; Time for merging to pref: 0h 0m 0s 1ms; Time for processing: 0h 9m 8s 726ms; rescorediagonal All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:4781,hash,hash-shift,4781,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['hash'],['hash-shift']
Security,"quence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	92G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 2204542403 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 2.20B 2h 9m 12s 463ms; Process file into 17 parts; Generate k-mers ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:3405,hash,hash-shift,3405,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['hash'],['hash-shift']
Security,"rary path; Threads 	20; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.97; Min alignment length 	200; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster iterations to 3; linclust shrimpDB tmp97/17949317426677965256/clu_redundancy tmp97/17949317426677965256/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:2931,hash,hash,2931,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['hash'],['hash']
Security,"rue; Offset of numeric ids	0; Verbosity 	3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; ```; ```; Program call:; pan.db fam.db /tmp/ --min-seq-id 0.8 -c 0.8 --threads 1 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	20; Shift hash 	5; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; pan.db /tmp//589280515582180421/clu_redundancy /tmp//589280515582180421/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 1 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:2550,hash,hash,2550,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['hash'],['hash']
Security,"ry path 	; Threads 	40; Compressed 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB tmp/10260956542131223380/clu_redundancy tmp/10260956542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:3022,hash,hash,3022,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['hash'],['hash']
Security,"seqs createdb seq.fa db/dbclust; mmseqs linclust db/dbclust clust_result tmp --max-seq-len 30000000; ``` ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=================================================================] 140.20K 2m 37s 793ms; Time for merging to pref_rescore1: 0h 0m 0s 35ms; Time for processing: 0h 2m 48s 60ms; clust db/d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:1103,hash,hash-shift,1103,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['hash'],['hash-shift']
Security,sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set cluster settings automatically to s=1; Set cluster mode GREEDY MEM.; Set cluster iterations to 1; Program call:; linclust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3 --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 0 --pca 1 --pcb 1.5 --score-bias 0 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort res,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:4965,hash,hash-shift,4965,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['hash'],['hash-shift']
Security,"split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 9.50M 1m 30s 166ms; Time for merging to pref_rescore1: 0h 0m 3s 976ms; Time for pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:5209,hash,hash-shift,5209,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['hash'],['hash-shift']
Security,"t a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; mmseqs2=13.45111=h95f258a_1. * Which MMseqs version w",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480:1104,certificate,certificates,1104,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480,1,['certificate'],['certificates']
Security,"t be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; =================================================================================================== 292 Mio. sequences processed; =============; Time for merging to input_h: 0h 0m 40s 64ms; Time for merging to input: 0h 0m 40s 130ms; Database type: Aminoacid; Time for processing: 0h 12m 9s 179ms; Tmp /export/tmp/MERC/4233864688410091672/clu_tmp folder does not exist or is not a directory.; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:1681,hash,hash-shift,1681,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,1,['hash'],['hash-shift']
Security,"t is added to the alignment score [0.000]; --gap-open TWIN Gap open cost [aa:11,nucl:5]; --gap-extend TWIN Gap extension cost [aa:1,nucl:2]; --zdrop INT Maximal allowed difference between score values before alignment is truncated (nucleotide alignment only) [40]; clust:; --cluster-mode INT 0: Set-Cover (greedy); 1: Connected component (BLASTclust); 2,3: Greedy clustering by sequence length (CDHIT) [0]; --max-iterations INT Maximum depth of breadth first search in connected component clustering [1000]; --similarity-type INT Type of score used for clustering. 1: alignment score 2: sequence identity [2]; kmermatcher:; --kmer-per-seq INT k-mers per sequence [21]; --kmer-per-seq-scale TWIN Scale k-mer per sequence based on sequence length as kmer-per-seq val + scale x seqlen [aa:0.000,nucl:0.200]; --adjust-kmer-len BOOL Adjust k-mer length based on specificity (only for nucleotides) [0]; --hash-shift INT Shift k-mer hash initialization [67]; --include-only-extendable BOOL Include only extendable [0]; --ignore-multi-kmer BOOL Skip k-mers occurring multiple times (>=2) [0]; profile:; --pca Pseudo count admixture strength []; --pcb Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) []; misc:; --rescore-mode INT Rescore diagonals with:; 0: Hamming distance; 1: local alignment (score only); 2: local alignment; 3: global alignment; 4: longest alignment fulfilling window quality criterion [0]; --dbtype INT Database type 0: auto, 1: amino acid 2: nucleotides [0]; --shuffle BOOL Shuffle input database [1]; --createdb-mode INT Createdb mode 0: copy data, 1: soft link data and write new index (works only with single line fasta/q) [1]; --id-offset INT Numeric ids in index file are offset by this value [0]; common:; --threads INT Number of CPU-cores used (all by default) [10]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; --sub-mat TWIN Substitution matrix file [aa:blosum62.out,nucl:nucleotide.ou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682:4833,hash,hash-shift,4833,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682,2,['hash'],"['hash', 'hash-shift']"
Security,"t it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable false │; Skip repeating k-mers false │; Threads 64 │; Compressed 0 │; Verbosity 3; ```. ## Your Environment; I installed mmseqs using `mamba` (conda).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/477:1377,hash,hash-shift,1377,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477,2,['hash'],"['hash', 'hash-shift']"
Security,"ta_file output_path tmp_folder --min-seq-id 0.5. ## MMseqs Output; easy-linclust roman/seqs/lectins_seq.fasta roman/test/lectins_seq roman/test/tmp --min-seq-id 0.5. MMseqs Version: 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 128; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:1224,hash,hash,1224,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['hash'],['hash']
Security,"text:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.3; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:2317,hash,hash,2317,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['hash'],['hash']
Security,"tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:6064,hash,hash-shift,6064,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['hash'],['hash-shift']
Security,"uDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 ; --split-memory-limit 500; linclust inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 --split-memory-limit 500; MMseqs Version: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 16; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1e-10; Seq. id. threshold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:1669,hash,hash,1669,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['hash'],['hash']
Security,"|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:1700,secur,secure-protocol,1700,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['secur'],['secure-protocol']
Testability," 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.75; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	62G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; Error: Pre-clustering step died; ```; I also have an error log : . ```; + mmseqs linclust /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB_clu /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp --min-seq-id 0.75 --threads 20 -v 3 --force-reuse 1 --split-memory-limit 62G; /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/linclust.sh: line 37: 1000278 Killed ""$MMSEQS"" clust ""$INPUT"" ""${TMP_PATH}/pref_rescore1"" ""${TMP_PATH}/pre_clust"" ${CLUSTER_PAR}. real	8m30.284s; user	12m57.207s; sys	2m3.531s; slurmstepd: error: Detected 1 oom_kill event in StepId=1504095.batch. Some of the step tasks have been OOM Killed.; ```. I see that it's a memory issue but I don't know what to do to solve this.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:9572,log,log,9572,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['log'],['log']
Testability," #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self-compiled and Homebrew: Compiler and Cmake sse4_2versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 16 GB RAM ; i5-3320M CPU with sse3, sse4_1, sse4_2 and avx supported; commands to compile:. * Operating system and version:; Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/349:2411,test,tested,2411,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349,1,['test'],['tested']
Testability," 142 164 167 0.933 0.922; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_OPYI01000008.1_105 48.900 154 78 0 7 159 5 158 5.484E-35 141 164 167 0.933 0.922; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_CAIJCS010000014.1_2 48.600 155 79 0 5 158 6 160 7.514E-35 141 164 171 0.939 0.906; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 CABJAE010000022.1_14 48.700 154 78 0 7 159 5 158 1.030E-34 141 164 167 0.933 0.922; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 CYUK01000003.1_1117 48.100 156 80 0 5 159 3 158 1.411E-34 140 164 174 0.945 0.897; ```. From the `mmseqs search` output one can see that the top hit (NZ_JH601103.1), has the best target, query coverage and evalue.; The top hit belongs to the organism `Dolosigranulum pigrum` https://www.ncbi.nlm.nih.gov/nuccore/NZ_JH601103 which has the following taxonomy:. `d__Bacteria; p__Bacillota; c__Bacilli; o__Lactobacillales; f__Carnobacteriaceae; g__Dolosigranulum; s__Dolosigranulum pigrum`. I wonder how this discrepancy between the taxonomy of the `mmseqs search` top hit and the taxonomy provided by `mmseqs taxonomy` can happen?. ## Steps to Reproduce (for bugs). The gtdb database I used, can be downloaded [here](https://openstack.cebitec.uni-bielefeld.de:8080/databases/gtdb_r214_1_mmseqs.tar.gz). The test sequence can be found [here](https://openstack.cebitec.uni-bielefeld.de:8080/bugseq/test.faa.gz). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 0b27c9d7d7757f9530f2efab14d246d268849925; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake: 3.16.3; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 236 GB RAM; * Operating system and version: Ubuntu 20.04.6",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/859:3204,test,test,3204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/859,2,['test'],['test']
Testability, 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 1,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:14352,test,test,14352,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability," 3 -s 4 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; Threads 	64; Verbosity 	3. Initialising data structures...; Using 64 threads. Use index /junk/databases/mmseqs/nr.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Query database: mmseq-testDB(size=2467); Target database: /junk/databases/mmseqs/nr(size=121935717); Use kmer size 7 and split 0 using split mode 0; tmp/blastp.sh: línea 60: 68389 Excepción de coma flotante $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET_DB_PREF"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Program call:; mmseq-testDB /junk/databases/mmseqs/nr /root/tmp/blast/tmp/pref_4 /root/tmp/blast/tmp/aln_4 --sub-mat blosum62.out --alignment-mode 0 -e 0.001 --min-seq-id 0 -c 0 --target-cov 0 --max-seq-len 32000 --max-seqs 300 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --threads 64 -v 3 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id.	false; Threads 	64; Verbosity 	3. Init data structures...; Compute score only.; Using 64 threads.; Could not open data file /root/tmp/blast/tmp/pref_4!; mv: no se puede efectuar `stat' sobre «/root/tmp/blast/tmp/aln_4»: No existe el fichero o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31:3938,test,testDB,3938,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31,1,['test'],['testDB']
Testability," Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Lo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:1629,test,test,1629,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability, Process prefiltering step 0 of 1. Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Copy 1650981 Entries (9905886 byte); Setup Sizes ; Read IndexTable ... Done; k-mer similarity threshold: 115; k-mer match probability: 0. Starting prefiltering scores calculation (step 0 of 1); Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 18s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 32s; - checkReturnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit fal,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:4481,test,test,4481,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability," Target proteins with outstanding Bit Score in the example for query WP_148290433.1:; WP_004066529.1 (bit score: 323, previous hit: 94); WP_004069050.1 (bit score: 207, previous hit: 53 ). ## Steps to Reproduce (for bugs). Please run this script for example (comparing Thermococcus litoralis and Pyrococcus furiosus proteins, using 3 iterations); #download protein files; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:1622,log,log,1622,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['log'],['log']
Testability," ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0001_A,0000_A,1.000; 0001_A,0002_A,1.000; 0002_A,0002_A,1.000; 0002_A,0000_A,1.000; ```; I would expect 9 rows, 3 sequences with 3 similarities each. It seems like similarities are treated as undirected edges in this case. But when I replace ""MNO"" with ""AAA"" in the first sequence, I get the expected 9 similarities:. #### Fasta:; ```; >0000_A; ABCDEFGHIJKLAAAPQRSTUVWXYZ; >0001_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; >0002_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; ```; #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0000_A,0002_A,0.885; 0000_A,0001_A,0.885; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.885; 0002_A,0002_A,1.000; 0002_A,0001_A,1.000; 0002_A,0000_A,0.885; ```. This doesn't happen in all cases, though. Here is another case with two exact copies and a third sequence that has a small change (QU -> AA) that does not lead to 9 similarities:. #### Fasta; ```; >0000_A; TESTSEAAENCE; >0001_A; TESTSEQUENCE; >0002_A; TESTSEQUENCE; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.833; 0002_A,0002_A,1.000; 0002_A,0000_A,0.833; ```. I wasn't able to deduce what exactly made those two cases behave differently, unfortunately. ## Unexpected Behavior 2:. When I use a very similar sequence as I used in the former example (SEQUENCETEST instead of TESTSEQUENCE), something entirely different happens. These three exact copies show up as unrelated. #### Fasta:; ```; >0000_A; SEQUENCETEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.000; ```. In this case it also doesn't matter if I edit (CE -> AA) the first sequence:. #### Fasta:; ```; >0000_A; SEQUENAATEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:. ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12:1545,TEST,TESTSEAAENCE,1545,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12,3,['TEST'],"['TESTSEAAENCE', 'TESTSEQUENCE']"
Testability," `mmseqs result2msa /Volumes/DataDisk/netsurfp2-outfiles/mmseqs_files/in.mmdb /Volumes/DataDisk/databases/Pfam-A /Volumes/DataDisk/netsurfp2-outfiles/mmseqs_files/out.mm_search /Volumes/DataDisk/netsurfp2-outfiles/mmseqs_files/out.mm_msa `. ## Current Behavior; At this point, mmseqs fails to produce a complete out.mm_msa database. ; You'll see some msa db files generated in my attached zip, but it appears that the database is incomplete.; I believe that creation of the database `out.mm_msa` terminates prematurely because of the error in the below. ; netsurfp2 cannot read the database when it attempts to generate an hmm profile. You will observe in the MMseqs output that the forward/backward smith-waterman score is differing. ## Steps to Reproduce (for bugs); I am including a zip file of all that is required to reproduce the problem, with the exception of the target database Pfam-A. ## MMseqs Output (for bugs). MMseqs Version: 	11-e1a1c; Start computing multiple sequence alignments.; Query database size: 50000 type: Aminoacid; Target database size: 17772 type: Profile; Score of forward/backward SW differ. This should not happen. ] 1.01% 504 eta 0s . ## Context; The issue does not happen for alignments fewer than 10 sequences. This sequence database is about 175,000.; A logfile which is belongs to netsurfp2 is included in the zip file. It provides context around the prior commands executed. . ## Your Environment; MMseqs was compiled with homebrew using cmake version 3.15.3; Operating System: OSX; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; [issue.zip](https://github.com/soedinglab/MMseqs2/files/4970047/issue.zip)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/335:1441,log,logfile,1441,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/335,1,['log'],['logfile']
Testability," a cluster, it will appear again in its own singleton cluster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1299,test,test,1299,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability," issue. I don't think my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	1; Verbosity 	3. Finding maximum sequence length and set size.; Compute profiles from MSAs.; Invalid fasta sequence 0 in entry 0!; Invalid msa 0! Skipping entry.; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 1 s; Time for processi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/96:1491,TEST,TEST,1491,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96,1,['TEST'],['TEST']
Testability," query and target data, which in no means are unreasonable in my opinion (5.1 MB each), the program exits with a segmentation fault during the prefiltering step. See output below for more detailed information. ## Steps to Reproduce (for bugs); strictly following the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:1368,Test,Testdata,1368,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,2,['Test'],['Testdata']
Testability, score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Nucleotide f,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:1910,test,test,1910,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability," sizeof *state - 1];; ; }; void Random::seed (long x); @@ -73,7 +73,7 @@ void Random::seed (long x); ; // linear congruential initializer; 	for (i = 1; i < sizeof state / sizeof *state; ++i) {; -		state [i] = 1103515245 * state [i - 1] + 12345;; +		state [i] = 1103515245ul * state [i - 1] + 12345ul;; 	}; ; 	rJ = &state [r_off];; @@ -85,7 +85,7 @@ void Random::seed (long x); long Random::number () // uniform random x : 0 <= x <= exp2 (31) - 1; ; {; -	long r;; +	unsigned long r;; ; 	r = *rK;; 	r += *rJ--;; @@ -97,6 +97,6 @@ long Random::number () // uniform random; 			rJ = &state [sizeof state / sizeof *state - 1];; }; 	; - return (r >> 1) &0x7fffffff; // discard the least-random bit; + return (r >> 1) &0x7ffffffful; // discard the least-random bit; }; ```. 3. Instead of [running plain xxd](https://github.com/soedinglab/MMseqs2/blob/master/cmake/MMseqsResourceCompiler.cmake#L35), we generate header files for resource files with the following pattern:; ```; """"""; #ifndef MMSEQS2_XXD_{1}_H_; #define MMSEQS2_XXD_{1}_H_; #include ""mmseqs2/{0}_data.h"". // Use casters to make values act as properties. This is to prevent static variables causing; // ""initialization order fiasco"".; struct {0}_CharCaster {{; operator const unsigned char*() const {{; return reinterpret_cast<const unsigned char*>({0}_data_create()->data);; }}; operator const char*() const {{; return reinterpret_cast<const char*>({0}_data_create()->data);; }}; operator const void*() const {{; return reinterpret_cast<const void*>({0}_data_create()->data);; }}; }};. struct {0}_LenCaster {{; operator unsigned int() const {{; return static_cast<unsigned int>({0}_data_create()->size);; }}; }};. inline constexpr {0}_CharCaster {0};; inline constexpr {0}_LenCaster {0}_len;; ```. where `{0}` is the filename of the respective file. 4. Changing `\n` to `\0` in [this line](https://github.com/soedinglab/MMseqs2/blob/a5d49655330d144788c6e1bf8551d7cc1d356b0c/src/test/TestTranslate.cpp#L15). We hope this is helpful.; Best wishes",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/661:4707,test,test,4707,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661,2,"['Test', 'test']","['TestTranslate', 'test']"
Testability,"# Fasta:; ```; >0000_A; ABCDEFGHIJKLAAAPQRSTUVWXYZ; >0001_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; >0002_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; ```; #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0000_A,0002_A,0.885; 0000_A,0001_A,0.885; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.885; 0002_A,0002_A,1.000; 0002_A,0001_A,1.000; 0002_A,0000_A,0.885; ```. This doesn't happen in all cases, though. Here is another case with two exact copies and a third sequence that has a small change (QU -> AA) that does not lead to 9 similarities:. #### Fasta; ```; >0000_A; TESTSEAAENCE; >0001_A; TESTSEQUENCE; >0002_A; TESTSEQUENCE; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.833; 0002_A,0002_A,1.000; 0002_A,0000_A,0.833; ```. I wasn't able to deduce what exactly made those two cases behave differently, unfortunately. ## Unexpected Behavior 2:. When I use a very similar sequence as I used in the former example (SEQUENCETEST instead of TESTSEQUENCE), something entirely different happens. These three exact copies show up as unrelated. #### Fasta:; ```; >0000_A; SEQUENCETEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.000; ```. In this case it also doesn't matter if I edit (CE -> AA) the first sequence:. #### Fasta:; ```; >0000_A; SEQUENAATEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:. ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.000; ```. ## Unexpected Behavior 3:; It seems like there is a minimal length for sequences, but I'm not sure this error is intended. #### Fasta:; ```; >0000_A; ABCDEFGHIJ; >0001_A; ABCDEFGHIJ; >0002_A; ABCDEFGHIJ; ```. #### Error:; ```; World` Size: 4 aaSize: 3; World Size: World Size: 4 aaSize: 3; World Size: 4World Size: 4 aaSize: 3; World Size: World Size: 4 aaSize: 3; World Size: 4Could not open data fi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12:1994,TEST,TESTSEQUENCE,1994,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12,1,['TEST'],['TESTSEQUENCE']
Testability,"## Context; I am working with metagenomic data; Assemblies and gene annotation have been made by samples and then we performed a clustering at 95% identity to clustered genes by sample into one genes catalog. The tradictionnal command used is based on CD-HIt : `cd-hit-est -c 0.95`.; I want to test mmseq for saving computing time (original, isn't it?!). ## Expected Behavior; results similar to cd-hit in a much less time. ## Current Behavior; input =13 387 709 nucleic sequences. cd-hit output : 2,102,272 clusters; linclust output : 1,986,968 clusters (ok good start); cluster output : 8062 cluster (!!! what ?). I did not check anything further, except that both mmseq clustering ran well. I obviously miss something !; ; How is that possible that `cluster` produced only 8k clusters ?. ## Your Environment; mmseqs2-v14-7e284. the command lines used : ; * for linclust; `mmseqs easy-cluster AllSamples-cd-hit-est.0.95 mmseq_easyCluster tmp --min-seq-id 0.95 -c 0 --threads 20 --split-memory-limit 19G`; for cluster; `mmseqs easy-linclust AllSamples-cd-hit-est.0.95 mmseq_easyLinclust tmp --min-seq-id 0.95 -c 0 --threads 20 --split-memory-limit 19G`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/699:294,test,test,294,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/699,1,['test'],['test']
Testability,"## Context; I need to create MSAs for a very large set of protein sequences: about 25 million. I was planning to use the ColabFold workflow. I figured that this would be achievable given the nonlinear scaling to large query sets. That being said, extremely remote alignments are not necessary for my use case in the same way they they are helpful for structure prediction. I am looking for relative small MSAs (no more than 256 sequences) of diverse sets that do not have small fragments eg. high coverage. . I had intended to run some scaling tests over query size as well as parameters (first thoughts being sensitivity, max_seqs, align eval, max_except), as well as not using the metagenomic database. I figured I would first **chat with experts and save some compute carbon** before doing this. Is there any params I am missing? Any that would be good to change from default and forget? Am I totally off in thinking my job is accessible with a 104 thread compute note and a week of runtime?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897:544,test,tests,544,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897,1,['test'],['tests']
Testability,"## Context; [test.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612640/test.fasta.txt); [test_dup.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612641/test_dup.fasta.txt). First, I created a DB and ran the cluster command on a small test set of 10 sequences (test.fasta); Second, I duplicated 2 sequences by copying the sequence entries in the fasta file, and changed the sequence names (test_dup.fasta). I then created a new DB, and ran the clusterupdate command. For comparison, I also ran the cluster command on the new DB, to show the difference in output. ```; mkdir tmp tmp2 tmp3; mmseqs createdb test.fasta DB; mmseqs createdb test_dup.fasta DB_dup. # Clustering simple data set in ""test.fasta""; mmseqs cluster DB clu1 tmp --min-seq-id 0.9 --cluster-mode 1. # Clustering duplicated data set in ""test_dup.fasta""; mmseqs cluster DB_dup clu2 tmp2 --min-seq-id 0.9 --cluster-mode 1. # Updating cluster results ""clu1"" with new duplicated sequences ; # (expected to give similar output to ""clu2""); mmseqs clusterupdate DB DB_dup clu1 clu3 tmp3 --min-seq-id 0.9 --cluster-mode 1; ```. ## Expected Behavior; Duplicated sequences to cluster together with the original sequences (which works when running cluster command on the duplicated data set). clu2 is what I would expect, with the duplicated sequences 10 (""seq9B"") and 12 (""seq10B"") clustering with 9 (""seq9"") and 11 (""seq10"") respectively (1 and 6 are close homologs, so it's correct that they're clustering together):; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 10; 9*; 12; 11*; ```. ## Current Behavior; clu3 is NOT what I would expect. 10 and 12 are not included in the results. ; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 9*; 11*; ```. ## Your Environment; Running mmseqs2 from inside a Docker container derived from the Ubuntu:precise container.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/53:13,test,test,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/53,6,['test'],['test']
Testability,"## Current Behavior; Hello, thanks for developing this very useful tool! I have used mmseqs via conda installation without error on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:262,test,test,262,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,2,['test'],['test']
Testability,"## Expected Behavior. ## Current Behavior. This is the error i am getting . Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 15993152; Target db start 1 to 15993152; tmp/17791169248477116152/blastp.sh: line 75: 20702 Illegal instruction (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs search queryDB targetDB resultDB tmp. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. no output . ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am trying to find pairwise alignment between 15M short aa sequences. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):. Invalid Command: Version. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; N/A; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; qsub -cwd -V -N align -l h_data=32G,time=10:00:00 run.sh; * Operating system and version:. Linux version 2.6.32-696.18.7.el6.x86_64 (mockbuild@c1bl.rdu2.centos.org) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-18) (GCC) ) #1 SMP Thu Jan 4 17:31:22 UTC 2018",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/90:1563,mock,mockbuild,1563,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/90,1,['mock'],['mockbuild']
Testability,"## Expected Behavior. I want to remove a sequence that is a substring of a longer sequence. Looking at https://github.com/soedinglab/MMseqs2/issues/104. I can use `--min-seq-id 1.0 -c 0.9 --cov-mode 1`. So give a `test` file like:; ```; >a; ATTGCATCGAGCAGCGACGAGCTATCGACGATCGATCGATCGATCGATGCATCGATGCATCGATCGATCGATCGTACGATGCATTTTTACGAGCATCGGA; >b; ATTGCATCGAGCAGCGACGAGCTAT; ```. Where `>b` is a substring of `>a`, and it should be removed. ## Current Behavior. If I run:; ```bash; mmseqs easy-cluster test t_OUT t_tmp --min-seq-id 1 --cov-mode 1 -c 0.9; ```. And check the clusters, I still have two clusters:; ```bash; $ cat t_OUT_cluster.tsv; a a; b b. $ cat t_OUT_rep_seq.fasta; >a; ATTGCATCGAGCAGCGACGAGCTATCGACGATCGATCGATCGATCGATGCATCGATGCATCGATCGATCGATCGTACGATGCATTTTTACGAGCATCGGA; >b; ATTGCATCGAGCAGCGACGAGCTAT; ```. ## Steps to Reproduce (for bugs). You can execute:; ```bash; echo "">a"" > test; echo ""ATTGCATCGAGCAGCGACGAGCTATCGACGATCGATCGATCGATCGATGCATCGATGCATCGATCGATCGATCGTACGATGCATTTTTACGAGCATCGGA"" >> test; echo "">b"" >> test; echo ""ATTGCATCGAGCAGCGACGAGCTAT"" >> test. mmseqs easy-cluster test t_OUT t_tmp --min-seq-id 1 --cov-mode 1 -c 0.9; ```. ## Your Environment. I am using a conda installation on a conda env (on a linux server), with version:; ```; MMseqs Version: 15.6f452; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/794:214,test,test,214,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/794,7,['test'],['test']
Testability,"## Expected Behavior. I'm trying to cluster my large protein sequence file (>45billion entries). I want to know how to set the parameters to cluster as soon as possible, and what kind of computer configuration is needed to run the data. And I also want to know, will the running time still be linear in the case of 30 times the test data set of paper ""Clustering huge protein sequence sets in linear time"". ## Current Behavior; mmseqs linclust $input tmp --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 1000G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/623:328,test,test,328,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/623,1,['test'],['test']
Testability,"## Expected Behavior. I'm trying to run `clusterupdate`, but I'm running into the error:. ```; diffseqdbs /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/user_genes/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/removedSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/mappingSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/newSeqs --use-seq-id 0 --threads 80 --compressed 0 -v 3. Time for processing: 0h 0m 0s 170ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 94ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. [=================================================================] 68.86K 0s 267ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 402ms; Time for processing: 0h 0m 0s 980ms; ===================================================; ======== ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333:146,test,tests,146,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333,1,['test'],['tests']
Testability,"## Expected Behavior. In previous version of MMSeqs2, the ```createdb``` command was running in a time that was proportional to the number of input sequences. ## Current Behavior. With latest version 5 - 9375b the command scans and writes all the input sequences into the MMSeqs2 DB format, but then hangs out for several hours writing the ```database.0``` and ```database.index.0``` files, which seem like a copy of the ```database``` file already written. No additional information are written in the log file during this process. ## Steps to Reproduce (for bugs); Run ```createdb``` on Uniprot/TrEMBL Fasta file. ## MMseqs Output (for bugs). ```; Program call:; createdb uniprot_trembl.fasta.gz uniprot_trembl_Sept18. MMseqs Version: 	5.9375b; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ...................................................................................................	3 Mio. sequences processed; ...................................................................................................	4 Mio. sequences processed; ...................................................................................................	5 Mio. sequences processed; ...................................................................................................	6 Mio. sequences processed; ...................................................................................................	7 Mio. sequences processed; ...................................................................................................	8 Mio. sequences processed; ...................................................................................................	",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/124:503,log,log,503,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/124,1,['log'],['log']
Testability,"## Expected Behavior. Perform contig-taxonomy without raising any error for all the sequences introduced. . ## Current Behavior. The taxonomy is obtained, creating the `report` and `lca_tsv` files, but in the error log there is the following line: . ```; data/04_taxgenes/contigs_tax/1889553110621073458/easy-taxonomy.sh: line 55: 8991 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```; Additionally to the mmseqs output, there is stated sometimes a line saying 'Error filterdb died' without anything else. Additionally, for a subset of the contigs, there is no taxonomy line. Whereas in some cases `mmseqs` correctly states a 'unclassified' line, for others it does not appear. ## MMseqs Output (for bugs). [mmseqs_tax_352069_1.txt](https://github.com/soedinglab/MMseqs2/files/6405462/mmseqs_tax_352069_1.txt). ## Context. I am performing multiple taxonomies for multiple contigs coming from a set of samples. There are some specific cases in which `mmseqs` is able to finish without raising an error. The taxonomy is performed against the GTDB downloaded through the command line you provided (`mmseqs databases`). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * 57de8c8d7b835519990185cbac7a2d841c734f05; * Downloaded locally.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * AVX2 with 250 Gb. ; * Operating system and version: Cluster with UNIX.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447:215,log,log,215,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447,1,['log'],['log']
Testability,"## Expected Behavior. The E-values should be robust to changes in the number of splits. ## Current Behavior. Splitting the database during search (`--split-mode 0`) will result in varying E-values, depending on the number of splits. ## Steps to Reproduce (for bugs). Run `mmseqs search` with `--split-mode 0` and varying values for `--split`. ## MMseqs Output (for bugs). Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Suggestion. One possible way to fix this would be to set a constant database size internally when using `--split-mode 0`. It could be useful to have this parameter exposed to the user, similar to `-Z` in HMMER:. ```; -Z <x> Assert that the total number of targets in your searches is; <x>, for the purposes of per-sequence E-value calculations,; rather than the actual number of targets seen.; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/653:706,Assert,Assert,706,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/653,1,['Assert'],['Assert']
Testability,"## Expected Behavior. When aligning assembled proteins to representative sequences of clusters (clustered at 90% amino acid identity) there should be 0 or 1 hit with > 90% identity and >90% coverage. ## Current Behavior. A single protein can align to over 200 representative sequences while fitting the identity and coverage criteria. ## Steps to Reproduce (for bugs). ### Data. 95,303,635 non-redundant proteins from UHGP v2.0 ([FTP link](http://ftp.ebi.ac.uk/pub/databases/metagenomics/mgnify_genomes/human-gut/v2.0/protein_catalogue/uhgp-100.tar.gz)). 2 proteins serving as probes (uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing)). ### Clustering. 3 different clustering approaches were tested:; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering`. However, all three approaches lead to the same behavior (although the exact number of alignments changes) . ### Testing. `mmseqs easy-search probes/probes.faa {clustering_dir}/uhgp90_rep_seq.fasta results/single-step-clustering-uhgp90.m8 tmp --min-seq-id 0.9 -c 0.9 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln"" --threads 16`. ## Output. The m8 files obtained with the `easy-search` command were uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing). ## Context. I want to assign assembled proteins from metagenomes to clusters from a catalog of bacterial proteins, namely [UHGP](https://www.ebi.ac.uk/metagenomics/genome-catalogues/human-gut-v2-0). I have noticed that ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/639:760,test,tested,760,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/639,1,['test'],['tested']
Testability,"## Expected Behavior. no error and more coffee . ## Current Behavior. The mmseqs convertalis throws the following error:. **Invalid database read for database data file=test/E.faa.mmseqsp_h, database index=test/E.faa.mmseqsp_h.index; getData: local id (4294967295) >= db size (72)**. ## Steps to Reproduce (for bugs). 1. build DB . > mmseqs createdb --dbtype 1 C.faa C.faa.mmseqsp. and. > mmseqs createdb --dbtype 1 E.faa E.faa.mmseqsp. 2. search. > mmseqs search C.faa.mmseqsp E.faa.mmseqsp E.faa.vs.C.faa.mmseqsp . --threads 1 -e 1e-05. 3. do convertalis . > mmseqs convertalis E.faa.mmseqsp C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla. -> The error occures here. ## MMseqs Output (for bugs). here are all my files in the directory:. > ; > 14083925917902872037/ C.faa.mmseqsp_h.dbtype E.faa.mmseqsp E.faa.mmseqsp.index E.faa.vs.C.faa.mmseqsp.bla.2 E.faa.vs.C.faa.mmseqsp.bla.7 E.faa.vs.C.faa.mmseqsp.bla.index.4 E.faa.vs.C.faa.mmseqsp.index; > C.faa C.faa.mmseqsp_h.index E.faa.mmseqsp.dbtype E.faa.mmseqsp.lookup E.faa.vs.C.faa.mmseqsp.bla.3 E.faa.vs.C.faa.mmseqsp.bla.index.0 E.faa.vs.C.faa.mmseqsp.bla.index.5 latest; > C.faa.mmseqsp C.faa.mmseqsp.index E.faa.mmseqsp_h E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla.4 E.faa.vs.C.faa.mmseqsp.bla.index.1 E.faa.vs.C.faa.mmseqsp.bla.index.6; > C.faa.mmseqsp.dbtype C.faa.mmseqsp.lookup E.faa.mmseqsp_h.dbtype E.faa.vs.C.faa.mmseqsp.bla.0 E.faa.vs.C.faa.mmseqsp.bla.5 E.faa.vs.C.faa.mmseqsp.bla.index.2 E.faa.vs.C.faa.mmseqsp.bla.index.7; > C.faa.mmseqsp_h E.faa E.faa.mmseqsp_h.index E.faa.vs.C.faa.mmseqsp.bla.1 E.faa.vs.C.faa.mmseqsp.bla.6 E.faa.vs.C.faa.mmseqsp.bla.index.3 E.faa.vs.C.faa.mmseqsp.dbtype. The precise output is : . > `Program call:; > convertalis E.faa.mmseqsp C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla; > ; > MMseqs Version: 5d7cecc696fa3dfc60dce1acbe7f30a513ec209f; > Substitution Matrix blosum62.out; > Alignment Format 0; > Format alignment output query,target,pident,alnlen,misma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/178:169,test,test,169,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/178,2,['test'],['test']
Testability,"## Expected Behavior; Be able to specify the parameters gap open and extend costs; ## Current Behavior; Not able to use the two options. ## Steps to Reproduce (for bugs); I have 2 very simple test files, a.fasta and b.fasta: [a.txt](https://github.com/soedinglab/MMseqs2/files/3166780/a.txt), [b.txt](https://github.com/soedinglab/MMseqs2/files/3166779/b.txt) (here attached as txt). I run this command for each file:; `mmseqs.bat createdb <fastafile> <dbname> --dbtype 2 --max-seq-len 38 `. Then `search` as follows:; `mmseqs.bat search aDB bDB alignDB tmp --search-type 3 -k 3 -s 7.5 -e INF --min-ungapped-score 0 -a --gap-open N --gap-extend M `; (integers in place of N, M). The output is in [searchout.txt](https://github.com/soedinglab/MMseqs2/files/3166806/searchout.txt). I then run `convertalis` to summarize:; `mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln""`. Output: [convout.txt](https://github.com/soedinglab/MMseqs2/files/3166817/convout.txt); Note that in the `convertalis `output, the values for gap open and extension are:; ```; Gap open cost 11; Gap extension cost 1; ```. Is this a bug in the output or is it not taking the settings into account? I have tried many combinations of settings and the reported scores are always to same. ## MMseqs Output (for bugs); Output is included above for each command. ## Context; I am trying to get alignment scores for short DNA sequences. Gaps are important as I am looking for scores which are not heavily influenced by gaps and mismatches in general (little penalty). ## Your Environment; 09 May 2019, Windows version from https://mmseqs.com/latest/; Windows 10.0.17763 Build 17763; No issues running MMseqs2, other than errors such as ; ```; posix_madvise returned an error alignDB; posix_madvise returned an error tmp/3046893737278326904/aln; posix_madvise returned an error tmp/3046893737278326904/search/pref_0; ```; when running `search `and `convertalis`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201:192,test,test,192,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201,1,['test'],['test']
Testability,## Expected Behavior; Both versions should have the same ROC1 value in our benchmark. . ## Current Behavior; AVX2 performes worse than SSE4.1,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/19:75,benchmark,benchmark,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/19,1,['benchmark'],['benchmark']
Testability,"## Expected Behavior; Cluster a fasta input using `easy-cluster` because `linclust` sometimes removes important sequences. ## Current Behavior; \> 50% tested fastas die with a result2flat error. ```; <BASEDIR>/tmp//13463384132153814128/easycluster.sh: line 48: 36628 Segmentation fault (core dumped) ""$MMSEQS"" result2flat ""${TMP_PATH}/input"" ""${TMP_PATH}/input"" ""${TMP_PATH}/clu_seqs"" ""${TMP_PATH}/all_seqs.fasta"" ${VERBOSITY_PAR}; Error: result2flat died; ```. ## Steps to Reproduce (for bugs); Cluster a [fasta (link)](https://gist.github.com/xonq/88b4d1f90c438b9b99f2d0e27bd3c604) with `easy-cluster` via a python subprocess. Full paths changed to <BASE_DIR> in log.; In this specific case:; `easy-cluster <BASE_DIR>/cormil2.1_9109.fa <BASE_DIR>/working/cormil2.1_9109_c0.4_v0.65 <BASE_DIR>/working/tmp/ --min-seq-id 0.65 --threads 1 --compressed 1 --cov-mode 0 -c 0.4 -e 0.1 -s 7.5 `. ## MMseqs Output (for bugs); [Error log](https://gist.github.com/xonq/51e40f3edf79ebd1531a725b26c52654). ## Context; I'm running a pipeline that calls on `easy-cluster` to truncate large fastas for phylogenetic reconstruction. >50% of these runs fail with easy-cluster. I don't want to use `linclust` because I've observed that it throws out important sequences from clusters here and there. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Compiled from miniconda via Bioconda channel; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU: 12 cores requested, Intel® Xeon® 'Cascade Lake'/'Skylake' RAM: 192GB/node, 57.6GB reserved for job. Supports AVX512, but ""you must set the correct compiler flags to take advantage of it""; * Operating system and version: Red Hat Enterprise Linux Server 7.9, Kernel 3.10.0-1160.71.1.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/617:151,test,tested,151,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617,3,"['log', 'test']","['log', 'tested']"
Testability,## Expected Behavior; Count degenerate nucleotide base (X or N) as match to any other nucleotide. ## Current Behavior; X bases are counted as a mismatch even with a custom substitution matrix that counts X as a match with score 2 to all bases. ## Steps to Reproduce (for bugs); 1. Copy matrix from nucleotide.out to nucleotide.edit.mat. Edit to replace -3 scores for X with 2 and run `MMseqs2/util/format_substitution_matrix.R < nucleotide.edit.mat > nucleotide.edit.mat.out`:. ```; # Background (precomputed optional): 0.3267 0.3267 0.3267 0.3267 0.00001; # Lambda (precomputed optional): 0.34657; # Avg SeqId (precomputed optional): 0.854; 	A	C	G	T	X; A	2	-3	-3	-3	2; C	-3	2	-3	-3	2; G	-3	-3	2	-3	2; T	-3	-3	-3	2	2; X	2	2	2	2	2; ```. 2. Search sequence against itself with 12 bases replaced with X `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.ou,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:820,test,test,820,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,3,['test'],['test']
Testability,"## Expected Behavior; DB should be formed. ; ## Current Behavior; Fails to parse fasta file. ; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; `mmseqs2/bin/mmseqs createdb test.fa DB`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMseqs Version: 84e4ba6e8ef49b5764e604b9f4d0d90e3d3c0721; Max. sequence length 65535; Split Seq. by len true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0; Compressed 0; Verbosity 3. Fasta entry: 0 is invalid. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. Test file in question:. ```; > CHIPD00001 | ACU57510.1 | Cpin_0001 | C7P9R7_CHIPD | Chromosomal replication initiator protein dnaA; MNKTCEQVWERCLNIIRDIVEWQPFKTWFEPIKPIQLENNVLTIQVPSQFFYEYLEEHYVGLLGKTIKRELGKDARLEYR; IVVENGTPHQHPKTVNMPGQFTKSKKDSEVDFPLTIQNPVKNPFVIPGIKRVQIDSQLNPHYTFESYIEGDCNRVARRAG; KTVSEKPGGTSFNPLVIYGAVGLGKTHLAQAIGNEVKRIHPNKAVLYVSAEKFINQFIDHSKNSIINDFIHFYQLIDVLI; VDDIQFFARAEKTQDAFFAIFNHLHQSGKQLILTSDKPPKDLDGLQERLLSRFRWGLSADMQMPDFETRMEILEMKMRND; GLEMPKEVVKYVAYNIQSNVRELEGALISLLAQSSLNRKEIDLELAKRVLKSFVKTSSKEITIESIQKMVCEYFDVPYDK; LLQKTRKREIVQARQITMYLAKSFTKNSLKTIGEHFGGRDHTTVIHSCQTVKDLMDTDNAFRDNVIELQQKVQLAAM. > CHIPD00002 | ACU57511.1 | Cpin_0002 | C7P9R8_CHIPD | RNA polymerase, sigma-24 subunit, ECF subfamily; MPQEGQHTLWSAIRKGDETAFRQLFEECWEPLFTYASRITIDHSLAQDSVQSLFIHIWEKRDSLPDVTAILPYLRSALKN; RLLNALRDEHVYQKHVDLFTQVVDTNSPSSAEPLHLKETEQQLLQSINRLPGKMKDVFYLHRIEDLSVAEIACKLGTSPQ; TIRNQISTAIQRLKTTFV; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Com",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/170:254,test,test,254,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/170,2,"['Test', 'test']","['Test', 'test']"
Testability,"## Expected Behavior; Downloading the latest MMseqs2 tarball with `wget` should work consistently:; `wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz`. ## Current Behavior; Downloading the latest MMseqs2 tarball with `wget` is not working consistently, nor for `curl` (see below for examples and output). ## Steps to Reproduce (for bugs); 1. First test case—running `wget` doesn't work the first time, but works the second time:; ```; root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:17:43-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:355,test,test,355,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,3,['test'],['test']
Testability,"## Expected Behavior; Extract aligned regions from alignmentDB output of `filterdb` command and write sequenceDB . ## Current Behavior; Segmentation fault with the error: `Can not write to data file`. ## Steps to Reproduce (for bugs). `mmseqs linsearch test/S29DEC19 db/nt test/aln tmpdir --min-seq-id 0.6 -c 0.8 --cov-mode 2 --search-type 3`; `mmseqs filterdb test/aln test/tophitaln --extract-lines 1`; `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`. ## MMseqs Output (for bugs). ```; mmseqs filterdb test/aln test/tophitaln --extract-lines 1; MMseqs Version: 12.113e3; Filter expression; Filter column 1; Column to take -1; Filter regex ^.*$; Positive filter true; Filter file; Beats first false; Mapping file; Trim to one column false; Extract N lines 1; Numerical comparison operator; Numerical comparison value 0; Sort entries 0; Include identical seq. id. false; join to DB; Threads 40; Compressed 0; Verbosity 3. Filtering by extracting the first 1 lines; [=================================================================] 100.00% 26.17M 3s 458ms; Time for merging to tophitaln: 0h 0m 9s 953ms; Time for processing: 0h 0m 15s 822ms; ```. ```; mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq. MMseqs Version: 12.113e3; Compressed 0; Extract mode 2; Preload mode 0; Threads 40; Verbosity 3; ; Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. ```. ## Context. I understand that `linsearch` is still under active development. But I am unable to extract aligned regions after filtering `linsearch` alignment output for top hits with `filterdb.` However, `convertalis` is able to produce blast formatted output from the `filterdb` output. Please let me know if you need any other information to understand what is the problem. Thanks,; Manu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/368:253,test,test,253,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368,13,['test'],['test']
Testability,"## Expected Behavior; Hi, I expected that this library would come with a/the conda environment. It's not a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480:229,test,test,229,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480,2,['test'],['test']
Testability,"## Expected Behavior; I am trying to partition 25000 sequences by homology so identical sequences (for instance >30%ID and >70%coverage - ideally even lower coverage if possible) are grouped into the same partition. Hence, I expect easy-cluster to group sequences that share this much similarity in same cluster. ## Current Behavior; After clustering I try to partition (by putting all sequences assigned to the same cluster in the same partition), but when I blast two partitions against each other I see that there are quite a lot of sequences assigned to different clusters that share more similarity than the criteria. ## Steps to Reproduce (for bugs); Currently I run the following (I've played around with many different settings and this seems to give the best clustering - but still far from optimal); mmseqs easy-cluster sequences.faa test.mm tmp -s 7.5 --threads 12 -c 0.7 --cov-mode 1 --alignment-mode 3 --max-seqs 25000 --min-ungapped-score 0 --mask 0 --add-self-matches -e 20000 --cluster-mode 1 --max-iterations 10000 --cluster-steps 7 . Am I missing some crucial setting? Any input is greatly appreciated - Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/354:844,test,test,844,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/354,1,['test'],['test']
Testability,"## Expected Behavior; I try to do download database but the commande line give in the manual doesn't work. ## Current Behavior; error message : ; ' Invalid Command: databases; Did you mean ""mmseqs clusterupdate""? '. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; i use this line :; 'mmseqs databases UniProtKB/Swiss-Prot testdb/swissprot tmp'. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; no output, just error message; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/271:404,test,testdb,404,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271,1,['test'],['testdb']
Testability,"## Expected Behavior; I want to cluster a nucleic acid database. ## Current Behavior; I have some question with mmseqs; 1. What is the difference between result2repseq and createseqfiledb; 2. --Are min seq-id and - c the same? If I want to cluster them based on 50% similarity, what should they be set to?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I use this to cluster; ```bash; mmseqs createdb test.fasta tmps/DB; mmseqs linclust tmps/DB tmps/DB_clu tmps --min-seq-id 0.90 --threads 96; mmseqs result2repseq tmps/DB tmps/DB_clu tmps/DB_clu_rep.fasta; mmseqs convert2fasta tmps/DB_clu_rep.fasta outs.fasta; ```. But I read the PDF guide manual on Github, which is. ```bash; mmseqs cluster DB DB_clu tmp; mmseqs linclust DB DB_clu tmp; mmseqs createsubdb DB_clu DB DB_clu_rep; mmseqs convert2fasta DB_clu_rep DB_clu_rep.fasta; ```; i wonder if their are same or not?. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. their are two output. ```; ls -l; total 1107472; -rw-rw-r-- 1 root root 1103346632 Nov 22 02:16 DB_clu_rep.fasta; -rw-rw-r-- 1 root root 4 Nov 22 02:16 DB_clu_rep.fasta.dbtype; lrwxrwxrwx 1 root root 32 Nov 22 02:16 DB_clu_rep.fasta_h -> /data/codonOP/50filter/tmps/DB_h; lrwxrwxrwx 1 root root 39 Nov 22 02:16 DB_clu_rep.fasta_h.dbtype -> /data/codonOP/50filter/tmps/DB_h.dbtype; lrwxrwxrwx 1 root root 38 Nov 22 02:16 DB_clu_rep.fasta_h.index -> /data/codonOP/50filter/tmps/DB_h.index; -rw-rw-r-- 1 root root 30698239 Nov 22 02:16 DB_clu_rep.fasta.index; lrwxrwxrwx 1 root root 37 Nov 22 02:16 DB_clu_rep.fasta.lookup -> /data/codonOP/50filter/tmps/DB.lookup; lrwxrwxrwx 1 root root 37 Nov 22 02:16 DB_clu_rep.fasta.source -> /data/codonOP/50filter/tmps/DB.source; ```. ```; ls -l; total 1107476; -rw-rw-r-- 1 root root 1103346632 Nov 22 02:16 DB_clu_rep; -rw-rw-r-- 1 root root 4 Nov 22 02:16 DB_clu_rep.d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/783:485,test,test,485,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/783,1,['test'],['test']
Testability,"## Expected Behavior; I was testing the example of `mmseqs easy-search examples/QUERY.fasta examples/DB.fasta alnRes.m8 tmp`. But I didn't see `alnRes.m8` in aimed `tmp` folder.; ## Current Behavior; ```; [lihuilin@login01 MMseqs2]$ ls; azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile examples lib LICENSE.md README.md src util; [lihuilin@login01 MMseqs2]$ mmseqs easy-search examples/QUERY.fasta examples/DB.fasta alnResult.m8 tmp; Create directory tmp; easy-search examples/QUERY.fasta examples/DB.fasta alnResult.m8 tmp. MMseqs Version: 87e7103d289029dc3345f85ea9a4c4c6d6416e46; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 40; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Glo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:28,test,testing,28,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['test'],['testing']
Testability,"## Expected Behavior; I'm trying to cluster my large protein sequence file (1400412352 entries, wc -l all.mmseqDB.index) with:. ## Current Behavior; `mmseqs cluster all.mmseqDB all.95.clu tmp -s 7.5 --cov-mode 0 -c 0.95 --cluster-mode 0 --min-seq-id 0.95 --remove-tmp-files --split-memory-limit 100G`. ## Steps to Reproduce (for bugs); I also tried the linclust function and other split-memory-limit (70G, 40G), but got the same error. ## MMseqs Output (for bugs); Find missing connections; Can not allocate memory in findMissingLinks; Error: Pre-clustering step died; Error: linclust died. ## Context; MMseqs Version: 13.45111. ## Your Environment; the log file; [log.txt](https://github.com/soedinglab/MMseqs2/files/9658017/log.txt). * Operating system and version: Linux 64 with Xeon(R) Gold 6238CPU, ; ![image](https://user-images.githubusercontent.com/35453307/192583090-8ade5a75-5d70-4457-9b7b-f557f2c526b3.png)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/613:654,log,log,654,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/613,3,['log'],['log']
Testability,"## Expected Behavior; Identical sequences would return 0 mismatches and an identity of 1.0. ## Current Behavior; Identical sequences incorrectly labelled as having mismatches which lowers the identity % when run with default options. ## Steps to Reproduce (for bugs); Create two FASTA files, `query.fasta` and `target.fasta` with a single identical sequence: ; ```; >Test-query; RATQGISAWLASASLLQSQYANSFPWTF; ```. Then run the latest docker container (a73c7fd8ba9c); ```; docker run -v $(pwd):/data soedinglab/mmseqs2 mmseqs easy-search /data/query.fasta /data/target.fasta /data/test.m8 /data/tmp; ```. I was trying to compute the alignment to see which AA it thought was a mismatch, but interestingly adding `-a 1` changes the identity to 1.0. ## MMseqs Output (for bugs); ```; Test-query Test-target 0.954 28 1 0 1 28 1 28 3.965E-20 59; ```; MMSeqs2 reports an identity of 0.954 instead of 1. After alignment length (28), it reports 1 mismatch. Adding `-a 1` changes this to ; ```; Test-query Test-target 1.000 28 0 0 1 28 1 28 3.965E-20 59; ```. ## Context; I ran MMSeqs2 with 293 query sequences against 600,000 target sequences. A separate pairwise global alignment run I did identified 1,745 identical sequences across query and target whereas MMSeqs2 reported zero 100% identical matches. Adding `-a 1` seems to mostly correct this issue. Reading the options, it seems that `-a` exists just to return the aligned string, so I'm surprised to see it affects how identity / mismatches are calculated. ## Your Environment; I used the latest Docker container (a73c7fd8ba9c)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/225:367,Test,Test-query,367,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/225,6,"['Test', 'test']","['Test-query', 'Test-target', 'test']"
Testability,"## Expected Behavior; MMSEQS2 should return some hits when setting `-c` in iterative searches. ## Current Behavior; MMSEQS2 returns 0 hits; ## Steps to Reproduce (for bugs); mmseqs createdb QUERY.fasta QUERY; mmseqs createdb DB.fasta DB; mmseqs search QUERY DB results tmp --num-iterations 2 -e 1e-5 -c 0.4. ## MMseqs Output (for bugs); LOG file: [mmseqs_20180926.log](https://gist.github.com/genomewalker/4a53d096569f0a04bbf5986519c5f037). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 199d9b81f8cd6af9e66f97ef4dc0bd53c8fce12b; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **self-compiled**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: **cmake version 3.5.1** and **gcc version 5.4.0**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): **Running in a [VM](https://gist.github.com/genomewalker/bd70eff7fefd8256d52bc1f267983d5a) with 8 cores and 32GB**; * Operating system and version: **Linux machine1b8b2ea2-4f57-414b-9577-c2897459a784 4.4.0-104-generic #127-Ubuntu SMP Mon Dec 11 12:16:42 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/121:337,LOG,LOG,337,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/121,2,"['LOG', 'log']","['LOG', 'log']"
Testability,"## Expected Behavior; MMSeqs search followed by MMSeqs convertalis --format-output ""query,target,pident,nident"" should export the number of identical matches between query and target sequences. ## Current Behavior; MMSeqs always reports the ""nident"" (number of identical residues) value to be 0. ## Steps to Reproduce (for bugs); #Please run bash script below to reproduce error; #!/bin/bash; #download protein sequences from Pyrococcus furiosus; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz. #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/349:772,log,log,772,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349,2,['log'],['log']
Testability,"## Expected Behavior; My colleagues and I have noticed an unexpected behavior with linclust (using the easy-linclust pipeline in particular), it appears to not be clustering identical sequences unless -c == 1 or --min-seq-id == 1 or < 0.9. We're not sure if we're misunderstanding the functionality of the linclust options or if there is a bug. Here are the FASTA contents for the sequences I have been testing with (note they are all identical):. ```; >Dupe; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; >Dupe2; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; >Dupe3; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; ```. ## Current Behavior; Below are a set of commands we've tested. Note that defaults for alignment-mode and cov-modes were used in the example commands, however we have tried the other modes and the same results are exhibited. The -a flag ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/206:403,test,testing,403,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/206,1,['test'],['testing']
Testability,"## Expected Behavior; Not sure. ## Current Behavior; After running; `mmseqs easy-search --search-type 3 --num-iterations 2 --threads 1 sequences/5LJ5_5.fasta databases/MSA_debug.fasta results/result tmp`. the program crashes with; `Can not allocate entries memory in IndexTable`. _Update:_; * Appending the query sequence to the database (which should assure at least one match is found) results in a different crash message: `Query sequence 0 has a result with no diagonal information. Please check your database.`; * Also, the log show query database size to be 2 which is weird because there is only one sequence in the file. But I can't find anything wrong with query .fasta file. _Update (2022-09-08)_:; Was trying out to the iterative step manually and ended up with the following error when trying to compute the profile:; ```; Invalid input database and --search-type combination; queryDbType: Profile; targetDbType: Nucleotide; targetSrcDbType: Unknown; searchMode: 3; ```; I suppose that mean profile search against a nucleotide database is not possible? I've also realized that there are many iterative profile search tools for proteins (psi-blast, jackhmmer) but I don't know a single one for nucleotide sequences. Is there some reason while searching with profiles is not possible in case of nucleotide sequences?. ## Context; Hi, I would like to compute MSA alignments from blast nt database (https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/) for multiple RNA sequences. Ideally, the procedure should be similar to Colabfold's MSA computation and there should be more than one search iteration for each sequence.; Note that I am limited to ~1TB RAM and the nt database index (created by createindex) does not fit into memory.; What would be the best way to go about it? . ## Steps to Reproduce (for bugs); ### 5LJ5_5.fasta:; >5LJ5_5; GUUCGCGAAGUAACCCUUCGUGGACAUUUGGUCAAUUUGAAACAAUACAGAGAUGAUCAGCAGUUCCCCUGCAUAAGGAU; GAACCGUUUUACAAAGAGAUUUAUUUCGUUUU. ### msa_debug; >URS0000000021 rRNA from 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:529,log,log,529,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['log'],['log']
Testability,"## Expected Behavior; Producing a cluster. ## Current Behavior; Error of clustering. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb test.faa test.db; mmseqs cluster test.db test.clu tmp --min-seq-id 0.9; test.faa is attached in the gist. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; https://gist.github.com/matveykolesnik/43a90e7404e11881c29e2c80d79c5fec. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I am using mmseq2 for clustering of protein sequences in automatic pipeline, and I faced with the problem when mmseq2 fails to process fasta files that consist of repeated same sequences, like this:; >record1; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; >record2; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; ...; Perhaps it would be worth to add handling of such fasta files. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/180:231,test,test,231,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/180,5,['test'],['test']
Testability,"## Expected Behavior; Run mmseq search with an array of jobs. ## Current Behavior; As a test, I began with an array of 5 jobs only. 2 of them failed with a different error message. When I run them alone, they work. This behaviour is similar to the issue #239 . ## Steps to Reproduce (for bugs); `sarray -J mmseq --mail-type=ARRAY_TASKS,FAIL commandMMseqs --%=5`; where commandMMseqs contains:; `sbatch command_mmseq2_model.sbatch GCA_018105865.1 GCA_901001135.2` ; `sbatch command_mmseq2_model.sbatch GCA_009193005.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_905160935.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_019095985.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_001703475.1 GCA_901001135.2`. command_mmseq2_model.sbatch contains:; ```; #!/bin/bash; #; #SBATCH -N 1 # nombre de nœuds; #SBATCH -c 20 # nombre de cœurs sur ce meme noeud; #SBATCH --mem 50G # mémoire vive pour l'ensemble des cœurs; #SBATCH -J mmseq. module load system/Miniconda3-4.7.10 ; module load bioinfo/mmseqs2-v13.45111. mmseqs search copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out tmp -s 5.7 --search-type 3 --threads 20 --max-seqs 50 ; mmseqs filterdb mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit --extract-lines 1 ; mmseqs convertalis copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.*[0-9]* &; awk '{if ($3>=0.75 && $4>=300 && $12>=200) print $0}' mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab > mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab.filtered; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; ```. ## MMseqs Output (for bugs); One job fails ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/607:88,test,test,88,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/607,1,['test'],['test']
Testability,"## Expected Behavior; Runs a search with multiple iterations. ## Current Behavior; Running the search with default `--num-iterations` (1) sometimes misses the 100% ID match to the profile query, so I have to rerun. I thought I would just specify `--num-iterations 3`. To clarify, `--num-iterations 1` works, anything greater than 1 fails. `--num-iterations 2` (same for more); I now get ""Error in computePSSMFromMSA. First sequence of MSA is not allowed to contain gaps.; Error: Create profile died"". ## Steps to Reproduce (for bugs); Increasing iterations. ## MMseqs Output (for bugs); [Log](https://gist.githubusercontent.com/xonq/cefcba0107d550f5aa3291c54c3ccdb8/raw/ca1bf365503e8c3e4e05b2ee8bf8572eec7aabc8/failure_output). [Fasta](https://gist.githubusercontent.com/xonq/cefcba0107d550f5aa3291c54c3ccdb8/raw/ad892db5ff0937de43402cefed0178fc2629f5ed/cormil3.1.faa) used in `createdb --createdb-mode 1 --shuffle 0` for db prefix cormil3.1.faa. [Alignment for profile model](https://gist.githubusercontent.com/xonq/0da2789fabaf681114dfa6fb674f1666/raw/8ed35a57aa4240ca0015a2442b272a4a8f87a165/ACT1.stk) used `convertmsa`, then `msa2profile --match-mode 1`. ## Context; It fails to retrieve 100% ID hits in some proteomes when searching many seqdbs with a profiledb with one iteration, so I need to increase the iterations, which breaks the search command. . ## Your Environment. MMseqs2 Version: 14.7e284. Compiled from miniconda via Bioconda channel. CPU: 12 cores requested, Intel® Xeon® 'Cascade Lake'/'Skylake' RAM: 192GB/node, 57.6GB reserved for job. Supports AVX512, but ""you must set the correct compiler flags to take advantage of it"". Red Hat Enterprise Linux Server 7.9, Kernel 3.10.0-1160.71.1.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/641:588,Log,Log,588,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/641,1,['Log'],['Log']
Testability,## Expected Behavior; Shouldn't segfault.; Ideally it should present the user with an error and some guidance on what to do. ## Current Behavior; Segfaults during prefilter stage due to:. ```; Query database: /share/input.fasta(size=0); ```. ## Steps to Reproduce (for bugs); * Create a FASTA file containing 1 sequence.; * Run `mmseqs createdb input.fasta db`; * `rm -rf tmp && mkdir tmp`; * Run `mmseqs search input.fasta db test tmp`. ## MMseqs Output (for bugs); ```; Program call:; input.fasta db test tmp . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Omit Consensus 	false; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; /share/input.fasta db /share/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 40 -v 3 -s 5 . MMseqs Ver,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/41:427,test,test,427,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41,2,['test'],['test']
Testability,"## Expected Behavior; Taxonomy assignment of viral OTU sequences (nucleotide) using the 2bLCA method against a custom formatted amino acid database from IMG/VR. ## Current Behavior; The LCA step dies due to a segmentation fault when using a small test dataset that I have previously had success with when using Antônio Camargo's ICTV MMseqs2 protein database (https://github.com/apcamargo/ictv-mmseqs2-protein-database). For reference, I have also allocated 40 cores and 700gb RAM to this job, which fails after consuming only 178gb of mem.; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. I have formatted the IMG/VR v4 7.1 AA database as recommended (https://github.com/soedinglab/MMseqs2/wiki#create-a-seqtaxdb-by-manual-annotation-of-a-sequence-database) and I've created a custom taxdump using taxonkit. The custom taxdb was created without issue:. ```; mmseqs createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db; createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loadin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:247,test,test,247,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['test'],['test']
Testability,"## Expected Behavior; Using easy-search for multiple alignment (non-duplicate PDB seqs against Uniref100). . I've run this on a cloud instance (64G RAM), and a local server with 256G RAM. It completed the search on the server in 9 hours, producing an output file of 41G. . I expected it to finish running on the cloud at a slower speed because the target DB was split into more chunks (87 splits on the cloud VS 7 splits on the server). ## Current Behavior; On the cloud, however, after the prefiltering step, both ""align"" and ""convertalis"" logged a message ""Can not touch X into main memory"". The job will stay hanging but not produce any more logging or output files (there were a bunch of output files X.0, X.1, X.2.. not merged outputs). I killed it after 2 days. UPDATE: I've also tried to set --split-memory-limit 40G, it did finish running (in 16 hours) and produced a single output file, despite still displaying the message ""can not touch X into memory"". Also, the output file is larger than the output I got from running on the server previously (cloud VS server = 67G/41G, 109912025 lines/ 65303318 lines). I can't figure out what could cause the differences, given the same input files, same script (except for adding --split-memory-limit). So my two questions are:; 1) What's up with the warning ""Can not touch X into main memory""? ; 2) Why are the output files different?. ## Steps to Reproduce (for bugs); `mmseqs easy-search pdb_unique_seqs_all.fasta uniref100.fasta output/pdb_uniref100_6cpu_s3_e10minus3 tmp/ -a -s 3 --threads 6 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar,qaln,taln`; ## MMseqs Output (for bugs); Log file for running on cloud instance WITHOUT setting --split-memory-limit, no merged output, job hanging.; [log_easysearch.txt](https://github.com/user-attachments/files/16683740/log_easysearch.txt). Log file for running on the cloud WITH setting --split-memory-limit 40G, finished running with a single outpu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/877:541,log,logged,541,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/877,2,['log'],"['logged', 'logging']"
Testability,"## Expected Behavior; You run the same command with 1, 2 or more cores, and the outputfile is the same.; ## Current Behavior; The output file slightly differs. For a small benchmark, I ran blast, diamond and mmseqs with 1, 2 and 3 cores. While blast and diamond produce files with identical MD5 values, mmseqs does not. I checked further if maybe the order of the output is different, but the actual output is slightly different.; In 2 cases I get 162855 lines, in one case 162854 lines. In all combinations 162850 lines are identical, the remaining 4-5 lines are not.; All these hits are in the lower identity range. ## Steps to Reproduce (for bugs); Run a search with 1 or 2 cores.; EDIT: I can't provide the used database, since it's a non-public in-house database.; EDIT2: Does not always seem to happen though :/. ## Your Environment; MMseqs2 Version: 10.6d92c; Intel(R) Xeon(R) CPU E5-2609 v3 @ 1.90GHz; Ubuntu 18.04.4 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277:172,benchmark,benchmark,172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277,1,['benchmark'],['benchmark']
Testability,"## Expected Behavior; assign taxonomy to Metagenome contigs, and the database is created from krakenuniq bacterial database.; ## Current Behavior; tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb ~/04.db/krakenuniq/library/nt-bacteria-dustmasked.fna nt-bacteria-dustmasked --dbtype 2; mmseqs createtaxdb nt-bacteria-dustmasked tmp --ncbi-tax-dump ~/04.db/krakenuniq/taxonomy --tax-mapping-file ~/04.db/krakenuniq/library/nt-bacteria.fna.map; mmseqs createdb BIN_REASSEMBLY/reassembled_bins/bin.18.strict.fa test; mmseqs taxonomy --threads 16 test ~/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked test_res tmp --search-type 3; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 3; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/697:860,test,test,860,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697,2,['test'],['test']
Testability,"## Expected Behavior; cluster all the sequences. ## Current Behavior; some sequences are lost, rather than clustered accordingly . ## Steps to Reproduce (for bugs); easy-linclust fasta_file output_path tmp_folder --min-seq-id 0.5. ## MMseqs Output; easy-linclust roman/seqs/lectins_seq.fasta roman/test/lectins_seq roman/test/tmp --min-seq-id 0.5. MMseqs Version: 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 128; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:298,test,test,298,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,2,['test'],['test']
Testability,## Expected Behavior; mmseqs map to find the most similar sequences between 2 DB; ## Current Behavior; Same sequences repeated as .fasta out; ```; >1; AKDVISAPKPPYYGMDV; >1; AKDVISAPKPPYYGMDV; >1; AKDVISAPKPPYYGMDV; >1; AKDVISAPKPPYYGMDV; >1; AKDVISAPKPPYYGMDV; >1; AKDVISAPKPPYYGMDV; >1; AKDVISAPKPPYYGMDV; ```; ....; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; ```; mmseqs map queryDB resultDB tmp -e 10 --min-seq-id 0.1 . mmseqs filterdb resultDB bestResultDB --extract-lines 20 . mmseqs createsubdb bestResultDB queryDB queryDB_sub; rm -f -- queryDB_sub_h*; mmseqs createsubdb bestResultDB queryDB queryDB_sub_h. awk '{ print $1 }' bestResultDB.[0-9]* | sort -u > subset.list; mmseqs createsubdb subset.list queryDB queryDB_sub. mmseqs convert2fasta mmseqs convert2fasta queryDB_sub test.fasta. ```. ## Context; I tried the solution proposed [here](https://github.com/soedinglab/MMseqs2/issues/392) but I certanly doing something wrong. ; ## Your Environment; MMseqs2 Version: 13.45111,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/743:873,test,test,873,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/743,1,['test'],['test']
Testability,"## Expected Behavior; nident should be greater than 0 and vary between hits. ## Current Behavior; nident is always equal to 0 even for exact matches. ## Steps to Reproduce (for bugs); I used this proteome for testing: https://www.ncbi.nlm.nih.gov/protein?LinkName=nuccore_protein&from_uid=983357513. mmseqs createdb codi.fasta codiDB; mmseqs createindex --threads 6 codiDB .; mmseqs search --threads 6 codiDB codiDB resultDB . -s 1; mmseqs convertalis codiDB codiDB resultDB codi.out --format-output ""query,target,nident,pident,qlen,tlen,qcov,tcov,evalue"". ## Context; I observe the same behavior on our HPC with version 11-e1a1c (self-compiled, I guess) and on my Mac with version 10.6d92c (miniconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/288:209,test,testing,209,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/288,1,['test'],['testing']
Testability,"## Expected Behavior; not sure; ## Current Behavior; cluster is stuck at prefilter stage for > 3 days. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Here is the log printed on the screen:. /home/btschits/apps/MMseqs2/build/bin/mmseqs cluster ../so245_combined_assembly_mmseqDB so245_combined_assembly_mmseq_clustered cluster_tmp --cluster-mode 2 --alignment-mode 3 --cov-mode 1 -c 0.99 --min-seq-id 0.99 --max-seq-len 10000000 --cluster-reassign 1 --threads 40; Tmp cluster_tmp folder does not exist or is not a directory.; Create dir cluster_tmp; cluster ../so245_combined_assembly_mmseqDB so245_combined_assembly_mmseq_clustered cluster_tmp --cluster-mode 2 --alignment-mode 3 --cov-mode 1 -c 0.99 --min-seq-id 0.99 --max-seq-len 10000000 --cluster-reassign 1 --threads 40 . MMseqs Version: 	61ca48883b50714be51fc35fc9b77325ffde53fb; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.99; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.99; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Zdrop 	40; Rescore mode 	0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:273,log,log,273,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['log'],['log']
Testability,"### Expected Behaviour; MMSEQS2 should return only hits with an e-value lower or equal to the maximum threshold set using the -e option in iterative searches. ### Current Behaviour; MMSEQS2 returns also hits with higher e-values. This behaviour is not observed during a non-iterative search, where the e-value maximum threshold is properly applied. ### Steps to Reproduce (for bugs); mmseqs createdb QUERY.fasta queryDB; mmseqs createdb DB.fasta targetDB; mmseqs search queryDB targetDB resultDB tmp --num-iterations 2 --threads 8 -e 1e-20 . ### MMseqs Output (for bugs); LOG file: mmseqs_261118.log; here https://gist.github.com/ChiaraVanni/53a4477436c8c05aa708c2eda90ef6cc. ### Your Environment; Include as many relevant details about the environment you experienced the bug in. Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **7427bfa0d8b7d2b7540cb8b86f37a763be998709**; Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.10.12 and gcc version 5.4.0; Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Running in a machine with 80 cores and 2Tb; Operating system and version: Linux 4.9.0-8-amd64 x86_64, Debian GNU/Linux 9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/137:572,LOG,LOG,572,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/137,2,"['LOG', 'log']","['LOG', 'log']"
Testability,"(-c 0.9 --min-seq-id 0.9)_; `mmseqs easy-linclust duplicate_cluster_test.faa dupe_test tmp --add-self-matches -c 0.9 --min-seq-id 0.9 --max-iterations 1000 -a`. _Cmd8 (-c 0.99 --min-seq-id 0.9)_; `mmseqs easy-linclust duplicate_cluster_test.faa dupe_test tmp --add-self-matches -c 0.99 --min-seq-id 0.9 --max-iterations 1000 -a`. _Cmd9 (-c 1 --min-seq-id 0.9)_; `mmseqs easy-linclust duplicate_cluster_test.faa dupe_test tmp --add-self-matches -c 1 --min-seq-id 0.9 --max-iterations 1000 -a`. ## MMseqs2 _cluster.tsv output; _Cmd1 cluster.tsv output: (-c 0.95 --min-seq-id 0.7)_; Dupe | Dupe; Dupe | Dupe2; Dupe | Dupe3. _Cmd2 cluster.tsv output: (-c 0.95 --min-seq-id 0.8)_; Dupe | Dupe; Dupe | Dupe2; Dupe | Dupe3. _Cmd3 cluster.tsv output: (-c 0.95 --min-seq-id 0.9) **(Issue)**_; Dupe | Dupe; Dupe2 | Dupe2; Dupe3 | Dupe3. _Cmd4 cluster.tsv output: (-c 0.95 --min-seq-id 0.99) **(Issue)**_; Dupe | Dupe; Dupe2 | Dupe2; Dupe3 | Dupe3. _Cmd 5 cluster.tsv output: (-c 0.95 --min-seq-id 1)_; Dupe | Dupe; Dupe | Dupe2; Dupe | Dupe3. _Cmd 6 cluster.tsv output: (-c 0.5 --min-seq-id 0.9) **(Issue)**_; Dupe | Dupe; Dupe2 | Dupe2; Dupe3 | Dupe3. _Cmd7 cluster.tsv output: (-c 0.9 --min-seq-id 0.9) **(Issue)**_; Dupe | Dupe; Dupe2 | Dupe2; Dupe3 | Dupe3. _Cmd8 cluster.tsv output: (-c 0.99 --min-seq-id 0.9) **(Issue)**_; Dupe | Dupe; Dupe2 | Dupe2; Dupe3 | Dupe3. _Cmd9 cluster.tsv output: (-c 1 --min-seq-id 0.9)_; Dupe | Dupe; Dupe | Dupe2; Dupe | Dupe3. ## Context; In the above commands only commands 1,2,5,9 yield the expected result. If I am understanding the parameters correctly shouldn't all the above commands yield the same result when 100% identical sequences are input? We have attempted playing with all of the different modes and parameters (they did yield different albeit incorrect results) but unless -c == 1 or --min-seq-id == 1 or < 0.9 then the identical sequences are not clustering. ## Your Environment; mmseqs easy-linclust was used for the tests above; MMseqs2 Version: 8.fac81",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/206:5234,test,tests,5234,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/206,1,['test'],['tests']
Testability,"); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; al",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:3731,test,test,3731,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,2,['test'],['test']
Testability,)\mmseqs\\bin/hostid: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hostname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/httpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hush: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/id: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/inetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/install: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcalc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcrm: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/kill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall5: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/less: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ln: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logger: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/login: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logread: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpq: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ls: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lsof: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzma: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzop: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzopcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makedevs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makemime: Permission denie,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:6126,log,logger,6126,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['log'],['logger']
Testability,)\mmseqs\\bin/hostname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/httpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hush: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/id: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/inetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/install: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcalc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcrm: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/kill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall5: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/less: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ln: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logger: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/login: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logread: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpq: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ls: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lsof: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzma: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzop: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzopcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makedevs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makemime: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/man: Permission denied;,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:6197,log,login,6197,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['log'],['login']
Testability,)\mmseqs\\bin/hush: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/id: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/inetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/install: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcalc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcrm: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/kill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall5: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/less: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ln: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logger: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/login: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logread: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpq: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ls: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lsof: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzma: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzop: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzopcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makedevs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makemime: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/man: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/md5sum: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mesg: Permission denied; bu,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:6339,log,logread,6339,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['log'],['logread']
Testability,"++.so.6 (0x00007f439e4ad000); > 	libm.so.6 => /lib64/libm.so.6 (0x00007f439e1ab000); > 	libgomp.so.1 => /lib64/libgomp.so.1 (0x00007f439df84000); > 	libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00007f439dd6e000); > 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f439db52000); > 	libc.so.6 => /lib64/libc.so.6 (0x00007f439d790000); > 	libopen-rte.so.12 => /usr/lib64/openmpi/lib/libopen-rte.so.12 (0x00007f439d513000); > 	libopen-pal.so.13 => /usr/lib64/openmpi/lib/libopen-pal.so.13 (0x00007f439d26f000); > 	libdl.so.2 => /lib64/libdl.so.2 (0x00007f439d06a000); > 	librt.so.1 => /lib64/librt.so.1 (0x00007f439ce62000); > 	libutil.so.1 => /lib64/libutil.so.1 (0x00007f439cc5f000); > 	libhwloc.so.5 => /lib64/libhwloc.so.5 (0x00007f439ca24000); > 	/lib64/ld-linux-x86-64.so.2 (0x00007f439ecc6000); > 	libnuma.so.1 => /lib64/libnuma.so.1 (0x00007f439c818000); > 	libltdl.so.7 => /lib64/libltdl.so.7 (0x00007f439c60d000). When I launch:; RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 "" mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32. It just uses 4 CPU cores and doesn't get too far:; Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32 ; ```. MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	32; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34:1438,test,testDB,1438,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34,3,['test'],"['test-', 'test-nr-', 'testDB']"
Testability,"- [x] needs a git submodule of https://github.com/nemequ/simde/ or cmake magic to pull that down; - [x] isnan on clang 10 https://github.com/nemequ/simde/issues/282; - [x] ISO C++ does not allow C99 designated initializers https://github.com/nemequ/simde/issues/287; - [x] ISO C++ forbids compound-literals https://github.com/nemequ/simde/issues/288; - [x] macOS clang, AppleClang 11.0.0.11000033, [has a weird compile error](https://dev.azure.com/themartinsteinegger/edc8daa1-9e01-4171-b135-27e374460be3/_apis/build/builds/592/logs/23) Fixed by upgrading to macOS 11.05 AppleClang 11.0.3.11030032; - [x] GCC+ASan crashes with an [internal error somewhere completely random](https://dev.azure.com/themartinsteinegger/mmseqs2/_build/results?buildId=609&view=logs&j=ab24d926-1cfd-5268-5232-547307163af3&t=f30e022a-6aef-58fb-62a5-07e89b64b206&l=749) https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=961011; - [x] arm64 performance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309:528,log,logs,528,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309,2,['log'],['logs']
Testability,"- |; | a-a | 7199 | 7.43 |; | b-b | 16937 | 12.30 |; | a-b | 4844 | 7.89 |; | b-a | 4963 | 10.20 |; | a*-a* | 10392 | 24.73 |; | b*-b* | 24450 | 43.13 |; | a*-b* | 8621 | 27.14 |; | b*-a* | 8710 | 38.44 |; | a*-b | 4848 | 7.86 |; | b-a* | 8710 | 37.89 |; | a-b* | 8621 | 26.79 |; | b*-a | 4963 | 10.30 |; | (single) a-b* | 8155 | 26.38 |. > *: indexed DB; > single: test in which the `--alt-ali` option was not used (it seem ok). In the above test I am using `-s 7.5`, and should be noted that the difference ar much higher when decreasing the sensitivity.; It should also be noticed that I am using the `blosom62` matrix in the filtering step. I need to run an experiment with thousands of proteomes and would impossible to store all the indexes in advance. ; It would great if you could help in mitigating the effect of non-indexing the target DBs. ## Expected Behavior; Same results (or at least not too different). ## Current Behavior; The number of hits in output are sometimes the half (at the highest sensitivity), and it gets worse at lower sensitivities. ## Steps to Reproduce (for bugs); ### Template commands:; > createdb . `mmseqs createdb <in_name> <in_name.db> -v 0` ; > indexdb . `mmseqs createindex <in_name.db> <tmp_dir_in_name> --threads 2 --search-type 1 -v 0` . > search . `mmseqs search <in_name1.db> <in_name2.db> <raw_out_1-2> <tmp_1-2> -s 7.5 --threads 1 -v 0 --search-type 1 --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --min-ungapped-score 15 --alignment-mode 2 --alt-ali 10` . > convertalis . `mmseqs convertalis <in_name1.db> <in_name2.db> <raw_out_1-2> <blast_out_1-2> -v 0 --format-mode 0 --search-type 1 --format-output query,target,qstart,qend,tstart,tend,bits` . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * MMseqs Version: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249 (but also happens with version 10); * X86 AVX2 Linux binaries; * Operating system and version: tested on different Linux distributions",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/318:2413,test,tested,2413,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318,1,['test'],['tested']
Testability,"----------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:11156,test,test,11156,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,4,['test'],['test']
Testability,"--------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:9390,test,test,9390,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,4,['test'],['test']
Testability,"--format-mode 2; --format-output query,target. ## Expected Behavior. They should produce output with some table format. ## Current Behavior. Neither works. The first dies with:; Unrecognized parameter --format-mode; Did you mean ""--cov-mode""?; Error: Search died. The second dies with:; Unrecognized parameter --format-output; Did you mean ""--max-accept""?; Error: Search died. ## Steps to Reproduce (for bugs); mkdir /tmp/testMMS; mmseqs easy-search GCF_000005845.faa.gz Pfam-A GCF_000005845.pfam-a.mmseqs /tmp/testMMS --comp-bias-corr 0 --alt-ali 5 --threads 1 --format-output query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen. ## MMseqs Output (for bugs). Program call:; easy-search GCF_000005845.faa.gz Pfam-A GCF_000005845.pfam-a.mmseqs /tmp/testMMS --comp-bias-corr 0 --alt-ali 5 --threads 1 --format-output query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	5; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	1; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weigh",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:422,test,testMMS,422,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,3,['test'],['testMMS']
Testability,"-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect: Connection reset by peer in connection to mmseqs.com:443 ; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 42.7M 100 42.7M 0 0 9058k 0 0:00:04 0:00:04 --:--:-- 9904k; ```. ## Context; We have been observing this issue for the past two weeks, which has been arising in one of our package's Azure Pipelines tests. The examples above were reproduced using an Ubuntu server. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): `latest` static version; * Operating system and version:; * For example cases above:; ```; Linux 5.4.0-139-generic #156-Ubuntu SMP x86_64 x86_64 x86_64 GNU/Linux; ```; * Azure image:; ```; Operating System; Ubuntu; 20.04.6; LTS; Runner Image; Image: ubuntu-20.04; Version: 20230507.1; Included Software: https://github.com/actions/runner-images/blob/ubuntu20/20230507.1/images/linux/Ubuntu2004-Readme.md; Image Release: https://github.com/actions/runner-i",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:3813,test,test,3813,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['test'],['test']
Testability,"-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers...; /local/jelvers/Masterthesis/temp//6581086409424530102/blastp.sh: line 86: 8824 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; [Inferior 1 (process 8814) exited with code 01]. **Prefilter module call**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/Mmseqs_output/ . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 30",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:2587,Test,Testdata,2587,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['Test'],['Testdata']
Testability,". # create target db; ""mmseqs"", ""createdb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung for 20 hours until the program was killed. I have attached 2 log files - one for each version of mmseqs2. The log files include all the mmseqs2 output written to stdout. ## Steps to Reproduce (for bugs). conda create -n pharokkaenv pharokka mmseqs2==14.7e284; conda activate pharokkaenv; install_databases.py -d ; pharokka.py -i lambda.fasta -o lambda_out -t 8 . Input file attached . ## MMseqs Output (for bugs); Log files attached with ""correct"" output (13.4511) showing mmseqs2 run 3 times takes approximately 6 mins, vs 14.7e284 which takes 36 minutes to prefilter on the first step, then hangs (for 20 hours). ## Context. ## Your Environment. I have tested this on MAC OSX (intel and M1) and also Linux ubuntu environments with bioconda installations. I get the same issue. [lambda.fasta.txt](https://github.com/soedinglab/MMseqs2/files/9845844/lambda.fasta.txt); [pharokka_mmseqs2_13.45111.log](https://github.com/soedinglab/MMseqs2/files/9845842/pharokka_mmseqs2_13.45111.log); [pharokka_mmseqs2_14_7e284.log](https://github.com/soedinglab/MMseqs2/files/9845843/pharo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/625:2063,log,log,2063,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625,1,['log'],['log']
Testability,". ## Current Behavior; In order to see whether MMseqs2 can really make use of node-level parallelism, I first clustered a dataset of 50 million sequences on a single node with a single MPI task and multiple threads. The command I use for that purpose is:. ```; RUNNER=""srun -n 1 --ntasks-per-node 1"" ./mmseqs-par easy-linclust <fasta-file> <cluster-prefix> <tmp-dir> --min-seq-id 0.7 -c 0.8 --cov-mode 0 --threads 64; ```. This completes in ~34 minutes and has a peak memory usage of 27.9 GB. Now when I change the number of nodes to 4, by using RUNNER=""srun -n 4 ..., it completes in ~49 minutes and still has a peak memory usage of ~27.9 GB. The issue is similar for 16 nodes, i.e., the runtime does not go down as one expects. Is this expected? Am I using the MPI version correctly? It seems like there is no use for utilizing the MPI-mode as it is not efficient in terms of runtime and memory. ## Expected Behavior; I know some components of the clustering pipeline are sequential, and some of them are parallel. But one would logically expect a gain in terms of runtime and/or memory when using multiple nodes. ## MMseqs Output (for bugs); The output for single-node run: https://pastebin.com/waDMWGA3; The output for 4-node run: https://pastebin.com/B7bMaei3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; 61ca48883b50714be51fc35fc9b77325ffde53fb-MPI. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: ; compiler version: OpenMPI 4.0.2, gcc 8.3.0; cmake version: 3.14.4. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Intel Haswell CPU (support for SSE and AVX2), 128 GB system memory. * Operating system and version:; Lightweight linux kernel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/331:1230,log,logically,1230,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/331,1,['log'],['logically']
Testability,". ## Steps to Reproduce (for bugs). Please run this script for example (comparing Thermococcus litoralis and Pyrococcus furiosus proteins, using 3 iterations); #download protein files; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:1809,log,log,1809,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['log'],['log']
Testability,".com/soedinglab/MMseqs2/files/6821435/477fb4bafa.contig-taxonomy.GTDB.log). I don't think it is related to https://github.com/soedinglab/MMseqs2/issues/31 or https://github.com/soedinglab/MMseqs2/issues/447 . The DB seems fine. I processed hundreds of samples using the same MMseqs2 command, and I only had problems in files with one contig. The samples are complicated to assemble, and sometimes I only can recover one contig. ## Current Behavior. When running ; ```; mmseqs easy-taxonomy /vol/cloud/geogenetics/KapK/results/assembly-refined/477fb4bafa.assm.refined.fasta /vol/cloud/geogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target split mode. Searching through 4 splits; Estimated memory consumption: 149G; Target database size: 152631149 type: Aminoacid; Process prefiltering step 1 o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/473:1208,log,log,1208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473,1,['log'],['log']
Testability,".edit.mat > nucleotide.edit.mat.out`:. ```; # Background (precomputed optional): 0.3267 0.3267 0.3267 0.3267 0.00001; # Lambda (precomputed optional): 0.34657; # Avg SeqId (precomputed optional): 0.854; 	A	C	G	T	X; A	2	-3	-3	-3	2; C	-3	2	-3	-3	2; G	-3	-3	2	-3	2; T	-3	-3	-3	2	2; X	2	2	2	2	2; ```. 2. Search sequence against itself with 12 bases replaced with X `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:1438,test,test,1438,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,".gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect: Connection reset by peer in connection to mmseqs.com:443 ; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 42.7M 100 42.7M 0 0 9058k 0 0:00:04 0:00:04 --:--:-- 9904k; ```. ## Context; We have been observing this issue for the past two weeks, which has been arising in one of our package's Azure Pipelines tests. The examples above were reproduced using an Ubuntu server. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): `latest` static version; * Operating system and version:; * For example cases above:; ```; Lin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:3394,test,test,3394,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,2,['test'],['test']
Testability,".so.7 => /lib64/libltdl.so.7 (0x00007f439c60d000). When I launch:; RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 "" mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32. It just uses 4 CPU cores and doesn't get too far:; Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32 ; ```. MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	32; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	/usr/lib64/openmpi/bin/mpirun -np 32; Remove Temporary Files 	false; ```. It doesn't crash, but do not get any further.; Using additional MPI options:; ` RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 --report-bindings --map-by core --bind-to core"" /ngs/software/mmseqs/mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32`. Uses 32 CPU core, but get stuck at the same point.; Using same query and target databases with the regular parallel version, runs in under a minute.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34:3072,test,testDB,3072,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34,3,['test'],"['test-', 'test-nr-', 'testDB']"
Testability,"/9586069750715556969/search_tmp/1133007989511978496/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; test.fa.easy-search.tsv exists and will be overwritten; convertalis tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result test.fa.easy-search.tsv --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . [=================================================================] 2 0s 0ms; Time for merging to test.fa.easy-search.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/target -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/target_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/query -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/query_h -v 3 . Time for processing: 0h 0m 0s 0ms. ```; ## Context; I'm trying to match sequences to each other and not count regions with degenerate bases as mismatches. Basically, I'd like the 2 example sequences to match each other with 0 mismatches. The current command produces an output with 13 mismatches (see output section). I'm mostly concerned about ""N"" bases, but have edited my sequence for ""X"" because that's what the mmseqs sub matrix uses by default. If there's a better way to not count N or X mismatches than supplying a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:12110,test,test,12110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,"/blast/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 64 -v 3 -s 4 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; Threads 	64; Verbosity 	3. Initialising data structures...; Using 64 threads. Use index /junk/databases/mmseqs/nr.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Query database: mmseq-testDB(size=2467); Target database: /junk/databases/mmseqs/nr(size=121935717); Use kmer size 7 and split 0 using split mode 0; tmp/blastp.sh: línea 60: 68389 Excepción de coma flotante $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET_DB_PREF"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Program call:; mmseq-testDB /junk/databases/mmseqs/nr /root/tmp/blast/tmp/pref_4 /root/tmp/blast/tmp/aln_4 --sub-mat blosum62.out --alignment-mode 0 -e 0.001 --min-seq-id 0 -c 0 --target-cov 0 --max-seq-len 32000 --max-seqs 300 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --threads 64 -v 3 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; In",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31:3631,test,testDB,3631,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31,1,['test'],['testDB']
Testability,"0). I also see this output in my error file:; `tmp/1193166584733320518/tmp_taxonomy/17149912652888480377/tmp_hsp1/10699950925961740214/blastp.sh: line 135: 8379 Bus error (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""`. ## Context; I created metagenomic assemblies using megahit and metaSPAdes. I am trying to get MMseqs2 working to do taxonomic classification. I am running on Digital Research Alliance of Canada clusters. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15-6f452; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Loaded as a module on a cluster.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: Unsure. I ran `lscpu` on a login node and got what is shown below, but the memory and CPUs that I had for the job were specified in the slurm job script shown above. ```; lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) CPU E5-2667 v4 @ 3.20GHz; CPU family: 6; Model: 79; Thread(s) per core: 2; Core(s) per socket: 8; Socket(s): 2; Stepping: 1; CPU(s) scaling MHz: 100%; CPU max MHz: 3200.0000; CPU min MHz: 1200.0000; BogoMIPS: 6384.78; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx; pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 d; s_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16; c rdrand lahf_lm abm 3dnowprefetch epb cat_l3 cdp_l3 invpcid_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838:2358,log,login,2358,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838,1,['log'],['login']
Testability,0. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 18s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 32s; - checkReturnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures...; Compute score only.; Using 32 threads.; Calculation of Smith-Waterman alignments.; Time for merging files: 0 h 0 m 0 s. All sequences processed. 6287 alignments calculated.; 6203 sequence pairs passed the thresholds (0.986639 of overall calculated).; 25.2154 hits per query sequence.; Time for alignments calculation: 0 ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:4851,test,test,4851,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:14947,test,test,14947,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,4,['test'],['test']
Testability,"1 => /lib64/libgcc_s.so.1 (0x00007f439dd6e000); > 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f439db52000); > 	libc.so.6 => /lib64/libc.so.6 (0x00007f439d790000); > 	libopen-rte.so.12 => /usr/lib64/openmpi/lib/libopen-rte.so.12 (0x00007f439d513000); > 	libopen-pal.so.13 => /usr/lib64/openmpi/lib/libopen-pal.so.13 (0x00007f439d26f000); > 	libdl.so.2 => /lib64/libdl.so.2 (0x00007f439d06a000); > 	librt.so.1 => /lib64/librt.so.1 (0x00007f439ce62000); > 	libutil.so.1 => /lib64/libutil.so.1 (0x00007f439cc5f000); > 	libhwloc.so.5 => /lib64/libhwloc.so.5 (0x00007f439ca24000); > 	/lib64/ld-linux-x86-64.so.2 (0x00007f439ecc6000); > 	libnuma.so.1 => /lib64/libnuma.so.1 (0x00007f439c818000); > 	libltdl.so.7 => /lib64/libltdl.so.7 (0x00007f439c60d000). When I launch:; RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 "" mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32. It just uses 4 CPU cores and doesn't get too far:; Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32 ; ```. MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	32; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34:1589,test,testDB,1589,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34,3,['test'],"['test-', 'test-nr-', 'testDB']"
Testability,1/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:14594,test,test,14594,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,"1/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe the option ""--cluster-reassign"" is not available for easy-linclust. Is there another option to handle this? . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; * ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * S",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:16635,test,test,16635,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,"1978496/aln tmp/9586069750715556969/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 16 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 0ms; Writing results to: tmp/9586069750715556969/result; [=================================================================] 2 0s 0ms. Time for merging to result: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; test.fa.easy-search.tsv exists and will be overwritten; convertalis tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result test.fa.easy-search.tsv --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . [=================================================================] 2 0s 0ms; Time for merging to test.fa.easy-search.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/target -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/target_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/query -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/query_h -v 3 . Time for processing: 0h 0m 0s 0ms. ```; ## Contex",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:11657,test,test,11657,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,1; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Nucleotide false; Max. results per query 300; Split DB 0; Split mode,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:1965,test,test,1965,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 214,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:1802,test,test,1802,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"28863456989/nucl_split_seq --max-seq-len 65535 --sequence-overlap 0 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Max. sequence length 65535; Overlap between sequences 0; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 15ms; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 320ms; Program call:; extractframes /tmp/11952770628863456989/nucl_split_seq /tmp/11952770628863456989/nucl_split_seq_rev --forward-frames 1 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Forward Frames 1; Reverse Frames 1,2,3; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 5ms; Time for merging files: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 100ms; Program call:; indexdb /tmp/11952770628863456989/nucl_split_seq_rev.dbtype GCF_000967155_db --seed-sub-mat VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 24 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Seed Substitution Matrix VTML80.out; K-mer size 0; Alphabet size 21; Compositional bias 1; Max. sequence length 65535; Mask Residues 1; Mask lower case residues 0; Spaced Kmer 1; Spaced k-mer pattern; Sensitivity 7.5; K-score 0; Check Compatible false; Search type 3; Split DB 0; Split Memory Limit 0; Threads 24; Verbosity 3. Could not open index file /tmp/11952770628863456989/nucl_split_seq_rev.dbtype.index!; Error: indexdb died; ```. ## Context; Bug discovered while using the MMseqs2-app docker image, then tested without the web server. ## Your Environment; * Git commit used: ebddda7ce9d708610eb7b5097917271487a9e459; * MMseqs version used: Docker; * Server specifications: CPU intel xeon silver 4116 (12C/24T) with AVX2 and SSE4 support, 64GB RAM; * Operating system and version: Debian GNU/Linux 9.8 (stretch)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/175:4128,test,tested,4128,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/175,1,['test'],['tested']
Testability,"2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIGGFA; GQLSVQAPFMFAAAINGLAFLVSLFILHETHNANQVSDELKNETIN-ETTSSIREMISPL; SGLLVVFFIIQLIGQIPATLWVLFGEERFAWDGVMVGVSLAVFGLTHALFQ------GLA; AGFIAKHLGER------KAIAVGILADGC---GLFLLAVITQSWMVWPVLLL--LACGGI; TLPALQGIISVRVGQVAQGQLQGVLTSLTHLTAVIGPLVFAFLYSATRETWNGWVWIIGC; GLYVVALIILRFFH-PGRVIHPINKSDVQQRI---------; >db-CARD.1.1.3_geneId-AAD25063.1_desc-tetZ_annot-ARO3000183_taxaName-Corynebacterium.glutamicum_taxaId-1718; ```. Let me know if you need any more context or details, thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94:1783,test,test,1783,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94,2,['test'],['test']
Testability,316799743718053916/newSeqs --use-seq-id 0 --threads 80 --compressed 0 -v 3. Time for processing: 0h 0m 0s 170ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 94ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. [=================================================================] 68.86K 0s 267ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 402ms; Time for processing: 0h 0m 0s 980ms; ===================================================; ======== Search the new sequences against =========; ========= previous (rep seq of) clusters ==========; ===================================================; extractorfs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/search/3739931895554508144/t_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frame,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333:1545,test,tests,1545,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333,2,['test'],['tests']
Testability,"358-369:. https://github.com/gbouras13/pharokka/blob/3b8f7ae207b367366765f482c9dce1dd2cccee80/bin/processes.py#L358 . # create target db; ""mmseqs"", ""createdb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung for 20 hours until the program was killed. I have attached 2 log files - one for each version of mmseqs2. The log files include all the mmseqs2 output written to stdout. ## Steps to Reproduce (for bugs). conda create -n pharokkaenv pharokka mmseqs2==14.7e284; conda activate pharokkaenv; install_databases.py -d ; pharokka.py -i lambda.fasta -o lambda_out -t 8 . Input file attached . ## MMseqs Output (for bugs); Log files attached with ""correct"" output (13.4511) showing mmseqs2 run 3 times takes approximately 6 mins, vs 14.7e284 which takes 36 minutes to prefilter on the first step, then hangs (for 20 hours). ## Context. ## Your Environment. I have tested this on MAC OSX (intel and M1) and also Linux ubuntu environments with bioconda installations. I get the same issue. [lambda.fasta.txt](https://github.com/soedinglab/MMseqs2/files/9845844/lambda.fasta.txt); [pharokka_mmseqs2_13.45111.log](https://github.com/soedinglab/MMseqs2/files/9845842/phar",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/625:1897,log,log,1897,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625,1,['log'],['log']
Testability,"3789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 	0.001; Allow deletions 	false; Add internal id. 	false; Compositional bias 	1; Filter MSA 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Threads 	4; Compress MSA 	false; Summarize headers 	false; Summary prefix 	cl; Omit consensus 	false; Skip query 	false; Gap open cost 	11; Gap extension cost 	1; Compressed 	0; Verbosity 	3. Start computing multiple sequence alignments.; Query database size: 11 type: Aminoacid; Target database size: 20667 type: Aminoacid; [> ] 0.00% 1 eta [======> ] 10.00% 2 etaSegmentation fault (core dumped). Windows 7 static compile (different db/query file):. F:\>mmseqs result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkou; t2/mmseqs_files/out.mm_search plsworkout2/mmseqs_files/out.mm_msa; result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkout2/mmseqs_f; iles/out.mm_search plsworkout2/mmseqs_files/out.mm_msa. MMseqs Version: 4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 0.001; Allow deletions false; Add internal id. false; Compositional bias 1; Filter MSA 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Threads 8; Compress MSA false; Summarize headers false; Summary prefix cl; Omit consensus false; Skip query false; Gap open cost 11; Gap extension cost 1; Compressed 0; Verbosity 3. Start computing multiple sequence alignments.; Query database size: 19 type: Aminoacid; Target database size: 20197 type: Aminoacid; [> ] 0.00% 1 eta; [===> ] 5.56% 2 eta; [=======> ] 11.11% 3 eta; [==========> ] 16.67% 4 eta; [==============> ] 22.22% 5 eta; [==================> ] 27.78% 6 eta; [=====================> ] 33.33% 7 eta; [=========================> ] 38.89% 8 eta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/229:1997,test,testtargetDB,1997,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229,1,['test'],['testtargetDB']
Testability,"386; mmseqs-web-worker_1 | GCGCAG	385; mmseqs-web-worker_1 | AACAGG	323; mmseqs-web-worker_1 | Write ENTRIES (9); mmseqs-web-worker_1 | Write ENTRIESOFFSETS (10); mmseqs-web-worker_1 | Write SEQINDEXDATASIZE (15); mmseqs-web-worker_1 | Write SEQINDEXSEQOFFSET (16); mmseqs-web-worker_1 | Write SEQINDEXDATA (14); mmseqs-web-worker_1 | Write ENTRIESNUM (12); mmseqs-web-worker_1 | Write SEQCOUNT (13); mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence.idx: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 3s 688ms; mmseqs-web-worker_1 | touchdb /opt/mmseqs-web/databases/pdb_rna_sequence ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | MMseqs Version:	e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 47ms; mmseqs-web-worker_1 | 2022/09/22 16:09:14 Process finished gracefully without error; ```. For comparison, logs looked like this when the RNA indexing was working:; ```; mmseqs-web-worker_1 | indexdb /tmp/16248551593497607411/nucl_split_seq /opt/mmseqs-web/databases/pdb_rna_sequence --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 1 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmseqs-web-worker_1 | Write SPACEDPATTERN (23); mmseqs-web-worker_1 | Write DBR1INDEX (5); mmseqs-web-worker_1 | Write DBR1DATA (6); mmseqs-web-worker_1 | Write DBR2INDEX (7); mmseqs-web-worker_1 | Write DBR2DATA (8); mmseqs-web-worker_1 | Write HDR1INDEX (18); mmseqs-web-worker_1 | Write HDR1DATA (19); mmseqs-web-worker_1 | Writ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:13698,log,logs,13698,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['log'],['logs']
Testability,"428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:16050,test,test,16050,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,4,['test'],['test']
Testability,48710735811/clu roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:14467,test,test,14467,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,"50715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/aln tmp/9586069750715556969/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 16 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 0ms; Writing results to: tmp/9586069750715556969/result; [=================================================================] 2 0s 0ms. Time for merging to result: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; test.fa.easy-search.tsv exists and will be overwritten; convertalis tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result test.fa.easy-search.tsv --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . [=================================================================] 2 0s 0ms; Time for merging to test.fa.easy-search.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/target -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/target_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/query -v 3 . Time for processing:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:11497,test,test,11497,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,5776 byte); Substitution matrices...; Time for init: 0 h 0 m 3s. Process prefiltering step 0 of 1. Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Copy 1650981 Entries (9905886 byte); Setup Sizes ; Read IndexTable ... Done; k-mer similarity threshold: 115; k-mer match probability: 0. Starting prefiltering scores calculation (step 0 of 1); Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 18s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 32s; - checkReturnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucle,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:4398,test,test,4398,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"6. I'm using a routine to hierarchical cluster which I remove gradually the redundancy. ; I've got some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90 tcdb_found.db tcdb_found90.db ; mmseqs linclust tcdb_found9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/102:1063,test,test,1063,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102,1,['test'],['test']
Testability,710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:15811,test,test,15811,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,3,['test'],['test']
Testability,774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Copy 1650981 Entries (9905886 byte); Setup Sizes ; Read IndexTable ... Done; k-mer similarity threshold: 115; k-mer match probability: 0. Starting prefiltering scores calculation (step 0 of 1); Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 18s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 32s; - checkReturnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:4526,test,test,4526,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 1.39K 0s 32ms; Time for merging to pref_rescore1_tmp_0: 0h 0m 0s 202ms========> ] 96.68% 1.34K eta 0s; Time for merging to pref_rescore1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 961ms; clust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 1.39K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [=================================================================] 100.00% 1.39K 0s 4ms; Add missing connections; [=================================================================] 100.00% 1.39K 0s 1ms. Time for read in: 0h 0m 0s 32ms; Total time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:6345,test,test,6345,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,3,['test'],['test']
Testability,86)\mmseqs\\bin/httpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hush: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/id: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/inetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/install: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcalc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcrm: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/kill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall5: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/less: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ln: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logger: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/login: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logread: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpq: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ls: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lsof: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzma: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzop: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzopcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makedevs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makemime: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/man: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/md5sum: Permission denied;,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:6267,log,logname,6267,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['log'],['logname']
Testability,"89ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 1.39K 0s 32ms; Time for merging to pref_rescore1_tmp_0: 0h 0m 0s 202ms========> ] 96.68% 1.34K eta 0s; Time for merging to pref_rescore1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 961ms; clust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:5573,test,test,5573,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,4,['test'],['test']
Testability,": /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:1707,Test,Test,1707,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,4,['Test'],['Test']
Testability,":; when a sequence is the >1st ( = 2nd, 3rd, etc.) to appear in a cluster, it will appear again in its own singleton cluster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1235,test,test,1235,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,; Done.; Time for processing: 0h 0m 0s 831ms; Program call:; result2repseq tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_rep --threads 2 -v 3. MMseqs Version:	9375bafabbb1e714404887bcfe6b8ce879092cd5; Threads 	2; Verbosity	3. Start computing representative sequences.; ..........; Time for merging files: 0h 0m 0s 505ms; Time for processing: 0h 0m 1s 206ms; Program call:; result2flat tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_rep tmp/3578692915323364718/req_seq.fasta --use-fasta-header -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Use fasta header	true; Verbosity 	3. Query file is tmp/3578692915323364718/input; Target file is tmp/3578692915323364718/input; Data file is tmp/3578692915323364718/clu_rep; Start writing file to tmp/3578692915323364718/req_seq.fasta; Done.; Time for processing: 0h 0m 0s 724ms; Program call:; createseqfiledb tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_seqs --threads 2 -v 3. MMseqs Version:	9375bafabbb1e714404887bcfe6b8ce879092cd5; Min Sequences	1; Max Sequences	2147483647; HH format 	false; Threads 	2; Verbosity 	3. Time for merging files: 0h 0m 0s 526ms; Time for processing: 0h 0m 1s 303ms; Program call:; result2flat tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_seqs tmp/3578692915323364718/all_seqs.fasta -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Use fasta header	false; Verbosity 	3. Query file is tmp/3578692915323364718/input; Target file is tmp/3578692915323364718/input; Data file is tmp/3578692915323364718/clu_seqs; Start writing file to tmp/3578692915323364718/all_seqs.fasta; Done.; Time for processing: 0h 0m 1s 39ms; ```. ## Your Environment. * The problems is present with releases 5-9375b and 4-0b8cc but not on release 3-be8f6 . ; * Tested with pre-compiled binaries for Linux-AVX2; * Operating system and version: Amazon Linux 2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:25386,Test,Tested,25386,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['Test'],['Tested']
Testability,; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	64; Verbosity 	3; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. /root/tmp/blast; /root/tmp/blast; Program call:; mmseq-testDB /junk/databases/mmseqs/nr /root/tmp/blast/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 64 -v 3 -s 4 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; Threads 	64; Verbosity 	3. Initialising data structures...; Using 64 threads. Use index /junk/databases/mmseqs/nr.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1;,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31:2596,test,testDB,2596,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31,1,['test'],['testDB']
Testability,; Verbosity 3; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/P,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:1755,test,test,1755,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"= -20.0,; max_accept: int = 1000000,; prefilter_mode: int = 0,; s: float = 8,; db_load_mode: int = 2,; threads: int = 32,; ):; #Run mmseqs with a local colabfold database set; #; #db1: uniprot db (UniRef30); #db2: Template (unused by default); #db3: metagenomic db (colabfold_envdb_202108 or bfd_mgy_colabfold, the former is preferred); ; uniref_db = Path(""/store/colabfold/db/uniref30_2202_db""); template_db = Path(""/store/colabfold/db/pdb70_220313""); if filter:; # 0.1 was not used in benchmarks due to POSIX shell bug in line above; # EXPAND_EVAL=0.1; align_eval = 10; qsc = 0.8; max_accept = 100000. used_dbs = [uniref_db]; if use_templates:; used_dbs.append(template_db); if use_env:; used_dbs.append(metagenomic_db). for db in used_dbs:; if not dbbase.joinpath(f""{db}.dbtype"").is_file():; raise FileNotFoundError(f""Database {db} does not exist""); if (; (; not dbbase.joinpath(f""{db}.idx"").is_file(); and not dbbase.joinpath(f""{db}.idx.index"").is_file(); ); or os.environ.get(""MMSEQS_IGNORE_INDEX"", False); ):; logger.info(""Search does not use index""); db_load_mode = 0; dbSuffix1 = ""_seq""; dbSuffix2 = ""_aln""; dbSuffix3 = """"; else:; dbSuffix1 = "".idx""; dbSuffix2 = "".idx""; dbSuffix3 = "".idx"". # fmt: off; # @formatter:off; search_param = [""--num-iterations"", ""3"", ""--db-load-mode"", str(db_load_mode), ""-a"", ""-e"", ""0.1"", ""--max-seqs"", ""10000""]; search_param += [""--prefilter-mode"", str(prefilter_mode)]; if s is not None:; search_param += [""-s"", ""{:.1f}"".format(s)]; else:; search_param += [""--k-score"", ""'seq:96,prof:80'""]. filter_param = [""--filter-msa"", str(filter), ""--filter-min-enable"", ""1000"", ""--diff"", str(diff), ""--qid"", ""0.0,0.2,0.4,0.6,0.8,1.0"", ""--qsc"", ""0"", ""--max-seq-id"", ""0.95"",]; expand_param = [""--expansion-mode"", ""0"", ""-e"", str(expand_eval), ""--expand-filter-clusters"", str(filter), ""--max-seq-id"", ""0.95"",]. run_mmseqs(mmseqs, [""search"", base.joinpath(""qdb""), dbbase.joinpath(uniref_db), base.joinpath(""res""), base.joinpath(""tmp""), ""--threads"", str(threads)] + search_param",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:2376,log,logger,2376,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['log'],['logger']
Testability,"==============================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe the option ""--cluster-reassign"" is not available for easy-linclust. Is there another option to handle this? . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs with",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:16381,test,test,16381,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,=======================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fa,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:14712,test,test,14712,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,===============================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:14831,test,test,14831,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,==========================] 100.00% 854 0s 1ms. Time for read in: 0h 0m 0s 23ms; Total time: 0h 0m 0s 40ms. Size of the sequence database: 854; Size of the alignment database: 854; Number of clusters: 784. Writing results 0h 0m 0s 0ms; Time for merging to clust: 0h 0m 0s 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/94204286487107,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:14123,test,test,14123,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,"Anybody who has to deal with clusters will need to make use of the size distribution at some point. It's not hard to cough up a script to take the cluster file and make it into a cluster size distribution histogram, but it would be better done once in mmseqs itself. Other useful columns for the cluster size distribution would be the percent of genes, the percent of clusters in that bin, and cumulatives on those starting from size 1 (singletons). It would also be useful to calculate the following summary statistics and log them as well as writing them to a JSON file:. - Number of sequences in; - Total number of characters in the sequences; - Average sequence length; - Number of singletons; - Fraction of genes in singletons; - Size of largest cluster; - Fraction of genes in largest cluster; - Modal cluster size (peak of size distribution); - Fraction of genes in modal cluster; - Which space was used (NA or AA); - Run parameters; - processors used; - run times. Thanks for listening.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/404:524,log,log,524,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/404,1,['log'],['log']
Testability,"As I mentioned briefly in Issue #94 when I ran `convertmsa`, to generate an msa database from an input stockholm formatted alignment, the output database had a leading space after the `>` character on the first line, which then caused `msa2profile` to output various ""Invalid"" messages. Removing the leading space as applied in the pull request seems to fix this issue. I don't think my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/96:635,test,testing,635,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96,7,"['TEST', 'test']","['TEST', 'testing', 'tests']"
Testability,"As mentioned [here](https://github.com/soedinglab/MMseqs2/issues/157) I tried to index a 108GB fasta file with 188M sequences (NCBI's nr) in a server with 188GB memory. > mmseqs createdb nr.fa nr.DB; > mmseqs createindex nr.DB tmp --split-memory-limit 126000000 --threads 15; MMseqs2 Version: 7-4e23d. But even setting the `--split-memory-size ` command it's still crashing with me. ; It seem that I need something ~631GB. The `createdb` was finished well without any weirdo message. ; But below follow the log of `createindex`. ```; Program call:; createindex nr.DB tmp --split-memory-limit 126000000 --threads 15 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; indexdb nr.DB nr.DB --sub-mat blosum62.out -k 0 --comp-bias-corr 1 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 2 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --include-headers 1 --check-compatible 0 --split 0 --split-memory-limit 126000000 --threads 15 -v 3 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3. Substitution matrices...; Use kmer size 7 an",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/161:507,log,log,507,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161,1,['log'],['log']
Testability,"As of mmseqs 12.113e3, the amino acid databases available via `mmseqs databases` are:. ```; Name 	Type 	Taxonomy	Url; - UniRef100 	Aminoacid 	 yes	https://www.uniprot.org/help/uniref; - UniRef90 	Aminoacid 	 yes	https://www.uniprot.org/help/uniref; - UniRef50 	Aminoacid 	 yes	https://www.uniprot.org/help/uniref; - UniProtKB 	Aminoacid 	 yes	https://www.uniprot.org/help/uniprotkb; - UniProtKB/TrEMBL 	Aminoacid 	 yes	https://www.uniprot.org/help/uniprotkb; - UniProtKB/Swiss-Prot	Aminoacid 	 yes	https://uniprot.org; - NR 	Aminoacid 	 yes	https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA; ```. ...and I believe that all are quite large and take a long time to download and construct. It would be helpful for testing purposes to have a small database (or databases), especially a small subset database of each `UniRef[0-9]+` database.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/407:705,test,testing,705,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/407,1,['test'],['testing']
Testability,"Co-authored by: Fabian Kloetzl @kloetzl. - improves speed of FASTA file parsing to 2GBs, see https://github.com/lh3/seqtk/pull/123; - all regression tests passed",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/756:149,test,tests,149,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/756,1,['test'],['tests']
Testability,"D or RAM (/dev/shm) does not change the speed.; This happens with the docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLTWQGLIVPDNPPYDKGAFRIEINFPAEYPFKPPKITFKTKIYHPNIDEKGQVCLPVISAENWKPATKTDQVIQSLIALVNDPQPEHPLRADLAEEYSKDRKKFCKNAEEFTKKYGEKRPVD; >Ub; MQIFVKTLTGKTITLEVEPSDTIENVKAKIQDKEGIPPDQQRLIFAGKQLEDGRTLSDYNIQKESTLHLVLRLRGG; EOF; mkdir -p out/tmp; mmseqs createdb mmseqs_in.fasta out/qdb; vmtouch -ldw /path/to/database/uniref30_2202_db*idx*; mmseqs search out/qdb /path/to/database/uniref30_2202_db out/res out/tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. ```. ## MMseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support fo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:2541,log,log,2541,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,1,['log'],['log']
Testability,"DB /hdd/mmtestoutput3/mmseqs_files//out.mm_search /hdd/mmtestoutput3/mmseqs_files//out.mm_msa . MMseqs Version: 	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 	0.001; Allow deletions 	false; Add internal id. 	false; Compositional bias 	1; Filter MSA 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Threads 	4; Compress MSA 	false; Summarize headers 	false; Summary prefix 	cl; Omit consensus 	false; Skip query 	false; Gap open cost 	11; Gap extension cost 	1; Compressed 	0; Verbosity 	3. Start computing multiple sequence alignments.; Query database size: 11 type: Aminoacid; Target database size: 20667 type: Aminoacid; [> ] 0.00% 1 eta [======> ] 10.00% 2 etaSegmentation fault (core dumped). Windows 7 static compile (different db/query file):. F:\>mmseqs result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkou; t2/mmseqs_files/out.mm_search plsworkout2/mmseqs_files/out.mm_msa; result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkout2/mmseqs_f; iles/out.mm_search plsworkout2/mmseqs_files/out.mm_msa. MMseqs Version: 4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 0.001; Allow deletions false; Add internal id. false; Compositional bias 1; Filter MSA 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Threads 8; Compress MSA false; Summarize headers false; Summary prefix cl; Omit consensus false; Skip query false; Gap open cost 11; Gap extension cost 1; Compressed 0; Verbosity 3. Start computing multiple sequence alignments.; Query database size: 19 type: Aminoacid; Target database size: 20197 type: Aminoacid; [> ] 0.00% 1 eta; [===> ] 5.56% 2 eta; [=======> ] 11.11% 3 eta; [==========> ] 16.67% 4 eta; [=============",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/229:1859,test,testtargetDB,1859,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229,1,['test'],['testtargetDB']
Testability,"DDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKG. >S6; ANINAVTKIGNTPLHT. >S7; IVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPIDDFSKSSDLLLCYLRYKFNGSLNYYVLYKLLTKGSDPNCVDEDGLTSLHYYCKHISAFHESNYYKSKSHTKMRAEKRFIYAIIDHGANINAVTKIGNTPLHTYLQQYTKHSPRVVYALLSRGADTRIRNNLNCTPIMEYIKNDCATGHILIMLLNWHEQKYGKLQKEEGQHLLYLFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHKSKLVDKALNKLESTIDSQSRLSYLPPEIMRNIITKLSDYHLNSMLYGKNHY. >S8; LFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHK; ```. ## MMSeqs Tested Command ; ### Test 1 (--min-seq-id 1); mmseqs cluster test_mmseqs/DB test_mmseqs/seqid1_v2 seqid1_tmp_v2 --min-seq-id 1. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1 |; | S2 | S2 |; | S3 | S3 |; | S5 | S5 |; | S6 | S6 |; | S7 | S4, S7 |; | S8 | S8 |. ### Test 2 (--min-seq-id 1, -c 1.0, and --cov-mode 1); mmseqs cluster test/DB test/seqid1_test seqid1_tmp --min-seq-id 1 --cov-mode 1 -c 1.0. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1, S3, S2 |; | S4 | S4, S5, S7, S8 | ; | S6 | S6 | . ** PS: ; 1. This result is close to expected. However, I have no idea why the mmseqs does not group the S6 within the S4 cluster since S6 is a partial sequence of S4. ; 2. There are no differences in the results if reducing the -c from 1.0 to 0. . With these results, I am not sure if I use the correct parameter settings. Kindly advise me on the corresponding parameter to set for the MMSeqs2 cluster that is equivalent to CDHIT in order to have a non-redundant sequenc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/601:2703,Test,Tested,2703,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/601,2,['Test'],"['Test', 'Tested']"
Testability,"Dear MMSeqs2 devlopers, . I was a user of CDHIT to remove the duplications in a dataset. However, it is not ready for big data. So, I come across MMSeqs2 which can be used as an alternative to CDHIT from this paper [(https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6026198/)](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6026198/). . My command for CDHIT: ; cd-hit -i `<input fasta file>` -o `<output fasta file>` -c `1.00`. I have tested with a few parameters of MMSeqs clustering. Unfortunately, it does not work as expected. ; ## example fasta file ; (consisting of 8 sequences - S2 and S3 are partial identical sequences of S1 while S5, S6, S7, and S8 are partial identical sequences of S4; expected final cluster representative: S1 and S4); ```; >S1; MKQYIVLACMCLVAAAMPTSLXXXXSSCTEEENKHHMGIDVIIKVTKQDQTPTNDKICQSVTEVTETEDDEVSEEVVKGDPTTYYTIVGAGLNMNFGFTKCPKILSISESSDGNTVNTRLSSVSPGQGKDSPAITREEALAMIKDCEMSIDIRCSEEEKDSDIKTHPVLGSNISHKKVSYKDIIGSTIVDTKCVKNLEFSVRIGDMCEESSELEVKDGFKYVDGSASEGATDDTSLIDSTKLKACV. >S2; MKQYIVLACMCLVAAAMPTSLXXXXSSCTEE. >S3; SEEEKDSDIKTHPVLGSNISHKKVSYKDIIGSTIVDTKCVKNLEFSVRIGDMCEESSELEVKDGFKYVDGSASEGATDDTSLIDSTKLKACV. >S4; MDEMDEIVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPIDDFSKSSDLLLCYLRYKFNGSLNYYVLYKLLTKGSDPNCVDEDGLTSLHYYCKHISAFHESNYYKSKSHTKMRAEKRFIYAIIDHGANINAVTKIGNTPLHTYLQQYTKHSPRVVYALLSRGADTRIRNNLNCTPIMEYIKNDCATGHILIMLLNWHEQKYGKLQKEEGQHLLYLFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHKSKLVDKALNKLESTIDSQSRLSYLPPEIMRNIITKLSDYHLNSMLYGKNHYKYYP. >S5; MDEMDEIVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKG. >S6; ANINAVTKIGNTPLHT. >S7; IVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPID",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/601:429,test,tested,429,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/601,1,['test'],['tested']
Testability,"Dear MMseqs2 developers,; Thank you for making this excellent tool available. I'm using MMseq2s on an HPC cluster using the Slurm scheduler, and I'm trying to determine the best way to utilize as many cores per node as possible; ## Expected Behavior; MMSeqs2 launches 1 MPI task per node, and uses OpenMP to spawn as many threads as there are cores available on each node (48); ## Current Behavior; 1 MPI task per node is launched, but the number of threads running on any node is capped at 12, regardless of what value argument to `--threads` is provided; ## Steps to Reproduce (for bugs). Job script:. ```; #!/usr/bin/env bash. #SBATCH --job-name=mmseqs; #SBATCH --output=mmseqs_gcc12_test2.log; #SBATCH -N 8; #SBATCH --ntasks-per-node=1; #SBATCH --cpus-per-task=48; #SBATCH --time=08:00:00; #SBATCH -p medium. module load slurm; module load openmpi/gcc12.1.0/4.1.4. export PATH=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45/bin:$PATH. DBDIR=/lustre/projects/carlson-group/mmseqs2-project/DBs. RUNNER=""mpirun -pernode -np 8"" mmseqs search human_prot.db $DBDIR/UniRef50 human_prot_results_test2 ./tmp; ```. ## MMseqs Output (for bugs); ```. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:693,log,log,693,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['log'],['log']
Testability,"Dear Sir:; I want to try mmseqs2 cluster as cd-hit-est. ; cd-hit-est -i $CLUSTERS.IN -c 0.95 -T $MC_CPU -M 0 -G 0 -aS 0.9 -g 1 -r 1 -d 0 -o $CLUSTERS.OUT > $CLUSTERS.log ; Please kindly suggest me the corresponding parameter to set for mmseqs cluster and lincluster.; Thanks a lot.; Xianghui. ![image](https://user-images.githubusercontent.com/4928483/84471749-8e533880-acb8-11ea-81fa-d84ffe264628.png). ## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/317:166,log,log,166,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/317,1,['log'],['log']
Testability,"Dear developers,. I am trying to perform clustering on the set of closely-related sequences of retrotransposons (n = 736,771). The module ""easy-linclust"" works fine for this dataset. But whenever I used the ""cluster"" module (and also the ""easy-cluster"" module), I got a long list of error messages such as the following. Error: there must be an error: 98829 deleted from 373971 that now is empty, but not assigned to a cluster. I am unsure why these error messages occur and whether they could affect my clustering results or not. Could you please help me to solve this issue? Thank you in advance. MMseqs version: 96d452cb432fc4674991a48952deaf24d1787e77 (self-compiled); Full log: ; [full.log](https://github.com/soedinglab/MMseqs2/files/5384506/full.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/363:678,log,log,678,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363,3,['log'],['log']
Testability,Dummy PR (to trigger tests),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/880:21,test,tests,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/880,1,['test'],['tests']
Testability,Dummy PR to trigger regression test workflows (copy of #873 ),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/880:31,test,test,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/880,1,['test'],['test']
Testability,"Following [this tutorial](https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-target-profile-database-from-pfam) to use PFAM database with mmseqs. So, I follow the steps below:; ```; curl http://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/Pfam-A.full.gz > Pfam-A.full.gz ; mmseqs convertmsa Pfam-A.full.gz pfam_msa_db ; mmseqs msa2profile pfam_msa_db pfam_profile --match-mode 1 --threads 10 ; mmseqs createindex pfam_profile tmp -k 6 -s 7.5 ; # test case; mmseqs createdb ../sig_trans/work/SBP_4/pbps.neighbors.fa pbps.neighbors.DB; mmseqs search pbps.neighbors.DB pfam_profile result tmp -k 6 -s 7.5 2>&1 > mmseqs.search.log ; ```; Everything runs nicely until the `mmseqs search` which seams not use the parameters of the `mmseqs createindex`. The `search` died at prefilter step as described in the log below:. ```; Program call:; search pbps.neighbors.DB pfam_profile result tmp -k 6 -s 7.5 --threads 10 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 10; Verbosity 3; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum seque",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189:458,test,test,458,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189,3,"['log', 'test']","['log', 'test']"
Testability,For some reasons mmseqs cluster fails during clustering of the attached protein fasta. Commands:; ```; mmseqs createdb test2.faa test2.db; mmseqs cluster test2.db test2.clu tmp --min-seq-id 0.9; ```; fasta file and log are attached in gist; https://gist.github.com/matveykolesnik/7b4376daba0a1f5846747a7b4bb33d81,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/181:215,log,log,215,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/181,1,['log'],['log']
Testability,"GAAVGYWRFRDTPIGMRYPPHLVRQLIISGLLYLVTLIGVIYLLEYNLNRSIEIILVLLPALPGIWFLVSLGRAIASLDELQRFIQLEGIAIGFGITAMAALTYGLLGMAGVPQVSWMYVPVVMVFGWFLGKMWTLWRYR*; >E6GnE9; >PYRss2; MKKAMATSKSQFKTMDEYIATFPENVRDVLEKLRRTIMESAPKAEETISYGMPAFKLNGKSLVYFAAWKNHIGFYPAGPSAIKAFKKELSPFRQAKGTIQFPLDKPIPIDLVKKIVKFRVEENESKKK*; ```. Where in original input file, we see:. ```; >PJB17I; MQKRSICVFCGASDGIDSAYGAAADTLGRLIASHKMRLVYGAGDVGLMGRVARAAQKDGAATFGVIPKHLVNWEVGKTDLTTYIITENMHERKKVMFMNSDAIALLPGGAGSLDEFFEVLTWAQLGLHDKPIVLININSYWGPLLALLDHVIAQGFAKENIKDFFQIAVTPEEAMSKLA*; ```. ... and elsewhere in file ... ```; >E6GnE9; MNNKTGIQPIDEYIAAFPEEVQEKLISIYRLIAGDVPEATVKISYGMPTFVLNGNLVHFAAFKNHIGFYPAPSGIQAFQEELAGYKTSKGAIQFPLDKPVPYELISKITAFRVAENVKNN*; ```. It seems that PJB17I should cluster with E7HKRc (they're ~50% identical) but then I would expect the output to be:. ```; >PJB17I; >PJB17I; MQKRSICVFCGASDGIDSAYGAA...; >E7HKRc; MFKRSVCVFCGSRKGRNPAHE...; ```. Based on latest documentation. ## Steps to Reproduce (for bugs). Just the commands (see full log below):. `user@user:~$ ./mmseqs/bin/mmseqs createdb experiments/small_sample.fa experiments/small.mm.db`; `user@user:~$ ./mmseqs/bin/mmseqs linclust experiments/small.mm.db experiments/small50.mm.db experiments/tmp/ --min-seq-id 0.5`; `user@user:~$ ./mmseqs/bin/mmseqs createseqfiledb experiments/small.mm.db experiments/small50.mm.db experiments/small50_seq`; `user@user:~$ ./mmseqs/bin/mmseqs result2flat experiments/small.mm.db experiments/small.mm.db experiments/small50_seq experiments/small50_seq.fa`. ## MMseqs Output (for bugs). Full session output:. ```; user@user:~$ ./mmseqs/bin/mmseqs createdb experiments/small_sample.fa experiments/small.mm.db; Converting sequences; [24948] 0s 72ms; Time for merging to small.mm.db_h: 0h 0m 0s 37ms; Time for merging to small.mm.db: 0h 0m 0s 16ms; Database type: Aminoacid; Time for merging to small.mm.db.lookup: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 204ms; user@user:~$ ./mmseqs/bin/mmseqs linclust experiments/small.mm.db experimen",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:1965,log,log,1965,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['log'],['log']
Testability,"Hello . I am having an issue while trying to create profiles from alignments. I am using NOG trimmed alignments, only a few of them. ; I convert them to stockholm first with esl-reformat from HMMER ; esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; Then :; mmseqs convertmsa COG0016.sto COG0016_db; mmseqs msa2profile COG0016_db COG0016_profile. At the last step, for the profile creation I get an error message : ; Could not open COG0016_profile_seq_h.index.126 for writing!. Here are the logs : [COG0016.log](https://github.com/soedinglab/MMseqs2/files/2465789/COG0016.log). Whichever file I am using I always get this particular index 126. Also I used sudo for permission it does not change anything. Well, there is also a full collections of empty files appearing... just around 1021. ## Steps to Reproduce (for bugs); I am adding all intermediary files, though github doesn't let me upload things with exotic extensions, so I had to rename all of them by appending .txt at the end. wget http://eggnogdb.embl.de/download/eggnog_4.5/data/NOG/NOG.trimmed_algs.tar.gz; tar -xzf NOG.trimmed_algs.tar.gz; mv NOG_trimmed_algs/NOG.COG0016.clustalo_trimmed.fa ../; [NOG.COG0016.clustalo_trimmed.fa.txt](https://github.com/soedinglab/MMseqs2/files/2465875/NOG.COG0016.clustalo_trimmed.fa.txt); esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; [COG0016.sto.txt](https://github.com/soedinglab/MMseqs2/files/2465876/COG0016.sto.txt); mmseqs convertmsa COG0016.sto COG0016_db; [COG0016_db.txt](https://github.com/soedinglab/MMseqs2/files/2465877/COG0016_db.txt); [COG0016_db.index.txt](https://github.com/soedinglab/MMseqs2/files/2465879/COG0016_db.index.txt); mmseqs msa2profile COG0016_db COG0016_profile. It would be cool if you could help me with that. Best,. Seb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/128:511,log,logs,511,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/128,3,['log'],"['log', 'logs']"
Testability,"Hello! I am trying to set up a target database, with all the reference sequences that I want to test my query database about (as per the instructions I found [here](https://mmseqs.com/latest/userguide.pdf)). I am trying to use all of GTDB as my target -- I already have it all downloaded on a remote server, so I didn't want to use the mmseq database utility to re-download it. I tried running the following:; `; mmseqs createdb $(ls bacteria/) $(ls archaea/) tmp`. Where the archaea and bacteria subdirectories contain FASTA files with all protein sequences for each representative genome. Understandably (as there are thousands of genomes), this caused mmseqs to complain that there were too many arguments. The next thing I try is going to be to concatenate everything into a single FASTA file, and then run the same command. However, this file is going to be huge, and I suspect I might run into problems with this as well. Does anyone know of a good way to do this? . Thanks in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/798:96,test,test,96,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/798,1,['test'],['test']
Testability,"Hello, . I am trying to cluster some nucleotide sequences that are circularly permuted. To this end, I am calling `--wrapped-scoring 1` but am encountering a problem (that does not happen when `--wrapped-scoring 1` is omitted) that seems to be due to the `--rescore-mode`. Here's an example command:; `mmseqs cluster perm_DB wrapped_perm_DB_clu tmp --rescore-mode 0 --min-seq-id 0.8 --wrapped-scoring 1`. it fails at a `rescorediagonal` step, citing: `ERROR: wrapped scoring is only allowed with RESCORE_MODE_HAMMING`. Further, specifying `--rescore-mode 0` (which should be the hamming mode) does not fix the issue, indeed, none of the `--rescore-modes` appear to help. Here's an example full output of the above command being run: https://gist.github.com/Zheludev/f567fdad8ea7d2761ec4fab681b211a5. This error does not occur when `mmseqs linclust --wrapped-scoring 1` is used, but in a test case, the `linclust` seems to lack the sensitivity I require - successfully clustering some permuted sequences together but not all, even if all permutations retain 100% sequence identity (upping the `--kmer-per-seq` 100x doesn't help either).. I am running this on linux with ample resources and on version 13.45111. I would greatly appreciate any help with this issue,. Thanks. IZ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/509:887,test,test,887,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509,1,['test'],['test']
Testability,"Hello, ; I want to use MMseqs2 to cluster nucleotide sequences from different patients. I use WSL on windows with MMseqs2 version 13-45111+ds-2 by compiling from source. Firslty, I have created separate fasta files using python from an original dataframe containing nucleotide sequences and their IDs. Then, I placed the resulting fasta files in WSL under user/MMseqs2/build/tests and ran the following command: ""mmseqs createdb tests/output1.fasta test/DB1"" while in the ""MMseqs2"" root. However, I get the following error message: ""Cannot open test/DB1.source for writing"". Can you please help me? I apologise in advance if the problem is basic and I've made a mistake in the installation or execution procedure.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/725:375,test,tests,375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/725,4,['test'],"['test', 'tests']"
Testability,"Hello,. First of all thank you for making such an amazing program, secondly I was wondering if you could provide some advice on how to handle a very large query database. I have several terabytes that I would like to check against the nr. Currently I am using the easy-taxonomy workflow, I have loaded about 1/15th of my data as a proof of concept. However as you will see in the log below this will take quite some time. My main questions are: is this expected behaviour and how am I able to speed this up?. ## Current Behavior; LSBATCH: User input; mmseqs easy-taxonomy ./sample.fastq.gz ./nr ./result ./tmp -s 0.5. MMseqs Version: 	13.45111; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	26; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary pa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422:380,log,log,380,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422,1,['log'],['log']
Testability,"Hello,. First, thank you for the fantastic work on mmseqs2, its super fast! I think I’ve come across an issue where exact matches arent being detected by the mmseqs2 search algorithm. . ## Expected Behavior; Exact matches hit eachother. ## Current Behavior; When a subset of sequences from a reference database are searched against the database, a surprisingly large fraction of proteins do not return themselves as their best hit. The severity of the problem depends on the database size, in the example below 2.8% of proteins do not hit themselves, but when I came across this issue I was generating a larger database where using the same test 31% of proteins were not hitting themselves at all. This result does not change if sensitivity is increased to the maximum (-s 8.5). I find this behaviour concerning given you’d expect an exact matches to be returned in a relatively small database. ## Steps to Reproduce (for bugs); If I grab 10 random genomes ([genome_proteins.tar.gz](https://github.com/soedinglab/MMseqs2/files/1444710/genome_proteins.tar.gz)) from NCBI and create a reference database using their proteins, and use one of these genomes as the query database:; ```; cat *faa > pooled.faa. mmseqs createdb \; 	pooled.faa \; 	reference_DB. mmseqs createdb \; 	GCF_000352185.1_protein.faa \; 	query_DB; ```; Then search query against the reference using default settings, and convert this to a blast-like output:; ```; mkdir tmp . mmseqs search \; 	query_DB \; 	reference_DB \; 	result_DB \; 	tmp . mmseqs convertalis \; 	query_DB \; 	reference_DB \; 	result_DB \; 	result_DB.m8; ```. and grab the top hit for each protein (i.e. first listed):. ```; for i in `cat result_DB.m8 | awk '{print $1}' | uniq `; 	do grep -m 1 -w ^$i result_DB.m8; done > result_DB.top_hits.m8; ```; Then, when we check the results in R:; ```; library('data.table'); d = fread('result_DB.top_hits.m8'); # Check if query matches the reference sequence ID; d$self_match = d$V1 == d$V2. # Check percentage of total ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/48:641,test,test,641,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/48,1,['test'],['test']
Testability,"Hello,; I'm running `mmseqs search` on Travis virtual machine for integration test purpose.; The issue I have is that mmseqs requires more memory than it's available on the machine.; The dataset I'm using consists of 10 sequences, where each is 100 nucleotides long.; Is there a possibility to overcome this behaviour?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb dna.fasta queryDB; mmseqs createdb dna.fasta targetDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99; ```. ## MMseqs Output (for bugs); ```; Error executing process > 'search (1)'. Caused by:; Process `search (1)` terminated with an error exit status (1). Command executed:. mmseqs createdb query.1.fasta queryDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G; mmseqs createtsv queryDB targetDB outputDB chunk_alignment_tsv. Command exit status:; 1. Command output:; Omit consensus 568767/qfalse; Min codons in orf 	30; Max codons in length uery_seq32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode _seqs_sp2; Orf start mode a:VTML801; Forward frames corr 1 -1,2,3; Reverse frames 1.5 --th1,2,3; Translation table 	1; Translate orf de 0; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query se a com1; Search type 	3; Number search iterations 	1; Start sensitivity work/ac/4; Search steps 	1; Run a seq-profile search in slice modeging to false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false; ; search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G ; ; MMseqs Version: 	6d92cd21676ccc36531f2852f7eb747f6389435f; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	3; E-value thresho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/253:78,test,test,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253,1,['test'],['test']
Testability,"Hi all!. Thank you again for the mmseq2 software and the detailed explanation in the documentation. I would like to get some advice on running CDHIT2 within MMseq2. #recommendation-To suppress fragments from becoming representative sequences, it is recommended to use --cluster-mode 2 in conjunction with --cov-mode 1; `~/miniconda3/bin/mmseqs cluster ${OUT_DIR}/testplasmidDB ${OUT_DIR}/testplasmidDB_cdhit_clu ${TMP1}/ --cluster-mode 2 --cov-mode 1 -c 0.8`. Based on the recommendation in the documents folder, I should use --cov mode 1 with --cluster-mode 2 (CDHIT2-based clustering). Is this understanding correct?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/734:363,test,testplasmidDB,363,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/734,1,['test'],['testplasmidDB']
Testability,"Hi all,. I was trying for the first time to run MMseqs to assign taxonomy. Just to test it I used a set of short reads as input and tried to annotate it against the uniref100 db. Everything works fine but I'm having problems in the last step of the process. ## Expected Behavior. ` mmseqs taxonomy readsDNA10 uniref_db result /tmp -s 6 `. should generate a result file with the assigned taxonomy. ## Current Behavior. MMseqs Version: 60b77df37df55c3984870760591facbb361c3939; ORF filter 1; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Taxonomy output mode 0; Majority threshold 0.5; Vote mode 1; LCA ranks; Column with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 6; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/669:83,test,test,83,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669,1,['test'],['test']
Testability,"Hi all,. if I run the following `mmseqs taxonomy` command I get for my protein sequence the `Clostridium AM magnum` hit. ```; mmseqs taxonomy queryDB /vol/scratch/databases/mmseqs2/gtdb/out/gtdb_database test.faa.gz tmp --lca-ranks superkingdom,phylum,class,order,family,genus,species,subspecies -c 0.8 --max-seqs 300 --max-accept 50 --cov-mode 0 -e 0.001 --e-profile 0.01 -s 6 --threads 28 --blacklist """". mmseqs createtsv queryDB 14_First_11_21_S2_binned.gtdb.taxresults.database test.taxonomy.tsv --threads 28; ```. test.taxonomy.tsv output:; ```; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 30313 species Clostridium AM magnum Bacteria;Bacillota A;Clostridia;Clostridiales;Clostridiaceae;Clostridium AM;Clostridium AM magnum;uc_Clostridium AM magnum; ```. If I repeat the same with `mmseqs search` I get following hits:. ```; mmseqs search queryDB /vol/scratch/databases/mmseqs2/gtdb/out/gtdb_database test.faa.gz tmp --max-seqs 300 --max-accept 50 --cov-mode 0 -e 0.001 --e-profile 0.01 -s 6 --threads 28; mmseqs convertalis queryDB /vol/scratch/databases/mmseqs2/gtdb/out/gtdb_database test.faa.gz mmseqs.out.tsv; ```. mmseqs.out.tsv output:; ```; uery target pident alnlen mismatch gapopen qstart qend tstart tend evalue bits qlen tlen qcov tcov; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_JH601103.1_106 88.200 163 19 0 1 163 1 163 1.803E-90 301 164 164 0.994 0.994; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_FMWM01000002.1_685 49.700 154 76 0 7 159 5 158 6.046E-36 144 164 170 0.933 0.906; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_FLQT01000003.1_544 49.200 154 77 0 7 159 5 158 2.131E-35 143 164 167 0.933 0.922; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_LT707417.1_163 49.100 154 77 0 7 159 5 158 2.921E-35 142 164 167 0.933 0.922; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 JAEXBU010000001.1_1 49.000 154 78 0 7 159 5 158 4.002E-35 142 164 167 0.933 0.922; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_OPYI01000",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/859:204,test,test,204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/859,4,['test'],['test']
Testability,"Hi everyone,. ## Expected Behavior. I would to construct clustering or align sequences with `cluster` or `search`. I'm following the example of [uniclust](https://github.com/soedinglab/uniclust-pipeline/blob/master/uniclust_workflow.sh) to create different family. . ## Current Behavior. When I try to align my sequences from a subdatabase, the `prefiler` stay at the `index table : fill` step. At the begin I though to a memory problem, because my code work on a little dataset (100 000 proteins) but not on biggest (3 billions). So I add `--split-memory-limit`. On one test it was working but not on the other (maybe by chance). . ## Steps to Reproduce (for bugs). `mmseqs prefilter $DB_name $DB_name ""$TMP/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 2 --split-memory-limit 250G --threads 32. mmseqs align $DB_name $DB_name ""$TMP/pref"" ""$TMP/align"" -c 0.8 --alignment-mode 2 --min-seq-id 0.8 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647. mmseqs clust $DB_name $DB_name ""$TMP/align"" ""$TMP/clust"" --cluster-mode 0 --threads 32. awk '{ print $1 }' ""$TMP/clust.index"" > ""$TMP/clust_order"". mmseqs createsubdb ""$TMP/clust_order"" $DB_name ""$subDB"". mmseqs prefilter ""$subDB"" ""$subDB"" ""$TMP2/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 5 --split-memory-limit 250G --threads 32. mmseqs align ""$subDB"" ""$subDB"" ""$TMP2/pref"" ""$TMP2/align"" -c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647`. ## MMseqs Output (for bugs). MMseqs Version: 8ea08f0c75b9f08049fd8f01eb65f90d6fbdd93d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 300; Split database 0; Split mode 2; Split memory limit 250G; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exac",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/382:571,test,test,571,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382,1,['test'],['test']
Testability,"Hi mmseq team,. I need some help in updating a previous mmseq based (near complete) clustered db (A) with additional sequences (B). My mmseq run for A, using easy-cluster, timed out at the stage of moving result files and deleting temporary files, a log and resulting files list is attached.; [mmseq.earthbiome.fna.2tb.log.gz](https://github.com/soedinglab/MMseqs2/files/5187248/mmseq.earthbiome.fna.2tb.log.gz); [resultfiles.txt](https://github.com/soedinglab/MMseqs2/files/5187249/resultfiles.txt). Now I have additional sequences as set B that I want to use to update set A to perform clustering and updating the final database. mmseq GitHub documentation says about updating a database as:. mmseqs createdb DB_trimmed.fasta DB_trimmed; mmseqs cluster DB_trimmed DB_trimmed_clu tmp. To update the clustering DB_trimmed_clu with the new version of your database DB_new:. mmseqs createdb DB.fasta DB_new; mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_new_updated DB_update_clu tmp. My worry is if If I cluster bigger dataset A again, it will take quite a few days, as in the last case the job was terminated on a 3 Tb memory machine after 7 days, without completing the last step of moving results and deleting temp files. In summary I need help in 1. saving or moving important result files and safely remove temporary files. and 2. a correct way of updating and clustering my dataset B with database A. Many Thanks,. IA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348:250,log,log,250,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348,3,['log'],['log']
Testability,"Hi there, . I encountered a weird behavior when trying to run createdb on an HPC cluster (see below). It looks like machines with less than <= 64GB RAM are unable to run createdb properly while higher RAM machines are (the input file is attached). Does it make sense or maybe I'm missing something? What are the minimum RAM requirements for running mmseqs2 (couldn't find it in the program docs)? Btw, these 2 machines use the same storage so it shouldn't be the issue. I appreciate your assistance. Thanks!. This is the exact command I'm trying to run:; [64GB RAM machine]$ mmseqs createdb ~/test/outputs/01_ORFs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt ~/test/outputs/02_dbs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic -v 3. MMseqs Version: 	3513001d33301f7eaaf58e60a1376488ff017354; Database type 	0; Shuffle input database	true; Createdb mode 	0; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [6162] 0s 561ms; Illegal instruction. [128GB RAM machine]$ mmseqs createdb ~/test/outputs/01_ORFs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt ~/test/outputs/02_dbs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic -v 3. MMseqs Version: 	3513001d33301f7eaaf58e60a1376488ff017354; Database type 	0; Shuffle input database	true; Createdb mode 	0; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [6162] 0s 651ms; Time for merging to GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic_h: 0h 0m 0s 356ms; Time for merging to GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic: 0h 0m 0s 489ms; Database type: Nucleotide; Time for merging to GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.lookup: 0h 0m 0s 14ms; Time for processing: 0h 0m 1s 861ms. [GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt](https://github.com/soedinglab/MMseqs2/files/4609960/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/310:593,test,test,593,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310,4,['test'],['test']
Testability,"Hi there,. I runned mmseqs cluster on my dataset of 5,061,557 protein sequences using these 3 command lines (MMseqs2 Version: 9f493f538d28b1412a2d124614e9d6ee27a55f45). ```; mmseqs createdb 3600genomes.4pub.cleaned.faa 3600genomes.4pub.cleaned.faa.mmseqsDB >mmseqs_createdb.log. mmseqs cluster 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB_clu tmp --threads 48 -s 7.5 -c 0.5 --cov-mode 0 --max-seqs 5000 -e 0.001 --cluster-mode 0 >mmseqs_cluster.log. mmseqs createtsv 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB_clu 3600genomes.4pub.cleaned.faa.mmseqsDB_clu.tsv >mmseqs_createtsv.log; ```. When I had a look of the final tsv file (3600genomes.4pub.cleaned.faa.mmseqsDB_clu.tsv), I got two more sequences (5,061,559 instead of 5,061,557). Looking in details 4 new sequences was added:; RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1_0; RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1_1; GWA2_OP3_45_18_gwa2_scaffold_308_1_1; GWA2_OP3_45_18_gwa2_scaffold_308_1_0. whereas 2 sequences were removed:; 'RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1'; 'GWA2_OP3_45_18_gwa2_scaffold_308_1'. looks like mmseqs added a _0 or _1 suffix to the names of the two sequences missing. I'm pretty sure that there are no redundant sequence names in my fasta file dataset (I checked it out). Is there an explanation for these suffix ? . many thanks . Raph",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/97:274,log,log,274,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/97,3,['log'],['log']
Testability,"Hi there,. I see that there are tests in `src/tests`, but there is no `make test` target or mention of tests in the README. Is there a recommended way of running the tests?. Thanks, ben.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/25:32,test,tests,32,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/25,5,['test'],"['test', 'tests']"
Testability,"Hi!. I copied the tutorial from the wiki into a Jupyter notebook, and configured binder to be able to run it. Here is an example: [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/luizirber/MMseqs2/tutorial_in_binder?filepath=tutorial%2Ftutorial.ipynb). ## Notes. - I'm building MMseqs2 from master, but you can also pick a specific tag to put in the binder link. ## TODO. - [ ] Link in README.md? (or at least back in the wiki?); - [ ] Tutorial from wiki failed for me because `--report-mode` is missing in the bioconda package?; - [ ] Preload data during the `postBuild` step in binder? Not sure about this one, since it changes the tutorial a bit, but avoids redownloading everything during runtime.; * Need to at least preload the taxdump, I think binder is blocking the download (is it an FTP link? [binder](https://github.com/binder-examples/getting-data/blob/4c9deceab9e4fbe095e704a3aa11671321e0584f/README.md#large-public-files) blocks FTP downloads...); - [ ] Clean up outputs (don't want to spoil what is the mystery pathogen!); - [ ] Fix path to logo in the intro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/250:1083,log,logo,1083,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/250,1,['log'],['logo']
Testability,"Hi, . I'd wish to use clusthash for a quick clustering of protein sequences. . On the principle it works fast and fine, but after processing the clusthashdb files with createseqfiledb I get an inconsistent output sequence cluster file:; when a sequence is the >1st ( = 2nd, 3rd, etc.) to appear in a cluster, it will appear again in its own singleton cluster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:644,test,test,644,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,"Hi, I think there is some inconsistency in `extractalignedregion` module to generate database with regions. I'm trying to cluster aligned regions belonging to a db. ```; mmseqs search id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN /tmp/ --threads 40 -s 7.5 -a -e 1e-10 --alt-ali 1 &> allvsall.search.log ; mmseqs convertalis id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.tsv --threads 40 ; mmseqs extractalignedregion id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.SEQ --threads 40; mmseqs cluster pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ.CLU /tmp/ -e 1e-10 -c 0 -a -s 7.5 --threads 40 ; ```. But it fails in the last step with this message. ```; rescorediagonal pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 1e-10 -c 0.5 -a 1 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 204.52K 0s 215ms; Time for merging files: 0h 0m 0s 94ms; Time for processing: 0h 0m 0s 845ms; clust pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 /tmp//1456503536827778696/linclust/7100099902620488817/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Sequence db size != result db size; Error: Pre-clustering step died; Error: linclust died; ```. I think it is happening because of the number of files generated by the `extractalignedregion` module.; If it isn'",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/210:366,log,log,366,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/210,1,['log'],['log']
Testability,"Hi, We are using mmseqs2 for the protein sequence clustering and it has been great! ; However, recently, we found for one of the fasta files we tried to cluster, the total input sequence number does not match the cluster output (the members). ; When looking at the log, we found there are some sequences got truncated, which may have cause the problem? ; Do you have any suggestion on why this occur and which parameters we could try to fix the issue? Also, the input fasta file is already de-replicated. ; Attached is the run log for mmseq2. ; [log_clu.txt](https://github.com/soedinglab/MMseqs2/files/4382578/log_clu.txt); Thank you very much!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/291:265,log,log,265,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/291,2,['log'],['log']
Testability,"Hi, while benchmarking your tool I came across an issue clustering with `--cov-mode 1`. Clusterable pairs remain in the representative set that should be found by the search workflow. Steps to reproduce this using release 14 and the astral95 set (http://scop.berkeley.edu/downloads/scopeseq-2.08/astral-scopedom-seqres-gd-sel-gs-bib-95-2.08.fa):. ```; mmseqs cluster astral95 out . --cov-mode 1 -c 0.8 --max-seqs 1000 --threads 64 -s 6.0; # self-search the representatives; mmseqs search reps reps reps.self . --cov-mode 1 -c 0.8 --max-seqs 1000 --threads 64 -s 6.0; mmseqs convertalis reps reps reps.self reps.self.tsv; awk '{ if($1!=$2) print }' reps.self.tsv | wc -l; 1231; ```. Running the same command lines using release 11 and `--cluster-mode 2` results in 9 hits instead of 1231. Looks like a bug or am I not understanding something?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/664:10,benchmark,benchmarking,10,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/664,1,['benchmark'],['benchmarking']
Testability,"Hi,. I really like Linclust, which makes it possible to cluster genes within linear time. For my dataset with 1.1G genes, it seems impossible to get it done by using CD-HIT. Linclust opens a door to cluster genes at this scale. After couple of trials, I have a little concern with the sensitivity. First, I used Linclust to cluster my genes. Around 1.2% genes were reduced. This ratio seems a little low compared to the results by CD-HIT, which reduced ~10% genes.; Then I splited the results of Linclust and used CD-HIT to double check the results. To my suprise, a further ~9.5% genes were reduced. So it seems the sensisitivity of Linclust may be an issue. I wondered if there is a way to improve sensitivity. The commands I have tested are as follows. I tried to adjust --kmer-per-seq to 80. The results were exactly the same with the default value. BTW, average protein length is 110aa. Appreciate. mmseqs linclust all_protein_merge_95.db all_protein_final_95 tmp --threads 100 --cov-mode 1 -c 0.9 --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 1T&& \. mmseqs createsubdb all_protein_final_95 all_protein_merge_95.db all_protein_final_95_rep && \. mmseqs convert2fasta all_protein_final_95_rep all_protein_final_95_rep.fasta. mmseqs linclust all_protein_merge_95.db all_protein_final_95_m80 tmp --threads 50 --cov-mode 1 -c 0.9 --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 600G --kmer-per-seq 80 && \. mmseqs createsubdb all_protein_final_95 all_protein_merge_95.db all_protein_final_95_m80_rep && \. mmseqs convert2fasta all_protein_final_95_rep all_protein_final_95_m80_rep.fasta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365:733,test,tested,733,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365,1,['test'],['tested']
Testability,"Hi,. I'm using the mmseqs hosted in linuxbrew version 3-be8f6. I'm using a routine to hierarchical cluster which I remove gradually the redundancy. ; I've got some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/102:933,test,test,933,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102,2,['test'],['test']
Testability,"Hi,; I want to run ""mmseqs easy-rbh"" on all pairs of a large dataset of genomes (let's say 100 genomes, so 10,000 pairs). I tested on 1 pairs and it took 27 seconds to run. I thought to use the modules instead of the easy workflow to make it faster - what I did is:; mmseqs createdb <protein_fasta1>; mmseqs createdb <protein_fasta2>; mmseqs rbh <protein_fasta1_db> <protein_fasta2_db> alnOffsettedDB tmpDir; mmseqs convertalis <protein_fasta1_db> <protein_fasta2_db> alnOffsettedDB output_m8. The advantage of this is that I do only once the ""createdb"" operations for all genomes. And indeed, the rbh+convertalis commands took 17 seconds to run, which is faster than 27 seconds, and very significant when multiplied by 10,000 genome pairs. But the problem is that the outputs are different - the output of ""easy-rbh"" had 100 more pairs than the output of my implementation. Can you please help me fix my implementation? or explain how to use the easy-rbh but with pre-computed databases?. thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/777:124,test,tested,124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777,1,['test'],['tested']
Testability,"Hi,; here is the log for the error I reported in https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357820039. Many thanks; Antonio. ## Expected Behavior. MMseqs2 should find the query in Uniref90 database . ## Current Behavior. MMseqs2 fails with `***free(): invalid pointer: 0x0000000000ccb6d8 ***` during the **prefilter**. ## Steps to Reproduce (for bugs). Query file: [query.fasta.gz](https://github.com/soedinglab/MMseqs2/files/1633833/query.fasta.gz); Target file: ftp://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref90/uniref90.fasta.gz. ```; export LIBC_FATAL_STDERR_=1; mmseqs createdb QUERY query.fasta.gz; mmseqs createdb DB uniref90.fasta.gz; mmseqs search QUERY DB resultsDB tmp --threads 64 2>&1 | tee search.log; ```. ## MMseqs Output (for bugs); [search.log](https://github.com/soedinglab/MMseqs2/files/1633824/search.log). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; **31e1fddc9b9368570bb39be3051232d4e64f7ae9**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; **self-compiled**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: ; **gcc version 5.4.0** and **cmake version 3.9.4**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; CPU: **Intel(R) Xeon(R) CPU E7-4820 v4 @ 2.00GHz**; Memory: **2TB**; * Operating system and version:; **Debian 3.16.43-2+deb8u5 (2017-09-19) x86_64 GNU/Linux**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/57:17,log,log,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/57,4,['log'],['log']
Testability,"Hi. ## Expected Behavior; When using `taxonomy` to annotate a contig, mmseqs2 should gracefully exit if there are not hits when doing the search; ## Current Behavior. At the moment it exits with an error when `Query database size: 0` ; Full log [here](https://gist.github.com/genomewalker/e5b05deb965660e275a39a8153dab9e9); ```; Query database size: 0 type: Aminoacid; Estimated memory consumption: 151G; Target database size: 43032414 type: Aminoacid; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 43.03M 4m 11s 993ms; Index table: Masked residues: 327874438; Index table: fill; [=================================================================] 43.03M 11m 31s 69ms; Index statistics; Entries: 10015666182; DB size: 67075 MB; Avg k-mer size: 7.824739; Top 10 k-mers; DFEQLPH	65289; NVPGWSP	65148; FRYAFPS	64963; RYYVLGW	64817; VDRLNTQ	63812; WRLDFLN	62949; TVDGDFS	62609; NKTDFVQ	61859; QDWVQIP	61316; LDGAYVP	59471; Time for index table init: 0h 16m 9s 488ms; Time for processing: 0h 16m 22s 538ms; lcaalign /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/433:241,log,log,241,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433,1,['log'],['log']
Testability,"Hi. I am having some strange behavior when using the easy-taxonomy with a query with only one contig. Here you can find the [contig](https://github.com/soedinglab/MMseqs2/files/6821433/477fb4bafa.assm.refined.fasta.gz) and the [log](https://github.com/soedinglab/MMseqs2/files/6821435/477fb4bafa.contig-taxonomy.GTDB.log). I don't think it is related to https://github.com/soedinglab/MMseqs2/issues/31 or https://github.com/soedinglab/MMseqs2/issues/447 . The DB seems fine. I processed hundreds of samples using the same MMseqs2 command, and I only had problems in files with one contig. The samples are complicated to assemble, and sometimes I only can recover one contig. ## Current Behavior. When running ; ```; mmseqs easy-taxonomy /vol/cloud/geogenetics/KapK/results/assembly-refined/477fb4bafa.assm.refined.fasta /vol/cloud/geogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/473:228,log,log,228,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473,2,['log'],['log']
Testability,"Hi. I was trying to search single queries against NCBI NR just for test. ; Somehow, I got just a few results ~450 results by a query. The point is, the lowest e-value is too low ~1e-50. I've got no error message. Then, I think I'm doing something wrong in `createindex`.; Probably I need to change some parameters as `--max-seqs`. For example, I used this query:; ```; >WP_066948057.1 AAA family ATPase [Microtetraspora fusca]; MRKVPLPEPVSAALTDALDQLRLAVEDLHFGLDIPGAEEARKAQAAVLAQLEDYVIPRVHMSTAPALIVVAGSTGAGKST; LVNTLAAQRVSTTGVRRPTTGTPVLVCHPDDHEWFAEGDLLGGLTRLERPVEGVGTDSVVLSTTERLPPGVALLDTPDID; SVVEEHHEIAHRMLDAADMWVFVTTASRYADAPSWNLLRLAKERGARLVIVLSRVPEKSRDVIVKHFGRMLDEYGLADAE; RFVIKETTVTEGRLPDKEVSELRMWLAHLSVDDERRAAAVRTTLNGVLDSFRNRVPALARHLETQVALRADLRSDVDAAY; MGALADIDEATRNGSLLRGEVLARWQDFAGSGDLIRTLQLRRGGKGGQRGPQRARALRTAIRNALESVINSAAERAAEEV; VVRWRQRAGAGDRLAATPGLGRSSDEATQRTSRAIGAWQDHVTELIRTEGVTKRSVARLVSFDVESLALIFTVSLLGYGA; TDVSSGRGAGALPQRLLRALLGAESLRNISAKARSDLRARIGMVFDEETLRYVDELDGAGIPDEAAATRLYQATYNLEVA; R; ```. The NR was prepared with; ```; mmseqs databases NR nr tmp; mmseqs createindex nr tmp; ```. And the search was performed like this; ```; mmseqs easy-search query.fa nr result tmp; ```. The same query with blastp has returned me 5000 results using `-max_target_seqs 5000`. https://github.com/soedinglab/MMseqs2/wiki#disk-space. Do I need to change the parameters in `createindex` ?. I'd like to maximize the number of results for a e-value threshold. As returning all results down to 1e-3 of e-value or other value I choose. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/300:67,test,test,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/300,1,['test'],['test']
Testability,"Hi. Is mmseqs deterministic? When running linclust on a large FASTA file of proteins, one would expect to get very similar clusters when rerunning the same command on the same fasta file (with default linclust parameters, with —min-seq-id 0.95 -c 0.8). Input: fasta file with ~500mio *nearly* identical sequences (size slowly incrementing, order of sequences may change). Also tested with exact same sequences where order of sequences changed. . ## Current Behavior. Notice 10-20% of clusters have changed after each run. . Version: latest daily, ubuntu 20.04, 96 core amd server. Any tricks to produce stable clusters? Kmers per seq, sorting the sequences, etc?. Many thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/663:377,test,tested,377,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/663,1,['test'],['tested']
Testability,"Hi; I am trying to compile the MPI version of MMseqs2 and I am getting the following [error](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) . ## Expected Behavior; Should compile without errors; ## Current Behavior; Fails with:; ```; src/CMakeFiles/mmseqs-framework.dir/build.make:1598: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```; ## Steps to Reproduce (for bugs); ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; make; ```; ## MMseqs Output (for bugs); Full error log [here](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) ; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): fe2b746e63519424f565b4fbeb4ca5dba905adc7; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; GCC: gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10); OPENMPI: (OpenRTE) 1.10.2; CMAKE: 3.5.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel Xeon Processor (Skylake, IBRS) with 256GB (); * Operating system and version: Ubuntu 5.4.0-6ubuntu1~16.04.10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/158:888,log,log,888,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/158,1,['log'],['log']
Testability,"Hi; we are having several problems with the `clusterupdate` workflow on 39ee37f97ab065a3763ee10b834b3e6e25aae491-MPI. ## Expected Behavior; The `clusterupdate` workflow should update existing clusters and the number of sequences should match OLDDB+NEWDB; ## Current Behavior; The workflow has problems in some of the steps:. 1) Most probably related to the new behavior of not merging files, the logic [here](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L218) fails to create the `updatedClust` when concatenating the old cluster results with the new hits. When the workflow is on its [final step](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L271) and has to concatenate the old clusters with the new ones, fails. 2) In our run, we are missing ~200K new sequences that had a hit after the search against the old cluster representatives but it seems to be lost in the `swapresults` [step](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L202) . Thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/199:396,log,logic,396,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/199,1,['log'],['logic']
Testability,"Hi; we are having some problems using the MPI version with commit 39ee37f97ab065a3763ee10b834b3e6e25aae491. Thank you; Antonio. ## Expected Behavior; MPI version should use all threads in each of the nodes for prefilter. ## Current Behavior; MPI only uses all threads in one node and one thread in the rest. It works as expected on release 7-4e23d and has the wrong behavior on 39ee37f97ab065a3763ee10b834b3e6e25aae491. ## Steps to Reproduce (for bugs); The command we use in both cases is:; ```{bash}; export OMPI_MCA_btl=^openib; export OMP_NUM_THREADS=28. RUNNER=""mpirun --mca btl_tcp_if_include ens3 -n 10 --map-by ppr:1:node --bind-to none "" ""${MMSEQS}"" clusterupdate ""${SDIR}""/marine_hmp_db_03112017 ""${SDIR}""/mg_gtdb_orfs_db ""${SDIR}""/marine_hmp_db_03112017_clu ""${DIR}""/mg_gtdb_update/mg_gtdb_db_052019 ""${DIR}""/mg_gtdb_update/mg_gtdb_db_052019_clu ""${DIR}""/mg_gtdb_update/tmp --min-seq-id 0.3 -s 5 --cov-mode 0 -c 0.8; ```. ## MMseqs Output (for bugs); release [7-4e23d](https://gist.github.com/genomewalker/96cfc0c4754cd4f2cd1ce6925576c876) log; commit [39ee37f](https://gist.github.com/genomewalker/8a83a8707dae2bc3179df730a5b695b7) log. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" 39ee37f97ab065a3763ee10b834b3e6e25aae491; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc 5.4 and open MPI 1.10.2; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/vol/attached/opt/MMseqs2-7-4e23d ..; ```; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): cloud system (10 instances, BiBiGrid) with Intel Xeon Processor (Skylake, IBRS) with 28 vCPUs and 256G of memory; * Operating system and version: Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/198:1051,log,log,1051,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/198,2,['log'],['log']
Testability,"I created a playground repository for testing mmseqs functions. Repo link: [matchy233/MMseqs-playground](https://github.com/matchy233/MMseqs-playground). In `printprofile.cpp` in that repo, I wrote the following lines to extract the profile sequences and store them in a vector:. ```c++; // reader is a DBReader<unsigned int> of DbType::HMM_PROFILE; for (size_t i = 0; i < reader.getSize(); i++); {; const char *seqData = reader.getData(i, thread_idx);; size_t querySeqLen = reader.getSeqLen(i);; seq.mapSequence(i, i, seqData, querySeqLen);; std::string realSeq;; seq.extractProfileSequence(seqData, *subMat, realSeq);; if (realSeq.length() != querySeqLen) {; Debug(Debug::ERROR) << ""Error: sequence length does not match.\n"";; Debug(Debug::ERROR) << ""Expected equence length: "" << querySeqLen << ""\n"";; Debug(Debug::ERROR) << ""Actual sequence length: "" << realSeq.length() << ""\n"";; EXIT(EXIT_FAILURE);; }; results.push_back(realSeq);; }; ```. And then print then randomly:. ```c++; Debug(Debug::INFO) << ""Randomly print profile sequences: \n"";; // randomly sample 20 sequences to print; for (size_t i = 0; i < 20; i++); {; size_t idx = std::rand() % allProfileSeqs.size();; Debug(Debug::INFO) << allProfileSeqs[idx] << ""\n"";; }; ```. I expect the extarcted profile sequences to have the same length as `querySeqLen`. However, the length of `realSeq` differs from `querySeqLen` greatly. . ## Expected Behavior. Program executes normally. 20 random extracted profile sequences get printed out. ## Current Behavior. The program failed at checking `realSeq.length() != querySeqLen`. The two values differ greatly.; Changing `extractProfileSequence()` to `extractProfileConsensus()` also causes the same erroneous behavior. ## Steps to Reproduce (for bugs). Navigate to `matchy233/MMseqs-playgrond/data` and run the following command to make a profile database:. ```shell; mmseqs createdb query_new.fasta querydb ; mmseqs databases UniProtKB/Swiss-Prot swissprot; mmseqs search querydb swissprot resultd",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/567:38,test,testing,38,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567,1,['test'],['testing']
Testability,"I encountered an error while executing the command cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ... My cmake version is 3.28.0, and gcc version 7.3. The error message I received is as follows:. -- The CXX compiler identification is GNU 7.3.0 ; -- The C compiler identification is GNU 7.3.0 ; -- Detecting CXX compiler ABI info ; -- Detecting CXX compiler ABI info - failed ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ - broken ; CMake Error at /usr/local/share/cmake-3.28/Modules/CMakeTestCXXCompiler.cmake:60 (message): ; The C++ compiler; ""/home/anaconda3/envs/AlphaFlow/bin/c++"" ; is not able to compile a simple test program. ; It fails with the following output:; Change Dir: '/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz'; Run Build Command(s): /usr/local/bin/cmake -E env VERBOSE=1 /usr/bin/gmake -f Makefile cmTC_8b7b3/fast ; /usr/bin/gmake -f CMakeFiles/cmTC_8b7b3.dir/build.make CMakeFiles/cmTC_8b7b3.dir/build; gmake[1]: Entering directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; Building CXX object CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o ; /home/anaconda3/envs/AlphaFlow/bin/c++ -o CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -c /home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz/testCXXCompiler.cxx ; Linking CXX executable cmTC_8b7b3 ; /usr/local/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8b7b3.dir/link.txt --verbose=1 ; /home/anaconda3/envs/AlphaFlow/bin/c++ -rdynamic CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -o cmTC_8b7b3 ; collect2: fatal error: cannot find 'ld' compilation terminated. ; gmake[1]: *** [cmTC_8b7b3] Error 1 ; gmake[1]: Leaving directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; gmake: *** [cmTC_8b7b3/fast] Error 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/816:736,test,test,736,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/816,5,['test'],"['test', 'testCXXCompiler']"
Testability,"I generated the index files for some Uniprot databases:. ```; mmseqs createdb <databases.fasta.gz> input/targetDB; mmseqs createindex input/targetDB tmp; ```. This step has generated a bunch of ""targetDB.idx.0,1,2...14 ""(each is 52GB), and a ""targetDB.idx.dbtype"" + ""targetDB.idx.index"". It seems there should be only one ""targetDB.idx"" file generated. However, that file was not there although it says in the last few lines of the log ""Time for merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My quest",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/757:432,log,log,432,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757,2,['log'],['log']
Testability,"I have noticed that in recent versions (from v10) the number of hits generated by `search` can be substantially different when not indexing the input databases (especially the target). . It should be noted that also the execution times are substantially different. I tested most of the possibles combinations using a single CPUs, and symmarized the results in the table below: . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a-a | 7199 | 7.43 |; | b-b | 16937 | 12.30 |; | a-b | 4844 | 7.89 |; | b-a | 4963 | 10.20 |; | a*-a* | 10392 | 24.73 |; | b*-b* | 24450 | 43.13 |; | a*-b* | 8621 | 27.14 |; | b*-a* | 8710 | 38.44 |; | a*-b | 4848 | 7.86 |; | b-a* | 8710 | 37.89 |; | a-b* | 8621 | 26.79 |; | b*-a | 4963 | 10.30 |; | (single) a-b* | 8155 | 26.38 |. > *: indexed DB; > single: test in which the `--alt-ali` option was not used (it seem ok). In the above test I am using `-s 7.5`, and should be noted that the difference ar much higher when decreasing the sensitivity.; It should also be noticed that I am using the `blosom62` matrix in the filtering step. I need to run an experiment with thousands of proteomes and would impossible to store all the indexes in advance. ; It would great if you could help in mitigating the effect of non-indexing the target DBs. ## Expected Behavior; Same results (or at least not too different). ## Current Behavior; The number of hits in output are sometimes the half (at the highest sensitivity), and it gets worse at lower sensitivities. ## Steps to Reproduce (for bugs); ### Template commands:; > createdb . `mmseqs createdb <in_name> <in_name.db> -v 0` ; > indexdb . `mmseqs createindex <in_name.db> <tmp_dir_in_name> --threads 2 --search-type 1 -v 0` . > search . `mmseqs search <in_name1.db> <in_name2.db> <raw_out_1-2> <tmp_1-2> -s 7.5 --threads 1 -v 0 --search-type 1 --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --min-ungapped-score 15 --alignment-mode 2 --alt-ali 10` . > convertalis . `mmseqs convertalis <in",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/318:267,test,tested,267,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318,3,['test'],"['test', 'tested']"
Testability,I just compiled mmseqs2 from latest source in a AVX2 machine and got the following error: . ```; **$ grep -c '>' test.fa**; 50; $ mmseqs createdb test.fa test.db; Program call:; test.fa test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Max. sequence length 32000; Split Seq. by len true; Use fasta header false; Offset of numeric ids 0; Verbosity 3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; **$ mmseqs createindex test.db**; Program call:; test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Sub Matrix blosum62.out; K-mer size 0; Alphabet size 21; Max. sequence length 32000; Split DB 0; Spaced Kmer 1; Threads 40; Verbosity 3. Substitution matrices...; Can not fit databased into 65536 byte. Please use a computer with more main memory.; ```; same happened using the linux avx2 binaries... but not with the sse4.1 binaries,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/9:113,test,test,113,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/9,7,['test'],['test']
Testability,I tried [cluster using profiles](https://github.com/soedinglab/MMseqs2/wiki#how-to-cluster-using-profiles) using this [test dataset](https://github.com/soedinglab/MMseqs2/files/2765258/subset.txt). I performed this procedure:. > mmseqs createdb subset.fa subset.db; > mmseqs prefilter subset.db subset.db subset.prefilter.db -s 8.5; > mmseqs align subset.db subset.db subset.prefilter.db subset.align.db --min-seq-id 0.9; > mmseqs clust subset.db subset.align.db subset.clust.db; > ; > mmseqs createsubdb subset.clust.db subset.db subset.90.db; > mmseqs prefilter subset.90.db subset.90.db subset.90.prefilter.db -s 8.5; > mmseqs align subset.90.db subset.90.db subset.90.prefilter.db subset.20.aling.db --min-seq-id 0.2 ; > mmseqs clust subset.90.db subset.20.aling.db subset.20.clust.db; > ; > mmseqs mergeclusters subset.db final_clu subset.clust.db subset.20.clust.db ; > mmseqs createtsv subset.db subset.db final_clu final_clu.tsv; > mmseqs result2profile subset.db subset.db final_clu final_clu.profile ; > mmseqs search final_clu.profile final_clu.profile_consensus final_clu.profile.DB2 tmp --add-self-matches ; > mmseqs clust final_clu.profile final_clu.profile.DB2 final_clu.profile.clu ; > mmseqs createtsv final_clu.profile final_clu.profile.clu final_clu.profile.clu.tsv. In the end I got this [meaningless tsv](https://github.com/soedinglab/MMseqs2/files/2765314/final_clu.profile.clu.txt). I didn't understand this tsv which is different from those created with simple cluster of proteins. I'd like to know if I did something wrong or how to understand this file. Thanks in advance,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/151:119,test,test,119,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/151,1,['test'],['test']
Testability,I wanted to make visualization of a profile. I converted the profile to a pssm file and wanted to visualize it with e.g. weblogo. Does your pssm file follow any format definition or do I have to create the logo using a custom script?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/99:206,log,logo,206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/99,1,['log'],['logo']
Testability,"I was trying to use clusterupdate to update a clustering (DB_trimmed_clu) build from DB_trimmed (a library of proteins) to DB_clusterupdate from a extended version of the library (DB_new) with 2 sequences overlap. However, the program is not able to finish and I get the error:. mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; mv: rename tmp/input_* to tmp/search/input_*: No such file or directory. Although the program is able to continue until the merging of the updated clusterings (see log below). I also get a random number of warnings (depending on the execution) pointing out that I am using DNA, but I am not. For instance:. WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence. I attach the log of the cluster update call:. `mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp &> update_log.txt`. > Program call:; > DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:581,log,log,581,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,2,['log'],['log']
Testability,"I wondering to know a simple thing about search tool. ; Since I read the [mmseqs paper](https://academic.oup.com/bioinformatics/article/32/9/1323/1744460) I was too interested and start to use it about 1 year with really good results. ; Recently I start to use to iterative searches, since the [wiki](https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter) report higher sensitivity of MMseqs compared with PSI-Blast as reported by this graph. . I wasn't able to reproduce this results, first because I have no access to dataset used to do it and at least I didn't find the parameters used in MMseqs2profile. . So I am just trying to do some different tests against different databases (NCBI nr, PDB, Uniprot50 20 ...) but I yet didn't find any parameter which de sensitivity of MMseqs with 3 or 4 iterations are higher than PSI-Blast. ; So my questions are: ; __Which are the best parameters on MMseqs search keep closer or better than default parameters used on PSI-Blast (NCBI reference)?__. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/106:669,test,tests,669,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/106,1,['test'],['tests']
Testability,"I would like to find the closest human protein sequence for any given query. Often the query sequences are short (10aa). To test if mmseq could help with that, I created a fasta file that contains: ; 1) 10 protein sequences from the filtered swissprot dataset to include just human samples (aka, swissprot_human); 2) 10 short sequences created through sampling one segment of 10aa from the first 10 human sequences . The resulting sequences are illustrated in this [csv](https://docs.google.com/spreadsheets/d/1F_0krK2EAW-siYEheJbwTXaHUxy3gKRR9VAcY_kCHBE/edit?usp=sharing) (I couldn't upload the csv, so I am sharing a link. I hope you can access it). . You will notice that the same query sequence has a different evalue between swissprot and swissprot_human, which I assume plays a role in the reduced number of matches against swissprot. How can I ensure the search results are consistent for the two datasets? . Thank you so much for the help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/827:124,test,test,124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/827,1,['test'],['test']
Testability,"I'm currently testing linclust using the easy-linclust workflow with very small datasets (100 / 1000 sequences). Each sequence is a nucleotide sequence, on average, 3000 basepairs long. So using 20 kmers, and an automatically generated kmer size (of 17) must find overlaps between these two sequences. And yet I see several sequence pairs that have 1-5 mismatches between them (0.1% error rate) that are missed and classified as single member clusters. They should not be disqualified by the min-seq-id or -c values that I'm using (of 0.99), which are stringent in the general case. Is there anything I could use to increase sensitivity at this stage?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/489:14,test,testing,14,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489,1,['test'],['testing']
Testability,"I'm running `mmseqs map`, using a simple test run command: `mmseqs map --threads 24 -s 2 -c 0 MY_queryDB MY_targetDB MY_outDB MY_tmp_dir`, and I'm getting the following output + error:. ```; mseqs map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/; Program call:; map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	2; Compositional bias 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern; Local temporary path; Threads 	24; Verbosity 	3; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/gl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:41,test,test,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['test'],['test']
Testability,I'm running the command: `mmseqs easy-taxonomy taxdb output tmp -e 1e-5 -s 6 --blacklist --tax-lineage 1 --majority 0.75` along with a custom database and taxonomy. However many of the taxonomy results have <0.75 agreement (fewer than 75% of genes with taxonomy agree with the assigned taxon). I've attached the output and log file. Update: I tried running `mmseqs easy-taxonomy` using various values for `--majority` and the outputs are identical.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/609:323,log,log,323,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/609,1,['log'],['log']
Testability,"I'm trying to align a custom representation of a protein together with a corresponding substitution matrix. . [aminobert_embedding_no_tokens_mat.txt](https://github.com/soedinglab/MMseqs2/files/9975230/aminobert_embedding_no_tokens_mat.txt) (change file extension to "".out""); [aminobert_embedding_no_tokens_u_seq.txt](https://github.com/soedinglab/MMseqs2/files/9975231/aminobert_embedding_no_tokens_u_seq.txt) (change file extension to "".fasta""). ## Expected Behavior; Compute an Alignment through the easy-search workflow (prefilter + align); ## Current Behavior; Does not compute an Alignment through the easy-search workflow (prefilter + align). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs easy-search aminobert_embedding_no_tokens_u.fasta aminobert_embedding_no_tokens_u.fasta aminobert_embedding_no_tokens.m8 tmp -s 7.5 --sub-mat aminobert_embedding_no_tokens.out --seed-sub-mat aminobert_embedding_no_tokens.out. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; [mmseqs_easy_search.log](https://github.com/soedinglab/MMseqs2/files/9975251/mmseqs_easy_search.log). ## Your Environment; current mmseqs version, prebuilt, SSE4.1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/637:1170,log,log,1170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/637,2,['log'],['log']
Testability,"I've been trying to perform some basic tests with MMSeqs2 and have encountered an issue where I repeated get the following error message:. Init data structures...; Compute score only.; Could not open data file [path_to_dir]/mmseqs_tmp/pref_4!. The ""[path_to_dir]/mmseqs_tmp/"" directory contains two temporary files (pref_4.index_tmp_0.0 and pref_4_tmp_0.0) along with a blastp.sh script. I'm not using any advanced options for my search, and both input databases are (as far as I can see) formatted correctly. Maybe I'm overlooking something embarrassingly simple?. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/11:39,test,tests,39,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/11,1,['test'],['tests']
Testability,"I've been using KOFAMSCAN but it takes forever because it writes a LOT of intermediate files. . I tried making a custom version but the cutoff logic was confusing and it's in a language I'm not familiar with. If you're taking requests, would you consider configuring a KOFAM database?. Also, unrelated question but is there a guide to tuning the MMSEQS parameters for Pfam that most similarly match the Hmmer results? I'd like to replace hmmer with mmseqs in my workflows.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/771:143,log,logic,143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/771,1,['log'],['logic']
Testability,"I've got a file with about 200,000 sequences. When running mmseqs2 `easy-cluster` like this:; ```; mmseqs easy-cluster test.fasta out.db tmp --min-seq-id 1.00 -c 0.90 -s 8 --max-seqs 1000 --cluster-mode 1 --threads 6; ```; the program crashes with:; ```; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007f4554305010 ***; ```; If I subselect some sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time f",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:119,test,test,119,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['test'],['test']
Testability,"In the userguide, there is some text about using a provided expanded alignment database:. >Download one of the three provided expandable profile databases from https://colabfold.mmseqs.com and convert it to the MMseqs2 databases format with tsv2exprofiledb. However, there's nothing about how to go about creating the source tsv files (e.g. from an input fasta file or pre-computed clustering). My flying-blind attempts have resulted in a database without any k-mers; ```; No k-mer could be extracted for the database ../../tests/dbs/uniref30_2302_db.; Maybe the sequences length is less than 14 residues.; ```. I would greatly appreciate if you can point me to a minimal example. thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/857:524,test,tests,524,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/857,1,['test'],['tests']
Testability,Investigate failing nucl-nucl regression test,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/184:41,test,test,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/184,1,['test'],['test']
Testability,"K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [=================================================================] 100.00% 1.39K 0s 4ms; Add missing connections; [=================================================================] 100.00% 1.39K 0s 1ms. Time for read in: 0h 0m 0s 32ms; Total time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 10ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for merging to pref_filter2: 0h 0m 0s 176ms; Time for processing: 0h 0m 0s 468ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:7670,test,test,7670,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,3,['test'],['test']
Testability,"LFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKG. >S6; ANINAVTKIGNTPLHT. >S7; IVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPIDDFSKSSDLLLCYLRYKFNGSLNYYVLYKLLTKGSDPNCVDEDGLTSLHYYCKHISAFHESNYYKSKSHTKMRAEKRFIYAIIDHGANINAVTKIGNTPLHTYLQQYTKHSPRVVYALLSRGADTRIRNNLNCTPIMEYIKNDCATGHILIMLLNWHEQKYGKLQKEEGQHLLYLFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHKSKLVDKALNKLESTIDSQSRLSYLPPEIMRNIITKLSDYHLNSMLYGKNHY. >S8; LFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHK; ```. ## MMSeqs Tested Command ; ### Test 1 (--min-seq-id 1); mmseqs cluster test_mmseqs/DB test_mmseqs/seqid1_v2 seqid1_tmp_v2 --min-seq-id 1. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1 |; | S2 | S2 |; | S3 | S3 |; | S5 | S5 |; | S6 | S6 |; | S7 | S4, S7 |; | S8 | S8 |. ### Test 2 (--min-seq-id 1, -c 1.0, and --cov-mode 1); mmseqs cluster test/DB test/seqid1_test seqid1_tmp --min-seq-id 1 --cov-mode 1 -c 1.0. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1, S3, S2 |; | S4 | S4, S5, S7, S8 | ; | S6 | S6 | . ** PS: ; 1. This result is close to expected. However, I have no idea why the mmseqs does not group the S6 within the S4 cluster since S6 is a partial sequence of S4. ; 2. There are no differences in the results if reducing the -c from 1.0 to 0. . With these results, I am not sure if I use the correct parameter settings. Kindly advise me on the corresponding parameter to set for the MMSeqs2 cluster that is equivalent to CDHIT in order to have a non-redundant sequence dataset. . Regards, ; Chong",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/601:3011,Test,Test,3011,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/601,3,"['Test', 'test']","['Test', 'test']"
Testability,Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 18s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 32s; - checkReturnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures...; Compute score only.; Using 32 threads.; Calculation of Smith-Waterman alignments.; Time for merging files: 0 h 0 m 0 s. All sequences processed. 6287 alignments calculated.; 6203 sequence pairs passed the thresholds (0.986639 of overall calculated).; 25.2154 hits per que,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:4806,test,test,4806,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"Recently I came across the tool you have developed: MMseqs2 and I have tested for the protein search. It is very fast comparing to blastp. However, I noticed the number of hit is about 1/3 of the blastp hit if I use the most sensitive parameter -s 7.5 and the same evalue cutoff 0.01. The target database is about 2M sequence and the query is 10K sequence. I noticed a lot of warning message was printed ""Sequence 131 produces too many hits. Results might be truncated”. I have tried to change other parameters, such as —max-accept, but the situation does not change. It would be great if you could provide some information about how to produce all the hits as close as possible to blastp (with the same evalue cutoff), but much faster. Thanks.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107:71,test,tested,71,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107,1,['test'],['tested']
Testability,Running tests?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/25:8,test,tests,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/25,1,['test'],['tests']
Testability,"Since cluster module needs too much memory. (I have 2 million nucleotide seqs, about 30G, and 1T memory, and segment fault occurred). I try to use LINCLUST instead. But I also want a better performance of clustering. I try to increase the --kmer-per-seq, the number of clusters decreased until about --kmer-per-seq 2000 (My shortest sequences are 2000bp). I think this may indicate that the clustering performance has improved. I compared results in a 3G test dataset, between ""Linclust --kmer-per-seq 2000"" and ""Cluster""， the number of cluster produced by former is relatively closed to the latter. . But I still wonder if it make sense to set --kmer-per-seq 2000, since the default is only 20.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/831:455,test,test,455,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/831,1,['test'],['test']
Testability,Sorry for spamming the community with a non-issue. I just wanted to acknowledge how wonderful the mascot of MMseqs is. **Beautiful logo!**,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/345:131,log,logo,131,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/345,1,['log'],['logo']
Testability,"Summary: Running `easy-linclust` on [SRC](http://gwdu111.gwdg.de/~compbiol/plass/2018_08/) got stuck after the first call of `rescorediagonal`. No progress and no printed information for ~12h. Not sure if it's related to #323 but since it's a different behavior I just open a new issue. . ## Expected Behavior; Normally exit. ## Current Behavior; Got stuck after the first call of `rescorediagonal`. No progress and no printed information for ~12h. ## Steps to Reproduce (for bugs); ```; > wget http://gwdu111.gwdg.de/~compbiol/plass/2018_08/SRC.fasta.gz; > gunzip -k SRC.fasta.gz; > mmseqs easy-linclust SRC.fasta test/SRC-50 /export/scratch/SRC-50 -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 0.5 --split-memory-limit 500G; ```. ## MMseqs Output (for bugs); ```; easy-linclust SRC.fasta test/SRC-50 /export/scratch/SRC-50 -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 0.5 --split-memory-limit 500G. MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500G; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:615,test,test,615,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,2,['test'],['test']
Testability,"TDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 245 0 --:--:-- --:--:-- --:--:-- 245. 09/27 13:21:54 [NOTICE] Downloading 1 item(s). 09/27 13:21:54 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; *** Download Progress Summary as of Wed Sep 27 13:22:54 2023 *** ; ===============================================================================; [#2b99bd 207MiB/51GiB(0%) CN:5 DL:10MiB ETA:1h24m8s]; FILE: tmp/3290078511923703767/gtdb.tar.gz; -------------------------------------------------------------------------------. *** Download Progress Summary as of Wed Sep 27 13:23:54 2023 *** ; ===============================================================================; [#2b99bd 723MiB/51GiB(1%) CN:5 DL:8.7MiB ETA:1h38m40s]; FILE: tmp/3290078511923703767/gtdb.tar.gz;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:2461,log,log,2461,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['log'],['log']
Testability,"TTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; >Dupe2; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; >Dupe3; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; ```. ## Current Behavior; Below are a set of commands we've tested. Note that defaults for alignment-mode and cov-modes were used in the example commands, however we have tried the other modes and the same results are exhibited. The -a flag is also being used since we noticed it was recommended in a previous issues post. Finally, we have been checking the output _cluster.tsv file to verify the clusters. Commands 1 - 5 vary the --min-seq-id parameter.; Commands 6 - 10 vary the -c parameter. _Cmd1 (-c 0.95 --min-seq-id 0.7)_; `mmseqs easy-linclust duplicate_cluster_test.faa dupe_test tmp --add-self-matches -c 0.95 --min-seq-id 0.9 --max-iterations 1000 -a`. _Cmd2 (-c 0.95 --min-seq-id 0.8)_; `mmseqs easy-linclust duplicate_cluster_test.faa dupe_test tmp --add-self-matches -c 0.95 --min-seq-id 0.8 --max-iterations 1000 -a`. _Cmd3 (-c 0.95 --min-seq-id 0.9)_; `mmseqs easy-linclust duplicate_cluster_test.faa dupe_test tmp --add-self-matches -c 0.95 --min-seq-id 0.9 --max-iterations 1000 -a`. _Cmd4 (-c 0.95 --min-seq-id 0.99)_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/206:1820,test,tested,1820,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/206,1,['test'],['tested']
Testability,"Thanks for maintaining this great software! I'm having an issue with easy-taxonomy using GTDB (but not NCBI with the same query input), described below. Using a conda install of version 15.6f452. . Thanks for any help!. ## Expected Behavior; Completing without error. ## Current Behavior; Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Steps to Reproduce (for bugs). **Install**. ```bash; mamba create -y -n mmseqs2 -c conda-forge -c bioconda -c defaults mmseqs2==15.6f452; conda activate mmseqs2; ```. **DB setup**; ```bash; mmseqs databases GTDB mmseqs2-GTDB-db tmp; ```. **Making small test data**; ```bash; wget -O e-coli.fasta.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/005/845/GCA_000005845.2_ASM584v2/GCA_000005845.2_ASM584v2_genomic.fna.gz. gunzip e-coli.fasta.gz. grep -c "">"" e-coli.fasta; # there is only one contig, so safe to just pull some lines. printf "">contig_1\n"" > contigs.fasta; sed -n '100,1200p' e-coli.fasta >> contigs.fasta; printf "">contig_2\n"" >> contigs.fasta; sed -n '20000,20600p' e-coli.fasta >> contigs.fasta; printf "">contig_3\n"" >> contigs.fasta; sed -n '26000,26200p' e-coli.fasta >> contigs.fasta; # that's 3 contigs: 88,000 bps; 48,000 bps; and 16,000 bps; ```. **Running the program**; ```bash; mmseqs easy-taxonomy contigs.fasta mmseqs2-GTDB-db GTDB-tax-result tax-tmp \; --threads 20 --tax-lineage 1 --compressed 1 --remove-tmp-files 0; ```. ## MMseqs Output (for bugs). Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Context; Trying to get taxonomy output via GTDB with",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/806:452,log,log,452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806,4,"['log', 'test']","['log', 'log-error', 'test']"
Testability,"The command I run:; result2msa testDB testDB testDB.clu testDB.msa --msa-format-mode 1 . with output:; MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Allow deletions 	false; Compositional bias 	1; Compositional bias 	1; MSA format mode 	1; Summary prefix 	cl; Skip query 	false; Filter MSA 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	0; Threads 	6; Compressed 	0; Verbosity 	3. [=================================================================] 100.00% 2.85K 0s 1ms ; [=================================================================] 100.00% 2.85K 0s 2ms ; Time for merging to testDB.msa_sequence.ffdata: 0h 0m 0s 33ms; [=================================================================] 100.00% 2.85K 0s 98ms ; [=================================================================] 100.00% 2.85K 0s 99ms ; Time for merging to testDB.msa_header.ffdata: 0h 0m 0s 3ms; Query database size: 2846 type: Aminoacid; Target database size: 2846 type: Aminoacid; Segmentation fault: 11 ] 0.00% 1 eta -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/724:31,test,testDB,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/724,6,['test'],['testDB']
Testability,"Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe the option ""--cluster-reassign"" is not available for easy-linclust. Is there another option to handle this? . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; * Which MMseqs ver",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:16465,test,test,16465,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,"X into memory"". Also, the output file is larger than the output I got from running on the server previously (cloud VS server = 67G/41G, 109912025 lines/ 65303318 lines). I can't figure out what could cause the differences, given the same input files, same script (except for adding --split-memory-limit). So my two questions are:; 1) What's up with the warning ""Can not touch X into main memory""? ; 2) Why are the output files different?. ## Steps to Reproduce (for bugs); `mmseqs easy-search pdb_unique_seqs_all.fasta uniref100.fasta output/pdb_uniref100_6cpu_s3_e10minus3 tmp/ -a -s 3 --threads 6 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar,qaln,taln`; ## MMseqs Output (for bugs); Log file for running on cloud instance WITHOUT setting --split-memory-limit, no merged output, job hanging.; [log_easysearch.txt](https://github.com/user-attachments/files/16683740/log_easysearch.txt). Log file for running on the cloud WITH setting --split-memory-limit 40G, finished running with a single output (but larger than the one produced from server):; [log_easysearch2.txt](https://github.com/user-attachments/files/16692626/log_easysearch2.txt). ## Context; Posts with similar issues but unanswered (this looks sort of a common problem): ; [https://github.com/soedinglab/MMseqs2/issues/870](url); [https://github.com/soedinglab/MMseqs2/issues/702](url). ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):ffb05619cadadd8655b8719818ed566caaa6d0a6 (static build with AVX2, https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz); * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Supports AVX2 and SSE. 64G RAM; * Operating system and version: Ubuntu 20.04.6 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/877:1892,Log,Log,1892,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/877,1,['Log'],['Log']
Testability,"[Inferior 1 (process 8814) exited with code 01]. **Prefilter module call**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/Mmseqs_output/ . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; [New Thread 0x7ffff6210700 (LWP 9087)]; [New Thread 0x7ffff5a0f700 (LWP 9088)]; [New Thread 0x7ffff520e700 (LWP 9089)]; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers... Thread 3 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x7ffff5a0f700 (LWP 9088)]; 0x0000000000542911 in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (). ## Context; As already stated above, with smaller databases everything works fine. Even running a small different query set on the target database works just fine, as does the other way round (normal query, reduced target db).; Please tell me if u need the fasta files to recreate this ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:4145,Test,Testdata,4145,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['Test'],['Testdata']
Testability,"[mmseqs2.log.txt](https://github.com/soedinglab/MMseqs2/files/3654776/mmseqs2.log.txt); ## Expected Behavior; To be faster. ## Current Behavior; It takes the double of time than Diamond to perform the same task with similar results over the same query and target database. ## Steps to Reproduce (for bugs); time diamond blastx -d /d/Databases/Kegg/sram/kegg -q MOMZ_moomz1_200m.fna -o MO; MZ_moomz1_200m.kegg.raw --sensitive --max-target-seqs 1; real 32m12.614s; user 1091m19.492s; sys 34m5.028s. time mmseqs easy-search MOMZ_moomz1_200m.fna /d/Databases/Kegg/sram/mmseqs/ke; gg mmseqs_results2.m8 tmp --start-sens 1 --sens-steps 3 -s 6 --strand 2 --max-seqs 1; real 56m26.161s; user 2146m1.584s; sys 37m49.528s. ## Your Environment; MMseqs2 Version: 4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; 40 cores Intel(R) Xeon(R) CPU E5-2650 v3 @ 2.30GHz; 128 GB main memory; Query Fasta: 516296 metagenomic sequences (454 FLX), average seq size ~400bp; No other processes were running during the tests (besides those elementary to the SO)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231:9,log,log,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231,3,"['log', 'test']","['log', 'tests']"
Testability,"_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures...; Compute score only.; Using 32 threads.; Calculation of Smith-Waterman alignments.; Time for merging files: 0 h 0 m 0 s. All sequences processed. 6287 alignments calculated.; 6203 sequence pairs passed the thresholds (0.986639 of overall calculated).; 25.2154 hits per query sequence.; Time for alignments calculation: 0 h 0 m 1s; - checkReturnCode Alignment died; - [ 0 -ne 0 ]; - [ 4 -gt 4 ]; - NEXTINPUT=/home/zcx/Program/MMseqs/2.0/test/tmp/input_step4; - [ 4 -lt 4 ]; - let SENS=SENS+SENS_STEP_SIZE; /home/zcx/Program/MMseqs/2.0/bin/blastp.sh: 57: /home/zcx/Program/MMseqs/2.0/bin/blastp.sh: let: not found. I am running MMseqs2 on Ubuntu 14.04 (trusty) x86-64. On Ubuntu and Debian, the default shell /bin/sh is dash, not bash. dash does not support ""let"". I recommend changing the first line of ""blastp.sh"" from ""#!/bin/sh -ex"" to ""#!/bin/bash -ex""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:5991,test,test,5991,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"`cat test.fasta`. ```; >s1; TCEVWGPTSPKLMLSLKLENKEAKVSKREKAVWVLNPEAGMWQCLLSDSGQVLLESNIKVLPTWSTPVQPMALIVLGGVAGLLLFIGL; >s2; LLSDSGQVLLESNIKVLPTWSTPVQPMALIVLGGVAGLLLFIGLGIFFCVRCRHRRRQAERMSQIKRLLSEKKTCQCPHRFQKTCSPI; ```; The last 44 residues of s1 perfectly match the first 44 residues of s2. ```; mmseqs createdb ../hit_calling_redo_v2/test.fasta test_cd4; mmseqs search test_cd4 test_cd4 resultDB tmp; mmseqs convertalis test_cd4 test_cd4 resultDB result.m8; cat result.m8; ```. ```; s2 s2 1.000 88 0 0 1 88 1 88 1.067E-63 181; s2 s1 0.930 44 3 0 1 44 45 88 7.487E-28 88; s1 s1 1.000 88 0 0 1 88 1 88 4.412E-63 179; s1 s2 0.907 44 4 0 45 88 1 44 6.035E-27 86; ```. ## Expected Behavior. The alignments are correct, but 0 mismatches should be reported. ## Current Behavior. Either 3 or 4 mismatches reported for s1 - s2 alignment. ## Steps to Reproduce (for bugs); See above. ## Your Environment; MMseqs2 Version: f5f780acd64482cd59b46eae0a107f763cd17b4d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/737:5,test,test,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/737,2,['test'],['test']
Testability,"`mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Sensitivity 	5.7; k-mer length 	0; k-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:1799,test,test,1799,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,"`mmseqs search --num-iterations 1` generates 1 db file for each thread. For example: `hits_db.0`, `hits_db.1`, `hits_db.2`, `hits_db.3`. However, `mmseqs search --num-iterations 2` (or a larger number of iterations) only generates one ""main"" output file (eg., `hits_db`). This change affects the downstream processing. For instance, if one then uses `mmseqs convertalis` with `hits_db` as the input, but `hits_db.0`, `hits_db.1`, `hits_db.2`, and `hits_db.3` still exist in that same directory from a past run, then `mmseqs convertalis` dies with the error:. ```; Invalid database read for database data file=hits_db, database index=hits_db.index; ```. This is confusing for the user, given that it's not clear which files `mmseqs convertalis` will look for and potentially try to use. Also, there doesn't seem to be any documentation about the altered output in `mmseqs search`. In general, it would be very helpful to have a list of the actual input and output files (eg., `*.dbtype`, `.index`, `.lookup`, etc) generated by each command. Just including some logging info such as ""looking for *.dbtype file... found file XXX.dbtype` would be helpful.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/336:1060,log,logging,1060,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/336,1,['log'],['logging']
Testability,"again in its own singleton cluster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1340,test,test,1340,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,"aining about a missing index file, but I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIGGFA; GQLSVQAPFMFAAAINGLAFLVSLFILHETHNANQVSDELKNETIN-ETTSSIREMISPL; SGLLVV",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94:1219,test,test,1219,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94,1,['test'],['test']
Testability,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/567:4385,Test,Test,4385,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567,14,['Test'],['Test']
Testability,assert always true,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/295:0,assert,assert,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/295,1,['assert'],['assert']
Testability,"at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Steps to Reproduce (for bugs). **Install**. ```bash; mamba create -y -n mmseqs2 -c conda-forge -c bioconda -c defaults mmseqs2==15.6f452; conda activate mmseqs2; ```. **DB setup**; ```bash; mmseqs databases GTDB mmseqs2-GTDB-db tmp; ```. **Making small test data**; ```bash; wget -O e-coli.fasta.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/005/845/GCA_000005845.2_ASM584v2/GCA_000005845.2_ASM584v2_genomic.fna.gz. gunzip e-coli.fasta.gz. grep -c "">"" e-coli.fasta; # there is only one contig, so safe to just pull some lines. printf "">contig_1\n"" > contigs.fasta; sed -n '100,1200p' e-coli.fasta >> contigs.fasta; printf "">contig_2\n"" >> contigs.fasta; sed -n '20000,20600p' e-coli.fasta >> contigs.fasta; printf "">contig_3\n"" >> contigs.fasta; sed -n '26000,26200p' e-coli.fasta >> contigs.fasta; # that's 3 contigs: 88,000 bps; 48,000 bps; and 16,000 bps; ```. **Running the program**; ```bash; mmseqs easy-taxonomy contigs.fasta mmseqs2-GTDB-db GTDB-tax-result tax-tmp \; --threads 20 --tax-lineage 1 --compressed 1 --remove-tmp-files 0; ```. ## MMseqs Output (for bugs). Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Context; Trying to get taxonomy output via GTDB with lineage info added. Using the NCBI database completes successfully on the same input query. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. - mmseqs2 version 15.6f452 installed with conda; - working on Ubuntu 20.04.4 LTS; - 500 GB memory",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/806:1823,log,log,1823,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806,3,['log'],"['log', 'log-error']"
Testability,"ccess; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:17:18: error: field ‘prev’ has incomplete type ‘Except_Frame_T’; Except_Frame_T prev;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:16:8: note: definition of ‘struct Except_Frame_T’ is not complete until the closing brace; struct Except_Frame_T {; ^; src/CMakeFiles/mmseqs-framework.dir/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:2317,assert,assert,2317,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,1,['assert'],['assert']
Testability,"ce alignment (MSA) file in protein aligned fasta format, but it is complaining about a missing index file, but I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIG",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94:1119,test,test,1119,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94,1,['test'],['test']
Testability,"ce; nrDB nrDB.idx.0 nrDB.idx.13 nrDB.idx.6 nrDB.idx.index nrDB_taxonomy. ```. I know that this is at least a valid aminoacid database since I an search against it and get hits. However, I cannot use the `taxonomyreport` command on the results since it tells me that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-file ../test/nr.fsa.taxidmapping. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; NCBI tax dump directory ../test/taxonomy/; Taxonomy mapping file ../test/nr.fsa.taxidmapping; Taxonomy m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401:2044,log,log,2044,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401,1,['log'],['log']
Testability,"ces from Uniref90 against the same Uniref90 database, gives fewer exact matches than for example using Diamond with the same parameters. It seems MMSeqs2 aligns more sequences than Diamond but it misses more exact matches as well. ## Steps to Reproduce (for bugs). * Randomly extract 10,000 sequences from Uniref90 . * Perform a search against Uniref90 with the 10,000 query proteins using MMSeqs2 search with parameters ```-s 4``` and ```--max-seqs 4000``` . * Perform a search against Uniref90 with the same 10,000 query proteins using Diamond blastp with default parameters and ```--max-target-seqs 4000```. * Compare the number of query sequences for which an exact match is retrieved across the two searches (i.e. a query sequence that aligns perfectly against itself). . ## MMseqs Output (for bugs). MMSeqs2 logs: https://gist.github.com/fstrozzi/b21b68aa94bcd9bb5cf19af537975850. ## Context; We were testing MMSeqs2 sensitivity and as a sort of true positive control we realigned some sequences randomly extracted from Uniref90 against the Uniref90, to check how many exact matches we were able to retrieve. We then saw that MMSeqs2 with ```-s 4```, which should match Diamond default (fast) parameters, misses some exact matches. #### MMSeqs2 . * total aligned query sequences: 9994; * exact matches (query sequence aligned with itself in the database): 9496. #### Diamond. * total aligned query sequences: 9975 ; * exact matches (query sequence aligned with itself in the database): 9975. We were also wondering what could be the parameters controlling this behavior and what we could do to improve the best hit search. We also tried to run MMSeqs2 with higher sensitivity (5.7) but the result is very similar. ; Thanks for this great software, we are finding it incredibly useful for both clustering and searching on large protein datasets and we would like to understand more on how to use it efficiently and correctly. ## Your Environment. * MMSeqs2 Release 3-be8f6 AVX2. * Diamond v0.9.2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91:1197,test,testing,1197,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91,1,['test'],['testing']
Testability,"ces, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support as in my /proc/cpuinfo:; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1472,test,test,1472,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,"computed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing true/false""mode both run, each need 2 hours.; ```python; host_url = 'http://127.0.0.1:8888'; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = 'env'; submission_endpoint = 'ticket/msa'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); ```; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Your Environment; ColabFold 1.5.2; ubuntu 20.04; 256GB RAM, that's why I cannot use vmtouch which need 768GB memory according to the readme.; 32 cores cpu; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145276/log-mmseqs-msa-server.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690:2954,log,log-mmseqs-msa-server,2954,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690,4,['log'],"['log', 'log-mmseqs-msa-server']"
Testability,"contig. Here you can find the [contig](https://github.com/soedinglab/MMseqs2/files/6821433/477fb4bafa.assm.refined.fasta.gz) and the [log](https://github.com/soedinglab/MMseqs2/files/6821435/477fb4bafa.contig-taxonomy.GTDB.log). I don't think it is related to https://github.com/soedinglab/MMseqs2/issues/31 or https://github.com/soedinglab/MMseqs2/issues/447 . The DB seems fine. I processed hundreds of samples using the same MMseqs2 command, and I only had problems in files with one contig. The samples are complicated to assemble, and sometimes I only can recover one contig. ## Current Behavior. When running ; ```; mmseqs easy-taxonomy /vol/cloud/geogenetics/KapK/results/assembly-refined/477fb4bafa.assm.refined.fasta /vol/cloud/geogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/473:1155,log,logs,1155,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473,1,['log'],['logs']
Testability,"d *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIGGFA; GQLSVQAPFMFAAAINGLAFLVSLFILHETHNANQVSDELKNETIN-ETTSSIREMISPL; SGLLVVFFIIQLIGQIPATLWVLFGEERFAWDGVMVGVSLAVFGLTHALFQ------GLA; AGFIAKHLGER------KAIAVGILADGC---GLFLLAVITQSW",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94:1292,test,test,1292,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94,1,['test'],['test']
Testability,"da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; [New Thread 0x7ffff6210700 (LWP 9087)]; [New Thread 0x7ffff5a0f700 (LWP 9088)]; [New Thread 0x7ffff520e700 (LWP 9089)]; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers... Thread 3 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x7ffff5a0f700 (LWP 9088)]; 0x0000000000542911 in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (). ## Context; As already stated above, with smaller databases everything works fine. Even running a small different query set on the target database works just fine, as does the other way round (normal query, reduced target db).; Please tell me if u need the fasta files to recreate this bug. ## Your Environment; MMseqs2 Version: bcb164e42c79555cc521196c7f94f4b0123da048; Self-compiled build, following your description in ""Compile from source""; cmake version 3.5.2; gcc version 4.8.5 (SUSE Linux) ; Memory: 7.7 GiB RAM; openSUSE Leap 42.2, Kernel: 4.4.92-18.36-default, 64 bit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:4465,Test,Testdata,4465,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['Test'],['Testdata']
Testability,"db tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Simila",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:1452,log,log,1452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,1,['log'],['log']
Testability,de identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:1641,test,test,1641,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"e `--min-seq-id` is 0.7 and 0.5. The aligned for each of the 3:; ```; mmseqs align ${DB_NAME} ${DB_NAME} ${DB_NAME}_clu${ID_THRESHOLD} ${DB_NAME}_clu${ID_THRESHOLD}_aln -a -e inf; ```; However, it's on the next step that it seems to stall. ; ```; mmseqs result2profile ${DB_NAME} ${DB_NAME} ${DB_NAME}_clu${ID_THRESHOLD}_aln ${DB_NAME}_clu${ID_THRESHOLD}_prof --threads 32; ```. I have 3 machines running in parallel to process these databases at the same time, and they're all stuck on exactly the same point. With CPU utilisation suggesting only 1-2 cores are being used. ; ```; PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 7869 miles 20 0 377.2g 97.8g 46.6g S 88.2 51.8 14d+18h mmseqs ; ```; Here is the output log of the `results2profile`:; ```; ~~ pldb70 Creating Profile: Thu 16 May 09:59:16 BST 2024; result2profile pldb pldb pldb_clu70_aln pldb_clu70_prof --threads 32 . MMseqs Version: 998c50a01da760713ca2c7580801e94555d23c4d; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; E-value threshold 0.001; Mask profile 1; Profile E-value threshold 0.001; Compositional bias 1; Compositional bias 1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Preload mode 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Threads 32; Compressed 0; Verbosity 3. Query database size: 108337839 type: Aminoacid; Target database size: 108337839 type: Aminoacid; [================================================================; ```. In my testing this step was as fast as the others, so I'm confused why this is taking days and seemingly not moving. One of the 3 machines is using mmseqs version 15.6f452, the other two are using 998c50a01da760713ca2c7580801e94555d23c4d.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848:2222,test,testing,2222,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848,1,['test'],['testing']
Testability,e alignment database: 854; Number of clusters: 784. Writing results 0h 0m 0s 0ms; Time for merging to clust: 0h 0m 0s 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/94,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:14233,test,test,14233,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,"e docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLTWQGLIVPDNPPYDKGAFRIEINFPAEYPFKPPKITFKTKIYHPNIDEKGQVCLPVISAENWKPATKTDQVIQSLIALVNDPQPEHPLRADLAEEYSKDRKKFCKNAEEFTKKYGEKRPVD; >Ub; MQIFVKTLTGKTITLEVEPSDTIENVKAKIQDKEGIPPDQQRLIFAGKQLEDGRTLSDYNIQKESTLHLVLRLRGG; EOF; mkdir -p out/tmp; mmseqs createdb mmseqs_in.fasta out/qdb; vmtouch -ldw /path/to/database/uniref30_2202_db*idx*; mmseqs search out/qdb /path/to/database/uniref30_2202_db out/res out/tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. ```. ## MMseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, wit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:2617,log,log,2617,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,1,['log'],['log']
Testability,"e. However, bit scores seems to be in-comparable across result blocks. There can be huge jumps in E-value (and bit score) as we walk down on the list of targets for a query protein. Target proteins with outstanding Bit Score in the example for query WP_148290433.1:; WP_004066529.1 (bit score: 323, previous hit: 94); WP_004069050.1 (bit score: 207, previous hit: 53 ). ## Steps to Reproduce (for bugs). Please run this script for example (comparing Thermococcus litoralis and Pyrococcus furiosus proteins, using 3 iterations); #download protein files; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-define",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:1441,log,log,1441,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['log'],['log']
Testability,e=10000); Needed memory (14434761936 byte) of total memory (270462795776 byte); Substitution matrices...; Time for init: 0 h 0 m 3s. Process prefiltering step 0 of 1. Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Copy 1650981 Entries (9905886 byte); Setup Sizes ; Read IndexTable ... Done; k-mer similarity threshold: 115; k-mer match probability: 0. Starting prefiltering scores calculation (step 0 of 1); Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 18s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 32s; - checkReturnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per quer,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:4344,test,test,4344,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Sensitivity 	5.7; k-mer length 	0; k-score 	21",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:1807,test,test,1807,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,edundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 854 0s 5ms; Sort entries; Find missing connections; Found 83 new connections.; Reconstruct initial order; [=================================================================] 100.00% 854 0s 4ms; Add missing connections; [=================================================================] 100.00% 854 0s 1ms. Time for read in: 0h 0m 0s 23ms; Total time: 0h 0m 0s 40ms. Size of the sequence database: 854; Size of the alignment database: 854; Number of clusters: 784. Writing results 0h 0m 0s 0ms; Time for merging to clust: 0h 0m 0s 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/94204286487,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:13425,test,test,13425,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,4,['test'],['test']
Testability,"elized protein sequence searches and clustering of huge protein sequence d; ata sets. Please cite: M. Steinegger and J. Soding. MMseqs2 enables sensitive protein sequ; ence searching for the analysis of massive data sets. Nature Biotechnology, doi:; 10.1038/nbt.3988 (2017). MMseqs2 Version: b0b8e85f3b8437c10a666e3ea35c78c0ad0d7ec2; © Martin Steinegger (martin.steinegger@snu.ac.kr). usage: mmseqs <command> [<args>]. Easy workflows for plain text input/output; easy-search Sensitive homology search; easy-linsearch Fast, less sensitive homology search; easy-cluster Slower, sensitive clustering; easy-linclust Fast linear time cluster, less sensitive clustering; easy-taxonomy Taxonomic classification; easy-rbh Find reciprocal best hit; …; ```; ## Current Behavior; *no output*; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; Zip file for respective download was extracted, and upon navigating to the mmseqs directory the '--help' help argument was input to test the installation, resulting in no output. ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; - No output is the problem; ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; On this machine I have been having an ongoing issue in which cmd is unable to open in any scenario besides using another user account.; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): none; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): statically-compiled ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: n/a; * Server specifications (especially CPU support for AVX2/SSE and amount of syste",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/574:1195,test,test,1195,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574,1,['test'],['test']
Testability,ent-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 of overall calculated).; 1.097190 hits per query sequence.; Time for merging to aln: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 84ms; clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 854 0s 5ms; Sort entries; Find missing connections; Found 83 new connections.; Reconstruct initial order; [=================================================================] 100.00% 854 0s 4ms; Add missing connections; [=================================================================] 100.00% 854 0s 1ms. Time for read in: 0h 0m 0s 23ms; Total time: 0h 0m 0s 40ms. Size of the sequence database: 854; Size of the alignment database: 854; Number of clusters: 784. Writing results 0h 0m 0s 0ms; Time for merging to clust: 0h 0m 0s 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:12416,test,test,12416,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,3,['test'],['test']
Testability,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:11733,Test,Test,11733,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,24,['Test'],['Test']
Testability,"er of identical matches between query and target sequences. ## Current Behavior; MMSeqs always reports the ""nident"" (number of identical residues) value to be 0. ## Steps to Reproduce (for bugs); #Please run bash script below to reproduce error; #!/bin/bash; #download protein sequences from Pyrococcus furiosus; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz. #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self-compiled and Homebrew: Compiler and Cmake sse4_2versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubunt",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/349:1132,log,log,1132,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349,1,['log'],['log']
Testability,"er. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support as in my /proc/cpuinfo:; flags		: fpu vme de",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1371,test,test,1371,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,"f Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner 	; Remove Temporary Files 	true; Alignment Format 	0; Format alignment output 	query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen; Database Output 	false; Overlap 	0; Split Seq. by len 	true; Do not shuffle input database 	true; Greedy best hits 	false. Program call:; createdb GCF_000005845.faa.gz /tmp/testMMS/1537235642484915501/query --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3 . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query ... Done.; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query_h ... Done.; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 38ms; mmseqs search:; Searches with the sequences or profiles query DB through the target sequence DB by running the prefilter tool and the align tool for Smith-Waterman alignment. For each query a results file with sequence matches is written as entry into a database of search results (alignmentDB).; In iterative profile search mode, the detected sequences satisfying user-specified criteria are aligned to the query MSA, and the resulting query profile is used for the next search iteration. Iterative profile searches are usually much more sensitive than (and at least as sensitive as) searches with single query sequences. Please cite:; Steinegger, M. & Soding, J. MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). © Martin Steinegger <martin.steinegger@mpibpc.mpg.de>. Usag",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:3485,test,testMMS,3485,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['test'],['testMMS']
Testability,"f numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap threshold 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	0; Write lookup file 	0; Greedy best hits 	false. createdb test.fa tmp/9586069750715556969/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 3ms; Time for merging to query: 0h 0m 0s 3ms; Database type: Nucleotide; Time for processing: 0h 0m 0s 19ms; createdb test.fa tmp/9586069750715556969/target --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to target_h: 0h 0m 0s 6ms; Time for merging to target: 0h 0m 0s 3ms; Database type: Nucleotide; Time for processing: 0h 0m 0s 23ms; Create directory tmp/9586069750715556969/search_tmp; search tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result tmp/9586069750715556969/search_tmp --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --alignment-mode 3 --seed-sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -s 5.7 --search-type 3 --remove-tmp-files 1 . splitsequence tmp/9586069750715556969/target tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:4816,test,test,4816,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,fasta` with some test RNA sequences:; ```; >4QEI_2; GCGCCGCUGGUGUAGUGGUAUCAUGCAAGAUUCCCAUUCUUGCGACCCGGGUUCGAUUCCCGGGCGGCG; >6Q8V_1; GGCGAAGAACCGGGGAGCC; >5DO4_3; GGGAAXAAAGXUGAAGUXXUUAXXX; >1VQL_1; UUGGCUACUAUGCCAGCUGGUGGAUUGCUCGGCUCAGGCGCUGAUGAAGGACGUGCCAAGCUGCGAUAAGCCAUGGGGAGCCGCACGGAGGCGAAGAACCAUGGAUUUCCGAAUGAGAAUCUCUCUAACAAUUGCUUCGCGCAAUGAGGAACCCCGAGAACUGAAACAUCUCAGUAUCGGGAGGAACAGAAAACGCAAUGUGAUGUCGUUAGUAACCGCGAGUGAACGCGAUACAGCCCAAACCGAAGCCCUCACGGGCAAUGUGGUGUCAGGGCUACCUCUCAUCAGCCGACCGUCUCGACGAAGUCUCUUGGAACAGAGCGUGAUACAGGGUGACAACCCCGUACUCGAGACCAGUACGACGUGCGGUAGUGCCAGAGUAGCGGGGGUUGGAUAUCCCUCGCGAAUAACGCAGGCAUCGACUGCGAAGGCUAAACACAACCUGAGACCGAUAGUGAACAAGUAGUGUGAACGAACGCUGCAAAGUACCCUCAGAAGGGAGGCGAAAUAGAGCAUGAAAUCAGUUGGCGAUCGAGCGACAGGGCAUACAAGGUCCCUCGACGAAUGACCGACGCGCGAGCGUCCAGUAAGACUCACGGGAAGCCGAUGUUCUGUCGUACGUUUUGAAAAACGAGCCAGGGAGUGUGUCUGCAUGGCAAGUCUAACCGGAGUAUCCGGGGAGGCACAGGGAAACCGACAUGGCCGCAGGGCUUUGCCCGAGGGCCGCCGUCUUCAAGGGCGGGGAGCCAUGUGGACACGACCCGAAUCCGGACGAUCUACGCAUGGACAAGAUGAAGCGUGCCGAAAGGCACGUGGAAGUCUGUUAGAGUUGGUGUCCUACAAUACCCUCUCGUGAUCUAUGUGUAGGGGUGAAAGGCCCAUCGAGUCCGGCAACAGCUGGUUCCAAUCGAAACAUGUCGAAGCAUGACCUCCGCCGAGGUAGUCUGUGAGGUAGAGCGACCGAUUGGUGUGUCCGCCUCCGAGAGGAGUCGGCACACCUGUCAAACUCCAAACUUACAGACGCCGUUUGACGCGGGGAUUCCGGUGCGCGGGGUAAGCCUGUGUACCAGGAGGGGAACAACCCAGAGAUAGGUUAAGGUCCCCAAGUGUGGAUUAAGUGUAAUCCUCUGAAGGUGGUCUCGAGCCCUAGACAGCCGGGAGGUGAGCUUAGAAG,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:646,test,test,646,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['test'],['test']
Testability,"first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support as in my /proc/cpuinfo:; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1534,test,test,1534,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,fix rbh logic by removing resAB_sort process,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/685:8,log,logic,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/685,1,['log'],['logic']
Testability,"hed with `core dumped` error and reports `Error: createbintaxonomy failed`. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; mmseqs createdb ""uniprot_2024_03.fasta"" seqdb; ```; then; ```; mmseqs createtaxdb seqdb tmp ; ```. We attempted to vary `--tax-db-mode`, `--tax-mapping-mode`, and `--threads` parameters but observed the same behavior. Any help would be highly appreciated. We are able to reproduce this issue with a minimal database containing 1000 sequences. ## MMseqs Output (for bugs). ```; > mmseqs createtaxdb seqdb tmp ; createtaxdb seqdb tmp . MMseqs Version: 15.6f452; NCBI tax dump directory; Taxonomy mapping file ; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 48; Verbosity 3. Loading nodes file ... Done, got 2601214 nodes; Loading merged file ... Done, added 79743 merged nodes.; Loading names file ... Done; mmseqs: malloc.c:2379: sysmalloc: Assertion `(old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)' failed.; Aborted (core dumped); Error: createbintaxonomy failed; ```. ## Context. We are trying to create a custom taxonomy database for MSA, such that the resulting .a3m files contain taxonomy information. Is a taxonomy database already available for download for uniprot_2024_03 for similar releases?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:. Linux 64-bit, 256G memory; MMseqs Version: 15.6f452",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871:1089,Assert,Assertion,1089,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871,1,['Assert'],['Assertion']
Testability,"idx.13 nrDB.idx.6 nrDB.idx.index nrDB_taxonomy. ```. I know that this is at least a valid aminoacid database since I an search against it and get hits. However, I cannot use the `taxonomyreport` command on the results since it tells me that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-file ../test/nr.fsa.taxidmapping. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; NCBI tax dump directory ../test/taxonomy/; Taxonomy mapping file ../test/nr.fsa.taxidmapping; Taxonomy mapping mode 0; Taxonomy d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401:2071,test,test,2071,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401,1,['test'],['test']
Testability,iles (x86)\mmseqs\\bin/strings: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/stty: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/sum: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/sv: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/svlogd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/sync: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/syslogd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tac: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tail: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tar: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tcpsvd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tee: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/telnet: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/telnetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/test: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tftp: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tftpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/time: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/timeout: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/top: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/touch: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/traceroute: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/true: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tty: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ttysize: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/udpsvd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uncompress: Permission d,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:13049,test,test,13049,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['test'],['test']
Testability,"ince it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration step might appear well superior to a target found in the first iteration. See target WP_004066529.1 and WP_084684326.1 for query WP_148290433.1 as examples. Other ""goodness of alignment"", confirms that target from the first search iteration is indeed better thus bit score from the profile search iteration might be biased (overestimated). It would be important to rank all hits of a query based on a globally valid significance measure that would allow the comparison of Hit-Target significances across iterations as well. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020); * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 16 GB RAM, i5-3320M CPU; * Operating system and version:; Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:4166,test,tested,4166,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['test'],['tested']
Testability,"index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIGGFA; GQLSVQAPFMFAAAINGLAFLVSLFILHETHNANQVSDELKNETIN-ETTSSIREMISPL; SGLLVVFFIIQLIGQIPATLWVLFGEERFAWDGVMVGVSLAVFGLTHALFQ------GLA; AGFIAKHLGER-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94:1284,test,test,1284,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94,1,['test'],['test']
Testability,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/567:5080,Test,Test,5080,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567,12,['Test'],['Test']
Testability,"ing the UniRef90 database. ## Current Behavior; After a first round of prefilter, rescorediagonal is executed, some merge steps are executed, new tmp directories are created, and the program dies partway through the second round of prefilter. ## Steps to Reproduce (for bugs); Downloaded the UniRef90 database with wget:; `wget https://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref90/uniref90.fasta.gz`. Decompressed with gunzip, then ran createdb:; `mmseqs createdb uniref90.fasta uniref90`; ; Augmented with taxonomic information (used -db-mode 0 because createbintaxonomy kept crashing as well):; `mmseqs createtaxdb uniref90 tmp --tax-db-mode 0`. Created database for my query sequences:; `mmseqs createdb KLEB_PO07_megahit.fasta KLEB_PO07_megahitDB`. Ran mmseqs taxonomy on cluster with slurm script:; ```; #!/usr/bin/env bash. #SBATCH --job-name=KLEB_PO07_mmseqs; #SBATCH --cpus-per-task=32; #SBATCH --mem=150G; #SBATCH --time=0-3:00; #SBATCH --output=KLEB_PO07_mmseqs.log; #SBATCH --error=KLEB_PO07_mmseqs.err. module load mmseqs2/15-6f452; taxDB=/home/sdwork/scratch/metagenomics/uniref_db/uniref90. mmseqs taxonomy KLEB_PO07_megahitDB $taxDB KLEB_PO07_megahit_result tmp; ```. ## MMseqs Output (for bugs); [Full output can be found in this gist.](https://gist.github.com/sean-workman/531e9d5fc73635dee8c000f9da137fe0). I also see this output in my error file:; `tmp/1193166584733320518/tmp_taxonomy/17149912652888480377/tmp_hsp1/10699950925961740214/blastp.sh: line 135: 8379 Bus error (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""`. ## Context; I created metagenomic assemblies using megahit and metaSPAdes. I am trying to get MMseqs2 working to do taxonomic classification. I am running on Digital Research Alliance of Canada clusters. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838:1068,log,log,1068,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838,1,['log'],['log']
Testability,"iosus; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz. #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self-compiled and Homebrew: Compiler and Cmake sse4_2versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/349:1426,log,log,1426,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349,1,['log'],['log']
Testability,"iprot or Uniref, MMSeqs2 should retrieve an exact match for almost all the query sequences. ## Current Behavior. Running MMSeqs2 search or easy-search with randomly extracted sequences from Uniref90 against the same Uniref90 database, gives fewer exact matches than for example using Diamond with the same parameters. It seems MMSeqs2 aligns more sequences than Diamond but it misses more exact matches as well. ## Steps to Reproduce (for bugs). * Randomly extract 10,000 sequences from Uniref90 . * Perform a search against Uniref90 with the 10,000 query proteins using MMSeqs2 search with parameters ```-s 4``` and ```--max-seqs 4000``` . * Perform a search against Uniref90 with the same 10,000 query proteins using Diamond blastp with default parameters and ```--max-target-seqs 4000```. * Compare the number of query sequences for which an exact match is retrieved across the two searches (i.e. a query sequence that aligns perfectly against itself). . ## MMseqs Output (for bugs). MMSeqs2 logs: https://gist.github.com/fstrozzi/b21b68aa94bcd9bb5cf19af537975850. ## Context; We were testing MMSeqs2 sensitivity and as a sort of true positive control we realigned some sequences randomly extracted from Uniref90 against the Uniref90, to check how many exact matches we were able to retrieve. We then saw that MMSeqs2 with ```-s 4```, which should match Diamond default (fast) parameters, misses some exact matches. #### MMSeqs2 . * total aligned query sequences: 9994; * exact matches (query sequence aligned with itself in the database): 9496. #### Diamond. * total aligned query sequences: 9975 ; * exact matches (query sequence aligned with itself in the database): 9975. We were also wondering what could be the parameters controlling this behavior and what we could do to improve the best hit search. We also tried to run MMSeqs2 with higher sensitivity (5.7) but the result is very similar. ; Thanks for this great software, we are finding it incredibly useful for both clustering and searc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91:1104,log,logs,1104,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91,1,['log'],['logs']
Testability,"ix.R < nucleotide.edit.mat > nucleotide.edit.mat.out`:. ```; # Background (precomputed optional): 0.3267 0.3267 0.3267 0.3267 0.00001; # Lambda (precomputed optional): 0.34657; # Avg SeqId (precomputed optional): 0.854; 	A	C	G	T	X; A	2	-3	-3	-3	2; C	-3	2	-3	-3	2; G	-3	-3	2	-3	2; T	-3	-3	-3	2	2; X	2	2	2	2	2; ```. 2. Search sequence against itself with 12 bases replaced with X `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:1430,test,test,1430,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,"k my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	1; Verbosity 	3. Finding maximum sequence length and set size.; Compute profiles from MSAs.; Invalid fasta sequence 0 in entry 0!; Invalid msa 0! Skipping entry.; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 1 s; Time for processing: 0 h 0 m 2s; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/96:1499,TEST,TEST,1499,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96,3,['TEST'],['TEST']
Testability,"l time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 10ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for merging to pref_filter2: 0h 0m 0s 176ms; Time for processing: 0h 0m 0s 468ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; help",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:8010,test,test,8010,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,3,['test'],['test']
Testability,lib/zstd/programs/fileio.c: line 2303. assert(error>=0 || error<=1);,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/295:39,assert,assert,39,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/295,1,['assert'],['assert']
Testability,lse; Add backtrace false; Realign hit false; Threads 32; Verbosity 3; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:1692,test,test,1692,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"luster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support as in my /proc/cpuinfo:; fla",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1354,test,test,1354,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,m seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Nucleotide false; Max. results per query 300; Split DB 0; Split mode 2; Search mode 2; Compositional bias 1; Diagonal Scoring 1; Minimum Diagonal score 30;,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:2053,test,test,2053,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"m/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[===============================================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:1498,test,test,1498,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['test'],['test']
Testability,"merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My questions are:; 1) How big of a RAM is required for the createindex step? Was that the reason a ""targetDB.idx"" was not generated?. 2) How much memory do I need for the indexed files to be fetched into memory (i.e. the""touchdb"" step)? Is it the total of all the ""targetDB.idx.0,1,2...14 "" files which will be over 1TB? Or is it something smaller?. 3) The log message for mmseqs touchdb step wasn't very helpful. Did it work or not?. Thank you,; Tongji",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/757:2350,log,log,2350,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757,1,['log'],['log']
Testability,"mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Report mode 	0; Alignment format 	0; Format alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; First sequence as representative 	false; Target column 	1; Add full header 	false; Sequence source 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0. *skipped some parts of the log that took very little time*. Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GDQYNVT	84229; Time for index table init: 4h 18m 41s 415ms; k-mer similarity threshold: 180; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 695256546; Target",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422:3478,log,log,3478,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422,1,['log'],['log']
Testability,"n length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap threshold 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	0; Write lookup file 	0; Greedy best hits 	false. createdb test.fa tmp/9586069750715556969/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 3ms; Time for merging to query: 0h 0m 0s 3ms; Database type: Nucleotide; Time for processing: 0h 0m 0s 19ms; createdb test.fa tmp/9586069750715556969/target --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to target_h: 0h 0m 0s 6ms; Time for merging to target: 0h 0m 0s 3ms; Database type: Nucleotide; Time for processing: 0h 0m 0s 23ms; Create directory tmp/9586069750715556969/search_tmp; search tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result tmp/9586069750715556969/search_tmp --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --alignment-mode 3 --seed-sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -s 5.7 --search-type 3 --remove-tmp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:4503,test,test,4503,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,"nce in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing true/false""mode both run, each need 2 hours.; ```python; host_url = 'http://127.0.0.1:8888'; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = 'env'; submission_endpoint = 'ticket/msa'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); ```; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Your Environment; ColabFold 1.5.2; ubuntu 20.04; 256GB RAM, that's why I cannot use vmtouch which need 768GB memory according to the readme.; 32 cores cpu; [log-mmseqs-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690:1888,test,test,1888,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690,1,['test'],['test']
Testability,"ndaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124**. I have created the Uniprotdb using mmseqs createdb command so the uniportdb.index file was created with it. ## Current Behavior; But I am seeing after giving expandaln command facing an issue saying the uniprotdb.index is generic type ; Input database ""./uniprot/uniprotdb.index"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; MMSEQS=""$1""; QUERY=""$2""; BASE=""$4""; DB1=""$5""; DB2=""$6""; DB3=""$7""; USE_ENV=""$8""; USE_TEMPLATES=""$9""; FILTER=""${10}""; TAXONOMY=""${11}""; M8OUT=""${12}""; EXPAND_EVAL=inf; ALIGN_EVAL=10; DIFF=3000; QSC=-20.0; MAX_ACCEPT=1000000; if [ ""${FILTER}"" = ""1"" ]; then; 0.1 was not used in benchmarks due to POSIX shell bug in line above; EXPAND_EVAL=0.1; ALIGN_EVAL=10; QSC=0.8; MAX_ACCEPT=100000; fi; export MMSEQS_CALL_DEPTH=1; SEARCH_PARAM=""--num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000""; FILTER_PARAM=""--filter-min-enable 1000 --diff ${DIFF} --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95""; EXPAND_PARAM=""--expansion-mode 0 -e ${EXPAND_EVAL} --expand-filter-clusters ${FILTER} --max-seq-id 0.95""; mkdir -p ""${BASE}""; mkdir -p ""${BASE}""; ""${MMSEQS}"" createdb ""${QUERY}"" ""${BASE}/qdb""; ""${MMSEQS}"" search ""${BASE}/qdb"" ""${DB1}"" ""${BASE}/res"" ""${BASE}/tmp1"" $SEARCH_PARAM; ""${MMSEQS}"" mvdb ""${BASE}/tmp1/latest/profile_1"" ""${BASE}/prof_res""; ""${MMSEQS}"" lndb ""${BASE}/qdb_h"" ""${BASE}/prof_res_h""; **mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124** ; # I got stucked at the above command. **next I ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:1048,benchmark,benchmarks,1048,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['benchmark'],['benchmarks']
Testability,"ng to see what these `awk` commands returned when looking at databases:. ```; awk 'BEGIN { min = 2^32; } $3 < min { min = $3 }; $3 > max { max = $3 } { sum = sum + $3; n = n + 1; } END { print sum/n,min,max; }' $out_DB; awk 'BEGIN { min = 2^32; } $2 < min { min = $2 }; $2 > max { max = $2 } { sum = sum + $2; n = n + 1; } END { print sum/n,min,max; }' $out_DB. out_DB | col $3 | col $2; -----------------------------------+--------------------------+-----------------------; target_DB/target_DB.index | 412.665 2 8110 | 2.15005e+07 0 43190597; target_DB/target_DB.idx.index | 6.04213e+07 1 512000009 | 5.54188e+08 0 1261572096; result_20230419_115721/qdb.index | 114 114 114 | 0 0; result_20230419_115721/qdb_h.index | 190 190 190 | 0 0; result_20230419_115721/res.index | 58682 58682 58682 | 0 0; ```. I can run these sequences via `mmseqs easy-search` (which does not call `expandaln`):; ```; easy-search query.fasta /home/user/project/target_DB/target_DB result_DB tmp_easy_search --db-output 1 --max-seqs 10000. wc -l result_DB; 606 result_DB. # awk sum/n,min,max; out_DB | col $3 | col $2; -----------------------------------+--------------------------+-----------------------; result_DB.index | 104112 104112 104112 | 0 0; ```. ## Your Environment; * MMseqs2 Version: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; * self-compiled; * `cmake version 3.16.3`; * The CXX compiler identification is `GNU 9.4.0`; * The C compiler identification is `GNU 9.4.0`; * [cmake.000.log](https://gist.github.com/bchodkowski-vir/13fdfdb33efac1ee1fcb6e7b71846643) created Sep 1 2022; * [make.000.log](https://gist.github.com/bchodkowski-vir/8cb1557213a05f3032abed310d5a10c4) created Sep 1 2022; * [make_install.000.log](https://gist.github.com/bchodkowski-vir/fe17acc49335bf8312c14a0cec14c9b9) created Sep 1 2022; * `uname -a`; * `Linux lambda-name 5.4.0-144-generic #161-Ubuntu SMP x86_64 x86_64 x86_64 GNU/Linux`. Please let me know if there is any other information I can share to help debug this. Kind regards.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:11181,log,log,11181,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,3,['log'],['log']
Testability,"nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration step might appear well superior to a target found in the first iteration. See target WP_004066529.1 and WP_084684326.1 for query WP_148290433.1 as examples. Other ""goodness of alignment"", confirms that target from the first search iteration is indeed better thus bit score from the profile search iteration might be biased (overestimated). It would ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:2146,log,log,2146,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['log'],['log']
Testability,"nslate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 446 type: Aminoacid; > Target split mode. Searching through 12 splits; > Estimated memory consumption: 91G; > Target database size: 230328648 type: Aminoacid; > Process prefiltering step 1 of 12; > ; > Index table k-mer threshold: 122 at k-mer size 7 ; > Index table: counting k-mers; > tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/blastp.sh : ligne 99 : 10291 Instruction non permise $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; > Error: Prefilter died. ## Context. TrEMBL installed using the mmseqs databases command. ## Your Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. Operating system and version:; Linux version 3.10.0-1160.6.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) )",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/564:4124,mock,mockbuild,4124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564,1,['mock'],['mockbuild']
Testability,"nt b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:1991,test,test,1991,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,"ny more logging or output files (there were a bunch of output files X.0, X.1, X.2.. not merged outputs). I killed it after 2 days. UPDATE: I've also tried to set --split-memory-limit 40G, it did finish running (in 16 hours) and produced a single output file, despite still displaying the message ""can not touch X into memory"". Also, the output file is larger than the output I got from running on the server previously (cloud VS server = 67G/41G, 109912025 lines/ 65303318 lines). I can't figure out what could cause the differences, given the same input files, same script (except for adding --split-memory-limit). So my two questions are:; 1) What's up with the warning ""Can not touch X into main memory""? ; 2) Why are the output files different?. ## Steps to Reproduce (for bugs); `mmseqs easy-search pdb_unique_seqs_all.fasta uniref100.fasta output/pdb_uniref100_6cpu_s3_e10minus3 tmp/ -a -s 3 --threads 6 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar,qaln,taln`; ## MMseqs Output (for bugs); Log file for running on cloud instance WITHOUT setting --split-memory-limit, no merged output, job hanging.; [log_easysearch.txt](https://github.com/user-attachments/files/16683740/log_easysearch.txt). Log file for running on the cloud WITH setting --split-memory-limit 40G, finished running with a single output (but larger than the one produced from server):; [log_easysearch2.txt](https://github.com/user-attachments/files/16692626/log_easysearch2.txt). ## Context; Posts with similar issues but unanswered (this looks sort of a common problem): ; [https://github.com/soedinglab/MMseqs2/issues/870](url); [https://github.com/soedinglab/MMseqs2/issues/702](url). ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):ffb05619cadadd8655b8719818ed566caaa6d0a6 (static build with AVX2, https",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/877:1690,Log,Log,1690,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/877,1,['Log'],['Log']
Testability,"o appear in a cluster, it will appear again in its own singleton cluster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1285,test,test,1285,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,"o tried various settings with `--split-memory-limit` with no effect. . This may have something to do with `I/O` and NFS communication, but I really don't know where to start. Any insight would be very much appreciated. In addition to this issue, it would be very helpful to know:; 1) How can we estimate how much temporary disk space is required for an `easy-taxonomy` analysis?; 2) What are the steps involved in an `easy-taxonomy` run? This is absent from the documentation, making it very difficult to track progress across the steps. ## Steps to Reproduce (for bugs); Executed commands:; ```; mmseqs databases UniRef90 /dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik --threads 12; ```; ```; mmseqs easy-taxonomy /dept/appslab/datasets/dp_ZymoMockComparison/Zymo6331-STD.fasta /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 STD_Results /pbi/flash/dportik/mmseqs --threads 24 --split-memory-limit 80G ; ```. ## MMseqs Output (for bugs); ### Log file:; ```; easy-taxonomy /dept/appslab/datasets/dp_ZymoMockComparison/Zymo6331-STD.fasta /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 STD_Results /pbi/flash/dportik/mmseqs --threads 24 --split-memory-limit 80G. MMseqs Version: 13.45111; ORF filter 0; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Majority threshold 0.5; Vote mode 1; LCA ranks; Column with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:1663,Log,Log,1663,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Log'],['Log']
Testability,oman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 1.39K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [=================================================================] 100.00% 1.39K 0s 4ms; Add missing connections; [=================================================================] 100.00% 1.39K 0s 1ms. Time for read in: 0h 0m 0s 32ms; Total time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 10ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:7336,test,test,7336,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,3,['test'],['test']
Testability,"ommand I get for my protein sequence the `Clostridium AM magnum` hit. ```; mmseqs taxonomy queryDB /vol/scratch/databases/mmseqs2/gtdb/out/gtdb_database test.faa.gz tmp --lca-ranks superkingdom,phylum,class,order,family,genus,species,subspecies -c 0.8 --max-seqs 300 --max-accept 50 --cov-mode 0 -e 0.001 --e-profile 0.01 -s 6 --threads 28 --blacklist """". mmseqs createtsv queryDB 14_First_11_21_S2_binned.gtdb.taxresults.database test.taxonomy.tsv --threads 28; ```. test.taxonomy.tsv output:; ```; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 30313 species Clostridium AM magnum Bacteria;Bacillota A;Clostridia;Clostridiales;Clostridiaceae;Clostridium AM;Clostridium AM magnum;uc_Clostridium AM magnum; ```. If I repeat the same with `mmseqs search` I get following hits:. ```; mmseqs search queryDB /vol/scratch/databases/mmseqs2/gtdb/out/gtdb_database test.faa.gz tmp --max-seqs 300 --max-accept 50 --cov-mode 0 -e 0.001 --e-profile 0.01 -s 6 --threads 28; mmseqs convertalis queryDB /vol/scratch/databases/mmseqs2/gtdb/out/gtdb_database test.faa.gz mmseqs.out.tsv; ```. mmseqs.out.tsv output:; ```; uery target pident alnlen mismatch gapopen qstart qend tstart tend evalue bits qlen tlen qcov tcov; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_JH601103.1_106 88.200 163 19 0 1 163 1 163 1.803E-90 301 164 164 0.994 0.994; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_FMWM01000002.1_685 49.700 154 76 0 7 159 5 158 6.046E-36 144 164 170 0.933 0.906; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_FLQT01000003.1_544 49.200 154 77 0 7 159 5 158 2.131E-35 143 164 167 0.933 0.922; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_LT707417.1_163 49.100 154 77 0 7 159 5 158 2.921E-35 142 164 167 0.933 0.922; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 JAEXBU010000001.1_1 49.000 154 78 0 7 159 5 158 4.002E-35 142 164 167 0.933 0.922; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_OPYI01000008.1_105 48.900 154 78 0 7 159 5 158 5.484E-35 14",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/859:1100,test,test,1100,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/859,1,['test'],['test']
Testability,"ompared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90 tcdb_found.db tcdb_found90.db ; mmseqs linclust tcdb_found90.db tcdb_found.clu70 linclust_tmp -a -c 0.9 --min-seq-id 0.7 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found90.db tcdb_found.clu70 tcdb_found.clu70rep ; mmseqs resul",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/102:1233,test,test,1233,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102,1,['test'],['test']
Testability,"ompiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/casser",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:1209,Test,Test,1209,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,6,['Test'],['Test']
Testability,"on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	24; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scorin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:1126,test,test,1126,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['test'],['test']
Testability,"ons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Input database ""/mount-nfs/mydataset/single_train_sequences.fasta"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid; ```. ## Context; I am trying to extract the pssm for a big fasta file following this steps:; https://github.com/soedinglab/MMseqs2/issues/580; Unfortunately, only the easy-search is working and not the search. If I tried to just use the easy-search I get the same message as above when I try to run the ""result2profile"" script. I also tried to extract a single sequence from my fasta file, and I got the same error.; Here is the single fasta file that I am trying to test with :; ```; >A0A8I6GHU0 tr|A0A8I6GHU0|A0A8I6GHU0_RAT U6 snRNA-associated Sm-like protein LSm1 OS=Rattus norvegicus OX=10116 GN=Lsm1 PE=3 SV=1; HCISSLKLTAFFKRSFLLSPEKHLVLLRDGRTLIGFLRSIDQFANLVLHQTVERIHVGRK; YGDIPRGIFVVRGENVVLLGEIDLEKESDTPLQQVSIEEILEEQRVEQQSRLEAEKLKVQ; ALKDRGLSIPRADTLDEY; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Which MMseqs version was used: latest version from conda.; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU support both AVX2/SSE and the server has 450GB of memory; * Operating system and version: Ubuntu 20.04.4 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/720:3417,test,test,3417,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/720,1,['test'],['test']
Testability,"onsistent output sequence cluster file:; when a sequence is the >1st ( = 2nd, 3rd, etc.) to appear in a cluster, it will appear again in its own singleton cluster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1224,test,test,1224,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,"ory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90 tcdb_found.db tcdb_found90.db ; mmseqs linclust tcdb_found90.db tcdb_found.clu70 linclust_tmp -a -c 0.9 --min-seq-id 0.7 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found90.db tcdb_found.clu70 tcdb_found.clu70rep ; mmseqs result2flat tcdb_found90.db tcdb_found90.db tcdb_found.clu70rep tcdb_found70.fa --use-fasta-header ; ```; Witch return me this in the last command. > $ mmseqs result2flat tcdb_found90.db tcdb_found90.db tcdb_found.clu70rep tcdb_found70.fa --use-fasta-header; > Progr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/102:1508,test,test,1508,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102,1,['test'],['test']
Testability,"ple using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support as in my /proc/cpuinfo:; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl eagerfpu pni pclmulqdq ssse3 cx16 pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rd",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1720,test,test,1720,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,"q-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:3272,test,test,3272,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,2,['test'],['test']
Testability,"rd Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner 	; Remove Temporary Files 	true; Alignment Format 	0; Format alignment output 	query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen; Database Output 	false; Overlap 	0; Split Seq. by len 	true; Do not shuffle input database 	true; Greedy best hits 	false. Program call:; createdb GCF_000005845.faa.gz /tmp/testMMS/1537235642484915501/query --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3 . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query ... Done.; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query_h ... Done.; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 38ms; mmseqs search:; Searches with the sequences or profiles query DB through the target sequence DB by running the prefilter tool and the align tool for Smith-Waterman alignment. For each query a results file with sequence matches is written as entry into a database of search results (alignmentDB).; In iterative profile search mode, the detected sequences satisfying user-specified criteria are aligned to the query MSA, and the resulting query profile is used for the next search iteration. Iterative profile searches are usually much more sensitive than (and at least as sensitive as) searches with single query sequences. Please cite:; Steinegger, M. & Soding, J. MMseqs2 enables sensitive protein sequence searching for the analysis of massiv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:3381,test,testMMS,3381,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['test'],['testMMS']
Testability,"reate directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90 tcdb_found.db tcdb_found90.db ; mmseqs linclust tcdb_found90.db tcdb_found.clu70 linclust_tmp -a -c 0.9 --min-seq-id 0.7 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found90.db tcdb_found.clu70 tcdb_found.clu70rep ; mmseqs result2flat tcdb_found90.db tcdb_found90.db tcdb_found.clu70rep tcdb_found70.fa --use-fasta-header ; ```; Witch return me this in the last com",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/102:1419,test,test,1419,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102,1,['test'],['test']
Testability,"reatedb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung for 20 hours until the program was killed. I have attached 2 log files - one for each version of mmseqs2. The log files include all the mmseqs2 output written to stdout. ## Steps to Reproduce (for bugs). conda create -n pharokkaenv pharokka mmseqs2==14.7e284; conda activate pharokkaenv; install_databases.py -d ; pharokka.py -i lambda.fasta -o lambda_out -t 8 . Input file attached . ## MMseqs Output (for bugs); Log files attached with ""correct"" output (13.4511) showing mmseqs2 run 3 times takes approximately 6 mins, vs 14.7e284 which takes 36 minutes to prefilter on the first step, then hangs (for 20 hours). ## Context. ## Your Environment. I have tested this on MAC OSX (intel and M1) and also Linux ubuntu environments with bioconda installations. I get the same issue. [lambda.fasta.txt](https://github.com/soedinglab/MMseqs2/files/9845844/lambda.fasta.txt); [pharokka_mmseqs2_13.45111.log](https://github.com/soedinglab/MMseqs2/files/9845842/pharokka_mmseqs2_13.45111.log); [pharokka_mmseqs2_14_7e284.log](https://github.com/soedinglab/MMseqs2/files/9845843/pharokka_mmseqs2_14_7e284.log). George",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/625:2112,log,log,2112,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625,7,"['Log', 'log', 'test']","['Log', 'log', 'tested']"
Testability,"replaced with X `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Sensitivity 	5.7; k-mer",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:1791,test,test,1791,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,"rgetDB.idx.dbtype"" + ""targetDB.idx.index"". It seems there should be only one ""targetDB.idx"" file generated. However, that file was not there although it says in the last few lines of the log ""Time for merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My questions are:; 1) How big of a RAM is required for the createindex step? Was that the reason a ""targetDB.idx"" was not generated?. 2) How much memory do I need for the indexed files to be fetched into memory (i.e. the""touchdb"" step)? Is it the total ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/757:1237,Log,Log,1237,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757,1,['Log'],['Log']
Testability,"rmatted alignment, the output database had a leading space after the `>` character on the first line, which then caused `msa2profile` to output various ""Invalid"" messages. Removing the leading space as applied in the pull request seems to fix this issue. I don't think my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	1; Verbosity 	3. Finding maximum sequence length and set size.; Compute profiles ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/96:1120,TEST,TEST,1120,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96,1,['TEST'],['TEST']
Testability,rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:15560,test,test,15560,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,4,['test'],['test']
Testability,"roduction steps with newly recreated and empty tmp folders.; mmseqs createdb ~/04.db/krakenuniq/library/nt-bacteria-dustmasked.fna nt-bacteria-dustmasked --dbtype 2; mmseqs createtaxdb nt-bacteria-dustmasked tmp --ncbi-tax-dump ~/04.db/krakenuniq/taxonomy --tax-mapping-file ~/04.db/krakenuniq/library/nt-bacteria.fna.map; mmseqs createdb BIN_REASSEMBLY/reassembled_bins/bin.18.strict.fa test; mmseqs taxonomy --threads 16 test ~/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked test_res tmp --search-type 3; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 3; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/697:1495,test,test,1495,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697,1,['test'],['test']
Testability,"s createdb ${DATA_DIR}/${INPUT} ${DB_NAME}; mmseqs cluster ${DB_NAME} ${DB_NAME}_clu90 ${TMP_DIR}/clu90 --min-seq-id 0.9 --cov-mode 1 -c 0.8 -s 3; ```; I repeated the cluster step to make 3 different thresholds where `--min-seq-id` is 0.7 and 0.5. The aligned for each of the 3:; ```; mmseqs align ${DB_NAME} ${DB_NAME} ${DB_NAME}_clu${ID_THRESHOLD} ${DB_NAME}_clu${ID_THRESHOLD}_aln -a -e inf; ```; However, it's on the next step that it seems to stall. ; ```; mmseqs result2profile ${DB_NAME} ${DB_NAME} ${DB_NAME}_clu${ID_THRESHOLD}_aln ${DB_NAME}_clu${ID_THRESHOLD}_prof --threads 32; ```. I have 3 machines running in parallel to process these databases at the same time, and they're all stuck on exactly the same point. With CPU utilisation suggesting only 1-2 cores are being used. ; ```; PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 7869 miles 20 0 377.2g 97.8g 46.6g S 88.2 51.8 14d+18h mmseqs ; ```; Here is the output log of the `results2profile`:; ```; ~~ pldb70 Creating Profile: Thu 16 May 09:59:16 BST 2024; result2profile pldb pldb pldb_clu70_aln pldb_clu70_prof --threads 32 . MMseqs Version: 998c50a01da760713ca2c7580801e94555d23c4d; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; E-value threshold 0.001; Mask profile 1; Profile E-value threshold 0.001; Compositional bias 1; Compositional bias 1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Preload mode 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Threads 32; Compressed 0; Verbosity 3. Query database size: 108337839 type: Aminoacid; Target database size: 108337839 type: Aminoacid; [================================================================; ```. In my testing this step ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848:1179,log,log,1179,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848,1,['log'],['log']
Testability,"s-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect: Connection reset by peer in connection to mmseqs.com:443 ; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 42.7M 100 42.7M 0 0 9058k 0 0:00:04 0:00:04 --:--:-- 9904k; ```. ## Context; We have been observing this issue for the past two weeks, which has been arising in one of our package's Azure Pipelines tests. The examples above were reproduced using an Ubuntu server. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): `latest` static version; * Operating system and version:; * For example cases above:; ```; Linux 5.4.0-139-generic #156-Ubuntu SMP x86_64 x86_64 x86_64 GNU/Linux; ```; * Azure image:; ```; Operating System; Ubuntu; 20.04.6; LTS; Runner Image; Image: ubuntu-20.04; Version: 20230507.1; Included Software: https://github.com/actions/runner-images/blob/ubuntu20/20230507.1/images/linux/Ubuntu2004-Readme.md; Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu20%2F20230507.1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:4184,test,tests,4184,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['test'],['tests']
Testability,"s/nuc_mmseq_DB \; ${dbdir}/gtdb_54kDB data/04_taxgenes/taxresdb ${dbdir}/tmp/; ```. The taxonomy DB is made through the last release of GTDB without applying a cluster, as discussed in #244 . . The db is as follows: . ```; -rw-r--r-- 1 aauladell bio 54G 28 nov 11:05 gtdb_54kDB; -rw-r--r-- 1 aauladell bio 4 28 nov 11:07 gtdb_54kDB.dbtype; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_delnodes.dmp; -rw-r--r-- 1 aauladell bio 3,0G 28 nov 11:00 gtdb_54kDB_h; -rw-r--r-- 1 aauladell bio 4 28 nov 11:01 gtdb_54kDB_h.dbtype; -rw-r--r-- 1 aauladell bio 3,9G 28 nov 11:09 gtdb_54kDB_h.index; -rw-r--r-- 1 aauladell bio 4,3G 28 nov 11:08 gtdb_54kDB.index; -rw-r--r-- 1 aauladell bio 4,6G 28 nov 11:14 gtdb_54kDB.lookup; -rw-r--r-- 1 aauladell bio 2,7G 28 nov 15:43 gtdb_54kDB_mapping; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_merged.dmp; -rw----r-- 1 aauladell bio 1,8M 28 nov 15:43 gtdb_54kDB_names.dmp; -rw----r-- 1 aauladell bio 3,0M 28 nov 15:43 gtdb_54kDB_nodes.dmp; ```. ## Current Behavior. Instead, it raises an `out_of_range` error with a `terminate called recursively` after running for 20 hours. . ## MMseqs Output (for bugs). Raises the following error: ; ```; terminate called recursively; terminate called after throwing an instance of 'std::out_of_range/mnt/lustre/scratch/aauladell/databases/gtdb-r89_54k/tmp//14536420861195881021/taxonomy.sh: line 99: 34258 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```. The output log: ; [mmseqs_lca_log.txt](https://github.com/soedinglab/MMseqs2/files/3955181/mmseqs_lca_log.txt). ## Context; Taxonomic classification of a gene catalog with around 500000 seqs. ; ; ## Your Environment. MMseqs2 Version: 0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported, 36 threads and 400 Gb RAM.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256:1717,log,log,1717,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256,1,['log'],['log']
Testability,"seqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers...; /local/jelvers/Masterthesis/temp//6581086409424530102/blastp.sh: line 86: 8824 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; [Inferior 1 (process 8814) exited with code 01]. **Prefilter module call**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/Mmseqs_output/ . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; E",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:2787,Test,Testdata,2787,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['Test'],['Testdata']
Testability,small database for testing,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/407:19,test,testing,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/407,1,['test'],['testing']
Testability,"some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90 tcdb_found.db tcdb_found90.db ; mmseqs linclust tcdb_found90.db tcdb_found.clu70 linclust_tmp -a -c 0.9 --min-seq-id 0.7 -v 0 --threads 15 ; mmseqs result2re",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/102:1172,test,test,1172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102,1,['test'],['test']
Testability,"t > nucleotide.edit.mat.out`:. ```; # Background (precomputed optional): 0.3267 0.3267 0.3267 0.3267 0.00001; # Lambda (precomputed optional): 0.34657; # Avg SeqId (precomputed optional): 0.854; 	A	C	G	T	X; A	2	-3	-3	-3	2; C	-3	2	-3	-3	2; G	-3	-3	2	-3	2; T	-3	-3	-3	2	2; X	2	2	2	2	2; ```. 2. Search sequence against itself with 12 bases replaced with X `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:1446,test,test,1446,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,"t/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe the option ""--cluster-reassign"" is not available for easy-linclust. Is there another option to handle this? . ## Your Environment; Include as many relevant details about the environment you experienced",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:16299,test,test,16299,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,"teParser::format(*((size_t *)par[i]->value), 'a', 'h');; (gdb) bt; #0 Parameters::printParameters (this=0x56bba090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; #1 0x5669efec in Parameters::checkIfDatabaseIsValid (this=0x56bba090, command=..., argc=2, argv=0xffffcddc, isStartVar=false, isMiddleVar=false, isEndVar=false); at ./src/commons/Parameters.cpp:1905; #2 0x566a32a9 in Parameters::parseParameters (this=0x56bba090, argc=2, pargv=0xffffcddc, command=..., printPar=<optimized out>, parseFlags=0, outputFlags=0); at ./src/commons/Parameters.cpp:1850; #3 0x5689d5ac in createindex (argc=2, argv=0xffffcddc, command=...) at ./src/workflow/CreateIndex.cpp:137; #4 0x565bbf0d in runCommand (p=0x56bc30c0, argc=2, argv=0xffffcddc) at ./src/commons/Application.cpp:38; #5 0x565aabcb in main (argc=4, argv=0xffffcdd4) at ./src/commons/Application.cpp:196; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; ```; mmseqs-avx2 createdb examples/DB.fasta DB; mmseqs-avx2 createindex DB tmp; ```. ## MMseqs Output (for bugs); ```; Create directory tmp; createindex DB tmp . Illegal instruction (core dumped); ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Compiled for 32-bit x86 on Debian using https://salsa.debian.org/med-team/mmseqs2/-/tree/debian/experimental/debian/patches; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): avx2 capable processor, > 60 GiB memory; * Operating system and version: Debian ""testing""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418:4024,test,testing,4024,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418,1,['test'],['testing']
Testability,"that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-file ../test/nr.fsa.taxidmapping. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; NCBI tax dump directory ../test/taxonomy/; Taxonomy mapping file ../test/nr.fsa.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 36; Verbosity 3. Loading nodes file ... Done, got 2304309 nodes; Loading merged file ... Done, added 61039 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```; Thanks for taking the time to look at this!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401:2770,log,log,2770,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401,5,"['log', 'test']","['log', 'test']"
Testability,"tput file from an input multiple sequence alignment (MSA) file in protein aligned fasta format, but it is complaining about a missing index file, but I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGAT",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94:1111,test,test,1111,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94,1,['test'],['test']
Testability,u_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Re,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:15235,test,test,15235,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,3,['test'],['test']
Testability,"udo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers...; /local/jelvers/Masterthesis/temp//6581086409424530102/blastp.sh: line 86: 8824 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; [Inferior 1 (process 8814) exited with code 01]. **Prefilter module call**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/Mmseqs_output/ . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; [New Thread 0x7ffff6210700 (LWP 9087)]; [New Thread ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:3237,Test,Testdata,3237,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,2,['Test'],['Testdata']
Testability,"ues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:2091,test,test,2091,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,4,['test'],['test']
Testability,"ult2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe the option ""--cluster-reassign"" is not available for easy-linclust. Is there another option to handle this? . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; * ; * For self-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:16551,test,test,16551,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,"unadopted data in the 'assignGroup' function, allowing for more effective clustering. ### Details. **1 Extended Search Process :**. > For the same k-mer group, the process of combining the representative sequence with each sequence has been extended. The algorithm now calculates sequence dissimilarity using adjacent sequence information. The most dissimilar sequence is selected as the next representative sequence, and this exploration process is repeated. If there are multiple sequences with the same level of dissimilarity, the most recently explored sequence is chosen as the representative sequence. Additionally, the selection of the most dissimilar sequence is limited to sequences that follow the current representative sequence in the search order. **2. Data Structure Challenges**. > The implementation of this method introduced challenges in maintaining the original in-place data structure. To overcome these challenges, a new data structure has been introduced with an additional buffer (slack space) at the end. The new data structure includes a default buffer size of 5%. . **3. Dynamic Memory Allocation**. > If memory becomes insufficient during operation, the structure dynamically resizes by splitting and reallocating memory based on the progress of the previous process. This approach ensures efficient memory usage and prevents potential memory shortages. ### Benchmark Results. > I conducted benchmarking on datasets randomly selected from the UniParc dataset, with sizes of 1.3M, 2.7M, 5.3M, 11M, 21M, 42M, and 85M. The results confirmed that the new algorithm effectively reduces the number of clusters while maintaining linearity, showing no significant time difference compared to the existing Linclust method. Despite these improvements, the algorithm still lags behind the easy-cluster method and does not fully reach the ideal results obtained by performing a quadratic search that captures all possible combinations. Thus, there remains room for further improvement.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/873:1575,Benchmark,Benchmark,1575,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873,2,"['Benchmark', 'benchmark']","['Benchmark', 'benchmarking']"
Testability,"ut I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIGGFA; GQLSVQAPFMFAAAINGLAFLVSLFILHETHNANQVSDELKNETIN-ETTSSIREMISPL; SGLLVVFFIIQLIGQIPATLWVLFGEERFAWDGVMVGVSLA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94:1227,test,test,1227,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94,1,['test'],['test']
Testability,"verage criteria. ## Steps to Reproduce (for bugs). ### Data. 95,303,635 non-redundant proteins from UHGP v2.0 ([FTP link](http://ftp.ebi.ac.uk/pub/databases/metagenomics/mgnify_genomes/human-gut/v2.0/protein_catalogue/uhgp-100.tar.gz)). 2 proteins serving as probes (uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing)). ### Clustering. 3 different clustering approaches were tested:; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering`. However, all three approaches lead to the same behavior (although the exact number of alignments changes) . ### Testing. `mmseqs easy-search probes/probes.faa {clustering_dir}/uhgp90_rep_seq.fasta results/single-step-clustering-uhgp90.m8 tmp --min-seq-id 0.9 -c 0.9 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln"" --threads 16`. ## Output. The m8 files obtained with the `easy-search` command were uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing). ## Context. I want to assign assembled proteins from metagenomes to clusters from a catalog of bacterial proteins, namely [UHGP](https://www.ebi.ac.uk/metagenomics/genome-catalogues/human-gut-v2-0). I have noticed that when I align assembled bacterial proteins from my dataset to UHGP reresentative sequences of clusters at 90% amino acid identity, some of them align to over 1200 representative sequences with identity over 90% and almost 100% coverage. The UHGP clusters were generated with linclust, so I attempted to cluster de-dupli",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/639:1317,Test,Testing,1317,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/639,1,['Test'],['Testing']
Testability,x creation runs ok:. mmseqs createindex nr. ```; Program call:; nr . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	1; Split DB 	0; Spaced Kmer 	1; Threads 	64; Verbosity 	3; ...; Write MMSEQSFFINDEX ; Time for merging files: 0 h 0 m 0 s; Done. . ```; ls -lrt; ```; -rw-r--r--. 1 root root 2773738984 may 11 14:05 nr.lookup; -rw-r--r--. 1 root root 28462541941 may 11 14:07 nr_h; -rw-r--r--. 1 root root 2967783911 may 11 14:07 nr_h.index; -rw-r--r--. 1 root root 44976760168 may 11 14:10 nr; -rw-r--r--. 1 root root 3020702058 may 11 14:10 nr.index; drwxr-xr-x. 2 root root 6 may 12 12:52 tmp; -rw-r--r--. 1 root root 3020702058 may 12 13:23 nr.sk7.mmseqsindex; -rw-r--r--. 1 root root 330684926197 may 12 13:23 nr.sk7; -rw-r--r--. 1 root root 344 may 12 13:23 nr.sk7.index; ```. When launching the search:. mmseqs search mmseq-testDB /junk/databases/mmseqs/nr test-2-mmseqsDB tmp; ```; Program call:; mmseq-testDB /junk/databases/mmseqs/nr test-2-mmseqsDB tmp . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	64; Verbosity 	3; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo co,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31:1322,test,testDB,1322,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31,4,['test'],"['test-', 'testDB']"
Testability,"ximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner 	; Remove Temporary Files 	true; Alignment Format 	0; Format alignment output 	query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen; Database Output 	false; Overlap 	0; Split Seq. by len 	true; Do not shuffle input database 	true; Greedy best hits 	false. Program call:; createdb GCF_000005845.faa.gz /tmp/testMMS/1537235642484915501/query --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3 . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query ... Done.; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query_h ... Done.; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 38ms; mmseqs search:; Searches with the sequences or profiles query DB through the target sequence DB by running the prefilter tool and the align tool for Smith-Waterman alignment. For each query a results file with sequence matches is written as entry into a database of search results (alignmentDB).; In iterative profile search mode, the detected sequences satisfying user-specified criteria are aligned to the query MSA, and the",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:2977,test,testMMS,2977,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['test'],['testMMS']
Testability,"xpected Behaviour; I'm trying to follow the documentation to get a profile output file from an input multiple sequence alignment (MSA) file in protein aligned fasta format, but it is complaining about a missing index file, but I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGK",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94:1030,test,test,1030,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94,1,['test'],['test']
Testability,"y?**; I appreciate any insights or experiences with these tools. <Colabfold mmseqs2>; `def mmseqs_search_monomer(; dbbase: Path,; base: Path,; uniref_db: Path = Path(""uniref30_2202_db""),; template_db: Path = Path(""""), # Unused by default; metagenomic_db: Path = Path(""colabfold_envdb_202108_db""),; mmseqs: Path = Path(""mmseqs""),; use_env: bool = True,; use_templates: bool = False,; filter: bool = True,; expand_eval: float = math.inf,; align_eval: int = 10,; diff: int = 3000,; qsc: float = -20.0,; max_accept: int = 1000000,; prefilter_mode: int = 0,; s: float = 8,; db_load_mode: int = 2,; threads: int = 32,; ):; #Run mmseqs with a local colabfold database set; #; #db1: uniprot db (UniRef30); #db2: Template (unused by default); #db3: metagenomic db (colabfold_envdb_202108 or bfd_mgy_colabfold, the former is preferred); ; uniref_db = Path(""/store/colabfold/db/uniref30_2202_db""); template_db = Path(""/store/colabfold/db/pdb70_220313""); if filter:; # 0.1 was not used in benchmarks due to POSIX shell bug in line above; # EXPAND_EVAL=0.1; align_eval = 10; qsc = 0.8; max_accept = 100000. used_dbs = [uniref_db]; if use_templates:; used_dbs.append(template_db); if use_env:; used_dbs.append(metagenomic_db). for db in used_dbs:; if not dbbase.joinpath(f""{db}.dbtype"").is_file():; raise FileNotFoundError(f""Database {db} does not exist""); if (; (; not dbbase.joinpath(f""{db}.idx"").is_file(); and not dbbase.joinpath(f""{db}.idx.index"").is_file(); ); or os.environ.get(""MMSEQS_IGNORE_INDEX"", False); ):; logger.info(""Search does not use index""); db_load_mode = 0; dbSuffix1 = ""_seq""; dbSuffix2 = ""_aln""; dbSuffix3 = """"; else:; dbSuffix1 = "".idx""; dbSuffix2 = "".idx""; dbSuffix3 = "".idx"". # fmt: off; # @formatter:off; search_param = [""--num-iterations"", ""3"", ""--db-load-mode"", str(db_load_mode), ""-a"", ""-e"", ""0.1"", ""--max-seqs"", ""10000""]; search_param += [""--prefilter-mode"", str(prefilter_mode)]; if s is not None:; search_param += [""-s"", ""{:.1f}"".format(s)]; else:; search_param += [""--k-score"", ""'",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:1847,benchmark,benchmarks,1847,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['benchmark'],['benchmarks']
Testability,yDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Nucleotide false; Max. results per query 300; Split DB 0; Split mode 2; Search mode 2; Compositional bias 1; Diagonal Scoring 1; Minimum Diagonal score 30; Include identical Seq. Id. false; Spaced Kmer 1; Threads 32; Verbosity 3. Initialising data structures...; Using 32 threads. Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Query database: queryDB(size=246); Target database: targetDB.sk7(size=10000); Needed memory (14434761936 byte) of total memory (2704,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:2407,test,test,2407,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Usability," ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 245 0 --:--:-- --:--:-- --:--:-- 245. 09/27 13:21:54 [NOTICE] Downloading 1 item(s). 09/27 13:21:54 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; *** Download Progress Summary as of Wed Sep 27 13:22:54 2023 *** ; ===============================================================================; [#2b99bd 207MiB/51GiB(0%) CN:5 DL:10MiB ETA:1h24m8s]; FILE: tmp/3290078511923703767/gtdb.tar.gz; -------------------------------------------------------------------------------. *** Download Progress Summary as of Wed Sep 27 13:23:54 2023 *** ; ===============================================================================; [#2b99bd 723MiB/51GiB(1%) CN:5 DL:8.7MiB ETA:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:2376,resume,resume,2376,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['resume'],['resume']
Usability," Environment. I am running this on an AWS EC2 instance of type g4dn (128GB RAM). Here you go:. $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) Platinum 8259CL CPU @ 2.50GHz; CPU family: 6; Model: 85; Thread(s) per core: 2; Core(s) per socket: 16; Socket(s): 1; Stepping: 7; BogoMIPS: 4999.98; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht; syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid ap; erfmperf tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt; tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch pti fsgsbase; tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx avx512f avx512dq rdseed adx smap clflushopt clwb avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves ida arat pku ospke avx512_vnni; Virtualization features: ; Hypervisor vendor: KVM; Virtualization type: full; Caches (sum of all): ; L1d: 512 KiB (16 instances); L1i: 512 KiB (16 instances); L2: 16 MiB (16 instances); L3: 35.8 MiB (1 instance); NUMA: ; NUMA node(s): 1; NUMA node0 CPU(s): 0-31; Vulnerabilities: ; Gather data sampling: Unknown: Dependent on hypervisor status; Itlb multihit: KVM: Mitigation: VMX unsupported; L1tf: Mitigation; PTE Inversion; Mds: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Meltdown: Mitigation; PTI; Mmio stale data: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Retbleed: Vulnerable; Spec rstack overflow: Not affected; Spec store bypass: Vulnerable; Spectre v1: Mitigation; usercopy/swapgs barriers and __user pointer sanitization; Spectre v2: Mitigation; Retpolines, STIBP disabled, RSB filling, PBRSB-eIBRS Not affected; Srbds: Not affected; Tsx async abort: Not affected",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822:3463,Clear,Clear,3463,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822,2,['Clear'],['Clear']
Usability," environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; MMseq version: 13.45111; CPU: 2x AMD 7543 (64 cores total); RAM: 512 GB; Local Disk: 7 TB SSD; Network: 100 GBit Infiniband; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Thread(s) per core: 1; Core(s) per socket: 32; Socket(s): 1; NUMA node(s): 1; Vendor ID: AuthenticAMD; CPU family: 23; Model: 49; Model name: AMD EPYC 7502P 32-Core Processor; Stepping: 0; CPU MHz: 2500.000; CPU max MHz: 2500.0000; CPU min MHz: 1500.0000; BogoMIPS: 5000.22; Virtualization: AMD-V; L1d cache: 32K; L1i cache: 32K; L2 cache: 512K; L3 cache: 16384K; NUMA node0 CPU(s): 0-31; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr wbnoinvd arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif v_spec_ctrl umip rdpid overflow_recov succor smca sme sev sev_es",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:10140,pause,pausefilter,10140,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,1,['pause'],['pausefilter']
Usability," processed; ................................................................................................... 3 Mio. sequences processed; ...............................................................................; Index table: Masked residues: 26370434; Index table: fill...; ................................................................................................... 1 Mio. sequences processed; ................................................................................................... 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ...............................................................................; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Index table: counting k-mers...; ................................................................................................... 1 Mio. sequences processed; ...........................................................................................WARNING: Sequence (dbKey=5712154) contains only ATGC. It might be a nucleotide sequence.; ........ 2 Mio. sequences processed; ...........................................................WARNING: Sequence (dbKey=6387662) contains only ATGC. It might be a nucleotide sequence.; ........................................ 3 Mio. sequences processed; ...................................................................; Index table: Masked residues: 47802947; Index table: fill...; Erreur de segmentation (core dumped); ```. Many thanks for any help or advice. I have watched the mmseqs demo on https://www.youtube.com/watch?v=LqiHyCLjPno and am looking forward to enjoying the huge simplification it promises (the last example in the demo is the 2bLCA we applied to metagenomics data and my workflow was much more complex and slow than with mmseqs!)...; Best, ; Pascal",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3:3534,simpl,simplification,3534,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3,1,['simpl'],['simplification']
Usability,"## Context. Hi!. We're currently looking for a replacement for CD-HIT-EST for clustering genes in nucleotide space. We have a few conditions when clustering. The CD-HIT-COMMAND is straightforward:. ```; cd-hit-est -i genes.fa -o cluster.fa -c 0.95 -T 64 -M 0 -G 0 -aS 0.9 -g 1 -r 0 -d 0; ```. Basically, we want to perform greedy clustering at 95% identity and at least 90% of the shorter gene should be aligned. The longest sequence of a cluster should become the representative and a member of a cluster should not align against any other representative with a better score/percid. We have now come up with the following command(s):. ```; mmseqs createdb genes.fa genes.mmseqs.db --dbtype 2 --shuffle 0. mmseqs cluster genes.mmseqs.db genes.mmseqs.cluster tmp --kmer-per-seq-scale 0 --kmer-per-seq 1000 \; -s 4 --max-seq-len 80000 --remove-tmp-files 0 --cluster-mode 2 --min-seq-id 0.95 --threads 64 --cov-mode 1 \; -c 0.9 --spaced-kmer-mode 0 --alignment-mode 3 --cluster-reassign 1; ```. The key parameter seems to be `--spaced-kmer-mode 0` as this prevents very similar sequences being placed in different clusters. as reported by others (#831 #489). Using these parameters the clustering compares quite well against the clusters produced by cd-hit:; ```; mmseqs clusters = 13'471'787; cdhit clusters = 13'640'333; runtime(mmseqs) / runtime(cdhit) = 0.09; Rand Score: 0.99; Adjusted Rand Score: 0.91; V-measure: 0.99; ```. So it seems that mmseqs is slightly overclustering (might be due to local vs global alignment) and the cluster consistency metrics indicate that even the cluster membership (and not only the representatives) seem to be mostly correct. . I would like to get your feedback on the command(s) before I make this our standard (nucleotide) gene clustering pipeline. Do you think there are other parameters that could be tweaked?. ## Your Environment; version: `6f45232ac8daca14e354ae320a4359056ec524c2`; Downloaded static binary from GitHub. Best and thanks,; Hans",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/836:1690,feedback,feedback,1690,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/836,1,['feedback'],['feedback']
Usability,"## Context; [test.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612640/test.fasta.txt); [test_dup.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612641/test_dup.fasta.txt). First, I created a DB and ran the cluster command on a small test set of 10 sequences (test.fasta); Second, I duplicated 2 sequences by copying the sequence entries in the fasta file, and changed the sequence names (test_dup.fasta). I then created a new DB, and ran the clusterupdate command. For comparison, I also ran the cluster command on the new DB, to show the difference in output. ```; mkdir tmp tmp2 tmp3; mmseqs createdb test.fasta DB; mmseqs createdb test_dup.fasta DB_dup. # Clustering simple data set in ""test.fasta""; mmseqs cluster DB clu1 tmp --min-seq-id 0.9 --cluster-mode 1. # Clustering duplicated data set in ""test_dup.fasta""; mmseqs cluster DB_dup clu2 tmp2 --min-seq-id 0.9 --cluster-mode 1. # Updating cluster results ""clu1"" with new duplicated sequences ; # (expected to give similar output to ""clu2""); mmseqs clusterupdate DB DB_dup clu1 clu3 tmp3 --min-seq-id 0.9 --cluster-mode 1; ```. ## Expected Behavior; Duplicated sequences to cluster together with the original sequences (which works when running cluster command on the duplicated data set). clu2 is what I would expect, with the duplicated sequences 10 (""seq9B"") and 12 (""seq10B"") clustering with 9 (""seq9"") and 11 (""seq10"") respectively (1 and 6 are close homologs, so it's correct that they're clustering together):; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 10; 9*; 12; 11*; ```. ## Current Behavior; clu3 is NOT what I would expect. 10 and 12 are not included in the results. ; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 9*; 11*; ```. ## Your Environment; Running mmseqs2 from inside a Docker container derived from the Ubuntu:precise container.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/53:690,simpl,simple,690,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/53,1,['simpl'],['simple']
Usability,"## Expected Behavior ; I would like to run MMseq2 to search for genes in a reference genome. As a sanity check, I simply searched for the genes annotated on the genome in the reference genome, so they should match perfectly. (Next, I'll run it on genes that might not perfectly match the reference as they can have some differences in the third char of each coddon.). ## Current Behavior; When running a nucleotides search I get ~5K results, most of them are long enough and mapped well.; When running a translated search I get 89K results that are very short and non of them covers the entire gene.; I assume that this is not a bug but rather an intended behavior. What am I missing?. ## Steps to Reproduce (for bugs); the files can be found here:; query - https://files.cs.huji.ac.il/morani/cds_from_genomic.fna; target - https://files.cs.huji.ac.il/morani/GCF_000011885.1_ASM1188v1_genomic.fna ; translated search command -` mmseqs easy-search cds_from_genomic.fna GCF_000011885.1_ASM1188v1_genomic.fna memseq_igc_to_salmonella_atcc_9150_translated.m8 tmp --search-type 2 -a --format-mode 4 --format-output ""target,query,tstart,tend,nident,qlen""`; regular search command - `mmseqs easy-search cds_from_genomic.fna GCF_000011885.1_ASM1188v1_genomic.fna memseq_igc_to_salmonella_atcc_9150_nucleotides.m8 tmp --search-type 3 -a --format-mode 4 --format-output ""target,query,tstart,tend,nident,qlen""`. ## MMseqs Output (for bugs); output files:; translated search - https://files.cs.huji.ac.il/morani/memseq_igc_to_salmonella_atcc_9150_translated.m8; regular search - https://files.cs.huji.ac.il/morani/memseq_igc_to_salmonella_atcc_9150_nucleotides.m8. ## Context; For a pipeline I'm designing, I'm comparing a few tools that can search for gene in a reference genome. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used : 15.6f452; * Downloaded using conda; * Server info:; NAME=""Debian GNU/Linux""; VERSION_ID=""10""; VERSION=""10 (",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/796:114,simpl,simply,114,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/796,1,['simpl'],['simply']
Usability,"## Expected Behavior. Dear all, I created a toy example downloading 2 fastq.gz, assembling a bacterial genome and predicting proteins with prokka. Then I used just 3 proteins as a source of a collection of genes in order to estimate the abundance of these genes in each sample [and then scale this strategy further]. Yesterday Milot helped a lot by suggesting using '_summarizealis_' + '_createtsv_'. . ## Current Behavior. I am getting a table like the one below (I just added that row as 'headers' for simplicity). > **READS	PROTEIN	#3	#4	#5**; > SRR4213076.15870	EMNFODFG_00006	0.486	0.486	1; > SRR4213076.580999	EMNFODFG_00006	0.965	0.965	1; > SRR4213076.382442	EMNFODFG_00006	0.988	0.988	1. ## Steps to Reproduce (for bugs); I followed these steps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb protein.faa collection_db; mmseqs cluster collection_db collection_clu temporal; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporalx; mmseqs convertalis sample_db collection_db sample_map result.m8; mmseqs summarizealis sample_map sample_map_summary; mmseqs createtsv sample_db collection_db sample_map_summary sample_map_summary.tsv; ```. ## MMseqs Output (for bugs). The full file [sample_map_summary.tsv is here](https://github.com/soedinglab/MMseqs2/files/7523250/sample_map_summary.txt). ## Context. In the sample_map_summary.tsv when I sort it I get 1079 'lines' (hits?) for one of the proteins. **I have 2 questions** . A) can you detail what are columns 3-4-5 (I guess it is overlap protein/read estimated in different ways). B) is it correct then to calculate abundance [for this protein] as 1079 / [total number reads = wc -l sample_db.index ] or `1079/1443540` . I am trying to estimate the abundance and coverage of a collection of proteins in metagenomic data (using the reads as query in this case). I am trying to use mmseqs due to its speed and the scale of the task in this case. ; Thanks for your hel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/504:504,simpl,simplicity,504,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/504,1,['simpl'],['simplicity']
Usability,"## Expected Behavior; Be able to specify the parameters gap open and extend costs; ## Current Behavior; Not able to use the two options. ## Steps to Reproduce (for bugs); I have 2 very simple test files, a.fasta and b.fasta: [a.txt](https://github.com/soedinglab/MMseqs2/files/3166780/a.txt), [b.txt](https://github.com/soedinglab/MMseqs2/files/3166779/b.txt) (here attached as txt). I run this command for each file:; `mmseqs.bat createdb <fastafile> <dbname> --dbtype 2 --max-seq-len 38 `. Then `search` as follows:; `mmseqs.bat search aDB bDB alignDB tmp --search-type 3 -k 3 -s 7.5 -e INF --min-ungapped-score 0 -a --gap-open N --gap-extend M `; (integers in place of N, M). The output is in [searchout.txt](https://github.com/soedinglab/MMseqs2/files/3166806/searchout.txt). I then run `convertalis` to summarize:; `mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln""`. Output: [convout.txt](https://github.com/soedinglab/MMseqs2/files/3166817/convout.txt); Note that in the `convertalis `output, the values for gap open and extension are:; ```; Gap open cost 11; Gap extension cost 1; ```. Is this a bug in the output or is it not taking the settings into account? I have tried many combinations of settings and the reported scores are always to same. ## MMseqs Output (for bugs); Output is included above for each command. ## Context; I am trying to get alignment scores for short DNA sequences. Gaps are important as I am looking for scores which are not heavily influenced by gaps and mismatches in general (little penalty). ## Your Environment; 09 May 2019, Windows version from https://mmseqs.com/latest/; Windows 10.0.17763 Build 17763; No issues running MMseqs2, other than errors such as ; ```; posix_madvise returned an error alignDB; posix_madvise returned an error tmp/3046893737278326904/aln; posix_madvise returned an error tmp/3046893737278326904/search/pref_0; ```; when running `search `and `convertalis`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201:185,simpl,simple,185,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201,1,['simpl'],['simple']
Usability,"## Expected Behavior; Feedback to user presents bytes, which are very difficult to interpret. ## Current Behavior; In my machine (32GB of RAM), I saw some long number starting with a ""1"", and the RAM also in bytes, stating with a ""3"". I would not know if I was using 33% of my RAM (1/3), or 3.3% (1/33). The lengths of the bytes are difficult to asses by mere sight. So, in my personal copy of MMseqs2, I changed the feedback in two files:; ./src/prefiltering/Prefiltering.cpp; ./src/util/kmermatcher.cpp. I divided the bytes by pow(2,30) to get GB. That's so much better! (I made the changes only in printed feedback. Everything else I left untouched. Calculations are still in bytes, only feedback is given in GB.). I don't know if there's more files that give feedback to users in bytes, but that was a good start. Now I see my databases being created, and I see that I have more than enough RAM (it was 3.3%).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/42:22,Feedback,Feedback,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/42,5,"['Feedback', 'feedback']","['Feedback', 'feedback']"
Usability,"## Expected Behavior; I want to cluster a nucleic acid database. ## Current Behavior; I have some question with mmseqs; 1. What is the difference between result2repseq and createseqfiledb; 2. --Are min seq-id and - c the same? If I want to cluster them based on 50% similarity, what should they be set to?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I use this to cluster; ```bash; mmseqs createdb test.fasta tmps/DB; mmseqs linclust tmps/DB tmps/DB_clu tmps --min-seq-id 0.90 --threads 96; mmseqs result2repseq tmps/DB tmps/DB_clu tmps/DB_clu_rep.fasta; mmseqs convert2fasta tmps/DB_clu_rep.fasta outs.fasta; ```. But I read the PDF guide manual on Github, which is. ```bash; mmseqs cluster DB DB_clu tmp; mmseqs linclust DB DB_clu tmp; mmseqs createsubdb DB_clu DB DB_clu_rep; mmseqs convert2fasta DB_clu_rep DB_clu_rep.fasta; ```; i wonder if their are same or not?. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. their are two output. ```; ls -l; total 1107472; -rw-rw-r-- 1 root root 1103346632 Nov 22 02:16 DB_clu_rep.fasta; -rw-rw-r-- 1 root root 4 Nov 22 02:16 DB_clu_rep.fasta.dbtype; lrwxrwxrwx 1 root root 32 Nov 22 02:16 DB_clu_rep.fasta_h -> /data/codonOP/50filter/tmps/DB_h; lrwxrwxrwx 1 root root 39 Nov 22 02:16 DB_clu_rep.fasta_h.dbtype -> /data/codonOP/50filter/tmps/DB_h.dbtype; lrwxrwxrwx 1 root root 38 Nov 22 02:16 DB_clu_rep.fasta_h.index -> /data/codonOP/50filter/tmps/DB_h.index; -rw-rw-r-- 1 root root 30698239 Nov 22 02:16 DB_clu_rep.fasta.index; lrwxrwxrwx 1 root root 37 Nov 22 02:16 DB_clu_rep.fasta.lookup -> /data/codonOP/50filter/tmps/DB.lookup; lrwxrwxrwx 1 root root 37 Nov 22 02:16 DB_clu_rep.fasta.source -> /data/codonOP/50filter/tmps/DB.source; ```. ```; ls -l; total 1107476; -rw-rw-r-- 1 root root 1103346632 Nov 22 02:16 DB_clu_rep; -rw-rw-r-- 1 root root 4 Nov 22 02:16 DB_clu_rep.d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/783:721,guid,guide,721,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/783,1,['guid'],['guide']
Usability,"## Expected Behavior; I would like to replicate the scores given by other implementations of SW local alignment such as parasail. . ## Current Behavior; Even when I use the same substitution matrix as parasail, I get different scores. From looking at the code it looks like the substitution matrix is modified by the ""lambda"" and ""background"" values. I would like for mmseqs align to simply use the substitution matrix I input without any modifications. . ## Steps to Reproduce (for bugs); I created a list of repetitive sequences; ['AAAAAAAAAAAAAA',; 'CCCCCCCCCCCCCC',; 'DDDDDDDDDDDDDD',; 'EEEEEEEEEEEEEE',; 'FFFFFFFFFFFFFF',; 'GGGGGGGGGGGGGG',; 'HHHHHHHHHHHHHH',; 'IIIIIIIIIIIIII',; 'KKKKKKKKKKKKKK',; 'LLLLLLLLLLLLLL',; 'MMMMMMMMMMMMMM',; 'NNNNNNNNNNNNNN',; 'PPPPPPPPPPPPPP',; 'QQQQQQQQQQQQQQ',; 'RRRRRRRRRRRRRR',; 'SSSSSSSSSSSSSS',; 'TTTTTTTTTTTTTT',; 'VVVVVVVVVVVVVV',; 'WWWWWWWWWWWWWW',; 'YYYYYYYYYYYYYY',; 'XXXXXXXXXXXXXX']. I converted these sequences to a database and used ""map"" with this database against itself with the following BLOSUM62 substitution matrix (the # in the first 3 lines was removed for formatting):. Background (precomputed optional): 0.0794 0.0213 0.0501 0.0468 0.0525 0.0647 0.0228 0.0642 0.0491 0.0869 0.0323 0.0376 0.0447 0.0426 0.0649 0.0564 0.0528 0.0591 0.0115 0.0284 0.00001; Lambda (precomputed optional): 0.34657; Avg SeqId (precomputed optional): 0.32351; 	A	C	D	E	F	G	H	I	K	L	M	N	P	Q	R	S	T	V	W	Y	X; A	4	0	-2	-1	-2	0	-2	-1	-1	-1	-1	-2	-1	-1	-1	1	0	0	-3	-2	0; C	0	9	-3	-4	-2	-3	-3	-1	-3	-1	-1	-3	-3	-3	-3	-1	-1	-1	-2	-2	-2; D	-2	-3	6	2	-3	-1	-1	-3	-1	-4	-3	1	-1	0	-2	0	-1	-3	-4	-3	-1; E	-1	-4	2	5	-3	-2	0	-3	1	-3	-2	0	-1	2	0	0	-1	-2	-3	-2	-1; F	-2	-2	-3	-3	6	-3	-1	0	-3	0	0	-3	-4	-3	-3	-2	-2	-1	1	3	-1; G	0	-3	-1	-2	-3	6	-2	-4	-2	-4	-3	0	-2	-2	-2	0	-2	-3	-2	-3	-1; H	-2	-3	-1	0	-1	-2	8	-3	-1	-3	-2	1	-2	0	0	-1	-2	-3	-2	2	-1; I	-1	-1	-3	-3	0	-4	-3	4	-3	2	1	-3	-3	-3	-3	-2	-1	3	-3	-1	-1; K	-1	-3	-1	1	-3	-2	-1	-3	5	-2	-1	0	-1	1	2	0	-1	-2	-3	-2	-1; L	-1	-1	-4	-3	0	",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/487:384,simpl,simply,384,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/487,1,['simpl'],['simply']
Usability,"## Expected Behavior; More docs about the pairaln module, which seems to be an important module for the MSA pairing of AlphaFold Multimer. ## Current Behavior; I cannot find any descriptions about what this module do. Does it pair any given sequences? Or it just simply extracts the species descriptions in UniRef30 (wrt the MSA pairing demand in ColabFold)? If this is the case, the naming can be a little bit confusing.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/628:263,simpl,simply,263,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/628,1,['simpl'],['simply']
Usability,"## Expected Behavior; Running linclust with with --min-seq-id 1.0 -c 1.0 clusters identical sequences. ## Current Behavior; Non-identical sequences are clustered. ## Steps to Reproduce (for bugs); my cmd:; `mmseqs linclust my_mmseqs2.db my_mmseqs2.linclust.clusters tmp --min-seq-id 1.0 -c 1.0 --cov-mode 0 -v 3 -e 0.001`. ## MMseqs Output (for bugs); When I parse the output, I find non-identical sequences clustered together, e.g. these 2, shown here BLASTed:; ```; Query 1 MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQNFTGIRTSLRLS 47; MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQ FTGIRTSLRLS; Sbjct 1 MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQIFTGIRTSLRLS 47; ^ different aa; ```; ## Context; Initially I thought this is just due to the reduced protein alphabet, but in this example (and others) the different residues are `I` and `N`, which doesn't appear to follow the reduced alphabet i found in the paper `(L, M), (I, V), (K, R), (E, Q), (A, S, T), (N, D), and (F, Y)`. You might say that clustering identical sequences is pointless, since it's a simple string/pattern matching exercise, but since I was trying a few different thresholds, I wanted to implement it through a consistent mmseqs2 workflow. Either way, it would be nice to understand the behaviour. ## Your Environment; Running arch-linux with MMseqs2/7-4e23d. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/200:1028,simpl,simple,1028,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/200,1,['simpl'],['simple']
Usability,## Expected Behavior; Shouldn't segfault.; Ideally it should present the user with an error and some guidance on what to do. ## Current Behavior; Segfaults during prefilter stage due to:. ```; Query database: /share/input.fasta(size=0); ```. ## Steps to Reproduce (for bugs); * Create a FASTA file containing 1 sequence.; * Run `mmseqs createdb input.fasta db`; * `rm -rf tmp && mkdir tmp`; * Run `mmseqs search input.fasta db test tmp`. ## MMseqs Output (for bugs); ```; Program call:; input.fasta db test tmp . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Omit Consensus 	false; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; /share/input.fasta db /share/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 40 -v 3 -s 5 . MMseqs Ver,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/41:101,guid,guidance,101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41,1,['guid'],['guidance']
Usability,"## Expected Behavior; The analysis finished in minutes on MMSeq2 MSA server using colabfold. ## Current Behavior; Local mmseqs always paused for hours without generating outputs. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I am using `colab_search` which calls `mmseqs` like `search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8`. The query contains 4 amino acid sequences, and each has the length of 493 amino acid. NOTE, when I took off `--split 8`, I also observed that mmseqs halts at certain stage. ## MMseqs Output (for bugs); <pre>; search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8 [93/1999]. MMseqs Version: b768f48f0bd73688b6a68132159a97f7b6310f03; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 2; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 72; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 8; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 10000; Split database 8; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517:134,pause,paused,134,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517,1,['pause'],['paused']
Usability,"## Expected Behavior; When running with highly reduced databases with the size of lower than 1MB, it works just fine. ; Both the complete call for the search workflow ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; as well as the explicit call for the prefilter module only ./mmseqs prefilter ""query"" ""target"" ""result"" are running as expected. ## Current Behavior; Using bigger files for query and target data, which in no means are unreasonable in my opinion (5.1 MB each), the program exits with a segmentation fault during the prefiltering step. See output below for more detailed information. ## Steps to Reproduce (for bugs); strictly following the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:676,guid,guide,676,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['guid'],['guide']
Usability,"## Expected Behavior; mmseqs createindex; finishes in reasonable time on splitted db. ## Current Behavior; mmseqs createindex ; gets stucked in seemingly infinite loop after filling the index. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; The problem is interimttent but simply running the steps to create subdatabases from the manual, followed by createindex. Size of database does not matter much.; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; The output is standard, just incomplete. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; 11-e1a1c. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; cluster admin compiled the version so self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; probably reasonably current gcc...; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; about 120GB RAM per node, intel CPUs with SS2, not sure about AVX2.; * Operating system and version:; some flavor of linux (debian-style)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/314:355,simpl,simply,355,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/314,1,['simpl'],['simply']
Usability,"## Expected Behavior; searching against MMseqs2 databases after clustering step. ## Current Behavior; after mmseq2 db creation (giving a type nucleotide db) and clustering, it does not proceed due to formating issue (clustering). I tried to create a new sub db using the index from the clustering DB ; (createsubdb clust_ORF_min100/dORF_seq_DB.index clust_ORF_min100/dORF_seq_DB clust_ORF_min100/dORF_rep_DB); but it still print the same error. How can i change the mmseq2 cluster output to make it usable by the search function ?. ## MMseqs Output (for bugs); Input database ""clust_ORF_min100/dORF_rep_DB"" has the wrong type (Clustering). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 	15.6f452; conda environement on a server (linux distribution)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/876:499,usab,usable,499,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/876,1,['usab'],['usable']
Usability,"## Information. Hi,. I am a bit confused with the MMseqs2 suite modules. If I understood correctly:. - when I do `mmseqs search args`, it uses the algorithm described in https://www.nature.com/nbt/journal/vaop/ncurrent/full/nbt.3988.html (3 stages: prefilter, ungapped alignment, gapped SW alignment. The last one generates similarity file, giving the % of similarity for each pair of sequences); - when I run `mmseqs linclust args`, it executes the algorithm described in https://www.nature.com/articles/s41467-018-04964-5; - For `mmseqs cluster`, I saw that it is slower than linclust, but also way more sensitive. So, I am using this module, to cluster sequences with min-seq-id = 0.8 (default of mmseqs). But I do not understand what is used. In the userguide, I saw :. > mmseqs cluster: Clusters sequences by similarity. It compares all sequences in the sequence DB with each other using mmseqs search, filters alignments according to userspecified criteria (max. E-value, min. coverage,. . . ), and runs mmseqs clust to group similar sequences together into cluster' (p.17). At the same time, in p.22, I saw:. > The cascaded clustering workflow first runs linclust, our linear-time clustering module, that can produce clustering’s down to 50% sequence identity in very short time. To achieve lower sequence identities and/or to further improve the resulting clusters, we continue with three cascaded clustering steps. Cascaded clustering being the default for `mmseqs cluster`, this would mean that the search module is not used?. When using `mmseqs search args` I can get the similarity file in blast format (using convertalis). Therefore, is it also possible to get this file at the end of clustering step, if it uses mmseqs search algorithm as I saw p.14?. I don't know if my questions are really clear. Please do not hesitate to ask me if you need some more information. Thanks a lot for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/279:1806,clear,clear,1806,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/279,1,['clear'],['clear']
Usability,"## Suggestion of a feature. It would be extremely useful if mmseqs have native python bindings. Results from the search could be returned as pandas Dataframe (which is standard python tabular format). It would simplify the usage of mmseqs2 as a building block for bioinformatics aplications.; Such bindings could be implemented using pybind (https://github.com/pybind/pybind11). Currently we are interested in this feature as a [whole organisation](https://github.com/covid-genomics), however we don't have enough resources to create and maintain bindings by ourselves.; With little to no change mmseqs2 could be also used as a Python framework for biological sequences manipulation (similar to [Biopython](https://biopython.org/) of [Biotite](https://www.biotite-python.org/index.html), but faster and dedicated for large volumes of sequences). ## PoC. We created a very rough [PoC with bypind11](https://github.com/covid-genomics/biosnake) to examine how easy it is to create api wrappers.; The bindings are far from being production-ready and the project was just used as a proof that this is possible. ## Possible collaboration. We want to know if you are interested in helping us develop and maintain the bindings. If yes, then we would like to see tight future collaboration to make mmseqs2 more accessible. Bindings would make it easier to use in standard data science pipelines and much more flexible. [Covid Genomics](http://covidgenomics.com/) contact email: [contact@covidgenomics.com](mailto:contact@covidgenomics.com)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/450:210,simpl,simplify,210,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450,1,['simpl'],['simplify']
Usability,"/8813_db --threads 10; `; I thought [this was the way](https://github.com/soedinglab/MMseqs2/issues/436) to feed the next steps, 8813_db would be the query in this case. I reasoned since the database of nonredundant proteins is in nucleotide format and the reads created a nucleotide database the search would be between nucleotide. . **I run** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --search-type 3; `. I got this error ; ```; Unrecognized parameter --search-type; Did you mean ""--seed-sub-mat""?; ```. **Or** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --seed-sub-mat nucl`. and I got this message error; ```; It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. Using 8813_FA as a query which -a simple database created from a fasta, part of the assembly of that sample, the search works. `mmseqs search 8813_FA ../DATABASE/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:1732,simpl,simple,1732,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,1,['simpl'],['simple']
Usability,"0 sequence, i.e.,. ```; evm.model.utg11.204 UniRef100_UPI000A307CE5 0.231 160 116 3 2138 2297 16366 16518 5.20E-36 164; ```. ## Current Behavior; MMseqs2 is splitting this long entry into two separate ones: UniRef100_UPI000A307CE5_0 and UniRef100_UPI000A307CE5_1. . I can verify this by performing a grep search for ""UPI000A307CE5"" on the .lookup file which returns; ```; 132227718 UniRef100_UPI000A307CE5_0; 132227719 UniRef100_UPI000A307CE5_1; ```. Additionally, searching for these two lines within the output file created by ""createdb"" indicates that the tail portion of this UniRef100 sequence has indeed been split from the main. Because of this splitting behaviour, my output convertalis table has this entry. ```; evm.model.utg11.204 UniRef100_UPI000A307CE5_0 0.231 160 116 3 2138 2297 16366 16518 5.20E-36 164; ```. From what I can guess this might not strictly be a bug in MMseqs2 - perhaps exceedingly long sequences can't be handled properly during alignment. I can handle this behaviour now that I am aware of it; it resulted in some confusion as to why I was not obtaining the expected results when parsing the uniref100.xml file for the gene name / taxon code of significant hits. However, I think that a consistent sequence ID should be returned since this behaviour is not clear and it took a bit of investigation to figure out what was happening. ## Steps to Reproduce (for bugs); Generate and index a FASTA file containing the above-mentioned UniRef100 sequence. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): a58d38379bfb3c5ad75272d358bfec9f2c100b61; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): HPC, nodes with support for both.; * Operating system and version: SUSE 12.2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/89:1612,clear,clear,1612,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/89,1,['clear'],['clear']
Usability,"===============================================] 100.00% 154 0s 46ms; Time for merging to aln_step0: 0h 0m 0s 4ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 72ms; clust clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/aln_step0 clu/sim2_tmp/12164117771218227067/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 154 0s 8ms; Sort entries; Find missing connections; Found 1 new connections.; Reconstruct initial order; [=================================================================] 100.00% 154 0s 8ms; Add missing connections; [=================================================================] 100.00% 154 0s 0ms. Time for read in: 0h 0m 0s 85ms; Total time: 0h 0m 0s 161ms. Size of the sequence database: 154; Size of the alignment database: 154; Number of clusters: 140. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 165ms; mergeclusters in/DB_in clu/sim2_clu clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/clu_step0 --threads 16 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 154 0s 39ms; Clustering step 2; [=================================================================] 100.00% 140 0s 132ms; Write merged clustering; [=================================================================] 100.00% 164 0s 195ms; Time for merging to sim2_clu: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 253ms. ## Context; Is combining `--min-seq-id` with `--similarity type 1` the correct approach to define thresholds for clustering? From what I read in the guidelines, I expect this measure to be automatically converted.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:32362,guid,guidelines,32362,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['guid'],['guidelines']
Usability,"Based on the graph below, which I pulled from the MMSeqs2 [paper supplement](https://www.biorxiv.org/content/biorxiv/suppl/2017/06/07/079681.DC5/079681-1.pdf), I was expecting my query to take less than an hour (even with higher sensitivity). However, it seems to be taking much, much longer. Additionally, it seems to be hanging on the stage after `Index table: fill` is printed, after printing a good portion of the progress bar. . ![image](https://github.com/soedinglab/MMseqs2/assets/49450966/7ed7b5b0-8236-477c-93f1-904cb461d691). My query database is only 14 sequences in size (which I realize is much smaller than the MMSeqs2 program is intended to work with). The target database, which is the result of splitting all of GTDB into sub-datasets, is about 6 million sequences (6,263,739 to be exact). This is the command I executed. . `mmseqs easy-search -s 7 query.fasta targetDB_split result.m8`. Here is some information about my computing environment. I should also note that I am submitting the job using ``slurm``, and allocated 50 GB of memory (which is less than the 23 GB predicted by the program). . ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Thread(s) per core: 1; Core(s) per socket: 16; ```; It is possible that this is just a slurm issue, or something else going on which is not related to MMSeqs -- I just wanted to double-check that there is nothing glaringly wrong with this workflow. Also, thank you so much for how quickly you respond to issue requests! I really appreciate it.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805:418,progress bar,progress bar,418,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805,1,['progress bar'],['progress bar']
Usability,"Dear all,. Does MMSeqs2 provide a way (a command) to generate PSSM profiles from the MMSeqs2 multiple sequence alignment (msa) output file out.mm_msa?. I think providing such a functionality can help a lot. In this way, we don't need to call psiblast (which downgrades the runtime performance of the machine-learning tools) anymore to generate PSSM features for the protein residues. Alright?. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/580:308,learn,learning,308,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/580,1,['learn'],['learning']
Usability,"Do you have a receipt for running MMseqs2 using MPI and slurm? I'm trying various strategies but some return errors, some spawn much too many threads on nodes (probably to my lack of expertise here). Did you run the program on cluster?. I have, let's suppose, 2 nodes, 24 threads each (not counting masternode of course). I'd like to use both nodes for clustering. I run the following on masternode:. ```; RUNNER=""mpirun -np 1""; salloc -N 2 mpirun mmseqs cluster nr70_rep nr60 tmp --min-seq-id 0.6 --threads 24; ```; What is the meaning of RUNNER variable here? Where should it be set? On master? On each node? I guess MMseqs2 itself manages further the sub-tasks so I have no intuition how to make it work with slurm. Thank you for any advice here.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/70:677,intuit,intuition,677,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/70,1,['intuit'],['intuition']
Usability,"Do you have a recommendation for creating a mmseqs nt database from a collection of fasta files? The instructions for making a mmseqs2 database from a blastdb are clear. My guess is that one could just take a collection of fasta files and convert them to a blastdb using makeblastdb, but I worry about the other things that creating a blastdb will do (repeat masking). As a more specific example, we would like to make a 'taxonomy aware' version of an mmseqs database for all NCBI Virus RefSeq genomes from NCBI Assembly (https://www.ncbi.nlm.nih.gov/assembly). So would you recommend we just download them and make a blastdb of these or is there an approach more amenable to the use of mmseqs?. Thanks,. Scott",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/412:163,clear,clear,163,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/412,1,['clear'],['clear']
Usability,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460:272,simpl,simply,272,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460,1,['simpl'],['simply']
Usability,"Frameshift aignments are very useful for Nanopore data, where indels are common. It can also be used for virus-related research, as [some phages have conversed programmed frameshifts](https://www.cell.com/fulltext/S1097-2765(04)00539-8) in important genes. DIAMOND supports frameshift-aware alignments since [version 0.9.14](https://github.com/bbuchfink/diamond/releases/tag/v0.9.14). This is a simple explanation in their documentation:. > Penalty for frameshifts in DNA-vs-protein alignments. Values around 15 are reasonable for this parameter. Enabling this feature will have the aligner tolerate missing bases in DNA sequences and is most recommended for long, error-prone sequences like MinION reads. In the pairwise output format, frameshifts will be indicated by `\` and `/` for a shift by +1 and -1 nucleotide in the direction of translation respectively.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/417:395,simpl,simple,395,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/417,1,['simpl'],['simple']
Usability,"Hello,. I would like to perform clustering of a large nucleotide sequence with the easy-clust .; However, it is not clear for me whether the ""--min-seq-id"" and ""-c"" parameters refer to alignments in nucleotide space or alignments in amino-acid space after sequence translation. Thanks,; Florian",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/512:116,clear,clear,116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/512,1,['clear'],['clear']
Usability,"Hello. I am running MMSEQS through the SLURM job scheduler on our institute cluster. In the mmseqs SEARCH command line of my SLURM script, I specify a temporary directory on the /tmp of the compute node. However, during execution, I have a file named like ""core.181135"" which is created and which reaches a phenomenal size (>400GB) in the folder where my slurm script is located and from where I launch the sbatch command. The ""181135"" number corresponds to the process id of the mmseqs job on the compute node. I was wondering if anyone around here could have any idea of the origin of this bizarre behavior of the program. The command line is like (I also attach the SLURM script to this post):. `mmseqs search /shared/projects/phycovir/JGI/MMSEQS/ScafRef-ALLDATES.COASSEMBLY.lgmin2000.pep.mms /shared/bank/nr/current/mmseqs/nr.mmdb /shared/projects/phycovir/JGI/MMSEQS/NR/ScafRef-ALLDATES.COASSEMBLY.lgmin2000.pep_VS_nr.mms.rsltDB /tmp/tmp_mmseqs.181126 --remove-tmp-files true --threads 64 -a -e 1E-5 -v 3`. I hope it's clear enough; Thanks for the help; Guillaume. ## Your Environment; mmseqs2/10-6d92c. [MMSEQ-SEARCH-69.SLURM.txt](https://github.com/soedinglab/MMseqs2/files/3956903/MMSEQ-SEARCH-69.SLURM.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/257:1024,clear,clear,1024,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/257,1,['clear'],['clear']
Usability,"Hi I am new to MMseqs2 (and the coding world in general). What I want to do I am sure is very simple I just cannot seem to figure out how to do it. I ran a query protein sequence against the UniProtKB/Swiss-Prot database. The resultant ResultDB showed 20 hits. I want to extract those sequences corresponding to the 20 hits to do a MSA using ClustalO. Is there a way to obtain the actual sequences corresponding to the hits from a search query and convert them to fasta format?. I tried using the creattsv function to convert the ResultDB to a tsv file, but because there is no header information the convert2fasta function did not work. Any help or suggestions would be appreciated. . Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/492:94,simpl,simple,94,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/492,1,['simpl'],['simple']
Usability,"Hi MMseqs2 team,. I am completely new to MMseqs2 and simply want to taxonomically classify a few (30 max.) amino acid sequences that I retrieved from my pipeline. For this, I want to use the Uniref90 repository and I started with creating the database and indexed:. mmseqs createdb uniref90.fasta uniref90_DB; mmseqs createindex uniref90_DB uniref90_index --threads 16; mmseqs createtaxdb uniref90_DB tmp. I did the same for my queries:; mmseqs createdb queries.fa queries_DB; mmseqs createindex queries_DB queries_index. Then, I searched the query database against the Uniref90 database:; mmseqs search queries_DB uniref90_DB queries_search_result uniref90_index --threads 16. Finally, I applied LCA taxonomy:; mmseqs taxonomy Untersee/SRR17021127_orf_nosZ_only_DB uniref90_DB taxonomyResult tmp --tax-lineage 1 . This is the output:; MMseqs Version: 	12ba202798016f7f8880be11d792592fdb674448; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	1; Compressed 	0; Threads 	128; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nuc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/708:53,simpl,simply,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/708,1,['simpl'],['simply']
Usability,"Hi There,; I am curious if you could provide any solution to generate Blast XML based on the output of MMseqs2. It seems there were some efforts but not final solution. I want to use blast2go at the next step but it is not possible to generate required format using m8 format. I would be appreciate if you could guide me.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/486:312,guid,guide,312,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/486,1,['guid'],['guide']
Usability,"Hi all, . I am trying to search many (30M) small peptides (15aa length) against a database of ; all known protein sequences (BLAST NR). I know that each of the peptides is contained in the database, i.e. ; there should be at least one exact match in the database. I only care about exact or very close matches, ; a very sensitive search should not be necessary. . However, the result table contains only 1.6M entries. I manually checked a few peptides, and they are indeed included ; in the database (using `grep` on the mmseqs db). . So far, I have been using `easy-search` using default parameters: . ```bash; mmseqs easy-search \; query.fa \; /path/to/nr \; result.tsv \; ./tmp; ```. Can you guide me what parameters I need to tune to get more hits (including the exact matches) and at the same ; time not compromise the runtime? Also, I don't understand the differences between the `search` and the `map` command. Should I use the latter for my purpose? . Thanks in advance, ; Gregor . ## Your Environment. * `MMseqs2 Version: 45c4de7f1daefa06b45688195305eadedaea4d97`; * static build with AVX2 support; * `Intel(R) Xeon(R) CPU E5-2699A v4 @ 2.40GHz`, 44 cores, 1TB RAM; * Operating system and version: `CentOS Linux 7 64bit / Linux 3.10.0-1127.13.1.el7.x86_64)`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/373:695,guid,guide,695,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373,1,['guid'],['guide']
Usability,"Hi everybody,; First of all, let me tell you that MMseqs really allowed me to perform exactly the kind of analysis I have been trying to perform in months! It really saved my day.; I have a rather simple question: is there a way to extract from a query DB (a metagenome in FASTQ format) the sequences matching the targetDB (a custom protein reference database). I guess there's some option I'm not looking at...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/356:197,simpl,simple,197,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/356,1,['simpl'],['simple']
Usability,"Hi!. I was wondering how I can increase chances of getting more hits with mmseqs search that are not full-length to full-length but subsequences of a query and/or a target? (seems intuitively that --max-accept, playing with -s parameter can help, but maybe i'm missing smth?); Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/753:180,intuit,intuitively,180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/753,1,['intuit'],['intuitively']
Usability,"Hi, I am doing a search with the same fasta in query and subject. Doing so, I noticed that the sequence identity computed between the exact same sequence is not equal to 1. I used the following command line: ; `mmseqs search example.fasta.dbm example.fasta.dbm example.fasta.dbm_selfMMseq tmp -s 5.7 --search-type 4 --max-seqs 100000 --threads 20 `; I am using MMseq version 13.45111. If I focus on the sequence named 1441628, we can see in the following screenshot that the percentage of identity of itself against itself in not 1. In addition, there are several hits, and none on the full length of the sequence. ![Screenshot_20230323_112234](https://user-images.githubusercontent.com/57403425/227251314-6cb3f088-b125-414f-a15c-efd85c8c0c93.png). Whereas with blastn, I have the expected behaviour, which is a single hit on the full length of the sequence, with 100% of identity:; ![Screenshot_20230323_112448](https://user-images.githubusercontent.com/57403425/227252003-f94f513c-bc28-44d6-bb70-6c278b91daed.png). I tried running MMseq with the option `-a`, which is simply supposed to add backtrace string, according to the help. The output being different, I now understand that this option also calculate the percentage of identity differently. I now get hits with 100% identity, however, there are still several hits and none on the full length of the sequence:; ![Screenshot_20230323_112723](https://user-images.githubusercontent.com/57403425/227252775-92ad6a26-5703-4b3a-ad85-6709a2a4a8fb.png). I am thus very confused by the outputs generated by MMseq, even with the option `-a`, and would like to know whether someone has any explanation about it? Of course, I don't need MMseq to tell me the percentage of identity between a same sequence, I know it is 100%, but the fact that MMseq cannot figure this out worries me, including for search between different sequences. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/688:1070,simpl,simply,1070,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/688,1,['simpl'],['simply']
Usability,"Hi, just a simple question, since I have profiles build with result2profile, how do I extract the alignment from each profile?; Stockholm, fasta, a2m, a3m, or any well known format. . Also, a related question, may I use the profiles directly to hhalign? Yet, there are huge difference between compare profile with mmseqs result2profile and use hhalign?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/153:11,simpl,simple,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/153,1,['simpl'],['simple']
Usability,"Hi,. I am interested in computing all pairwise sequence identities in a given cluster. I believe mmseqs alignall accomplishes this task, but I am getting unexpected results. Using the ""examples"" folder that was downloaded during the mmseqs installation process, I created the following clusters:. `mmseqs createdb examples/QUERY.fasta queryDB`; `mmseqs cluster queryDB queryDB_clu tmp --min-seq-id 0.3 -c 0.8`; `mmseqs createtsv queryDB queryDB queryDB_clu queryDB_clu.tsv`. I then use mmseqs alignall to compute all pairwise sequence identities in each cluster:. `mmseqs alignall queryDB queryDB_clu queryDB_alnall`; `mmseqs createtsv queryDB queryDB queryDB_alnall queryDB_alnall.tsv`; `OFS=""\t"" awk 'FNR==NR{a[$1]=$2;next}{$3=a[$3]; print}' queryDB.lookup queryDB_alnall.tsv > queryDB_alnall_newid.tsv`. Unfortunately, the pairwise sequence identities that get calculated seem incorrect. For instance, when you compare the sequence P40148 against itself, I get a sequence identity less than 100% (i.e., 93.1%). Below is an example line from the output file `queryDB_alnall_newid.tsv`:. `P40148 P40148 P40148 192 0.931 2.952E-59 -1 96 97 -1 96 97`. Alternatively, I tried specifying alignment mode of 3 (because I think that's also the default of `mmseqs cluster`):. `mmseqs alignall queryDB queryDB_clu queryDB_alnall --alignment-mode 3`. Then I strangely get 0% sequence identity for *all* pairwise comparisons. E.g,:; `P40148 P40148 P40148 192 0.000 2.952E-59 0 96 97 0 96 97`. I am a non-scientist learning how to use mmseqs, so I may be missing something obvious. I would be very grateful for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503:1504,learn,learning,1504,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503,1,['learn'],['learning']
Usability,"Hi,. I have a quick question for which I could not find a solution on the manual. ; Is there a way to extract a specific set of sequences (and potentially a specific subsequence region) out of mmseqs2 DB?; From what I have seen, mmseqs view --id-list extract sequences only based on the internal DB id and not the sequence id (e.g that printed on the search output). Is there an easy way to do it? Something like blastdbcmd equivalent?. For example, I have the following hit:; `Uniq65133;size=2; NR_027575.1 0.928 56 4 0 1 56 892 946 2.908E-13 80 58 0.966 573370 Desulfovibrio magneticus gene for 16S rRNA`; ; mmseqs view DB --id-list ""NR_027575.1"" --idx-entry-type 3; `X17276.1 Giant Panda satellite 1 DNA`. Only when I locate the sequence id on the DB.lookup I manage to get the correct seq with view:; mmseqs view DB --id-list 2068063 --idx-entry-type 3; `NR_027575.1 Desulfovibrio magneticus RS-1 16S ribosomal RNA, partial sequenceD43944.2 Desulfovibrio magneticus gene for 16S rRNA `. I don't have the results DB available anymore, so reformatting the results is unfortunately not an option... Any advice?. Sorry if I missed any trivial answer in the user guide :-)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/626:1162,guid,guide,1162,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/626,1,['guid'],['guide']
Usability,"Hi,. I have seen that in the mmseqs user guide, there is a part about how to preprocess the GTDB database. I am still confusing after reading that. I want to ask if there is more details about how to build the database from the latest GTDB data (https://data.ace.uq.edu.au/public/gtdb/data/releases/release202/202.0/) for mmseqs taxonomy? . Thanks for your any suggestions. Sincerely; Shaojun",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/514:41,guid,guide,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/514,1,['guid'],['guide']
Usability,"Hi,. I'm trying to learn the workflow through the tutorial. unfortunately, the commands in the tutorials are wrong according to the program codes. i followed this steps. # Download the database; wget http://wwwuser.gwdg.de/~compbiol/mmseqs2/tutorials/uniprot_sprot_2018_03.fasta.gz; wget http://wwwuser.gwdg.de/~compbiol/mmseqs2/tutorials/uniprot_sprot_2018_03_mapping.tsv.gz; gunzip uniprot_sprot_2018_03_mapping.tsv.gz. # Create a taxonomically annotated sequence database; mmseqs createdb uniprot_sprot_2018_03.fasta.gz uniprot_sprot; mmseqs createtaxdb uniprot_sprot tmp --tax-mapping-file uniprot_sprot_2018_03_mapping.tsv . (mmseq2) cyborg@skynet:~/root_dev$ mmseqs createtaxdb uniprot_sprot tmp --tax-mapping-file uniprot_sprot_2018_03_mapping.tsv; mmseqs createtaxdb:; Annotates a sequence database with NCBI taxonomy information. The program will download the Uniprot taxMappingFile and ncbi-taxdump-folder if only two arguments are passed. Please cite:; Steinegger, M. & Soding, J. MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). © Martin Steinegger <martin.steinegger@mpibpc.mpg.de>. Usage: <i:sequenceDB> [<i:taxMappingFile> <i:ncbi-taxdump-folder>] <tmpDir> [options]. common options	default 	description [value range]; -v	3 	verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info. Unrecognized parameter --tax-mapping-file; Did you mean ""-v""?. if there are any updates to the codes, please let me know. -Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/823:19,learn,learn,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/823,1,['learn'],['learn']
Usability,"Hi,. I'm using MMseqs2 for all-vs-all alignments. As indicated in the user guide pdf, I'm using the bash script to perform a fake prefiltering step before aligning. That seems to work, as all alignments are computed, but the results are a bit unexpected:; ```; >Q8CD91; EERVVHWYFKLLDKNSSGDIGKKEIKPFKRFLRKKSKPKKCVKKFVEYCDMNNDKSITVQELMGCLGVTREEGKANTRKRHTPRGNAESSSSNRQPRKQG; >Q95JC9; GPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPPPGPSPPRPPPGPPPQ; ```; I didn't change much of the defaults; ```; mmseqs createdb --dbtype 1 dummyfasta.fasta seq_db; mmseqs_fake_prefilter.sh seq_db seq_db pref; mmseqs align seq_db seq_db pref align_db --alignment-mode 3 -e inf --min-seq-id 0.3; mmseqs convertalis seq_db seq_db align_db check_alignments.tab; ```. ```; query target fident alnlen mismatch gapopen qstart qend tstart tend evalue bits; Q8CD91 Q8CD91 1.000 100 0 0 1 100 1 100 1.707E-71 202; Q8CD91 Q95JC9 1.000 2 0 0 83 84 91 92 4.610E+01 9; Q95JC9 Q95JC9 1.000 100 0 0 1 100 1 100 7.088E-35 108; Q95JC9 Q8CD91 0.333 3 1 0 11 13 21 23 1.508E+02 7; ```; The second alignment's `fident` makes no sense to me. I understand that the e-value is high too, but I really want all pairwise % identities returned so I don't use it for filtering. Do I need to use a different configuration to make this work, or is mmseqs2 just not suitable for this all-vs-all identity task?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/498:75,guid,guide,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/498,1,['guid'],['guide']
Usability,"Hi,. Is it possible to see all the hits (seq id, e-val etc.) for a query sequence that are used to inform the lca? I have some hits to the taxonomic level 'root' that seem to to be clearly from a particular taxa when I blast them against NR and I'd like to see in more detail what's going on in the lca stage of mmseq taxonomy. Cheers,; Andrew",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/705:181,clear,clearly,181,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/705,1,['clear'],['clearly']
Usability,"Hi,; I am new to MMSeqs2. It is really a good tool. However, I have 2 queries, may be basic too. But I want your opinions.; In an attempt to build a set of 30-90% sequence similarity, I removed the redundant hits myself firstly and then deployed a minimum sequence identity threshold of 30% and coverage 1 (All 92 input sequences are close homologues and so I want to avoid the partial match to build the good set), it resulted in 52 hits. So, now as you are guiding, the multiple resultant cluster sets have the sequence identity lesser than 30%, but the 52 hits share a sequence identity > 30%. Is this correct that this way my reduced set of 52 hits contains the sequences that are 30-90% identical?. Further, why is it that for another sequence-group, the resultant set spans the same 45 sequences for both 30% and 90% cutoffs. So, does it mean that the length of atleast 1 representative sequence is bigger and it spans multiple sequences in either of these ranges to result in the same set? How should this result be defined?; Thanks for your clarifications.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/173:459,guid,guiding,459,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/173,1,['guid'],['guiding']
Usability,"Hi,; I am trying to get the taxonomy of several contigs present in a multi-fasta file, but I'm having some issues with the `easy-taxonomy` command, as it is has not completed the assignment of about 804K contigs on 16 threads in 24h using as reference database NR. ; Due to the limits of the machine that I'm using (I can use a partition with external connection using only a single core and a rather short time limit) set up the database using a mix of the `databases` command and the other commands shown in the user guide. Among the different steps I changed the number of threads used, as, for example, it seemed that `createdb` worked only using the same number of threads with which `databases` was initially run.; Is this something to be expected or have I done something wrong during the database setup?. Thanks in advance for your help and, also, for making this tool!. These are the commands that I've used:; ```; mmseqs databases NR refDB/NR tmp --threads 1 -v 3 --force-reuse 1; mmseqs createdb tmp/11117391383852458210/nr.gz refDB/NR --compressed 0 -v 3; mmseqs createtaxdb refDB/NR tmp; mmseqs createindex refDB/NR tmp --split-memory-limit 100G; mmseqs easy-taxonomy contigs.fasta refDB/NR alnRes tmp --split-memory-limit 100G --threads 16; ```. This is the output of `createdb`:; ```; createdb tmp/11117391383852458210/nr.gz refDB/NR --compressed 0 -v 3 . MMseqs Version: 	13.45111; Database type 	0; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [===================================================================================================	1 Mio. sequences processed; ===================================================================================================	2 Mio. sequences processed; ===================================================================================================	3 Mio. sequences processed; ======================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:519,guid,guide,519,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,1,['guid'],['guide']
Usability,"Hi,I'm trying to convert the MSA of a cluster DB to HH-blits format. Following the user guide below. > mmseqs cluster DB clu tmp; mmseqs result2msa DB DB clu cluMsa --msa-format-mode 1; ln -s DB_h cluMsa_header.ffdata; ln -s DB_h.index cluMsa_header.ffindex; ln -s DB cluMsa_sequence.ffdata; ln -s DB.index cluMsa_sequence.ffindex; mpirun -np 2 cstranslate_mpi -i cluMsa -o cluMsa_cs219 -A /path/to/cs219.lib -D /path/to/context_data.lib -x 0.3 -c 4 -I ca3m -b. However, I notice there is no one file named clusMsa, although 11 files with different file extensions are outputed. And the 'ln -s' links seems to be unnecessary.; When I try to run cstranslate, I got this error:. > Unable to read input file 'clu_msa'. I think the file not existing.; So how to realize the output file of result2msa? If I just need the single clu_msa file for next analysis, is there any way to get it?. My mmseqs version is 13.45111 and CPU support for AVX2/SSE.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/508:88,guid,guide,88,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/508,1,['guid'],['guide']
Usability,"Hope I am not making a simple mistake but output seems to be not what I expect. Thanks for any help. ## Expected Behavior; Fasta-formatted cluster results have output following documentation. ## Current Behavior; Fasta-formatted cluster results have empty lines that don't seem to correspond to correct clustering. Examples:. ```; >Pip8wV; >Pip8wV; MQKNLIQRYIPLSDKNWFCTGGPARFYTEPETTQEFVKSLEFANLHNLELFILGKGANILISDNGFDGLVIKPNLQQISHQDYDNDHALVHAQAGACIKDLITYCLKNNMTGPEEFSGIPGTIGGSVYINIHYFNFFLSDFLYNAQVIHKKTGDIFTVTKNWFNFGYDKSKLFEKEYFLVQATFKLKKITPIKAAYATGRSIEIIRHRNARYPNSGTCGSFFRNFLDSEVTLNIAGTEKKMIYVGYYLDKLGVKGNLNVGGASVSHKHANMIVNTNNATSTDIINLARQMQKLVQENFGITPQPECQLIGFKKYPLL*; >PJB17I; >E7HKRc; MFKRSVCVFCGSRKGRNPAHEAAATDLGTALAQNDMRLVYGAGDVGLMGAVARAAQAAGGETFGVIPDHLVKWEVGKTDLTRYIVTETMHERKKVMFMNCDAVVVLPGGAGSLDEYFEVLTWRQIGLHEKPVFLLNTEGYWTKLIHLIDHVIDEGFADASLRDYTTVVDTVQDLMDGLGATGR*; ```. and . ```; >S2LnDK; >S2LnDK; MNNKSENQSSQGDARRGMLIGMALGMGIGAVIGLVLGDISSGFIIGMGIGAAVGYWRFRDTPIGMRYPPHLVRQLIISGLLYLVTLIGVIYLLEYNLNRSIEIILVLLPALPGIWFLVSLGRAIASLDELQRFIQLEGIAIGFGITAMAALTYGLLGMAGVPQVSWMYVPVVMVFGWFLGKMWTLWRYR*; >E6GnE9; >PYRss2; MKKAMATSKSQFKTMDEYIATFPENVRDVLEKLRRTIMESAPKAEETISYGMPAFKLNGKSLVYFAAWKNHIGFYPAGPSAIKAFKKELSPFRQAKGTIQFPLDKPIPIDLVKKIVKFRVEENESKKK*; ```. Where in original input file, we see:. ```; >PJB17I; MQKRSICVFCGASDGIDSAYGAAADTLGRLIASHKMRLVYGAGDVGLMGRVARAAQKDGAATFGVIPKHLVNWEVGKTDLTTYIITENMHERKKVMFMNSDAIALLPGGAGSLDEFFEVLTWAQLGLHDKPIVLININSYWGPLLALLDHVIAQGFAKENIKDFFQIAVTPEEAMSKLA*; ```. ... and elsewhere in file ... ```; >E6GnE9; MNNKTGIQPIDEYIAAFPEEVQEKLISIYRLIAGDVPEATVKISYGMPTFVLNGNLVHFAAFKNHIGFYPAPSGIQAFQEELAGYKTSKGAIQFPLDKPVPYELISKITAFRVAENVKNN*; ```. It seems that PJB17I should cluster with E7HKRc (they're ~50% identical) but then I would expect the output to be:. ```; >PJB17I; >PJB17I; MQKRSICVFCGASDGIDSAYGAA...; >E7HKRc; MFKRSVCVFCGSRKGRNPAHE...; ```. Based on latest documentation. ## Steps to Reproduce (for bugs). Just the commands (see full log below):. `user@user:~$ ./mmseqs/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:23,simpl,simple,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['simpl'],['simple']
Usability,"I am having a problem with the taxonomy module, probably linked to building a taxdb by myself. I have created the taxdb for proteins I want to be all classified simply as ""virus"" (taxid 10239). head NEWDB_all_70_rep.fasta ; >DB_2501651210_000001|2501651824|2501735350; MSITKFINKRKYMDFSTFESASQALSLSIYFLVGAAAAIAFVQGFKSN. mmseqs createdb NEWDB_all_70_rep.fasta NEWDB_70_rep; awk '{print $2 ""\t10239""}' NEWDB_70_rep.lookup > taxidmapping; mkdir ncbi-taxdump && cd ncbi-taxdump; wget ftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz; tar xzvf taxdump.tar.gz; cd -; mmseqs createtaxdb NEWDB_70_rep /tmp --ncbi-tax-dump ncbi-taxdump/ --tax-mapping-file taxidmapping. I am then able to use this taxdb with taxonomy module. I then used concatdbs to add my taxdb to U90. mmseqs concatdbs ../NEWDB/NEWDB_70_rep U90 U90andNEWDB70 --threads 1; mmseqs concatdbs ../NEWDB/NEWDB_70_rep_h U90_h U90andNEWDB70_h --threads 1; nohup mmseqs createindex U90andNEWDB70 /tmp/ &; mmseqs createtaxdb U90andNEWDB70 /tmp. I am then able to use this concat taxdb with taxonomy module. I then applied taxonomy filter to the concatdb. nohup mmseqs filtertaxseqdb U90andNEWDB70 U90andNEWDB70_nostrepto --taxon-list '!35493' 1>& filter.out &. In this case, I get the following error:; Input taxonomy database ""../../../U90andNEWDB70_nostrepto"" is missing files:; - ../../../U90andNEWDB70_nostrepto_nodes.dmp; - ../../../U90andNEWDB70_nostrepto_names.dmp; - ../../../U90andNEWDB70_nostrepto_merged.dmp. In fact, I'm finding out that there were none of the _nodes.dmp, _merged.dmp and _delnodes.dmp files created for the new taxdb and the concatdb. Maybe that's where the problem comes from?. Could you kindly help figuring out what's wrong with this? . Thanks a lot for your help,; Florian",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/474:161,simpl,simply,161,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/474,1,['simpl'],['simply']
Usability,"I don't know if I'm doing something wrong a some flag I'm leaving out, please help me.; ## Expected Behavior; I have a fasta file I want to generate a PSSM from, here is an example fasta; >EH1(72); MLLPETRNLLDLMDAATRGGRPRLETLPHAVGRKAVDKMSEDGEADPPEVAEVANGGFAGPASEIRFRRYRPLGEAAGLLPTLIYYHGGGFVIGNIETHDSTCRRLANKSRCQVISIDYRLAPEHPFPAPIDDGIAAFRHIRDNAESFGADAARLAVGGDSAGGAMAAVVCQACRDAGETGPAFQMLIYPATDSSRESASRVAFAEGYFLSKALMDWFWEAYVPEDTDLTDLRLSPLLATDFTGLPPAFVLTAGYDPLRDEGRAYADRLIEAGIKTTYVNYPGTIHGFFSLTRFLSQGLKANDEAAAVMGAHFGT. First I create an database of the fasta file and a database for the search database with this command. ; mmseqs createdb {input_file} {output_index}. Then I follow the steps mentioned in the user guide to create a PSSM; f""mmseqs search {query_db} {search_db} {pssm_filename.out} tmp -e {evalue} --num-iterations {num_iterations} --max-seqs {max_seqs} -s {sensitivity} -a"". f""mmseqs result2profile {query_db} {search_db} {pssm_filename}.out {pssm_filename}.profile"". f""mmseqs profile2pssm {pssm_filename}.profile {pssm_filename}"". Then a pssm file is generated with a PSSM like matrix for each sequence in the initial fasta file (the order seems to be random and doesn't follow the order of the input fasta file). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. Here is the PSSM generated for the example fasta . The second column of a standard PSSM generated by PSIBlast corresponds to the aminoacids of the input fasta however the PSSM generated by Mmseqs changes the sequences somehow. My questions are:. * What is the Cns column?; * Shouldn't it have the same sequence as the input fasta sequence because otherwise how could you map the PSSM generated with the sequence it comes from?; * ; I don't know if it si a bug or if I'm missing some flag to make the sequences equal; . Pos	Cns	A	C	D	E	F	G	H	I	K	L	M	N	P	Q	R	S	T	V	W	Y; 0	M	-2	0	-3	-2	0	-3	-1	1	-1	1	6	-2	-2	0	-2	-1	-1	0	0	0; 1	L	-2	0	-3	-3	0	-3	-2	1	-3	3	1	-3	-2	-2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/847:711,guid,guide,711,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/847,1,['guid'],['guide']
Usability,"I encountered an error while executing the command cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ... My cmake version is 3.28.0, and gcc version 7.3. The error message I received is as follows:. -- The CXX compiler identification is GNU 7.3.0 ; -- The C compiler identification is GNU 7.3.0 ; -- Detecting CXX compiler ABI info ; -- Detecting CXX compiler ABI info - failed ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ - broken ; CMake Error at /usr/local/share/cmake-3.28/Modules/CMakeTestCXXCompiler.cmake:60 (message): ; The C++ compiler; ""/home/anaconda3/envs/AlphaFlow/bin/c++"" ; is not able to compile a simple test program. ; It fails with the following output:; Change Dir: '/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz'; Run Build Command(s): /usr/local/bin/cmake -E env VERBOSE=1 /usr/bin/gmake -f Makefile cmTC_8b7b3/fast ; /usr/bin/gmake -f CMakeFiles/cmTC_8b7b3.dir/build.make CMakeFiles/cmTC_8b7b3.dir/build; gmake[1]: Entering directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; Building CXX object CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o ; /home/anaconda3/envs/AlphaFlow/bin/c++ -o CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -c /home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz/testCXXCompiler.cxx ; Linking CXX executable cmTC_8b7b3 ; /usr/local/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8b7b3.dir/link.txt --verbose=1 ; /home/anaconda3/envs/AlphaFlow/bin/c++ -rdynamic CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -o cmTC_8b7b3 ; collect2: fatal error: cannot find 'ld' compilation terminated. ; gmake[1]: *** [cmTC_8b7b3] Error 1 ; gmake[1]: Leaving directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; gmake: *** [cmTC_8b7b3/fast] Error 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/816:729,simpl,simple,729,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/816,1,['simpl'],['simple']
Usability,"I have a question regarding the choice of linclust parameters in the Steinegger et al. 2019 paper. These are the parameters:. --kmer-per-seq 80 --cluster-mode 2 **--cov-mode 1 -c 0.9** --min-seq-id from 50% to 90%. My question concerns the part in bold:. if I understand well, it means that the query must cover at least 90% of the target to be listed in the cluster, is that so?. If that is the case, could you explain to me the rationale behind this? Somehow, to me seems more intuitive that it is the query which should kind of fit into the target. Even if it's much shorter, but still similar, I would expect it to be in the same cluster (or it shouldn't be?). Thanks a lot for your clarification,. G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/245:479,intuit,intuitive,479,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/245,1,['intuit'],['intuitive']
Usability,"I have a request for describing some mmseq's options in more depth, at least with a suggestion what effect might have a specific parameter set to its extreme. Especially, maybe they wouldn't be relevant eventually, but I think that's good to know when thinking about optimizing and shaping profiles / searches / clusterings. For instance:. **result2profile**; --qid (intuitive, but how does it affect final profile's e.g. sensitivity?); --qsc (especially the range - what does the default setting mean compared to extremes?); --pca; --pcb; --diff (I see explanation in commandline help but get confused by the window and don't know whether should I modify that for manipulating profile's characteristics - mainly specific/nonspecific feature). **prefilter**; --min-ungapped-score (set up to 15, what does it mean? Does it affect minimum length of k-mer alignment that is needed?); --k-score; --diag-score. Could you add some comment in documentation what do these do? How varying them affect (or is expected to affect) results? Maybe some of them are hidden in the code, but that's hard to infer for non developer. I can see also that search doesn't produce results for very short sequences, e.g. the shortest PFAM consensus sequences, what additionally inspire me to rethink all procedures more throughly. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/85:367,intuit,intuitive,367,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/85,1,['intuit'],['intuitive']
Usability,"I have created mmseq database with ncbi nt, and added taxonomy information. To shorter the search time, I am trying to create a small database with a certain number of species. I have got the ncbi taxIDs of them already, my question is how to filter the ntDATABase with those taxIDs. In my mind now, I should use the filterdb function with --filter-regex and --filter-column. Problem is I don't know which column is the taxID in the ntDATAbase. Could anyone guide me how to check the structure of the data base and find which column is the taxID? Or are there any other ways to filter the nt database using the taxID list?. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/865:458,guid,guide,458,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/865,1,['guid'],['guide']
Usability,I tried [cluster using profiles](https://github.com/soedinglab/MMseqs2/wiki#how-to-cluster-using-profiles) using this [test dataset](https://github.com/soedinglab/MMseqs2/files/2765258/subset.txt). I performed this procedure:. > mmseqs createdb subset.fa subset.db; > mmseqs prefilter subset.db subset.db subset.prefilter.db -s 8.5; > mmseqs align subset.db subset.db subset.prefilter.db subset.align.db --min-seq-id 0.9; > mmseqs clust subset.db subset.align.db subset.clust.db; > ; > mmseqs createsubdb subset.clust.db subset.db subset.90.db; > mmseqs prefilter subset.90.db subset.90.db subset.90.prefilter.db -s 8.5; > mmseqs align subset.90.db subset.90.db subset.90.prefilter.db subset.20.aling.db --min-seq-id 0.2 ; > mmseqs clust subset.90.db subset.20.aling.db subset.20.clust.db; > ; > mmseqs mergeclusters subset.db final_clu subset.clust.db subset.20.clust.db ; > mmseqs createtsv subset.db subset.db final_clu final_clu.tsv; > mmseqs result2profile subset.db subset.db final_clu final_clu.profile ; > mmseqs search final_clu.profile final_clu.profile_consensus final_clu.profile.DB2 tmp --add-self-matches ; > mmseqs clust final_clu.profile final_clu.profile.DB2 final_clu.profile.clu ; > mmseqs createtsv final_clu.profile final_clu.profile.clu final_clu.profile.clu.tsv. In the end I got this [meaningless tsv](https://github.com/soedinglab/MMseqs2/files/2765314/final_clu.profile.clu.txt). I didn't understand this tsv which is different from those created with simple cluster of proteins. I'd like to know if I did something wrong or how to understand this file. Thanks in advance,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/151:1478,simpl,simple,1478,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/151,1,['simpl'],['simple']
Usability,"I was a little confused by the way the description for `--idx-entry-type` was written. I think this makes it clearer. I'm actually not quite sure what the difference between `sequence` vs `src sequence` and `header` vs `src header`. Though I haven't looked closely at the docs either, so that's probably on me...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/263:109,clear,clearer,109,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/263,1,['clear'],['clearer']
Usability,"I wondering to know a simple thing about search tool. ; Since I read the [mmseqs paper](https://academic.oup.com/bioinformatics/article/32/9/1323/1744460) I was too interested and start to use it about 1 year with really good results. ; Recently I start to use to iterative searches, since the [wiki](https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter) report higher sensitivity of MMseqs compared with PSI-Blast as reported by this graph. . I wasn't able to reproduce this results, first because I have no access to dataset used to do it and at least I didn't find the parameters used in MMseqs2profile. . So I am just trying to do some different tests against different databases (NCBI nr, PDB, Uniprot50 20 ...) but I yet didn't find any parameter which de sensitivity of MMseqs with 3 or 4 iterations are higher than PSI-Blast. ; So my questions are: ; __Which are the best parameters on MMseqs search keep closer or better than default parameters used on PSI-Blast (NCBI reference)?__. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/106:22,simpl,simple,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/106,1,['simpl'],['simple']
Usability,"I'm examining the efficiency of template retrieval using different MMseqs2 configurations for MSA generation, which is crucial for identifying templates via hhsearch. Notably, the **ColabFold MMseqs2 detailed version** involves complex steps like search, expansion, alignment, and filtering, offering high accuracy but with significant time investment. On the other hand, the **MMseqs2 easy search version** simplifies the process, potentially reducing time but at a possible cost to accuracy. Given that my project processes a large volume of PDB chains (around 400k), understanding the trade-offs between these methods is essential. Key inquiries:; **Does the difference in MSA quality between the two MMseqs2 versions significantly affect template identification accuracy?; How can I optimize the MMseqs2 template search to balance efficiency and precision effectively?**; I appreciate any insights or experiences with these tools. <Colabfold mmseqs2>; `def mmseqs_search_monomer(; dbbase: Path,; base: Path,; uniref_db: Path = Path(""uniref30_2202_db""),; template_db: Path = Path(""""), # Unused by default; metagenomic_db: Path = Path(""colabfold_envdb_202108_db""),; mmseqs: Path = Path(""mmseqs""),; use_env: bool = True,; use_templates: bool = False,; filter: bool = True,; expand_eval: float = math.inf,; align_eval: int = 10,; diff: int = 3000,; qsc: float = -20.0,; max_accept: int = 1000000,; prefilter_mode: int = 0,; s: float = 8,; db_load_mode: int = 2,; threads: int = 32,; ):; #Run mmseqs with a local colabfold database set; #; #db1: uniprot db (UniRef30); #db2: Template (unused by default); #db3: metagenomic db (colabfold_envdb_202108 or bfd_mgy_colabfold, the former is preferred); ; uniref_db = Path(""/store/colabfold/db/uniref30_2202_db""); template_db = Path(""/store/colabfold/db/pdb70_220313""); if filter:; # 0.1 was not used in benchmarks due to POSIX shell bug in line above; # EXPAND_EVAL=0.1; align_eval = 10; qsc = 0.8; max_accept = 100000. used_dbs = [uniref_db]; if use_templa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:408,simpl,simplifies,408,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['simpl'],['simplifies']
Usability,"I'm running `mmseqs map`, using a simple test run command: `mmseqs map --threads 24 -s 2 -c 0 MY_queryDB MY_targetDB MY_outDB MY_tmp_dir`, and I'm getting the following output + error:. ```; mseqs map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/; Program call:; map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	2; Compositional bias 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern; Local temporary path; Threads 	24; Verbosity 	3; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/gl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:34,simpl,simple,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['simpl'],['simple']
Usability,"I'm running a 3 iteration search job and it crushed towards the end of the prefiltering of the last iteration. I tried to run again the same command in order to resume from where I stopped, but it seems to me that it is starting from the beginning. ## Expected Behavior; Start from:; ```; Program call:; prefilter tmpC/10139724895635470572/profile_1 genes.db tmpC/10139724895635470572/pref_2 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 48 -v 3 . ```; ## Current Behavior; creates new folder inside the tmp folder and starts a new run; ```; Program call:; prefilter geneC.db genes.db tmpC/13630618462368123119/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 56 -v 3 . ```. ## Steps to Reproduce (for bugs); ```; #BSUB -R ""rusage[mem=200000]""; #BSUB -a openmpi; #BSUB -J ""GeneC"". module load MMseqs2/6-f5a1c. runner=""mpirun"" mmseqs search geneC.db genes.db geneC-v-all_3itr.db tmpC --no-preload --max-seqs 1000 --num-iterations 3; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160:161,resume,resume,161,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160,1,['resume'],['resume']
Usability,"I've been trying to perform some basic tests with MMSeqs2 and have encountered an issue where I repeated get the following error message:. Init data structures...; Compute score only.; Could not open data file [path_to_dir]/mmseqs_tmp/pref_4!. The ""[path_to_dir]/mmseqs_tmp/"" directory contains two temporary files (pref_4.index_tmp_0.0 and pref_4_tmp_0.0) along with a blastp.sh script. I'm not using any advanced options for my search, and both input databases are (as far as I can see) formatted correctly. Maybe I'm overlooking something embarrassingly simple?. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/11:557,simpl,simple,557,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/11,1,['simpl'],['simple']
Usability,"I've been using KOFAMSCAN but it takes forever because it writes a LOT of intermediate files. . I tried making a custom version but the cutoff logic was confusing and it's in a language I'm not familiar with. If you're taking requests, would you consider configuring a KOFAM database?. Also, unrelated question but is there a guide to tuning the MMSEQS parameters for Pfam that most similarly match the Hmmer results? I'd like to replace hmmer with mmseqs in my workflows.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/771:326,guid,guide,326,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/771,1,['guid'],['guide']
Usability,"If I use the command:; ```; mmseqs easy-cluster {input} {params.outprefix} tmp/ --min-seq-id 0.9; ```. How will mmseqs determine the representative cluster? I've tried reading through the documentation, issues, and papers, but it wasn't clear to me how the representative was selected for `easy-cluster`...I'm sorry if I missed something! I think in the linclust paper it's mentioned that the longest sequence is selected as the representative, but I couldn't find a similar citation for `easy-cluster`.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/712:237,clear,clear,237,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/712,1,['clear'],['clear']
Usability,"Looking at the user guide and at the code I cannot seem to understand the difference between the evalThr and evalProfile parameters of the search method. Given their names I have a hard time understanding which of the two the -e parameter changes, it would be nice to provide a specific explanation of all the hyperparameters of the functions as it is especially usefull for new users as I am.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/675:20,guid,guide,20,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/675,1,['guid'],['guide']
Usability,Please how do I generate neff of an MSA using Mmseqs? I saw something about that in page 57 of the user guide but not much was discussed on how to get it. Can I get a help on this? Thanks.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/638:104,guid,guide,104,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/638,1,['guid'],['guide']
Usability,The user guide and the cli disagree on the range of the sensitivity parameter,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/240:9,guid,guide,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/240,2,['guid'],['guide']
Usability,"The user guide and the cli help say different things about the `-s` parameter. The user guide says the following, both in the pdf bundled with the latest release and in the latest wiki version (https://github.com/soedinglab/mmseqs2/wiki#search-workflow). > ```; > -s [float] Target sensitivity in the range [1:8.5] (default=4).; > ```; > Adjusts the sensitivity of the prefiltering and influences the prefiltering run time. 1.0 fastest -; 8.5 sensitive. The sensitivity between 8 to 8.5 should be as sensitive as BLAST. For detailed; explanation see section Computation of Prefiltering Scores using mmseqs prefilter. The cli help (`mmseqs search --help`) says:. > ```; > -s FLOAT sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive (range 1.0-7.5) [5.700]; > ``` . As defined here:. https://github.com/soedinglab/MMseqs2/blob/5ae5503a923ec4338464d09cc1ff4bc3680727da/src/commons/Parameters.cpp#L30. I'm wondering about this since I'd like to search at a sensitivity similar to BLAST and since the cli doesn't reject values bigger than 7.5. MMseqs2 Version: 6d92cd21676ccc36531f2852f7eb747f6389435f (Release 10-6d92c)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/240:9,guid,guide,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/240,2,['guid'],['guide']
Usability,"This is a feature request: I've found myself making simple databases outside of the mmseqs database formats (eg., gene & cluster databases) in order to keep track of metadata associated with each gene/cluster (e.g., the origin of the gene, the taxonomy of the genome possessing the gene, etc). It would be great if one could include metadata directly in an mmseqs genes/cluster database instead of having to maintain that info in separate files. One could then use that gene/cluster metadata to filter out genes/clusters (eg., selecting just genes/clusters originating from X & Y genomes or originating from metagenomes from biome Z).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/361:52,simpl,simple,52,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/361,1,['simpl'],['simple']
Usability,"This isn't really a bug but an idea for improvement: I'd like to know if there's a simple way to tell ""mmseqs databases"" to use a European mirror site to download the uniref family databases. Currently it takes ""mmseqs database"" (and even wget) more than 3 days to download uniref100 from where I am in France (using ftp.uniprot.org/), whereas downloading individual DBs from the Swiss mirror site (https://ftp.expasy.org/databases/uniprot/) takes only a few tens of minutes. Thanks to all your team for your work and for this magnificent tool, mmseqs.; Guillaume",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/791:83,simpl,simple,83,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/791,1,['simpl'],['simple']
Usability,"`mmseqs search --num-iterations 1` generates 1 db file for each thread. For example: `hits_db.0`, `hits_db.1`, `hits_db.2`, `hits_db.3`. However, `mmseqs search --num-iterations 2` (or a larger number of iterations) only generates one ""main"" output file (eg., `hits_db`). This change affects the downstream processing. For instance, if one then uses `mmseqs convertalis` with `hits_db` as the input, but `hits_db.0`, `hits_db.1`, `hits_db.2`, and `hits_db.3` still exist in that same directory from a past run, then `mmseqs convertalis` dies with the error:. ```; Invalid database read for database data file=hits_db, database index=hits_db.index; ```. This is confusing for the user, given that it's not clear which files `mmseqs convertalis` will look for and potentially try to use. Also, there doesn't seem to be any documentation about the altered output in `mmseqs search`. In general, it would be very helpful to have a list of the actual input and output files (eg., `*.dbtype`, `.index`, `.lookup`, etc) generated by each command. Just including some logging info such as ""looking for *.dbtype file... found file XXX.dbtype` would be helpful.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/336:705,clear,clear,705,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/336,1,['clear'],['clear']
Usability,"an.db; Data file is fam.db; Start writing file to fam.tsv; Done.; ```. ## Context. These 2 sequences come from a vibro cholerae genome. . ## Your Environment. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): GITDIR-NOTFOUND (corresponds to the last release: 2-23394). * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled using GNU Make 3.81 and cmake version 2.8.12.2. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: self-compiled using GNU Make 3.81 and cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; less /proc/cpuinfo; processor : 0; vendor_id : AuthenticAMD; cpu family : 21; model : 2; model name : AMD Opteron(tm) Processor 6344 ; stepping : 0; cpu MHz : 2599.862; cache size : 2048 KB; physical id : 0; siblings : 12; core id : 0; cpu cores : 6; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext; fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1; sse4_2 popcnt aes xsave avx f16c lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt ; lwp fma4 tce nodeid_msr tbm topoext perfctr_core perfctr_nb cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassis; ts pausefilter pfthreshold bmi1; bogomips : 5199.72; TLB size : 1536 4K pages; clflush size : 64; cache_alignment : 64; address sizes : 48 bits physical, 48 bits virtual; power management: ts ttp tm 100mhzsteps hwpstate cpb eff_freq_ro; ```; * Operating system and version:; ```; $uname -a; Linux XXX 2.6.32-696.20.1.el6.x86_64 #1 SMP Fri Jan 26 17:51:45 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:19441,pause,pausefilter,19441,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['pause'],['pausefilter']
Usability,"ated memory consumption: 400G; Target database size: 74390789 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 74.39M 1m 27s 612ms; Index table: Masked residues: 17937595794; Index table: fill; [=================================================================] 74.39M 13s 623ms; Index statistics; Entries: 495972652; DB size: 12603 MB; Avg k-mer size: 0.387479; Top 10 k-mers; CSSCCCS 40539; CSSCSCS 36980; CSCSSCS 36180; CSCSCSS 35290; CSSCDSS 34425; CSCCSSS 33905; CSSCSSS 32740; CSCDSSS 31596; SCSCDSS 30280; CSCSDSS 29715; Time for index table init: 0h 2m 0s 290ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 74390789; Target db start 1 to 74390789; [==. ## Context; I have translated all the sequences in Uniref90 based on a reduced amino acid alphabet that has only 5 letters (C, A, D, G, S). I have tried clustering it again using `linclust` to 90% identity and 80% overlap, however, the number of clusters is larger than I expected (75M from 76M initial Uniref90 size). I thought that might be due to the reduced sensitivity as a further reduced amino acid alphabet is applied before computing the k-mers. . I've tried to use `mmseq cluster` instead, however, this seems to take a very long time. After 13h the progress bar has only two '=' signs. . I am not sure if I am approaching the right way. Is linclust capable to cluster a protein sequence database that has been translated to a reduced amino acid alphabet or does it interfere with the mmseq alphabet used during k-mer comparison?. I was expecting a much smaller number of clusters as sequences only use 5 letters now so they are more likely to be more similar. . For `mmseq cluster`, what is the expected computation time for 76M sequences? . ## Your Environment; Running on a 64-core and 500GB RAM Linux machine.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:14154,progress bar,progress bar,14154,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['progress bar'],['progress bar']
Usability,"merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My questions are:; 1) How big of a RAM is required for the createindex step? Was that the reason a ""targetDB.idx"" was not generated?. 2) How much memory do I need for the indexed files to be fetched into memory (i.e. the""touchdb"" step)? Is it the total of all the ""targetDB.idx.0,1,2...14 "" files which will be over 1TB? Or is it something smaller?. 3) The log message for mmseqs touchdb step wasn't very helpful. Did it work or not?. Thank you,; Tongji",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/757:1535,simpl,simple,1535,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757,1,['simpl'],['simple']
Usability,mmseqs easy-cluster crashes with a very simple file as an input:. ```; >UPI0005E38868_574-614; EKVDQNTADITTNTNSINQNTTDIATNTTSINNLSDSITTL; >A0A2T6WYU8_88-128; ENVSQNTADITTNTNSINQNTTDIATNTTNINNLSDSITTL; >UPI0005DBD517_138-178; EKVDQNTADITTNTNSINQNTTDIATNTTSINNLSNSVTTL; >Q9F2D8_129-169; EKVDQNTADITTNTNSINQNTTDIATNTTSINNLSNSVTTL; >A0A315FWJ3_364-404; EKVDQNTADITTNTDSINQNTTDIATNTTNINSLSNSVTTL; >UPI0005DCDA99_510-550; ENVSQNTADITTNTNSINQNTTDIATNTTSINNLSDSITTL; >UPI000DA3EDE3_467-507; ETVDQNTADIAANTTSINQNTTDIAANTTNINNLSDSVTTL; >G4C802_559-599; ENVSQNTTDITANTDSINQNTTDIATNTTSINNLSNSVTTL; >UPI0004F83B94_392-432; DSINQNTTDIAANTTSINQNTTDIATNTTNINNLSDSITTL; >A0A379V5F6_560-600; ENVSQNTTDITANTDSINQNTTDIATNTTSINNLSNSVTTL; >UPI000B8EBDA4_511-549; INQNTTDIAANTTSINQNTTDIATNTTNINNLSDSVTTL; >UPI0009A94CF4_362-416; EKVDQNTADITANTDSINQNTTDIAANTTSINQNTADIAANTTNINNLSDSVTTL; >UPI000459DB58_363-417; EKVDQNTADITTNTDSINQNTTDIAANTASINQNTTDIATNTTNINSLSNSVTTL; >UPI0009AE3E57_364-418; EKVDQNTADITTNTDSINQNTTDIAANTASINQNTTDIATNTTNINSLSNSVTTL; >A0A2T9DBX0_63-117; EKVDQNTADITTNTDSINQNTTDIAANTASINQNTTDIATNTTNINSLSNSVTTL; >UPI0009B01E32_286-324; VTQNTTDIAANTDSINQNTTDIATNTTNINSLSDSVTTL; >UPI000BA995C1_364-416; EKVDQNTADITANTDSINQNTTDIAANTTSINQNTTEIATNTTNINSLSDSVT; >A0A2X5DK67_115-155; DSINQNTTDIAANTTSISQNTTDIAANTTNINSLSDSVTTL; >V7IUW3_392-428; DSINQNTTDIAANTTSINQNTTDIAANTTNINSLSDS. ```. ## Steps to Reproduce (for bugs); Command to reproduce (with above as input fasta file `file.fa`):. ```; mmseqs easy-cluster file.fa /tmp/seqClustering /tmp/tmp-seqClustering --min-seq-id 0.90 -c 0.99 -s 8 --max-seqs 1000 --cluster-mode 1; ```. ## MMseqs Output (for bugs); These are the last few lines of the output:; ```; Query database: /tmp/tmp-seqClustering/9466533042670559081/clu_tmp/5063784659926941655/input_step_redundancy(size=14); Process prefiltering step 1 of 1. Index table k-mer threshold: 130; Index table: counting k-mers... Index table: Masked residues: 251; No k-mer could be extracted for the database /tmp/tm,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/149:40,simpl,simple,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/149,1,['simpl'],['simple']
Usability,"o Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:1367,resume,resume,1367,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,1,['resume'],['resume']
Usability,"simplify comparisons in DBReader::Index, DBReader::LookupEntry",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/894:0,simpl,simplify,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/894,2,['simpl'],['simplify']
Usability,"this isn't the correct place for such questions.; I am using mmseqs2 to implement a process similar to that used by [colabfold's mmseqs_search_monomer()](https://github.com/sokrypton/ColabFold/blob/main/colabfold/mmseqs/search.py). ; I have the following process:; 1. First I create a queryDB from a fasta file with many sequences in it. `mmseqs createdb queries.fasta queryDB`; 2. Next I run the `search`, `expandaln`, `align`, and `filterresult` commands pretty much as described in the colabfold code. . The output of the `filterresult` command generates 20 files, in my case the base name is `res_exp_align_filter` and then there are also `res_exp_align_filter.{0..19}`, plus `.dbtype` and `.index` files. . My next step was to generate MSA alignments for each of my query strings. I tried passing the `res_exp_align_filter` file to the result2msa command which works, however this doesn't give the output that I want since I want one MSA file per query sequence. ; Instead I tried the following, I concatenated all the `res_exp_align_filter` files as follows: `cat res_exp_align_filter.{0..19} > res_exp_align_filter.all`. I then used the `res_exp_align_filter.index` file to get the byte offsets for each query and read the appropriate section of the concatenated file. This seems to work, at least insofar that I get what looks like properly aligned sections, with more overlapping targets at the top and less overlapping sequences towards the end. I then write these sections to separate files `./tmp/query`. Finally I try to pass these new files to the `result2msa` command, but then I get the following error:. ```; Input database ""/tmp/query"" has wrong type (Generic); Allowed inputs:; - Alignment; - Prefilter; - Bi-directional prefilter; - Clustering; ```. I'm wondering if there is a simpler way of doing this, and if not why can't I pass the subset of the `res_exp_align_filter` file into the result2msa command even though it has the same structure as the `res_exp_align_filter` file.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/850:2012,simpl,simpler,2012,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/850,1,['simpl'],['simpler']
Usability,user guide error and unknown output format,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/2:5,guid,guide,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/2,2,['guid'],['guide']
Usability,x86)\mmseqs\\bin/bbconfig: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/bunzip2: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/bzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/bzip2: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cal: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/catv: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/chat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/chgrp: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/chmod: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/chown: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/chpst: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/chroot: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cksum: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/clear: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cmp: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/comm: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cp: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cpio: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/crond: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/crontab: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cryptpw: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cttyhack: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cut: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/date: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/dc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/dd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/df: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/diff: Permission denied; busybox: c,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:1786,clear,clear,1786,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['clear'],['clear']
