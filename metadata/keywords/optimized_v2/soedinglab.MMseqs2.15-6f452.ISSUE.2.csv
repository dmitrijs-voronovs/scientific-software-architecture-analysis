quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Deployability,Thank you for the patches! How did you find these errors? ; We are running MMseqs2 in our regression with `asan` and neither of these shows up.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408114683:18,patch,patches,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408114683,1,['patch'],['patches']
Deployability,Thank you for the workflow. I'll try that. For now as I explore the software a little bit (I'm amazed with its speed and scalability) I cluster smaller database. A part of my workflow is generating profiles for pdb_05_rep database based on nr70_rep database:; ```; mmseqs search pdb_05_rep nr70_rep pdb_05_res tmp --num-iterations 3 ; mmseqs result2profile pdb_05_rep nr70_rep pdb_05_res pdb_05_profile; ```; The second command however blasts my bash with these warnings:. > Warning in /opt/install/MMseq2/src/alignment/MsaFilter.cpp:244: filter:; > Filtering removed all sequences in alignment. Inserting back first sequence. Is that OK? Or something went wrong with the procedure?. And further I run:; ```; mmseqs search pdb_05_profile pdb_05_rep pdb_05_pp_res tmp --threads 110 -e 0.05; mmseqs clust pdb_05_profile pdb_05_pp_res pdb_05_pp_clu --threads 110 --cluster-mode 1 --similarity-type 1; ```; and the second procedure outputs many warnings like:. > ERROR: Sequence !; > ERROR: Sequence 19899 does not contain any sequence for key 933920594 does not contain any sequence for key 21608!; > ERROR: Sequence 20595 does not contain any sequence for key 21655!; > ERROR: Sequence 20596 does not contain any sequence for key 21670!; > ERROR: Sequence 2059723896 does not contain any sequence for key !; > ERROR: Sequence 23698 does not contain any sequence for key 7521!; > ERROR: Sequence 23699 does not contain any sequence for key 7526!; > does not contain any sequence for key 21683!. to give only few.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-368807680:491,install,install,491,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-368807680,1,['install'],['install']
Deployability,"Thank you for this tip, it worked! But I get many clusters, 997 representative sequences, is there a way to reduce the number of clusters? We are trying to identify general patterns/motifs from these sequences. The command I used is:; mmseqs easy-cluster Peptide_seqs.mod.fasta Peptide_seqs_clu tmp -e inf -k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0 --min-ungapped-score 0 --min-seq-id 0.0 -c 0.0 --cov-mode 1. Thank you!. > I found one memory issue when giving only extremely short sequences to MMseqs2.; > You can probably work around this issue in release 13 by adding one fake sequence that is longer than 20 AA residues to the input file.; > ; > I would also recommend to use the following parameters `-k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0` for clustering such extremely short sequences. You might also want to add `-e inf` as E-values are essentially meaningless for such short sequences. In this case you would only cluster based on seq. id. and coverage.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833996332:561,release,release,561,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833996332,1,['release'],['release']
Deployability,"Thank you for your quick reply. My apologies, I'm not sure how to check the version? I believe I had compiled from source under Linux back in February 25, 2021. Do you recommend that I delete my current installation and re-install everything? (Or is there a way to easily update mmseq2? I can't seem to find such information in the user guide.). One thing that makes me hesitant about deleting everything is that I had downloaded Swiss-Prot using `mmseqs databases` back in February 2021 and I'm not sure if I can download the same dataset again since Swiss-Prot has been updated since then. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558:203,install,installation,203,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558,8,"['install', 'update']","['install', 'installation', 'update', 'updated']"
Deployability,Thank you for your reply.; I have seen that from the documentation and wish I could use it but this module seems not available with my install:; MMseqs2 Version: 4224ae469df44631b5d8e20aa5c7fd9d74d48c0e; I tried to install more a recent version of mmseqs but had kernel issue (FATAL: kernel too old),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-720089354:135,install,install,135,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-720089354,2,['install'],['install']
Deployability,Thank you for your support. It works like a charm now. . The last question I have is how can I set the number of cores that I can run MMseqs with if I don't have MPI installed. I believe in your documentation that is how you control how many cores MMseqs runs on. . Thanks ; Kourosh,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357868649:166,install,installed,166,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357868649,1,['install'],['installed']
Deployability,"Thank you martin, I will update my copy of MMseqs.; If I was using the old version of MMseqs, how bad do you think the clusters can be..?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/110#issuecomment-412023752:25,update,update,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/110#issuecomment-412023752,1,['update'],['update']
Deployability,"Thank you so much for your help!. I have tried adding `--alignment-mode 3`, but I am still strangely getting 0% sequence identity for *all* pairwise comparisons. Please find below the exact steps I'm following:. Using the ""examples"" folder that was downloaded during the mmseqs installation process:. ```; mmseqs createdb examples/QUERY.fasta queryDB; mmseqs cluster queryDB queryDB_clu tmp --min-seq-id 0.3 -c 0.8 --alignment-mode 3. mmseqs alignall queryDB queryDB_clu queryDB_alnall --alignment-mode 3; mmseqs createtsv queryDB queryDB queryDB_alnall queryDB_alnall.tsv; OFS=""\t"" awk 'FNR==NR{a[$1]=$2;next}{$3=a[$3]; print}' queryDB.lookup queryDB_alnall.tsv > queryDB_alnall_newid.tsv; ```. Then in the output file `queryDB_alnall_newid.tsv`, I observe the following. I copied below the first few lines of the file. I believe v5 is sequence identity and everything is zero in that column:. <html xmlns:v=""urn:schemas-microsoft-com:vml""; xmlns:o=""urn:schemas-microsoft-com:office:office""; xmlns:x=""urn:schemas-microsoft-com:office:excel""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=Excel.Sheet>; <meta name=Generator content=""Microsoft Excel 15"">; <link id=Main-File rel=Main-File; href=""file:///C:/Users/Skim20/AppData/Local/Temp/msohtmlclip1/01/clip.htm"">; <link rel=File-List; href=""file:///C:/Users/Skim20/AppData/Local/Temp/msohtmlclip1/01/clip_filelist.xml"">; <style>; <!--table; 	{mso-displayed-decimal-separator:""\."";; 	mso-displayed-thousand-separator:""\,"";}; @page; 	{margin:.75in .7in .75in .7in;; 	mso-header-margin:.3in;; 	mso-footer-margin:.3in;}; tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; br; 	{mso-data-placement:same-cell;}; td; 	{padding-top:1px;; 	padding-right:1px;; 	padding-left:1px;; 	mso-ignore:padding;; 	color:black;; 	font-size:11.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Calibri, sans-serif;; 	mso-font-charset:0;; 	mso-number-format:General;; 	text-align:general;; 	verti",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965794507:278,install,installation,278,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965794507,1,['install'],['installation']
Deployability,"Thank you very much! I will give it a try tonight and be back to you. . > We will add this to the FAQ and also discuss if it make sense to provide the same output also for Uniclust in future releases. In our case, this information will help us to evaluate the quality of the clusters. Cheers; Antonio",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/13#issuecomment-276098458:191,release,releases,191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/13#issuecomment-276098458,1,['release'],['releases']
Deployability,Thank you! I will test it as soon as it is released.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/175#issuecomment-477950097:43,release,released,43,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/175#issuecomment-477950097,1,['release'],['released']
Deployability,"Thank you!. As for silvadb - it would be very helpful! ; When are you planning to release this version on Docker Hub? Or, maybe, this version is already available?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/340#issuecomment-670360006:82,release,release,82,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/340#issuecomment-670360006,1,['release'],['release']
Deployability,"Thank you, @milot-mirdita!. Are you guys planning to publish a new release?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339#issuecomment-668703258:67,release,release,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339#issuecomment-668703258,1,['release'],['release']
Deployability,Thank you. I compiled from the source and it seems to work fine. Any tentative timeline for the next release though?!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/290#issuecomment-626221741:101,release,release,101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/290#issuecomment-626221741,1,['release'],['release']
Deployability,"Thanks @milot-mirdita! After reinstalling the updated version from git, that error is gone. But I got a new one says:. ```; majoritylca /scratch/ref/hecatomb_databases/virus_uniprot/targetDB ./results/contigs/mmseqs_aa_out/taxonomyResult ./results/contigs/mmseqs_aa_out/lcaDB --tax-lineage 1 --lca-ranks superkingdom,phylum,class,order,family,genus,species . MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Majority threshold 0.5; Vote mode 1; LCA ranks superkingdom,phylum,class,order,family,genus,species; Taxon blacklist 12908,28384; Column with taxonomic lineage 1; Compressed 0; Threads 24; Verbosity 3. Loading NCBI taxonomy; Loading nodes file ... Done, got 2227973 nodes; Loading merged file ... Done, added 56613 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Computing LCA; [====taxonid: 1046081 does not match a legal taxonomy node.; ================================taxonid: 1046081 does not match a legal taxonomy node.; ===============taxonid: 1046081 does not match a legal taxonomy node.; =============. ```. So..do you have any suggestion on this one?. Thank you!!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504:46,update,updated,46,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504,1,['update'],['updated']
Deployability,"Thanks a lot @milot-mirdita .; By the way do you think the HHBlit-PfamA profiles will be updated to the version 32 of Pfam anytime soon?; I might consider using those... Thanks a lot,. Salvo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/130#issuecomment-433012368:89,update,updated,89,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130#issuecomment-433012368,1,['update'],['updated']
Deployability,Thanks a lot for reporting this bug. I have fixed the issue. We will make a new release of the software this week.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/181#issuecomment-477696114:80,release,release,80,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/181#issuecomment-477696114,1,['release'],['release']
Deployability,"Thanks a lot for the response!; about the -s parameter - is it possible to calculate it according to the desired identity_percent cutoff?; Let's say I want to get all results with identity_percent > 40%, is there a way to calculate the required value for ""-s"" parameter?. (The reason I ask this is that I would like to set this parameter in my pipeline in a dynamic way according to a user-defined identity_percent cutoff). Thanks again",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849018642:344,pipeline,pipeline,344,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849018642,1,['pipeline'],['pipeline']
Deployability,"Thanks a lot for your help, Milot! I am sorry for the late response!; I think the newer release made a progress and it seems swapresults does not give the std::bad_alloc error anymore (see the stdout printout below). However now I'm facing a problem with disk-space usage, it seems my run fills up ~1.2 TB and fails since I have no disk space left. Is there any suggestion of how to reduce the needed disk-space? From your guide I understand that reducing `--max-seqs` and `--max-accept` could be the way to go but I was not sure whether indeed this is the correct direction and what would be reasonable values to use. What I actually need, is only the best hit(s) for my queries. I would be thankful for any advice ;-) . My command: ; `Programs/MMSeqs2/mmseqs/bin/mmseqs easy-search --slice-search --search-type 3 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen"" A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ 1> A2p515F2F4F6_vs_NT_Jan2021.mmseq2.std 2>&1`. The stdout:; ```; easy-search --slice-search --search-type 3 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:88,release,release,88,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['release'],['release']
Deployability,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:315,install,installed,315,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850,6,"['install', 'patch', 'pipeline', 'release']","['installed', 'patch', 'pipeline', 'release', 'releases']"
Deployability,"Thanks a lot! I started updating the user guide. That output of the formatalignment should be equivalent to BLAST with the -m 8 parameter. . An excerpt from the upcoming updated documentation:; The file is formatted as a tab-separated lists with 12 columns: (1,2) identifiers for query and target, (3) sequence identity, (4) alignment length, (5) number of mismatches, (6) number of gap openings (7-8, 9-10) match start and end-position in query and in target, (11) E-value, and (12) bit score. --format-mode 1 should work correctly if you execute the search with the --add-backtrace parameter. --format-mode 2 is not implemented yet. Hopefully we can fix this soon and also add warnings if --format-mode 1 is used without backtraces. Edit: Which MMseqs1 tool do you mean?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-244817012:170,update,updated,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-244817012,2,['update'],['updated']
Deployability,Thanks a lot. I fixed the issue. Please update to the latest git. We might have to make a new release very soon.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/234#issuecomment-543758981:40,update,update,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234#issuecomment-543758981,2,"['release', 'update']","['release', 'update']"
Deployability,Thanks a lot. Travis seems to have some issues with installing clang-4.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/44#issuecomment-326977322:52,install,installing,52,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/44#issuecomment-326977322,1,['install'],['installing']
Deployability,"Thanks again. I had some issues getting gdb installed and running. Is this the output you asked for:; ```; Attaching to process 36724; [New LWP 36727]; [New LWP 36729]; [New LWP 36730]; [New LWP 36781]; [New LWP 36782]; [New LWP 36783]; [New LWP 36784]; [New LWP 36785]; [New LWP 36786]; [New LWP 36787]; [New LWP 36788]; [New LWP 36789]; [New LWP 36790]; [New LWP 36791]; [New LWP 36792]; [New LWP 36793]; [New LWP 36794]; [New LWP 36795]; [New LWP 36796]; [New LWP 36797]; [New LWP 36798]; [New LWP 36799]; [New LWP 36800]; [New LWP 36801]; [New LWP 36802]; [New LWP 36803]; [New LWP 36804]; [New LWP 36805]; [New LWP 36806]; [New LWP 36807]; [New LWP 36808]; [New LWP 36809]; [New LWP 36810]; [New LWP 36811]; [New LWP 36812]; [New LWP 36813]; [New LWP 36814]; [New LWP 36815]; [New LWP 36816]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; --Type <RET> for more, q to quit, c to continue without paging--RET; 0x00005623f9de6504 in CacheFriendlyOperations<512u>::hashIndexEntry(unsigned short, IndexEntryLocal*, unsigned long, CounterResult*) (); (gdb) bt; #0 0x00005623f9de6504 in CacheFriendlyOperations<512u>::hashIndexEntry(unsigned short, IndexEntryLocal*, unsigned long, CounterResult*) (); #1 0x00005623f9de68e5 in CacheFriendlyOperations<512u>::findDuplicates(IndexEntryLocal**, CounterResult*, unsigned long, unsigned short, unsigned short, bool) (); #2 0x00005623f9c42be0 in QueryMatcher::match(Sequence*, float*) (); #3 0x00005623f9c4393d in QueryMatcher::matchQuery(Sequence*, unsigned int) (); #4 0x00005623f9c2e113 in Prefiltering::runSplit(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, bool) [clone ._omp_fn.1] (); #5 0x00007fdb5f003cff in GOMP_parallel () from /usr/lib/x86_64-linux-gnu/libgomp.so.1; #6 0x00005623f9c337f4 in Prefiltering::runSplit(std::__cxx1",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616635868:44,install,installed,44,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616635868,1,['install'],['installed']
Deployability,Thanks all for helping. I found the bug and fixed it. ; Please update the repository. I will make a new release soon.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-390095442:63,update,update,63,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-390095442,2,"['release', 'update']","['release', 'update']"
Deployability,"Thanks for letting me know that there was an update. I just started the job, due to the irregular releases of the Pfam its not automated. If it doesn't run into any problems, we should have a new release up in a few days.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/130#issuecomment-433033961:45,update,update,45,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130#issuecomment-433033961,3,"['release', 'update']","['release', 'releases', 'update']"
Deployability,"Thanks for maintaining this great software! I'm having an issue with easy-taxonomy using GTDB (but not NCBI with the same query input), described below. Using a conda install of version 15.6f452. . Thanks for any help!. ## Expected Behavior; Completing without error. ## Current Behavior; Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Steps to Reproduce (for bugs). **Install**. ```bash; mamba create -y -n mmseqs2 -c conda-forge -c bioconda -c defaults mmseqs2==15.6f452; conda activate mmseqs2; ```. **DB setup**; ```bash; mmseqs databases GTDB mmseqs2-GTDB-db tmp; ```. **Making small test data**; ```bash; wget -O e-coli.fasta.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/005/845/GCA_000005845.2_ASM584v2/GCA_000005845.2_ASM584v2_genomic.fna.gz. gunzip e-coli.fasta.gz. grep -c "">"" e-coli.fasta; # there is only one contig, so safe to just pull some lines. printf "">contig_1\n"" > contigs.fasta; sed -n '100,1200p' e-coli.fasta >> contigs.fasta; printf "">contig_2\n"" >> contigs.fasta; sed -n '20000,20600p' e-coli.fasta >> contigs.fasta; printf "">contig_3\n"" >> contigs.fasta; sed -n '26000,26200p' e-coli.fasta >> contigs.fasta; # that's 3 contigs: 88,000 bps; 48,000 bps; and 16,000 bps; ```. **Running the program**; ```bash; mmseqs easy-taxonomy contigs.fasta mmseqs2-GTDB-db GTDB-tax-result tax-tmp \; --threads 20 --tax-lineage 1 --compressed 1 --remove-tmp-files 0; ```. ## MMseqs Output (for bugs). Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Context; Trying to get taxonomy output via GTDB with",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/806:167,install,install,167,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806,2,"['Install', 'install']","['Install', 'install']"
Deployability,"Thanks for the awesome open-source tool. I can't find any tags except ""[vNatBiotech](https://github.com/soedinglab/MMseqs2/tree/vNatBiotech)"". I was wondering whether there is interest in making a release for a stable version (with a numerical version), which may help users and developers. Thanks!. Best wishes,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/46:197,release,release,197,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/46,1,['release'],['release']
Deployability,"Thanks for the clarification, I can see that Martin has updated the docs and as I said before everything appears to be working for me now thanks to your help, so you may close the issue if you want!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94#issuecomment-395391774:56,update,updated,56,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94#issuecomment-395391774,1,['update'],['updated']
Deployability,"Thanks for the quick reply!. I installed the latest version, now receiving another error:; /tmp/814303472506594710/taxonomy.sh: 23: /tmp/814303472506594710/taxonomy.sh: abspath: not found. And the process dies immediately.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381111417:31,install,installed,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381111417,1,['install'],['installed']
Deployability,"Thanks for the quick response! I tried with 50G and had no success. Any clues on how much is enough? The Pfam directory is a total of 19G, and the transcriptome is <1G. The prefilter step, which is the one that crashes, says that it is using almost 1G of RAM. Please find the slurm output files here: https://gist.github.com/galicae/2565fb81f3edc84365671bc0688c5e31. EDIT: Update: running with k=5 did not improve anything - I got the same segfault.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-567404240:373,Update,Update,373,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-567404240,1,['Update'],['Update']
Deployability,"Thanks for the quick response!. I'm still a bit unclear on what is meant when you say a new sequence database (NEWMAPDB) is created. When I run updateclusters, it looks like the NEWMAPDB is now a soft link that links back to the NEWDB database file, rather than a new updated cluster database being created.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404569002:144,update,updateclusters,144,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404569002,2,['update'],"['updateclusters', 'updated']"
Deployability,"Thanks for the quick response!. This is what I get with the gdb:. ```; gdb --args mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...done.; (gdb) r; Starting program: mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; convertalis /tmp//2989869989197200687/query /db",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:959,configurat,configuration,959,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628,2,['configurat'],['configuration']
Deployability,Thanks for the quick update! FYI: there doesn't seem to be any documentation about the differences between `concatdbs` and `mergedbs`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662495705:21,update,update,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662495705,1,['update'],['update']
Deployability,Thanks for the reporting this Bug Pascal.; Is this the current Uniref90 release? Can you tell me what kind of CPU and Linux you are using? ; You can gather this information calling `cat /dev/cpuinfo`and `uname -a`. Could you try running MMseqs2 by just calling `mmseqs search` without building the index. In this case MMseqs2 decides automatic how to split the database.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-250427124:72,release,release,72,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-250427124,1,['release'],['release']
Deployability,Thanks for this detailed analysis. I have fixed the issues with commit ae4c7344d0174b54ba65646fc35fa91751209a6e and created a regression test for the update workflow.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/199#issuecomment-488556226:150,update,update,150,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/199#issuecomment-488556226,1,['update'],['update']
Deployability,"Thanks for your reply. I just used; ```; conda install -c conda-forge -c bioconda mmseqs2; ```; I thought everything installed properly, but perhaps I missed an error...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895344007:47,install,install,47,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895344007,2,['install'],"['install', 'installed']"
Deployability,"Thanks for your response; that's good news; I'm really looking forward this next release!; But if I want to use the taxid field right away I can still download the code from git and compile it, correct?; Guillaume",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559477953:81,release,release,81,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559477953,1,['release'],['release']
Deployability,"Thanks milot! ffindex has been a great discovery and in fact speeded up our evaluation pipeline a lot. If I understand correctly we can use ffindex_get with a clusterDB in the same way ffindex_apply does, using the offset in the index file to retrieve a whole cluster?. Many thanks for all your help and developing such awesome tools!; Antonio",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/50#issuecomment-343830645:87,pipeline,pipeline,87,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/50#issuecomment-343830645,1,['pipeline'],['pipeline']
Deployability,"Thanks!. So, if I create a profile database in `13-45111` with a command like this:. ```; mmseqs msa2profile msa_db/msa_db profile_db_pseudo/profile_db --match-mode 1 --match-ratio 0.5 --threads 64 --pca 1.1 --pcb 4.1; ```. It should give me a database with the same pseudocounts as the default parameters of the newer releases? I know that there were other changes in the way profile databases work, but I wanted to improve sensitivity and stay compatible with the Conda release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/547#issuecomment-1059460510:319,release,releases,319,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/547#issuecomment-1059460510,2,['release'],"['release', 'releases']"
Deployability,"Thanks, I suspected that this might have been the problem. I'll update you once we figure out how to fix this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814872621:64,update,update,64,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814872621,1,['update'],['update']
Deployability,"Thanks, I’ll give that a try! Will the database be compatible with the current release version, or will I have to use the git version for downstream analysis too?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1759212799:79,release,release,79,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1759212799,1,['release'],['release']
Deployability,"Thanks, Milot!. The new mode is `--pseudo-cnt-mode 1` (context-specific)? And what are the new `--pca` and `--pcb` default values? They are not showing up in the help dialogue. ```; --pca Pseudo count admixture strength []; --pcb Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) []; ```. My limitation is that this is part of a package that will be distributed in Conda, so I need to be compatible with the MMSeqs2 version that is on Conda. Profile databases created with the latest version will fail if I try to search them with `13-45111`. But I could try to use the new default `--pca` and `--pcb` when creating the profile database with `13-45111`. Do you guys have plans to push a new GitHub/Conda release in the near future?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/547#issuecomment-1059450778:719,release,release,719,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/547#issuecomment-1059450778,1,['release'],['release']
Deployability,"Thanks, i'll update that when I have a chance. An update version is now already implemented in the (git version of the) `databases` workflow. You can setup SILVA by calling:; ```; mmseqs databases SILVA silvadb tmp; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/340#issuecomment-670201400:13,update,update,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/340#issuecomment-670201400,2,['update'],['update']
Deployability,"That is a great idea! . I was already wondering whether I could use the internally created alignments that the clustering is based on. I've tried your approach on the 98% id clustering tmp directory. I'm not sure if it is normal, but my `tmp/latest/` directory contains only a single ""step"" aln file: `aln_step0.1...N`. Using convertalis I was able to convert the file to a aln.tsv containing the pairs, which is great. . I'm not sure how to interpret this intermediate file though since I haven't tried understanding the guts of your pipeline ;). Here is an attempt describing it:. The aln.tsv file contains 96,181 pairs, out of 121,045 cluster pairs in the cluster.tsv output file. 96,111 pairs in the aln.tsv file are unique 35 are double, I checked a couple of entries and the alignment results are identical for these duplicates. The cluster.tsv contains 77,031 rep-member pairs, and 44,014 rep-rep singletons; The aln.tsv contains 41,864 rep-member pairs, and 54,317 rep-rep singletons. I do not really understand the why, and how of the last merging step you describe with the cluster file since the number of rep-member pairs do not match up. Thanks for thinking along!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-582478350:535,pipeline,pipeline,535,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-582478350,1,['pipeline'],['pipeline']
Deployability,"That parameter is gone since a while. The Uniclust pipeline would require multiple changes to use with the latest MMseqs2. As the UniRef team is now also using MMseqs2 and are graciously providing us with their clusterings, we now only produce HHsuite databases based on these and have stopped using the Uniclust pipeline.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/384#issuecomment-742564711:51,pipeline,pipeline,51,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/384#issuecomment-742564711,2,['pipeline'],['pipeline']
Deployability,"That should be fine, the mergeclusters util was rewritten since that commit and cannot produce that warning anymore (https://github.com/soedinglab/MMseqs2/commit/78280850cbfad179ea61dc1c59ac04fe3babaed1). You probably should update to the latest version, that merging step will be faster. (But probably for the next clustering, since the on disk structure changed a bit since then).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/61#issuecomment-361883088:225,update,update,225,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/61#issuecomment-361883088,1,['update'],['update']
Deployability,"That's really neat, thanks!. `--report-mode` will be in release 11, exists currently only in git.; I am however not sure I want to binder version in the main repository. Is it possible to add and run it from the GitHub wiki repo (https://github.com/soedinglab/MMseqs2.wiki)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/250#issuecomment-560957708:56,release,release,56,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/250#issuecomment-560957708,1,['release'],['release']
Deployability,"That's with the RelWithDebInfo-compiled version, on the login node without vmtouch, where the workload took 600 s. On the compute node with vmtouch, it's 10 seconds, same goes for the release-compiled version, so indeed does not seem to make a difference.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397329321:184,release,release-compiled,184,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397329321,1,['release'],['release-compiled']
Deployability,"The `No datafile could be found` error seems to be caused by the fact that the data file in question is a symlink:. ```; lrwxrwxrwx 1 nyoungblut abt3 82 Jul 23 19:44 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust -> /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:252,update,updatedClust,252,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319,1,['update'],['updatedClust']
Deployability,"The `databases` module is new, the documentation refers to the latest git version. It will be included in the next MMseqs2 release we are preparing and hopefully release in the next few days. You can already install MMseqs2 from git or download precompiled static binaries to try out the latest features.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584029741:123,release,release,123,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584029741,3,"['install', 'release']","['install', 'release']"
Deployability,The `databases` workflow downloads this file:; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/genomic_files_reps/gtdb_proteins_aa_reps.tar.gz,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-992990876:91,release,releases,91,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-992990876,1,['release'],['releases']
Deployability,"The `ln -s` commands are required for `cstranslate` to work. I am confused why the error message is saying `'clu_msa'` while the output name you used for `result2msa` is `cluMsa`. I think something is misnamed. Btw you can also drop the `A /path/to/cs219.lib -D /path/to/context_data.lib` parameters, they are not needed anymore in the latest HH-suite release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/508#issuecomment-974118499:352,release,release,352,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/508#issuecomment-974118499,1,['release'],['release']
Deployability,"The `result2msa` module will generate (center star) MSAs from an alignment result. `convertalis` can print the pairwise alignments. Its not possible to create alignments from profiles, since the required alignment information is already lost at that point. We don't support the hhmake profile format in MMseqs2, you would have to create the MSAs and build new profiles using `hhmake`. In the Uniclust databases we use ClustalO to create MSAs for each MMseqs2 cluster, which are then converted to the A3M alignment format with `reformat.pl` and hhm profile format through `hhmake`:. https://github.com/soedinglab/uniclust-pipeline/blob/develop/hhdatabase/make_hhdatabase.sh",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/153#issuecomment-458214245:621,pipeline,pipeline,621,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/153#issuecomment-458214245,1,['pipeline'],['pipeline']
Deployability,The `taxid` field support was added only a few weeks ago and is only available through the latest git version. It will be included in the next release.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559467190:143,release,release,143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559467190,1,['release'],['release']
Deployability,"The `unpackdb` command gives me the same output as the byte offset reading approach I was doing. Seems I re-invented that command without knowing it. However, when I run the `unpackdb` command I get a file per query with its alignments in the internal mmseqs2 format, I then want to convert this to the a3m+alignment format with `result2msa --msa-format-mode 6`, but I still get the same error as above, that the file produced by the `unpackdb` command has the wrong type. I don't really understand why this is the case, since previously when I tested the pipeline with a single sequence queryDB this `result2msa` method worked just fine. Similarly, I am able to run the `result2msa` command on the file which I unpack, but then not on the unpacked files. . Is there another command for converting this internal format MSA to the a3m+alignment format (equivalent to result2msa --msa-format-mode 6)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/850#issuecomment-2180483781:556,pipeline,pipeline,556,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/850#issuecomment-2180483781,1,['pipeline'],['pipeline']
Deployability,The clustering workflow creates a new sequence database (NEWMAPDB) that has consistent identifiers with already existing sequences in OLDDB. All tools further down the pipeline expect NEWMAPDB as input and NEWDB can usually be deleted. I'll update the documentation. Sorry for the confusion. Please let me know if you still have issues.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404560008:168,pipeline,pipeline,168,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404560008,2,"['pipeline', 'update']","['pipeline', 'update']"
Deployability,The description text in MMseqs2 is indeed wrong. We are planing to rework and improve all help texts and descriptions for the next release.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/193#issuecomment-485344341:131,release,release,131,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193#issuecomment-485344341,1,['release'],['release']
Deployability,"The function summarizealis is not documented in the wiki. But the help messege does not print the relevant information in https://github.com/soedinglab/MMseqs2/blob/6b9388469a41935813f5d207d6d149767feb4c42/src/MMseqsBase.cpp#L1028. Could this be the case for other functions?. I use mmseqs v 14.7e284 installed with mamba. See ; ```; $ mmseqs summarizealis -h. usage: mmseqs summarizealis <i:alignmentDB> <o:summerizedDB> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: common:; --threads INT Number of CPU-cores used (all by default) [16]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]. references:; - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017); - Mirdita M, von den Driesch L, Galiez C, Martin M, Soding J, Steinegger M: Uniclust databases of clustered and deeply annotated protein sequences and alignments. Nucleic Acids Research 45(D1), D170-D176 (2017). ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/680:301,install,installed,301,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/680,1,['install'],['installed']
Deployability,"The good news is that the updated code splits the idx rather evenly: . ```; -rw-r--r-- 1 nyoungblut abt3 371M Dec 9 22:32 db.idx.0; -rw-r--r-- 1 nyoungblut abt3 37G Dec 9 22:32 db.idx.1; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.2; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.3; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.4; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.5; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.6; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.7; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.8; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.9; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.10; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.11; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.12; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.13; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.14; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.15; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.16; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.17; -rw-r--r-- 1 nyoungblut abt3 3.0K Dec 9 22:32 db.idx.index; -rw-r--r-- 1 nyoungblut abt3 4 Dec 9 22:32 db.idx.dbtype; ```. The bad news is that `mmseqs search` still generates mmap errors (`Failed to mmap memory dataSize=12723929088`) unless I provide ~240G of memory (parallel=8, h_vmem=29G). So, it appears that splitting the idx more evenly didn't help with the memory requirements for `mmseqs search`. Maybe the issue is that the `idx.1` split is still rather large?. Note: I still require ~240G of memory if I just use 1 thread (parallel=1, h_vmem=240G)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742364404:26,update,updated,26,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742364404,1,['update'],['updated']
Deployability,"The issue is fixed in git, but not part of a release yet. You can download precompiled binaries from https://mmseqs.com/latest that contains the fix or compile MMseqs2 from source.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1741118480:45,release,release,45,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1741118480,1,['release'],['release']
Deployability,The most recent release seems quite out of date now. https://github.com/soedinglab/MMseqs2-App for example is using a more recent version which has quite a different API from the most recent release in some places. Being able to easily install a more up to date version with Brew would be very helpful. See soedinglab/MMseqs2-App#61 for example.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1264056369:16,release,release,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1264056369,3,"['install', 'release']","['install', 'release']"
Deployability,"The parameter was wrongly named. In release 11 it's now called `--shuffle` and 0 means no shuffling and 1 shuffling is enabled. However I would recommend not changing them. They are an internal optimization to help MMseqs2 not lose sensitivity in one specific case. If a machine does not have enough RAM (or if MPI is used) the target database is split and processed into multiple chunks. If one chunk is too redundant/similar/biased then `--max-seqs` can explode within this one chunk and we might lose good hits. By more or less randomly assigning sequences to any chunk we can prevent this. This parameter does not affect the order of the results in the result file (i.e. the `.m8` file). This will still pretty much random, as each query is processed by a different thread and the order of results written is thus not deterministic. If you want a sorted result file I would recommend to use `sort`:; `sort -s -k1,1 result.m8 > result_sorted.m8`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/313#issuecomment-632646531:36,release,release,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/313#issuecomment-632646531,1,['release'],['release']
Deployability,"The problem seems to still occur if I use the static linux version (AVX) at least for the above mentioned input files. If you just update the github code but not the static linux version, could you rebuild the binaries?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/104#issuecomment-410053481:131,update,update,131,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/104#issuecomment-410053481,1,['update'],['update']
Deployability,The split logic also got a face lift so splitting manually should not be required anymore.; Please do update if you encounter problems.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/198#issuecomment-513161913:102,update,update,102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/198#issuecomment-513161913,1,['update'],['update']
Deployability,"The user guide and the cli help say different things about the `-s` parameter. The user guide says the following, both in the pdf bundled with the latest release and in the latest wiki version (https://github.com/soedinglab/mmseqs2/wiki#search-workflow). > ```; > -s [float] Target sensitivity in the range [1:8.5] (default=4).; > ```; > Adjusts the sensitivity of the prefiltering and influences the prefiltering run time. 1.0 fastest -; 8.5 sensitive. The sensitivity between 8 to 8.5 should be as sensitive as BLAST. For detailed; explanation see section Computation of Prefiltering Scores using mmseqs prefilter. The cli help (`mmseqs search --help`) says:. > ```; > -s FLOAT sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive (range 1.0-7.5) [5.700]; > ``` . As defined here:. https://github.com/soedinglab/MMseqs2/blob/5ae5503a923ec4338464d09cc1ff4bc3680727da/src/commons/Parameters.cpp#L30. I'm wondering about this since I'd like to search at a sensitivity similar to BLAST and since the cli doesn't reject values bigger than 7.5. MMseqs2 Version: 6d92cd21676ccc36531f2852f7eb747f6389435f (Release 10-6d92c)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/240:154,release,release,154,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/240,2,"['Release', 'release']","['Release', 'release']"
Deployability,"The version I installed is: f56650c3d80e9cb72ec9b09964d622cbbf879a60; I thought it is the latest, am I wrong?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381115370:14,install,installed,14,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381115370,1,['install'],['installed']
Deployability,"This feature is only present in git MMseqs2. We still haven't managed to make a new release, since we were busy with other projects and also some personal stuff. Things should hopefully start to stabilize soon, so we might finish up a new MMseqs2 release. In the meantime you can use the precompiled binaries available at https://mmseqs.com/latest.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/572#issuecomment-1159577278:84,release,release,84,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/572#issuecomment-1159577278,2,['release'],['release']
Deployability,"This is a small bug in the release, which only occurs with sequences smaller than alphabet size, it is already fixed in the current github version. The relevant commit is c7f6a37",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/511#issuecomment-987022755:27,release,release,27,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/511#issuecomment-987022755,1,['release'],['release']
Deployability,"This issue is fixed in Git, but not part of a release yet. I think I fixed it shortly after the last release. You can download precompiled binaries at mmseqs.com/latest. These 5 lines are intended to call the `clust` module which implements the actual clustering algorithm, not the whole `cluster` workflow with the searches etc:; ```; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```; should be . ```; mmseqs clust $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```. For a 70% clustering you can adapt the 50% clustering strategy:. ```; # cluster down to 70%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust70"" \; --filter-column 3 --filter-regex '(0\.[7-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust70"" ""$TMPPATH/clu_uniclust70"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust70_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust70; ```. The idea here is to go directly from 90 to 30 to avoid any possible transitivity issues. In the MMseqs2 cascaded clustering you can get representative->member hits below the given thresholds after putting clusters from previous clustering st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067:46,release,release,46,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067,2,['release'],['release']
Deployability,"This issue is related to some behaviours that I saw in last release. . 1- at least prefilter, align and results2msa are generating many files:; The files has numeric suffix equivalent to number of used threads and it don't generate a merged final file. That means, if I run `mmseqs createdb subset.fa subsetDB` I got theses files:; `subsetDB subsetDB.dbtype subsetDB_h subsetDB_h.dbtype subsetDB_h.index subsetDB.index subsetDB.lookup`; But, next step, prefilter `mmseqs prefilter subsetDB subsetDB subsetPREFILTER` I got:; ```; subsetPREFILTER.0 subsetPREFILTER.13 subsetPREFILTER.18 subsetPREFILTER.22 subsetPREFILTER.27 subsetPREFILTER.31 subsetPREFILTER.4 subsetPREFILTER.9; subsetPREFILTER.1 subsetPREFILTER.14 subsetPREFILTER.19 subsetPREFILTER.23 subsetPREFILTER.28 subsetPREFILTER.32 subsetPREFILTER.5 subsetPREFILTER.dbtype; subsetPREFILTER.10 subsetPREFILTER.15 subsetPREFILTER.2 subsetPREFILTER.24 subsetPREFILTER.29 subsetPREFILTER.33 subsetPREFILTER.6 subsetPREFILTER.index; subsetPREFILTER.11 subsetPREFILTER.16 subsetPREFILTER.20 subsetPREFILTER.25 subsetPREFILTER.3 subsetPREFILTER.34 subsetPREFILTER.7; subsetPREFILTER.12 subsetPREFILTER.17 subsetPREFILTER.21 subsetPREFILTER.26 subsetPREFILTER.30 subsetPREFILTER.35 subsetPREFILTER.8; ```. Anyway I may call `align` using `mmseqs align subsetDB subsetDB subsetPREFILTER subsetALN` but again I got an huge amount of files. Most of them empty. 2- `results2msa` to extract those aliments to stockholm or separated fasta, what should I need to do?; I tried use `mmseqs result2flat`, I got all MSA in same file in fasta format, how do I separate them? Actually, I'd like to know how convert them directly to a3m or stockholm. I hope it help you",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/191:60,release,release,60,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/191,1,['release'],['release']
Deployability,This looks like it installed a really old version of MMseqs2. Did you install the software through conda into a new environment?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-1999089878:19,install,installed,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-1999089878,2,['install'],"['install', 'installed']"
Deployability,This should be now available in our newest release: https://github.com/soedinglab/MMseqs2/releases/tag/14-7e284,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1277799240:43,release,release,43,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1277799240,4,['release'],"['release', 'releases']"
Deployability,This should work again in MMseqs2 release 15. Please open a new issue if its failing.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1869252421:34,release,release,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1869252421,1,['release'],['release']
Deployability,"This will be part of the next release, please use either our statically compiled binaries (mmseqs.com/latest) or compile from source.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/290#issuecomment-626221576:30,release,release,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/290#issuecomment-626221576,1,['release'],['release']
Deployability,"UPDATE: Index is huge:. ```; total 3.8T; -rwxrwx--- 1 guelou01 nogroup 447G Aug 18 19:33 NCBI_ALL_DB; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 19:34 NCBI_ALL_DB.dbtype; -rwxrwx--- 1 guelou01 nogroup 954M Aug 18 18:11 NCBI_ALL_DB_h; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 18:11 NCBI_ALL_DB_h.dbtype; -rwxrwx--- 1 guelou01 nogroup 195M Aug 18 19:34 NCBI_ALL_DB_h.index; -rwxrwx--- 1 guelou01 nogroup 80K Sep 14 14:31 NCBI_ALL_DB.idx.0; -rwxrwx--- 1 guelou01 nogroup 895G Sep 14 14:31 NCBI_ALL_DB.idx.1; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.2; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.3; -rwxrwx--- 1 guelou01 nogroup 623G Sep 14 14:31 NCBI_ALL_DB.idx.4; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.5; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.6; -rwxrwx--- 1 guelou01 nogroup 4 Sep 14 14:31 NCBI_ALL_DB.idx.dbtype; -rwxrwx--- 1 guelou01 nogroup 1.1K Sep 14 14:31 NCBI_ALL_DB.idx.index; -rwxrwx--- 1 guelou01 nogroup 236M Aug 18 19:34 NCBI_ALL_DB.index; -rwxrwx--- 1 guelou01 nogroup 257M Aug 18 19:34 NCBI_ALL_DB.lookup; -rwxrwx--- 1 guelou01 nogroup 17 Aug 18 18:10 NCBI_ALL_DB.source; ```; And when starting the search the following message is confusing:; ```; Process needs more than 641G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; ```; Adding `--split X` does not have any effect, but does not cause any error. The search now runs for several days with a low CPU usage, only few threads on `idx` files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063:0,UPDATE,UPDATE,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063,1,['UPDATE'],['UPDATE']
Deployability,"Unfortunately no. Also, sorry for don't ask before. So I did this way: ; 1- Download the MMseqs2 Version: aa14ce37feb5eda7231af20259d8f2b659162236 ; 2- Compile as [described here](https://github.com/soedinglab/MMseqs2/#compile-from-source) but changing `cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..` by `cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=. ..` ; 3- Run all steps below:; > mmseqs createdb tcdb_query.nr.fa tcdb_query.nr.db 2>&1 >> log ; > mmseqs createdb all.fa all.db 2>&1 >> log; ; > mmseqs search tcdb_query.nr.db all.db tcdb_result.db tmp --threads 40 -s 7.5 --num-iterations 3 -a --max-seqs 17702628 -c 0.8 --add-self-matches 2>&1 >> log . 4- After crash:; > gdb --args mmseqs align tcdb_query.nr.db all.db tmp/1072319213335698383/pref_0 tmp/1072319213335698383/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 17702628 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 -v 3 . return:; ```; GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-114.el7; Copyright (C) 2013 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /home/acpguedes/source/MMseqs2/build/bin/mmseqs...done.; (gdb) bt; No stack.; ```. Important note:; I send the STDOUT and STDERR to log file but there are one message that was printed on the screen and not on log file: ; `scoreIdentical has different length L: scoreIdentical has different leng",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-455599510:279,RELEASE,RELEASE,279,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-455599510,1,['RELEASE'],['RELEASE']
Deployability,Update README.md Static Linux Install Section,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/129:0,Update,Update,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/129,2,"['Install', 'Update']","['Install', 'Update']"
Deployability,Update multihit combine pval agg-mode 3,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/311:0,Update,Update,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/311,1,['Update'],['Update']
Deployability,Update needed to GTDB database install code for release 214,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:0,Update,Update,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,3,"['Update', 'install', 'release']","['Update', 'install', 'release']"
Deployability,"Update, I had just found 13aa length example, which is causing segfault: `TDPPIHIASLXRS`. Observation: after changing `X` to, for example `G` (`TDPPIHIASLGRS`), MMseqs2 will process example correctly. **EDIT**, another segfault example, this time much longer: `DPLVFFKXXFXXGGGGGAGCGGGGMKRT`, (observation, extended version will be processed correctly: `DPLVFFKXXFXXGGGGGAGCGGGGMKRTRRALPAN`)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/538#issuecomment-1044513847:0,Update,Update,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538#issuecomment-1044513847,1,['Update'],['Update']
Deployability,Update: Managed to successfully run the clustering using a full `3 TB` node with 112 threads. The SLURM efficiency output is below:; ```; Job ID: 2976046; Cluster: iris; User/Group: sbusi/clusterusers; State: COMPLETED (exit code 0); Nodes: 1; Cores per node: 112; CPU Utilized: 73-15:37:58; CPU Efficiency: 21.99% of 334-22:48:00 core-walltime; Job Wall-clock time: 2-23:46:30; Memory Utilized: 197.78 GB; Memory Efficiency: 6.70% of 2.88 TB; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1265026001:0,Update,Update,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1265026001,1,['Update'],['Update']
Deployability,"Update:; ```; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [> ] 0.00% 1 eta /scratch200/urineri/tmp2//13943365082736394582/blastp.sh: line 99: 34827 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. Breakpoint 1, 0x00002aaaab136c10 in exit () from /lib64/libc.so.6; Missing separate debuginfos, use: debuginfo-install bash-4.2.46-28.el7.x86_64; (gdb) bt; (gdb) bt; #0 0x00002aaaab136c10 in exit () from /lib64/libc.so.6; #1 0x000000000041d9de in exit_shell (); #2 0x000000000041c8f9 in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591466407:0,Update,Update,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591466407,2,"['Update', 'install']","['Update', 'install']"
Deployability,Upgraded system to have more memory and this works. It would be nice if there was a way to chunk the mapping since it's such a large file.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/666#issuecomment-1429043885:0,Upgrade,Upgraded,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666#issuecomment-1429043885,1,['Upgrade'],['Upgraded']
Deployability,"Users 31G Mar 9 21:51 pref_0_tmp_1; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 21:51 pref_0_tmp_1.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 21:51 pref_0_tmp_1.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 9 22:41 pref_0_tmp_2; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 22:41 pref_0_tmp_2.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 22:41 pref_0_tmp_2.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 9 23:30 pref_0_tmp_3; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 23:31 pref_0_tmp_3.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 23:31 pref_0_tmp_3.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 10 00:20 pref_0_tmp_4; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 00:21 pref_0_tmp_4.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 00:21 pref_0_tmp_4.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 10 01:10 pref_0_tmp_5; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 01:11 pref_0_tmp_5.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 01:11 pref_0_tmp_5.index; -rw-r--r-- 1 dportik Domain Users 33G Mar 10 01:59 pref_0_tmp_6; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 02:00 pref_0_tmp_6.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 02:00 pref_0_tmp_6.index; -rw-r--r-- 1 dportik Domain Users 33G Mar 10 02:49 pref_0_tmp_7; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 02:49 pref_0_tmp_7.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 02:49 pref_0_tmp_7.index; ```. ## Your Environment; Conda installation: showing mmseqs 13.45111. Running SGE. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 48; On-line CPU(s) list: 0-47; Thread(s) per core: 2; Core(s) per socket: 12; Socket(s): 2; NUMA node(s): 2; Vendor ID: GenuineIntel; CPU family: 6; Model: 63; Model name: Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz; Stepping: 2; CPU MHz: 1736.914; BogoMIPS: 5004.72; Virtualization: VT-x; L1d cache: 32K; L1i cache: 32K; L2 cache: 256K; L3 cache: 30720K; NUMA node0 CPU(s): 0-11,24-35; NUMA node1 CPU(s): 12-23,36-47",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:41586,install,installation,41586,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['install'],['installation']
Deployability,Using MMseqs2 Release 11-e1a1c version - createindex works,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591992505:14,Release,Release,14,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591992505,1,['Release'],['Release']
Deployability,"WOW, i really installed the wrong one bad ; fixed it; best wishes; connor",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/632#issuecomment-1298979108:14,install,installed,14,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632#issuecomment-1298979108,1,['install'],['installed']
Deployability,We are in the process of preparing release 13. This will include all the recent changes in a stable release. It should be done in the next few days/this week. In the meantime you can use the static precompiled binaries downloadable from https://mmseqs.com/latest.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/413#issuecomment-779220175:35,release,release,35,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/413#issuecomment-779220175,2,['release'],['release']
Deployability,"We currently don't support global alignments. It should be not too difficult to integrate a fast NW implementation as a separate MMseqs2 module. However, since none of us is working with global alignments, this would be a very low priority feature. The `--global-alignment` parameter is really badly named and does something unrelated for normal searches. We really should remove it. Either [opal](https://github.com/Martinsos/opal) or [parasail](https://github.com/jeffdaily/parasail) might serve as the base for the implementation. If you are interested in contributing this feature we could help guide you through.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518442291:80,integrat,integrate,80,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518442291,2,['integrat'],['integrate']
Deployability,"We finished the SIMDe integration yesterday. Please use the main MMseqs2 git. I am happy for any feedback since this is fresh from the oven, but please make a new issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649410251:22,integrat,integration,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649410251,2,['integrat'],['integration']
Deployability,We fixed the updating in MMseqs2. In order to use MMseqs2 you need to recluster you database since the database format changed. To recluster you have to recreate the sequence database with `createdb` and call `cluster` afterwards. You can use update this clustering than. Sorry for the inconvenience. Please open another issue if there is still a problem.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-255443174:243,update,update,243,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-255443174,1,['update'],['update']
Deployability,"We have also moved to prebuilt dbs for foldseek. I don't think we would be able to keep up with the two month release cycles of the uniref/uniprot though, so probably no prebuilt databases for MMseqs2. Thanks a lot!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094349946:110,release,release,110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094349946,1,['release'],['release']
Deployability,"We have decided against semantic versioning a while ago. Getting consensus on a versioning scheme was kind of difficult, I don't want to reopen that can of worms. Generally we decide every few months that we have a new release and increment the version number by one. Additionally we add a short git hash to the string. You should use the CMake `-DVERSION_OVERRIDE` parameter to override the version string when you package MMseqs2 (see ; https://github.com/soedinglab/MMseqs2/wiki#customizing-compilation-through-cmake for cmake flags, if you are packaging MMseqs2 for a Linux distribution you might want to pay close attention to how Debian dealt with multi-arch and different SIMD levels of x64). I've linked bioconda, homebrew and debian below if you want to see packaging is dealt with in other places:; https://github.com/bioconda/bioconda-recipes/blob/master/recipes/mmseqs2/build.sh; https://github.com/Homebrew/homebrew-core/tree/master/Formula/mmseqs2.rb; https://salsa.debian.org/med-team/mmseqs2/-/blob/master/debian/rules#L34",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-764877090:219,release,release,219,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-764877090,1,['release'],['release']
Deployability,We integrated the MMseqs2 regression test into the git repository. See:; https://github.com/soedinglab/MMseqs2/wiki/MMseqs2-Developer-Guide#regression-test,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/25#issuecomment-539000656:3,integrat,integrated,3,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/25#issuecomment-539000656,1,['integrat'],['integrated']
Deployability,"We introduced the module after the 11th release. It will be part of the next one. You can either use the non ""easy"" workflow, i.e. something like:; ```; mmseqs createdb query.fasta qdb; mmseqs createdb target.fasta tdb; mmseqs rbh qdb tdb res tmp; mmseqs convertalis qdb tdb res res.m8; ```. or you can either download precompiled binaries from the latest git commit at https://mmseqs.com/latest or build the code from source.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656621988:40,release,release,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656621988,1,['release'],['release']
Deployability,We just created the first release after vNatBiotech. The version numbering system is: running number followed by the five first characters of the release commit hash. (e.g. 1-c7a89).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/46#issuecomment-340253375:26,release,release,26,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/46#issuecomment-340253375,2,['release'],['release']
Deployability,"We just packaged a new MMseqs2 release, that has everything you need.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/71#issuecomment-370478124:31,release,release,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/71#issuecomment-370478124,1,['release'],['release']
Deployability,"We noticed one thing with the `awk` based script: Some linux distributions ship `mawk` as the default awk, which is generally very fast, but seems to be a lot slower for the purpose of joining two files (we use it for that purpose in the `createtaxdb` workflow). . You can install `gawk` and switch Ubuntu to use that by default with something like this: https://askubuntu.com/a/561626; `gawk` seems to be much much faster for this purpose.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-922871865:273,install,install,273,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-922871865,1,['install'],['install']
Deployability,"We recently made cascaded the default, since it performs better and has fewer potential runtime pitfalls. Also please note that switch parameters such as `--single-step-clustering` do not take an argument.; With `--single-step-clustering false` you would run a single step clustering. I'll update the documentation. Sorry about that!. Edit: The missing version number probably means, that you downloaded the ZIP instead of checking out the repository. The compile script cannot figure out the git commit that was used, without the .git folder.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/65#issuecomment-367299944:290,update,update,290,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/65#issuecomment-367299944,1,['update'],['update']
Deployability,"We still have a bit of work to do until the next release. We are targeting next week for the next release, which will then also have a new bioconda release. . Until then please either use the statically compiled version or build MMseqs2 yourself.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/206#issuecomment-500833231:49,release,release,49,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/206#issuecomment-500833231,3,['release'],['release']
Deployability,"We talked about your problem, this solution won't quite work yet (at least the last step). We will think about something on Monday and update you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/108#issuecomment-408606245:135,update,update,135,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/108#issuecomment-408606245,1,['update'],['update']
Deployability,"We were meaning to implement that format, though that never happened. We will update the description text.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/143#issuecomment-448188168:78,update,update,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/143#issuecomment-448188168,1,['update'],['update']
Deployability,We would be happy to assist members of the Qiime community with integrating MMseqs2.; We felt it was a bit too much for us to tackle alone.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580226294:64,integrat,integrating,64,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580226294,1,['integrat'],['integrating']
Deployability,"Well, you were fast in fixing it and replying :) The installation worked well now. I will try it out on our datasets later this week.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418149967:53,install,installation,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418149967,1,['install'],['installation']
Deployability,What MMseqs2 release are you using? I remember fixing this bug previously and can't reproduce it in release 13 anymore.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809692612:13,release,release,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809692612,2,['release'],['release']
Deployability,What conda command did you use to install MMseqs2?; Conda just offered me a brand-new installation of MMseqs2 with the same ancient version 6.f5a1c.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/470#issuecomment-880833827:34,install,install,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/470#issuecomment-880833827,2,['install'],"['install', 'installation']"
Deployability,What conda command did you use to install mmseqs2? `libatomic` is provided by `libgcc-ng` which is installed.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895325559:34,install,install,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895325559,2,['install'],"['install', 'installed']"
Deployability,"When I use createseqfiledb on a clusterDB file, as described in the readme, I get a continuous stream of ""Invalid entry in line x!"" messages, where x are different lines. What does this error mean? The resulting clu_seq file is empty.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/6:84,continuous,continuous,84,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/6,1,['continuous'],['continuous']
Deployability,"When running the latest statically compiled version of mmseqs, I receive an error because the software isn't signed. - I am using a Macbook Pro, with Mac OS Sonoma 14.5; - Download mmseqs-osx-universal.tar.gz from https://github.com/soedinglab/MMseqs2/releases/tag/15-6f452; - Unzip and mv bin/mmseqs binary to ~/bin; - When I run the command `mmseqs`, I receive a popup with the text; ```; “mmseqs” cannot be opened because the developer cannot be verified.; ```; and; ```; macOS cannot verify that this app is free from malware.; ```. This can be resolved on the user end by following these instructions:; https://support.apple.com/en-us/102445#openanyway; (that's what I have done). But it would be nice i the software were signed in the first place. On the developer side, these instructions are useful: https://developer.apple.com/developer-id/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/864:252,release,releases,252,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/864,1,['release'],['releases']
Deployability,Where to install cstranslate_mpi? I can not find it anywhere. Can someone give me advice? Thanks!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/83#issuecomment-1484019174:9,install,install,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/83#issuecomment-1484019174,1,['install'],['install']
Deployability,Whole pipeline including pre-filtering. But it's ok if not possible. I was just curious. You can close this issue.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/81#issuecomment-381919100:6,pipeline,pipeline,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/81#issuecomment-381919100,1,['pipeline'],['pipeline']
Deployability,Windows 10 Installation Problem,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/574:11,Install,Installation,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574,1,['Install'],['Installation']
Deployability,With the change from MMseqs2 release 12 to 13 the `taxonomy` workflow does report unclassified reads/contigs anymore. This is an unwanted breaking change.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/457:29,release,release,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/457,1,['release'],['release']
Deployability,"With your patches and building with GCC + SSE3 only, all tests pass except for SLICEPROFILE:. SEARCH (Time: 16s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:10,patch,patches,10,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663,1,['patch'],['patches']
Deployability,"Without the CMakeLists patch, I get the following on aarch64:; cc: error: the clang compiler does not support '-march=native'; At any rate, when restricting an upstream build system, it's generally better to use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:23,patch,patch,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555,7,"['install', 'patch', 'release']","['installed', 'installs', 'patch', 'release']"
Deployability,"Yeah I don't think it's all that valuable to allow it...I only noticed because I was using mmseqs in an automated pipeline, and by default floats are converted like that in the software I was using. So definitely not a common issue. Just wanted to let you know about it.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/640#issuecomment-1330786026:114,pipeline,pipeline,114,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/640#issuecomment-1330786026,1,['pipeline'],['pipeline']
Deployability,"Yeah, the patch needs to be changed accordingly. Shouldn't be too hard to do.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/756#issuecomment-1731189843:10,patch,patch,10,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/756#issuecomment-1731189843,1,['patch'],['patch']
Deployability,"Yep. It's an issue with Xcode 10.2. In another, not updated, iMac, with Xcode 10.1 it compiles all right. :(",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/182#issuecomment-477675270:52,update,updated,52,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/182#issuecomment-477675270,1,['update'],['updated']
Deployability,Yes!! I saw that. I think its not part of the conda release yet. . Best Regards; Abhijit,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/415#issuecomment-782045539:52,release,release,52,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415#issuecomment-782045539,1,['release'],['release']
Deployability,"Yes, exactly. We've never tried running MMseqs2 on mvapich2 and apparently you are the first user facing issues with it. (At least the first who told us about it). Do you have GDB installed? Can you call the following:; ```; gdb --args ~/data/dir/mmseqs2/build-mpi/bin/mmseqs kmermatcher; # wait for a prompt to appear then type; r ; # wait for it to crash then type; bt; # copy paste the output please; ```. You might have to recompile as a Debug build to get more sensible output here:; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Debug ..",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461648791:180,install,installed,180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461648791,1,['install'],['installed']
Deployability,"Yes, please test the most recent version on the master branch. We fixed a LCA bug. . We will release version 11 of mmseqs2 by the end of the week.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-579539048:93,release,release,93,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-579539048,1,['release'],['release']
Deployability,"Yes, that worked. I'd installed the prior MMseqs version using conda. I had to run through some system configuration before MMseqs would compile and run from source. I didn't track the steps, though. Once I had it installed, the new version wanted me to re-index the pfam database. Once that was done the search completed quickly. Thank you for the replies!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-572251733:22,install,installed,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-572251733,3,"['configurat', 'install']","['configuration', 'installed']"
Deployability,"Yes, the feature is only available in the latest release 14. Did you create a fresh conda environment? Maybe something else was holding back MMseqs2 to the previous release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471613335:49,release,release,49,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471613335,2,['release'],['release']
Deployability,"Yes, we will fix it with the next versions. We will release it this month.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/142#issuecomment-454355182:52,release,release,52,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/142#issuecomment-454355182,1,['release'],['release']
Deployability,"Yes, you are right. ; It only updates the `.index` files. The data files remain the same, so no deleting of the old files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404796205:30,update,updates,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404796205,1,['update'],['updates']
Deployability,You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module `result2repseq`. I think I fixed the performance issue in the latest commit cc7d7da30ec779d6a2e886438f8295f59e2192f1. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the `easy-` workflows yet. I'd recommend to stick to the basic commands as shown in the user guide.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441:54,update,update,54,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441,4,"['release', 'update']","['release', 'update']"
Deployability,"You can achieve this by manually cascading your clustering steps. We have implemented something like this a long time ago for Uniclust (https://github.com/milot-mirdita/uniclust-pipeline/blob/9b37347d1e9bb0153efcb986b5d828f9f4a316f0/uniclust_workflow.sh#LL67C7-L128C24). However, this script is not up-to-date, but the general strategy is sound. Regarding the consistency itself, please refer to this answer:; https://github.com/soedinglab/MMseqs2/issues/115#issuecomment-423111623",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1552387960:178,pipeline,pipeline,178,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1552387960,1,['pipeline'],['pipeline']
Deployability,"You can copy the steps we do in the `databases` workflow to create this database in this file:; https://github.com/soedinglab/MMseqs2/blob/13-45111/data/workflow/databases.sh; Look for the `""GTDB""` string. The easier solution is probably to just create the gtdb with the command I mentioned, then look up all genomes you don't want in the `_names.dmp` file we create. And remove them with:; ```; mmseqs filtertaxseqdb gtdb gtdb_subset --taxon-list ""!first_id&&!second_id&&....""; ```. This should work well for the latest release (13), however we changes some things in git mmseqs (names.dmp is not created by default anymore) so will be harder there.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-990857136:521,release,release,521,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-990857136,1,['release'],['release']
Deployability,You can download precompiled binaries for either the latest git commit at https://mmseqs.com/latest/ or for any previous git commit (that successfully compiled) at `mmseqs.com/archive/GIT_COMMIT`. For the commit you want the first commit that compiled after it is mmseqs.com/archive/03f0bcca33a6af3135082957f1cebf8baff7cc61. If you compile from source please follow the instructions in the wiki:; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux. ```; cd MMseqs2 # Go into the MMseqs2 directory after extraction; mkdir build # Create a build directory; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. # Configure the build with cmake; make -j16; make install; Setting the PATH; export PATH=$HOME/MMseqs2/build/bin:$PATH,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/886#issuecomment-2342446849:614,RELEASE,RELEASE,614,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/886#issuecomment-2342446849,2,"['RELEASE', 'install']","['RELEASE', 'install']"
Deployability,"You can use the `filtertaxseqdb` command (https://github.com/soedinglab/MMseqs2/wiki#filtering-a-seqtaxdb) to build a subset of the Uniprot that only contains bacterial sequences. For bacteria you would run (after `createdb/databases`):; ```; mmseqs filtertaxseqdb uniprot uniprot_bak --taxon-list 2; ```. I am also trying to integrate taxonomy information into the NR reliably. Once that's working you would have an even larger resource. . (Btw in the `filtertaxseqdb` module of MMseqs2 release 11 seperating taxon ids by `,` does something weird. I would recommend to use the latest git MMseqs2, statically compiled binaries at https://mmseqs.com/latest).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669600074:326,integrat,integrate,326,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669600074,2,"['integrat', 'release']","['integrate', 'release']"
Deployability,You might be running into issue #212. The problem is fixed in git master and will be included in the next release. Could you try if the latest git also crashes with the database from release 8?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515969345:106,release,release,106,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515969345,2,['release'],['release']
Deployability,You should be able to just call:; ```; mmseqs databases GTDB gtdb tmp; ```. And it will download and setup the latest release for you.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-990818180:118,release,release,118,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-990818180,1,['release'],['release']
Deployability,Your CPU does not support the minimum requirements of MMseqs2. However once this PR (https://github.com/soedinglab/MMseqs2/pull/309) is merged SSE2 will also be supported. If you have a Debian based machine you could install the mmseqs2 package from the debian-med apt. It already contains a precursor of this patch and should already work correctly on your CPU.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641444843:217,install,install,217,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641444843,2,"['install', 'patch']","['install', 'patch']"
Deployability,"_part-14/8093924424180559474/round2 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3. Init data structures...; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus ... Done.; Compute score and coverage.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; ...Time for merging files: 0h 0m 0s 78ms. All sequences processed. 2760008 alignments calculated.; 2676553 sequence pairs passed the thresholds (0.969763 of overall calculated).; 84.362 hits per query sequence.; Time for processing: 0h 0m 15s 472ms; Program call:; mergedbs tmp_part-14/8093924424180559474/top1 tmp_part-14/8093924424180559474/merged tmp_part-14/8093924424180559474/top1 tmp_part-14/8093924424180559474/round2. Merging the results to tmp_part-14/8093924424180559474/merged; Done; Time for merging files: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 354ms; Program call:; filterdb tmp_part-14/8093924424180559474/merged tmp_part-14/8093924424180559474/2b_ali --beats-first --filter-column 4 --comparison-operator le. Filter by numerical comparison to first row.; ....Time for merging files: 0h 0m 0s 229ms; Time for processing: 0h 0m 0s 732ms; Program call:; lca /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/2b_ali clusters_rep-seqs.part-14_tax_db --compressed 0 --lca-ranks kingdom:phylum:class:order:family:genus:species --blacklist 12908,28384 --threads 24 -v 3. Loading NCBI taxonomy...; Computing LCA...; Segmentation fault; Error: Lca died; ```. I'm going to try this again with Release 8.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:17976,Release,Release,17976,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,1,['Release'],['Release']
Deployability,"`Could not allocate foundDiagonals memory in QueryMatcher` is the only error message that I received. . I was running this in a `snakemake` pipeline, which tried the run with progressively more memory (240, 480, 720 GB), and each time, I got the error: `Could not allocate foundDiagonals memory in QueryMatcher`, and the log file looked the same (less dots at the end of the log file when less memory was used)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452249730:140,pipeline,pipeline,140,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452249730,1,['pipeline'],['pipeline']
Deployability,`addtaxonomy` is broken in the latest release. We fixed the issue in 333cc350af97e735d8321bbe7a68d8a1bf870e7d. ; You can compile from git or use the latest statically compiled binaries from mmseqs.com/latest/,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/355#issuecomment-704308206:38,release,release,38,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/355#issuecomment-704308206,1,['release'],['release']
Deployability,"`clusterupdate` only generates one main database file output (eg., `clusters_db`), regardless of `--threads`, while `cluster` and `linclust` generate one file per thread (eg., `--threads=4` generates `clusters_db.0`, `clusters_db.1`, `clusters_db.2`, `clusters_db.3`). This leads to pipeline complications, given that downstream processing of the `clusters_db` may require multiple inputs (`clusters_db.*`) or just one input (`cluster_db`). It would help if clusterupdate and cluster/linclust were consistent. It would be best if cluster/linclust just produced one database file per thread. I'm running `mmseqs2 11.e1a1c`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/362:283,pipeline,pipeline,283,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/362,1,['pipeline'],['pipeline']
Deployability,"`colabfold_search` as well as `colabfold_batch` supports batch complex predictions. Just provide a fasta or csv fle with your complex sequences. Following is a `example.fasta`:; ```; >1; PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK:PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK; >2 ; PIAQIHILEGRSDEQKE:PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK; ```. You can search the databases, build the MSAs and predict the complex structures using the following commands: ; ```; colabfold_search example.fasta db msas; colabfold_batch msas predictions; ```; Please update your local MMseqs2 to the newest version (see [MMseqs2 repository](mmseqs.com)).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1053599990:600,update,update,600,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1053599990,1,['update'],['update']
Deployability,"`mmseqs tsv2db` doesn't create a *.dbtype file. Is this intentional? How do I create a *.dbtype file, given that it appears to be a binary file?. In general, I find the ""hidden"" requirements of extra files such as the *.dbtype and *.index files to be very frustrating, because it can be hard to know which files are actually required for each `mmseq` command versus which files are stated as required inputs. This is especially challenging when using pipeline software such as `snakemake`. ```; $ conda list; # packages in environment at /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass:; #; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; ca-certificates 2018.11.29 ha4d7672_0 conda-forge; curl 7.63.0 h74213dd_0 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; krb5 1.16.2 hbb41f41_0 conda-forge; libcurl 7.63.0 hbdb9355_0 conda-forge; libdeflate 1.0 h470a237_0 bioconda; libedit 3.1.20170329 haf1bffa_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libssh2 1.8.0 h5b517e9_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; ncurses 6.1 hfc679d8_2 conda-forge; openmp 7.0.0 h2d50403_0 conda-forge; openssl 1.0.2p h470a237_1 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h8ee4bcc_1 bioconda; tk 8.6.9 ha92aebf_0 conda-forge; xz 5.2.4 h470a237_1 conda-forge; zlib 1.2.11 h470a237_3 conda-forge; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/155:451,pipeline,pipeline,451,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/155,1,['pipeline'],['pipeline']
Deployability,"`nrtotaxmapping` is slightly weird as it already requires the NCBI taxdb files to be present.; In the `databases` workflow, I create an empty `_mapping` file first, so `createtaxdb` will not try to create one, then call `createtaxdb` and then finally `nrtotaxmapping`. I have to integrate `nrtotaxmapping` into `createtaxdb` eventually to clean this up I guess.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-923028297:279,integrat,integrate,279,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-923028297,1,['integrat'],['integrate']
Deployability,a typo on the rolling hash function,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/252:14,rolling,rolling,14,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/252,1,['rolling'],['rolling']
Deployability,"ad an up-to-date version of the target 'nr' and 'nt' databases. ## Current Behavior; The download FASTA targets for the 'nr' and 'nt' databases are no longer being updated by NCBI. Explanation: focusing on 'NR' as an example, the URL in [databases.sh](https://github.com/soedinglab/MMseqs2/blob/87e7103d289029dc3345f85ea9a4c4c6d6416e46/data/workflow/databases.sh#L500) points to https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/nr.gz. The README in that FTP location states:. > In April 2024, the BLAST FASTA files in this directory will no longer be; available. You can easily generate FASTA files yourself from the formatted; BLAST databases by using the BLAST utility blastdbcmd that comes with the; standalone BLAST programs. See NCBI Insights for more details; https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/. Indeed, the nr.gz file was last updated on 2024-02-07. Looking in the [parent directoy](https://ftp.ncbi.nlm.nih.gov/blast/db), the various NR database files have been updated as recently as 2024-10-02. Therefore, the download targets for mmseqs2 are out of date by about 8 months, and this problem will get worse over time. . NCBI's solution for users is to download the blast-format files and then generate their own FASTA files:. > * Sequences in FASTA format can be generated from the pre-formatted databases by using the blastdbcmd utility;. Obviously this isn't ideal for many users, and it's been getting [at least some hate](https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/). ## Solution; Unless NCBI backflips on their decision, the only solution would be to change the `mmseqs databases` workflow for these databases to have an intermediate (slow) step of extracting a FASTA file before the `mmseqs createdb` step is run. However, this would obviously require extra dependencies, i.e. the `blastdbcmd`. Otherwise, I suppose you could host periodic builds of the databases on a server or something. Just thought I sho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/893:1078,update,updated,1078,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/893,1,['update'],['updated']
Deployability,"after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 (Many against Many sequence searching) is an open-source software suite for very fast, ; parallelized protein sequence searches and clustering of huge protein sequence data sets. Please cite: M. Steinegger and J. Soding. MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). MMseqs2 Version: GITDIR-NOTFOUND; © Martin Steinegger (martin.steinegger@snu.ac.kr). usage: mmseqs <command> [<args>]. Easy workflows for plain text input/output; easy-search 	Sensitive homology search; easy-cluster 	Slower, sensitive clustering; easy-linclust 	Fast linear time cluster, less sensitive clustering; easy-taxonomy 	Taxonomic classification; easy-rbh 	Find reciprocal best hit. Main workflows for database input/output; search 	Sensitive homology search; map 	Map nearly identical sequences; rbh 	Reciprocal best hit search; linclust 	Fast, less sensitive clustering; cluster 	Slower, sensitive clustering; clusterupdate 	Update previous clustering with new sequences; taxonomy 	Taxonomic classification. Input database creation; databases 	List and download databases; createdb 	Convert FASTA/Q file(s) to a sequence DB; createindex 	Store precomputed index on disk to reduce search overhead; convertmsa 	Convert Stockholm/PFAM MSA file to a MSA DB; msa2profile 	Convert a MSA DB to a profile DB. Format conversion for downstream processing; convertalis 	Convert alignment DB to BLAST-tab, SAM or custom format; createtsv 	Convert result DB to tab-separated flat file; convert2fasta 	Convert sequence DB to FASTA format; taxonomyreport 	Create a taxonomy report in Kraken or Krona format. An extended list of all modules can be obtained by calling 'mmseqs -h'. Bash completion for modules and parameters can be installed by adding ""source MMSEQS_HOME/util/bash-completion.sh"" to your ""$HOME/.bash_profile"".; Include the location of the MMse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:5226,Update,Update,5226,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['Update'],['Update']
Deployability,"an optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be filed against your own project-compiled binaries and test against those binaries first when tracking bugs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1532,release,release,1532,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463,2,['release'],['release']
Deployability,"ancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for merging to pref_filter2: 0h 0m 0s 176ms; Time for processing: 0h 0m 0s 468ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:8715,install,installations,8715,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['install'],['installations']
Deployability,"appingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $conda create --prefix /project/winter_pea_endophytes_2022/MMseqs; $source activate /project/winter_pea_endophytes_2022/MMseqs; $conda install -c conda-forge -c bioconda mmseqs2; and run it as environment; $conda activate /project/winter_pea_endophytes_2022/MMseqs. Server:; ceres.scinet.usda; resources allocation; $salloc -p short -N 2 -n 80 -t 12:00:00",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/689:2011,install,install,2011,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689,2,['install'],['install']
Deployability,"arity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use the clusters to create HMMs. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 12.113e3; * Which MMseqs version was used (Conda install): 12.113e3; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU Model: Intel(R) Xeon(R) CPU E5-2698 v4 @ 2.20GHz, supports sse4_1, sse4_2, MEM Free: 200GB, MEM Total: 256GB; * Operating system and version: Red Hat 4.4.7-18, gcc version 4.4.7 20120313",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/415:2286,install,install,2286,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415,1,['install'],['install']
Deployability,"at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Steps to Reproduce (for bugs). **Install**. ```bash; mamba create -y -n mmseqs2 -c conda-forge -c bioconda -c defaults mmseqs2==15.6f452; conda activate mmseqs2; ```. **DB setup**; ```bash; mmseqs databases GTDB mmseqs2-GTDB-db tmp; ```. **Making small test data**; ```bash; wget -O e-coli.fasta.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/005/845/GCA_000005845.2_ASM584v2/GCA_000005845.2_ASM584v2_genomic.fna.gz. gunzip e-coli.fasta.gz. grep -c "">"" e-coli.fasta; # there is only one contig, so safe to just pull some lines. printf "">contig_1\n"" > contigs.fasta; sed -n '100,1200p' e-coli.fasta >> contigs.fasta; printf "">contig_2\n"" >> contigs.fasta; sed -n '20000,20600p' e-coli.fasta >> contigs.fasta; printf "">contig_3\n"" >> contigs.fasta; sed -n '26000,26200p' e-coli.fasta >> contigs.fasta; # that's 3 contigs: 88,000 bps; 48,000 bps; and 16,000 bps; ```. **Running the program**; ```bash; mmseqs easy-taxonomy contigs.fasta mmseqs2-GTDB-db GTDB-tax-result tax-tmp \; --threads 20 --tax-lineage 1 --compressed 1 --remove-tmp-files 0; ```. ## MMseqs Output (for bugs). Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Context; Trying to get taxonomy output via GTDB with lineage info added. Using the NCBI database completes successfully on the same input query. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. - mmseqs2 version 15.6f452 installed with conda; - working on Ubuntu 20.04.4 LTS; - 500 GB memory",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/806:2225,install,installed,2225,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806,1,['install'],['installed']
Deployability,"at nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 128 --compressed 0 -v 3 . Query database size: 12919340 type: Nucleotide; Estimated memory consumption: 95G; Target database size: 6459670 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 6.46M 24s 264ms; Index table: Masked residues: 231705872; Index table: fill; [=================================================================] 6.46M 51s 182ms; Index statistics; Entries: 7104738736; DB size: 48845 MB; Avg k-mer size: 6.616804; Top 10 k-mers; GAACAACCGGCTTAG	562246; CTCACCACGAAACGG	555944; TCATGATAAGCGCTG	492357; GTTGCTCATGAAGGT	467881; CCCGTTCGTTGCAGG	454633; CCGTTGGCCAGTAAG	425430; TCTTCACTAGACCGT	407926; CTGGATGTCCACCAG	396183; GCCCTGCAACCACGG	387874; CTACCTCTCCCCTTG	382664; Time for index table init: 0h 1m 21s 797ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12919340; Target db start 1 to 6459670; [==. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 	13.45111; I'm working in a 240 CPU node cluster, my job submission intends to occupy 128 out of 128 cores available per node, each node has a total memory of 512 GB. Regarding the OS, it's running CentosOS 8.1 and uses Slurm 20.11.0 as a job resource manager, Package Build Env: Spack v0.15, Software Deployment Environment: Lmod 8.2.10 and GCC 8.3.1 as the MPI compiler.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:12987,Deploy,Deployment,12987,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['Deploy'],['Deployment']
Deployability,"atabase, gives fewer exact matches than for example using Diamond with the same parameters. It seems MMSeqs2 aligns more sequences than Diamond but it misses more exact matches as well. ## Steps to Reproduce (for bugs). * Randomly extract 10,000 sequences from Uniref90 . * Perform a search against Uniref90 with the 10,000 query proteins using MMSeqs2 search with parameters ```-s 4``` and ```--max-seqs 4000``` . * Perform a search against Uniref90 with the same 10,000 query proteins using Diamond blastp with default parameters and ```--max-target-seqs 4000```. * Compare the number of query sequences for which an exact match is retrieved across the two searches (i.e. a query sequence that aligns perfectly against itself). . ## MMseqs Output (for bugs). MMSeqs2 logs: https://gist.github.com/fstrozzi/b21b68aa94bcd9bb5cf19af537975850. ## Context; We were testing MMSeqs2 sensitivity and as a sort of true positive control we realigned some sequences randomly extracted from Uniref90 against the Uniref90, to check how many exact matches we were able to retrieve. We then saw that MMSeqs2 with ```-s 4```, which should match Diamond default (fast) parameters, misses some exact matches. #### MMSeqs2 . * total aligned query sequences: 9994; * exact matches (query sequence aligned with itself in the database): 9496. #### Diamond. * total aligned query sequences: 9975 ; * exact matches (query sequence aligned with itself in the database): 9975. We were also wondering what could be the parameters controlling this behavior and what we could do to improve the best hit search. We also tried to run MMSeqs2 with higher sensitivity (5.7) but the result is very similar. ; Thanks for this great software, we are finding it incredibly useful for both clustering and searching on large protein datasets and we would like to understand more on how to use it efficiently and correctly. ## Your Environment. * MMSeqs2 Release 3-be8f6 AVX2. * Diamond v0.9.21. * Environment : Amazon Linux AMI 2018.03.l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91:2252,Release,Release,2252,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91,1,['Release'],['Release']
Deployability,"ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Similarly, `sed 's|_protein\.faa||g'` should be `sed 's|_protein\.faa\.gz||g'` (approx. line 376). I'd be happy to make a PR if it helps. **Importantly**, although the GTDB should download properly after these fixes, the resulting seqtaxdb will still contain the ID collision issue mentioned in #729 involving the `gtdb.lookup` file. Taxonomy results will be unreliable until #729 is fixed. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 14.7e284; * Which MMseqs version was used: conda install; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invoc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:2084,release,releases,2084,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,1,['release'],['releases']
Deployability,"bfoldMSA/MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1/build$ ./bin/mmseqs; ./bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; 71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; g++ (GCC) 5.4.0; cmake version 3.28.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; uname -a | grep x86_64; Linux node7 3.10.0-1160.11.1.el7.x86_64 #1 SMP Fri Dec 18 16:34:56 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; * Operating system and version:; CentOS Linux release 8 (Core). * packages in current environment; `conda list; packages in environment at /home/liuhongbin/anaconda3/envs/colabfoldMSA:. Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 2_gnu conda-forge; absl-py 1.4.0 pypi_0 pypi; alphafold-colabfold 2.3.6 pypi_0 pypi; appdirs 1.4.4 pypi_0 pypi; astunparse 1.6.3 pypi_0 pypi; binutils 2.40 hdd6e379_0 conda-forge; binutils_impl_linux-64 2.40 hf600244_0 conda-forge; binutils_linux-64 2.40 hbdbef99_2 conda-forge; biopython 1.82 pypi_0 pypi; bzip2 1.0.8 hd590300_5 conda-forge; c-compiler 1.7.0 hd590300_0 conda-forge; ca-certificates 2023.11.17 hbcca054_0 conda-forge; cachetools 5.3.2 pypi_0 pypi; certifi 2023.11.17 pypi_0 pypi; charset-normalizer 3.3.2 pypi_0 pypi; chex 0.1.85 pypi_0 pypi; colabfold 1.5.5 pypi_0 pypi; contextlib2 21.6.0 pypi_0 pypi; contourpy 1.2.0 pypi_0 pypi; cxx-compiler 1.7.0 h00ab1b0_0 conda-forge; cycler 0.12.1 pypi_0 pypi;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/795:1964,release,release,1964,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/795,1,['release'],['release']
Deployability,"bioconda has currently no support for ARM. Though there are some open pull requests in bioconda that will enable support for ARM on Linux at some point. . If you want to use MMseqs2 on an ARM machine, please download the ARM64 binaries from the latest GitHub release or from [mmseqs.com/latest](https://mmseqs.com/latest).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/744#issuecomment-1701474028:259,release,release,259,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/744#issuecomment-1701474028,1,['release'],['release']
Deployability,"c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1396,configurat,configuration,1396,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['configurat'],['configuration']
Deployability,"cal comparison operator 	; > Numerical comparison value 	0; > Sort (increasing:1, decreasing: 2, shuffle: 3) the entries by numerical value	0; > ; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > = Merge found sequences with previous clustering =; > ===================================================; > Program call:; > tmp/OLDCLUST.mapped tmp/updatedClust tmp/newSeqsHits.swapped tmp/OLDCLUST.mapped ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Merge prefixes	; > Verbosity 	3; > ; > Merging the results to tmp/updatedClust; > Done; > Time for merging files: 0 h 0 m 0 s; > Time for merging: 0 h 0 m 0s; > ===================================================; > =========== Extract unmapped sequences ============; > ===================================================; > Program call:; > tmp/noHitSeqList DB_new tmp/toBeClusteredSeparately ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > Start writing to file tmp/toBeClusteredSeparately; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > ===== Cluster separately the alone sequences ======; > ===================================================; > mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; > mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; > mv: rename tmp/input_* to tmp/search/input_*: No such file or directory; > Program call:; > tmp/toBeClusteredSeparately tmp/newClusters tmp --sub-mat blosum62.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 --alignment-mode 0 -e 0.001 --min-seq-id 0 --max-rejected 2147483647 --max-accept 2147483647 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; >",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:11673,update,updatedClust,11673,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['update'],['updatedClust']
Deployability,"cd tmp; [lihuilin@login01 tmp]$ ls; 18110643841744502873 latest; [lihuilin@login01 tmp]$ cat latest; cat: latest: Is a directory; [lihuilin@login01 tmp]$ cd latest; [lihuilin@login01 latest]$ ls; [lihuilin@login01 latest]$ cd ..; [lihuilin@login01 tmp]$ ls; 18110643841744502873 latest; [lihuilin@login01 tmp]$ cd 18110643841744502873; [lihuilin@login01 18110643841744502873]$ ls; [lihuilin@login01 18110643841744502873]$; ```; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; I installed MMseqs2 by git clone, and followed these:; ```; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; make; make install ; export PATH=$(pwd)/bin/:$PATH; ```. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; ```; [lihuilin@login01 MMseqs2]$ [ $(uname -m) = ""x86_64"" ] && echo ""64bit: Yes"" || echo ""64bit: No""; grep -q sse4_1 /proc/cpuinfo && echo ""SSE4.1: Yes"" || echo ""SSE4.1: No""; # for very old systems which support neither SSE4.1 or AVX2; grep -q sse2 /proc/cpuinfo && echo ""SSE2: Yes"" || echo ""SSE2: No""64bit: Yes; [lihuilin@login01 MMseqs2]$ grep -q avx2 /proc/cpuinfo && echo ""AVX2: Yes"" || echo ""AVX2: No""; AVX2: Yes; [l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:10289,install,installed,10289,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['install'],['installed']
Deployability,core only.; > Using 4 threads.; > Calculation of Smith-Waterman alignments.; > Time for merging files: 0 h 0 m 0 s; > ; > All sequences processed.; > ; > 4237 alignments calculated.; > 4235 sequence pairs passed the thresholds (0.999528 of overall calculated).; > 25.0592 hits per query sequence.; > Time for alignments calculation: 0 h 0 m 0s; > Program call:; > tmp/input_step_redundancy tmp/aln tmp/clu_step0 --cluster-mode 0 --max-seqs 300 -v 3 --max-iterations 1000 --similarity-type 2 --threads 4 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Cluster mode 	0; > Max. results per query 	300; > Verbosity 	3; > Max depth connected component	1000; > Similarity type 	2; > Threads 	4; > ; > Init...; > Opening sequence database...; > Opening alignment database...; > done.; > Clustering mode: Set Cover; > ; > Sort entries.; > ; > Find missing connections.; > ; > Found 656 new connections.; > ; > Reconstruct initial order.; > ; > Add missing connections.; > ; > Time for Read in: 0 m 0s; > ; > Writing results...; > ...done.; > Time for clustering: 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Total time: 0 m 0s; > ; > Size of the sequence database: 169; > Size of the alignment database: 169; > Number of clusters: 17; > Program call:; > tmp/toBeClusteredSeparately tmp/clu tmp/clu_redundancy tmp/clu_step0 ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > List amount 176; > Clustering step 1...; > Clustering step 2...; > Writing the results...; > Time for merging files: 0 h 0 m 0 s; > ...done.; > ===================================================; > ==== Merge the updated clustering together with ===; > ===== the new clusters ======; > ===================================================; > Program call:; > tmp/updatedClust tmp/newClusters DB_clusterupdate ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > Time for merging files: 0 h 0 m 0 s; > Time for concatenating DBs: 0 h 0 m 0s,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:20561,update,updated,20561,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,2,['update'],"['updated', 'updatedClust']"
Deployability,"debug back trace:. >gdb -r --args mmseqs createdb dpann_cpr.faa dpann_cpr_mmseq_db/; GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1; Copyright (C) 2016 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...expanding to full symbols...done.; (gdb) r; Starting program: /home/disque2To/home/romain/logiciel/MMseqs2/build/bin/mmseqs createdb dpann_cpr.faa dpann_cpr_mmseq_db/; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; Program call:; createdb dpann_cpr.faa dpann_cpr_mmseq_db/ . MMseqs Version: 	a951e4dede7e9b52e514119d083ff4ca80ad1565; Max. sequence length 	65535; Split Seq. by len 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; .........................................................Time for merging files: 0h 0m 1s 184ms. Program received signal SIGSEGV, Segmentation fault.; __GI___fileno (fp=0x0) at fileno.c:35; 35	fileno.c: Aucun fichier ou dossier de ce type.; (gdb) bt; #0 __GI___fileno (fp=0x0) at fileno.c:35; #1 0x00000000005",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/141#issuecomment-445211494:497,configurat,configuration,497,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/141#issuecomment-445211494,2,['configurat'],['configuration']
Deployability,"dinglab/MMseqs2] the website to download ssu.fna for GTDB doesn't work (Issue #548). Hi, ; ; I’m sorry but I can’t help. I couldn't use it at the end because of that problem. ; Best, ; Ana ; ; &gt; On 3 Aug 2023, at 08:11, csm276 ***@***.*** ***@***.***&gt;&gt; wrote: ; &gt; ; &gt; ; &gt; Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au <http://data.ace.uq.edu.au/&gt; (data.ace.uq.edu.au <http://data.ace.uq.edu.au/&gt;)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found. ... ... awk -F'[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory) ; &gt; ; &gt; Any help on this will be appreciated ; &gt; ; &gt; Hi， ; &gt; How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working ; &gt; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna <https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna&gt; ; &gt; Can you give me some advice? Thanks a lot. ; &gt; ; &gt; — ; &gt; Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073&gt;, or unsubscribe <https://github.com/notifications/unsubscribe-auth/APMXFJCAL7ML33M3S4GNM33XTM6K3ANCNFSM5QJH4VIA&gt;. ; &gt; You are receiving this because you commented. ; &gt; ; ; ; ; --------------------------------------------- ; Ana María Cabello Pérez, PhD ; ; Centro Oceanográfico de Málaga (IEO-CSIC) ; Instituto Español de Oceanografía ; Puerto Pesquero s/n ; 29640 Fuengirola, Málaga, Spain ; Tel: +34 95 219 71 24 ; ***@***.*** ; --------------------------------------------- ; ; ; —; Reply to this email directly, view it on GitHub, or unsubscribe.; You are receiving this because you commented.Message ID: ***@***.***&gt;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1665018131:1314,release,releases,1314,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1665018131,2,['release'],['releases']
Deployability,"e same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1258,configurat,configuration,1258,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['configurat'],['configuration']
Deployability,"e_cutoff/resultDB no_e_cutoff/resultDB_no_e_cutoff.m8 >&1 | tee -a no_e_cutoff/no_e_cutoff.out; rm -r tmp; mmseqs search queryDB targetDB 30/resultDB tmp -e 1e-30 --search-type 3 >&1 | tee 30/30.out; mmseqs convertalis queryDB targetDB 30/resultDB 30/resultDB_30.m8 >&1 | tee -a 30/30.out; rm -r tmp; mmseqs search queryDB targetDB 50/resultDB tmp -e 1e-50 --search-type 3 >&1 | tee 50/50.out; mmseqs convertalis queryDB targetDB 50/resultDB 50/resultDB_50.m8 >&1 | tee -a 50/50.out; ```. ## MMseqs Output (for bugs); The outputs are contained in the .zip above. ## Context; I'm fairly certain that the problem is being caused due to the fact that 1e-50 when convereted to float will become 0. Therefore the e value will be set to 0. This means that all results are filtered out of the alignment. If this is not fixable, it would at least be extremely helpful to have a strong warning message. It took me a day to break this all down and find out what the cause was. Filter with an e-value of 1e-50 is not uncommon. Especially during taxonomy matches (my actual goal) to for example perform QC on raw seq data. ## Your Environment; I installed using conda:; ```; # Name Version Build Channel; mmseqs2 12.113e3 h2d02072_2 bioconda; ```; The running server:; ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 256; On-line CPU(s) list: 0-254; Off-line CPU(s) list: 255; Thread(s) per core: 1; Core(s) per socket: 64; Socket(s): 2; NUMA node(s): 2; Vendor ID: AuthenticAMD; CPU family: 23; Model: 49; Model name: AMD EPYC 7702 64-Core Processor; Stepping: 0. NAME=""Ubuntu""; VERSION=""18.04.4 LTS (Bionic Beaver)""; ID=ubuntu; ID_LIKE=debian; PRETTY_NAME=""Ubuntu 18.04.4 LTS""; VERSION_ID=""18.04""; HOME_URL=""https://www.ubuntu.com/""; SUPPORT_URL=""https://help.ubuntu.com/""; BUG_REPORT_URL=""https://bugs.launchpad.net/ubuntu/""; PRIVACY_POLICY_URL=""https://www.ubuntu.com/legal/terms-and-policies/privacy-policy""; VERSION_CODENAME=bionic; UBUNTU_CODENAME=bionic; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/399:2077,install,installed,2077,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399,1,['install'],['installed']
Deployability,"elevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; L1i cache: 32K; L2 cache: 4096K; L3 cache: 16384K; NUMA node0 CPU(s): 0-37; NUMA node1 CPU(s): 38-75; NUMA node2 CPU(s): 76-113; NUMA node3 CPU(s): 114-151; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:3941,release,release,3941,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,2,"['Release', 'release']","['Release', 'release']"
Deployability,"elized protein sequence searches and clustering of huge protein sequence d; ata sets. Please cite: M. Steinegger and J. Soding. MMseqs2 enables sensitive protein sequ; ence searching for the analysis of massive data sets. Nature Biotechnology, doi:; 10.1038/nbt.3988 (2017). MMseqs2 Version: b0b8e85f3b8437c10a666e3ea35c78c0ad0d7ec2; © Martin Steinegger (martin.steinegger@snu.ac.kr). usage: mmseqs <command> [<args>]. Easy workflows for plain text input/output; easy-search Sensitive homology search; easy-linsearch Fast, less sensitive homology search; easy-cluster Slower, sensitive clustering; easy-linclust Fast linear time cluster, less sensitive clustering; easy-taxonomy Taxonomic classification; easy-rbh Find reciprocal best hit; …; ```; ## Current Behavior; *no output*; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; Zip file for respective download was extracted, and upon navigating to the mmseqs directory the '--help' help argument was input to test the installation, resulting in no output. ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; - No output is the problem; ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; On this machine I have been having an ongoing issue in which cmd is unable to open in any scenario besides using another user account.; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): none; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): statically-compiled ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: n/a; * Server specifications (especially CPU support for AVX2/SSE and amount of syste",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/574:1204,install,installation,1204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574,1,['install'],['installation']
Deployability,"es. ## Current Behavior. I'm running a clustering analysis to leave out redundant sequences in a big dataset of approximately 10 millon DNA sequences of lengths varying between 1150 and 1250 bp. The problem I'm having is that it looks like the program is running in a single core instead of the 128 threads I tell the program to use, hence it takes a really long time to analyze this dataset. I'm assuming it shouldn't take long based on the fact that your package is supposed to analyze even bigger datasets in a couple hours. . I ran into the same issue running CD-HIT, and this is why I'm giving a try to your package. I've already tried compiling your package using:. cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. .. However this gave me issues when running a submission script and my job was killed with the error:. mpirun noticed that process rank 2 with PID xxxx on node xxxx exited on signal 9 (Killed). . For this reason I decided to install mmseqs in a conda environment using:; conda install -c conda-forge -c bioconda mmseqs2. I know the program is running in a single core because I'm using ssh cpu-<number> and ps aux | grep <username> and only one process appears to be running the prefilter step right now. . ## Steps to Reproduce (for bugs). #!/bin/bash; #SBATCH --job-name=mmseqs; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.9; Coverage mode 	1; Compositional bias ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:1031,install,install,1031,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,2,['install'],['install']
Deployability,"es_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update; clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update. MMseqs Version: 	11.e1a1c; Seq. id. threshold 	0.9; Coverage threshold 	0.8. ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index. [... a lot of output ...]. 31mSize of data: 363542; mRequested offset: 412570; Requested offset: 399738; 31mRequested offset: 367758; Requested offs",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:866,Update,Update,866,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914,1,['Update'],['Update']
Deployability,"find v89 of ssu.fna in GTDB history releases, url: https://data.ace.uq.edu.au/public/gtdb/data/releases/release89/89.0/ssu_r89.fna. I run the commands in [Create a seqTaxDB for GTDB] and it works. Perhaps as a temporary alternative.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1783677138:36,release,releases,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1783677138,2,['release'],['releases']
Deployability,"genomesDB_clu.log 2>&1 &. It is running since September 10, attached is the log, what do you think how long it will take to finish?. ?Many Thanks,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Intikhab S. Alam; Sent: 10 September 2020 00:45; To: soedinglab/MMseqs2; soedinglab/MMseqs2; Cc: Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdit",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180:1407,update,update,1407,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180,1,['update'],['update']
Deployability,"h out/qdb /path/to/database/uniref30_2202_db out/res out/tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. ```. ## MMseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:3341,RELEASE,RELEASE,3341,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,1,['RELEASE'],['RELEASE']
Deployability,"h the error:; ```; [ 94%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasySearch.cpp.o; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp: In function 'int doeasysearch(int, const char**, const Command&, bool)':; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:34: error: 'easysearch_sh' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; | ^~~~~~~~~~~~~; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:49: error: 'easysearch_sh_len' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; ```; (Indicated here are the last few lines only.). ## Steps to Reproduce (for bugs); Compilation tools:; ```; cmake v3.21.4; gcc v10.2.0; openmpi v4.1.1; git v2.31.1; make v3.82; ```; Clone latest `MMseqs2` version with; ```; git clone https://github.com/soedinglab/MMseqs2.git; ```. Follow compilation instructions for linux as provided [here](https://github.com/soedinglab/mmseqs2/wiki#compile-from-source-under-linux) with the following modification:; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DREQUIRE_OPENMP=0 -DCMAKE_INSTALL_PREFIX=. ..; ```; This results in the error indicated above. ## MMseqs Output (for bugs); Some additional data, if necessary, is available [here](https://gist.github.com/vragh/89c426b70c63248c73ff120757149c9d). ## Context; I'm trying to install `MMseqs2` with MPI capabilities so that I can parallelize a large search over multiple `slurm` nodes on a HPC. ## Your Environment; * Commit: the version I cloned should be equivalent to [[fce06b1](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011)](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011) ?; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 2x Intel(R) Xeon(R) Silver 4214; 187 GB total system memory.; * Operating system and version: Scientific Linux 7.9 (Nitrogen).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/633:1321,Release,Release,1321,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/633,2,"['Release', 'install']","['Release', 'install']"
Deployability,"hed with `core dumped` error and reports `Error: createbintaxonomy failed`. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; mmseqs createdb ""uniprot_2024_03.fasta"" seqdb; ```; then; ```; mmseqs createtaxdb seqdb tmp ; ```. We attempted to vary `--tax-db-mode`, `--tax-mapping-mode`, and `--threads` parameters but observed the same behavior. Any help would be highly appreciated. We are able to reproduce this issue with a minimal database containing 1000 sequences. ## MMseqs Output (for bugs). ```; > mmseqs createtaxdb seqdb tmp ; createtaxdb seqdb tmp . MMseqs Version: 15.6f452; NCBI tax dump directory; Taxonomy mapping file ; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 48; Verbosity 3. Loading nodes file ... Done, got 2601214 nodes; Loading merged file ... Done, added 79743 merged nodes.; Loading names file ... Done; mmseqs: malloc.c:2379: sysmalloc: Assertion `(old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)' failed.; Aborted (core dumped); Error: createbintaxonomy failed; ```. ## Context. We are trying to create a custom taxonomy database for MSA, such that the resulting .a3m files contain taxonomy information. Is a taxonomy database already available for download for uniprot_2024_03 for similar releases?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:. Linux 64-bit, 256G memory; MMseqs Version: 15.6f452",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871:1559,release,releases,1559,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871,1,['release'],['releases']
Deployability,"hold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:2083,install,installed,2083,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['install'],['installed']
Deployability,"ihuilin@login01 latest]$ ls; [lihuilin@login01 latest]$ cd ..; [lihuilin@login01 tmp]$ ls; 18110643841744502873 latest; [lihuilin@login01 tmp]$ cd 18110643841744502873; [lihuilin@login01 18110643841744502873]$ ls; [lihuilin@login01 18110643841744502873]$; ```; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; I installed MMseqs2 by git clone, and followed these:; ```; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; make; make install ; export PATH=$(pwd)/bin/:$PATH; ```. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; ```; [lihuilin@login01 MMseqs2]$ [ $(uname -m) = ""x86_64"" ] && echo ""64bit: Yes"" || echo ""64bit: No""; grep -q sse4_1 /proc/cpuinfo && echo ""SSE4.1: Yes"" || echo ""SSE4.1: No""; # for very old systems which support neither SSE4.1 or AVX2; grep -q sse2 /proc/cpuinfo && echo ""SSE2: Yes"" || echo ""SSE2: No""64bit: Yes; [lihuilin@login01 MMseqs2]$ grep -q avx2 /proc/cpuinfo && echo ""AVX2: Yes"" || echo ""AVX2: No""; AVX2: Yes; [lihuilin@login01 MMseqs2]$ grep -q sse4_1 /proc/cpuinfo && echo ""SSE4.1: Yes"" || echo ""SSE4.1: No""; SSE4.1: Yes; [lihuilin@login01 MMseqs2]$ # for very old systems whic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:10460,RELEASE,RELEASE,10460,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['RELEASE'],['RELEASE']
Deployability,"ince it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration step might appear well superior to a target found in the first iteration. See target WP_004066529.1 and WP_084684326.1 for query WP_148290433.1 as examples. Other ""goodness of alignment"", confirms that target from the first search iteration is indeed better thus bit score from the profile search iteration might be biased (overestimated). It would be important to rank all hits of a query based on a globally valid significance measure that would allow the comparison of Hit-Target significances across iterations as well. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020); * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 16 GB RAM, i5-3320M CPU; * Operating system and version:; Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:3998,RELEASE,RELEASE,3998,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,2,"['RELEASE', 'install']","['RELEASE', 'install']"
Deployability,installation issue (MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/886:0,install,installation,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/886,1,['install'],['installation']
Deployability,"ior; Starting from nr which was already downloaded, generate all of the required files to run mmseqs taxonomy to assign taxonomy to metagenome assembled genomes. ## Current Behavior; nr.fnaDB_mapping is empty (ls -thor reveals it is 0 bytes and mmseqs easy-taxonomy displays ""nr.fnaDB_mapping is empty. Rerun createtaxdb to recreate taxonomy mapping.""). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; #Download nr; wget ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz; gunzip nr.gz; #Make a blastdb and diamond db of nr; makeblastdb -in nr -dbtype prot; diamond makedb --in nr -d nr.dmnd; #Prepare taxonomy database for mmseqs2; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy; rm taxdump.tar.gz; blastdbcmd -db nr -entry all > nr.fna; blastdbcmd -db nr -entry all -outfmt ""%a %T"" > nr.fna.taxidmapping; mmseqs createdb nr.fna nr.fnaDB && \; mmseqs createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nr.fna.taxidmapping. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I want to use MMseqs2 to assign taxonomy to contig-level metagenome-assembled genomes. I had previously downloaded nr as above, so hopefully the way I downloaded it works for MMseqs? I could alternatively re-download nr entirely with the mmseqs workflows, but would prefer not to do that if possible for consistency with analyses that are already done and used the version of nr that I have downloaded. I don't think versioning is actually a problem as I downloaded nr within the past couple months. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; I am using a conda environment created using `conda install -c bioconda mmseqs2` on April 19, 2023.; version: 14.7e284 (via conda list in activated environment)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/701:1909,install,install,1909,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/701,1,['install'],['install']
Deployability,"ist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:. cmake --version; cmake version 2.8.12.2; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; c++ --version; c++ (GCC) 6.2.1 20160916 (Red Hat 6.2.1-3). * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; cat /proc/cpuinfo. ```; processor	: 63; vendor_id	: GenuineIntel; cpu family	: 6; model		: 46; model name	: Intel(R) Xeon(R) CPU X7560 @ 2.27GHz; stepping	: 6; microcode	: 0xb; cpu MHz		: 1064.000; cache size	: 24576 KB; physical id	: 3; siblings	: 16; core id		: 11; cpu cores	: 8; apicid		: 119; initial apicid	: 119; fpu		: yes; fpu_exception	: yes; cpuid level	: 11; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 x2apic popcnt lahf_lm ida epb dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips	: 4527.83; clflush size	: 64; cache_alignment	: 64; address sizes	: 44 bits physical, 48 bits virtual; power management:; ```; free; ```; total used free shared buff/cache available; Mem: 528377212 3193792 142947764 9564 382235656 523907652; Swap: 0 0 0. ```; * Operating system and version:; cat /etc/redhat-release ; CentOS Linux release 7.3.1611 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31:7047,release,release,7047,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31,2,['release'],['release']
Deployability,"l the `clust` module which implements the actual clustering algorithm, not the whole `cluster` workflow with the searches etc:; ```; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```; should be . ```; mmseqs clust $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```. For a 70% clustering you can adapt the 50% clustering strategy:. ```; # cluster down to 70%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust70"" \; --filter-column 3 --filter-regex '(0\.[7-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust70"" ""$TMPPATH/clu_uniclust70"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust70_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust70; ```. The idea here is to go directly from 90 to 30 to avoid any possible transitivity issues. In the MMseqs2 cascaded clustering you can get representative->member hits below the given thresholds after putting clusters from previous clustering steps together. You can reconstruct the 50 (and a 70) clustering from the 30% alignments, and that's what it does (it does it with a roundabout regex, because we didn't have expression filters back then).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067:1635,RELEASE,RELEASE,1635,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067,1,['RELEASE'],['RELEASE']
Deployability,"letions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Pseudo count a 	0; Pseudo count b 	1.5; Preload mode 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	8; Compressed 	0; Verbosity 	3. Query database size: 1151 type: Aminoacid; Target database size: 41195879 type: Aminoacid; ================================================================= ] 46.43% 535 eta 0s; ==71239==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61a0000233e0 at pc 0x55c61d242cd7 bp 0x7fc0f27db1b0 sp 0x7fc0f27db1a0; WRITE of size 1 at 0x61a0000233e0 thread T3; ==71239==AddressSanitizer: while reporting a bug found another one. Ignoring.08K eta 0s; #0 0x55c61d242cd6 in MultipleAlignment::updateGapsInSequenceSet(char**, unsigned long, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > > const&, std::vector<Matcher::result_t, std::allocator<Matcher::result_t> > const&, unsigned int*, bool) /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/alignment/MultipleAlignment.cpp:168; #1 0x55c61d2432cc in MultipleAlignment::computeMSA(Sequence*, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > > const&, std::vector<Matcher::result_t, std::allocator<Matcher::result_t> > const&, bool) /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/alignment/MultipleAlignment.cpp:208; #2 0x55c61d180e7b in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/util/result2profile.cpp:203; #3 0x7fc0f70d796d (/usr/lib/x86_64-linux-gnu/libgomp.so.1+0x1696d); #4 0x7fc0f6c916da in start_thread (/lib/x86_64-linux-gnu/lib",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:2658,update,updateGapsInSequenceSet,2658,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245,1,['update'],['updateGapsInSequenceSet']
Deployability,"lion sequences and used in different projects already. As it seems, It may not be good idea to use db files from easy-cluster output. Do you think it is useful to create a new db (EBdb) out of easy-cluster output of the previous run, using rep_seq.fasta, and use EBdb as a template to compare newer sequences I want to cluster and finally update the EBdb to EBdb_new?. Intikhab. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 12:42; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module result2repseq. I think I fixed the performance issue in the latest commit cc7d7da<https://github.com/soedinglab/MMseqs2/commit/cc7d7da30ec779d6a2e886438f8295f59e2192f1>. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the easy- workflows yet. I'd recommend to stick to the basic commands as shown in the user guide. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63EW3N5Z32FV3JA5T3JDSEX37XANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337:1416,update,update,1416,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337,4,"['release', 'update']","['release', 'update']"
Deployability,"man/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:2600,install,installations,2600,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['install'],['installations']
Deployability,"me $DB_name ""$TMP/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 2 --split-memory-limit 250G --threads 32. mmseqs align $DB_name $DB_name ""$TMP/pref"" ""$TMP/align"" -c 0.8 --alignment-mode 2 --min-seq-id 0.8 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647. mmseqs clust $DB_name $DB_name ""$TMP/align"" ""$TMP/clust"" --cluster-mode 0 --threads 32. awk '{ print $1 }' ""$TMP/clust.index"" > ""$TMP/clust_order"". mmseqs createsubdb ""$TMP/clust_order"" $DB_name ""$subDB"". mmseqs prefilter ""$subDB"" ""$subDB"" ""$TMP2/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 5 --split-memory-limit 250G --threads 32. mmseqs align ""$subDB"" ""$subDB"" ""$TMP2/pref"" ""$TMP2/align"" -c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647`. ## MMseqs Output (for bugs). MMseqs Version: 8ea08f0c75b9f08049fd8f01eb65f90d6fbdd93d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 300; Split database 0; Split mode 2; Split memory limit 250G; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 32; Compressed 0; Verbosity 3. Query database size: 1480080 type: Aminoacid; Estimated memory consumption: 5G; Target database size: 1480080 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 6; Index table: counting k-mers; [=================================================================] 1.48M 3s 585ms; Index table: Masked residues: 4728698; Index table: fill. ## Your Environment; I'm using the latest release of MMSeqs2.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/382:2672,release,release,2672,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382,1,['release'],['release']
Deployability,"mino acid sequences with 100% coverage. I expect after going through the prefiltering step and alignment step I would see 100% identical hits. ; ## Current Behavior; Instead I found hits with of approximately 93% with reported mismatches of 22 with the same e-values as those with 100% identity. ; ## Steps to Reproduce (for bugs). Attached is the example sequence I found for this bug ([redundant.zip](https://github.com/user-attachments/files/16111570/redundant.zip)). Protein sequence is 303 AA in length with fake names given to the same sequence. I ran the following commands to create the alignment file where I found the issue. . ```; mmseqs createdb redundant.fasta sequenceDB; mmseqs kmermatcher sequenceDB prefilterDB; mmseqs align sequenceDB sequenceDB prefilterDB alignmentDB; mmseqs convertalis sequenceDB sequenceDB alignmentDB alignmentFile; ```. ## MMseqs Output (for bugs); Below is the TSV file of the resulting alignment. As you can see these identical sequences sometimes match at 100% others at 93% with some amount of mismatch and all the same bit-scores etc. ; ![Screenshot from 2024-07-05 10-47-23](https://github.com/soedinglab/MMseqs2/assets/44539035/4d073d41-99e7-4abc-b057-70974cde7ab0). ## Context. I am attempting to replicate some uniref clusters and found this irregularity and chose to isolate and replicate the issue by creating a completely redundant database. This may be a related to #688 . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 6f45232ac8daca14e354ae320a4359056ec524c2. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled from release 15-6f452. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; AMD 3950X with 128GB DDR4 RAM. * Operating system and version:; Ubuntu 22.04.4 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/861:1870,release,release,1870,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/861,1,['release'],['release']
Deployability,"mmseqs2 is installed with conda, but the cpu utilization is low when performing the retrieval library",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/752:11,install,installed,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/752,2,['install'],['installed']
Deployability,"mpirun is a kind of linux command.; But it has two kinds of very different version: OpenMPI , MPICH. A bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: (Open MPI) 1.10.2; No bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: 3.3a2 (After googled this number, I found this is from MPICH). The bug reports:; Corrupt memory, too many entries!. Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted. mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[38952,1],10]; Exit code: 1. Error: Prefilter died. So could you tell me which mpirun is the base of mmseqs ?; Or How to do with this bug?; Thank you very much in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/213:186,install,installed,186,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/213,2,['install'],['installed']
Deployability,ms; mergeclusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newClusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step2 --threads 12 --compressed 0 -v 3. Clustering step 1; [=================================================================] 6 0s 1ms; Clustering step 2; [=================================================================] 6 0s 4ms; Clustering step 3; [=================================================================] 6 0s 8ms; Clustering step 4; [=================================================================] 6 0s 11ms; Write merged clustering; [=================================================================] 6 0s 16ms; Time for merging to newClusters: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 31ms; ===================================================; ==== Merge the updated clustering together with ===; ===== the new clusters ======; ===================================================; concatdbs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newClusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/clusters_db.0 --preserve-keys. No datafile could be found for /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust!; Error: Dbconcat died; ```. </details>,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:34321,update,updated,34321,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,3,['update'],"['updated', 'updatedClust']"
Deployability,"n(R) Gold 6130 CPU @ 2.10GHz; stepping : 4; microcode : 0x2007006; cpu MHz : 2100.000; cache size : 22528 KB; physical id : 0; siblings : 32; core id : 0; cpu cores : 16; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 22; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts hwp hwp_act_window hwp_epp hwp_pkg_req pku ospke md_clear flush_l1d arch_capabilities; vmx flags : vnmi preemption_timer posted_intr invvpid ept_x_only ept_ad ept_1gb flexpriority apicv tsc_offset vtpr mtf vapic ept vpid unrestricted_guest vapic_reg vid ple shadow_vmcs pml ept_mode_based_exec tsc_scaling; bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit mmio_stale_data; bogomips : 4200.00; clflush size : 64; cache_alignment : 64; address sizes : 46 bits physical, 48 bits virtual; power management:. $ free; total used free shared buff/cache available; Mem: 791192240 20105804 63519620 33656 707566816 765066152; Swap: 0 0 0; ```; * Operating system and version:; ```; $ cat /etc/*release; DISTRIB_ID=Ubuntu; DISTRIB_RELEASE=22.04; DISTRIB_CODENAME=jammy; DISTRIB_DESCRIPTION=""Ubuntu 22.04.3 LTS""; PRETTY_NAME=""Ubuntu 22.04.3 LTS""; <truncated>; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/833:6010,release,release,6010,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/833,1,['release'],['release']
Deployability,"ndex; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); getSeqLen: local id (4294967295) >= db size (802273); Error: Offset step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 15.6f452; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): latest 15.6f452 installed by conda; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 1T memory; * Operating system and version: CentOS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:35784,install,installed,35784,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['install'],['installed']
Deployability,"nome, so they should match perfectly. (Next, I'll run it on genes that might not perfectly match the reference as they can have some differences in the third char of each coddon.). ## Current Behavior; When running a nucleotides search I get ~5K results, most of them are long enough and mapped well.; When running a translated search I get 89K results that are very short and non of them covers the entire gene.; I assume that this is not a bug but rather an intended behavior. What am I missing?. ## Steps to Reproduce (for bugs); the files can be found here:; query - https://files.cs.huji.ac.il/morani/cds_from_genomic.fna; target - https://files.cs.huji.ac.il/morani/GCF_000011885.1_ASM1188v1_genomic.fna ; translated search command -` mmseqs easy-search cds_from_genomic.fna GCF_000011885.1_ASM1188v1_genomic.fna memseq_igc_to_salmonella_atcc_9150_translated.m8 tmp --search-type 2 -a --format-mode 4 --format-output ""target,query,tstart,tend,nident,qlen""`; regular search command - `mmseqs easy-search cds_from_genomic.fna GCF_000011885.1_ASM1188v1_genomic.fna memseq_igc_to_salmonella_atcc_9150_nucleotides.m8 tmp --search-type 3 -a --format-mode 4 --format-output ""target,query,tstart,tend,nident,qlen""`. ## MMseqs Output (for bugs); output files:; translated search - https://files.cs.huji.ac.il/morani/memseq_igc_to_salmonella_atcc_9150_translated.m8; regular search - https://files.cs.huji.ac.il/morani/memseq_igc_to_salmonella_atcc_9150_nucleotides.m8. ## Context; For a pipeline I'm designing, I'm comparing a few tools that can search for gene in a reference genome. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used : 15.6f452; * Downloaded using conda; * Server info:; NAME=""Debian GNU/Linux""; VERSION_ID=""10""; VERSION=""10 (buster)""; VERSION_CODENAME=buster; ID=debian; HOME_URL=""https://www.debian.org/""; SUPPORT_URL=""https://www.debian.org/support""; BUG_REPORT_URL=""https://bugs.debian.org/"". Thanks! ; Netta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/796:1671,pipeline,pipeline,1671,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/796,1,['pipeline'],['pipeline']
Deployability,"not open data file /root/tmp/blast/tmp/pref_4!; mv: no se puede efectuar `stat' sobre «/root/tmp/blast/tmp/aln_4»: No existe el fichero o el directorio; ```; The index creation and search is done in the same machine; # ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:. cmake --version; cmake version 2.8.12.2; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; c++ --version; c++ (GCC) 6.2.1 20160916 (Red Hat 6.2.1-3). * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; cat /proc/cpuinfo. ```; processor	: 63; vendor_id	: GenuineIntel; cpu family	: 6; model		: 46; model name	: Intel(R) Xeon(R) CPU X7560 @ 2.27GHz; stepping	: 6; microcode	: 0xb; cpu MHz		: 1064.000; cache size	: 24576 KB; physical id	: 3; siblings	: 16; core id		: 11; cpu cores	: 8; apicid		: 119; initial apicid	: 119; fpu		: yes; fpu_exception	: yes; cpuid level	: 11; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 x2apic popcnt lahf_lm ida epb dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips	: 4527.83; clflush size	: 64; ca",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31:5774,Release,Release,5774,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31,1,['Release'],['Release']
Deployability,"nslate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 446 type: Aminoacid; > Target split mode. Searching through 12 splits; > Estimated memory consumption: 91G; > Target database size: 230328648 type: Aminoacid; > Process prefiltering step 1 of 12; > ; > Index table k-mer threshold: 122 at k-mer size 7 ; > Index table: counting k-mers; > tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/blastp.sh : ligne 99 : 10291 Instruction non permise $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; > Error: Prefilter died. ## Context. TrEMBL installed using the mmseqs databases command. ## Your Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. Operating system and version:; Linux version 3.10.0-1160.6.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) )",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/564:3871,install,installed,3871,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564,1,['install'],['installed']
Deployability,"ok, updated output (ran the gdb as suggested):; ```; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . MMseqs Version: 	f966bfa62a2b52d4821e908ac9e25808d1be0b81; Seed substitution matrix	nucl:nucleotide.out,aa:VTML80.out; K-mer size 	15; Alphabet size 	21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Threads 	48; Verbosity 	3. Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; tantan: warning: possible numeric inaccuracy ] 0.00% 1 eta -; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or d",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:4,update,updated,4,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323,1,['update'],['updated']
Deployability,"ource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Similarly, `sed 's|_protein\.faa||g'` should be `sed 's|_protein\.faa\.gz||g'` (approx. line 376). I'd be happy to make a PR if it helps. **Importantly**, although the GTDB should download properly after these fixes, the resulting seqtaxdb will still contain the ID collision issue mentioned in #729 involving the `gtdb.lookup` file. Taxonomy results will be unreliable until #729 is fixed. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 14.7e284; * Which MMseqs version was used: conda install; * For self-comp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:2004,release,releases,2004,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,1,['release'],['releases']
Deployability,pleas tag new release,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/597:14,release,release,14,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/597,1,['release'],['release']
Deployability,"popen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --db-output 0 --db-load-mode 0 --search-type 0 --threads 40 --compresse d 0 -v 3. [=================================================================] 100.00% 500 0s 376ms; Time for merging to alnResult.m8: 0h 0m 0s 57ms; Time for processing: 0h 0m 1s 129ms; rmdb tmp/18110643841744502873/result -v 3. Time for processing: 0h 0m 0s 10ms; rmdb tmp/18110643841744502873/target -v 3. Time for processing: 0h 0m 0s 4ms; rmdb tmp/18110643841744502873/target_h -v 3. Time for processing: 0h 0m 0s 2ms; rmdb tmp/18110643841744502873/query -v 3. Time for processing: 0h 0m 0s 1ms; rmdb tmp/18110643841744502873/query_h -v 3. Time for processing: 0h 0m 0s 1ms; [lihuilin@login01 MMseqs2]$ ls; alnResult.m8 azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile examples lib LICENSE.md README.md src tmp util; [lihuilin@login01 MMseqs2]$; [lihuilin@login01 MMseqs2]$ ls; alnResult.m8 azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile examples lib LICENSE.md README.md src tmp util; [lihuilin@login01 MMseqs2]$ cd tmp; [lihuilin@login01 tmp]$ ls; 18110643841744502873 latest; [lihuilin@login01 tmp]$ cat latest; cat: latest: Is a directory; [lihuilin@login01 tmp]$ cd latest; [lihuilin@login01 latest]$ ls; [lihuilin@login01 latest]$ cd ..; [lihuilin@login01 tmp]$ ls; 18110643841744502873 latest; [lihuilin@login01 tmp]$ cd 18110643841744502873; [lihuilin@login01 18110643841744502873]$ ls; [lihuilin@login01 18110643841744502873]$; ```; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the en",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:9143,pipeline,pipelines,9143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['pipeline'],['pipelines']
Deployability,"port it. However, instead of raising an error convertmsa produces empty files without alerting the user. To skip preprocessing and run msa2profile command directly requires the datatype and index files to exist, and I don't know how to generate these correctly from the data at hand. Making a database from the MSA data is not a problem and the database can be searched without issue except that VOG IDs are not transferred from the file name. It seems that the problem is only with generating profiles. ## Reproduction / Examples. Example where convertmsa creates files, but they are empty and there is no error. ```BASH; # make temp folders; mkdir vog; cd vog; mkdir mmseqs; mkdir temp; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz; # tar xzf vog.raw_algs.tar.gz; # gzip -c *.msa > vog.raw_algs.gz; cd ..; mmseqs convertmsa vog/vog.raw_algs.tar.gz vog/temp/converted; ```. Files are created in vog/temp with the converted prefix, but they are all empty. The only path to an MMseqs2 profile that has any success is to convert the MSA files first into HH-suite compatible hmm files and then to use the hmm to profile pipeline. ```BASH; # make make temp folders; mkdir vog; mkdir hhmake; mkdir hhmake/vog; cd vog; mkdir mmseqs; mkdir temp; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz; wget http://fileshare.csb.univie.ac.at/vog/latest/vog.raw_algs.tar.gz.md5; md5sum -c vog.raw_algs.tar.gz.md5; tar xzf vog.raw_algs.tar.gz; cd ..; ; for f in vog/*.msa;; do; hhmake -M 50 -i $f -o hhmake/$f.hhm; done; ffindex_build vog/mmseqs/hmm vog/mmseqs/hmm.index hhmake/vog/; mmseqs convertprofiledb vog/mmseqs/hmm vog/mmseqs/profile; ```; However, when using a search command against vog/mmseqs/profile only returns individual genes not profiles. ## Environment. MMseqs Version: 4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; MMseqs source: conda install -c conda-forge -c bioconda mmseqs2; OS: NAME=CentOS Linux 7; CPUs: Intel(R) Xeon(R) Gold 5118; Threads/core: 96",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/440:2000,pipeline,pipeline,2000,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/440,2,"['install', 'pipeline']","['install', 'pipeline']"
Deployability,"qres.protein.cluster.DB mmseqs2_cluster/pdb_seqres.protein.cluster.fasta; ./mmseqs2/bin/mmseqs linclust mmseqs2_cluster/pdb_seqres.protein.DB mmseqs2_cluster/pdb_seqres.protein.linclust /tmp/zcx/mmseqs2 --min-seq-id 0.9 --cov-mode 1 -c 0.9; ./mmseqs2/bin/mmseqs createseqfiledb mmseqs2_cluster/pdb_seqres.protein.DB mmseqs2_cluster/pdb_seqres.protein.linclust mmseqs2_cluster/pdb_seqres.protein.linclust.DB; ./mmseqs2/bin/mmseqs result2flat mmseqs2_cluster/pdb_seqres.protein.DB mmseqs2_cluster/pdb_seqres.protein.DB mmseqs2_cluster/pdb_seqres.protein.linclust.DB mmseqs2_cluster/pdb_seqres.protein.linclust.fasta; ```. ## MMseqs Output (for bugs); [pdb_seqres.protein.cluster.fasta.gz](https://github.com/soedinglab/MMseqs2/files/2195015/pdb_seqres.protein.cluster.fasta.gz); [pdb_seqres.protein.linclust.fasta.gz](https://github.com/soedinglab/MMseqs2/files/2195014/pdb_seqres.protein.linclust.fasta.gz); The output is compressed by gzip as github does not support .fasta file. ## Context; I suspect this is because short sequence has a low alignment score. When you are estimating sequence identity according to alignment score, you will get false negative for short sequence. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): e3f80a7b0a32b1bc4122b73c045a9dd2f7da42e3; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): statically-compiled SSE4.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Support SSE but not AVX2. 125G.; * Operating system and version:; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	RedHatEnterpriseServer; Description:	Red Hat Enterprise Linux Server release 6.10 (Santiago); Release:	6.10; Codename:	Santiago",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/104:3000,release,release,3000,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/104,2,"['Release', 'release']","['Release', 'release']"
Deployability,"quence databases via `mmseqs createdb`, and I now get a longer output, but it still dies with a `No datafile could be found` error. . <details>; <summary>The entire output</summary>. ```; diffseqdbs /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/all_genes/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/removedSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/mappingSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqs --use-seq-id 0 --threads 12 --compressed 0 -v 3. Time for processing: 0h 0m 0s 96ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 117ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq. [=================================================================] 34.26K 0s 16ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 253ms; T",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:805,Update,Update,805,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['Update'],['Update']
Deployability,"r `mmseqs2_pass_cluster.tsv`:. ```; zzsomethingelse	zzsomethingelse; zzsomethingelse	zzsomething; ```; but removes the 'uc' from the defline in `mmseqs2_fail_cluster.tsv`. ```; somethingelse	somethingelse; somethingelse	something; ```. This seems to be the case for any deflines that start with 'uc'. ------. The FASTA files also have duplicate defline entries, where one of the duplicates doesn't contain a sequence:. `mmseqs2_fail_all_seqs.fasta`; ```; >somethingelse; >ucsomethingelse; MPELRRVLANGVELNVALCGSGPAVLLLHGFPHTWELWTDVMADLSGRYRVIAPDLRGFGASGRAASGYDAGTLAEDAAALLAALGVSSATVVGIDAGTAPAFLLALRHPGLVRRLVVMESLLGRLPGAEDFLAEGPPWWFGFHSAAPSLAETVLEGHEAAYVDWFLSAGTLGDGVRPALRDAFVRAYTGRQALSCAFSYYRALPKSAVQIEQAVATARLTVPTMALGARPVGAALERQLRPVTDDLTGHVIDDCGHIIPLHRPHALLALLHPFLAGEDAKAA; >ucsomething; MPELRRVLANGVELNVALCGSGPAVLLLHGFPHTWELWTDVMADLSGRYRVIAPDLRGFGASGRAASGYDAGTLAEDAAALLAALGVSSATVVGIDAGTAPAFLLALRHPGLVRRLVVMESLLGRLPGAEDFLAEGPPWWFGFHSAAPSLAETVLEGHEAAYVDWFLSAGTLGDGVRPALRDAFVRAYTGRQALSCAFSYYRALPKSAVQIEQAVATARLTVPTMALGARPVGAALERQLRPVTDDLTGHVIDDCGHIIPLHRPHALLALLHPFLAGEDAKAA; ```. `mmseqs2_pass_all_seqs.fasta`; ```; >zzsomethingelse; >zzsomethingelse; MPELRRVLANGVELNVALCGSGPAVLLLHGFPHTWELWTDVMADLSGRYRVIAPDLRGFGASGRAASGYDAGTLAEDAAALLAALGVSSATVVGIDAGTAPAFLLALRHPGLVRRLVVMESLLGRLPGAEDFLAEGPPWWFGFHSAAPSLAETVLEGHEAAYVDWFLSAGTLGDGVRPALRDAFVRAYTGRQALSCAFSYYRALPKSAVQIEQAVATARLTVPTMALGARPVGAALERQLRPVTDDLTGHVIDDCGHIIPLHRPHALLALLHPFLAGEDAKAA; >zzsomething; MPELRRVLANGVELNVALCGSGPAVLLLHGFPHTWELWTDVMADLSGRYRVIAPDLRGFGASGRAASGYDAGTLAEDAAALLAALGVSSATVVGIDAGTAPAFLLALRHPGLVRRLVVMESLLGRLPGAEDFLAEGPPWWFGFHSAAPSLAETVLEGHEAAYVDWFLSAGTLGDGVRPALRDAFVRAYTGRQALSCAFSYYRALPKSAVQIEQAVATARLTVPTMALGARPVGAALERQLRPVTDDLTGHVIDDCGHIIPLHRPHALLALLHPFLAGEDAKAA; ```. ## MMseqs Output (for bugs). https://gist.github.com/chasemc/c0cccd804ac0ff78291e43ae10837c42; https://gist.github.com/chasemc/d8157a581c833406f15442e8b9ee4e81; ## Your Environment. Conda installed: MMseqs2 Version: 13.45111; Happy to give system info if needed",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/557:3717,install,installed,3717,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/557,1,['install'],['installed']
Deployability,"r-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:4897,install,installations,4897,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['install'],['installations']
Deployability,"ram call:; > tmp/NEWDB.newSeqs tmp/OLDDB.mapped.repSeq tmp/newSeqsHits tmp/newSeqsHits.swapped.all ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Threads 	4; > Verbosity	3; > ; > Time for merging files: 0 h 0 m 0 s; > Program call:; > tmp/newSeqsHits.swapped.all tmp/newSeqsHits.swapped --trim-to-one-column ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Filter column 	1; > Filter regex 	^.*$; > Positive filter 	true; > Filter file 	; > Mapping file 	; > Threads 	4; > Verbosity 	3; > trim the results to one column 	true; > Extract n lines 	0; > Numerical comparison operator 	; > Numerical comparison value 	0; > Sort (increasing:1, decreasing: 2, shuffle: 3) the entries by numerical value	0; > ; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > = Merge found sequences with previous clustering =; > ===================================================; > Program call:; > tmp/OLDCLUST.mapped tmp/updatedClust tmp/newSeqsHits.swapped tmp/OLDCLUST.mapped ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Merge prefixes	; > Verbosity 	3; > ; > Merging the results to tmp/updatedClust; > Done; > Time for merging files: 0 h 0 m 0 s; > Time for merging: 0 h 0 m 0s; > ===================================================; > =========== Extract unmapped sequences ============; > ===================================================; > Program call:; > tmp/noHitSeqList DB_new tmp/toBeClusteredSeparately ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > Start writing to file tmp/toBeClusteredSeparately; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > ===== Cluster separately the alone sequences ======; > ===================================================; > mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; > mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; > mv:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:11482,update,updatedClust,11482,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['update'],['updatedClust']
Deployability,"re informative:. gdb --args mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs/bin/mmseqs...done.; (gdb) r; Starting program: mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Usi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:1013,configurat,configuration,1013,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473,2,['configurat'],['configuration']
Deployability,"reatedb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung for 20 hours until the program was killed. I have attached 2 log files - one for each version of mmseqs2. The log files include all the mmseqs2 output written to stdout. ## Steps to Reproduce (for bugs). conda create -n pharokkaenv pharokka mmseqs2==14.7e284; conda activate pharokkaenv; install_databases.py -d ; pharokka.py -i lambda.fasta -o lambda_out -t 8 . Input file attached . ## MMseqs Output (for bugs); Log files attached with ""correct"" output (13.4511) showing mmseqs2 run 3 times takes approximately 6 mins, vs 14.7e284 which takes 36 minutes to prefilter on the first step, then hangs (for 20 hours). ## Context. ## Your Environment. I have tested this on MAC OSX (intel and M1) and also Linux ubuntu environments with bioconda installations. I get the same issue. [lambda.fasta.txt](https://github.com/soedinglab/MMseqs2/files/9845844/lambda.fasta.txt); [pharokka_mmseqs2_13.45111.log](https://github.com/soedinglab/MMseqs2/files/9845842/pharokka_mmseqs2_13.45111.log); [pharokka_mmseqs2_14_7e284.log](https://github.com/soedinglab/MMseqs2/files/9845843/pharokka_mmseqs2_14_7e284.log). George",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/625:2744,install,installations,2744,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625,1,['install'],['installations']
Deployability,"rectory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; mmseqs2=13.45111=h95f258a_1. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; conda ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 2.8.12.2. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; uname -a | grep x86_64; Linux 3.10.0-862.3.3.el7.x86_64 #1 SMP Fri Jun 15 04:15:27 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; ```; * Operating system and version:; CentOS Linux release 7.5.1804 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480:2561,release,release,2561,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480,1,['release'],['release']
Deployability,"ref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; mpic++/ 4.8.5 20150623 (Red Hat 4.8.5-36); cmake/3.12.3 ; module load cmake/3.12.3 ; module load openmpi/gcc/64/1.10.3 ; cd mmseqs2; mkdir build ; cd build ; CC=mpicc CXX=mpic++ cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/hpcf/authorized_apps/rhel7_apps/mmseqs2/install/11-e1a1c_sse4.1 -DHAVE_SSE4_1=1 ; make; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; LSF with SSE4 support. The job was submitted using 24 slots with 8 slots per host with a total requested memory of 199992.00 MB; * Operating system and version:; uname -a; Linux nodecn104 3.10.0-957.21.3.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:45867,RELEASE,RELEASE,45867,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,3,"['RELEASE', 'install']","['RELEASE', 'install']"
Deployability,running `mmseqs version` should return either a version number or a git commit. I tried running your commands with the latest release (`13.45111`) and with the latest git commit and both seem to work.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965828792:126,release,release,126,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965828792,1,['release'],['release']
Deployability,"ry_seqs_split_h: 0h 0m 0s 832ms; > Time for merging to query_seqs_split: 0h 0m 0s 878ms; > Time for processing: 0h 0m 3s 919ms; > prefilter tmp/7701176895607249840/search_tmp/9045538653068861586/query_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/target_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 2670930 type: Nucleotide; > Target split mode. Searching through 18 splits; > Estimated memory consumption: 326G; > Target database size: 100684280 type: Nucleotide; > Process prefiltering step 1 of 18; > ; > Index table k-mer threshold: 0 at k-mer size 15 ; > Index table: counting k-mers; > Segmentation fault (core dumped) ] 0.00% 1 eta -; > Error: Prefilter died; > Error: Search step died; > Error: Search died; > . ## Context. Hi I am trying to run an nucleotide-nucleotide search in mmseq2 with a custom database. This error does not occur with a different, smaller nucleotide database. Thank you very much for this amazing tool and all your hard work. ## Your Environment. I am using a google cloud VM with 64 CPUs and 416 GBs of memory on an ubuntu operating system, version 20.04. I install mmseq with the command. static build with AVX2 (fastest); `wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; tar xvfz mmseqs-linux-avx2.tar.gz; export PATH=$(pwd)/mmseqs/bin/:$PATH; `",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/882:7866,install,install,7866,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882,1,['install'],['install']
Deployability,"s 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. ```. ## MMseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:3393,install,install,3393,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,2,"['RELEASE', 'install']","['RELEASE', 'install']"
Deployability,"s calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Profile; Estimated memory consumption: 21K; Target database size: 5 type: Nucleotide; Can not allocate entries memory in IndexTable; Error: Prefilter died; Error: Search step died; Error: Search died. ## Your Environment; MMseqs2 Version: 13.45111 (installed from anaconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:15234,install,installed,15234,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['install'],['installed']
Deployability,"s serving as probes (uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing)). ### Clustering. 3 different clustering approaches were tested:; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering`. However, all three approaches lead to the same behavior (although the exact number of alignments changes) . ### Testing. `mmseqs easy-search probes/probes.faa {clustering_dir}/uhgp90_rep_seq.fasta results/single-step-clustering-uhgp90.m8 tmp --min-seq-id 0.9 -c 0.9 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln"" --threads 16`. ## Output. The m8 files obtained with the `easy-search` command were uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing). ## Context. I want to assign assembled proteins from metagenomes to clusters from a catalog of bacterial proteins, namely [UHGP](https://www.ebi.ac.uk/metagenomics/genome-catalogues/human-gut-v2-0). I have noticed that when I align assembled bacterial proteins from my dataset to UHGP reresentative sequences of clusters at 90% amino acid identity, some of them align to over 1200 representative sequences with identity over 90% and almost 100% coverage. The UHGP clusters were generated with linclust, so I attempted to cluster de-duplicated sequences from this catalogue with the easy-cluster workflow, hoping to improve the results. However, while there is an improvement, the situation is still far from ideal. ## Your Environment. MMseqs2 Release 14-7e284, installed with conda",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/639:2526,Release,Release,2526,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/639,2,"['Release', 'install']","['Release', 'installed']"
Deployability,"s-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect: Connection reset by peer in connection to mmseqs.com:443 ; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 42.7M 100 42.7M 0 0 9058k 0 0:00:04 0:00:04 --:--:-- 9904k; ```. ## Context; We have been observing this issue for the past two weeks, which has been arising in one of our package's Azure Pipelines tests. The examples above were reproduced using an Ubuntu server. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): `latest` static version; * Operating system and version:; * For example cases above:; ```; Linux 5.4.0-139-generic #156-Ubuntu SMP x86_64 x86_64 x86_64 GNU/Linux; ```; * Azure image:; ```; Operating System; Ubuntu; 20.04.6; LTS; Runner Image; Image: ubuntu-20.04; Version: 20230507.1; Included Software: https://github.com/actions/runner-images/blob/ubuntu20/20230507.1/images/linux/Ubuntu2004-Readme.md; Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu20%2F20230507.1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:4174,Pipeline,Pipelines,4174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,3,"['Pipeline', 'Release', 'release']","['Pipelines', 'Release', 'releases']"
Deployability,"seCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 245 0 --:--:-- --:--:-- --:--:-- 245. 09/27 13:21:54 [NOTICE] Downloading 1 item(s). 09/27 13:21:54 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:1830,release,releases,1830,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['release'],['releases']
Deployability,"seqsRefSeqCompleteDB. And then for a set of query files: ; - create mmseqs db for the query file; mmseqs createdb $file $outpath/$querydb; - search against the target db loaded in memory; mmseqs search $outpath/$querydb $db $outpath/$result_db tmp --db-load-mode 3 --threads 2 --max-seqs 25 -s 1 -a -e 1e-5. Is this the correct way of processing multiple searches using mmseqs? Is there any way to speed up searches for large query sets and large database files?. Any information would be greatly appreciated.; Thanking you,. regards,; Dhwani Desai; ## Current Behavior; It does not seem to make a difference to the runtime when I try it with or without the --db-load-mode option. Is there a way to speed up these kinds of repeated searches?; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 73ce3b88754987122b4fc5e69a721beeecd677d0. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; installation (using Git):; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; make; make install ; This will generate the compiled executable in the bin folder; Copy the executable to $HOME/bin; cp bin/mmseqs ~/bin. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214:1963,install,installation,1963,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214,3,"['RELEASE', 'install']","['RELEASE', 'install', 'installation']"
Deployability,"shold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052; LAMHETP	888; AYITSTG	696; FLNSHRT	695; GRFVVEV	501; RGAVAVR	415; IEAAGGR	407; RAEGRAV	401; LLGPGKT	371; TSSGRGV	307; Time for index table init: 0h 0m 38s 705ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 83); Query db start 1 to 20588; Target db start 1 to 207919; ...; ```. ## Context; I'm running this on a cluster with aarch64 (actually A64FX) CPU architecture. The cluster also has limited memory per node -- only 32 GB. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; * Which MMseqs version was used: self compiled; * For self-compiled and Homebrew: : GCC 12.1 ,OpenMPI 4.1.4, CMAKE 3.22. Build command: `cmake -DCMAKE_BUILD_TYPE=RELEASE -DNATIVE_ARCH=0 -DCMAKE_C_FLAGS=""-O3 -mcpu=a64fx"" -DCMAKE_CXX_FLAGS=""-O3 -mcpu=a64fx"" -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45 ..`; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): A64FX and 32 Gb of ram; * Operating system and version: Rocky Linux 8.4. I'm wondering if the per-node memory limitation is also limiting the number of threads that can be used, or is there something about how I'm calling mmseqs that I should be changing in order to utilize 48 cores/threads per node? I've tried setting the value of `--threads` to 48, to the total number of cores available on all nodes, and not setting it at all. In each case, the max # of threads/cores used per node is 12. Thanks!; Dave",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:5895,RELEASE,RELEASE,5895,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['RELEASE'],['RELEASE']
Deployability,"singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support as in my /proc/cpuinfo:; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl eagerfpu pni pclmulqdq ssse3 cx16 pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm fsgsbase tsc_adjust smep erms xsaveopt arat; * Operating system and version:; Ubuntu 16.04; Linux mymachine 4.4.0-78-generic #99-Ubuntu SMP Thu Apr 27 15:29:09 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:2189,install,installation,2189,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['install'],['installation']
Deployability,"sion of the master database. ## Current Behavior; The new database includes only copies of an entry in the original index which is not in the filter file and is repeated for number of ids present in filter file. ## Steps to Reproduce (for bugs); I am able to reproduce with a small 8 sequence fasta file which is a subset of an old uniref90 download and a single entry filter file.; [uniref90_head.fasta.gz](https://github.com/soedinglab/MMseqs2/files/2847259/uniref90_head.fasta.gz); [uniref90_head_subset.txt](https://github.com/soedinglab/MMseqs2/files/2847255/uniref90_head_subset.txt); ```; mmseqs createdb uniref90_head.fasta uniref90_head.mmsdb; mmseqs createsubdb uniref90_head_subset.txt uniref90_head.mmsdb uniref90_head.subset.mmsdb; mmseqs createsubdb uniref90_head_subset.txt uniref90_head.mmsdb_h uniref90_head.filt.mmsdb_h; ```; Then the resulting uniref90_head.filt.mmsdb_h only has a single entry (UniRef90_Q197F8 Uncharacterized protein 002R n=1 Tax=Invertebrate iridescent virus 3 TaxID=345201 RepID=002R_IIV3 ; ) which is from the fasta but not the id from the filter file (UniRef90_Q6GZX2). ## MMseqs Output (for bugs); No errors given. Only run times. ## Context; I am trying to implement a reciprocal best hits approach. I am searching a fasta file of genes against a uniref90 fasta file. Both are fasta's of amino acids. The forward search (query=genes, target=uniref) goes fine and the reverse search (query=uniref, target=genes) works fine with the full database. Reciprocal best hits were found. To speed up the reverse search I wanted to filter uniref to only include the best hits from the forward search. To do this I used `createsubdb` with the top hits from the forward search as the filter file. The search (query=filtered uniref, target=genes) ran successfully but no alignments were found. Based on this I investigated the _h file from the sub-database and saw the problem. ## Your Environment; Used on a CentOS 7 server and installed via conda. Version is 7.4e23d.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/162:2031,install,installed,2031,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/162,1,['install'],['installed']
Deployability,"sorry, reopening in case you want to close with a commit to update the validation regex.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/33#issuecomment-305596238:60,update,update,60,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/33#issuecomment-305596238,1,['update'],['update']
Deployability,"step_FRAG_filtered""; mmseqs filterdb ""$TMPPATH/pref_step_FRAG_filtered"" ""$TMPPATH/pref_step$STEP"" --filter-file ""$TMPPATH/order_redundancy""; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step1"". # go down to 90% (this step is needed to create big clusters); STEP=1; INPUT=""$TMPPATH/input_step1""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ${PREFILTER1_PAR}; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}. # create database unicluster 90% (we need to merge redundancy, step_0 and step_1); mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust90_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1. awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:4030,RELEASE,RELEASE,4030,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['RELEASE'],['RELEASE']
Deployability,"sure to execute the reproduction steps with newly recreated and empty tmp folders. I have formatted the IMG/VR v4 7.1 AA database as recommended (https://github.com/soedinglab/MMseqs2/wiki#create-a-seqtaxdb-by-manual-annotation-of-a-sequence-database) and I've created a custom taxdump using taxonkit. The custom taxdb was created without issue:. ```; mmseqs createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db; createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loading nodes file ... Done, got 6986 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```. the job was submitted with teh following batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/I",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:1501,integrat,integrate,1501,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['integrat'],['integrate']
Deployability,"t it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable false │; Skip repeating k-mers false │; Threads 64 │; Compressed 0 │; Verbosity 3; ```. ## Your Environment; I installed mmseqs using `mamba` (conda).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/477:2110,install,installed,2110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477,1,['install'],['installed']
Deployability,"teParser::format(*((size_t *)par[i]->value), 'a', 'h');; (gdb) bt; #0 Parameters::printParameters (this=0x56bba090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; #1 0x5669efec in Parameters::checkIfDatabaseIsValid (this=0x56bba090, command=..., argc=2, argv=0xffffcddc, isStartVar=false, isMiddleVar=false, isEndVar=false); at ./src/commons/Parameters.cpp:1905; #2 0x566a32a9 in Parameters::parseParameters (this=0x56bba090, argc=2, pargv=0xffffcddc, command=..., printPar=<optimized out>, parseFlags=0, outputFlags=0); at ./src/commons/Parameters.cpp:1850; #3 0x5689d5ac in createindex (argc=2, argv=0xffffcddc, command=...) at ./src/workflow/CreateIndex.cpp:137; #4 0x565bbf0d in runCommand (p=0x56bc30c0, argc=2, argv=0xffffcddc) at ./src/commons/Application.cpp:38; #5 0x565aabcb in main (argc=4, argv=0xffffcdd4) at ./src/commons/Application.cpp:196; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; ```; mmseqs-avx2 createdb examples/DB.fasta DB; mmseqs-avx2 createindex DB tmp; ```. ## MMseqs Output (for bugs); ```; Create directory tmp; createindex DB tmp . Illegal instruction (core dumped); ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Compiled for 32-bit x86 on Debian using https://salsa.debian.org/med-team/mmseqs2/-/tree/debian/experimental/debian/patches; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): avx2 capable processor, > 60 GiB memory; * Operating system and version: Debian ""testing""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418:3843,patch,patches,3843,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418,1,['patch'],['patches']
Deployability,thanks ; I'm installing rigth now on our cluster. regards; Eric,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1279068430:13,install,installing,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1279068430,1,['install'],['installing']
Deployability,"the whole log overwhelms my system, but I captured most of the information that occurs before this bug:. ```; clusterer:/mnt/cluster/filt_80_2020-04-19/combined12$ time /custom_install/installations/mmseqs-nonmpi/MMseqs2/build/bin/mmseqs linclust inDB linClu90DB tmp --min-seq-id 0.90 --kme; r-per-seq 40 -c 0.9; Tmp tmp folder does not exist or is not a directory.; Create dir tmp; linclust inDB linClu90DB tmp --min-seq-id 0.90 --kmer-per-seq 40 -c 0.9. MMseqs Version: 290668474611312a94a868bf041b38c8618f5ef6; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 160; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:185,install,installations,185,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311,1,['install'],['installations']
Deployability,"tmp/2226585588535541735/search_tmp/11167723337111805049/aln tmp/2226585588535541735/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 26ms; Writing results to: tmp/2226585588535541735/result; [=================================================================] 419.27K 2s 43ms. Time for merging to result: 0h 0m 0s 264ms; Time for processing: 0h 0m 6s 8ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs_aa . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs_aa . Time for processing: 0h 0m 0s 0ms; convertalis tmp/2226585588535541735/query tmp/2226585588535541735/target tmp/2226585588535541735/result output.tsv --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,evalue,pident,tstart,tend,qlen,alnlen,qcov --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 64 --compressed 0 -v 3 . [=================================================================] 419.27K 3s 600ms; Time for merging to output.tsv: 0h 0m 3s 849ms; Time for processing: 0h 0m 12s 294ms; Removing temporary files; rmdb tmp/2226585588535541735/result . Time for processing: 0h 0m 2s 15ms; rmdb tmp/2226585588535541735/target . Time for processing: 0h 0m 0s 486ms; rmdb tmp/2226585588535541735/target_h . Time for processing: 0h 0m 0s 1ms; rmdb tmp/2226585588535541735/query . Time for processing: 0h 0m 0s 102ms; rmdb tmp/2226585588535541735/query_h . Time for processing: 0h 0m 0s 5ms; ```. ## Your Environment. I'm using the `11.e1a1c` conda release on Linux;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339:12161,release,release,12161,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339,1,['release'],['release']
Deployability,"tmp]$ ls; 18110643841744502873 latest; [lihuilin@login01 tmp]$ cd 18110643841744502873; [lihuilin@login01 18110643841744502873]$ ls; [lihuilin@login01 18110643841744502873]$; ```; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; I installed MMseqs2 by git clone, and followed these:; ```; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; make; make install ; export PATH=$(pwd)/bin/:$PATH; ```. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; ```; [lihuilin@login01 MMseqs2]$ [ $(uname -m) = ""x86_64"" ] && echo ""64bit: Yes"" || echo ""64bit: No""; grep -q sse4_1 /proc/cpuinfo && echo ""SSE4.1: Yes"" || echo ""SSE4.1: No""; # for very old systems which support neither SSE4.1 or AVX2; grep -q sse2 /proc/cpuinfo && echo ""SSE2: Yes"" || echo ""SSE2: No""64bit: Yes; [lihuilin@login01 MMseqs2]$ grep -q avx2 /proc/cpuinfo && echo ""AVX2: Yes"" || echo ""AVX2: No""; AVX2: Yes; [lihuilin@login01 MMseqs2]$ grep -q sse4_1 /proc/cpuinfo && echo ""SSE4.1: Yes"" || echo ""SSE4.1: No""; SSE4.1: Yes; [lihuilin@login01 MMseqs2]$ # for very old systems which support neither SSE4.1 or AVX2; [lihuilin@login01 MMseqs2]$ grep -q sse2 /proc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:10508,install,install,10508,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['install'],['install']
Deployability,"to Reproduce (for bugs); -download gtdb.tar.gz; `mmseqs createdb tardb gtdb`; -execute shell commands in databases.sh to create nodes.dmp, names.dmp, mapping_genomes (these files all seem to be fine); `mmseqs createtaxdb gtdb tmp/taxdb --ncbi-tax-dump tmp/taxonomy --tax-mapping-file ""tmp/taxonomy/mapping_genomes"" --tax-mapping-mode 1`. ## MMseqs Output (for bugs); -no errors or warnings; ```; createtaxdb gtdb tmp/taxdb --ncbi-tax-dump tmp/taxonomy --tax-mapping-file tmp/taxonomy/mapping_genomes --tax-mapping-mode 1 . MMseqs Version: 	14.7e284; NCBI tax dump directory	tmp/taxonomy; Taxonomy mapping file 	tmp/taxonomy/mapping_genomes; Taxonomy mapping mode 	1; Taxonomy db mode 	1; Threads 	28; Verbosity 	3; ```. if I understand correctly, the gtdb.lookup file should have 3 columns: proteinNumber (0.. 256163114), proteinID, sourceGenomeNumber : ; ```; 0 NZ_CP009512.1_1 1; 1 NZ_CP009512.1_33 1; 2 NZ_CP009512.1_65 1; 3 NZ_CP009512.1_97 1; 4 NZ_CP009512.1_129 1; 5 NZ_CP009512.1_161 1; 6 NZ_CP009512.1_193 1; 7 NZ_CP009512.1_225 1; 8 NZ_CP009512.1_257 1; 9 NZ_CP009512.1_289 1; 10 NZ_CP009512.1_321 1; ```; however, my gtdb.lookup file has entries from different genomes pointing to the same source genome number. e.g. ; ```; 0 NZ_CP009512.1_1 1; 100 NZ_CP009512.1_3201 1; 101 NZ_CP009512.1_3233 1; 102180795 NZ_JAAOIZ010000001.1_5 1 #should point to source genome 65537; 102180796 NZ_JAAOIZ010000001.1_37 1 #should point to source genome 65537; 102181002 JAJXZV010000318.1_2 2 #should point to source genome 65538; 102181003 JAJXZV010000021.1_4 2 #should point to source genome 65538; 104066383 NC_007181.1_8 2; 104066384 NC_007181.1_40 2; ```; the highest source genome number found in the gtdb.lookup file is 65535, and then it seems to start over at 1 duplicating ids...?. ## Your Environment; MMseqs2 Version: 14.7e284; tried with both latest binary download and conda install; Linux my.local 3.10.0-1160.76.1.el7.x86_64 #1 SMP Wed Aug 10 16:21:17 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/729:2191,install,install,2191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729,1,['install'],['install']
Deployability,"u tmps/DB_clu_rep.fasta; mmseqs convert2fasta tmps/DB_clu_rep.fasta outs.fasta; ```. But I read the PDF guide manual on Github, which is. ```bash; mmseqs cluster DB DB_clu tmp; mmseqs linclust DB DB_clu tmp; mmseqs createsubdb DB_clu DB DB_clu_rep; mmseqs convert2fasta DB_clu_rep DB_clu_rep.fasta; ```; i wonder if their are same or not?. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. their are two output. ```; ls -l; total 1107472; -rw-rw-r-- 1 root root 1103346632 Nov 22 02:16 DB_clu_rep.fasta; -rw-rw-r-- 1 root root 4 Nov 22 02:16 DB_clu_rep.fasta.dbtype; lrwxrwxrwx 1 root root 32 Nov 22 02:16 DB_clu_rep.fasta_h -> /data/codonOP/50filter/tmps/DB_h; lrwxrwxrwx 1 root root 39 Nov 22 02:16 DB_clu_rep.fasta_h.dbtype -> /data/codonOP/50filter/tmps/DB_h.dbtype; lrwxrwxrwx 1 root root 38 Nov 22 02:16 DB_clu_rep.fasta_h.index -> /data/codonOP/50filter/tmps/DB_h.index; -rw-rw-r-- 1 root root 30698239 Nov 22 02:16 DB_clu_rep.fasta.index; lrwxrwxrwx 1 root root 37 Nov 22 02:16 DB_clu_rep.fasta.lookup -> /data/codonOP/50filter/tmps/DB.lookup; lrwxrwxrwx 1 root root 37 Nov 22 02:16 DB_clu_rep.fasta.source -> /data/codonOP/50filter/tmps/DB.source; ```. ```; ls -l; total 1107476; -rw-rw-r-- 1 root root 1103346632 Nov 22 02:16 DB_clu_rep; -rw-rw-r-- 1 root root 4 Nov 22 02:16 DB_clu_rep.dbtype; lrwxrwxrwx 1 root root 32 Nov 22 02:16 DB_clu_rep_h -> /data/codonOP/50filter/tmps/DB_h; lrwxrwxrwx 1 root root 39 Nov 22 02:16 DB_clu_rep_h.dbtype -> /data/codonOP/50filter/tmps/DB_h.dbtype; lrwxrwxrwx 1 root root 38 Nov 22 02:16 DB_clu_rep_h.index -> /data/codonOP/50filter/tmps/DB_h.index; -rw-rw-r-- 1 root root 30698565 Nov 22 02:16 DB_clu_rep.index; lrwxrwxrwx 1 root root 37 Nov 22 02:16 DB_clu_rep.lookup -> /data/codonOP/50filter/tmps/DB.lookup; lrwxrwxrwx 1 root root 37 Nov 22 02:16 DB_clu_rep.source -> /data/codonOP/50filter/tmps/DB.source; ```. ## Your Environment; i use conda to install mmseqs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/783:2603,install,install,2603,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/783,1,['install'],['install']
Deployability,"u use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 18:53; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). I think it's probably salvageable. I'll need to look over your output in detail. Another question: This was clustered using easy-linclust not using easy-cluster right? Cluster update currently will try to use the normal clustering for the sequences that cannot be assigned to an existing cluster. This will also likely be very slow (probably slower than clustering anew using linclust). We will have to build support for updating with linclust. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688971058>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63ERPGWSKH3ZELTLYWA3SEZHO5ANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616:1553,update,update,1553,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616,2,['update'],['update']
Deployability,update clusters from another database with new FASTA file,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/782:0,update,update,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/782,1,['update'],['update']
Deployability,update mmseqs database with non-mmseqs database,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/575:0,update,update,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/575,1,['update'],['update']
Deployability,"use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement for FreeBSD, but I think SSE2 is safe to assume for amd64, but I also added a pkg-message suggesting an optimized build from source. How much performance gain do you typically see from SSE4 or AVX?. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:1386,install,installed,1386,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555,3,['install'],"['install', 'installed']"
Deployability,"ut when I try to convert the cluster database to a tsv file, I have an error message related to the index (see below). I tried the same thing on a new database where I just added sequences and it worked perfectly, so I assume the problem comes from the fact that I remove sequences from the old database? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result database: CLU_updated; Start writing to clusters.tsv; Invalid database read for database data file=DB_updated_h, database index=DB_updated_h.index; getData: local id (4294967295) >= db size (17); ```. ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272:1093,update,update,1093,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272,1,['update'],['update']
Deployability,"v-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.31B 2h 34m 42s 85ms; Sort kmer 0h 0m 52s 653ms; Sort by rep. sequence 0h 0m 31s 645ms; Generate k-mers list for 2 split; [=================================================================] 1.31B 2h 36m 22s 543ms; Sort kmer 0h 0m 44s 690ms; Sort by rep. sequence 0h 0m 26s 121ms; Merge splits ... Time for fill: 1h 31m 44s 960ms; Time for merging to pref: 0h 0m 0s 6ms; Time for processing: 10h 13m 54s 576ms; rescorediagonal JGI JGI tmp/14756877054557405347/pref tmp/14756877054557405347/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 . Can not touch 407600133816 into main memory. ## Your Environment; Latest precompiled AVX2 version Release 15-6f452",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:4427,Release,Release,4427,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['Release'],['Release']
Deployability,with the latest release (11-e1a1c) I also get the same error reported above:. Clustering mode: Set Cover; [=================================================================] 17.92K 0s 5ms; Sort entries; Find missing connections; Found 16944 new connections.; Reconstruct initial order; Alignment format is not supported!; Error: Clustering step 2 died,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-663085284:16,release,release,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-663085284,1,['release'],['release']
Deployability,x86)\mmseqs\\bin/getopt: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/grep: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/groups: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/gunzip: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/gzip: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/head: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hexdump: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hostid: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hostname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/httpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hush: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/id: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/inetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/install: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcalc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcrm: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/kill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall5: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/less: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ln: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logger: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/login: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logread: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpq: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpr: Permission deni,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:5563,install,install,5563,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['install'],['install']
Deployability,"y_seqs.3of3.fasta.gz). b) Consolidate the 3 chunks:. zcat my_seqs.*.fasta.gz > /tmp/my_seqs.fasta. c) Execute and expose the bug:. /opt/mmseqs/bin/mmseqs easy-cluster \; /tmp/my_seqs.fasta /tmp/my_seqs/result /tmp/my_seqs/tmp \; --dbtype 2 --threads 8 --local-tmp /tmp \; --cluster-reassign -s 7.5 --cov-mode 0 -c 0.98 --cluster-mode 2 --min-seq-id 0.99 -v 1. and the bug is shown below. ## MMseqs Output (for bugs). /tmp/my_seqs/tmp/5280277461515018798/clu_tmp/18196956704942050314/nucleotide_clustering.sh: line 48: 4723 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died. ## Context. In my hands, this bug is exposed only when the number of nucleotide sequences is in the order of millions. For small sets (thousands) the execution completes uneventfully. I have tried the precompiled AVX2 version, the SSE4.1 version, I have tried my own compilation of the latest release (15-6f452, Oct 31 2023) and also the latest github version (f6c9880) and other variations. All attempts led to the exact same bug. I have tried also with other three input datasets. All four crash in the same way. All four are in the order of 3 to 4million nucleotide sequences. When I subset the sequences to about 200K sequences, easy-cluster runs to completion. ## Your Environment. I am running this on an AWS EC2 instance of type g4dn (128GB RAM). Here you go:. $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) Platinum 8259CL CPU @ 2.50GHz; CPU family: 6; Model: 85; Thread(s) per core: 2; Core(s) per socket: 16; Socket(s): 1; Stepping: 7; BogoMIPS: 4999.98; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht; syscall nx pdpe1gb rdtscp lm constant_tsc rep_good ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822:1585,release,release,1585,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822,1,['release'],['release']
Energy Efficiency,"	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Estimated memory consumption: 127G; Target database size: 34746192 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 434ms; align profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 /tmp/15358673946673749737/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:4020,consumption,consumption,4020,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['consumption'],['consumption']
Energy Efficiency," 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. indexdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb --seed-sub-mat nucl:identity.out,aa:identity.out -k 5 --alph-size nucl:5,aa:21 --comp-bias-corr 0 --max-seq-len 65535 --max-seqs 300 --mask 0 --mask-lower-case 0 --spaced-kmer-mode 1 -s 1 --k-score 2147483647 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 9G -v 3 --threads 8 . Estimated memory consumption: 7G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Write GENERATOR (22); Index table: counting k-mers; [=================================================================] 100.00% 10.04M 2s 583ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 10.04M 2s 281ms ; Index statistics; Entries: 298595; DB size: 26 MB; Avg k-mer size: 0.093311; Top 10 k-mers; PPHPH	8644; PPHKV	7060; PPHPT	4123; TVPLP	2413; PPVLP	1740; PPVPT	1290; HHPVP	1173; PPHLV	1150; KVPPP	915; PHHVP	868; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Time for merging to mmdb.idx: 0h 0m 0s 0ms; Time for processing: 0h 0m 10s 928ms; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:4041,consumption,consumption,4041,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526,1,['consumption'],['consumption']
Energy Efficiency," 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 1 --split-memory-limit 0 -v 3 --threads 56 . Estimated memory consumption: 780G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================tmp2/7152678087979496025/createindex.sh: line 56: 37309 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Your Environment; I am running the script on a cluster. You will find below the batch script parameters:; #!/bin/bash; #SBATCH --job-name Install_ColabFold_DB; ##SBATCH --account=def-someuser; #SBATCH --time 24:00:00 ### (HH:MM:SS) the job will expire after this time, the maximum is 168:00:00; #SBATCH -N 1 ### number of nodes (1 node -> several CPUs); #SBATCH --ntasks 1; #SBATCH --cpus-per-task 24; #SBATCH --mem-per-cpu 10000; #SBATCH -A p_linkpredic; ##SBATCH -e %j.err ### redirect",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/583:4479,consumption,consumption,4479,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583,1,['consumption'],['consumption']
Energy Efficiency," --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.31B 2h 34m 42s 85ms; Sort kmer 0h 0m 52s 653ms; Sort by rep. sequence 0h 0m 31s 645ms; Generate k-mers list for 2 split; [=================================================================] 1.31B 2h 36m 22s 543ms; Sort kmer 0h 0m 44s 690ms; Sort by rep. sequence 0h 0m 26s 121ms; Merge splits ... Time for fill: 1h 31m 44s 960ms; Time for merging to pref: 0h 0m 0s 6ms; Time for processing: 10h 13m 54s 576ms; rescorediagonal JGI JGI tmp/14756877054557405347/pref tmp/14756877054557405347/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:3172,Reduce,Reduced,3172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['Reduce'],['Reduced']
Energy Efficiency," 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 2204542403 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 2.20B 2h 9m 12s 463ms; Process file into 17 parts; Generate k-mers list for 1 split; Generate k-mers list for 2 split; Generate k-mers list for 3 split; Generate k-mers list for 4 split; Generate k-mers list for 5 split; Generate k-mers list for 6 split; Generate k-mers list for 7 split; [=================================================================] 2.20B 32m 39s 205ms; Sort kmer 0h 0m 26s 313ms; Sort by rep. sequence 0h 0m 4s 966ms; Generate k-mers list for 8 split; [=================================================================] 2.20B 33m 28s 924ms; Sort kmer 0h 0m 26s 546ms; Sort by rep. sequence 0h 0m 5s 354ms; Generate k-mers list for 9 split; [=================================================================] 2.20B 33m 0s 123ms; Sort kmer 0h 0m 26s 692ms; Sort by rep. sequence 0h ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:4177,Reduce,Reduced,4177,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['Reduce'],['Reduced']
Energy Efficiency," 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter search_results/qdb db/uniref30_2103_db.idx search_results/tmp/12005814431969335264/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nuc; l:nucleotide.out -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 8 --split-mode 2 --split-memory-limit 0; -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kme; r-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 72 --compressed 0 -v 3. Index version: 16; Generated by: b768f48f0bd73688b6a68132159a97f7b6310f03; ScoreMatrix: VTML80.out; Query database size: 190 type: Aminoacid; Estimated memory consumption: 148G; Target database size: 29291635 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 96; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 190; Target db start 1 to 29291635; ^CTraceback (most recent call last): ] 37.57% 72 eta 0s; </pre>. I had to stop it as mmseqs took hours without progress. ## Context; I am quite puzzled what I should do to figure this out. ; The machine is located on our cluster, so there is enough disk space and memory.; I tried to check the process status, and it is always in the `D` status with 100-200% CPU usage ( based on `htop` outputs).; Not sure how I can speed things up at this stage. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): b768f48f0bd73688b6a68132159a97f7b6310f03; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517:4232,consumption,consumption,4232,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517,1,['consumption'],['consumption']
Energy Efficiency," 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; createsubdb tmp//538598962955004214/clu_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//538598962955004214/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 221 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 221 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 221 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 221 0s 17ms; Index statistics; Entries: 1337; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 985ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 221; Target db start 1 to 221; [=================================================================] 100.00% 221 0s 31ms. 190.836300 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:19858,consumption,consumption,19858,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['consumption'],['consumption']
Energy Efficiency," 0ms; Time for processing: 0h 0m 0s 1ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 6 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 5991 type: Aminoacid; Estimated memory consumption: 996M; Target database size: 5991 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 5.99K 0s 98ms ; Index table: Masked residues: 70106; Index table: fill; [=================================================================] 100.00% 5.99K 0s 74ms ; Index statistics; Entries: 2291730; DB size: 501 MB; Avg k-mer size: 0.035808; Top 10 k-mers; IHDKNI 27; LHDKNI 14; LGGFVY 14; GPGGTL 10; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; HVARAT 9; VHSGRT 9; Time for index table init: 0h 0m 0s 730ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 5991; Target db start 1 to 5991; [=================================================================] 100.00% 5.99K 4s 202ms . 403.312621 k-mers per position; 5696 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 16 sequences passed prefiltering per query sequence; 20 m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:26594,consumption,consumption,26594,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['consumption'],['consumption']
Energy Efficiency," 1 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 5 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 5 0s 0ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 5 0s 0ms; Index statistics; Entries: 2994; DB size: 8192 MB; Avg k-mer size: 0.000003; Top 10 k-mers; CCAATCCTCGGCACA	3; CGGCAGACCCGGAGC	3; GGGGCAGCGTGATTT	3; CTCTCGGGGGCGTGG	3; AAGGTGGACAGTTAA	2; ACCTGTAGCCCGTAA	2; GCAGGGTTAAGAGAA	2; GTTATCCCCAACGAA	2; AGAGTGGGTACCGAA	2; TACCGGTATCGCGAA	2; Time for index table init: 0h 0m 8s 169ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 5; [=================================================================] 2 0s 0ms. 0.803571 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences with 0 size result lists; Time for merging to ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:10944,consumption,consumption,10944,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['consumption'],['consumption']
Energy Efficiency," 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms; rescorediagonal tmpDB tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref tmp/12397138995521121878/linclust/639052995728955397/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:4627,Reduce,Reduced,4627,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['Reduce'],['Reduced']
Energy Efficiency," 838.53K 0s 149ms; Time for merging to query_seqs_split_h: 0h 0m 0s 459ms; Time for merging to query_seqs_split: 0h 0m 0s 859ms; Time for processing: 0h 0m 2s 893ms; prefilter tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 5.7 . Query database size: 882920 type: Nucleotide; Estimated memory consumption: 29G; Target database size: 311921 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 311.92K 32s 895ms; Index table: Masked residues: 15323340; Index table: fill; [=================================================================] 311.92K 36s 224ms; Index statistics; Entries: 3056373344; DB size: 25680 MB; Avg k-mer size: 2.846469; Top 10 k-mers; CTGTTTTGTACCTTA	9174; GCCTTCCTATTTTAT	6337; CCGAACAGACTGTCG	6287; ATCGACAAGCGAGCG	6217; CCTGCCTGTTGTATC	6097; TGTTCGGCTCGCTGT	6079; CGCGCAGTCAATAGG	5996; ACAAATCAGAGCGCG	5947; TGCGTTCGCGTTCTG	5935; GATACAAAATGCAGG	5935; Time for index table init: 0h 1m 19s 523ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 882920; Target db start 1 to 311921; [=================================================================] 882.92K 1m 16s 342ms. 0.958336 k-mers per position; 27663 DB matches per sequence; 7 overf",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339:6926,consumption,consumption,6926,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339,1,['consumption'],['consumption']
Energy Efficiency, Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=======================================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:29229,consumption,consumption,29229,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency, Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-m,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:29107,consumption,consumption,29107,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency, Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Es,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:27720,consumption,consumption,27720,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency, Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:27964,consumption,consumption,27964,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency, Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Qu,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:28452,consumption,consumption,28452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency, Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer th,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:29884,consumption,consumption,29884,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency," Substitution matrices...; Use kmer size 5 and split 1 using Target split mode.; Needed memory (20178976034 byte) of total memory (486687909888 byte); Index table: counting k-mers... ```. ## Context; Trying to generate a profile DB from the file `uniclust30_2018_08_hhm_db` contained the 18-08 release of Uniclust30; `http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz`; I am using `convertprofiledb` and then `createindex`... **NOTE:** I have used the same procedure to generate the profile DB using the HHblits profiles for Pfam 31 downloaded from:; `http://wwwuser.gwdg.de/%7Ecompbiol/data/hhsuite/databases/hhsuite_dbs/pfamA_31.0.tgz`. ## Your Environment; > MMseqs Version: 6.f5a1c; [f5a1cdb](https://github.com/soedinglab/MMseqs2/commit/f5a1cdb44c996d6be229226b09ecc687646c0c12); > MMseqs was self-compiled; > gcc (Homebrew gcc 5.5.0_4) 5.5.0; > cmake 3.12.3. >Server specifications:. ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fpu_exception	: yes; cpuid level	: 15; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer xsave avx f16c rdrand lahf_lm abm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm xsaveopt cqm_llc cqm_occup_llc dtherm ida arat pln pts; bogomips	: 5199.77; clflush size	: 64; cache_alignment	: 64; address sizes	: 46 bits physical, 48 bits virtual; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/130:3826,monitor,monitor,3826,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130,1,['monitor'],['monitor']
Energy Efficiency," Time for merging to orfs_aa: 0h 0m 0s 726ms; Time for processing: 0h 0m 3s 54ms; prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 2310 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2310; Target db start 1 to 713072; [=================================================================] 100.00% 2.31K 0s 200ms. 8.191356 k-mers per position; 1212 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2301 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 0s 457ms; Time for processing: 0h 0m 1s 487ms; rescorediagonal tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_pref tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:5556,consumption,consumption,5556,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,1,['consumption'],['consumption']
Energy Efficiency," Time for processing: 0h 0m 0s 0ms; createsubdb tmp/16138406286044646862/order_1 tmp/16138406286044646862/input_0 tmp/16138406286044646862/input_1 -v 3 --subdb-mode 1 . Time for merging to input_1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 6ms; prefilter tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 12.0 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 7780 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 56; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 7780; Target db start 1 to 756891; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 10ms; Time for processing: 0h 0m 28s 690ms; align tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 tmp/16138406286044646862/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --real",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:10859,consumption,consumption,10859,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['consumption'],['consumption']
Energy Efficiency, back together?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb sampleX_scaffolds.fasta sampleX_DB; mmseqs taxonomy sampleX_DB /home/mmseqs2/NR/NR sampleX_mmseqs_taxonomy.txt sampleX_temp --tax-lineage 1 --orf-filter 1 --threads 24 --split-memory-limit 500G; ```. ## MMseqs Output (for bugs); [mmseqs.29360353.out.txt](https://github.com/soedinglab/MMseqs2/files/13532025/mmseqs.29360353.out.txt); [mmseqs.29360398.out.txt](https://github.com/soedinglab/MMseqs2/files/13532026/mmseqs.29360398.out.txt). ## Context; Trying to classify metagenomic contigs for kingdom binning. . ## Your Environment; * Git commit used : MMseqs2 Version: 15.6f452; * Which MMseqs version was used: conda; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; free -m; total used free shared buff/cache available; Mem: 256830 27571 113148 2175 116109 223713; Swap: 131071 9427 121644; ```. ```; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 invpcid_single ssbd mba ibrs ibpb stibp ibrs_enhanced fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm rdt_a avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb intel_pt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local split_lock_detect wbnoinvd dtherm arat pln pts hwp hwp_act_window hwp_pkg_req avx512vbmi umip pku ospke avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg tme avx512_vpopcntdq la57 rdpid fsrm md_clear pconfig flush_l1d arch_capabilities; ```; * Operating system and version: Oracle Enterprise Linux 8,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/786:3250,monitor,monitor,3250,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/786,1,['monitor'],['monitor']
Energy Efficiency," codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. indexdb db/human db/human --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 1 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 4 . Estimated memory consumption: 1G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 100.00% 79.74K 2s 947ms ; Index table: Masked residues: 1262029; Index table: fill; [=================================================================] 100.00% 79.74K 4s 125ms ; Index statistics; Entries: 25991856; DB size: 637 MB; Avg k-mer size: 0.406123; Top 10 k-mers; VMEYLV 439; QRLRML 421; LYDMNY 403; TFDAFS 367; YRVLYR 257; VAESEW 236; TGYKLS 202; GEVLSS 200; VTSSSS 199; TFDAFT 194; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Time for merging to human.idx: 0h 0m 0s 0ms; Time for processing: 0h 0m 11s 156ms; ```. expandaln:; ```; expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616:3874,consumption,consumption,3874,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616,1,['consumption'],['consumption']
Energy Efficiency," died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. ## MMseqs Output (for bugs); ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * MMseqs2 Version: 4589151554eb83a70ff0c4d04d21b83cabc203e4; * Linux, 128 GB of memory",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/627:2863,consumption,consumption,2863,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627,1,['consumption'],['consumption']
Energy Efficiency," enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). MMseqs2 Version: GITDIR-NOTFOUND; © Martin Steinegger (martin.steinegger@snu.ac.kr). usage: mmseqs <command> [<args>]. Easy workflows for plain text input/output; easy-search 	Sensitive homology search; easy-cluster 	Slower, sensitive clustering; easy-linclust 	Fast linear time cluster, less sensitive clustering; easy-taxonomy 	Taxonomic classification; easy-rbh 	Find reciprocal best hit. Main workflows for database input/output; search 	Sensitive homology search; map 	Map nearly identical sequences; rbh 	Reciprocal best hit search; linclust 	Fast, less sensitive clustering; cluster 	Slower, sensitive clustering; clusterupdate 	Update previous clustering with new sequences; taxonomy 	Taxonomic classification. Input database creation; databases 	List and download databases; createdb 	Convert FASTA/Q file(s) to a sequence DB; createindex 	Store precomputed index on disk to reduce search overhead; convertmsa 	Convert Stockholm/PFAM MSA file to a MSA DB; msa2profile 	Convert a MSA DB to a profile DB. Format conversion for downstream processing; convertalis 	Convert alignment DB to BLAST-tab, SAM or custom format; createtsv 	Convert result DB to tab-separated flat file; convert2fasta 	Convert sequence DB to FASTA format; taxonomyreport 	Create a taxonomy report in Kraken or Krona format. An extended list of all modules can be obtained by calling 'mmseqs -h'. Bash completion for modules and parameters can be installed by adding ""source MMSEQS_HOME/util/bash-completion.sh"" to your ""$HOME/.bash_profile"".; Include the location of the MMseqs2 binary in your ""$PATH"" environment variable.; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; $ which mmseqs; ~/MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1/build/bin/mmseqs; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:5474,reduce,reduce,5474,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['reduce'],['reduce']
Energy Efficiency," environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; MMseq version: 13.45111; CPU: 2x AMD 7543 (64 cores total); RAM: 512 GB; Local Disk: 7 TB SSD; Network: 100 GBit Infiniband; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Thread(s) per core: 1; Core(s) per socket: 32; Socket(s): 1; NUMA node(s): 1; Vendor ID: AuthenticAMD; CPU family: 23; Model: 49; Model name: AMD EPYC 7502P 32-Core Processor; Stepping: 0; CPU MHz: 2500.000; CPU max MHz: 2500.0000; CPU min MHz: 1500.0000; BogoMIPS: 5000.22; Virtualization: AMD-V; L1d cache: 32K; L1i cache: 32K; L2 cache: 512K; L3 cache: 16384K; NUMA node0 CPU(s): 0-31; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr wbnoinvd arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif v_spec_ctrl umip rdpid overflow_recov succor smca sme sev sev_es",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:9571,monitor,monitor,9571,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,1,['monitor'],['monitor']
Energy Efficiency," merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 29s 367ms; prefilter tmp//16518381706844811497/input_step_redundancy tmp//16518381706844811497/input_step_redundancy tmp//16518381706844811497/pref_step0 --sub-mat ; 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2; 147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 2 --comp-bias-corr; 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches; 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Query database size: 74390789 type: Aminoacid; Estimated memory consumption: 400G; Target database size: 74390789 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 74.39M 1m 27s 612ms; Index table: Masked residues: 17937595794; Index table: fill; [=================================================================] 74.39M 13s 623ms; Index statistics; Entries: 495972652; DB size: 12603 MB; Avg k-mer size: 0.387479; Top 10 k-mers; CSSCCCS 40539; CSSCSCS 36980; CSCSSCS 36180; CSCSCSS 35290; CSSCDSS 34425; CSCCSSS 33905; CSSCSSS 32740; CSCDSSS 31596; SCSCDSS 30280; CSCSDSS 29715; Time for index table init: 0h 2m 0s 290ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 74390789; Target db start 1 to 74390789; [==. ## Context; I have translated all the sequences in Uniref90 based on a reduced amino acid alphabet that has only 5 letters (C, A, D, G, S). I have tried clustering it again using `linclust` to 90% identity and 80",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:12729,consumption,consumption,12729,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['consumption'],['consumption']
Energy Efficiency," profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/q_orfs_aa /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db.idx /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 5 --compressed 0 -v 3 -s 7.5 . Index version: 16; Generated by: 8c79865b60025674b9c825fd7238bd0b95503bc7; ScoreMatrix: VTML80.out; Query database size: 5539077 type: Aminoacid; Estimated memory consumption: 3G; Target database size: 849970 type: Aminoacid; Segmentation fault; Error: Prefilter died; Error: Search step died; ```. Have you any idea what is going on?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/234:7024,consumption,consumption,7024,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234,1,['consumption'],['consumption']
Energy Efficiency," sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db tmp/425628692068579862/linclust/13628666274102407548/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 10 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	10; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (795683200 byte) of total memory (365681560780 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ................................................; Time for fill: 0 h 0 m 14s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 4s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 2s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 2 s; Time for processing: 0 h 0 m 23s; Rescore diagonals.; Program call:; panproteome.db panproteome.db tmp/425628692068579862/linclust/13628666274102407548/pref tmp/425628692068579862/linclust/13628666274102407548/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 10 -v 3 . MMseqs Ve",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:95685,Reduce,Reduced,95685,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['Reduce'],['Reduced']
Energy Efficiency," tmpfiles//13298481167543164943/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 218 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 218 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 218 0s 31ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 218 0s 4ms; Index statistics; Entries: 1318; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 994ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 218; Target db start 1 to 218; [=================================================================] 218 0s 55ms. 193.314206 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 763ms; align tmpfil",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:19841,consumption,consumption,19841,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['consumption'],['consumption']
Energy Efficiency," to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 13ms; prefilter ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/pref_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 20942 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 20942 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 20.94K 0s 601ms; Index table: Masked residues: 6638; Index table: fill; [=================================================================] 20.94K 0s 645ms; Index statistics; Entries: 1435009; DB size: 496 MB; Avg k-mer size: 0.022422; Top 10 k-mers; GPGGTL 342; LDMPDG 185; LGDYKP 145; DVLDMP 119; PFLEAR 69; PFPEAR 65; FDDTDS 59; ADYTFS 55; LITRGY 55; GPGGTT 44; Time for index table init: 0h 0m 2s 668ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 20942; Target db start 1 to 20942; [=================================================================] 20.94K 0s 928ms. 1.256278 k-mers per position; 118 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 8 sequences passed prefiltering per query sequence; 3 median result li",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:19836,consumption,consumption,19836,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['consumption'],['consumption']
Energy Efficiency," type: Nucleotide; Time for processing: 0h 0m 8s 216ms; Create directory tmp/18031188072042168038/taxonomy_tmp; taxonomy tmp/18031188072042168038/query refDB/NR tmp/18031188072042168038/result tmp/18031188072042168038/taxonomy_tmp --tax-output-mode 2 --threads 16 --split-memory-limit 100G --remove-tmp-files 1 . extractorfs tmp/18031188072042168038/query tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 16 --compressed 0 -v 3 . [=================================================================] 810.40K 31s 522ms; Time for merging to orfs_aa_h: 0h 0m 16s 759ms; Time for merging to orfs_aa: 0h 0m 22s 22ms; Time for processing: 0h 1m 23s 421ms; prefilter tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_aa refDB/NR.idx tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 100G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3 . Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 47918555 type: Aminoacid; Target split mode. Searching through 41 splits; Estimated memory consumption: 64G; Target database size: 444603205 type: Aminoacid; Process prefiltering step 1 of 41. k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 41); Query db start 1 to 47918555; Target db start 1 to 10838348; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:96629,consumption,consumption,96629,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,1,['consumption'],['consumption']
Energy Efficiency," with lengths ranging from 987 bp to 12,136 bp. mmseqs createindex target_sequencesDB tmp --spaced-kmer-mode 0 -k 0 -s 7.5 --search-type 3. #I also tried to run the createindex with the parameters --max-seq-len 15000 and --mask 0 and received similar errors to the ones showed below.; ```. ### MMseqs Output (for bugs); Createdb works fine, but indexdb crashes. These are the last few lines of the output:. splitsequence target_sequencesDB tmp/12611708828474015781/nucl_split_seq --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 64 --compressed 0 -v 3. [=================================================================] 67.68K 0s 28ms; Time for merging to nucl_split_seq_h: 0h 0m 0s 59ms; Time for merging to nucl_split_seq: 0h 0m 0s 49ms; Time for processing: 0h 0m 0s 257ms; indexdb tmp/12611708828474015781/nucl_split_seq target_sequencesDB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 0 -s 7.5 --k-score 2147483647 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 64. Estimated memory consumption: 1G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; [=================================================================] 67.72K 1s 204ms; Index table: Masked residues: 41849; No k-mer could be extracted for the database tmp/12611708828474015781/nucl_split_seq.; Maybe the sequences length is less than 14 residues.; Error: indexdb died. ### Your Environment; MMseqs version: 3513001d33301f7eaaf58e60a1376488ff017354; Operating system and version: CentOS Linux 7 (Core)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-1129947528:1531,consumption,consumption,1531,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-1129947528,1,['consumption'],['consumption']
Energy Efficiency,"## Current Behavior; Trying to run search on a DB using Uniref100 as target.; Prefiltering seems to work fine, but software crashes while aligning, returning:; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Steps to Reproduce (for bugs); Command; $ mmseqs search ../hmmsearchDB ~/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --min-length 35. ## MMseqs Output (for bugs); MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 64; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:180,allocate,allocate,180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,2,['allocate'],['allocate']
Energy Efficiency,"## Expected Behavior--. I am clustering NGS sequences with linclust (using the createdb database) from protein fasta files incorporating multiple named barcodes present in the fasta IDs. Each ID consists of a number to which the barcode name is appended (e.g. 689_dog). The expected output of createtsv is two columns, the first consisting of the IDs of the representative cluster member (689_dog), and the second consisting of IDs of the cluster members, including the barcode name (689_dog, 435_owl, 691_rat, etc.). . ## Current Behavior--; ; The first column is OK. The second column TSV output consists only of the numbers (689, 435, 691, etc.). It is essential that I have the barcode name for further processing of tabular formatted cluster information. Your documentation states that unkown ID formats are parsed to include everything before the first white space. This is not the case here. I have tried other delimiters (e.g. :, -) or no delimiters, and in each case the second column lists only the numbers. BTW, the clustering works very well, as assessed by inspection of output fasta or MSA files. ## Your Environment--. MMseqs2 Version: 11.e1a1c. installed from Bioconda. Run on Ubuntu 18.04 under Windows10 WSL1 on a 12-thread processor with 48GB RAM. mmseqs createdb csgtag10.fa csgtagDB; mmseqs linclust csgtagDB csgtagDB_CL DB_clu.tmp --add-self-matches -a 1 --min-seq-id 0.96; mmseqs createtsv csgtagDB csgtagDB_CL csgtagDB_CL_TSV (faulty output). mmseqs createseqfiledb csgtagDB csgtagDB_CL csgtagDB_CL_SEQ; mmseqs result2flat csgtagDB csgtagDB csgtagDB_CL_SEQ csgtagDB_CL_SEQ.fasta (OK output); mmseqs result2msa csgtagDB csgtagDB csgtagDB_CL csgtagDB_CL_MSA (OK output). I hope that this is an easy code fix. mmseqs is great open-source clustering software that can be run efficiently on my desktop. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/319:1795,efficient,efficiently,1795,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/319,1,['efficient'],['efficiently']
Energy Efficiency,"## Expected Behavior. Cluster nucleotide genome sequences (e.g., wgs records, contigs, scaffolds, complete genomes) in a few hours using `easy-linclust`. ## Current Behavior. Running `easy-linclust` using the following command ran for more than 24 hours and was at the `rescorediagonal` step for +20 hours:; ```; mmseqs easy-linclust input.fna cluster tmp --min-seq-id 0.9 -c 0.9 --alignment-mode 3 --db-load-mode 2 --split-memory-limit 2000G; ```. input.fna is 642 GB with approximately 2.5 MM sequences. ## Context. I want to cluster nucleotide genome sequences from NCBI to reduce the burden on similarity search for highly similar / redundant sequences. ## Your Environment; * MMseqs Version: Commit f5f780acd64482cd59b46eae0a107f763cd17b4d (statically-compiled AVX2); * Machine: 128 CPUs, 4 TB RAM, 2 x 1.9 TB NVMe SSD; * Operating system and version: Amazon Linux 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/726:577,reduce,reduce,577,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/726,1,['reduce'],['reduce']
Energy Efficiency,"## Expected Behavior. mmseqs easy-cluster should finish without errors. ## Current Behavior. ```; Query database size: 19552 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 9776 type: Nucleotide; tmp/3198441352783276465/clu_tmp/13016959338117486175/nucleotide_clustering.sh: line 48: 972066 Killed $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1) Download the FASTA at this link https://drive.google.com/file/d/1YPNMj2gL8zNUv9aiRo7dLJawanDWCIb3/view?usp=drive_link; 2) Install mmseqs2 v15.6f452; 3) Run:; ```; mmseqs easy-cluster all_sequences.fasta mmseqs_output tmp --cluster-mode 1 --cluster-reassign 1 --threads 24 -c 0.0 --cov-mode 5 --min-seq-id 0.8; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; Create directory tmp; easy-cluster /hps/nobackup/iqbal/dander/amira_panRG_pipeline/Escherichia_coli_panRG_c_0.8_l_0_train_AMR_alleles_removed_mmseqs2/all_sequences.fasta mmseqs_output/mmseqs_output tmp --cluster-mode 1 --cluster-reassign 1 --threads 24 -c 0.0 --cov-mode 5 --min-seq-id 0.8 . MMseqs Version: 15.6f452; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0; Coverage mode 5; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:160,consumption,consumption,160,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['consumption'],['consumption']
Energy Efficiency,"## Expected Behavior; I'm giving to MMSeqs2 360G of memory with 36 threads. I was expecting that it will use all this memory to increase the prefiltering speed. . ## Current Behavior; During the prefiltering step, MMSeqs2 used only 10% of the memory. I think he is using 80% of the estimated memory consumption, because it compute 48G for the `Estimated memory consumption`, but I'm not sure. ## Context; I'm currently trying to create protein families with a large database. I have 50 million proteins to cluster. I write a workflow based on uniclust. I would to increase the speed of the workflow, particularly on prefilter step, without loose the sensibility. I tried to use --split-memory-limit to increase the memory but it's not working. There is another solution ?. Here it's the command line that I would to increase speed : ; `mmseqs search $INPUT $INPUT ""$ALIGN_DIR/align"" $TMP_DIR --max-seqs 1000 -c 0.8 --comp-bias-corr 1 -s 7 --alignment-mode 3 --min-seq-id 0.3 --threads 36`. ## Your Environment; ```; Architecture : x86_64; Processeur(s) : 36; Thread(s) par cœur : 1; Cœur(s) par socket : 18; Socket(s) : 2; Nœud(s) NUMA : 2; Identifiant constructeur : GenuineIntel; Famille de processeur : 6; Modèle : 85; Nom de modèle : Intel(R) Xeon(R) Gold 6150 CPU @ 2.70GHz; Révision : 4; ```. Thanks for your work",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/397:299,consumption,consumption,299,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397,2,['consumption'],['consumption']
Energy Efficiency,"## Expected Behavior; I'm trying to cluster my large protein sequence file (1400412352 entries, wc -l all.mmseqDB.index) with:. ## Current Behavior; `mmseqs cluster all.mmseqDB all.95.clu tmp -s 7.5 --cov-mode 0 -c 0.95 --cluster-mode 0 --min-seq-id 0.95 --remove-tmp-files --split-memory-limit 100G`. ## Steps to Reproduce (for bugs); I also tried the linclust function and other split-memory-limit (70G, 40G), but got the same error. ## MMseqs Output (for bugs); Find missing connections; Can not allocate memory in findMissingLinks; Error: Pre-clustering step died; Error: linclust died. ## Context; MMseqs Version: 13.45111. ## Your Environment; the log file; [log.txt](https://github.com/soedinglab/MMseqs2/files/9658017/log.txt). * Operating system and version: Linux 64 with Xeon(R) Gold 6238CPU, ; ![image](https://user-images.githubusercontent.com/35453307/192583090-8ade5a75-5d70-4457-9b7b-f557f2c526b3.png)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/613:499,allocate,allocate,499,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/613,1,['allocate'],['allocate']
Energy Efficiency,"## Expected Behavior; Not sure. ## Current Behavior; After running; `mmseqs easy-search --search-type 3 --num-iterations 2 --threads 1 sequences/5LJ5_5.fasta databases/MSA_debug.fasta results/result tmp`. the program crashes with; `Can not allocate entries memory in IndexTable`. _Update:_; * Appending the query sequence to the database (which should assure at least one match is found) results in a different crash message: `Query sequence 0 has a result with no diagonal information. Please check your database.`; * Also, the log show query database size to be 2 which is weird because there is only one sequence in the file. But I can't find anything wrong with query .fasta file. _Update (2022-09-08)_:; Was trying out to the iterative step manually and ended up with the following error when trying to compute the profile:; ```; Invalid input database and --search-type combination; queryDbType: Profile; targetDbType: Nucleotide; targetSrcDbType: Unknown; searchMode: 3; ```; I suppose that mean profile search against a nucleotide database is not possible? I've also realized that there are many iterative profile search tools for proteins (psi-blast, jackhmmer) but I don't know a single one for nucleotide sequences. Is there some reason while searching with profiles is not possible in case of nucleotide sequences?. ## Context; Hi, I would like to compute MSA alignments from blast nt database (https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/) for multiple RNA sequences. Ideally, the procedure should be similar to Colabfold's MSA computation and there should be more than one search iteration for each sequence.; Note that I am limited to ~1TB RAM and the nt database index (created by createindex) does not fit into memory.; What would be the best way to go about it? . ## Steps to Reproduce (for bugs); ### 5LJ5_5.fasta:; >5LJ5_5; GUUCGCGAAGUAACCCUUCGUGGACAUUUGGUCAAUUUGAAACAAUACAGAGAUGAUCAGCAGUUCCCCUGCAUAAGGAU; GAACCGUUUUACAAAGAGAUUUAUUUCGUUUU. ### msa_debug; >URS0000000021 rRNA from 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:240,allocate,allocate,240,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['allocate'],['allocate']
Energy Efficiency,"## Expected Behavior; Nt database indexed; ## Current Behavior; Nt database index never-ending; ## Steps to Reproduce (for bugs); ```; mmseqs createdb nt.fa nt -v 3 ; mmseqs createtaxdb nt tmp --threads 8 --tax-mapping-file ${uncompress_dir}/taxidmapping --ncbi-tax-dump ${ncbi-tax-dump} -v 3; mmseqs createindex nt tmp --threads 8 --split-memory-limit 200G --search-type 2 -v 3; ```. ## MMseqs Output (for bugs); In the link, there is the output of mmseq and the strace output when the software never end( mmseqs indexdb command).; https://gist.github.com/braffes/022572a4d9506f8910b281864a459ede. ## Context. The first and the second step work as expected, but the last step seems to never end. It is blocked on this command:; ```; mmseqs indexdb tmp/16033012438524647487/orfs_aa nt --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 2 --split 0 --split-memory-limit 200G -v 3 --threads 8; ```; One core is always on 100% CPU but not nothing happens. . I try to do this step with the scheduler(slurm) and localy, but that's the same result. After few try, I try to decrease the size of the fasta file(385Go to 172Go), and it worked.; It could be a problem of scaling? If yes, can it be related to the type in DBReader being unsigned int in indexdb.cpp?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; The problem is encountered for the two following versions MMseqs2/12-113e3 and MMseqs2/13-45111; 96 cores; 2To RAM; CentOS Linux release 8.3.2011",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/426:1172,schedul,scheduler,1172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426,1,['schedul'],['scheduler']
Energy Efficiency,"## Expected Behavior; Run mmseqs databases to create a taxonomic database that uses recent data from uniref, e.g uniref100 . ## Current Behavior; A recent downloaded uniref100 fasta file has 342650444 however using the mmseqs databases creates a taxonomic database that has only 1462990. I didn't get any error about something failing and couldn't find any information about reduced database. . ## Steps to Reproduce (for bugs); mmseqs databases UniRef100 databases_mmseqs/uniref100 tmp2. ## Context; I am trying to run easy-taxonomy on a fasta file using uniref100. I got a result using the mmseqs database generated taxdb but it was making really bad taxonomic assignments that got me wondering. Eventually I realized that it wasn't containing many of my expected uniref entries and that it is actually significantly smaller than a recent uniref100 fasta download.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/684:375,reduce,reduced,375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/684,1,['reduce'],['reduced']
Energy Efficiency,"## Expected Behavior; Running linclust with with --min-seq-id 1.0 -c 1.0 clusters identical sequences. ## Current Behavior; Non-identical sequences are clustered. ## Steps to Reproduce (for bugs); my cmd:; `mmseqs linclust my_mmseqs2.db my_mmseqs2.linclust.clusters tmp --min-seq-id 1.0 -c 1.0 --cov-mode 0 -v 3 -e 0.001`. ## MMseqs Output (for bugs); When I parse the output, I find non-identical sequences clustered together, e.g. these 2, shown here BLASTed:; ```; Query 1 MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQNFTGIRTSLRLS 47; MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQ FTGIRTSLRLS; Sbjct 1 MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQIFTGIRTSLRLS 47; ^ different aa; ```; ## Context; Initially I thought this is just due to the reduced protein alphabet, but in this example (and others) the different residues are `I` and `N`, which doesn't appear to follow the reduced alphabet i found in the paper `(L, M), (I, V), (K, R), (E, Q), (A, S, T), (N, D), and (F, Y)`. You might say that clustering identical sequences is pointless, since it's a simple string/pattern matching exercise, but since I was trying a few different thresholds, I wanted to implement it through a consistent mmseqs2 workflow. Either way, it would be nice to understand the behaviour. ## Your Environment; Running arch-linux with MMseqs2/7-4e23d. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/200:714,reduce,reduced,714,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/200,2,['reduce'],['reduced']
Energy Efficiency,"## Expected Behavior; Taxonomy assignment of viral OTU sequences (nucleotide) using the 2bLCA method against a custom formatted amino acid database from IMG/VR. ## Current Behavior; The LCA step dies due to a segmentation fault when using a small test dataset that I have previously had success with when using Antônio Camargo's ICTV MMseqs2 protein database (https://github.com/apcamargo/ictv-mmseqs2-protein-database). For reference, I have also allocated 40 cores and 700gb RAM to this job, which fails after consuming only 178gb of mem.; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. I have formatted the IMG/VR v4 7.1 AA database as recommended (https://github.com/soedinglab/MMseqs2/wiki#create-a-seqtaxdb-by-manual-annotation-of-a-sequence-database) and I've created a custom taxdump using taxonkit. The custom taxdb was created without issue:. ```; mmseqs createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db; createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loadin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:448,allocate,allocated,448,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['allocate'],['allocated']
Energy Efficiency,"## Expected Behavior; The example file https://raw.githubusercontent.com/soedinglab/mmseqs2/master/examples/DB.fasta should be clustered; ## Current Behavior; After the installation of MMseqs Version: 1c45613a4166130d040b52241dc66f7d687f4e54 it fails when prefiltering with:. **Error: Could not allocate memory by memalign. Please report this bug to developers** . ## Steps to Reproduce (for bugs). mmseqs createdb DB.fasta DB; mkdir tmp; mmseqs cluster DB cluDB tmp. ## MMseqs Output (for bugs); Line [391](https://gist.github.com/genomewalker/dc566892b5300bc62e166dac844a9b65#file-mmseqs_v1c45613a4166130d040b52241dc66f7d687f4e54-L391). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Homebrew . * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.8.1 and g++ (Homebrew GCC 7.1.0 --without-multilib) 7.1.0. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): MacBook Pro (Retina, 13-inch, Late 2013) with 2.6 GHz Intel Core i5 and 16 GB 1600 MHz DDR3; * Operating system and version: Mac OS X 10.12.4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/29:295,allocate,allocate,295,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/29,1,['allocate'],['allocate']
Energy Efficiency,"## Expected Behavior; When query has 10,000 sequences; Query database size: 10,000 type: Aminoacid; ## Current Behavior; Query database size: 3125 type: Aminoacid. ## Steps to Reproduce (for bugs); Running search or prefilter. ## MMseqs Output (for bugs); MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0; Coverage mode 	0; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id.	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	64; Compressed 	0; Verbosity 	3. Query database size: 3125 type: Aminoacid; Estimated memory consumption: 193G; Target database size: 37233987 type: Aminoacid; Index table k-mer threshold: 141 at k-mer size 7 ; Index table: counting k-mers",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/283:1077,consumption,consumption,1077,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283,1,['consumption'],['consumption']
Energy Efficiency,"## Expected Behavior; When running with highly reduced databases with the size of lower than 1MB, it works just fine. ; Both the complete call for the search workflow ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; as well as the explicit call for the prefilter module only ./mmseqs prefilter ""query"" ""target"" ""result"" are running as expected. ## Current Behavior; Using bigger files for query and target data, which in no means are unreasonable in my opinion (5.1 MB each), the program exits with a segmentation fault during the prefiltering step. See output below for more detailed information. ## Steps to Reproduce (for bugs); strictly following the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:47,reduce,reduced,47,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['reduce'],['reduced']
Energy Efficiency,"## Expected Behavior; mmseqs2 successfully linclust a 49 sequence protein fasta. ## Current Behavior; mmseqs2 complain Kmer array overflow. ## Steps to Reproduce (for bugs); ```bash; ~/seqdb/JGI/script/mmseqs2/bin/mmseqs createdb DB.fasta DB -v 1; mkdir tmp; ~/seqdb/JGI/script/mmseqs2/bin/mmseqs linclust DB DB_clu tmp -c 0.9 --cov-mode 1 --threads 1 -v 1; ```. ## MMseqs Output (for bugs); ```; Kmer array overflow. currKmerArrayOffset=0, kmerBufferPos=1024, kmerArraySize=1024.; Error: kmermatcher died; ```. ## Context; The input file DB.fasta and all intermediate files are attached.; [linclust_3300021621.zip](https://github.com/soedinglab/MMseqs2/files/4199615/linclust_3300021621.zip). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; ``MMseqs2 Version: 481696b5f426f991211894d8a855bf9d60065c8f``; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; https://mmseqs.com/latest/mmseqs-linux-sse41.tar.gz; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm ida arat pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms xsaveopt; * Operating system and version:; ```; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.7.1908 (Core); Release: 7.7.1908; Codename: Core; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/274:1459,monitor,monitor,1459,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/274,1,['monitor'],['monitor']
Energy Efficiency,"## Expected Behaviour. Unknown. ## Current Behaviour. I am trying to re-create the clustered nr database currently featured on the BLAST site. The cluster step appears to stall after merging the split files and I get the message ""Cannot touch 215222407074 into main memory"". I have 188G of RAM and 63 cores available. I have tried to reduce the amount of memory using the --split-memory-limit 70G, --split-mode 2, --split 2, and --compressed 1 options but it does not appear to have helped. This is my first time using MMseqs so any help would be much appreciated. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Create directory tmp; cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1 . MMseqs Version: 	bdd169b3e285299cab792e62d60eb1f4e4e434d2; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	4; Split mode 	2; Split memory limit 	70G; Coverage threshold 	0.9; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:334,reduce,reduce,334,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['reduce'],['reduce']
Energy Efficiency,"## Issue. Hello, I want to use easy-taxonomy on homology hits I got from mmseqs search between insect genomes and viruses (Refseq viruses). I want to run taxonomic assignment on the hits to determine which are really viral sequences and which are eukaryotic sequences that hit on viruses in the homology search step. For taxonomic assignment, I use a taxonomic generalist database from which I remove insect sequences. ; I'd like help in choosing the parameters and options useful for maximizing the sensitivity of taxonomic assignment, to make sure that when it's a sequence of viral origin it's detected as such (reduce the unclassified portion). ; I've identified these parameters as potentially interesting, but I don't know which values to choose, and if it's really these parameters that I should use : . --max-seqs INT Maximum results per query sequence allowed to pass the prefilter (affects sensitivity) [0.000]; --min-ungapped-score INT Accept only matches with ungapped alignment score above threshold [15]; -e DOUBLE List matches below this E-value (range 0.0-inf) [1.000E-03]; --min-aln-len INT Minimum alignment length (range 0-INT_MAX) [0]; --e-profile DOUBLE Include sequences matches with < E-value thr. into the profile (>=0.0) [1.000E-03]; --lca-mode INT LCA Mode 1: single search LCA , 2/3: approximate 2bLCA, 4: top hit [3]; --allow-deletion BOOL Allow deletions in a MSA [0]; --max-gaps INT Maximum number of codons with gaps or unknown residues before an open reading frame is rejected [2147483647]. Thank you for your help !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/767:615,reduce,reduce,615,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/767,1,['reduce'],['reduce']
Energy Efficiency,"### Summary. > This pull request introduces an algorithm that reduces the total number of clusters while maintaining linearity. The algorithm captures meaningful information from previously unadopted data in the 'assignGroup' function, allowing for more effective clustering. ### Details. **1 Extended Search Process :**. > For the same k-mer group, the process of combining the representative sequence with each sequence has been extended. The algorithm now calculates sequence dissimilarity using adjacent sequence information. The most dissimilar sequence is selected as the next representative sequence, and this exploration process is repeated. If there are multiple sequences with the same level of dissimilarity, the most recently explored sequence is chosen as the representative sequence. Additionally, the selection of the most dissimilar sequence is limited to sequences that follow the current representative sequence in the search order. **2. Data Structure Challenges**. > The implementation of this method introduced challenges in maintaining the original in-place data structure. To overcome these challenges, a new data structure has been introduced with an additional buffer (slack space) at the end. The new data structure includes a default buffer size of 5%. . **3. Dynamic Memory Allocation**. > If memory becomes insufficient during operation, the structure dynamically resizes by splitting and reallocating memory based on the progress of the previous process. This approach ensures efficient memory usage and prevents potential memory shortages. ### Benchmark Results. > I conducted benchmarking on datasets randomly selected from the UniParc dataset, with sizes of 1.3M, 2.7M, 5.3M, 11M, 21M, 42M, and 85M. The results confirmed that the new algorithm effectively reduces the number of clusters while maintaining linearity, showing no significant time difference compared to the existing Linclust method. Despite these improvements, the algorithm still lags behind the easy-c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/873:62,reduce,reduces,62,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873,1,['reduce'],['reduces']
Energy Efficiency,"--sequence-split-mode 1 --create-lookup 0 --threads 256 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 3ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 278905 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 88ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 64ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 4s 959ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 278905; Target db start 1 to 69220; [=================================================================] 278.90K 3s 495ms. 0.936570 k-mers per position; 8348 DB matches per sequence; 48 overflows; 0 qu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:3345,consumption,consumption,3345,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['consumption'],['consumption']
Energy Efficiency,"-id-offset 0 --create-lookup 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 714.62K 18s 1ms; Time for merging to q_orfs_aa_h: 0h 0m 17s 230ms; Time for merging to q_orfs_aa: 0h 0m 22s 109ms; Time for processing: 0h 1m 20s 933ms; prefilter tmp/3499313520568641582/q_orfs_aa uniref50 tmp/3499313520568641582/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --sp; lit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lo; wer-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed ; 0 -v 3 -s 5.7 . Query database size: 61153309 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 99G; Target database size: 48531432 type: Aminoacid; Process prefiltering step 1 of 2. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 24.26M 1m 44s 733ms; Index table: Masked residues: 187925951; Index table: fill; [=================================================================] 24.26M 3m 17s 822ms; Index statistics; Entries: 6286866786; DB size: 45739 MB; Avg k-mer size: 4.911615; Top 10 k-mers; DFEQLPH	32892; NVPGWSP	32831; FRYAFPS	32736; RYYVLGW	32688; WRLDFLN	31763; TVDGDFS	31579; NKTDFVQ	31135; QDWVQIP	30874; LDGAYVP	30051; ETGRYNV	29832; Time for index table init: 0h 5m 17s 428ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 2); Query db start 1 to 61153309; Target db start 1 to 24258060; [=================================================================] 61.15M 27h 30m 21s 285ms. 2412.140792 k-mers per position; 608927 DB matches per sequence; 175 ov",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/478:3711,consumption,consumption,3711,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478,1,['consumption'],['consumption']
Energy Efficiency,"-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:4785,allocate,allocate,4785,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['allocate'],['allocate']
Energy Efficiency,"-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. Database size: 6 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 6 0s 1ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 22ms; rescorediagonal /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:8585,Reduce,Reduced,8585,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['Reduce'],['Reduced']
Energy Efficiency,"-subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 416 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 416 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 416 0s 41ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 416 0s 6ms; Index statistics; Entries: 125; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; XXXXXX 6; XXXXXX 6; XXXXXX 4; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 1; Time for index table init: 0h 0m 1s 308ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 416; Target db start 1 to 416; [=================================================================] 416 0s 20ms. 0.116417 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; Time for processing: 0h 0m 2s 35ms; align DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:11612,consumption,consumption,11612,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['consumption'],['consumption']
Energy Efficiency,"-tmp-files 1. prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 -s 2.0. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 9 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 713072; [=================================================================] 100.00% 9 0s 6ms. 10.636821 k-mers per position; 10265 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 66 sequences passed prefiltering per query sequence; 36 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 38ms; Time for processing: 0h 0m 0s 251ms; lcaalign tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/first --sub-mat 'aa:blosum62.out",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:9884,consumption,consumption,9884,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,1,['consumption'],['consumption']
Energy Efficiency,". Query database size: 74390789 type: Aminoacid; Estimated memory consumption: 400G; Target database size: 74390789 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 74.39M 1m 27s 612ms; Index table: Masked residues: 17937595794; Index table: fill; [=================================================================] 74.39M 13s 623ms; Index statistics; Entries: 495972652; DB size: 12603 MB; Avg k-mer size: 0.387479; Top 10 k-mers; CSSCCCS 40539; CSSCSCS 36980; CSCSSCS 36180; CSCSCSS 35290; CSSCDSS 34425; CSCCSSS 33905; CSSCSSS 32740; CSCDSSS 31596; SCSCDSS 30280; CSCSDSS 29715; Time for index table init: 0h 2m 0s 290ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 74390789; Target db start 1 to 74390789; [==. ## Context; I have translated all the sequences in Uniref90 based on a reduced amino acid alphabet that has only 5 letters (C, A, D, G, S). I have tried clustering it again using `linclust` to 90% identity and 80% overlap, however, the number of clusters is larger than I expected (75M from 76M initial Uniref90 size). I thought that might be due to the reduced sensitivity as a further reduced amino acid alphabet is applied before computing the k-mers. . I've tried to use `mmseq cluster` instead, however, this seems to take a very long time. After 13h the progress bar has only two '=' signs. . I am not sure if I am approaching the right way. Is linclust capable to cluster a protein sequence database that has been translated to a reduced amino acid alphabet or does it interfere with the mmseq alphabet used during k-mer comparison?. I was expecting a much smaller number of clusters as sequences only use 5 letters now so they are more likely to be more similar. . For `mmseq cluster`, what is the expected computation time for 76M sequences? . ## Your Environm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:13665,reduce,reduced,13665,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['reduce'],['reduced']
Energy Efficiency,"./MMseqs2DB/MMseqs2DB --dbtype 0 --compressed 1`; `mmseqs createindex ./MMseqs2DB/MMseqs2DB ./tmp --threads 48 --search-type 3 `; ## MMseqs Output (for bugs); Didn't collect the stdout/errr =\ only have these from the terminal; ```; Time for merging to nucl_split_seq_h: 0h 5m 44s 19ms; Time for merging to nucl_split_seq: 0h 4m 40s 563ms; Time for processing: 0h 23m 17s 335ms; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; [>                                                                ] 0.00% 1 eta ./tmp/11929725182862116610/createindex.sh: line 56: 16913 Segmentation fault      ""$MMSEQS"" $INDEXER ""$2/nucl_split_seq"" ""$INPUT"" $INDEX_PAR; Error: indexdb died; ```. ## Context; I'll need to reuse this DB several times, objective is to reduce overall runtime. ; Also, I noticed that seven *.idx[0-6] and seven *.idx.index[0-6] are created in the dir ./MMseqs2DB/ , but only the file MMseqs2DB.idx.0 isn't 0 bytes in size / increases (don't know if this is realted, but it reaches almost exactly 150.0GB (size when createindex crashed).; Any help is appreciated, hopefully I didn't miss something obvious :-); ## Your Environment; `MMseqs2 Version: f966bfa62a2b52d4821e908ac9e25808d1be0b81`; Using the avx2 binary, ; CPU: Intel(R) Xeon(R) Pl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280:1001,consumption,consumption,1001,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280,1,['consumption'],['consumption']
Energy Efficiency,"/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins.target_seq mmseqs_target_seq/[bacteria_of_interest]/tmp/15822818178659183495/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 7.0 . Query database size: 38880 type: Profile; Estimated memory consumption: 488M; Target database size: 125 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 125 0s 5ms; Index table: Masked residues: 124; Index table: fill; [=================================================================] 125 0s 6ms; Index statistics; Entries: 25103; DB size: 488 MB; Avg k-mer size: 0.000392; Top 10 k-mers; ALGLAA	2; TTGTAA	2; AAARKA	2; KASRKA	2; TEEALA	2; EDLLRA	2; INGNED	2; ASARED	2; GKHHRD	2; AELKAE	2; Time for index table init: 0h 0m 0s 511ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 38880; Target db start 1 to 125; [=mmseqs_target_seq/[bacteria_of_interest]/tmp/15822818178659183495/blastp.sh: line 99: 1649148 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; createtsv phrogs_mmseqs_db/phrogs_profile_db mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins.target_seq mmseqs_target_seq/[bacteria_of_interest]/[bacter",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:5703,consumption,consumption,5703,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,1,['consumption'],['consumption']
Energy Efficiency,"/clu_redundancy in/DB_in clu/sim2_tmp/12164117771218227067/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 14ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 4ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 118ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 23ms; [==========================================================> ] 89.54% 138 eta 0s; 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:28277,consumption,consumption,28277,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['consumption'],['consumption']
Energy Efficiency,"/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 156ms; rescorediagonal DB_in/shuffle_in DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [==============================================================] ===1.95K 0s 40ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 71ms; clus",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:3841,Reduce,Reduced,3841,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['Reduce'],['Reduced']
Energy Efficiency,"0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/temp_linclust/352147678829955415/linclust/9188580091420820903/linclust.sh: line 26: 24508 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}. Do you know what is wrong? Thank you very much. Best,; Sam",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/238:1485,consumption,consumption,1485,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238,2,"['allocate', 'consumption']","['allocate', 'consumption']"
Energy Efficiency,"0m 0s 54ms; createsubdb tmp//7897776346521331899/clu_redundancy artificial2/DB_artificial tmp//7897776346521331899/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 51ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 1ms; Index statistics; Entries: 99; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; ERIATC 1; Time for index table init: 0h 0m 1s 150ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 29ms. 0.916862 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequen",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:11879,consumption,consumption,11879,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['consumption'],['consumption']
Energy Efficiency,"0ms; Time for merging to orfs_aa_h: 0h 0m 13s 741ms; Time for merging to orfs_aa: 0h 0m 14s 541ms; Time for processing: 0h 1m 14s 69ms; prefilter /tmp/4466913777158595479/orfs_aa uniref_db.idx /tmp/4466913777158595479/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3. Index version: 16; Generated by: 60b77df37df55c3984870760591facbb361c3939; ScoreMatrix: VTML80.out; Query database size: 19769556 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 19769556; Target db start 1 to 1; [=================================================================] 100.00% 19.77M 1m 24s 356ms. 6.165338 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 14s 786ms; Segmentation fault (core dumped); Error: orf filter prefilter died. ## Your Environment; This is where I'm working right now:. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; Address sizes: 43 bits physical, 48 bits virtual; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 1; Socket(s): 24; NUMA node(s): 1; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model na",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/669:4437,consumption,consumption,4437,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669,1,['consumption'],['consumption']
Energy Efficiency,"0s 0ms; Time for processing: 0h 0m 0s 110ms; createsubdb tmp//7897776346521331899/clu_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776346521331899/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 19ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 3ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 975ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 35ms. 125.182478 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 seq",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:20102,consumption,consumption,20102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['consumption'],['consumption']
Energy Efficiency,"1 -e 1 --max-rejected 5 --max-accept 30 -s 0.5 --split-mode 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1 . prefilter /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/orfs_aa /nr /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1/1723886274502240713/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 0 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 26 --compressed 0 -v 3 -s 0.5 . Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GDQYNVT	84229; Time for index table init: 4h 18m 41s 415ms; k-mer similarity threshold: 180; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 695256546; Target db start 1 to 58919300; [=================================================================] 695.26M 61h 14m 42s 623ms. 2.307739 k-mers per position; 1254 DB matches per s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:31262,consumption,consumption,31262,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591,1,['consumption'],['consumption']
Energy Efficiency,"11215513/q_orfs_aa; --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 48. [=================================================================] 3.22M 2s 59ms; Time for merging files: 0h 0m 3s 83ms; Time for processing: 0h 0m 6s 661ms; prefilter /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa /mnt/lustre/scratch/aauladell/databases/unirefdb/unirefDB /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14; 502658769203238512/tmp_hsp1/3393216153911215513/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c; 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 48 --compressed 0 -v 3 -s; 5.7. Using 48 threads.; Query database size: 3215536 type: Aminoacid; Estimated memory consumption: 437G; Target database size: 99657864 type: Aminoacid; Process prefiltering step 1 of 1. Index table k-mer threshold: 122 at k-mer size 7; Index table: counting k-mers; [=================================================================] 99.66M 6m 33s 605ms; Index table: Masked residues: 620383436; Index table: fill; [==; ```. ## Context; From a selection of 300.000 small sequences, I intended to perform the taxonomy using UNIREF90. But it crashes each time even though the database should be able to be used for this kind of analysis. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 15c7762; * Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported, 750 Gb, 48 processors.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/232:2826,consumption,consumption,2826,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232,1,['consumption'],['consumption']
Energy Efficiency,"13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 0s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 0s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 0s; Rescore diagonals.; Program call:; pan.db pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Rescore mode 	0; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; T",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:4807,Reduce,Reduced,4807,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['Reduce'],['Reduced']
Energy Efficiency,"1463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 5.7 . Query database size: 54576 type: Nucleotide; Target split mode. Searching through 5 splits; Estimated memory consumption: 679G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 5. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 18.00M 6m 11s 176ms; Index table: Masked residues: 1279892313; Can not allocate entries memory in IndexTable::initMemory; Error: Prefilter died; Error: Search step died; Error: Search died. Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **12.113e3**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **bioconda** ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD EPYC 7742 64-Core Processor ,Mem: 1031918, Swap: 102399; * Operating system and version: Linux 4.19.140 #19 SMP Thu Aug 20 11:52:19 MEST 2020 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:14527,allocate,allocate,14527,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['allocate'],['allocate']
Energy Efficiency,"16617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 172ms; rescorediagonal in/DB_in in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 164 0s 38ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms ] 25.77% 43 eta 0s; Time for processing: 0h 0m 0s 102",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:20461,Reduce,Reduced,20461,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['Reduce'],['Reduced']
Energy Efficiency,"16679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 140 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 497; DB size: 488 MB; Avg k-mer size: 0.000008; Top 10 k-mers; GMTEEA	1; LHNWEA	1; SRLLFA	1; VRGIGA	1; ERIAKA	1; TEVGKA	1; NKEIKA	1; GIKKKA	1; DVSNKA	1; INISKA	1; Time for index table init: 0h 0m 0s 885ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 140; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=================================================================] 6 0s 1ms. 7.473668 k-mers per position; 69 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 25ms; Time for processing: 0h 0m 1s 533ms; align /ebio/abt3_scratch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:24219,consumption,consumption,24219,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['consumption'],['consumption']
Energy Efficiency,"1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --k-score 2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 5.7. Query database size: 25293 type: Aminoacid; Estimated memory consumption: 18G; Target database size: 3570076 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 3.57M 8s 444ms; Index table: Masked residues: 11969832; Index table: fill; [=================================================================] 100.00% 3.57M 8s 228ms; Index statistics; Entries: 1027253274; DB size: 6366 MB; Avg k-mer size: 16.050832; Top 10 k-mers; TGPTYY 27757; AFYRLP 26608; PIPVFY 26525; FTVGTY 26386; TLTNDY 25757; SALDYW 25262; EPVKNS 25067; GAFLPY 24885; AGYFDW 24698; HYFVAV 24187; Time for index table init: 0h 0m 17s 833ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:3551,consumption,consumption,3551,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,1,['consumption'],['consumption']
Energy Efficiency,"2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 5.7 . Query database size: 54576 type: Nucleotide; Target split mode. Searching through 5 splits; Estimated memory consumption: 679G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 5. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 18.00M 6m 11s 176ms; Index table: Masked residues: 1279892313; Can not allocate entries memory in IndexTable::initMemory; Error: Prefilter died; Error: Search step died; Error: Search died. Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **12.113e3**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **bioconda** ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of sys",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:14206,consumption,consumption,14206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['consumption'],['consumption']
Energy Efficiency,"2265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 100000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00K 0s 853ms; Sort kmer 0h 0m 0s 789ms; Sort by rep. sequence 0h 0m 0s 951ms; Time for fill: 0h 0m 0s 155ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 3s 166ms; rescorediagonal ./mms_smallDB ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 100.00K 0s 206ms; Time for merging to pref_rescore1: 0h 0m 0s 757ms; Time for processing: 0h 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:11540,Reduce,Reduced,11540,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['Reduce'],['Reduced']
Energy Efficiency,"25152138277869/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 176ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15288254 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 75ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 6s 52ms; Hard disk might not have enough free space (1T left).The prefilter result might need up to 40T.; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 15288254; Target db start 1 to 69220; [================================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:12366,consumption,consumption,12366,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['consumption'],['consumption']
Energy Efficiency,"2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . MMseqs Version: 	f966bfa62a2b52d4821e908ac9e25808d1be0b81; Seed substitution matrix	nucl:nucleotide.out,aa:VTML80.out; K-mer size 	15; Alphabet size 	21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Threads 	48; Verbosity 	3. Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; tantan: warning: possible numeric inaccuracy ] 0.00% 1 eta -; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or directory.; (gdb) ; (gdb) bt; #0 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/sr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:929,consumption,consumption,929,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323,1,['consumption'],['consumption']
Energy Efficiency,"30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1. prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 2.0. Query database size: 55235334 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 8s 472ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 5s 3ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 18338; Time for index table init: 0h 2m 26s 298ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 8); Query db start 1 to 55235334; Target db start 1 to 16332640; [=================================================================] 100.00% 55.24M 40m 8s 213ms. 33.753670 k-mers per position; 12988 DB matches per sequ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:21923,consumption,consumption,21923,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['consumption'],['consumption']
Energy Efficiency,"40758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 170ms; rescorediagonal in/DB_in in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 164 0s 28ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 84ms; clust in/DB_in c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:4858,Reduce,Reduced,4858,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['Reduce'],['Reduced']
Energy Efficiency,"410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 ; [=================================================================] 292.14M 2m 8s 8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:2363,Reduce,Reduced,2363,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,1,['Reduce'],['Reduced']
Energy Efficiency,"41378/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 5.7 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Query database size: 1 type: Nucleotide; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Target database size: 10754 type: Nucleotide; mmseqs-web-worker_1 | Process prefiltering step 1 of 1; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | k-mer similarity threshold: 0; mmseqs-web-worker_1 | Starting prefiltering scores calculation (step 1 of 1); mmseqs-web-worker_1 | Query db start 1 to 1; mmseqs-web-worker_1 | Target db start 1 to 10754; mmseqs-web-worker_1 | [=================================================================] 1 0s 4ms; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | 0.120000 k-mers per position; mmseqs-web-worker_1 | 0 DB matches per sequence; mmseqs-web-worker_1 | 0 overflows; mmseqs-web-worker_1 | 0 queries produce too much hits (truncated result); mmseqs-web-worker_1 | 0 sequences passed prefiltering per query sequence; mmseqs-web-worker_1 | 0 median result list length; mmseqs-web-worker_1 | 1 sequences with 0 size result lists; mmseqs-web-worker_1 | Time for merging to pref_0: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 5ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:23401,consumption,consumption,23401,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['consumption'],['consumption']
Energy Efficiency,"43602774421092333/tmp_hsp1/7440312624435503015/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 72 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 1ms; prefilter tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs_split /home/kabru/datenbank/silvadb.idx tmp/14943602774421092333/tmp_hsp1/7440312624435503015/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 72 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 14G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; [> ] 0.00% 1 et[> ] 1.00% 81 e[> ] 1.03% 83 e[> ] 1.01% 82 e[> ] 1.04% 84 e[> ] 1.05% 85 e[=> ] 2.05% 165 [=> ] 3.05% 245 [==> ] 4.05% 325 [===> ] 5.05% 405 [===> ] 6.05% 485 [====> ] 7.05% 565 [=====> ] 8.05% 645 [=====> ] 9.05% 725 [======> ] 10.05% 805[=======> ] 11.05% 885[=======> ] 12.05% 965[========> ] 13.05% 1.0[=========> ] 14.05% 1.1[=========> ] 15.05% 1.2[==========> ] 16.05% 1.2[===========> ] 17.05% 1.3[===========> ] 18.05% 1.4[============> ] 19.05% 1.5[=============> ] 20.05% 1.6[=============> ] 21.05% 1.6[==============> ] 22.05% 1.7[==============> ] 23.05% 1.8[===============> ] 24.05% 1.9[================> ] 25.05% 2.0[================> ] 26.05% 2.0^C eta 1m 38s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:89536,consumption,consumption,89536,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,1,['consumption'],['consumption']
Energy Efficiency,"48632313875676683/search_tmp/10253871789027801475/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 107ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15106287 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 73ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 66ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 5s 2ms; Hard disk might not have enough free space (1T left).The prefilter result might need up to 39T.; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 15106287; Target db start 1 to 69220; [=================================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:8849,consumption,consumption,8849,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['consumption'],['consumption']
Energy Efficiency,5175173681302479/search_tmp/2764711141857836142/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.7; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Using 24 threads.; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Estimated memory consumption 12072 MB; mmseqs-web-worker_1 | Target database size: 117752 type: Nucleotide; mmseqs-web-worker_1 | Query database size: 2 type: Nucleotide; mmseqs-web-worker_1 | Process prefiltering step 1 of 1; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | k-mer similarity threshold: 0; mmseqs-web-worker_1 | Starting prefiltering scores calculation (step 1 of 1); mmseqs-web-worker_1 | Query db start 1 to 2; mmseqs-web-worker_1 | Target db start 1 to 117752; [=================================================================] 100.00% 0.02 0s 0ms ] 0.00% 0.01 eta -; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | 0.450000 k-mers per position; mmseqs-web-worker_1 | 0 DB matches per sequence; mmseqs-web-worker_1 | 0 overflows; mmseqs-web-worker_1 | 0 sequences passed prefiltering per query sequence; mmseqs-web-worker_1 | 0 median result list length; mmseqs-web-worker_1 | 2 sequences with 0 size result lists; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Time for prefiltering scores calculation: 0h 0m 0s 1ms; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 2ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/s,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:7674,consumption,consumption,7674,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['consumption'],['consumption']
Energy Efficiency,"5416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 542; DB size: 488 MB; Avg k-mer size: 0.000008; Top 10 k-mers; GMTEEA	1; LHNWEA	1; SRLLFA	1; VRGIGA	1; LSLTGA	1; ERIAKA	1; TEVGKA	1; NKEIKA	1; GIKKKA	1; DVSNKA	1; Time for index table init: 0h 0m 0s 907ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; =[================================================================] 6 0s 2ms. 37.492909 k-mers per position; 87 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 474ms; align /ebio/abt3_scratch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:29270,consumption,consumption,29270,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['consumption'],['consumption']
Energy Efficiency,"560953143015620527/result /tmp/MMS6178/15560953143015620527/search_tmp --alignment-mode 3 --threads 4 -s 5.7 --remove-tmp-files 1 . prefilter /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 4 --compressed 0 -v 3 -s 5.7 . Query database size: 431 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 153G; Target database size: 170669877 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 55.34M 25m 40s 422ms ; Index table: Masked residues: 383107691; Index table: fill; /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/blastp.sh : ligne 99 : 6380 Processus arrêté $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. MMseqs2 Version: 14.7e284; Statically-compiled. Use a compute node using the following SLURM reservation: ""srun -p fast --exclusive --pty bash"". Compute node has 54 cores and 256 Go RAM; Operating System: CentOS Linux 7 (Core); CPE OS Name: cpe:/o:centos:centos:7; Kernel: Linux 3.10.0-1160.6.1.el7.x86_64; Architecture: x86-64; AV",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/728:5170,consumption,consumption,5170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728,1,['consumption'],['consumption']
Energy Efficiency,"62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 split; [=================================================================] 100.00% 541.12M 11m 3s 10ms ; Sort kmer 0h 0m 24s 363ms; Sort by rep. sequence 0h 0m 9s 647ms; Generate k-mers list for 4 split; [=================================================================] 100.00% 541.12M 11m 6s 122ms ; Sort kmer 0h 0m 14s 8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:5422,Reduce,Reduced,5422,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['Reduce'],['Reduced']
Energy Efficiency,"625152138277869/search_tmp/17414849138893322762/search/aln_swap -v 3 . Time for processing: 0h 0m 36s 927ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 23551830 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 211ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 6s 967ms; Hard disk might not have enough free space (622G left).The prefilter result might need up to 62T.; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 23551830; Target db start 1 to 69220; [============================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:19020,consumption,consumption,19020,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['consumption'],['consumption']
Energy Efficiency,"627605686170015473/search/input_0 tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 -v 3 --subdb-mode 1 . Time for merging to input_1: 0h 0m 0s 267ms; Time for processing: 0h 0m 0s 790ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 6.0 . Query database size: 2271004 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 294ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 848ms; Index statistics; Entries: 5094244039; DB size: 38915 MB; Avg k-mer size: 3.979878; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 15s 901ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 118; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2271004; Target db start 1 to 13003941; [=================================================================] 2.27M 43m 26s 530ms. 3262.541404 k-mers per position; 476704 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:11937,consumption,consumption,11937,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['consumption'],['consumption']
Energy Efficiency,"7198/clu_redundancy in/DB_in clu/sim1_tmp/7842071913732967198/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 6ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 2ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 117ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 46ms. 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:12652,consumption,consumption,12652,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['consumption'],['consumption']
Energy Efficiency,"73724212/q_orfs_aa_h by mergeResults: 0h 0m 0s 174ms; Time for merging into tmp/2730103712073724212/q_orfs_aa by mergeResults: 0h 0m 0s 182ms; Time for processing: 0h 0m 0s 869ms; kmersearch tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/search/pref --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --kmer-per-seq 21 --mask 0 --ma; sk-lower-case 0 --cov-mode 0 -c 0 --max-seq-len 65535 --pick-n-sim-kmer 1 --split-memory-limit 0 --threads 64 --compressed 0 -v 3 . kmersearch tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/search/pref --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --kmer-per-seq 21 --mask 0 --ma; sk-lower-case 0 --cov-mode 0 -c 0 --max-seq-len 65535 --pick-n-sim-kmer 1 --split-memory-limit 0 --threads 64 --compressed 0 -v 3 . Estimated memory consumption 4 MB; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Process file into 1 parts; Generate k-mers list 0; [=================================================================] 14.93K 0s 32ms. Time for fill: 0h 0m 0s 35ms; Sort kmer ... Time for sort: 0h 0m 0s 39ms; Time to find k-mers: 0h 0m 0s 608ms; Time to sort: 0h 0m 0s 0ms; Time for merging into tmp/2730103712073724212/search/pref by mergeResults: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 729ms; rescorediagonal /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/pref tmp/2730103712073724212/search/reverse_ungapaln --sub-mat nucl:nucleotide.out; ,aa:blosum62.out --rescore-mode 2 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed; 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; [=================================================================] 323 0s 253ms; Time for mergin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:2777,consumption,consumption,2777,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,2,"['Reduce', 'consumption']","['Reduced', 'consumption']"
Energy Efficiency,"74044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time for processing: 4h 41m 10s 259ms; rescorediagonal /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref /export/scratch/SRC-50/8871099322",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:4241,Reduce,Reduced,4241,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['Reduce'],['Reduced']
Energy Efficiency,"744502873/result tmp/18110643841744502873/search_tmp --alignment-mode 3 -s 5.7 --remove-tmp-files 1. prefilter tmp/18110643841744502873/query tmp/18110643841744502873/target tmp/18110643841744502873/search_tmp/5440497380282616509/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.o ut,nucl:nucleotide.out' -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov -mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load -mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 5.7. Query database size: 500 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 20000 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 20.00K 2s 504ms; Index table: Masked residues: 210586; Index table: fill; [=================================================================] 100.00% 20.00K 1s 855ms; Index statistics; Entries: 8552346; DB size: 537 MB; Avg k-mer size: 0.133630; Top 10 k-mers; GQQVAR 190; QLGQRV 110; IHDKNI 105; ALGSGK 105; LLPGKT 102; SGGTLR 84; SGLGRV 75; VGSSST 61; VMHAGS 59; ATADTT 59; Time for index table init: 0h 0m 5s 872ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 500; Target db start 1 to 20000; [=================================================================] 100.00% 500 2s 36ms. 296.967038 k-mers per position; 19293 DB matches per sequence; 0 overflows; 137 sequences passed prefiltering per query sequence; 113 median result list length; 1 sequences wi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:5008,consumption,consumption,5008,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['consumption'],['consumption']
Energy Efficiency,77M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [===============,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:29961,consumption,consumption,29961,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,77M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 1ms; Index table: Ma,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:30038,consumption,consumption,30038,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,"7fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target split mode. Searching through 4 splits; Estimated memory consumption: 149G; Target database size: 152631149 type: Aminoacid; Process prefiltering step 1 of 4. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 38.15M 2m 48s 107ms; Index table: Masked residues: 98253761; Index table: fill; [=================================================================Floating point exception (core dumped); Error: Prefilter died; Error: First search died; Error: taxonomy died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 24f6b52a38cd8cf66d10ce00bf37dc815fef986e; Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GCC 7.5.0 cmake 3.10.2; Server specifications (especially CP",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/473:2151,consumption,consumption,2151,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473,1,['consumption'],['consumption']
Energy Efficiency,"9053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 237; DB size: 488 MB; Avg k-mer size: 0.000004; Top 10 k-mers; LHNWEA	1; NCKEQA	1; VLRCRA	1; VTFMDC	1; RAHQKC	1; KRKVLC	1; ESKRNC	1; KRHLRC	1; GKKFSC	1; HYKKSC	1; Time for index table init: 0h 0m 0s 897ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=================================================================] 6 0s 0ms. 1.337707 k-mers per position; 39 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 473ms; align /ebio/abt3_scratch/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:19127,consumption,consumption,19127,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['consumption'],['consumption']
Energy Efficiency,": 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:4209,Reduce,Reduced,4209,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['Reduce'],['Reduced']
Energy Efficiency,":880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:10378,allocate,allocate,10378,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['allocate'],['allocate']
Energy Efficiency,"; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:2488,allocate,allocate,2488,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['allocate'],['allocate']
Energy Efficiency,"; Time for processing: 0h 0m 0s 111ms; createsubdb tmp//538598962955004214/clu_step0 tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 13ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 2ms; Index statistics; Entries: 1414; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 51ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [=================================================================] 100.00% 239 0s 23ms; [============================================================> ] 92.44% 221 eta 0s; 20.598031 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:15716,consumption,consumption,15716,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['consumption'],['consumption']
Energy Efficiency,"; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any sequence for key 62888288!; Add missing connections; [=================================================================] 100.00% 45.46M 1s 608ms; Time for read in: 0h 0m 28s 571ms; Total time: 0h 0m 40s 655ms; Size of the sequence database: 45461840; Size of the alignment database: 45461840; Number of clusters: 44582196; Writing results 0h 0m 16s 390ms; ```. ## Your Environment. Version with error: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Version without error: 14014cd0ec50049f796f153ea8a72164ff4b8b45. Both are self compiled on the s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:3338,allocate,allocate,3338,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['allocate'],['allocate']
Energy Efficiency,"===========================================================] 516.30K 0s 579ms; Time for merging to q_orfs_aa_h: 0h 0m 0s 661ms; Time for merging to q_orfs_aa: 0h 0m 0s 709ms; Time for processing: 0h 0m 3s 128ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 1.000 . Query database size: 2548633 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 24s 806ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 50s 887ms; Index statistics; Entries: 3111458326; DB size: 27569 MB; Avg k-mer size: 2.430827; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GGQRVAR	38490; LLGPGKT	25908; YDYAIPL	22840; GGRRVAR	21815; PHLGGQR	19799; TPHDFEV	17697; PSLGGQR	13748; FSCSHVV	12988; Time for index table init: 0h 2m 34s 667ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2548633; Target db start 1 to 13003941; [=================================================================] 2.55M 23s 498ms. 7.258993 k-mers per position; 1015 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median r",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:4353,consumption,consumption,4353,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['consumption'],['consumption']
Energy Efficiency,"==========================================================] 100.00% 10.00K 0s 19ms ; Time for merging to q_orfs_aa_h: 0h 0m 0s 0ms; Time for merging to q_orfs_aa: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 27ms; prefilter tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 1 -v 3 . Query database size: 0 type: Aminoacid; Estimated memory consumption: 557M; Target database size: 19482 type: Profile; Index table k-mer threshold: 90 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 100.00% 19.48K 4s 492ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 19.48K 11s 88ms ; Index statistics; Entries: 454766207; DB size: 2633 MB; Avg k-mer size: 111.350382; Top 10 k-mers; RRRRR 1414; QQQQQ 1135; RRRRQ 985; SPPPP 965; QRRRR 962; PPPPS 953; RQRRR 940; RRRQR 927; RHRRR 914; RKRRR 902; Time for index table init: 0h 0m 16s 838ms; Time for processing: 0h 0m 17s 228ms; swapresults tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref_swapped --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 12 --compre",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:4616,consumption,consumption,4616,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947,1,['consumption'],['consumption']
Energy Efficiency,"=] 140.16K 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 35ms; Time for processing: 0h 0m 0s 92ms; align tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/pref_filter2 tmp/16437734971973434362/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 30000000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 36 --compressed 0 -v 3. Compute score and coverage; Query database size: 140160 type: Nucleotide; Target database size: 140160 type: Nucleotide; Calculation of alignments; [============tmp/16437734971973434362/linclust.sh: line 75: 22654 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; ```; ## Context; I have a Fasta with about 140000 sequences which range from a few thousands nucleotides to about 20 millions. The memory consumption is fine throughout the mmseqs steps. But at some point during the align phase, a segmentation fault is thrown. It doesn't seem like a memory problem. I tried with the easy-clust workflow and the cluster module, both of which fail at the same point.; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 11.e1a1c; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): conda latest version.; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; Intel(R) Xeon(R) Platinum 8124M CPU @ 3.00GHz (x36); Memory : 72 GB; * Operating system and version:; Amazon linux 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:4893,consumption,consumption,4893,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['consumption'],['consumption']
Energy Efficiency,"> Also interesting, a lot of over represented k-mers (same prefix/suffix?); > ; > ```; > Query database size: 3083342 type: Nucleotide; > Estimated memory consumption: 12G; > Target database size: 1541671 type: Nucleotide; > Index table k-mer threshold: 0 at k-mer size 15; > Index table: counting k-mers; > [=================================================================] 100.00% 1.54M 2m 38s 193ms; > Index table: Masked residues: 141067; > Index table: fill; > [=================================================================] 100.00% 1.54M 1m 10s 152ms; > Index statistics; > Entries: 516344842; > DB size: 11146 MB; > Avg k-mer size: 0.480884; > Top 10 k-mers; > GGGCTCAGGATTCTG	1282098; > CTGCTCTGGGCGCGT	1167098; > TGAGCTGGGCATGAG	1134437; > AAGTTCCTCACTCGG	1086133; > CTGTAAGCTGCTCGT	966085; > AGCTACATTGATCGC	943599; > CAGCGACACTGCTTG	913837; > CCTCGCACGCCTGAG	883990; > CCTCTGCACTCGCTG	827574; > GAGCTGGAAGCTGGT	791516; > ```. @milot-mirdita . That is correct: these millions of sequences are derived from a small set of common ancestor sequences. In short, they are very similar to one another in some portions.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-2000616856:155,consumption,consumption,155,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-2000616856,1,['consumption'],['consumption']
Energy Efficiency,"@gabrielepozzati It is crucial for single (or small) query sets that the target database is already in memory. If the target database is not in memory, MMseqs2 needs to fetch 100s of GBs each search. The following workflow creates an index and fetches the database into memory and efficiently searches them. mmseqs createdb targetDB.fasta targetDB; mmseqs createindex targetDB tmp ; mmseqs touch targetDB; mmseqs search queryDB targetDB aln tmp --db-load-mode 2. The tool `mmseqs touch` fetches the database into memory and the `--db-load-mode 2` is an optimized way to read the database if the database is already fetched into memory.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/165#issuecomment-463183981:281,efficient,efficiently,281,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/165#issuecomment-463183981,1,['efficient'],['efficiently']
Energy Efficiency,"@linsalrob Thanks for opening this issue. I am not very familiar with snakemake but we intentionally do not produce a single file with these modules since this would cost extra IO and slow down the software. Why do you need exactly one output file? The modules that produce output for consumption by other software (e.g. `convertalis`) already produce single files. As a workaround for your Snakemake issue, you can check if a process was successfully by checking if the `.dbtype` file exists. If you want a set of stickers (see https://twitter.com/thesteinegger/status/1201076220957315074), send your address to themartinsteinegger gmail com",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/292#issuecomment-604419252:285,consumption,consumption,285,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/292#issuecomment-604419252,1,['consumption'],['consumption']
Energy Efficiency,"@milot-mirdita is there any update on this issue?. I'm on an Intel Mac (multithreading disabled) with MMseqs2 release 15.6f452 and still seeing very strange behavior from this pipeline. Using two protein FASTA files (~225 normal-length proteins each), where there are many homologs spanning the full range of percent identities and the following command:. ```; mmseqs easy-linsearch aa_1.fasta aa_2.fasta easy-linsearch-out.tsv mmseqs_tmp; ```. I get an empty output file, despite a really nice set of outputs from the `easy-search` pipeline in just a few seconds. Even stranger, when I try to make `easy-linsearch` only find high-identity HSPs, with the following:. ```; mmseqs easy-linsearch aa_1.fasta aa_2.fasta easy-linsearch-out.tsv mmseqs_tmp --min-seq-id 0.8 -c 0.8; ```. The memory utilization as profiled in the Apple `Activity Monitor` very quickly exceeds 250 GB (system only has 64 GB, so I think this means we are in disk swap territory), and I'm not sure how long it would take to finish - I killed the job after about a half hour of waiting. Input files are attached, in case you have any interest in attempting to reproduce the issue. [aa_1.fasta.gz](https://github.com/user-attachments/files/16267985/aa_1.fasta.gz); [aa_2.fasta.gz](https://github.com/user-attachments/files/16267986/aa_2.fasta.gz)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273#issuecomment-2233599834:838,Monitor,Monitor,838,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273#issuecomment-2233599834,1,['Monitor'],['Monitor']
Energy Efficiency,@nick-youngblut we check the compatibility of the input database in each module. I hope this reduces usability problems.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/155#issuecomment-513131346:93,reduce,reduces,93,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/155#issuecomment-513131346,2,['reduce'],['reduces']
Energy Efficiency,According to NCBI they clustered NR at 90% id and 90% cov. I was wondering what would be the correct cluster mode & cover mode to reproduce the clustering?. >Reduced redundancy. Faster searches. More diverse proteins and organisms in your BLAST results. Check out our new ClusteredNR database – derived from the default BLAST protein nr database by clustering sequences at 90% identity / 90% length ([details below](https://ncbiinsights.ncbi.nlm.nih.gov/2022/05/02/clusterednr_1/#more-about-clusters)). Get quicker results and access to information about the distribution of your hits across a wider range of organisms and evolutionary distances.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/651:158,Reduce,Reduced,158,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/651,1,['Reduce'],['Reduced']
Energy Efficiency,"Ah that indeed makes sense. This is something where we don't have good automatic parameter choices yet. Our prefiltering data structure allocates alphabetSize^kmerSize * 8 byte (4^15*8=8GB).; The specificity of 15-mers for a database of 10 entries is absolute overkill obviously, but its the default set value. Reducing the k-mer size to from 15 to 14 (`-k 14`) will already fix the issue. For your very short sequences you might want to reduce it even further. We will try to think of something to automatically set a sensible k-mer size for a given database size, like we do for protein searches.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/253#issuecomment-562209452:136,allocate,allocates,136,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253#issuecomment-562209452,2,"['allocate', 'reduce']","['allocates', 'reduce']"
Energy Efficiency,"All tests pass on my PowerEdge 32-ht system with MMSEQS_NUM_THREADS=16. . Also, I had forgotten that this machine has vmem limits, so I was actually running with about 1G/thread before. Exceprt from build:. [ 3% 10/228] /usr/bin/c++ -I/usr/local/include -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/tinyexpr -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/microtar -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/simde -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/simd -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/gzstream -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/alp -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/cacode -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/ksw2 -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/xxhash -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/ips4o -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -fsigned-char -D_WITH_GETLINE -std=c++1y -stdlib=libc++ -MD -MT lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o -MF lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o.d -o lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o -c /usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/cacode/lambda_calculator.cpp. ... [100% 228/228] : && /usr/bin/c++ -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -lpthread -fstack-protector-strong -fsigned-char -D_WITH_GETLINE -std=c++1y -stdlib=libc++ -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp=libomp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm /usr/local/lib/libzstd.a lib/microtar/libmicrotar.a -lz -lbz2 -lomp && :",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869007866:21,Power,PowerEdge,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869007866,1,['Power'],['PowerEdge']
Energy Efficiency,"Also interesting, a lot of over represented k-mers (same prefix/suffix?). ```; Query database size: 3083342 type: Nucleotide; Estimated memory consumption: 12G; Target database size: 1541671 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [=================================================================] 100.00% 1.54M 2m 38s 193ms; Index table: Masked residues: 141067; Index table: fill; [=================================================================] 100.00% 1.54M 1m 10s 152ms; Index statistics; Entries: 516344842; DB size: 11146 MB; Avg k-mer size: 0.480884; Top 10 k-mers; GGGCTCAGGATTCTG	1282098; CTGCTCTGGGCGCGT	1167098; TGAGCTGGGCATGAG	1134437; AAGTTCCTCACTCGG	1086133; CTGTAAGCTGCTCGT	966085; AGCTACATTGATCGC	943599; CAGCGACACTGCTTG	913837; CCTCGCACGCCTGAG	883990; CCTCTGCACTCGCTG	827574; GAGCTGGAAGCTGGT	791516; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999016296:143,consumption,consumption,143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999016296,1,['consumption'],['consumption']
Energy Efficiency,"And FYI, SLICEPROFILE succeeded on my 4-core Phenom workstation. The failure occurred on a 16C/32T PowerEdge server. Full output from another run with ```|& tee log``` attached. [log.gz](https://github.com/soedinglab/MMseqs2/files/6717081/log.gz)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868563538:99,Power,PowerEdge,99,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868563538,1,['Power'],['PowerEdge']
Energy Efficiency,"As the data that can be processed with mmseqs is generally quite large. The tsv output is usually very large. I wonder if it would be difficult to create hdf files or other more efficient file formats e.g. parquet to store the data. . Concretely, I'm thinking about the output of linclust. But there it would only make sense if the cluster id would be a categorical or so. What do you think?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/524:178,efficient,efficient,178,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/524,1,['efficient'],['efficient']
Energy Efficiency,"Based on the graph below, which I pulled from the MMSeqs2 [paper supplement](https://www.biorxiv.org/content/biorxiv/suppl/2017/06/07/079681.DC5/079681-1.pdf), I was expecting my query to take less than an hour (even with higher sensitivity). However, it seems to be taking much, much longer. Additionally, it seems to be hanging on the stage after `Index table: fill` is printed, after printing a good portion of the progress bar. . ![image](https://github.com/soedinglab/MMseqs2/assets/49450966/7ed7b5b0-8236-477c-93f1-904cb461d691). My query database is only 14 sequences in size (which I realize is much smaller than the MMSeqs2 program is intended to work with). The target database, which is the result of splitting all of GTDB into sub-datasets, is about 6 million sequences (6,263,739 to be exact). This is the command I executed. . `mmseqs easy-search -s 7 query.fasta targetDB_split result.m8`. Here is some information about my computing environment. I should also note that I am submitting the job using ``slurm``, and allocated 50 GB of memory (which is less than the 23 GB predicted by the program). . ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Thread(s) per core: 1; Core(s) per socket: 16; ```; It is possible that this is just a slurm issue, or something else going on which is not related to MMSeqs -- I just wanted to double-check that there is nothing glaringly wrong with this workflow. Also, thank you so much for how quickly you respond to issue requests! I really appreciate it.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805:1031,allocate,allocated,1031,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805,1,['allocate'],['allocated']
Energy Efficiency,"Both tools ""linclust"" and ""cluster"" are uses more memory if you increase the amount of threads. The increase in memory consumption in linclust should not be too much. In Cluster it can increase the memory consumption substantial.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/69#issuecomment-369613603:119,consumption,consumption,119,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/69#issuecomment-369613603,2,['consumption'],['consumption']
Energy Efficiency,"CA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter tmp/5233442526903138997/profileDB Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 75233 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 . Query database size: 75233 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 75233 type: Aminoacid; Index table k-mer threshold: 91 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 75.23K 0s 271ms ; Index table: Masked residues: 52417; Index table: fill; [=================================================================] 100.00% 75.23K 0s 415ms ; Index statistics; Entries: 23045881; DB size: 620 MB; Avg k-mer size: 0.360092; Top 10 k-mers; GGNQHH	4218; NTSHHH	3502; NYHFDY	2183; LEVYHY	2100; VTDHHH	1805; TPMRHS	1770; GWNHFP	1732; LIWRGT	1732; GLYIHL	1684; WAHVSS	1682; Time for index table init: 0h 0m 1s 16ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 75233; Target db start 1 to 75233; [=================================================================] 100.00% 75.23K 8m 43s 269ms . 3286.821735 k-mers per position; 713534 DB matches per sequence; 1 overflows; 26270 sequences passed prefiltering per query sequence; 26950 median r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:4002,consumption,consumption,4002,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['consumption'],['consumption']
Energy Efficiency,Can not allocate memory in findMissingLinks,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/613:8,allocate,allocate,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/613,1,['allocate'],['allocate']
Energy Efficiency,"Changing the alphabet size will cause it to use MMseqs2's built-in alphabet reduction. Since you seem to be trying various reduced alphabets I assume that you don't want to it to interfere with your procedure. I didn't think about this last time, but by default linclust does a reduction to a 13 letter alphabet. You should set the alphabetsize to 21 (20+X) so it does not interfere. One more thing for linclust: You should try to also increase `--kmer-per-seq` to about `80` to generate more k-mers per sequence. This does increase sensitivity.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1827942507:123,reduce,reduced,123,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1827942507,1,['reduce'],['reduced']
Energy Efficiency,Compute multihit combined pval more efficiently,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/135:36,efficient,efficiently,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/135,1,['efficient'],['efficiently']
Energy Efficiency,Could not allocate entries memory in IndexTable::initMemory,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/49:10,allocate,allocate,10,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/49,1,['allocate'],['allocate']
Energy Efficiency,"Dear MMseqs2 developers,; Thank you for making this excellent tool available. I'm using MMseq2s on an HPC cluster using the Slurm scheduler, and I'm trying to determine the best way to utilize as many cores per node as possible; ## Expected Behavior; MMSeqs2 launches 1 MPI task per node, and uses OpenMP to spawn as many threads as there are cores available on each node (48); ## Current Behavior; 1 MPI task per node is launched, but the number of threads running on any node is capped at 12, regardless of what value argument to `--threads` is provided; ## Steps to Reproduce (for bugs). Job script:. ```; #!/usr/bin/env bash. #SBATCH --job-name=mmseqs; #SBATCH --output=mmseqs_gcc12_test2.log; #SBATCH -N 8; #SBATCH --ntasks-per-node=1; #SBATCH --cpus-per-task=48; #SBATCH --time=08:00:00; #SBATCH -p medium. module load slurm; module load openmpi/gcc12.1.0/4.1.4. export PATH=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45/bin:$PATH. DBDIR=/lustre/projects/carlson-group/mmseqs2-project/DBs. RUNNER=""mpirun -pernode -np 8"" mmseqs search human_prot.db $DBDIR/UniRef50 human_prot_results_test2 ./tmp; ```. ## MMseqs Output (for bugs); ```. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:130,schedul,scheduler,130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['schedul'],['scheduler']
Energy Efficiency,"Dear colleagues,. I'm Paul DE BOISSIER, PhD student at the IBDM, in Marseille, France.; I'm developing a pipeline in which the first step is an orthologous search. For that, I already implemented a RBH search and an access to OrthoDB.; My problem is that OrthoDB is not quite complete and the RBH took a lot of time to run.; I discussed with my supervisor, Bianca Habermann, and we think that using MMseqs2 can help us a lot to reduce our running time. So, I have deeply read the documentation but maybe I missed something. My pipeline is running with refseq as the main database, especially for the RBH, with all the files in .pal, .pos,...; My problem is that I want to use my already existing blast database with MMseqs2 but I don't find any options to create the MMseqs2 database from such database.; Obviously, I read about the function ""databases"" which downloads the database, and I can use NR or UniProtKB but I don't want to redownload a whole database as I have not a lot of space in our servers, especially as we share it among the team. Do you know how I can manage it please ?. Best. DE BOISSIER Paul; PhD Student - Computational Biology Group; IBDM – Institut de Biologie du Développement de Marseille; paul.de-boissier@univ-amu.fr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/395:428,reduce,reduce,428,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/395,1,['reduce'],['reduce']
Energy Efficiency,"Dear mmseqs2 developvers,. I have a list of thousands of subject - query fasta pairs, and I would like to run mmseqs to align each of these pairs in a way that each sequence is only aligned to its pair. This is how my list looks:. ```; S10CNODE_1.fasta S1CNODE_25.fasta; S10CNODE_2.fasta S2CNODE_8.fasta ; S10CNODE_3.fasta S5CNODE_11.fasta ; S10CNODE_4.fasta S3CNODE_7.fasta; S10CNODE_5.fasta S6CNODE_10.fasta; ```; Is there an efficient way to perform these 1:1 alignments? Could I create a database that contains all sequences and then align a database subentry?. I am trying to avoid aligning all against all.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/813:428,efficient,efficient,428,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/813,1,['efficient'],['efficient']
Energy Efficiency,Did the --max-seqs reduce the difference between blastp and MMseqs2 a lot? ; Did you also use the '-e 0.1'? . Could you give us some examples of sequences that can not be found please?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407058291:19,reduce,reduce,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407058291,1,['reduce'],['reduce']
Energy Efficiency,Did you try increasing your compute?. `Estimated memory consumption: 79G` with total memory 100GB should ideally work but I think there might be some portion of RAM being devoted to other tasks and that might make the OS terminate it.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/540#issuecomment-1112883896:56,consumption,consumption,56,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540#issuecomment-1112883896,1,['consumption'],['consumption']
Energy Efficiency,Do you try to cluster the database or just to reduce sequences that have exactly the same lenght? Hashclust can just reduce sequences of the same lenght while the clustering can reduce sequence of different lenght.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/6#issuecomment-263867708:46,reduce,reduce,46,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/6#issuecomment-263867708,3,['reduce'],['reduce']
Energy Efficiency,Does the issue also happen if you don't set that? What linux kernel version are your nodes running?; I am super surprised that linux seems to be enforcing this limit. We should be able to allocate a lot more virtual memory than physically available one.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741764936:188,allocate,allocate,188,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741764936,1,['allocate'],['allocate']
Energy Efficiency,ERROR: Set 0 has more elements than allocated (1)!,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/28:36,allocate,allocated,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/28,1,['allocate'],['allocated']
Energy Efficiency,Error: Could not allocate memory by memalign.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/29:17,allocate,allocate,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/29,1,['allocate'],['allocate']
Energy Efficiency,"Especially for this search you might want to run the new exhaustive search mode available through the `--slice-search` parameter. MMseqs2 has a limitation on the number of reported prefiltering hits (by default 300 with `--max-seqs`). Increasing this parameter could explode the disk space use though. We developed this exhaustive search mode to be more efficient with disk use, but trading off some runtime for that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-594067890:354,efficient,efficient,354,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-594067890,1,['efficient'],['efficient']
Energy Efficiency,"From Dell PowerEdge:. ps axw:. ```; 579 0 I+ 0:00.01 /bin/sh -e ./run_regression.sh /usr/local/bin/mmseqs ./Temp; 1206 0 I+ 0:00.00 /bin/sh -e /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/regression/run_nucl; 1217 0 I+ 0:00.02 /bin/sh -e /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/NUCLNUCL_TRANS; 1225 0 I+ 0:07.71 /usr/local/bin/mmseqs offsetalignment /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1; ```; lldb:. ```; (lldb) process attach --pid 1225; Process 1225 stopped. Executable module set to ""/usr/local/bin/mmseqs"".; Architecture set to: x86_64--freebsd12.2.; (lldb) bt; * thread #1, name = 'mmseqs'; * frame #0: 0x000000080086f68c libthr.so.3`___lldb_unnamed_symbol190$$libthr.so.3 + 92; frame #1: 0x000000080086ccab libthr.so.3`___lldb_unnamed_symbol159$$libthr.so.3 + 491; frame #2: 0x000000080092ea3e libomp.so`___lldb_unnamed_symbol30$$libomp.so + 302; frame #3: 0x000000080096faaa libomp.so`___lldb_unnamed_symbol400$$libomp.so + 698; frame #4: 0x000000080096dd5c libomp.so`___lldb_unnamed_symbol392$$libomp.so + 604; frame #5: 0x000000080096aca7 libomp.so`___lldb_unnamed_symbol384$$libomp.so + 1095; frame #6: 0x0000000800966434 libomp.so`__kmpc_barrier + 308; frame #7: 0x0000000000408496 mmseqs`ips4o::OpenMPThreadPool::Sync::barrier(this=0x0000000802849038) const at thread_pool.hpp:63:1; frame #8: 0x0000000000436525 mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, bucket_start=0x0000000802842000, shared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, u",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:10,Power,PowerEdge,10,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769,1,['Power'],['PowerEdge']
Energy Efficiency,"GitHub Markdown turns them into a quote. . Everything regarding this file is alright though. That's a new feature to reduce IO that confused me. ; Not sure what else might be going wrong here though. Could you try the latest git version? Also if you rerun, could you save the full log? I am a bit at a loss on how to recreate the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/265#issuecomment-574721053:117,reduce,reduce,117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265#issuecomment-574721053,1,['reduce'],['reduce']
Energy Efficiency,"HDIR/queryT.mmsq.outDB $SCRATCHDIR > $SCRATCHDIR/test.log. File $SCRATCHDIR/queryT.mmsq has 10000 lines, which I guess should confirm it has 10000 sequences. . prefilter /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 4.0 . Query database size: 313 type: Aminoacid; Estimated memory consumption: 979M; Target database size: 313 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 219ms; Time for processing: 0h 0m 6s 996ms; align /scra",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:975,consumption,consumption,975,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497,1,['consumption'],['consumption']
Energy Efficiency,"HI, I am getting some memory errors when running the cluster module. The amount of memory I have on my cluster is 100GB and the number of threads is 8. When I run the cluster command as below. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/238:375,allocate,allocate,375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238,1,['allocate'],['allocate']
Energy Efficiency,"Having problems with this currently. Normal output from mmseqs cluster is. > MMseqs Version: 	8c0c7fb86ce154b236d6fe294811de3b09850fba; > Sub Matrix 	blosum62.out; > Alphabet size 	13; > Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (4160 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > Time for fill: 0 h 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Time for processing: 0 h 0 m 0s; > Rescore diagonals. However, I get the following error when there are some identical sequences:. > MMseqs Version: 	8c0c7fb86ce154b236d6fe294811de3b09850fba; > Sub Matrix 	blosum62.out; > Alphabet size 	13; > Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (3200 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > ~/tmp/2230240821590219627/linclust/109119296912",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282:572,Reduce,Reduced,572,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282,1,['Reduce'],['Reduced']
Energy Efficiency,"Hello Milot, thanks a lot for the very fast reply.; That would maybe explain why it worked when splitting the sequences.; Just to confirm, should I test using latest commit?; 'Allocate correct amount of memory for DBReader::serialize'",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109#issuecomment-410698450:176,Allocate,Allocate,176,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109#issuecomment-410698450,1,['Allocate'],['Allocate']
Energy Efficiency,Hello! I used MMseqs2 concatdb to concatenate two reference databases (NR and MMETSP) and everything ran fine with Metaeuk (predictexons and reduceredundancy) but when I try to do unitesetstofasta it says the db_h file is not there. I realise when I did concatdb it did not generate a concatdb_h file or a concatdb_h.dbtype or concatdb_h.index.; I tried just manually concatenating the two _h files (NR_h and MMETSP_h) and that seems to work but it also asks for the .index file and I don't really know what that contains or how to generate it. ; Help please? Thank you!!,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/537:141,reduce,reduceredundancy,141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/537,1,['reduce'],['reduceredundancy']
Energy Efficiency,"Hello!. I have a query and target database set up, but when I try to run `mmseqs search` (specific command was `mmseqs search queryDB targetDB resultDB tmp`), the program dies at the prefilter step. The target database is all of GTDB, and the query database is only a few protein sequences. Here is the output I got. ```; Query database size: 17 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 138G; Target database size: 200439660 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [==============tmp/821198248238681531/blastp.sh: line 135: 102571 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died. ```; I am wondering if this might be a memory issue? Are there any other common causes? Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/799:427,consumption,consumption,427,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/799,1,['consumption'],['consumption']
Energy Efficiency,"Hello, . I've been encountering an issue for creating index of ColabDB. It looks like it is a memory consumption issue. Could you help me with this matter please? ; Thank you in advance for your help. . Sincerely,; Ilyes. ## Expected Behavior; An index file of the colabfold_envdb_202108_db is computed for a fast read-in. ## Current Behavior; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Steps to Reproduce (for bugs); I am using the following commands to build the database as indicated here: https://colabfold.mmseqs.com/; Uniref30 was successful but not ColabDB. . `wget https://raw.githubusercontent.com/sokrypton/ColabFold/main/setup_databases.sh`; `chmod +x setup_databases.sh`; `./setup_databases.sh database/`. ## MMseqs Output (for bugs). + ARIA_NUM_CONN=8; + WORKDIR=database/; + cd database/; ++ pwd; + export PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + STRATEGY=; + hasCommand aria2c; + command -v aria2c; + hasCommand curl; + command -v curl; + STRATEGY=' CURL'; + hasCommand wget; + command -v wget; + STRATEGY=' CURL WGET'; + '[' ' CURL WGET' = '' ']'; + '[' '!' -f COLABDB_READY ']'; + mmseqs createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1; createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Vers",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/583:101,consumption,consumption,101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583,1,['consumption'],['consumption']
Energy Efficiency,"Hello,. I downloaded and set up the Uniref100 database for the taxonomy pipeline according to the instructions, but when I run the taxonomy command, the output says `Computed index is too large. Avoid using the index`. It also says `split was set to 5 but at least 8 are required. Please run with default paramerters` even though I never adjusted the default. Are these things I should be worried about, and could I be doing something different to make this search more efficient? I know it is a huge database. Full traceback of commands below. Thank you in advance,; -Matt. ## Commands to set up the taxonomy database; ```; mmseqs databases UniRef100 uniref100.mmseqs tmp. mmseqs createtaxdb uniref100.mmseqs tmp --threads 8; createtaxdb uniref100.mmseqs tmp --threads 8. mmseqs createindex uniref100.mmseqs tmp --threads 8; createindex uniref100.mmseqs tmp --threads 8; ```. ## Search commands; ```; mmseqs createdb N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.faa N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db. mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_42; 5.proteins.taxonomy temp --threads 8; ```. ## Full traceback of search command; ```; mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8; Tmp temp folder does not exist or is not a directory.; Create dir temp; taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8. MMseqs Version: ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/278:470,efficient,efficient,470,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278,1,['efficient'],['efficient']
Energy Efficiency,"Hello,. I'm trying to run the search algorithm on a database comprised of over 20k sequences against the uniref100 db. This is the command I'm using and the version, followed by the error after approx. 18 minutes in the run. ##. search ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --split-memory-limit 150G. MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b. mem_align could not allocate memory.; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/3121500954244133633/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; Error: Alignment died. ##. I've tried increasing the memory, thinking this could be the issue, but so far the problem persists. Any help is appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/510:430,allocate,allocate,430,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/510,1,['allocate'],['allocate']
Energy Efficiency,"Hello,. Just to report that this issue keeps happening with short sequences in version `14-7e284`. Here is the log file section:; ```; Query database size: 1 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 1 0s 5ms; Index table: Masked residues: 52; No k-mer could be extracted for the database OG29842_tmp/9235789383789574915/clu_tmp/8036944701986152555/input_step_redundancy.; ```. I do not know if it has been addressed previously, but I have the feeling it's due to short sequences, mine are 55-60 AAs long.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-1781102918:192,consumption,consumption,192,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-1781102918,1,['consumption'],['consumption']
Energy Efficiency,"Hello. I am running MMSEQS through the SLURM job scheduler on our institute cluster. In the mmseqs SEARCH command line of my SLURM script, I specify a temporary directory on the /tmp of the compute node. However, during execution, I have a file named like ""core.181135"" which is created and which reaches a phenomenal size (>400GB) in the folder where my slurm script is located and from where I launch the sbatch command. The ""181135"" number corresponds to the process id of the mmseqs job on the compute node. I was wondering if anyone around here could have any idea of the origin of this bizarre behavior of the program. The command line is like (I also attach the SLURM script to this post):. `mmseqs search /shared/projects/phycovir/JGI/MMSEQS/ScafRef-ALLDATES.COASSEMBLY.lgmin2000.pep.mms /shared/bank/nr/current/mmseqs/nr.mmdb /shared/projects/phycovir/JGI/MMSEQS/NR/ScafRef-ALLDATES.COASSEMBLY.lgmin2000.pep_VS_nr.mms.rsltDB /tmp/tmp_mmseqs.181126 --remove-tmp-files true --threads 64 -a -e 1E-5 -v 3`. I hope it's clear enough; Thanks for the help; Guillaume. ## Your Environment; mmseqs2/10-6d92c. [MMSEQ-SEARCH-69.SLURM.txt](https://github.com/soedinglab/MMseqs2/files/3956903/MMSEQ-SEARCH-69.SLURM.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/257:49,schedul,scheduler,49,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/257,1,['schedul'],['scheduler']
Energy Efficiency,"Hello; I have many (~200 million) multiple sequence alignments in the form of FASTA files that I would like to use as queries against a target dataset of about 6 billion protein sequences in a PSI-BLAST fashion. It is my understanding that I can convert the FASTA file into Stockholm format and then create a profileDB and use the profileDB to search the dataset (after it has been converted with `mmseqs createdb`). I imagine it would be more efficient if it I combined the queries into a queryDB before doing the search, but I can't really figure out how to do this. Would I have to combine all the MSA's into a massive file Stockholm file before creating the queryDB?; Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/369:444,efficient,efficient,444,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/369,1,['efficient'],['efficient']
Energy Efficiency,"Hi Salvatore,. Thanks a lot for finding this bug!; I think I know why it failed (allocated 4 bytes to few). Would you mind trying it again?; I am also verifying in Valgrind that everything is okay now, but that might take a while.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109#issuecomment-410696690:81,allocate,allocated,81,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109#issuecomment-410696690,1,['allocate'],['allocated']
Energy Efficiency,"Hi There,. I'm having problems trying to install fix #309. https://github.com/soedinglab/MMseqs2/pull/309. When trying to checkout the fix code I get an error.; https://github.com/soedinglab/MMseqs2/pull/309/commits/bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; It appear that this commit is not part of the mmeseq main branch. . see below:. # git clone https://github.com/soedinglab/MMseqs2.git; Cloning into 'MMseqs2'...; remote: Enumerating objects: 284, done.; remote: Counting objects: 100% (284/284), done.; remote: Compressing objects: 100% (206/206), done.; remote: Total 34346 (delta 175), reused 143 (delta 78), pack-reused 34062; Receiving objects: 100% (34346/34346), 27.68 MiB | 13.72 MiB/s, done.; Resolving deltas: 100% (26632/26632), done.; Checking out files: 100% (968/968), done. # git checkout bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; fatal: Not a git repository (or any parent up to mount point /powerapps); Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set). I also tried to download the SIMD as a sub module.; https://github.com/simd-everywhere/simde; And integrated it with mmeseq with no success. Can you please share a guide on how to install mmesq2 from source with this fix. Your help is much appreciated. Thanks. BR,; Eyal.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464:914,power,powerapps,914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464,2,['power'],['powerapps']
Energy Efficiency,"Hi all, thanks for this MMseqs2 that seems very efficient. Unfortunately it seems to not be willing to run on my machine : . mmseqs easy-cluster /Users/s/Documents/Albatros/protein//short_name-Group/true_plus300_proteins-13-strains_shortname-group.fa /Users/s/Documents/short_name-Group/clusterRes /Volumes/s/tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1; Create directory /Volumes/s/tmp; easy-cluster /Users/s/Documents/Albatros/short_name-Group/true_plus300_proteins-13-strains_shortname-group.fa /Users/s/Documents/Albatros/protein/short_name-Group/clusterRes /Volumes/s/tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1. MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	1; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	16; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:48,efficient,efficient,48,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['efficient'],['efficient']
Energy Efficiency,"Hi! I also have this problem with slow searches after loading the DB to memory. I have 135,301,051 sequences in the targetDB (uniref90) and so far only trying to use one search sequence. I am using 40 threads and have more memory than the estimated memory consumption. I am using -s 1 and --db-load-mode 3, after doing touchdb. The database was automatically divided 17 splits. In 10 mins, the prefiltering step did not even finish with the first split. Is this the expected behavior? Is it only for the 1st sequence that takes too long? Do you have any suggestion to speed up the search?. The extended prefilter command:; `prefilter targetDB /vol/ek/share/alphafold/databases/uniref90/uniref90.idx /dev/shm//6569854898554735840/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 3 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 1.0`. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-896539468:256,consumption,consumption,256,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-896539468,1,['consumption'],['consumption']
Energy Efficiency,"Hi, I am in the process of building a searchable database of antibody and T cell receptor repertoires (here, a ""repertoire"" is a set of antibody or TCR sequences from a single blood sample from a single donor). Searches are performed using mmseqs, with each repertoire stored as a mmseqs DB. So far, the search function is working nicely. Next, I'd like to implement a clustering option. My idea was to allow a set of repertoire DBs to be selected and clustered using linclust. My questions are: . 1. can either mergedbs or concatdbs be used to combine a set of DBs for clustering by linclust?; 2. is there a more efficient strategy than combining the individual DBs? . Each DB is typically tens of thousands of sequences or more with typical length ~40 amino acids (i.e. just the three CDR regions concatenated; not full-length protein). Thanks in advance for your help! ; -Daron",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/519:614,efficient,efficient,614,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/519,1,['efficient'],['efficient']
Energy Efficiency,"Hi, am using `mmseqs search` and I want to estimate the peak RAM consumption for my uniref90 database. I found a formula for the prefiltering step in your [wiki](https://github.com/soedinglab/mmseqs2/wiki#memory-consumption) and noticed that either your example or your formula is not incorrect:. ```; M = (7 * N * L + 8 * a^k) byte; where; N = Number of sequences; L = Average sequence length; a = alphabet; k = k-mer size; ```. You wrote that using a UniProtKB database with 55 million sequences with an average length of 350 requires about 71 GB of RAM.; However, when I calculate just the first term of your formula (7*N*L), I get 134.75 GB. Can you tell me if the formula or the example is wrong?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/808:65,consumption,consumption,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/808,2,['consumption'],['consumption']
Energy Efficiency,"Hi,. I am using mmseqs2 for the taxonomy assignment using NR database. However, Estimated memory consumption is 2T. Is that normal? Also, my input is already protein. My another question is about the speed. Is there any way to speed it up?. ```; MMseqs Version: 14.7e284; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [===================================; Time for merging to BH193L-2_S20_database_h: 0h 0m 0s 80ms; Time for merging to BH193L-2_S20_database: 0h 0m 0s 85ms; Database type: Aminoacid; Time for processing: 0h 0m 17s 880ms; Create directory tmp_BH193L-2_S20; taxonomy --lca-mode 3 --threads 36 -e 0.0001 --tax-lineage 1 -s 3 --lca-ranks species,genus,family,order,class,phylum,kingdom,superkingdom BH193L-2_S20_database NR BH193L-2_S20.result tmp_BH193L-2_S20. MMseqs Version: 14.7e284; ORF filter 1; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Taxonomy output mode 0; Majority threshold 0.5; Vote mode 1; LCA ranks species,genus,family,order,class,phylum,kingdom,superkingdom; Column with taxonomic lineage 1; Compressed 0; Threads 36; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.0001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed sub",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/678:97,consumption,consumption,97,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678,1,['consumption'],['consumption']
Energy Efficiency,"Hi,. I really like Linclust, which makes it possible to cluster genes within linear time. For my dataset with 1.1G genes, it seems impossible to get it done by using CD-HIT. Linclust opens a door to cluster genes at this scale. After couple of trials, I have a little concern with the sensitivity. First, I used Linclust to cluster my genes. Around 1.2% genes were reduced. This ratio seems a little low compared to the results by CD-HIT, which reduced ~10% genes.; Then I splited the results of Linclust and used CD-HIT to double check the results. To my suprise, a further ~9.5% genes were reduced. So it seems the sensisitivity of Linclust may be an issue. I wondered if there is a way to improve sensitivity. The commands I have tested are as follows. I tried to adjust --kmer-per-seq to 80. The results were exactly the same with the default value. BTW, average protein length is 110aa. Appreciate. mmseqs linclust all_protein_merge_95.db all_protein_final_95 tmp --threads 100 --cov-mode 1 -c 0.9 --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 1T&& \. mmseqs createsubdb all_protein_final_95 all_protein_merge_95.db all_protein_final_95_rep && \. mmseqs convert2fasta all_protein_final_95_rep all_protein_final_95_rep.fasta. mmseqs linclust all_protein_merge_95.db all_protein_final_95_m80 tmp --threads 50 --cov-mode 1 -c 0.9 --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 600G --kmer-per-seq 80 && \. mmseqs createsubdb all_protein_final_95 all_protein_merge_95.db all_protein_final_95_m80_rep && \. mmseqs convert2fasta all_protein_final_95_rep all_protein_final_95_m80_rep.fasta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365:365,reduce,reduced,365,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365,3,['reduce'],['reduced']
Energy Efficiency,"Hi,. When I run `createdb; createindex` on a fasta DB file, I generally observe the end result (all the generated output files together) is roughly ~10x bigger than the input fasta file. Most of it is the .idx files generated by `createindex`. The only way I got mmseqs to run fast is by using `db_load_mode=2`, getting the entire target DB in memory at the same time. Running `mmseqs search` efficiently against a large DB thus presents really large memory requirements. ; Is there any way around it (either currently, or planned)? E.g. searching against a compressed version of the DB?. Thank you!; Kuba",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/687:393,efficient,efficiently,393,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/687,1,['efficient'],['efficiently']
Energy Efficiency,"Hi,; I am new to MMSeqs2. It is really a good tool. However, I have 2 queries, may be basic too. But I want your opinions.; In an attempt to build a set of 30-90% sequence similarity, I removed the redundant hits myself firstly and then deployed a minimum sequence identity threshold of 30% and coverage 1 (All 92 input sequences are close homologues and so I want to avoid the partial match to build the good set), it resulted in 52 hits. So, now as you are guiding, the multiple resultant cluster sets have the sequence identity lesser than 30%, but the 52 hits share a sequence identity > 30%. Is this correct that this way my reduced set of 52 hits contains the sequences that are 30-90% identical?. Further, why is it that for another sequence-group, the resultant set spans the same 45 sequences for both 30% and 90% cutoffs. So, does it mean that the length of atleast 1 representative sequence is bigger and it spans multiple sequences in either of these ranges to result in the same set? How should this result be defined?; Thanks for your clarifications.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/173:630,reduce,reduced,630,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/173,1,['reduce'],['reduced']
Energy Efficiency,"Hi,; I was trying to generate the index files of a huge database. To be precise the nr database from blast. It creates the database without problems but when I run the createindex module mmseqs2, it stops with the error. Could not allocate entries memory in IndexTable::initMemory. I'm aware that this is not a bug but the computer I'm trying to run it on runs out of memory. It processes all sequences though and stops right at the end when the index files should have been written. . I still can search the resulting database, its just indexing the database on the fly. The computer has 64 Gb of memory, which is used in the process to 94% before swap is used. Now my question. ; Is there anything I can do, except of extending the hardware to make this work? ; In future I would set the -s parameter to 8 as this gives about the same sensitivity as blast?; Would this further increase the memory usage?. Thank you in advance. Christoph. ## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Could not allocate entries memory in IndexTable::initMemory. ## Context; createindex module fails . ## Your Environment; 64 bit latest debian linux ; 24 cpus; 64 gb of RAM; latest git hub version self compiled with cmake.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/49:231,allocate,allocate,231,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/49,2,['allocate'],['allocate']
Energy Efficiency,"Hi,; Thanks for your quick response. Anyhow the server had 35GB free memory.; Meanwhile we will try downloading the database using the database command. Thanks!. On Thu, 1 Apr, 2021, 7:10 pm Milot Mirdita, ***@***.***>; wrote:. > How much RAM does your server have? It seems like it ran out of RAM during; > construction of the database.; >; > You can try creating a NR with the databases command, it uses a slightly; > more efficient procedure than createtaxdb to create this mapping.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/soedinglab/MMseqs2/issues/431#issuecomment-811916088>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ATPTCL4PAS3IIYFWQZJIEHLTGRZV7ANCNFSM42GMDBGQ>; > .; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/431#issuecomment-812985934:425,efficient,efficient,425,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/431#issuecomment-812985934,1,['efficient'],['efficient']
Energy Efficiency,"Hi. ## Expected Behavior; When using `taxonomy` to annotate a contig, mmseqs2 should gracefully exit if there are not hits when doing the search; ## Current Behavior. At the moment it exits with an error when `Query database size: 0` ; Full log [here](https://gist.github.com/genomewalker/e5b05deb965660e275a39a8153dab9e9); ```; Query database size: 0 type: Aminoacid; Estimated memory consumption: 151G; Target database size: 43032414 type: Aminoacid; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 43.03M 4m 11s 993ms; Index table: Masked residues: 327874438; Index table: fill; [=================================================================] 43.03M 11m 31s 69ms; Index statistics; Entries: 10015666182; DB size: 67075 MB; Avg k-mer size: 7.824739; Top 10 k-mers; DFEQLPH	65289; NVPGWSP	65148; FRYAFPS	64963; RYYVLGW	64817; VDRLNTQ	63812; WRLDFLN	62949; TVDGDFS	62609; NKTDFVQ	61859; QDWVQIP	61316; LDGAYVP	59471; Time for index table init: 0h 16m 9s 488ms; Time for processing: 0h 16m 22s 538ms; lcaalign /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/433:386,consumption,consumption,386,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433,1,['consumption'],['consumption']
Energy Efficiency,"Hi; we are continuously updating a large cluster DB with new data, and one of the steps that are taking longer is when the new sequences are updated with the old keys using the function `joinAndReplace`. We are using this function for other purposes and we added to the sorting parts `--parallel` and `--buffer-size` to speed up and reduce the I/O needed for the sorting. I think it would be great to have available these options if `sort` is modern enough and fallback to the original `joinAndReplace` if `sort` doesn't support these options. What do you think?. Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/269:333,reduce,reduce,333,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/269,1,['reduce'],['reduce']
Energy Efficiency,"How much RAM does your server have? It seems like it ran out of RAM during construction of the database. You can try creating a NR with the `databases` command, it uses a slightly more efficient procedure than `createtaxdb` to create this mapping.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/431#issuecomment-811916088:185,efficient,efficient,185,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/431#issuecomment-811916088,1,['efficient'],['efficient']
Energy Efficiency,How should I efficiently cluster multiple DBs?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/519:13,efficient,efficiently,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/519,1,['efficient'],['efficiently']
Energy Efficiency,"I am having a hard time creating a minimal reference sequence to reproduce the crash. If I reduce the target database down to only the aligned sequence, it doesn't happen. The command line in question is . ```mmseqs convertali querydb targetdb --format-output query,target,qstart,qend,tstart,tend,raw,cigar,qaln,taln,qlen --search-type 3```. I will continue to try and make a minimal reproducible example. I did notice that adding a `N` to the start of my query sequence solves the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/863#issuecomment-2237061436:91,reduce,reduce,91,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/863#issuecomment-2237061436,1,['reduce'],['reduce']
Energy Efficiency,"I am not sure what the fix is. I think the issue is now that this `RLIMIT_DATA` limit not actually per allocation but per process. So the additional splits weren't really useful. . IMO the `h_vmem` is a weird feature of SGE and MMseqs2 allocating a lot of virtual memory is reasonable. Its real memory consumption is much smaller, however I am not sure that SGE can track that. I would suggest to talk to your SGE admin to setup a separate queue that doesn't enforce memory limits. Reengineering MMseqs2 to page in splits on-demand is I think quite a big reengineering effort. We can keep it in mind for the future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742545669:302,consumption,consumption,302,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742545669,1,['consumption'],['consumption']
Energy Efficiency,"I am not sure why. This sorting library is also a bit fickle on uncommon architectures (Power and Z, though MMseqs2 doesn't 100% work on Z yet anyway) and I've explicitly disabled it on those.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870674164:88,Power,Power,88,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870674164,1,['Power'],['Power']
Energy Efficiency,"I assume the message comes from alignments that find --max-seqs similiar sequences. So the filter would remove all sequences but then add back the query sequence. I would recommend to work on a redundancy reduced database. E.g. Uniclust90 (uniclust.mmseqs.com). I forgot, you need to add the flat --add-self-matches to your search. . mmseqs search pdb_05_profile pdb_05_rep pdb_05_pp_res tmp --threads 110 -e 0.05 --add-self-matches; mmseqs clust pdb_05_profile pdb_05_pp_res pdb_05_pp_clu --threads 110 --cluster-mode 1 --similarity-type 1. Do you use MMseqs2 on a computer with 110 core?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369616060:205,reduce,reduced,205,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369616060,1,['reduce'],['reduced']
Energy Efficiency,"I encountered the `orf filter prefilter died` issue today. I suspect it might be due to insufficient memory available to the program, even though there was no indication of memory shortage. According to the MMseqs2 documentation, the program should automatically analyze the available memory and split the data accordingly to meet memory requirements. However, I suspect the program did not correctly identify the maximum memory I allocated for my task submitted to HPC (via `qsub`), and it may have mistakenly considered the total available memory in HPC as the memory accessible for the current task. I resolved this issue by adding the parameter `--split-memory-limit 80G`. Hope this helps you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/556#issuecomment-1882560536:431,allocate,allocated,431,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/556#issuecomment-1882560536,1,['allocate'],['allocated']
Energy Efficiency,"I have clustering results and I would like to see if any of the clusters are related, so I guess adding another step using the manual cascade clustering is what I need. . So 2 questions about this process:; 1. Do I need to add a result2repseq step before createsubdb? (I think it is missing in the wiki link that you attached); 2. If the first step was done using mmseqs cluster with default parameters, do I need to change the sensitivity for the manual step? (should I increase or reduce it?). Alternatively, is it possible to create a profile for each cluster and then cluster the profiles (like in issue #66)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/68#issuecomment-371132124:483,reduce,reduce,483,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/68#issuecomment-371132124,1,['reduce'],['reduce']
Energy Efficiency,"I hope it would be still very useful to have an option to override `getTotalSystemMemory`. I understand there might be modules that does not have a splitting logic (either it is not implemented yet, or it simply does not make sense) a many other aspects (like the preloading). But I see these as use cases where you simply MUST HAVE enough memory to be able to do the computations (on a system with little physical memory this would lead to swapping). On the other hand, the option to override `getTotalSystemMemory` would allow me to fake the total system memory to keep reasonable memory/computation length trade-off on grid computing architecture with job scheduler.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359804827:659,schedul,scheduler,659,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359804827,2,['schedul'],['scheduler']
Energy Efficiency,"I introduced the two additional splits because of https://github.com/soedinglab/MMseqs2/issues/338. Though that wasn't very effective to reduce peak memory use. . The error looks like a memory corruption though. I am not really sure how to reproduce the issue locally. ; Do you still have the tmp files? Could you try rerunning only the last step without the index:. ```; mmseqs result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; ```. The only change was to remove the `.idx` suffix after `mmseqs_tax.db`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814300855:137,reduce,reduce,137,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814300855,1,['reduce'],['reduce']
Energy Efficiency,"I missed this issue. I would not recommend to create an index for a very large DB, for it to work efficiently you'd need multiple TB of RAM. I would recommend to merge all sets of queries into one set and repeat the search with this one set against the DB. You can still untangle from which set each query came later during `convertalis` with the `qset` or `qsetid` columns for `--format-output`. `qsetid` will give you the numeric value of the set (third value in the .lookup file) and file name (second value in the .source file, where the first value there maps to the third value in the .lookup file). So to get the default columns + qset would, you'd use:. `--format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qset`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1732178119:98,efficient,efficiently,98,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1732178119,1,['efficient'],['efficiently']
Energy Efficiency,"I should also mention that I did not get the hanging issue when I reduced sensitivity to 4. Unfortunately, I need higher sensitivity for this particular search! Here is the log:. ```; easy-search -s 7 query.fasta targetDB_split/targetDB_split_0_32 results/0.m8 tmp . MMseqs Version: 	15.6f452; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pse",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:66,reduce,reduced,66,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257,1,['reduce'],['reduced']
Energy Efficiency,"I think the memory the cluster allocate to me is 250G since I set the header of the .sbatch file as:. ```; #SBATCH -p gpu; #SBATCH --gres=gpu; #SBATCH --cpus-per-task=8; **#SBATCH --mem=250G**. ```. Before I tried this parameter, my command was like:. `mmseqs easy-cluster $OUT/${sample}_subsampled_R2.fastq.gz $OUT tmp --min-seq-id 1`. and it didn't threw me any errors. (But note that I applied the previous command on a subset of my original data (extracted 1 million reads), but I applied the --split-memory-limit parameter on the entire dataset).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805861838:31,allocate,allocate,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805861838,1,['allocate'],['allocate']
Energy Efficiency,"I think this a somewhat basic question but the original question is exactly what I want, how would one get the alignment between clustered sequences and the representative of the cluster?. Starting with...; `mmseqs linclust input_DB output_DB tmp`. I'd just want to get the alignments across all genes in input_DB with the representatives of clusters in output_DB. Sorry this is basic but I'm not sure if it's a task for align/convertalis/result2flat and haven't been able to figure it out. I think you could just extract the representatives and then run align again but it seems like there should be a more efficient way.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/60#issuecomment-372850243:608,efficient,efficient,608,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/60#issuecomment-372850243,1,['efficient'],['efficient']
Energy Efficiency,I unprefixed the MMseqs2 macros and replaced our undefined version xxhash with the latest release v0.8.; I'll merge once I get a green light from the CI. Thanks a lot :),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/389#issuecomment-755369024:129,green,green,129,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/389#issuecomment-755369024,1,['green'],['green']
Energy Efficiency,"I used a sequenceDB file, not an alignmentDB file, because I expected it to work like ""cluster"". **Edit:** Actually... I'm not sure if I understand anything anymore! :D Clusthash **does** seem to expect a sequenceDB. I still struggle a bit with understanding the output of the cluster modules. What I actually want to do, is to use ""clusthash"" to reduce the redundancy of the PDB. The hope is, that this will reduce the number of chains enough, so I can create a somewhat useful visualization of the distance graph.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/6#issuecomment-263835793:347,reduce,reduce,347,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/6#issuecomment-263835793,2,['reduce'],['reduce']
Energy Efficiency,"I want to do multiple things.; First I want to reduce the redundancy of the DB by filtering out exact duplicates. ""Hashclust"" seems to detect exact duplicates after reducing the alphabet, which might be even better for my use case.; Later, I want to compare different clustering methods, including the ones provided by MMseqs. If I understand the module correctly, ""hashclust"" creates an alignmentDB that includes all exact matches between sequences that have had their alphabet reduced. This alignmentDB can then be used by ""clust"" to cluster the sequences. If I use sequence identity in ""clust"", which can only be 1 or 0 (not listed) when I use ""hashclust"" the resulting clusters should contain only said reduced-alphabet-exact-matches. Is that correct?. **Edit:** It seems that after using ""mmseqs createseqfiledb DB clu clu_seq"" every header in clu_seq containing a cluster representing sequence ID starts with a null byte. I used that to create a fasta file that only contains non-redundant (with regard to ""clusthash"") sequences.; I hope that what I got is what I think I got.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/6#issuecomment-263872227:47,reduce,reduce,47,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/6#issuecomment-263872227,3,['reduce'],"['reduce', 'reduced', 'reduced-alphabet-exact-matches']"
Energy Efficiency,"I was meaning to add the same additional prefiltering stage we used int the recent MMseqs2 taxonomy paper to the normal search, this would also speed-up and reduce disk use at a slight sensitivity penalty. But I haven't gotten around to that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/478#issuecomment-896835234:157,reduce,reduce,157,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478#issuecomment-896835234,1,['reduce'],['reduce']
Energy Efficiency,"I was trying to use MMSEQS2 for clustering with:. mmseqs cluster DB clu tmp --cascaded -e 1e-5 --max-seqs 30000 --similarity-type 1. It was working fine (MMseqs version ad5b994c5f21d2117c359ecb748811cbd01eba73) but when I try to execute it in another machine (both macOS El Capitan 10.11.6, this time MMseqs version e3ca470308523cb3d997088c65e821cc79e2a422), I get several error messages as follows,. ERROR: Set 0 has more elements than allocated (1)!. and the clustering never finishes. Any idea of what is this due to or how to solve it?. Thank you in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/28:437,allocate,allocated,437,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/28,1,['allocate'],['allocated']
Energy Efficiency,"I would like to assign a taxonomic label to my protein sequences using the blast NR database and the mmseqs taxonomy command available in the docker image (quay.io/microbiome-informatics/mmseqs:2.13). I noticed that the default coverage value is zero according to the help page.; `-c FLOAT List matches above this fraction of aligned (covered) residues (see --cov-mode) [0.000]`. However, if I set the `-c` parameter to 0.8, which sounds reasonable to me, then all of my sequences are labelled as `no rank unclassified`. . Full command: ; ```; mmseqs taxonomy queryDB ${MMSEQS2_DATABASE_DIR} taxresults.database tmp --lca-ranks superkingdom,phylum,class,order,family,genus,species,subspecies --threads 28; ```. My questions are:; 1. Doesn't it always make sense to increase the `-c` parameter to reduce spurious hits?; 2. How can I inspect the alignment of the best hit?; 3. Does easy-taxonomy also use the same default `lca-mode` or a different one?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/750:796,reduce,reduce,796,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/750,1,['reduce'],['reduce']
Energy Efficiency,"I would like to find the closest human protein sequence for any given query. Often the query sequences are short (10aa). To test if mmseq could help with that, I created a fasta file that contains: ; 1) 10 protein sequences from the filtered swissprot dataset to include just human samples (aka, swissprot_human); 2) 10 short sequences created through sampling one segment of 10aa from the first 10 human sequences . The resulting sequences are illustrated in this [csv](https://docs.google.com/spreadsheets/d/1F_0krK2EAW-siYEheJbwTXaHUxy3gKRR9VAcY_kCHBE/edit?usp=sharing) (I couldn't upload the csv, so I am sharing a link. I hope you can access it). . You will notice that the same query sequence has a different evalue between swissprot and swissprot_human, which I assume plays a role in the reduced number of matches against swissprot. How can I ensure the search results are consistent for the two datasets? . Thank you so much for the help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/827:796,reduce,reduced,796,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/827,1,['reduce'],['reduced']
Energy Efficiency,I would use ffindex_apply_mpi (https://github.com/soedinglab/ffindex_soedinglab). It is compatible with MMseqs2 databases. It works like map from map/reduce. It calls for every index entry (e.g. each cluster) a process. The stdout of the process will be written as respective entry into an output database. The tool supports OMP and MPI to spread out the job over several compute nodes. Just write a program (e.g.`selectRepSeq`) which takes the a fasta input from stdin and prints out the representive sequence as stdout. You can call ffindex_apply_mpi like this:. `ffindex_apply_mpi -d repSeq -i repSeq.index clu_createseqfiledb clu_createseqfiledb.index -- selectRepSeq`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/50#issuecomment-343726261:150,reduce,reduce,150,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/50#issuecomment-343726261,1,['reduce'],['reduce']
Energy Efficiency,"I wouldn't turn of all three of min seq. id., coverage and e-value. You should keep a high coverage, a low sequence identity also doesn't really make a lot of sense as there isn't really enough homology signal to tell if two of these fragments belong together. I don't think you can reduce the number of representatives much more, without clustering basically random sequences with each other.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833998598:283,reduce,reduce,283,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833998598,1,['reduce'],['reduce']
Energy Efficiency,"I'm getting a similar segemntation fault with a tblastn-style search against a taxonomy-annotated target database derived from BLAST NT. Interestingly, it looks like the prefilter step calculates the memory consumption at 60T but jumps right into prefiltering instead of splitting the database to handle the ~620G memory limit. I also used the --compressed flag, but will check to see if removing that flag fixes the problem for me too. @milot-mirdita It may be worth re-opening this issue. ```; search query_db/db target_db/db result_db/db /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search -s 6 -a --num-iterations 1 --use-all-table-starts 1 --compressed 1 --split-memory-limit 618475290624 --threads 96 . MMseqs Version: 45111b641859ed0ddd875b94d6fd1aef1a675b7e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 6; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 589824T; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:207,consumption,consumption,207,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510,1,['consumption'],['consumption']
Energy Efficiency,I'm running it in a machine with 1 TB of memory and it seems to be working (for now). I found it surprising because the estimated memory consumption was 23 GB. How is that computed?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/627#issuecomment-1289746010:137,consumption,consumption,137,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627#issuecomment-1289746010,1,['consumption'],['consumption']
Energy Efficiency,"I'm trying to get the abundance of gene clusters generated by linclust. My method involves mapping the post-QC Illumina reads to the post-linclust cluster representatives via `mmseqs map`. To get the representative sequence db, I'm using `mmseqs result2repseq`. I ran `mmseqs map` (actually `mmseqs search --alignment-mode 4` due to Issue #144), but after many hours of processing, I got the error that no ""*_h"" file exists for the database, and the map job died. Do I have to convert the rep-seq database to a fasta and then re-create the database with `mmseqs createdb` just so that I can generate the *_h file? Is there a more efficient way?. Why doesn't `mmseqs search` check for the necessary files at the start of the job instead of in the middle of the run (possible after many hours of processing)?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/146:630,efficient,efficient,630,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/146,1,['efficient'],['efficient']
Energy Efficiency,"I'm using `mmseqs2 7.4e23d h21aa3a5_1 bioconda`, and I'm trying to taxonomically classify a set of ~4 million representative AA sequences (generated by `plass`, clustered with `linclust`, then using a representative of each cluster), and I'm using uniclust90_2018_08 for the taxonomy db. The command is:. ```; mmseqs taxonomy --threads 24 -e 1e-5 --start-sens 1 -s 6 --sens-steps 3 --lca-ranks ""phylum:superphylum:subkingdom:kingdom:superkingdom"" {seqDB} {taxDB} {outDB} {tmp_dir}; ```. I've tried providing up to 720 GB of memory, and I still get a memory error: `Could not allocate foundDiagonals memory in QueryMatcher`. This happens during the stage:. ```; Init data structures...; Compute score and coverage.; Touch data file /tmp/global2/nyoungblut/LLMGAG_27929269397/linclust/genes_db ... Done.; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust90_2018_08_db ... Done.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; ...................................................................................................	1 Mio. sequences processed; .......; ```. Is there a good way of reducing the memory usage for `mmseqs taxonomy`? I didn't see anything in the script doc or the wiki on reducing memory usage for taxonomy inference.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147:575,allocate,allocate,575,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147,1,['allocate'],['allocate']
Energy Efficiency,"If I compile with GCC 10 (just make USE_GCC=yes in FreeBSD ports), it does not hang with only SSE. I'd hate to add such a heavy dependency to the port, though, so it would be good to figure out what's going wrong with clang 10. The PowerEdge has 32 hyperthreads and 64G RAM. Is 2G/thread not enough for SLICEPROFILE? If not, how can I limit the number of threads in the regression tests? It doesn't seem to respect OMP_NUM_THREADS=16. I still see CPU spike to > 3000%. I'll test your patches later. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240:232,Power,PowerEdge,232,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240,1,['Power'],['PowerEdge']
Energy Efficiency,"If you provide me the mmseqs command call for your search an the log of the run then I can tell you why MMseqs2 is not much faster and what parameter you can tweak to be faster. My assumption is that you waste a lot of time on alignments that do not have to be computed since the chance of being homologous is not high. . The warning ""Sequence XXX produces too many hits. Results might be truncated"" indicates that their are too many high scoring diagonal (> target database size / 2). Is your database highly redundant?. MMseqs2 produces in default only one smith-waterman alignment per sequence. You can increase the alignments with` --alt-ali`. If you want just the best hit than you could use `filterdb` to reduce just extract the first line of each query result. Also if you are just interested at the top hit than you can speed up MMseqs2 quite a lot by using an iterative search. See https://github.com/soedinglab/mmseqs2/wiki#how-to-find-the-best-hit-the-fastest-way . In my example MMseqs2 was able to detect the sequence pair you mentioned. I search sequence `10141.SETX` (query) against sequence `6334.TSP_11650` (target) and both could be detect by MMseqs2. . The command I used was . mmseqs search query target aln tmp -a -s 7.5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407433121:711,reduce,reduce,711,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407433121,1,['reduce'],['reduce']
Energy Efficiency,Is there some formula with which I can calculate the memory consumption wrt the number of threads?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/69#issuecomment-369622344:60,consumption,consumption,60,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/69#issuecomment-369622344,1,['consumption'],['consumption']
Energy Efficiency,"It appears that no matter how many splits I use for `mmseqs createindex`, the amount of memory for running `mmseqs search` on the UniRef90 database + split idx is always ~300G. Shouldn't splitting the database index into portions reduce the memory required for mmap'ing? . Using `mmseqs search --split N` doesn't help, but I didn't expect it to, given that the splitting was done prior during the `mmseqs createindex` step. . I'm using 8 threads. Is the `Estimated memory consumption:` listed during `mmseq search` the amount of memory required per thread?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740482507:230,reduce,reduce,230,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740482507,2,"['consumption', 'reduce']","['consumption', 'reduce']"
Energy Efficiency,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:934,consumption,consumption,934,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034,1,['consumption'],['consumption']
Energy Efficiency,"It turns out that I just need ~300G of memory for the job in order to not get the `Failed to mmap memory` error, even though the `mmseq search` job states: `Estimated memory consumption: 122G`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740157233:174,consumption,consumption,174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740157233,1,['consumption'],['consumption']
Energy Efficiency,Manually limit memory consumption,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58:22,consumption,consumption,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58,1,['consumption'],['consumption']
Energy Efficiency,"Maybe I should note that I'm splitting the query fasta into subsets, creating mmseqs dbs for each, and searching against UniRef90 (with the pre-generated idx). I know that I could use openmpi for scaling on a cluster, but splitting and running all of the queries in parallel with snakemake is more fault-tolerant. . Having to request ~300G per cluster job greatly limits the number of parallel jobs that will run on the cluster at the same time, so I'd prefer to reduce the memory requirements, if possible. It seems that the first split stays fairly large in size regardless of the total number of splits. I'd try ~30 splits, but I'm guessing that I will still be stuck with a split file that's ~70G.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741772613:463,reduce,reduce,463,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741772613,1,['reduce'],['reduce']
Energy Efficiency,"No guarantees but that's why I would first try. Try k-mer sizes from 6 to 15. More things might go wrong though, as you are breaking some pretty fundamental assumptions. You could also try to hack your reduction schemes directly into MMseqs2:; https://github.com/soedinglab/MMseqs2/blob/master/src/prefiltering/ReducedMatrix.cpp. However, reduced alphabets are not being used for alignment, only for prefiltering/kmermatching.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1819083305:311,Reduce,ReducedMatrix,311,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1819083305,2,"['Reduce', 'reduce']","['ReducedMatrix', 'reduced']"
Energy Efficiency,Parallelization across compute nodes should work without issue by using MPI/OpenMP hybrid parallelization:; https://github.com/soedinglab/MMseqs2/wiki#how-to-run-mmseqs2-on-multiple-servers-using-mpi. (Setting the RUNNER environment variable with the mpirun envocation). Regarding the memory usage: MMseqs2 will use as much memory as the compute node has available. You can force it to split the target database into chunks to reduce the peak memory usage at the cost of slight increase in run time. Use either the `--split` or the `--split-memory-limit` for that.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-467835630:427,reduce,reduce,427,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-467835630,1,['reduce'],['reduce']
Energy Efficiency,Question: efficient implementation of mmseqs easy-rbh for large datasets,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/777:10,efficient,efficient,10,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777,1,['efficient'],['efficient']
Energy Efficiency,RAM Consumption,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/808:4,Consumption,Consumption,4,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/808,1,['Consumption'],['Consumption']
Energy Efficiency,"Replacing the `util/regression/samtools/samtools.sh` with the following works:; ```; #!/bin/sh -e; SELF=""$( cd ""$(dirname ""$0"")"" ; pwd -P )""; SUFFIX=""""; case ""$(uname -m)"" in; arm*|aarch*) SUFFIX=""-aarch64"" ;;; ppc*) SUFFIX=""-ppc64le"" ;;; esac; case ""$(echo ""$OSTYPE"" | tr '[:upper:]' '[:lower:]')"" in; linux*) exec ""$SELF/samtools-linux$SUFFIX"" ""$@"" ;;; darwin*) exec ""$SELF/samtools-darwin"" ""$@"" ;;; msys*|cygwin*) exec ""$SELF/samtools-windows"" ""$@"" ;;; esac; samtools ""$@""; ```; I don't want to push that commit that right now since we are in the process of some bigger refactoring. `SLICEPROFILE` is a bit fickle about RAM available per core used. That seems to have been the problem:; ```; [=======mem_align could not allocate memory.; ```. I also fixed the bogus error messages in https://github.com/soedinglab/MMseqs2/commit/15ace29a276be54fee6b9aedd7a1e814a3c7769b",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414:723,allocate,allocate,723,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414,1,['allocate'],['allocate']
Energy Efficiency,Running mmseqs databases creates a significantly reduced tax database,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/684:49,reduce,reduced,49,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/684,1,['reduce'],['reduced']
Energy Efficiency,"Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (4160 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > Time for fill: 0 h 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Time for processing: 0 h 0 m 0s; > Rescore diagonals. However, I get the following error when there are some identical sequences:. > MMseqs Version: 	8c0c7fb86ce154b236d6fe294811de3b09850fba; > Sub Matrix 	blosum62.out; > Alphabet size 	13; > Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (3200 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > ~/tmp/2230240821590219627/linclust/10911929691229894817/linclust.sh: line 18: 28296 Segmentation fault (core dumped) $MMSEQS kmermatcher ""$INPUT"" ""$3/pref"" ${KMERMATCHER_PAR}; > Rescore diagonals. Has anyone seen this before? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282:1611,Reduce,Reduced,1611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282,1,['Reduce'],['Reduced']
Energy Efficiency,So far so good. The program is running smoothly and the kmermatcher step is ended without errors. . ```; kmermatcher data/02_geneclust/plass_assembly_noclust /mnt/lustre/scratch/aauladell/9518450204626139512/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.95 --kmer-per-seq 21 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-m; ode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 48 --compressed 0 -v 3. Database size: 823952135 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 263893 MB; Generate k-mers list for 1 split; [=================================================================] 823.95M 37m 20s 931ms; Sort kmer 0h 11m 29s 726ms; Sort by rep. sequence 0h 2m 46s 392ms; Time for fill: 0h 3m 48s 1ms; Time for merging files: 0h 4m 55s 350ms; Time for processing: 1h 13m 27s 843ms; ```. Thanks!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-499063090:548,Reduce,Reduced,548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-499063090,2,"['Reduce', 'consumption']","['Reduced', 'consumption']"
Energy Efficiency,So the `_N` suffix comes already form your FASTA files? ; If thats the case: We already have a feature request in #82 for being able to adapt the parsing logic for FASTA headers. However none had time to work on that yet. We will keep that in mind for the future.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/163#issuecomment-462779388:136,adapt,adapt,136,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/163#issuecomment-462779388,1,['adapt'],['adapt']
Energy Efficiency,"Thank you a lot for the explanation! ; I wanna try creating indexes one more time and if it won't work, I'll stick to the option you've mentioned.; So I've tried to run ; `/usr/bin/time -f ""%P %M"" mmseqs createindex mmseqs_database temporary_new --threads 40 --search-type 3 --remove-tmp-files 1 --split-memory-limit 7T` on a server which had enough space, but it gave another mistake: ; Can not allocate entries memory in IndexTable::initMemory; ![image](https://user-images.githubusercontent.com/60808830/184051281-3d9f7bd7-eca4-44a1-99b6-f4ed774e857a.png); While a definitely have enough space:; ![image](https://user-images.githubusercontent.com/60808830/184051600-691a88c7-a736-49e2-b6f1-2c2ca2f4f8f1.png); the index file was only 1.6T afterwards, while estimated memory consumption was 5T.; `-rw-r--r-- 1 chechekinao csb4 778G Aug 8 10:03 mmseqs_database; -rw-r--r-- 1 chechekinao csb4 1.6T Aug 10 20:59 mmseqs_database.idx.0; drwxr-xr-x 3 chechekinao csb4 61 Aug 10 15:09 temporary_new`; What may be the reason for that?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/588#issuecomment-1211475244:396,allocate,allocate,396,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/588#issuecomment-1211475244,2,"['allocate', 'consumption']","['allocate', 'consumption']"
Energy Efficiency,Thank you for reporting this bug. I to compile with g++-6 and g++-7. ; It seems that the problem occures only in g++-7. . The problem occured because we tried to allocate too much memory when using --diag-score 0 mode. I fixed the problem at commit https://github.com/soedinglab/mmseqs2/commit/6284fd91db7041ac737e0ce962bfd33a7e805257,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/29#issuecomment-299717644:162,allocate,allocate,162,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/29#issuecomment-299717644,1,['allocate'],['allocate']
Energy Efficiency,"Thank you for sharing the data. There are two problems, which avoids the sequences to be clustered together (1) sensitivity issue of Linclust and (2) result size issue of the all against all clustering algorithm. Either of the following two solutions solves the problem:. 1.) You can increase the sensitivity of Linclust by adjusting `--kmer-per-seq`. I would recommend to set it to 80.; 2.) You can increase `--max-seqs` to reduce the truncation of clusters. The default is 30. You could increase it to 300 e.g. . I did cluster your data using `mmseqs cluster panproteome/panproteome.db clu_linclust3 tmp --kmer-per-seq 80 --min-seq-id 0.8`. Both sequences (GCF_001249795.1_3002_8_6_genomic_02902, GCF_001259475.1_4370_2_2_genomic_00977) got clustered.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-392657600:425,reduce,reduce,425,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-392657600,1,['reduce'],['reduce']
Energy Efficiency,"Thank you for this tip, it worked! But I get many clusters, 997 representative sequences, is there a way to reduce the number of clusters? We are trying to identify general patterns/motifs from these sequences. The command I used is:; mmseqs easy-cluster Peptide_seqs.mod.fasta Peptide_seqs_clu tmp -e inf -k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0 --min-ungapped-score 0 --min-seq-id 0.0 -c 0.0 --cov-mode 1. Thank you!. > I found one memory issue when giving only extremely short sequences to MMseqs2.; > You can probably work around this issue in release 13 by adding one fake sequence that is longer than 20 AA residues to the input file.; > ; > I would also recommend to use the following parameters `-k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0` for clustering such extremely short sequences. You might also want to add `-e inf` as E-values are essentially meaningless for such short sequences. In this case you would only cluster based on seq. id. and coverage.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833996332:108,reduce,reduce,108,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833996332,1,['reduce'],['reduce']
Energy Efficiency,Thank you very much. I will adapt the command and will explore the differences between cd-hit and mmseqs further. Hans,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/836#issuecomment-2097517929:28,adapt,adapt,28,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/836#issuecomment-2097517929,1,['adapt'],['adapt']
Energy Efficiency,"Thanks a lot for the log!. The prefilter takes 15 minutes, while the alignment runs for 4.5 hours. I think your `--max-seqs` is way to high since in average only 4000 hits are accepted by the alignment. You could reduce `--max-seqs` to 100.000 without losing many, if any at all, hits. . Another tweak is using the property of the prefilter results, that they are already well sorted and distinguish well between homologs and non-homologs. It is possible to reduce the run time without losing many, if any, hits of the alignment by using the `--max-rejected` parameter. It stops aligning after `N` consecutive rejected alignments (alignments that do not fulfill the alignment criteria). You could try `--max-rejected 10.` . Another tweak would be to increase the `--min-ungapped-score`. I have never really optimized this parameter. It could lead to a huge gains in speed for the alignment by rejecting prefilter hits more strictly. Try `--min-ungapped-score 30`. You mentioned in an email that you also tested DIAMOND and it was less sensitive. Could you please give us your comparison results?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-408840948:213,reduce,reduce,213,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-408840948,2,['reduce'],['reduce']
Energy Efficiency,"Thanks a lot for your help, Milot! I am sorry for the late response!; I think the newer release made a progress and it seems swapresults does not give the std::bad_alloc error anymore (see the stdout printout below). However now I'm facing a problem with disk-space usage, it seems my run fills up ~1.2 TB and fails since I have no disk space left. Is there any suggestion of how to reduce the needed disk-space? From your guide I understand that reducing `--max-seqs` and `--max-accept` could be the way to go but I was not sure whether indeed this is the correct direction and what would be reasonable values to use. What I actually need, is only the best hit(s) for my queries. I would be thankful for any advice ;-) . My command: ; `Programs/MMSeqs2/mmseqs/bin/mmseqs easy-search --slice-search --search-type 3 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen"" A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ 1> A2p515F2F4F6_vs_NT_Jan2021.mmseq2.std 2>&1`. The stdout:; ```; easy-search --slice-search --search-type 3 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:383,reduce,reduce,383,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['reduce'],['reduce']
Energy Efficiency,"Thanks for the fast feedback!; Here are the requested info about our architecture. I'll try the two suggestions (no indexing, and indexing without the --split) as soon as our machine is free again (a big cd-hit is swapping like crazy)... ```; $ uname -a . Linux bioinfo 4.4.0-38-generic #57-Ubuntu SMP Tue Sep 6 15:42:33 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux. $ cat /proc/cpuinfo. processor : 23; vendor_id : GenuineIntel; cpu family : 6; model : 62; model name : Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz; stepping : 4; microcode : 0x416; cpu MHz : 1228.906; cache size : 15360 KB; physical id : 1; siblings : 12; core id : 5; cpu cores : 6; apicid : 43; initial apicid : 43; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms xsaveopt dtherm ida arat pln pts; bugs :; bogomips : 5189.25; clflush size : 64; cache_alignment : 64; address sizes : 46 bits physical, 48 bits virtual; power management:; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-250500053:1008,monitor,monitor,1008,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-250500053,4,"['monitor', 'power']","['monitor', 'power']"
Energy Efficiency,"Thanks for the hint. I'll try that. I'm using redundancy reduced database - pdb_05 is PDB Seqres database clustered with e-value 0.05, and the profiles are generated for pdb_05 sequences on nr70 database, which is nr clustered to 70% sequence identity. As to computer - yes, I'm using 120 cores single machine (it has four Xeons E7-4890 v2). The software; scales up amazingly. Now I'm computing 6it profiles for 31M sequences and; that will be accomplished in few days (prefiltering scores calculation took 65 h 52 m 33s). I see that when calculating S-W alignments the soft crunches the data using all given threads but after finishing million of sequences (or leaning towards finishing that million) it runs gradually on less and lass cores (perhaps some cores were given more time consuming alignments so the program might estimate times and balance threads more efficiently, but this is very minor and would be noticed for users working on big databases only), which might be a speed bottleneck for big dataset such as nr database processed on big machines. In few days I'll start tests also with MPI run, so that mmseqs2 will be ran; on 1600 CPUs on cluster (here I wish the software had used GPUs as the cluster I'm using has additionally some Firepros to use - I write it smiling as MMseqs2 is light years ahead of cd-hit, which I was using to date). I'll give you a feedback on the speed soon then.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369633733:57,reduce,reduced,57,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369633733,4,"['efficient', 'reduce']","['efficiently', 'reduced']"
Energy Efficiency,"Thanks for your help with this! Yeah, no matter how many splits I create, `.idx.1` is always 37G, while the other files are much smaller, and regardless, the required `h_vmem` is ~240G. . Given the speed/accuracy of mmseqs, I'll probably still use it for my needs, if at all possible. Otherwise, I'll have to switch back to diamond in order to reduce the memory required for each job.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742599340:344,reduce,reduce,344,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742599340,1,['reduce'],['reduce']
Energy Efficiency,That's a bit more complicated. We had a contribution to HH-suite to support PPCLE from @dmiller423 and subsequently improvements from @jhuber6. I wanted a different approach similar to `sse2neon` and adapted the code. To re-license the code we might need to ask two more people.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630832361:200,adapt,adapted,200,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630832361,1,['adapt'],['adapted']
Energy Efficiency,"That's an interesting application of MMseqs2's clustering. It should be possible to do what you want however it will require much more parameter tweaking. Also did you generate your own substitution matrix?. I think the main point is to increase the k-mer size as you will generate tons of spurious matches with 6/7-mers and a alphabet size of 5. Increasing the k-mer size of `cluster` will be tricky since it will start to use enormous amounts of memory if you don't also reduce the alphabet size, however reducing the alphabet size will generate it's own reduced alphabet that will likely conflict with yours. So `linclust` is probably the way to go, try a k-mer size of 11 and see if that works.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1819024419:473,reduce,reduce,473,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1819024419,2,['reduce'],"['reduce', 'reduced']"
Energy Efficiency,"The database is not large enough to use 300GB of RAM (See https://github.com/soedinglab/MMseqs2/wiki#memory-consumption). So it would be expected to use far less. However, if MMseqs2 was only uses 30GB of 300GB, then that would be weird. Could you post the full log?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765403000:108,consumption,consumption,108,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765403000,1,['consumption'],['consumption']
Energy Efficiency,"The figure and your explanation helped me to understand your workflow better. However, I do not understand where the neon green and black bars (super dark green?) originate from? Are these ORFs from the query set? . Silix uses single linkage clustering. This can be done in MMseqs2 using `--cluster-mode 1` but we can not cluster non-symmetric sets (query/target) with MMseqs2. To overcome this limination I would recommend your to combine the ORFs of the query with the proteins from the target and cluster them together.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/177#issuecomment-553122357:122,green,green,122,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/177#issuecomment-553122357,2,['green'],['green']
Energy Efficiency,"The index can not be shrunk, if you want to allow for real-time searches. Depending on the size of your database, you could implement the same clustered MMseqs2 search workflow as implemented in ColabFold. This will reduce memory requirements massively. We plan to eventually over this workflow directly in MMseqs2.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/687#issuecomment-1479990691:216,reduce,reduce,216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/687#issuecomment-1479990691,1,['reduce'],['reduce']
Energy Efficiency,"The issue is basically that MMseqs2 cannot extract any putative protein ORFs from the nucleotide reads since the default minimum length threshold is too long. You can reduce this threshold with something like `--min-length 15` (15*3=45 nucl min length). The error message is pretty bad, we should fix this. Btw `plass` include a `mergereads` module to produce merged reads from paired reads and produces a sequence database that can then be read by `mmseqs search` that might be useful to extend some of the read lengths a bit and produce better annotations.; You can also first run the complete `plass` workflow to produce assembled proteins that can be better annotated. Plass will also struggle with the same parameter though and would also need a shorter `--min-length`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/325#issuecomment-652402322:167,reduce,reduce,167,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/325#issuecomment-652402322,1,['reduce'],['reduce']
Energy Efficiency,"The wiki entry needs a bit work. I recommend using the precomputed index only for very specific cases. You also will likely neither need merge nor concat, they are both for combining two databases in different ways (concat sticks all the entries of one database after the entries of the other one; merge combines database entries). . In your case you should just pass multiple FASTA files to `createdb`. `mmseqs createdb FASTA1.fa FASTA2.fa ... FASTN.fa db`. This will create a `.source` file with:; ```; 1 FASTA1.fa; 2 FASTA2.fa; ...; ```. And these values are the `qsetid` and `qset` (or `tsetid`, `tset`) respectively. Regarding approximate size, you can look up the memory consumption entries in the wiki/user-guide. It more depends on avg length, than max-length.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734762067:677,consumption,consumption,677,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734762067,2,['consumption'],['consumption']
Energy Efficiency,"This is a performance optimization to not spend a lot of time merging files that are only intended for consumption by other mmseqs modules. If you want human readable output please either call `converalis` after `search`. Or alternatively use the `easy-search` workflow, which abstracts away all of this by taking FASTA as input and retuning BLAST-tab like output.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/802#issuecomment-1897701032:103,consumption,consumption,103,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/802#issuecomment-1897701032,1,['consumption'],['consumption']
Energy Efficiency,"This is not bug report, just a question. Does memory consumption by ""cluster"" and ""linclust"" in mmseqs2 independent on the number of threads? In other words, for the same database, will I use more memory if I use more CPUs?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/69:53,consumption,consumption,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/69,1,['consumption'],['consumption']
Energy Efficiency,Usually you should be able to just take e.g. the blosum62.out in the data folder and adapt it to your needs and pass that new file to `--sub-mat` and/or `--seed-sub-mat`. Sometimes MMseqs2 fails to compute the inverse of the matrix. In this case you can use the R script to compute the background probabilities (for which the inverse is needed). Make sure that the input to this script is already scaled to bit/2.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-496501408:85,adapt,adapt,85,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-496501408,1,['adapt'],['adapt']
Energy Efficiency,We are also working on a solution to reduce the overhead. But this still might take some time to be finished.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/124#issuecomment-426230463:37,reduce,reduce,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/124#issuecomment-426230463,1,['reduce'],['reduce']
Energy Efficiency,"We changed the majority of the MMseqs2 modules to take `--max-seq-len` to be the starting amount of memory and to progressively allocate more memory if needed. Dealing with long nucleotide sequences is still something where we plan on investing a lot more development time, however it should mostly work at the moment. Not really sure how well it will deal with sequences around your upper bound though. It might start to use excessive amounts of RAM.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/499#issuecomment-958004895:128,allocate,allocate,128,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/499#issuecomment-958004895,1,['allocate'],['allocate']
Energy Efficiency,"We do not currently have a very easy way to limit memory. For the prefilter (main module for normal sequences searches) you can specify an appropriate `--split` value, that will then reduce the required memory to (I think there is an error in the user guide, have to double check, but this should be the correct formula):. ```; (7 byte * N * L) / #splits + 8 byte * 21^k; ```. We have two more very memory intense modules:`swapresults` and `kmermatcher`. These are very important for profile searches and linclust. Their splitting logic is however not exposed to the command line interface yet. The clustering module also can use a lot of memory, but if you stay with the default cascaded clustering that should not become an issue. A hack to limit how much memory `swapresults`, `kmermatcher` and `prefilter` will use, would be to manually edit `size_t Util::getTotalSystemMemory()` in `commons/Util.cpp`. We will discuss what we can do about this limiting memory issue internally and get back to you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359788065:183,reduce,reduce,183,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359788065,2,['reduce'],['reduce']
Energy Efficiency,We do not have a tool to do an all against all alignment of each cluster. This could be quite computationally expensive if the clusters are big. I also do not have an efficient solution for this problem yet. I will think a bit about it.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/60#issuecomment-361380275:167,efficient,efficient,167,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/60#issuecomment-361380275,1,['efficient'],['efficient']
Energy Efficiency,What E-Values and sequence identity should I be shooting for in an easy-search workflow? I'm having a hard time to understand what reduces false positives the most.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/721:131,reduce,reduces,131,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/721,1,['reduce'],['reduces']
Energy Efficiency,What is the error message? . `Could not allocate foundDiagonals memory in QueryMatcher` should only be possible to happen during the prefiltering stage not the alignment stage.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242908:40,allocate,allocate,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242908,1,['allocate'],['allocate']
Energy Efficiency,"What is the final size of the BFD, __unpacked__? I downloaded it successfully, but now am trying to allocate enough storage. https://bfd.mmseqs.com/. Thanks a lot!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/525:100,allocate,allocate,100,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/525,1,['allocate'],['allocate']
Energy Efficiency,"With the current version?. ``` mmseqs createindex DF_PP_full100.fa.fixed.mmseqsdb tmp; createindex DF_PP_full100.fa.fixed.mmseqsdb tmp . MMseqs Version: 11.e1a1c. createindex DF_PP_full100.fa.fixed.mmseqsdb tmp . MMseqs Version: 11.e1a1c. indexdb DF_PP_full100.fa.fixed.mmseqsdb DF_PP_full100.fa.fixed.mmseqsdb --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 12 . Estimated memory consumption: 8G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Write GENERATOR (22); Index table: counting k-mers; [=================================================================] 100.00% 1.85M 1m 9s 45ms ; Index table: Masked residues: 9292781; Index table: fill; [=================================================================] 100.00% 1.85M 41s 694ms ; Index statistics; Entries: 932473123; DB size: 5823 MB ; Avg k-mer size: 14.569893 ; Top 10 k-mers ; RDWGRP 39946 ; CFVLGR 32839 ; CVRNGS 31368 ; ILTECV 26854 ; APSDIR 20240 ; ESCCGT 19857 ; DGAGDT 18909 ; YQAGTT 18726 ; SSCDAW 18697 ; PNEGGV 18425 ; Write ENTRIES (9) ; Write ENTRIESOFFSETS (10) ; Write SEQINDEXDATASIZE (15) ; Write SEQINDEXSEQOFFSET (16) ; Write SEQINDEXDATA (14) ; Write ENTRIESNUM (12) ; Write SEQCOUNT (13) ; Time for merging to DF_PP_full100.fa.fixed.mmseqsdb.idx: 0h 0m 0s 0ms ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590960979:610,consumption,consumption,610,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590960979,1,['consumption'],['consumption']
Energy Efficiency,"Yes! MMseqs2 is not very efficient with small sets of queries. `createindex` is the solution for that, however it comes with many other trade-offs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/757#issuecomment-1741160509:25,efficient,efficient,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757#issuecomment-1741160509,1,['efficient'],['efficient']
Energy Efficiency,"Yes, for nucleotide searching/clustering we do not generate similar k-mers. ; For nucleotides you could reduce the k-mer size to increase the sensitivity.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/549#issuecomment-1088794708:104,reduce,reduce,104,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/549#issuecomment-1088794708,1,['reduce'],['reduce']
Energy Efficiency,"You can slightly increase the minimum extracted ORF fragment length `--min-length` (30 amino acids/90nucleotides is the default). `--remove-tmp-files` decides if the contents of the `tmp` folder should remain after the search is finished, it will not reduce peak disk use.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/478#issuecomment-896834119:251,reduce,reduce,251,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478#issuecomment-896834119,1,['reduce'],['reduce']
Energy Efficiency,"You can try the new parameter `--prefilter-mode 1` (it might be only available in git mmseqs, you can download precompiled binaries from the last git at https://mmseqs.com/latest). This runs a different prefilter algorithm, that does not need a large amount of RAM, however it relies much more on CPU power. It's much slower for many queries, but might win out for very low number of queries. The sensitivity of this algorithm should beat the standard k-mer based MMseqs2 prefilter at `-s 7.5` slightly. You should be able to run the search command exactly the same way, just replace `-s` with `--prefilter-mode 1`:; ```; mmseqs easy-search query.fasta targetDB_split/targetDB_split_0_32 results/0.m8 tmp --prefilter-mode 1; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1903311302:301,power,power,301,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1903311302,1,['power'],['power']
Energy Efficiency,"You definitely need more RAM. Half a billion sequences will require 24GB for reading in the database alone. Linclust, the first clustering step, will not be a limiting factor, but the steps afterwards will be. Depending on how well linclust is able to reduce your dataset, the MMseqs2 prefilter will require up to 500GB RAM for optimal speed, though it will be able to run with much less at a slightly reduced speed. If you only require linclust quality of clustering (down to 50% sequence identity), then 32GB RAM might be enough. For clustering such a large number of sequences with the full MMseqs2 clustering workflow (<50% sequence identity) we recommend at least 64GB to 128GB RAM compute nodes.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/157#issuecomment-459402647:252,reduce,reduce,252,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/157#issuecomment-459402647,2,['reduce'],"['reduce', 'reduced']"
Energy Efficiency,"[bioseq@compute-0-294 ~]$ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 12; Socket(s): 2; NUMA node(s): 4; Vendor ID: AuthenticAMD; CPU family: 16; Model: 9; Model name: AMD Opteron(tm) Processor 6172; Stepping: 1; CPU MHz: 800.000; CPU max MHz: 2100.0000; CPU min MHz: 800.0000; BogoMIPS: 4200.23; Virtualization: AMD-V; L1d cache: 64K; L1i cache: 64K; L2 cache: 512K; L3 cache: 5118K; NUMA node0 CPU(s): 0-5; NUMA node1 CPU(s): 6-11; NUMA node2 CPU(s): 18-23; NUMA node3 CPU(s): 12-17; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm 3dnowext 3dnow constant_tsc art rep_good nopl nonstop_tsc extd_apicid amd_dcm pni monitor cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt nodeid_msr hw_pstate npt lbrv svm_lock nrip_save pausefilter",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641389444:847,monitor,monitor,847,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641389444,2,['monitor'],['monitor']
Energy Efficiency,"_h: 0h 0m 0s 261ms; Time for merging to query_seqs: 0h 1m 40s 122ms; Time for processing: 0h 8m 20s 689ms; prefilter tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7.5 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 20 --compressed 0 -v 3. Query database size: 39650 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 19825 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [=================================================================] 100.00% 19.83K 0s 193ms; Index table: Masked residues: 3096; Index table: fill; [=================================================================] 100.00% 19.83K 0s 133ms; Index statistics; Entries: 5861616; DB size: 8225 MB; Avg k-mer size: 0.005459; Top 10 k-mers; GTACGTGAATTGAAT	10331; AAACTGGGAGAAGAT	9920; AAGGGGGGGCCGGTT	9235; CGAACGTGGGAACGG	8944; GGGGAAAGGCTGGGG	7283; TCGATTACGGTAACG	6945; GTGCGCAGCGTATCG	6389; CCCGGCTCACGAATG	5538; ACTGCGTAAGGGTGG	5044; GACCGAGGGCACGGG	4773; Time for index table init: 0h 0m 8s 613ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 39650; Target db start 1 to 19825; [=================================================================] 100.00% 39.65K 3s 800ms. 0.928116 k-mers per position; 129909 DB matches per sequence; 0 o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:12887,consumption,consumption,12887,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['consumption'],['consumption']
Energy Efficiency,"_orfs_aa: 0h 33m 4s 490ms; Time for processing: 1h 14m 4s 658ms; prefilter repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/q_orfs_aa databases/eggnog repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 5 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 300G -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 56 --compressed 0 -v 3 . Query database size: 1303062545 type: Aminoacid; Estimated memory consumption: 2G; Target database size: 349750 type: Profile; Index table k-mer threshold: 82 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 349.75K 1m 42s 520ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 349.75K 5m 18s 145ms; Index statistics; Entries: 14682023111; DB size: 84042 MB; Avg k-mer size: 3594.921651; Top 10 k-mers; PPPPW	38077; PPPWW	37617; PPWPP	34827; PPPGW	33942; WWWPP	33931; PPPDW	33516; PPWPW	33505; PPWRW	32205; PWPPW	31944; PPPQW	31811; Time for index table init: 0h 9m 20s 184ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 82; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1303062545; Target db start 1 to 349750; [=================================================================] 1.30B 86h 42m 2s 376ms. 0.785483 k-mers per position; 240012 DB matches per sequence; 5731753 overflows; 0 queries produce too many hits (truncated result); 269 sequences p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/594:17913,consumption,consumption,17913,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594,1,['consumption'],['consumption']
Energy Efficiency,"_tmp/13016959338117486175/query_seqs tmp/3198441352783276465/clu_tmp/13016959338117486175/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 5 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3 . Query database size: 19552 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 9776 type: Nucleotide; tmp/3198441352783276465/clu_tmp/13016959338117486175/nucleotide_clustering.sh: line 48: 1648954 Killed $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am trying to cluster a number of gene sequences with an identity of 0.8 and no minimum length for the aligned portion of the genes. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15.6f452; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Conda; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Slurm-managed cluster computing environment; * Operating system and version: Rocky Linux 8.5 (Green Obsidian)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:17757,Green,Green,17757,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['Green'],['Green']
Energy Efficiency,`--max-seq-length` decides what that maximum internal sequence length is and how we allocate memory for various sequences. . I guess you want something like the opposite to `--min-aln-len` to reject all alignments (and therefore cluster members) that are too long?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/499#issuecomment-957913344:84,allocate,allocate,84,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/499#issuecomment-957913344,1,['allocate'],['allocate']
Energy Efficiency,"`Could not allocate foundDiagonals memory in QueryMatcher` is the only error message that I received. . I was running this in a `snakemake` pipeline, which tried the run with progressively more memory (240, 480, 720 GB), and each time, I got the error: `Could not allocate foundDiagonals memory in QueryMatcher`, and the log file looked the same (less dots at the end of the log file when less memory was used)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452249730:11,allocate,allocate,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452249730,2,['allocate'],['allocate']
Energy Efficiency,"a 1 --alignment-mode 3 --threads 96 -s 5.7 --sort-results 0 --remove-tmp-files 0 . prefilter tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 -s 5.7 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Query database size: 1 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 104664 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 93ms; align tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 tmp_easy_search/6745795380167965363/result --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:5776,consumption,consumption,5776,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['consumption'],['consumption']
Energy Efficiency,"a_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 160ms; rescorediagonal ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref tmp//538598962955004214/linclust/16628284907041385511/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 303 0s 15ms; Time for merging to pref_rescore1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 47ms; clus",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:3927,Reduce,Reduced,3927,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['Reduce'],['Reduced']
Energy Efficiency,"abet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. splitsequence chrY tmp/4145379299737466142/nucl_split_seq --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to nucl_split_seq_h: 0h 0m 0s 1ms; Time for merging to nucl_split_seq: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 8ms; indexdb tmp/4145379299737466142/nucl_split_seq chrY --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 8 . Estimated memory consumption: 8G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: indexdb died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:2890,consumption,consumption,2890,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082,1,['consumption'],['consumption']
Energy Efficiency,"ace limit 	0; MPI runner 	mpirun -pernode -np 8; Force restart with latest tmp 	false; Remove temporary files 	false. MPI Init; Rank: 0 Size: 8; prefilter human_prot.db /lustre/projects/carlson-group/mmseqs2-project/DBs/UniRef50 ./tmp/4797566427929930176/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 384 --compressed 0 -v 3 -s 5.7 . Query database size: 20588 type: Aminoacid; Target split mode. Searching through 83 splits; Estimated memory consumption: 24G; Target database size: 53625855 type: Aminoacid; Process prefiltering step 1 of 83. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052; LAMHETP	888; AYITSTG	696; FLNSHRT	695; GRFVVEV	501; RGAVAVR	415; IEAAGGR	407; RAEGRAV	401; LLGPGKT	371; TSSGRGV	307; Time for index table init: 0h 0m 38s 705ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 83); Query db start 1 to 20588; Target db start 1 to 207919; ...; ```. ## Context; I'm running this on a cluster with aarch64 (actually A64FX) CPU architecture. The cluster also has limited memory per node -- only 32 GB. ## Your Environment; Include as ma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:4570,consumption,consumption,4570,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['consumption'],['consumption']
Energy Efficiency,"an.db; Data file is fam.db; Start writing file to fam.tsv; Done.; ```. ## Context. These 2 sequences come from a vibro cholerae genome. . ## Your Environment. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): GITDIR-NOTFOUND (corresponds to the last release: 2-23394). * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled using GNU Make 3.81 and cmake version 2.8.12.2. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: self-compiled using GNU Make 3.81 and cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; less /proc/cpuinfo; processor : 0; vendor_id : AuthenticAMD; cpu family : 21; model : 2; model name : AMD Opteron(tm) Processor 6344 ; stepping : 0; cpu MHz : 2599.862; cache size : 2048 KB; physical id : 0; siblings : 12; core id : 0; cpu cores : 6; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext; fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1; sse4_2 popcnt aes xsave avx f16c lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt ; lwp fma4 tce nodeid_msr tbm topoext perfctr_core perfctr_nb cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassis; ts pausefilter pfthreshold bmi1; bogomips : 5199.72; TLB size : 1536 4K pages; clflush size : 64; cache_alignment : 64; address sizes : 48 bits physical, 48 bits virtual; power management: ts ttp tm 100mhzsteps hwpstate cpb eff_freq_ro; ```; * Operating system and version:; ```; $uname -a; Linux XXX 2.6.32-696.20.1.el6.x86_64 #1 SMP Fri Jan 26 17:51:45 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:19132,monitor,monitor,19132,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,2,"['monitor', 'power']","['monitor', 'power']"
Energy Efficiency,"appingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $conda create --prefix /project/winter_pea_endophytes_2022/MMseqs; $source activate /project/winter_pea_endophytes_2022/MMseqs; $conda install -c conda-forge -c bioconda mmseqs2; and run it as environment; $conda activate /project/winter_pea_endophytes_2022/MMseqs. Server:; ceres.scinet.usda; resources allocation; $salloc -p short -N 2 -n 80 -t 12:00:00",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/689:1533,consumption,consumption,1533,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689,1,['consumption'],['consumption']
Energy Efficiency,"arch type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: b4c1bc7cf89bc0bd577c5a9d3c1f7bedc1f74152; * Which MMseqs version: f5b588be54de35876eff90f3694b67e1d00856ef; * Server specifications: Intel(R) Xeon(R) W-2255 CPU, 64GB RAM; * Operating system and version: Ubuntu20 LTS. [nohupout.txt](https://github.com/soedinglab/MMseqs2/files/10728242/nohupout.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:4911,consumption,consumption,4911,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['consumption'],['consumption']
Energy Efficiency,"arts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Prefilter mode 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. extractorfs KLEB_PO07_megahitDB tmp/6964202514022042695/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-; mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-; lookup 0 --threads 32 --compressed 0 -v 3. [=================================================================] 24.08K 1s 376ms; Time for merging to orfs_aa_h: 0h 0m 0s 504ms; Time for merging to orfs_aa: 0h 0m 0s 706ms; Time for processing: 0h 0m 6s 520ms; prefilter tmp/6964202514022042695/orfs_aa /home/sdwork/scratch/metagenomics/uniref_db/uniref90 tmp/6964202514022042695/orfs_pref --sub-mat 'aa:blosum62.out,; nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-siz; e aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale; 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-; load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Query database size: 627284 type: Aminoacid; Estimated memory consumption: 717G; Target database size: 187136236 type: Aminoacid; Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:4348,consumption,consumption,4348,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741,1,['consumption'],['consumption']
Energy Efficiency,"at least x% of target length; --realign 	false 	compute more conservative, shorter alignments (scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs by selecting most diverse set of sequences, keeping at least this many seqs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; --rescore-mode 	0 	Rescore diagonal with: 0: Hamming distance, 1: local alignment (score only) or 2: local alignment; --min-length 	30 	minimum codon number in open reading frames ; --max-length 	32734 	maximum codon number in open reading frames ; --max-gaps 	2147483647	maximum number of codon",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:7975,reduce,reduce,7975,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['reduce'],['reduce']
Energy Efficiency,"at nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; ----------------------------------------------",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:4330,consumption,consumption,4330,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['consumption'],['consumption']
Energy Efficiency,atabase size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 1,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:29396,consumption,consumption,29396,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Qu,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:27887,consumption,consumption,27887,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target data,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:28131,consumption,consumption,28131,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target data,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:28253,consumption,consumption,28253,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Es,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:28375,consumption,consumption,28375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Qu,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:28619,consumption,consumption,28619,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Es,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:28741,consumption,consumption,28741,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,atabase size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=========,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:29762,consumption,consumption,29762,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,"atabase, gives fewer exact matches than for example using Diamond with the same parameters. It seems MMSeqs2 aligns more sequences than Diamond but it misses more exact matches as well. ## Steps to Reproduce (for bugs). * Randomly extract 10,000 sequences from Uniref90 . * Perform a search against Uniref90 with the 10,000 query proteins using MMSeqs2 search with parameters ```-s 4``` and ```--max-seqs 4000``` . * Perform a search against Uniref90 with the same 10,000 query proteins using Diamond blastp with default parameters and ```--max-target-seqs 4000```. * Compare the number of query sequences for which an exact match is retrieved across the two searches (i.e. a query sequence that aligns perfectly against itself). . ## MMseqs Output (for bugs). MMSeqs2 logs: https://gist.github.com/fstrozzi/b21b68aa94bcd9bb5cf19af537975850. ## Context; We were testing MMSeqs2 sensitivity and as a sort of true positive control we realigned some sequences randomly extracted from Uniref90 against the Uniref90, to check how many exact matches we were able to retrieve. We then saw that MMSeqs2 with ```-s 4```, which should match Diamond default (fast) parameters, misses some exact matches. #### MMSeqs2 . * total aligned query sequences: 9994; * exact matches (query sequence aligned with itself in the database): 9496. #### Diamond. * total aligned query sequences: 9975 ; * exact matches (query sequence aligned with itself in the database): 9975. We were also wondering what could be the parameters controlling this behavior and what we could do to improve the best hit search. We also tried to run MMSeqs2 with higher sensitivity (5.7) but the result is very similar. ; Thanks for this great software, we are finding it incredibly useful for both clustering and searching on large protein datasets and we would like to understand more on how to use it efficiently and correctly. ## Your Environment. * MMSeqs2 Release 3-be8f6 AVX2. * Diamond v0.9.21. * Environment : Amazon Linux AMI 2018.03.l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91:2194,efficient,efficiently,2194,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91,1,['efficient'],['efficiently']
Energy Efficiency,"ated memory consumption: 400G; Target database size: 74390789 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 74.39M 1m 27s 612ms; Index table: Masked residues: 17937595794; Index table: fill; [=================================================================] 74.39M 13s 623ms; Index statistics; Entries: 495972652; DB size: 12603 MB; Avg k-mer size: 0.387479; Top 10 k-mers; CSSCCCS 40539; CSSCSCS 36980; CSCSSCS 36180; CSCSCSS 35290; CSSCDSS 34425; CSCCSSS 33905; CSSCSSS 32740; CSCDSSS 31596; SCSCDSS 30280; CSCSDSS 29715; Time for index table init: 0h 2m 0s 290ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 74390789; Target db start 1 to 74390789; [==. ## Context; I have translated all the sequences in Uniref90 based on a reduced amino acid alphabet that has only 5 letters (C, A, D, G, S). I have tried clustering it again using `linclust` to 90% identity and 80% overlap, however, the number of clusters is larger than I expected (75M from 76M initial Uniref90 size). I thought that might be due to the reduced sensitivity as a further reduced amino acid alphabet is applied before computing the k-mers. . I've tried to use `mmseq cluster` instead, however, this seems to take a very long time. After 13h the progress bar has only two '=' signs. . I am not sure if I am approaching the right way. Is linclust capable to cluster a protein sequence database that has been translated to a reduced amino acid alphabet or does it interfere with the mmseq alphabet used during k-mer comparison?. I was expecting a much smaller number of clusters as sequences only use 5 letters now so they are more likely to be more similar. . For `mmseq cluster`, what is the expected computation time for 76M sequences? . ## Your Environment; Running on a 64-core and 500GB RAM Linux machine.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:13948,reduce,reduced,13948,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,3,['reduce'],['reduced']
Energy Efficiency,"ateindex ./MMseqs2DB/MMseqs2DB ./tmp --threads 48 --search-type 3 `; ## MMseqs Output (for bugs); Didn't collect the stdout/errr =\ only have these from the terminal; ```; Time for merging to nucl_split_seq_h: 0h 5m 44s 19ms; Time for merging to nucl_split_seq: 0h 4m 40s 563ms; Time for processing: 0h 23m 17s 335ms; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; [>                                                                ] 0.00% 1 eta ./tmp/11929725182862116610/createindex.sh: line 56: 16913 Segmentation fault      ""$MMSEQS"" $INDEXER ""$2/nucl_split_seq"" ""$INPUT"" $INDEX_PAR; Error: indexdb died; ```. ## Context; I'll need to reuse this DB several times, objective is to reduce overall runtime. ; Also, I noticed that seven *.idx[0-6] and seven *.idx.index[0-6] are created in the dir ./MMseqs2DB/ , but only the file MMseqs2DB.idx.0 isn't 0 bytes in size / increases (don't know if this is realted, but it reaches almost exactly 150.0GB (size when createindex crashed).; Any help is appreciated, hopefully I didn't miss something obvious :-); ## Your Environment; `MMseqs2 Version: f966bfa62a2b52d4821e908ac9e25808d1be0b81`; Using the avx2 binary, ; CPU: Intel(R) Xeon(R) Platinum 8168; Memory: 366 GB; OS: Linux 3.10.0-693.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280:1700,reduce,reduce,1700,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280,1,['reduce'],['reduce']
Energy Efficiency,"bdb-mode 1 . Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 7ms; prefilter ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 4 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 10966 type: Aminoacid; Estimated memory consumption: 1010M; Target database size: 10966 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 10.97K 0s 560ms; Index table: Masked residues: 4144; Index table: fill; [=================================================================] 10.97K 0s 667ms; Index statistics; Entries: 1798942; DB size: 498 MB; Avg k-mer size: 0.028108; Top 10 k-mers; IGAALA 68; GPGGTL 58; GIVAPG 43; ALTAGI 42; ALGNGK 34; GLGNGK 32; ELPGVN 31; DLLDLP 29; GQQVAR 24; GEQVAR 23; Time for index table init: 0h 0m 2s 664ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10966; Target db start 1 to 10966; [=================================================================] 10.97K 3s 91ms. 46.510777 k-mers per position; 438 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 13 sequences passed prefiltering per query sequence; 7 median result list",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:24473,consumption,consumption,24473,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['consumption'],['consumption']
Energy Efficiency,"blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 20",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:6223,Reduce,Reduced,6223,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['Reduce'],['Reduced']
Energy Efficiency,"clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . Database size: 440656032 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 440.66M 1m 58s 106ms; Sort kmer 0h 1m 9s 431ms; Sort by rep. sequence 0h 0m 39s 418ms; Time for fill: 0h 2m 31s 613ms; Time for merging to pref: 0h 0m 0s 1ms; Time for processing: 0h 9m 8s 726ms; rescorediagonal All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 440.66M 7m 9s 976ms; Time for merging to ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:4945,Reduce,Reduced,4945,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['Reduce'],['Reduced']
Energy Efficiency,"d orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Report mode 	0; Alignment format 	0; Format alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; First sequence as representative 	false; Target column 	1; Add full header 	false; Sequence source 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0. *skipped some parts of the log that took very little time*. Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GDQYNVT	84229; Time for index table init: 4h 18m 41s 415ms; k-mer similarity threshold: 180; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 695256546; Target db start 1 to 58919300; [=================================================================] 695.26M 61h 14m 42s 623ms. 2.307739 k-mers per position; 1254 DB matches per s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422:3623,consumption,consumption,3623,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422,1,['consumption'],['consumption']
Energy Efficiency,"da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; [New Thread 0x7ffff6210700 (LWP 9087)]; [New Thread 0x7ffff5a0f700 (LWP 9088)]; [New Thread 0x7ffff520e700 (LWP 9089)]; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers... Thread 3 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x7ffff5a0f700 (LWP 9088)]; 0x0000000000542911 in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (). ## Context; As already stated above, with smaller databases everything works fine. Even running a small different query set on the target database works just fine, as does the other way round (normal query, reduced target db).; Please tell me if u need the fasta files to recreate this bug. ## Your Environment; MMseqs2 Version: bcb164e42c79555cc521196c7f94f4b0123da048; Self-compiled build, following your description in ""Compile from source""; cmake version 3.5.2; gcc version 4.8.5 (SUSE Linux) ; Memory: 7.7 GiB RAM; openSUSE Leap 42.2, Kernel: 4.4.92-18.36-default, 64 bit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:5039,reduce,reduced,5039,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['reduce'],['reduced']
Energy Efficiency,"db_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. Error:; ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/627:1122,consumption,consumption,1122,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627,1,['consumption'],['consumption']
Energy Efficiency,"de.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 77298 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 77.30K 0s 41ms; Sort kmer 0h 0m 0s 46ms; Sort by rep. sequence 0h 0m 0s 22ms; Time for fill: 0h 0m 0s 11ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 225ms; rescorediagonal tmp/8115150149931881526/input tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 77.30K 0s 71ms; Time for merging to pref_rescore1: 0h 0m 0s 102ms; Time for processing: 0h 0m 0s 4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:3926,Reduce,Reduced,3926,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['Reduce'],['Reduced']
Energy Efficiency,"e dataset I want to cluster and I want to use distributed-memory MPI mode of MMseqs2. I have compiled and successfully run the MPI version of MMseqs2 by prepending the RUNNER=""..."" string. ## Current Behavior; In order to see whether MMseqs2 can really make use of node-level parallelism, I first clustered a dataset of 50 million sequences on a single node with a single MPI task and multiple threads. The command I use for that purpose is:. ```; RUNNER=""srun -n 1 --ntasks-per-node 1"" ./mmseqs-par easy-linclust <fasta-file> <cluster-prefix> <tmp-dir> --min-seq-id 0.7 -c 0.8 --cov-mode 0 --threads 64; ```. This completes in ~34 minutes and has a peak memory usage of 27.9 GB. Now when I change the number of nodes to 4, by using RUNNER=""srun -n 4 ..., it completes in ~49 minutes and still has a peak memory usage of ~27.9 GB. The issue is similar for 16 nodes, i.e., the runtime does not go down as one expects. Is this expected? Am I using the MPI version correctly? It seems like there is no use for utilizing the MPI-mode as it is not efficient in terms of runtime and memory. ## Expected Behavior; I know some components of the clustering pipeline are sequential, and some of them are parallel. But one would logically expect a gain in terms of runtime and/or memory when using multiple nodes. ## MMseqs Output (for bugs); The output for single-node run: https://pastebin.com/waDMWGA3; The output for 4-node run: https://pastebin.com/B7bMaei3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; 61ca48883b50714be51fc35fc9b77325ffde53fb-MPI. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: ; compiler version: OpenMPI 4.0.2, gcc 8.3.0; cmake version: 3.14.4. * Server specifications (espec",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/331:1055,efficient,efficient,1055,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/331,1,['efficient'],['efficient']
Energy Efficiency,"e for processing: 0h 0m 0s 75ms; createsubdb tmp//7897776346521331899/clu_step0 tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 5ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 908ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 24ms. 15.668402 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:15990,consumption,consumption,15990,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['consumption'],['consumption']
Energy Efficiency,"e multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any sequence for key 62888288!; Add missing connections; [=================================================================] 100.00% 45.46M 1s 608ms; Time for read in: 0h 0m 28s 571ms; Total time: 0h 0m 40s 655ms; Size of the sequence database: 45461840; Size of the alignment datab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:3049,Reduce,Reduced,3049,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['Reduce'],['Reduced']
Energy Efficiency,"ectory tmp/15248047069833069253/search_tmp; search tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/result tmp/15248047069833069253/search_tmp -a 1 --alignment-mode 3 -c 1 --cov-mode 1 -s 5.7 --remove-tmp-files 1 . prefilter tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 1 --cov-mode 1 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7 . Query database size: 1 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 1 eta -; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 1 eta -; Index statistics; Entries: 41; DB size: 488 MB; Avg k-mer size: 0.000001; Top 10 k-mers; DFVKIA	1; ATLTKA	1; SEEGLA	1; IWEEIC	1; PFDSKD	1; CLRHLD	1; DMAGTD	1; QNRWRE	1; GENRSE	1; LAKPDF	1; Time for index table init: 0h 0m 0s 778ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 1; [=================================================================] 100.00% 1 eta -. 602.620000 k-mers per position; 41 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 siz",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:5814,consumption,consumption,5814,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,1,['consumption'],['consumption']
Energy Efficiency,"edundancy ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 26s 718ms; Time for processing: 0h 1m 14s 12ms; prefilter cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.99 --cov-mode 1 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 . Query database size: 119070883 type: Nucleotide; Estimated memory consumption: 544G; Target database size: 119070883 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 119.07M 11m 59s 618ms ; Index table: Masked residues: 1954198777; Index table: fill; [=================================================================] 100.00% 119.07M 8m 53s 150ms ; Index statistics; Entries: 43365843082; DB size: 248141 MB; Avg k-mer size: 2646841.008423; Top 10 k-mers; AAAAAAA	23063795; AAATTAA	21644433; AATTTAA	21117606; AAAAATT	20537065; AAATTTT	19681970; TTTTTTT	19035614; AATTTTT	18870179; ATTTTTT	17045685; TTTATTT	16633440; ATAAATT	16256141; Time for index table init: 0h 23m 3s 602ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 119070883; Target db start 1 to 119070883; [> ] 0.00% 1 eta -. Here are the files that were so far created in the tmp directory:; -rwx------ 1 btschits biogeo 11721 Apr 16 18:49 cascaded_clustering",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:10784,consumption,consumption,10784,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['consumption'],['consumption']
Energy Efficiency,"ence in the queryDB aginst a larger DB of amino acid sequences. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): home-brew; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: MMseqs2/13-45111; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; * Operating system and version:; * $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 40; On-line CPU(s) list: 0-39; Thread(s) per core: 1; Core(s) per socket: 20; Socket(s): 2; NUMA node(s): 2; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6148 CPU @ 2.40GHz; Stepping: 4; CPU MHz: 2400.000; BogoMIPS: 4800.00; Virtualization: VT-x; L1d cache: 32K; L1i cache: 32K; L2 cache: 1024K; L3 cache: 28160K; NUMA node0 CPU(s): 0-19; NUMA node1 CPU(s): 20-39; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch epb cat_l3 cdp_l3 invpcid_single intel_ppin ssbd mba rsb_ctxsw ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts pku ospke md_clear spec_ctrl intel_stibp flush_l1d arch_capabilities",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/817:5016,monitor,monitor,5016,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/817,1,['monitor'],['monitor']
Energy Efficiency,"ens-steps 3 --lca-search 1. prefilter /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target split mode. Searching through 16 splits; Estimated memory consumption: 8G; Target database size: 41195879 type: Aminoacid; Process prefiltering step 1 of 16. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 16); Query db start 1 to 1075; Target db start 1 to 2572505; [=================================================================] 1.08K 2s 989ms. 390.206187 k-mers per position; 423278 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 25 sequences passed prefiltering per query sequence; 26 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 0m 0s 8ms; Time for merging to pref_0_tmp_0_tmp: 0h 0m 0s 10ms; Process prefiltering step 2 of 16. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 2 of 16); Query db start 1 to 1075; Target db start 2572506 to 5147039; [=================================================================] 1.08K 3s 152ms. 390.206187 k-mers per position; 423330 DB matches per sequence; 0 overflow",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:4879,consumption,consumption,4879,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,1,['consumption'],['consumption']
Energy Efficiency,"ent-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 . prefilter /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/query_seqs_split /data/ct/datenbank/silva_mmseqs/silva.idx /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 18G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; ^C===============> ] 25.00% 2.00K eta 5m 1s . **Runs of Intel computer**; [kabru@bwp-cfdmain test]$ mmseqs taxonomy testdb ~/datenbank/silvadb testx_result tmp; taxonomy testdb /home/kabru/datenbank/silvadb testx_result tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	72; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:4120,consumption,consumption,4120,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,1,['consumption'],['consumption']
Energy Efficiency,"ep 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Context; Used the same db (hmmsearchDB) to cluster my sequences using mmseqs cluster. Now I'm trying to see what each cluster is comprised of by running a search against Uniref100. ## Your Environment. IBM SR650 ServerIntel Xeon Silver 4216, 2 CPUs, 2.1Ghz, 64 threads - 1TB DDR4 2933mhz RDIMM - HDD 12TB SAS. Titan X 3584 CUDA core, 12 GB GDDR5X, 480 GB/sec, 11 Tflops.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:5724,allocate,allocate,5724,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,2,['allocate'],['allocate']
Energy Efficiency,"eqs-framework.dir/commons/Util.cpp.o; [ 41%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/CacheFriendlyOperations.cpp.o; [ 42%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ExtendedSubstitutionMatrix.cpp.o; [ 42%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Indexer.cpp.o; [ 42%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/IndexBuilder.cpp.o; [ 43%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/KmerGenerator.cpp.o; [ 43%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Main.cpp.o; [ 44%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Prefiltering.cpp.o; [ 44%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/PrefilteringIndexReader.cpp.o; [ 45%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/QueryMatcher.cpp.o; [ 45%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ReducedMatrix.cpp.o; [ 45%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/SequenceLookup.cpp.o; [ 46%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/UngappedAlignment.cpp.o; [ 46%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/multihit/besthitperset.cpp.o; /galaxy/home/ksahlin/prefix/source/MMseqs2/src/multihit/besthitperset.cpp: In member function ‘virtual std::string BestHitBySetFilter::aggregateEntry(std::vector<std::vector<std::basic_string<char> > >&, unsigned int, unsigned int)’:; /galaxy/home/ksahlin/prefix/source/MMseqs2/src/multihit/besthitperset.cpp:38:35: warning: ‘bestEntry’ may be used uninitialized in this function [-Wmaybe-uninitialized]; std::vector<std::string> *bestEntry;; ^; [ 47%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/multihit/combinepvalperset.cpp.o; [ 47%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/multihit/resultsbyset.cpp.o; [ 47%] Building CXX object src/CMakeFiles/mmseqs-fr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:12583,Reduce,ReducedMatrix,12583,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,1,['Reduce'],['ReducedMatrix']
Energy Efficiency,eqs-framework.dir/commons/Util.cpp.o; [ 52%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/CacheFriendlyOperations.cpp.o; [ 52%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ExtendedSubstitutionMatrix.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Indexer.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/IndexBuilder.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/KmerGenerator.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Main.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Prefiltering.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/PrefilteringIndexReader.cpp.o; [ 55%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/QueryMatcher.cpp.o; [ 55%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ReducedMatrix.cpp.o; [ 56%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/SequenceLookup.cpp.o; [ 56%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/UngappedAlignment.cpp.o; [ 56%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ungappedprefilter.cpp.o; [ 57%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/multihit/besthitperset.cpp.o; [ 57%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/multihit/combinepvalperset.cpp.o; [ 58%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/multihit/Aggregation.cpp.o; [ 58%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/multihit/MultiHitDb.cpp.o; [ 58%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/multihit/MultiHitSearch.cpp.o; [ 59%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/taxonomy/lca.cpp.o; [ 59%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/taxonomy/addtaxonomy.cpp.o; [ 59%] Building CXX object src/CMakeFil,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:16251,Reduce,ReducedMatrix,16251,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,1,['Reduce'],['ReducedMatrix']
Energy Efficiency,"eqs2/src/alignment/MultipleAlignment.cpp:168; #1 0x55c61d2432cc in MultipleAlignment::computeMSA(Sequence*, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > > const&, std::vector<Matcher::result_t, std::allocator<Matcher::result_t> > const&, bool) /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/alignment/MultipleAlignment.cpp:208; #2 0x55c61d180e7b in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/util/result2profile.cpp:203; #3 0x7fc0f70d796d (/usr/lib/x86_64-linux-gnu/libgomp.so.1+0x1696d); #4 0x7fc0f6c916da in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76da); #5 0x7fc0f69ba71e in __clone (/lib/x86_64-linux-gnu/libc.so.6+0x12171e). 0x61a0000233e0 is located 0 bytes to the right of 1376-byte region [0x61a000022e80,0x61a0000233e0); allocated by thread T3 here:; #0 0x7fc0f812b790 in posix_memalign (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xdf790); #1 0x55c61cd2e5c3 in mem_align(unsigned long, unsigned long) /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/lib/simd/simd.h:463; #2 0x55c61cee071f in malloc_simd_int(unsigned long) /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/lib/simd/simd.h:483; #3 0x55c61d2410c9 in MultipleAlignment::initX(int) /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/alignment/MultipleAlignment.cpp:19; #4 0x55c61d243175 in MultipleAlignment::computeMSA(Sequence*, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > > const&, std::vector<Matcher::result_t, std::allocator<Matcher::result_t> > const&, bool) /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/alignment/Mul",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:4034,allocate,allocated,4034,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245,1,['allocate'],['allocated']
Energy Efficiency,"equence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	36; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; .............; Time for fill: 0 h 0 m 2s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 3s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 2s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 9s; Rescore diagonals.; Program call:; panproteome.db panproteome.db /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.5 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Rescore mode 	0; Sub Matrix 	blosum62.out; Remove hits ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:23805,Reduce,Reduced,23805,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Reduce'],['Reduced']
Energy Efficiency,"er_1 | Time for processing: 0h 0m 0s 47ms; mmseqs-web-worker_1 | 2022/09/22 16:09:14 Process finished gracefully without error; ```. For comparison, logs looked like this when the RNA indexing was working:; ```; mmseqs-web-worker_1 | indexdb /tmp/16248551593497607411/nucl_split_seq /opt/mmseqs-web/databases/pdb_rna_sequence --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 1 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmseqs-web-worker_1 | Write SPACEDPATTERN (23); mmseqs-web-worker_1 | Write DBR1INDEX (5); mmseqs-web-worker_1 | Write DBR1DATA (6); mmseqs-web-worker_1 | Write DBR2INDEX (7); mmseqs-web-worker_1 | Write DBR2DATA (8); mmseqs-web-worker_1 | Write HDR1INDEX (18); mmseqs-web-worker_1 | Write HDR1DATA (19); mmseqs-web-worker_1 | Write HDR2INDEX (20); mmseqs-web-worker_1 | Write HDR2DATA (21); mmseqs-web-worker_1 | Write GENERATOR (22); mmseqs-web-worker_1 | Index table: counting k-mers; mmseqs-web-worker_1 | [=================================================================] 10.75K 1s 426ms; mmseqs-web-worker_1 | Index table: Masked residues: 29698; mmseqs-web-worker_1 | Index table: fill; mmseqs-web-worker_1 | [=================================================================] 10.75K 0s 783ms; mmseqs-web-worker_1 | Index statistics; mmseqs-web-worker_1 | Entries: 6377423; mmseqs-web-worker_1 | DB size: 8228 MB; mmseqs-web-worker_1 | Avg k-mer size: 0.005939; mmseqs-web-worker_1 | Top 10 k-mers; mmseqs-web-worker_1 | GAGTGGTTAGGCGGA	1170; mmseqs-web-worker_1 | TGAAACGGCCCCC",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:14220,consumption,consumption,14220,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['consumption'],['consumption']
Energy Efficiency,"erging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 16ms; prefilter ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned ./mmseqs_output/tmp/5351426679731834765/seq_seeds.merged ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 26229 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 34414 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 34.41K 1s 394ms; Index table: Masked residues: 8741; Index table: fill; [=================================================================] 34.41K 1s 378ms; Index statistics; Entries: 6295744; DB size: 524 MB; Avg k-mer size: 0.098371; Top 10 k-mers; DVLDMP 2320; PDVMRM 1368; DRQVAY 1181; PFPEAR 738; MPLGAT 728; MPMGAT 703; GQQVAR 620; ADYTFS 597; LTFLYV 568; VLLALS 518; Time for index table init: 0h 0m 4s 142ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 26229; Target db start 1 to 34414; [=================================================================] 26.23K 1m 58s 7ms. 775.834912 k-mers per position; 60277 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 193 sequences passed prefiltering per query sequence; 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:38161,consumption,consumption,38161,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['consumption'],['consumption']
Energy Efficiency,"ers ==========; ===================================================; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3 -s 4.0. Query database size: 6 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 34258 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 34.26K 0s 519ms; Index table: Masked residues: 72412; Index table: fill; [=================================================================] 34.26K 0s 429ms; Index statistics; Entries: 9905952; DB size: 544 MB; Avg k-mer size: 0.154780; Top 10 k-mers; GPGGTL	164; GQQVAR	114; GLGNGK	80; GEGGVV	73; GPGGTT	69; LLDPAL	54; SGGSLR	53; LLGPGK	49; GQQIAR	49; GQQLAR	48; Time for index table init: 0h 0m 1s 840ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 34258; [=================================================================] 6 0s 2ms. 37.492909 k-mers per position; 726 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 3 sequences passed prefiltering per query sequence; 4 median result list length; 0 s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:3127,consumption,consumption,3127,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['consumption'],['consumption']
Energy Efficiency,"ers-split-mode 0 --create-lookup 0 --threads 96 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7.5 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 . Query database size: 4000 type: Nucleotide; Estimated memory consumption: 11G; Target database size: 365688 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 100.00% 365.69K 16s 177ms ; Index table: Masked residues: 1079896; Index table: fill; [=================================================================] 100.00% 365.69K 12s 498ms ; Index statistics; Entries: 297952985; DB size: 9896 MB; Avg k-mer size: 0.277490; Top 10 k-mers; GGCGCAGCGCGGTGC	366; TCCGGGCCGCACGGT	330; GTCGCGGCAGCGCCG	209; CAGACGCGCGTGCCG	204; CGCGCGCGTCGCGCG	167; CGCGCGCGTGGCGCG	157; GCTGCGCGCGGCGCG	151; CGCGGGCGTGGCGCG	149; CGTGCGCGTGGCGCG	147; CGCGCGCCCGGCGCG	133; Time for index table init: 0h 0m 39s 203ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 4000; Target db start 1 to 365688; [=================================================================] 100.00% 4.00K 0s 74ms ; [===============================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:5054,consumption,consumption,5054,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,1,['consumption'],['consumption']
Energy Efficiency,"es 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 6 0s 21ms; Time for merging to orfs_aa_h: 0h 0m 0s 276ms; Time for merging to orfs_aa: 0h 0m 0s 415ms; Time for processing: 0h 0m 1s 438ms; prefilter /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_aa ../../../../resources/GTDB/mmseqs_gtdb/GTDB /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 5696 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 124G; Target database size: 106052079 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 35.35M 7m 55s 640ms; Index table: Masked residues: 89908004; Index table: fill; [===> ] 5.00% 1.77M eta 4h 48m 2s; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): conda; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ~190 Gb, HPC; * Operating system and version: CentOS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/479:4446,consumption,consumption,4446,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479,1,['consumption'],['consumption']
Energy Efficiency,"est tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s 620ms; Time for processing: 5h 43m 57s 88ms; rescorediagonal inDB inDB tmp/18375844090983922724/pref tmp/18375844090983922724/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 ; -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 160 --compressed 0 -v 3. [=================================================================] 100.00% 2.83B 1h 11m 50s 841ms. [=================================================================] ; .; .; .; 100.00% 1.00M 0s 440ms; [=================================================================] 100.00% 1",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:2596,Reduce,Reduced,2596,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311,1,['Reduce'],['Reduced']
Energy Efficiency,"ficial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 149ms; rescorediagonal artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 136 0s 18ms; Time for merging to pref_rescore1: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 48ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:4154,Reduce,Reduced,4154,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['Reduce'],['Reduced']
Energy Efficiency,"g alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter queryDB sequenceDB tmp/837003320692135749/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 5.7 . Query database size: 1 type: Aminoacid; Target split mode. Searching through 5 splits; Estimated memory consumption: 297G; Target database size: 358983966 type: Aminoacid; Process prefiltering step 1 of 5. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; tmp/837003320692135749/blastp.sh: line 99: 35385 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died. ## Steps to Reproduce (for bugs); $ mmseqs search queryDB sequenceDB resultDB tmp. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Doing a seach of one sequence in the queryDB aginst a larger DB of amino acid sequences. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): home-brew; * For self-compiled and Homebrew: Compile",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/817:3019,consumption,consumption,3019,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/817,1,['consumption'],['consumption']
Energy Efficiency,"g exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 48 --compressed 0 -v 3 -s 7.0 . Query database size: 1270615 type: Profile; Estimated memory consumption: 7G; Target database size: 1270615 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 1.27M 6s 285ms; Index table: Masked residues: 39476984; Index table: fill; [=================================================================] 1.27M 5s 428ms; Index statistics; Entries: 522806522; DB size: 3479 MB; Avg k-mer size: 8.168852; Top 10 k-mers; IHDKNI	9354; DVSGLL	6729; LGGFVY	6623; SSSSSS	5575; IGGFVY	4538; LSCHLV	4001; EKDYGV	3708; LIMAGS	3629; FGVKLP	3541; KSVSVV	3538; Time for index table init: 0h 0m 12s 974ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1270615; Target db start 1 to 1270615; [=================================================================] 1.27M 2h 31m 44s 357ms. 1266.108246 k-mers per position; 3373560 DB matches per sequence; 626307 overflows; 21 queries produce too many hits (truncated result); 299 sequences passed pref",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:8855,consumption,consumption,8855,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['consumption'],['consumption']
Energy Efficiency,"g: 0h 0m 0s 121ms; createsubdb tmp//538598962955004214/clu_redundancy ../DB_in/fasta_in_db_HC tmp//538598962955004214/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 26ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 6ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 58ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=================================================================] 100.00% 276 0s 31ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 seque",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:11614,consumption,consumption,11614,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['consumption'],['consumption']
Energy Efficiency,"h data file tcdb_query.nr.db ... Done.; > Query database type: Aminoacid; > Target database type: Aminoacid; > Calculation of Smith-Waterman alignments.; > Error: Alignment died; > . ## Context; I have two databases, they don't have equal entries but some sequences have 100% identity.; I try to search using --add-self-matches to cluster the result.; The search fails in alignment step when I use this options, without this options the search run well. . ## Your Environment. * Git commit used: 7ca117893675cdca309e2c9dfc444bbc7462e858; * Which MMseqs version was used: Linuxbrew; * Compiler and Cmake: cmake version 3.12.3; * Server specifications: 188Gb ; lscpu:; `; Architecture: x86_64 ; CPU op-mode(s): 32-bit, 64-bit ; Byte Order: Little Endian ; CPU(s): 36 ; On-line CPU(s) list: 0-35 ; Thread(s) per core: 2 ; Core(s) per socket: 18 ; Socket(s): 1 ; NUMA node(s): 1 ; Vendor ID: GenuineIntel ; CPU family: 6 ; Model: 85 ; Model name: Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz ; Stepping: 4 ; CPU MHz: 2680.333 ; BogoMIPS: 4600.00 ; Virtualization: VT-x ; L1d cache: 32K ; L1i cache: 32K ; L2 cache: 1024K ; L3 cache: 25344K ; NUMA node0 CPU(s): 0-35 ; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts pku ospke ; `",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:9776,monitor,monitor,9776,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,1,['monitor'],['monitor']
Energy Efficiency,h-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 7.5 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Estimated memory consumption: 1G; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Process prefiltering step 1 of 1; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | k-mer similarity threshold: 96; docker-compose-mmseqs-web-worker-1 | Starting prefiltering scores calculation (step 1 of 1); docker-compose-mmseqs-web-worker-1 | Query db start 1 to 1; docker-compose-mmseqs-web-worker-1 | Target db start 1 to 382389; docker-compose-mmseqs-web-worker-1 | [=================================================================] 1 0s 3ms; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | 19.566667 k-mers per position; docker-compose-mmseqs-web-worker-1 | 3351 DB matches per sequence; docker-compose-mmseqs-web-worker-1 | 0 overflows; docker-compose-mmseqs-web-worker-1 | 0 queries produce too much hits (truncated result); docker-compose-mmseqs-web-worker-1 | 6 sequences passed prefiltering per query sequence; docker-compose-mmseqs-web-worker-1 | 6 median result list length; docker-compose-mmseqs-web-worker-1 | 0 sequences with 0 size result lists; docker-compose-mmseqs-web-worker-1 | Time for merging to pref_0: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time f,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717:3568,consumption,consumption,3568,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717,1,['consumption'],['consumption']
Energy Efficiency,"headers-split-mode 0 --create-lookup 0 --threads 256 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 3ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 280714 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 80ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 68ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 5s 578ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 280714; Target db start 1 to 69220; [=================================================================] 280.71K 5s 447ms. 0.936617 k-mers per position; 8306 DB matches per sequence; 48 overflows; 0 qu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:6786,consumption,consumption,6786,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['consumption'],['consumption']
Energy Efficiency,hhblits3 on bfd takes 25GB of physical memory. Is there a way to restrain hhblits3 memory consumption? Thank you.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/24#issuecomment-533541518:90,consumption,consumption,90,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/24#issuecomment-533541518,1,['consumption'],['consumption']
Energy Efficiency,"iments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 25.00K 0s 11ms ; Time for merging to pref_rescore1: 0h 0m 0s 8ms==================>] 99.34% 24.84K eta 0s ; Time for processing: 0h 0m 0s 48ms; clust experiments/small.mm.db experiments/tmp//6404161245249296443/pref_rescore1 experiment",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:5284,consumption,consumption,5284,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['consumption'],['consumption']
Energy Efficiency,"imit, such as 10G for ten gigabyte or 1T for one terabyte of RAM. ...so I'm using `--split-memory-limit` with 80% of the RAM provided for the qsub job. However, I always get the error:. ```; search --threads 8 -e 1e-3 --max-accept 1 --max-seqs 100 -s 6 --num-iterations 2 --split 0 --split-memory-limit 160G /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search/hits_seqs09_db /ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_TMP09. MMseqs Version: 	11.e1a1c; E-value threshold 	0.001; Max accept 	1; Threads 	8; Sensitivity 	6; Max results per query 	100; Split database 	0; Split memory limit 	160G; Search iterations 	2. Failed to mmap memory dataSize=321859477504 File=/ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db.idx. Error 12.; ```. Even if I reduce `--split-memory-limit` to 50% or just 20% of the total memory provided for the qsub job, the job still dies with the same error. Maybe I'm not understanding or using `--split-memory-limit` correctly??. I'm using UniRef90 as the db. If I use 336G for the job mem limit, then the `mmseq search` job runs without an error. . ## Steps to Reproduce (for bugs). `mmseqs search` on UniRef90 to provide a large RAM requirement for the job. . ## Your Environment. Ubuntu 18.04.4. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338:1343,reduce,reduce,1343,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338,1,['reduce'],['reduce']
Energy Efficiency,"ing: 0h 0m 0s 2ms; prefilter tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --seed-sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3 -s 5.7 . Query database size: 4 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 2 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 2 0s 2ms; Index table: Masked residues: 18; Index table: fill; [=================================================================] 2 0s 2ms; Index statistics; Entries: 8669; DB size: 8192 MB; Avg k-mer size: 0.000008; Top 10 k-mers; AAATAAACAAAAAAA	2; TTAGATCGAAAAAAA	2; AACCAACTAAAAAAA	2; TCCTTTCTCAAAAAA	2; CCAAAATAACAAAAA	2; TTGAATGCACAAAAA	2; AATGTGCTACAAAAA	2; GCAATTAACCAAAAA	2; CTCTGGTACGAAAAA	2; GGGTGGAATGAAAAA	2; Time for index table init: 0h 0m 7s 405ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 4; Target db start 1 to 2; [================================================] 4 ================0s 6ms; =; 0.991092 k-mers per position; 4326 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 2 median result list length; 2 sequences with 0 size result lists; Time for mergi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:7345,consumption,consumption,7345,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['consumption'],['consumption']
Energy Efficiency,"ior appear to function as intended. Perhaps something in the profile generation or implementation of profile against consensus searches affects the interpretation of the -c parameter? Investigating the alignment data of the attached MSA with mmseqs convertalis (attached below) shows that all hits indeed passes the -c 0.8 cutoff? As such perhaps my understanding of what constitutes alignment coverage is lacking and in that case how would one go about retricting the ""coverage"" to only query-target pairs with lengths within 80% of each other? I have tried --covmode 5 with similar results. . ## Expected Behavior. Restriction of clustered protein sequence lengths by imposing cover limits via the -c parameter in conjunction with any --covmode. ## Current Behavior. Clusters containing sequences of vastly different lengths far outside the range of the -c cutoff. . ## Context. My protocol can be summarized roughly as:. 1) Collapse paralogs and create cluster representatives in order to reduce database redundancy using;; mmseqs cluster initial-database clusters -s 5 -c 0.8 --min-seq-id 0.9 --cluster_mode 0 --max-iterations 3 --max-seqs 100 --covmode 0. 2) Iterate profile generation and searches of profiles against consensus sequences; mmseqs search cluster-representatives cluster-representatives representative-search -s 7 -c 0.8 --covmode 0 --maxseqs 300 -e 0.003; mmseqs result2profile cluster-representatives cluster-representatives representative-search profiles; mmseqs profile2consensus profiles initial-database consensus; mmseqs search profiles consensus profile-search -s 7 -c 0.8 --covmode 0 --maxseqs 300 -e 0.003; mmseqs clust --clustermode 0 consensus profile-search profile-clusters; mmseqs createsubdb profile-clusters initial-database new-cluster-representatives. Here new-cluster-representatives are used as input to round two of searches. . ## Alignment data ; query target fident qcov tcov; XP_645403.1 XP_640770.1 0.369 0.989 0.967; XP_635472.2 XP_640770.1 0.524 0.987 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:1956,reduce,reduce,1956,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['reduce'],['reduce']
Energy Efficiency,"ist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:. cmake --version; cmake version 2.8.12.2; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; c++ --version; c++ (GCC) 6.2.1 20160916 (Red Hat 6.2.1-3). * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; cat /proc/cpuinfo. ```; processor	: 63; vendor_id	: GenuineIntel; cpu family	: 6; model		: 46; model name	: Intel(R) Xeon(R) CPU X7560 @ 2.27GHz; stepping	: 6; microcode	: 0xb; cpu MHz		: 1064.000; cache size	: 24576 KB; physical id	: 3; siblings	: 16; core id		: 11; cpu cores	: 8; apicid		: 119; initial apicid	: 119; fpu		: yes; fpu_exception	: yes; cpuid level	: 11; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 x2apic popcnt lahf_lm ida epb dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips	: 4527.83; clflush size	: 64; cache_alignment	: 64; address sizes	: 44 bits physical, 48 bits virtual; power management:; ```; free; ```; total used free shared buff/cache available; Mem: 528377212 3193792 142947764 9564 382235656 523907652; Swap: 0 0 0. ```; * Operating system and version:; cat /etc/redhat-release ; CentOS Linux release 7.3.1611 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31:6587,monitor,monitor,6587,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31,2,"['monitor', 'power']","['monitor', 'power']"
Energy Efficiency,"k profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts true; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner ; Force restart with latest tmp false; Remove temporary files false. prefilter query_db/db /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/t_orfs_aa /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 589824T -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 96 --compressed 1 -v 3 -s 6.0 . Query database size: 727664 type: Aminoacid; Estimated memory consumption: 60T; Target database size: 13319670203 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; Error: Prefilter died; Error: Search step died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:3780,consumption,consumption,3780,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510,1,['consumption'],['consumption']
Energy Efficiency,"kup 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 6.46M 24s 391ms; Time for merging to query_seqs_h: 0h 0m 3s 920ms; Time for merging to query_seqs: 0h 0m 19s 622ms; Time for processing: 0h 0m 57s 140ms; prefilter tmp/576731152808920235/query_seqs tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 128 --compressed 0 -v 3 . Query database size: 12919340 type: Nucleotide; Estimated memory consumption: 95G; Target database size: 6459670 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 6.46M 24s 264ms; Index table: Masked residues: 231705872; Index table: fill; [=================================================================] 6.46M 51s 182ms; Index statistics; Entries: 7104738736; DB size: 48845 MB; Avg k-mer size: 6.616804; Top 10 k-mers; GAACAACCGGCTTAG	562246; CTCACCACGAAACGG	555944; TCATGATAAGCGCTG	492357; GTTGCTCATGAAGGT	467881; CCCGTTCGTTGCAGG	454633; CCGTTGGCCAGTAAG	425430; TCTTCACTAGACCGT	407926; CTGGATGTCCACCAG	396183; GCCCTGCAACCACGG	387874; CTACCTCTCCCCTTG	382664; Time for index table init: 0h 1m 21s 797ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12919340; Target db start 1 to 6459670; [==. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:11594,consumption,consumption,11594,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['consumption'],['consumption']
Energy Efficiency,"l the `clust` module which implements the actual clustering algorithm, not the whole `cluster` workflow with the searches etc:; ```; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```; should be . ```; mmseqs clust $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```. For a 70% clustering you can adapt the 50% clustering strategy:. ```; # cluster down to 70%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust70"" \; --filter-column 3 --filter-regex '(0\.[7-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust70"" ""$TMPPATH/clu_uniclust70"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust70_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust70; ```. The idea here is to go directly from 90 to 30 to avoid any possible transitivity issues. In the MMseqs2 cascaded clustering you can get representative->member hits below the given thresholds after putting clusters from previous clustering steps together. You can reconstruct the 50 (and a 70) clustering from the 30% alignments, and that's what it does (it does it with a roundabout regex, because we didn't have expression filters back then).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067:1290,adapt,adapt,1290,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067,1,['adapt'],['adapt']
Energy Efficiency,"lapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	1; Search steps 	3; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 1.000 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 8408 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8408; Target db start 1 to 756891; [=================================================================] 100.00% 8.41K 0s 981ms . 0.020249 k-mers per position; 72 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 8273 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 10ms; Time for processing: 0h 0m 11s 757ms; align IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 tmp/16138406286044646862/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 21474836",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:5040,consumption,consumption,5040,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['consumption'],['consumption']
Energy Efficiency,"les//13298481167543164943/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/seq_wrong_assigned tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 10 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 210 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 210 0s 6ms; Index statistics; Entries: 1284; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 989ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10; Target db start 1 to 210; [=================================================================] 10 0s 14ms. 487.061439 k-mers per position; 14 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 609ms; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:27964,consumption,consumption,27964,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['consumption'],['consumption']
Energy Efficiency,"lse; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (153016352 byte) of total memory (1886452531 byte); Process file into 1 parts; Generate k-mers list 0; ............; Time for fill: 0h 0m 1s 398ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 1s 345ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Program call:; rescorediagonal tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 0.001 -c 0.9 --cov-mode 1 --min-seq-id 0.9 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --no-preload 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce8790",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:7027,Reduce,Reduced,7027,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['Reduce'],['Reduced']
Energy Efficiency,"m 21s 501ms; Time for merging to orfs_aa_h: 0h 2m 11s 439ms; Time for merging to orfs_aa: 0h 2m 30s 736ms; Time for processing: 0h 7m 50s 411ms; prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 310097721 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 18s 71ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 52s 198ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 18338; Time for index table init: 0h 3m 27s 29ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 8); Query db start 1 to 310097721; Target db start 1 to 16332640; [=================================================================] 100.00% 310.10M 1h 8m 24s 140ms. 28.708682 k-mers per position; 4442 DB matches pe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:7181,consumption,consumption,7181,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['consumption'],['consumption']
Energy Efficiency,"mat alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap threshold 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	0; Write lookup file 	0; Greedy best hits 	false. createdb query.fasta tmp/5560041094345909208/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 23ms; Time for merging to query: 0h 0m 0s 22ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 105ms; Create directory tmp/5560041094345909208/search_tmp; search tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/result tmp/5560041094345909208/search_tmp --alignment-mode 3 -s 7 --remove-tmp-files 1 . prefilter tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/search_tmp/4325254035791307643/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3 -s 7.0 . Query database size: 14 type: Aminoacid; Estimated memory consumption: 23G; Target database size: 6263739 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 6.26M 33s 798ms; Index table: Masked residues: 16716549; Index table: fill; [=================================================================; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:4445,consumption,consumption,4445,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257,1,['consumption'],['consumption']
Energy Efficiency,"me $DB_name ""$TMP/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 2 --split-memory-limit 250G --threads 32. mmseqs align $DB_name $DB_name ""$TMP/pref"" ""$TMP/align"" -c 0.8 --alignment-mode 2 --min-seq-id 0.8 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647. mmseqs clust $DB_name $DB_name ""$TMP/align"" ""$TMP/clust"" --cluster-mode 0 --threads 32. awk '{ print $1 }' ""$TMP/clust.index"" > ""$TMP/clust_order"". mmseqs createsubdb ""$TMP/clust_order"" $DB_name ""$subDB"". mmseqs prefilter ""$subDB"" ""$subDB"" ""$TMP2/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 5 --split-memory-limit 250G --threads 32. mmseqs align ""$subDB"" ""$subDB"" ""$TMP2/pref"" ""$TMP2/align"" -c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647`. ## MMseqs Output (for bugs). MMseqs Version: 8ea08f0c75b9f08049fd8f01eb65f90d6fbdd93d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 300; Split database 0; Split mode 2; Split memory limit 250G; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 32; Compressed 0; Verbosity 3. Query database size: 1480080 type: Aminoacid; Estimated memory consumption: 5G; Target database size: 1480080 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 6; Index table: counting k-mers; [=================================================================] 1.48M 3s 585ms; Index table: Masked residues: 4728698; Index table: fill. ## Your Environment; I'm using the latest release of MMSeqs2.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/382:2344,consumption,consumption,2344,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382,1,['consumption'],['consumption']
Energy Efficiency,memory consumption and speed,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/678:7,consumption,consumption,7,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678,1,['consumption'],['consumption']
Energy Efficiency,"min-length 30 --max-length 32734 --orf-start-mode 1 --remove-tmp-files 1 . prefilter tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/orfs_aa databases/uniprotkb tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/tmp_taxonomy/15848989983316803073/tmp_hsp1/68; 53721603621777485/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-; seqs 300 --split 0 --split-mode 2 --split-memory-limit 200G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-se; lf-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0 . Query database size: 1599064123 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 163G; Target database size: 231921744 type: Aminoacid; Process prefiltering step 1 of 6; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.41M 2m 12s 304ms; Index table: Masked residues: 221272222; Index table: fill; [=================================================================] 38.41M 3m 45s 787ms; Index statistics; Entries: 11399442350; DB size: 74993 MB; Avg k-mer size: 8.905814; Top 10 k-mers; FSHAGSI 272598; AFMFFMP 260790; AFRNNFW 259163; RMNSFLP 218177; NNSWLPS 215496; AHFMIMV 211691; MPMGGNW 204521; TMLDRNT 168603; TGTYPSS 159040; GDQYNVT 148373; Time for index table init: 0h 6m 20s 599ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 1599064123; Target db start 1 to 38411731; [=================================================================] 1.60B 12h 46m 35s 370ms. 22.315418 k-mers per position; 10964 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 27 sequ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/577:21864,consumption,consumption,21864,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577,1,['consumption'],['consumption']
Energy Efficiency,"mmseqs/nr_db_mapping --threads 16 -v 3 . MMseqs Version:	f5b588be54de35876eff90f3694b67e1d00856ef; Threads 	16; Verbosity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=this@entry=0x7fffffffd290, __position=__position@entry=...); at /usr/include/c++/9/bits/vector.tcc:440; #11 0x000000000060c68b in std::vector<std::pair<std::__c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/666:2279,allocate,allocate,2279,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666,1,['allocate'],['allocate']
Energy Efficiency,"mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 2.0. Query database size: 960 type: Nucleotide; Estimated memory consumption: 1T; Target database size: 26422067 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [> ] 0.00% 1 eta -. tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:. syste",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/697:2684,consumption,consumption,2684,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697,1,['consumption'],['consumption']
Energy Efficiency,mory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memor,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:28953,consumption,consumption,28953,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,"mp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 273ms; Time for processing: 0h 0m 0s 816ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 3.5 . Query database size: 2328975 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 146 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 355ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 643ms; Index statistics; Entries: 5077775275; DB size: 38820 MB; Avg k-mer size: 3.967012; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 16s 755ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 146; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2328975; Target db start 1 to 13003941; [=================================================================] 2.33M 2m 23s 577ms. 183.593905 k-mers per position; 20689 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:7728,consumption,consumption,7728,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['consumption'],['consumption']
Energy Efficiency,"mpfiles//13298481167543164943/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 237 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 237 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 237 0s 39ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 237 0s 9ms; Index statistics; Entries: 1403; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 25ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 237; Target db start 1 to 237; [=================================================================] 237 0s 19ms. 20.483280 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 707ms; align tmpfiles",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:15764,consumption,consumption,15764,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['consumption'],['consumption']
Energy Efficiency,"ms; Time for processing: 0h 0m 0s 2ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 3.5 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 6712 type: Aminoacid; Estimated memory consumption: 998M; Target database size: 6712 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 6.71K 0s 98ms ; Index table: Masked residues: 74049; Index table: fill; [=================================================================] 100.00% 6.71K 0s 81ms ; Index statistics; Entries: 2455512; DB size: 502 MB; Avg k-mer size: 0.038367; Top 10 k-mers; IHDKNI 28; GPGGTL 17; LGGFVY 14; GQQVAR 10; SGQQAI 9; RDKELL 9; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; Time for index table init: 0h 0m 0s 735ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6712; Target db start 1 to 6712; [=================================================================] 100.00% 6.71K 0s 701ms . 36.614229 k-mers per position; 788 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 4 sequences passed prefiltering per query sequence; 3 media",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:21766,consumption,consumption,21766,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['consumption'],['consumption']
Energy Efficiency,"my output mode 0. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. prefilter ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs.idx temp/9118733262229857306/tmp_hsp1/5064659849361391999/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --s; plit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7. Index version: 16; Generated by: 98c37f3c32b222632ada6011504380e91351276b; ScoreMatrix: VTML80.out; Query database size: 6282 type: Aminoacid; split was set to 5 but at least 8 are required. Please run with default paramerters; Target split mode. Searching through 5 splits; Estimated memory consumption: 138G; Process needs more than 113G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 213522593 type: Aminoacid; Process prefiltering step 1 of 5. k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 5); Query db start 1 to 6282; Target db start 1 to 42795128; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/278:4956,consumption,consumption,4956,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278,1,['consumption'],['consumption']
Energy Efficiency,"n(R) Gold 6130 CPU @ 2.10GHz; stepping : 4; microcode : 0x2007006; cpu MHz : 2100.000; cache size : 22528 KB; physical id : 0; siblings : 32; core id : 0; cpu cores : 16; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 22; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts hwp hwp_act_window hwp_epp hwp_pkg_req pku ospke md_clear flush_l1d arch_capabilities; vmx flags : vnmi preemption_timer posted_intr invvpid ept_x_only ept_ad ept_1gb flexpriority apicv tsc_offset vtpr mtf vapic ept vpid unrestricted_guest vapic_reg vid ple shadow_vmcs pml ept_mode_based_exec tsc_scaling; bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit mmio_stale_data; bogomips : 4200.00; clflush size : 64; cache_alignment : 64; address sizes : 46 bits physical, 48 bits virtual; power management:. $ free; total used free shared buff/cache available; Mem: 791192240 20105804 63519620 33656 707566816 765066152; Swap: 0 0 0; ```; * Operating system and version:; ```; $ cat /etc/*release; DISTRIB_ID=Ubuntu; DISTRIB_RELEASE=22.04; DISTRIB_CODENAME=jammy; DISTRIB_DESCRIPTION=""Ubuntu 22.04.3 LTS""; PRETTY_NAME=""Ubuntu 22.04.3 LTS""; <truncated>; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/833:5810,power,power,5810,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/833,1,['power'],['power']
Energy Efficiency,"ng to query_seqs: 0h 0m 0s 494ms; Time for processing: 0h 0m 2s 117ms; prefilter tmp/3198441352783276465/clu_tmp/13016959338117486175/query_seqs tmp/3198441352783276465/clu_tmp/13016959338117486175/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 5 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3 . Query database size: 19552 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 9776 type: Nucleotide; tmp/3198441352783276465/clu_tmp/13016959338117486175/nucleotide_clustering.sh: line 48: 1648954 Killed $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am trying to cluster a number of gene sequences with an identity of 0.8 and no minimum length for the aligned portion of the genes. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15.6f452; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Conda; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): S",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:16627,consumption,consumption,16627,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['consumption'],['consumption']
Energy Efficiency,"nslate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 446 type: Aminoacid; > Target split mode. Searching through 12 splits; > Estimated memory consumption: 91G; > Target database size: 230328648 type: Aminoacid; > Process prefiltering step 1 of 12; > ; > Index table k-mer threshold: 122 at k-mer size 7 ; > Index table: counting k-mers; > tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/blastp.sh : ligne 99 : 10291 Instruction non permise $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; > Error: Prefilter died. ## Context. TrEMBL installed using the mmseqs databases command. ## Your Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. Operating system and version:; Linux version 3.10.0-1160.6.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) )",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/564:3417,consumption,consumption,3417,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564,1,['consumption'],['consumption']
Energy Efficiency,"nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===========================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:5859,Reduce,Reduced,5859,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['Reduce'],['Reduced']
Energy Efficiency,"ons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. indexdb refDB/NR refDB/NR --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 100G -v 3 --threads 48 . Target split mode. Searching through 41 splits; Estimated memory consumption: 79G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 10.84M 1m 4s 920ms; Index table: Masked residues: 61238522; Index table: fill; [=================================================================] 10.84M 1m 25s 193ms; Index statistics; Entries: 3850121923; DB size: 31796 MB; Avg k-mer size: 3.007908; Top 10 k-mers; SGQQRIA	33175; FLLLLLA	30439; ATQAYAV	30261; LAYGSGV	30200; CYGPSYQ	30190; SVAYNPS	30179; ACNSPVY	30160; GSLGSSV	30151; HALLFPS	30146; ISEQEGT	30145; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Index table: counting k-mers; [=================================================================] 10.85M 1m 3s 858ms; Index table: Masked residues: 61454634; Index table: fill; [===========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:61730,consumption,consumption,61730,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,1,['consumption'],['consumption']
Energy Efficiency,"out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 76215872 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 76.22M 6m 32s 415ms; Sort kmer 0h 0m 14s 675ms; Sort by rep. sequence 0h 0m 0s 974ms; Time for fill: 0h 0m 13s 496ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 7m 46s 594ms; rescorediagonal uniref90-DB-wwmj uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref tmp//16518381706844811497/linclust/11898236; 85496030198/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov; -mode 2 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [================================================================] =76.22M 19m 41s 19ms; Time for merging to pref_rescore1: 0h 0m 50s 277ms; Time for processing: 0h 21m 16",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:5502,Reduce,Reduced,5502,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['Reduce'],['Reduced']
Energy Efficiency,"p pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Create directory tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1; search BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/first tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1 --alignment-mode 1 -e 0.0001 --max-rejected 5 --max-accept 30 --threads 36 -s 3 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1. prefilter BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1/10054445979770264072/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 36 --compressed 0 -v 3 -s 3.0. Query database size: 355695 type: Aminoacid; Estimated memory consumption: 2T; Target database size: 532633656 type: Aminoacid; Index table k-mer threshold: 152 at k-mer size 7; Index table: counting k-mers. ```. Thank you.; Best,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/678:4675,consumption,consumption,4675,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678,1,['consumption'],['consumption']
Energy Efficiency,"p/13904432016917844997/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 10ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for merging to pref_filter2: 0h 0m 0s 176ms; Time for processing: 0h 0m 0s 468ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/942042864",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:8603,allocate,allocate,8603,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['allocate'],['allocate']
Energy Efficiency,"pdb_rna_sequence_h: 0h 0m 0s 12ms; mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence: 0h 0m 0s 9ms; mmseqs-web-worker_1 | Database type: Aminoacid; mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence.lookup: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 60ms; mmseqs-web-worker_1 | indexdb /opt/mmseqs-web/databases/pdb_rna_sequence /opt/mmseqs-web/databases/pdb_rna_sequence --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 1 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 1023M; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmseqs-web-worker_1 | Write SPACEDPATTERN (23); mmseqs-web-worker_1 | Write DBR1INDEX (5); mmseqs-web-worker_1 | Write DBR1DATA (6); mmseqs-web-worker_1 | Write HDR1INDEX (18); mmseqs-web-worker_1 | Write HDR1DATA (19); mmseqs-web-worker_1 | Write GENERATOR (22); mmseqs-web-worker_1 | Index table: counting k-mers; mmseqs-web-worker_1 | [=================================================================] 10.79K 0s 918ms; mmseqs-web-worker_1 | Index table: Masked residues: 4422171; mmseqs-web-worker_1 | Index table: fill; mmseqs-web-worker_1 | [=================================================================] 10.79K 0s 61ms; mmseqs-web-worker_1 | Index statistics; mmseqs-web-worker_1 | Entries: 40961; mmseqs-web-worker_1 | DB size: 488 MB; mmseqs-web-worker_1 | Avg k-mer size: 0.000640; mmseqs-web-worker_1 | Top 10 k-mers; mmseqs-web-worker_1 | AAGAGA	872; mmseqs-web-worker_1 | CGGACA	532; mmseqs-web-worker_1 | AAGACG	524; mmseqs-web-worker_1 | AGAGCC	460; mmseqs-web-worker_1 | AAGCGC	4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:11447,consumption,consumption,11447,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['consumption'],['consumption']
Energy Efficiency,"per query sequence.; Time for processing: 0h 0m 1s 887ms; createsubdb tmp/16138406286044646862/order_0 IP_DB/IP_DB tmp/16138406286044646862/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; prefilter tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 6.5 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 8273 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 105; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8273; Target db start 1 to 756891; [=================================================================] 100.00% 8.27K 1s 888ms . 7.501658 k-mers per position; 14614 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 5 sequences passed prefiltering per query sequence; 0 median result list length; 7780 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 6ms; Time for processing: 0h 0m 23s 645ms; align tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 tmp/16138406286044646862/aln_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:7679,consumption,consumption,7679,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['consumption'],['consumption']
Energy Efficiency,plit DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id. 	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Target Coverage threshold 	0; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Cluster mode 	0; > Max depth connected component	1000; > Similarity type 	2; > Cascaded clustering 	false; > Cluster fragments 	false; > Remove Temporary Files 	false; > Sets the MPI runner 	; > ; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Alphabet size 	3; > Seq. Id Threshold 	0; > Max. sequence length	32000; > Threads 	4; > Verbosity 	3; > ; > Y -> F; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > S -> A; > N -> D; > L -> I; > H -> E; > K -> E; > P -> C; > E -> D; > C -> A; > I -> F; > G -> A; > D -> A; > A -> A; > Reduced amino acid alphabet:; > F W X ; > Hashing sequences ... ; > Done.; > Compute 169 unique hashes.; > Time for merging files: 0 h 0 m 0 s; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy tmp/clu_redundancy --cluster-mode 0 --max-seqs 300 -v 3 --max-iterations 1000 --similarity-type 2 --threads 4 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Cluster mode 	0; > Max. results per query 	300; > Verbosity 	3; > Max depth connected component	1000; > Similarity type 	2; > Threads 	4; > ; > Init...; > Opening sequence database...; > Opening alignment database...; > done.; > Clustering mode: Set Cover; > ; > Sort entries.; > ; > Find missing connections.; > ; > Found 7 new connections.; > ; > Reconstruct initial order.; > ; > Add missing connections.; > ; > Time for Read in: 0 m 0s; > ; > Writing results...; > ...done.; > Time for clustering: 0 m 0s; > Time for m,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:14389,Reduce,Reduced,14389,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['Reduce'],['Reduced']
Energy Efficiency,"porary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 25.00K 0s 11ms ; Time for merging to pref_rescore1: 0h 0m 0s 8ms==================>] 99.34% 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:5162,Reduce,Reduced,5162,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['Reduce'],['Reduced']
Energy Efficiency,"port for AVX2/SSE and amount of system memory):; ```; $ cat /proc/cpuinfo [truncated to 1 core]; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 85; model name : Intel(R) Xeon(R) Gold 6130 CPU @ 2.10GHz; stepping : 4; microcode : 0x2007006; cpu MHz : 2100.000; cache size : 22528 KB; physical id : 0; siblings : 32; core id : 0; cpu cores : 16; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 22; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts hwp hwp_act_window hwp_epp hwp_pkg_req pku ospke md_clear flush_l1d arch_capabilities; vmx flags : vnmi preemption_timer posted_intr invvpid ept_x_only ept_ad ept_1gb flexpriority apicv tsc_offset vtpr mtf vapic ept vpid unrestricted_guest vapic_reg vid ple shadow_vmcs pml ept_mode_based_exec tsc_scaling; bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit mmio_stale_data; bogomips : 4200.00; clflush size : 64; cache_alignment : 64; address sizes : 46 bits physical, 48 bits virtual; power management:. $ free; total used free shared buff/cache available; Mem: 791192240 20105804 63519620 33656 707566816 765066152; Swap: 0 0 0; ```; * Operating system and vers",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/833:4710,monitor,monitor,4710,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/833,1,['monitor'],['monitor']
Energy Efficiency,"processing: 0h 0m 0s 67ms; createsubdb tmp//10798751672030653963/clu_redundancy DB_in tmp//10798751672030653963/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 3ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 0s 848ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=================================================================] 100.00% 276 0s 19ms. 1.394095 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:11720,consumption,consumption,11720,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['consumption'],['consumption']
Energy Efficiency,"qs_h: 0h 0m 0s 682ms; Time for merging to query_seqs: 0h 0m 38s 582ms; Time for processing: 0h 0m 52s 983ms; prefilter tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.85 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 112 --compressed 0 -v 3 . Query database size: 1604546 type: Nucleotide; Estimated memory consumption: 105G; Target database size: 802273 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 802.27K 1m 13s 891ms; Index table: Masked residues: 47468793; Index table: fill; [=================================================================] 802.27K 1m 7s 245ms; Index statistics; Entries: 14067080711; DB size: 88684 MB; Avg k-mer size: 13.100990; Top 10 k-mers; CCCTCGCAAGGTTAC	15119; TGGGATCCCCGGGGG	14445; GGTCGGGTCCCGTAG	12691; GGTATCCCCTCGAGG	12523; CATAAAAACCGAGGG	12298; TAAAAACCCCGGGGG	12038; TTTTATTTTATTCTT	9764; CTTAGGGGTTACGTT	9670; GTGTAATCCCTCGAG	9663; CTGAAACCATTCTCG	9602; Time for index table init: 0h 2m 35s 948ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1604546; Target db start 1 to 802273; [=================================================================] 1.60M 1h 46m 59s 76ms. 0.996125 k-mers per position; 14106896 DB matches pe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:12300,consumption,consumption,12300,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['consumption'],['consumption']
Energy Efficiency,"rep_db/DB.idx tmp1/1465312676443513838/search_tmp/12840997425876760019/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 6 -k 0 --target-search-mode 0 --k; -score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1000000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob; 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 . Index version: 16 ; Generated by: bb0a1b3569b9fe115f3bf63e5ba1da234748de23; ScoreMatrix: VTML80.out ; Query database size: 1000 type: Aminoacid; Estimated memory consumption: 101G; Target database size: 33611651 type: Aminoacid ; Process prefiltering step 1 of 1; ; k-mer similarity threshold: 118 ; Starting prefiltering scores calculation (step 1 of 1) ; Query db start 1 to 1000 ; Target db start 1 to 33611651 ; [=================================================================] 100.00% 1.00K 53s 841ms ; tmp1/1465312676443513838/search_tmp/12840997425876760019/blastpgp.sh: line 139: 3819000 Segmentation fault (core dumped) $RUNNER $PREF ""$QUERYDB"" ""$2"" ""$TMP_PATH/pref_$STEP"" ${TMP} ; Error: Prefilter died ; Error: Search died ; ```. ## Context. I thought maybe it's due to some special symbols in sequences in the failed fastas or larger size of proteins. Seems not, since ""X"" symbols where in completed fastas as well, as well as protein length ~30K or short. dividing these fasta files to a set of smaller solves this problem for a subset of new, but still leaves some with the same error. I can send an example fasta if it's needed. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MM",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/774:4951,consumption,consumption,4951,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/774,1,['consumption'],['consumption']
Energy Efficiency,"reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; rescorediagonal DB_in DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 303 0s 28ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms===============> ] 94.37% 286 eta 0s; Time for processing: 0h 0m 0s 69ms; clu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:4077,Reduce,Reduced,4077,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['Reduce'],['Reduced']
Energy Efficiency,"rocessing: 0h 0m 0s 125ms; createsubdb tmp//10798751672030653963/clu_step0 tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 16ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 6ms; Index statistics; Entries: 1415; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 50ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [=================================================================] 100.00% 239 0s 20ms; [================================================================>] 99.58% 238 eta 0s; 20.876247 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:15850,consumption,consumption,15850,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['consumption'],['consumption']
Energy Efficiency,"rong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//538598962955004214/clu ../DB_in/fasta_in_db_HC tmp//538598962955004214/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/seq_wrong_assigned tmp//538598962955004214/seq_seeds.merged tmp//538598962955004214/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 9 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 210 0s 27ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 210 0s 8ms; Index statistics; Entries: 1285; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 174ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 210; [=================================================================] 100.00% 9 0s 11ms. 460.860859 k-mers per position; 14 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequen",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:27941,consumption,consumption,27941,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['consumption'],['consumption']
Energy Efficiency,"rse seqs 	1000; Threads 	28; Compress MSA 	false; Summarize headers 	false; Summary prefix 	cl; Omit Consensus 	false; Skip Query 	false; Gap open cost 	11; Gap extension cost 	1; Compressed 	0; Verbosity 	3. Touch data file mmseq_form_db/A0A011_db ... Done.; Start computing multiple sequence alignments.; Query database type: Aminoacid; Target database type: Aminoacid; Segmentation fault. ## Context; After searching a single sequence (A0A011) over a db (uniref90) I wanted to obtain an MSA. I also want the gaps in the query so I added the --allow-deletion true flag. Over smaller alignments (for instance the one from A0A010) this works, but it does not for larger ones (30 vs 990 aligned seqs). Running the same command without the flag ends correctly over any sequence. ## Your Environment; * Git commit used (The string after ""MMseqs Version:""); dbeeb55b6cdf16118c221cf7943a70a1d2972daa. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; CPU: Intel Xeon E7-8860v4; $ cat /proc/cpuinfo | grep avx2; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch epb invpcid_single intel_pt ssbd ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm rdseed adx smap xsaveopt cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts flush_l1d; Cores: 4x18 (of which 28 have been used for the job); Memory: 3072 GB/node. * Operating system and version:; Ubuntu Xenial (16.04 LTS)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/167:2257,monitor,monitor,2257,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/167,1,['monitor'],['monitor']
Energy Efficiency,"ry_seqs_split_h: 0h 0m 0s 832ms; > Time for merging to query_seqs_split: 0h 0m 0s 878ms; > Time for processing: 0h 0m 3s 919ms; > prefilter tmp/7701176895607249840/search_tmp/9045538653068861586/query_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/target_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 2670930 type: Nucleotide; > Target split mode. Searching through 18 splits; > Estimated memory consumption: 326G; > Target database size: 100684280 type: Nucleotide; > Process prefiltering step 1 of 18; > ; > Index table k-mer threshold: 0 at k-mer size 15 ; > Index table: counting k-mers; > Segmentation fault (core dumped) ] 0.00% 1 eta -; > Error: Prefilter died; > Error: Search step died; > Error: Search died; > . ## Context. Hi I am trying to run an nucleotide-nucleotide search in mmseq2 with a custom database. This error does not occur with a different, smaller nucleotide database. Thank you very much for this amazing tool and all your hard work. ## Your Environment. I am using a google cloud VM with 64 CPUs and 416 GBs of memory on an ubuntu operating system, version 20.04. I install mmseq with the command. static build with AVX2 (fastest); `wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; tar xvfz mmseqs-linux-avx2.tar.gz; export PATH=$(pwd)/mmseqs/bin/:$PATH; `",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/882:7168,consumption,consumption,7168,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882,1,['consumption'],['consumption']
Energy Efficiency,"s calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Profile; Estimated memory consumption: 21K; Target database size: 5 type: Nucleotide; Can not allocate entries memory in IndexTable; Error: Prefilter died; Error: Search step died; Error: Search died. ## Your Environment; MMseqs2 Version: 13.45111 (installed from anaconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:15011,consumption,consumption,15011,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,2,"['allocate', 'consumption']","['allocate', 'consumption']"
Energy Efficiency,"s; Time for merging to query_seqs_split_h: 0h 0m 0s 281ms; Time for merging to query_seqs_split: 0h 0m 0s 333ms; Time for processing: 0h 0m 1s 246ms; prefilter /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 250G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 . Query database size: 1298472 type: Nucleotide; Target split mode. Searching through 12 splits; Estimated memory consumption: 216G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.80M 6m 27s 363ms; Index table: Masked residues: 517008537; Index table: fill; [=================================================================] 7.80M 11m 24s 325ms; Index statistics; Entries: 27958919735; DB size: 168174 MB; Avg k-mer size: 26.038773; Top 10 k-mers; GGGGCAGCGTGATTT	319478; TAATCGTGCAGCGGG	292128; GTGCGCAGCGTATCG	276641; CTCTCGGGGGCGTGG	257406; ACAGTTAGTATGTGT	233646; TCCAGGGAGCATGGG	230906; AGTGGAATTTCATGG	224146; TCGCGCTCTGTAGTG	209357; ACTCACGGAGGAGGG	193555; GCCAACTCTAGGGAG	184395; Time for index table init: 0h 18m 59s 10ms; k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 12); Query db start 1 to 1298472; Target db start 1 to 7796647; [=================================================================] 1.30M 5",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:6311,consumption,consumption,6311,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['consumption'],['consumption']
Energy Efficiency,"s; Time for processing: 0h 0m 0s 73ms; createsubdb tmp//10798751672030653963/clu_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//10798751672030653963/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 222 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 222 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 222 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 222 0s 3ms; Index statistics; Entries: 1342; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 970ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 222; Target db start 1 to 222; [=================================================================] 100.00% 222 0s 52ms. 196.811469 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 se",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:20023,consumption,consumption,20023,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['consumption'],['consumption']
Energy Efficiency,"scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs by selecting most diverse set of sequences, keeping at least this many seqs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; --rescore-mode 	0 	Rescore diagonal with: 0: Hamming distance, 1: local alignment (score only) or 2: local alignment; --min-length 	30 	minimum codon number in open reading frames ; --max-length 	32734 	maximum codon number in open reading frames ; --max-gaps 	2147483647	maximum number of codons with gaps or unknown residues before an open reading frame is rejected; --contig-start-mode 	",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:8070,reduce,reduce,8070,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['reduce'],['reduce']
Energy Efficiency,se size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [============================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:29685,consumption,consumption,29685,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,se size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memor,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:29030,consumption,consumption,29030,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,se size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:29518,consumption,consumption,29518,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['consumption'],['consumption']
Energy Efficiency,"seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 1c7ad90e2a9a249cbe4858b5002dc052b3333475; * Which MMseqs version was used: AVX2 static; * Server specifications: 32GB RAM; * Operating system and version: Ubuntu Linux 16.04.3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:1690,Reduce,Reduced,1690,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['Reduce'],['Reduced']
Energy Efficiency,"signed: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//7897776346521331899/clu artificial2/DB_artificial tmp//7897776346521331899/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/seq_wrong_assigned tmp//7897776346521331899/seq_seeds.merged tmp//7897776346521331899/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 126 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 126 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 126 0s 1ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 981ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 126; [=================================================================] 100.00% 2 0s 4ms. 0.000000 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences w",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:28231,consumption,consumption,28231,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['consumption'],['consumption']
Energy Efficiency,"ssed 0 -v 3 . [=================================================================] 100.00% 1.32M 0s 321ms ; Time for merging to query_seqs_h: 0h 0m 0s 490ms; Time for merging to query_seqs: 0h 0m 2s 39ms; Time for processing: 0h 0m 3s 738ms; splitsequence tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 100.00% 2.64M 0s 246ms ; Time for merging to query_seqs_split_h: 0h 0m 0s 507ms; Time for merging to query_seqs_split: 0h 0m 0s 573ms; Time for processing: 0h 0m 2s 178ms; prefilter tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/target_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 2.0 . Query database size: 2644526 type: Nucleotide; Target split mode. Searching through 13 splits; Estimated memory consumption: 247G; Target database size: 99637107 type: Nucleotide; Process prefiltering step 1 of 13. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: Prefilter died; Error: Search step died; Error: First search died. ```. ## Environment; * AMD EPYC 7502P 32-Core Processor; * 320GB memory; * OS:; Ubuntu 20.04.2 LTS; Kernel: 5.4.0-70-generic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438:6987,consumption,consumption,6987,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438,1,['consumption'],['consumption']
Energy Efficiency,"ssing: 0h 0m 0s 3ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 9304 type: Aminoacid; Estimated memory consumption: 1007M; Target database size: 9304 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 9.30K 0s 119ms ; Index table: Masked residues: 99774; Index table: fill; [=================================================================] 100.00% 9.30K 0s 66ms ; Index statistics; Entries: 1733458; DB size: 498 MB; Avg k-mer size: 0.027085; Top 10 k-mers; IHDKNI 46; GPGGTL 34; LGGFVY 21; GQQIAR 19; HRLPLL 15; SCLWYL 15; RCKCRW 15; GGTHAY 15; GRGLAY 15; KSRRNY 15; Time for index table init: 0h 0m 0s 736ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9304; Target db start 1 to 9304; [=================================================================] 100.00% 9.30K 0s 164ms . 2.036021 k-mers per position; 245 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:16888,consumption,consumption,16888,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['consumption'],['consumption']
Energy Efficiency,"t HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salvocos/tmp/test_sonicpara/mmseqs2_src/build; ```; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 40 CPUs 500Gbytes of shared memory; ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fpu_exception	: yes; cpuid level	: 15; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer xsave avx f16c rdrand lahf_lm abm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm xsaveopt cqm_llc cqm_occup_llc dtherm ida arat pln pts; bogomips	: 5199.77; clflush size	: 64; cache_alignment	: 64; address sizes	: 46 bits physical, 48 bits virtual. ...; ```; * Operating system and version:; ```; $uname -a; Linux XXX 3.10.0-693.11.1.el7.x86_64 #1 SMP Fri Oct 27 05:39:05 EDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:14029,monitor,monitor,14029,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,1,['monitor'],['monitor']
Energy Efficiency,"t calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs by selecting most diverse set of sequences, keeping at least this many seqs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; --rescore-mode 	0 	Rescore diagonal with: 0: Hamming distance, 1: local alignment (score only) or 2: local alignment; --min-length 	30 	minimum codon number in open reading frames ; --max-length 	32734 	maximum codon number in open reading frames ; --max-gaps 	2147483647	maximum number of codons with gaps or unknown residues before an open reading frame is rejected; --contig-start-mode 	2 	Contig start can be 0: incomplete, 1: complete, 2: both ; --contig-end-mode 	2 	Contig end can be 0: ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:8174,reduce,reduce,8174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['reduce'],['reduce']
Energy Efficiency,"t mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files false. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 32. Target split mode. Searching through 9 splits; Estimated memory consumption: 79G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================] 100.00% 23.11M 27m 25s 83ms; Index table: Masked residues: 122354587; Index table: fill; tmp/17913398511991990568/createindex.sh: line 56: 114573 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):75af0c82edf34587548bacc865cfa1d2261a9696; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/540:3004,consumption,consumption,3004,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/540,1,['consumption'],['consumption']
Energy Efficiency,tenucs tmp/15531098257495296432/q_orfs tmp/15531098257495296432/q_orfs_aa --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 2 . [] 4h 49m 49s 475ms; Time for merging files: 0h 0m 13s 279ms; Time for processing: 4h 50m 4s 882ms; prefilter tmp/15531098257495296432/q_orfs_aa /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx tmp/15531098257495296432/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 3 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 1.0 . Using 2 threads.; Index version: 15; Generated by: 73ce3b88754987122b4fc5e69a721beeecd677d0; ScoreMatrix: VTML80.out; Estimated memory consumption 372556 MB; Target database size: 134985288 type: Aminoacid; Query database size: 12189231 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12189231; Target db start 1 to 134985288; [] 5h 25m 52s 523ms. 5.520466 k-mers per position; 7748 DB matches per sequence; 0 overflows; 11 sequences passed prefiltering per query sequence; 8 median result list length; 2084890 sequences with 0 size result lists. Time for prefiltering scores calculation: 5h 25m 59s 596ms; Time for merging files: 0h 0m 17s 47ms; Time for processing: 5h 28m 30s 18ms; align tmp/15531098257495296432/q_orfs_aa /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx tmp/15531098257495296432/search/pref_0 tmp/15531098257495296432/aln --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:5270,consumption,consumption,5270,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,1,['consumption'],['consumption']
Energy Efficiency,"tep_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 276 0s 28ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 276 0s 5ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 36ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [================================================================] =276 0s 28ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 5ms; Time for processing: 0h 0m 1s 852ms; align tmpfiles/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:11647,consumption,consumption,11647,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['consumption'],['consumption']
Energy Efficiency,"tmp -s 4; -Create a query database with: mmseqs2/bin/mmseqs createdb A0A011 A0A011_db; -Compare the execution time of the two following commands:; mmseqs2/bin/mmseqs search A0A011_db uniref90_db A0A011_align_db tmp -a -s 1 --num-iterations 3; jackhmmer --cpu 28 -E 1e-3 --incE 1e-3 --noali -N 3 -A stk_alignment output uniref90.fasta. ## Context; I've run many times slight variations of the commands listed above, in order to check the differences between the two programs and MMseqs does not seem to be quicker than JackHMMer.; The best time I obtained for MMseq2 is around 16 min while JackHMMer only requires 14 min.; Maybe I'm doing something wrong ... the HMMer version is HMMER 3.1b2. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:""); dbeeb55b6cdf16118c221cf7943a70a1d2972daa; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; CPU: Intel Xeon E7-8860v4; $ cat /proc/cpuinfo | grep avx2 ; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch epb invpcid_single intel_pt ssbd ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm rdseed adx smap xsaveopt cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts flush_l1d; Cores: 4x18 (of which 28 have been used for the job); Memory: 3072 GB/node; * Operating system and version:; Ubuntu Xenial (16.04 LTS)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/165:1853,monitor,monitor,1853,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/165,1,['monitor'],['monitor']
Energy Efficiency,"tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 182ms; rescorediagonal DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 303 0s 14ms; Time for merging to pref_rescore1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 46ms; clust DB_in/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:3882,Reduce,Reduced,3882,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['Reduce'],['Reduced']
Energy Efficiency,"to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//10798751672030653963/clu DB_in tmp//10798751672030653963/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/seq_wrong_assigned tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 14 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 214 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 214 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 214 0s 9ms; Index statistics; Entries: 1312; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 857ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 14; Target db start 1 to 214; [=================================================================] 100.00% 14 0s 45ms. 376.012940 k-mers per position; 14 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:28099,consumption,consumption,28099,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['consumption'],['consumption']
Energy Efficiency,"ubdb-mode 1 . Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 8ms; prefilter ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 8338 type: Aminoacid; Estimated memory consumption: 1003M; Target database size: 8338 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 8.34K 0s 514ms; Index table: Masked residues: 3074; Index table: fill; [=================================================================] 8.34K 0s 572ms; Index statistics; Entries: 1408015; DB size: 496 MB; Avg k-mer size: 0.022000; Top 10 k-mers; GPGGTL 37; GLGNGK 26; ALGNGK 23; DLLDLP 21; FDDTDS 20; NGGSLK 17; DLLDMP 17; DVLDMP 17; GEQVAR 16; FDDTDT 16; Time for index table init: 0h 0m 2s 591ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8338; Target db start 1 to 8338; [=================================================================] 8.34K 26s 907ms. 903.365687 k-mers per position; 4641 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 88 sequences passed prefiltering per query sequence; 76 median result list",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:29063,consumption,consumption,29063,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['consumption'],['consumption']
Energy Efficiency,"uence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	10; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; .............; Time for fill: 0 h 0 m 2s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 7s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 4s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 14s; Rescore diagonals.; Program call:; panproteome.db panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Rescore mode 	0; Sub Matrix 	blosum62.out; Remove hits by ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:4301,Reduce,Reduced,4301,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Reduce'],['Reduced']
Energy Efficiency,"unadopted data in the 'assignGroup' function, allowing for more effective clustering. ### Details. **1 Extended Search Process :**. > For the same k-mer group, the process of combining the representative sequence with each sequence has been extended. The algorithm now calculates sequence dissimilarity using adjacent sequence information. The most dissimilar sequence is selected as the next representative sequence, and this exploration process is repeated. If there are multiple sequences with the same level of dissimilarity, the most recently explored sequence is chosen as the representative sequence. Additionally, the selection of the most dissimilar sequence is limited to sequences that follow the current representative sequence in the search order. **2. Data Structure Challenges**. > The implementation of this method introduced challenges in maintaining the original in-place data structure. To overcome these challenges, a new data structure has been introduced with an additional buffer (slack space) at the end. The new data structure includes a default buffer size of 5%. . **3. Dynamic Memory Allocation**. > If memory becomes insufficient during operation, the structure dynamically resizes by splitting and reallocating memory based on the progress of the previous process. This approach ensures efficient memory usage and prevents potential memory shortages. ### Benchmark Results. > I conducted benchmarking on datasets randomly selected from the UniParc dataset, with sizes of 1.3M, 2.7M, 5.3M, 11M, 21M, 42M, and 85M. The results confirmed that the new algorithm effectively reduces the number of clusters while maintaining linearity, showing no significant time difference compared to the existing Linclust method. Despite these improvements, the algorithm still lags behind the easy-cluster method and does not fully reach the ideal results obtained by performing a quadratic search that captures all possible combinations. Thus, there remains room for further improvement.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/873:1507,efficient,efficient,1507,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873,2,"['efficient', 'reduce']","['efficient', 'reduces']"
Energy Efficiency,"verse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --chain-alignments 0 --merge-query 1 --search-type 0 --num-iterations 1 --start-sens 4 --sens-steps 1 --slice-search 0 --strand 1 --disk-space-limit 0 --force-reuse 0 --remove-tmp-files 0. prefilter clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/tmp_hsp1/2842639954524457022/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.7. Using 24 threads.; Estimated memory consumption 413414 MB; Target database size: 119988216 type: Aminoacid; Query database size: 40624 type: Aminoacid; Process prefiltering step 1 of 1. Index table k-mer threshold: 122 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 119.99M 14m 40s 186ms; Index table: Masked residues: 372860390; Index table: fill; [=================================================================] 100.00% 119.99M 20m 55s 996ms; Index statistics; Entries: 38076912867; DB size: 227643 MB; Avg k-mer size: 29.747588; Top 10 k-mers; SGQQRIA	281769; GPGGKLL	259328; GQQVARA	172987; YTGTGKG	166889; GGQRVAR	143134; LLGPGKT	113836; LSGQQAI	94348; GGRRVAR	94149; ALGSGKS	92540; GRFVVEV	90006; Time for index table init: 0h 36m 49s 783ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 40624; Target db start 1 to 119988216; [=================================================================] 100.00% 40.62K 15m 11s 627ms. 2741.257489 k-mers per posit",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:4913,consumption,consumption,4913,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,1,['consumption'],['consumption']
Energy Efficiency,"x-gnu/libthread_db.so.1"".; nr_mmseqs/nr_db_mapping exists and will be overwritten; nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3 . MMseqs Version:	f5b588be54de35876eff90f3694b67e1d00856ef; Threads 	16; Verbosity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/666:2037,allocate,allocate,2037,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666,1,['allocate'],['allocate']
Integrability, -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFiles/microtar.dir/microtar.c.o; Linking C static library libmicrotar.a; [ 1%] Built target microtar; Scanning dependencies of target cacode; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 3%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; [ 3%] Built target cacode; Scanning dependencies of target alp; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprobproto.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstat.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatmatrix.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_sim.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_pvalues.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogproblim.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alignment_evaluer.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_regression.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatutil.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_basic.cpp.o; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:3976,depend,dependencies,3976,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,1,['depend'],['dependencies']
Integrability," --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 1.81K 0s 7ms; Time for merging to pref_rescore1: 0h 0m 0s 64ms; Time for processing: 0h 0m 0s 310ms; clust /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Greedy Low Mem; Total time: 0h 0m 0s 13ms. Size of the sequence database: 1807; Size of the alignment database: 1807; Number of clusters: 757. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 49ms; c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:6626,wrap,wrapped-scoring,6626,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['wrap'],['wrapped-scoring']
Integrability," --split-memory-limit keyword should mitigate memory requirements; ## Current Behavior; Works only with standard MMSeqs2 compiled version, but not with MPI compiled version. . ## Steps to Reproduce (for bugs); Working on 60gb machine with 8cpus (each with 2 hyper threads); ${MMSeqs_bin}/mmseqs createDB in.fasta inDB; ${MMSeqs_bin}/mmseqs cluster inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 --split-memory-limit 3G. Replacing {MMSeqs_bin} with {MMSeqs_non_MPI_bin} results in correct behavior without crashing. ## MMseqs Output (for bugs). ```; mmseqs linclust inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 ; --split-memory-limit 500; linclust inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 --split-memory-limit 500; MMseqs Version: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 16; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1e-10; Seq. id. threshold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd pa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:1030,wrap,wrapped,1030,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['wrap'],['wrapped']
Integrability," -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [19999] 0s 24ms; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 1ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 33ms; Create directory tmp2/6664721939282577716/clu_tmp; cluster tmp2/6664721939282577716/input tmp2/6664721939282577716/clu tmp2/6664721939282577716/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:4311,wrap,wrapped-scoring,4311,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['wrap'],['wrapped-scoring']
Integrability," 0m 0s 2ms; Time for processing: 0h 0m 0s 6ms; createsubdb experiments/tmp//6404161245249296443/order_redundancy experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 6ms; filterdb experiments/tmp//6404161245249296443/pref_filter1 experiments/tmp//6404161245249296443/pref_filter2 --filter-file experiments/tmp//6404161245249296443/order_redundancy . Filtering using file(s); [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_filter2: 0h 0m 0s 21ms; Time for processing: 0h 0m 0s 56ms; rescorediagonal experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_filter2 experiments/tmp//6404161245249296443/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_rescore2: 0h 0m 0s 19ms=================>] 99.48% 24.47K eta 0s ; Time for processing: 0h 0m 0s 59ms; align experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_rescore2 experiments/tmp//6404161245249296443/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:8377,wrap,wrapped-scoring,8377,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['wrap'],['wrapped-scoring']
Integrability," 1 . Time for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 1m 38s 696ms; filterdb All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_filter1 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_filter2 --filter-file All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/order_redundancy --threads 56 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 35.67M 56s 656ms; Time for merging to pref_filter2: 0h 0m 11s 819ms; Time for processing: 0h 1m 22s 652ms; rescorediagonal All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_filter2 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 35.67M 9s 733ms; Time for merging to pref_rescore2: 0h 0m 12s 355ms; Time for processing: 0h 0m 38s 935ms; align All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore2 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:8212,wrap,wrapped-scoring,8212,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['wrap'],['wrapped-scoring']
Integrability," 224 overflows; 0 queries produce too many hits (truncated result); 41 sequences passed prefiltering per query sequence; 45 median result list length; 1350 sequences with 0 size result lists; Time for merging to pref_0_tmp_11: 0h 0m 0s 427ms; Time for merging to pref_0_tmp_11_tmp: 0h 0m 0s 867ms; Merging 12 target splits to pref_0; Preparing offsets for merging: 0h 0m 1s 151ms; [=================================================================] 1.30M 14s 938ms; Time for merging to pref_0: 0h 0m 0s 523ms; Time for merging target splits: 0h 0m 18s 286ms; Time for merging to pref_0_tmp: 0h 0m 6s 63ms; Time for processing: 11h 52m 0s 943ms; align /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 /tmp//2989869989197200687/search_tmp/6775691152365959592/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1298472 type: Nucleotide; Target database size: 90056195 type: Nucleotide; Calculation of alignments; [=================================================================] 1.30M 1h 24m 48s 423ms; Time for merging to aln: 0h 0m 0s 504ms; 662682155 alignments calculated; 492943101 sequence pairs passed the thresholds (0.743861 of overall calculated); 379.633209 hits per query sequence; Time for processing: 1h 27m 9s 264ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 -v ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:23149,wrap,wrapped-scoring,23149,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['wrap'],['wrapped-scoring']
Integrability," 2; MEMYY 2; Time for index table init: 0h 0m 0s 118ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 23ms; [==========================================================> ] 89.54% 138 eta 0s; 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 795ms; align clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/pref_step0 clu/sim2_tmp/12164117771218227067/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 46ms; Time for merging to aln_step0: 0h 0m 0s 4ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 72ms; clust clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/aln_st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:29818,wrap,wrapped-scoring,29818,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability," 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 908ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 24ms. 15.668402 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 591ms; align tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/pref_step1 tmp//7897776346521331899/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 124 type: Aminoacid; Target database size: 124 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 26ms; Time for merging to aln_step1: 0h 0m 0s 3ms=================> ] 91.87% 114 eta 0s; 124 alignments calculated; 124 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 62ms; clust tmp//7897776346521331899/input_step1 tmp//789777634652133189",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:17405,wrap,wrapped-scoring,17405,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['wrap'],['wrapped-scoring']
Integrability," 611ms; swapdb tmp//10798751672030653963/seq_wrong_assigned_pref tmp//10798751672030653963/seq_wrong_assigned_pref_swaped --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 14 0s 4ms; Computing offsets.; [=================================================================] 100.00% 14 0s 2ms. Reading results.; [=================================================================] 100.00% 14 0s 4ms. Output database: tmp//10798751672030653963/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00% 284 0s 6ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 87ms; align tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/seq_wrong_assigned tmp//10798751672030653963/seq_wrong_assigned_pref_swaped tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 214 type: Aminoacid; Target database size: 14 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 29 0s 13ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 5ms; 41 alignments calculated; 32 sequence pairs passed the thresholds (0.780488 of overall calculated); 1.103448 hits per query sequence; Time for processing: 0h 0m 0s 56ms; filterdb tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln tmp//10798751",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:30301,wrap,wrapped-scoring,30301,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['wrap'],['wrapped-scoring']
Integrability," 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms; rescorediagonal tmpDB tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref tmp/12397138995521121878/linclust/639052995728955397/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:5253,wrap,wrapped-scoring,5253,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['wrap'],['wrapped-scoring']
Integrability," Environment. I am running this on an AWS EC2 instance of type g4dn (128GB RAM). Here you go:. $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) Platinum 8259CL CPU @ 2.50GHz; CPU family: 6; Model: 85; Thread(s) per core: 2; Core(s) per socket: 16; Socket(s): 1; Stepping: 7; BogoMIPS: 4999.98; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht; syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid ap; erfmperf tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt; tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch pti fsgsbase; tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx avx512f avx512dq rdseed adx smap clflushopt clwb avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves ida arat pku ospke avx512_vnni; Virtualization features: ; Hypervisor vendor: KVM; Virtualization type: full; Caches (sum of all): ; L1d: 512 KiB (16 instances); L1i: 512 KiB (16 instances); L2: 16 MiB (16 instances); L3: 35.8 MiB (1 instance); NUMA: ; NUMA node(s): 1; NUMA node0 CPU(s): 0-31; Vulnerabilities: ; Gather data sampling: Unknown: Dependent on hypervisor status; Itlb multihit: KVM: Mitigation: VMX unsupported; L1tf: Mitigation; PTE Inversion; Mds: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Meltdown: Mitigation; PTI; Mmio stale data: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Retbleed: Vulnerable; Spec rstack overflow: Not affected; Spec store bypass: Vulnerable; Spectre v1: Mitigation; usercopy/swapgs barriers and __user pointer sanitization; Spectre v2: Mitigation; Retpolines, STIBP disabled, RSB filling, PBRSB-eIBRS Not affected; Srbds: Not affected; Tsx async abort: Not affected",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822:3332,Depend,Dependent,3332,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822,1,['Depend'],['Dependent']
Integrability," Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 56; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 7780; Target db start 1 to 756891; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 10ms; Time for processing: 0h 0m 28s 690ms; align tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 tmp/16138406286044646862/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 7780 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 7.78K 0s 362ms ; Time for merging to aln_2: 0h 0m 0s 3ms. 30 alignments calculated.; 30 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.003856 hits per query sequence.; Time for processing: 0h 0m 3s 496ms; mergedbs IP_DB/IP_DB result_DB/result_DB tmp/16138406286044646862/aln_merge tmp/16138406286044646862/aln_2 --compressed 0 -v 3 . Merging the results to result_DB/result_DB; Time for merging to result_DB: 0h 0m 0s 0ms; Time for processing: 0h 0m ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:11728,wrap,wrapped-scoring,11728,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['wrap'],['wrapped-scoring']
Integrability, HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /galaxy/home/ksahlin/prefix/source/MMseqs2/build; [ksahlin@desmond build]$ make; Scanning dependencies of target cacode; make[2]: Warning: File 'lib/cacode/CMakeFiles/cacode.dir/depend.make' has modification time 0.00048 s in the future; [ 0%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; make[2]: warning: Clock skew detected. Your build may be incomplete.; [ 1%] Built target cacode; Scanning dependencies of target alp; [ 1%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 1%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 2%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprobproto.cpp.o; [ 2%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstat.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatmatrix.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_sim.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_pvalues.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogproblim.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alignment_evaluer.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_regression.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatutil.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_basic.cpp.o; [,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:3083,depend,dependencies,3083,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,1,['depend'],['dependencies']
Integrability," Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /scratch/jobs/56067190 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:2678,wrap,wrapped,2678,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276,1,['wrap'],['wrapped']
Integrability," Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 34258; [=================================================================] 6 0s 2ms. 37.492909 k-mers per position; 726 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 3 sequences passed prefiltering per query sequence; 4 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 4ms; Time for processing: 0h 0m 2s 431ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqsHits --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 1 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 34258 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to newSeqsHits: 0h 0m 0s 4ms. 1 alignments calculated.; 0 sequence pairs passed the thresholds (0.000000 of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 0s 20ms; swapdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqsHits /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeq",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:4814,wrap,wrapped-scoring,4814,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['wrap'],['wrapped-scoring']
Integrability," Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 36ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [================================================================] =276 0s 28ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 5ms; Time for processing: 0h 0m 1s 852ms; align tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/pref_step0 tmpfiles//13298481167543164943/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 276 0s 39ms; Time for merging to aln_step0: 0h 0m 0s 2ms. 413 alignments calculated.; 406 sequence pairs passed the thresholds (0.983051 of overall calculated).; 1.471014 hits per query sequence.; Time for processing: 0h 0m 0s 82ms; clust tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/aln_step0 tmpfiles//13298481167543164943/clu_step0 --cluster-mode 1 --max-i",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:13081,wrap,wrapped-scoring,13081,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['wrap'],['wrapped-scoring']
Integrability," XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 51ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [=================================================================] 100.00% 239 0s 23ms; [============================================================> ] 92.44% 221 eta 0s; 20.598031 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 760ms; align tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/pref_step1 tmp//538598962955004214/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 239 type: Aminoacid; Target database size: 239 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 239 0s 34ms; Time for merging to aln_step1: 0h 0m 0s 6ms; 308 alignments calculated; 274 sequence pairs passed the thresholds (0.889610 of overall calculated); 1.146443 hits per query sequence; Time for processing: 0h 0m 0s 70ms; clust tmp//538598962955004214/input_step1 tmp//538598962955004214/aln_step1 tmp//538598962955004214/clu_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:17211,wrap,wrapped-scoring,17211,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['wrap'],['wrapped-scoring']
Integrability," a 64GB RAM node typical of our cluster. My first attempt consisted (retrospectively naively) in using the UniRef90 indexes created (without any --split option) on the 132GB server, which caused a crash after a useful warning `MMseqs processes needs more main memory than available.Increase the size of --split` as seen below in the first output. I therefore attempted to index the database on the 64GB RAM node directly with no explicit --split option, or by specifying`--split 6` (an explicit split is useful to index the database taking into account the fact that some of the cluster nodes have less than the 64GB RAM of the machine I'm indexing on). But this indexing fails with the second output provided below? In fact the indexing fails also without the --split option (see third output below). All tests have been carried out using a compiled mmseqs cloned from a fresh git clone. The work directory has 76TB of free space. I'm really at a loss as to what the `Could not write to data file /` error message might indicate?; - Searching with the oversized index:. ```; -bash-4.2$ mmseqs search subseq_Mms.1 uniref90.mms toto.mms tmp/ --max-seqs 100000 --threads 8 -a true -e 1E-10 -s 1 ; Program call:; subseq_Mms.1 uniref90.mms toto.mms tmp/ --max-seqs 100000 --threads 8 -a true -e 1E-10 -s 1 . MMseqs Version: c5615b34c686b1cf0f200670be8bc6cba76d90f9; Sub Matrix blosum62.out; Add backtrace true; Alignment mode 0; E-value threshold 1e-10; Seq. Id Threshold 0; Coverage threshold 0; Max. sequence length 32000; Max. results per query 100000; Compositional bias 1; Profile false; Realign hit false; Max Reject 2147483647; Detect fragments false; Include identical Seq. Id. false; Threads 8; Verbosity 3; Sensitivity 1; K-mer size 0; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Diagonal Scoring 1; Minimum Diagonal score 15; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minim",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349:1139,message,message,1139,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349,1,['message'],['message']
Integrability," blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/KmerGenerator.cpp.o; [ 3%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Main.cpp.o; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp: In function 'int prefilter(int, const char**, const Command&)':; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp:72:12: warning: unused variable 'splitMode' [-Wunused-variable]; size_t splitMode = pref->getSplitMode();; ^~~~~~~~~; [ 4%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Prefiltering.cpp.o; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:4152:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6032:suffix or ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:4378,depend,dependencies,4378,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['depend'],['dependencies']
Integrability," guess is that there is a bug in the `summarizeresult` command being run when `--greedy-best-hits` is passed in:; `summarizeresult tmp/15248047069833069253/result tmp/15248047069833069253/result_best -a 1 --overlap 0 -c 1 --threads 8 --compressed 0 -v 3`. But it's quite possible I'm missing something... thanks for your time!. ## Expected Behavior; A result.tsv with content; ```; random_seq	random_seq	1.000	50	0	0	1	50	1	50	1.586E-38	108; ```. ## Current Behavior; An empty result.tsv. ## Steps to Reproduce (for bugs); ```; echo "">random_seq\nNTLGEQNARIWSEREVGICLARKHPFLDFSVVKDMIATGLGTDYKALSPQ"" > seq.fasta; mmseqs easy-search seq.fasta seq.fasta result.tsv tmp --cov-mode 1 -c 1 --greedy-best-hits; ```. ## MMseqs Output (for bugs); <details>. ```; Create directory tmp; easy-search seq.fasta seq.fasta result.tsv tmp --cov-mode 1 -c 1 --greedy-best-hits . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	1; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	8; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:1797,wrap,wrapped,1797,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,1,['wrap'],['wrapped']
Integrability," in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]; --mask-prob FLOAT Mask sequences is probablity is above threshold [0.900]; --mask-lower-case INT Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]; -k INT k-mer length (0: automatically set to optimum) [0]; --split-memory-limit BYTE Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]; align:; -a BOOL Add backtrace string (convert to alignments with mmseqs convertalis module) [0]; --alignment-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment [0]; --alignment-output-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; 5: score only (output) cluster format [0]; --wrapped-scoring BOOL Double the (nucleotide) query sequence during the scoring process to allow wrapped diagonal scoring around end and start [0]; -e DOUBLE List matches below this E-value (range 0.0-inf) [1.000E-03]; --min-seq-id FLOAT List matches above this sequence identity (for clustering) (range 0.0-1.0) [0.000]; --min-aln-len INT Minimum alignment length (range 0-INT_MAX) [0]; --seq-id-mode INT 0: alignment length 1: shorter, 2: longer sequence [0]; --alt-ali INT Show up to this many alternative alignments [0]; -c FLOAT List matches above this fraction of aligned (covered) residues (see --cov-mode) [0.800]; --cov-mode INT 0: coverage of query and target; 1: coverage of target; 2: coverage of query; 3: target seq. length has to be at least x% of query length; 4: query seq. length has to be at least x% of target length; 5: short seq. needs to be at least x% of the other seq. length [0]; --max-rejected INT Maximum rejected alignments before alignment calculation for a query is stopped [2147483647]; --max-accept INT Maximum accepted alignment",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682:2393,wrap,wrapped-scoring,2393,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682,2,['wrap'],"['wrapped', 'wrapped-scoring']"
Integrability," k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 117ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 46ms. 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 845ms; align clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 clu/sim1_tmp/7842071913732967198/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 55ms; Time for merging to aln_step0: 0h 0m 0s 5ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 106ms; clust clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/aln_ste",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:14106,wrap,wrapped-scoring,14106,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability," mmseqs databases UniRef90 /dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik --threads 12; ```; ```; mmseqs easy-taxonomy /dept/appslab/datasets/dp_ZymoMockComparison/Zymo6331-STD.fasta /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 STD_Results /pbi/flash/dportik/mmseqs --threads 24 --split-memory-limit 80G ; ```. ## MMseqs Output (for bugs); ### Log file:; ```; easy-taxonomy /dept/appslab/datasets/dp_ZymoMockComparison/Zymo6331-STD.fasta /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 STD_Results /pbi/flash/dportik/mmseqs --threads 24 --split-memory-limit 80G. MMseqs Version: 13.45111; ORF filter 0; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Majority threshold 0.5; Vote mode 1; LCA ranks; Column with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 80G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort resu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:2299,wrap,wrapped,2299,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['wrap'],['wrapped']
Integrability," previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 22 --compressed 0 -v 3 . Compute score and coverage; Query database size: 77815083 type: Aminoacid; Target database size: 77815083 type: Aminoacid; Calculation of alignments; [Error: Alignment step died; Error: Search died. The command is the same as used for previous clustering, the file is not bigger, I have no idea what is the issue. Any help is appreciated, thanks,; G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/265:1819,wrap,wrapped-scoring,1819,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265,1,['wrap'],['wrapped-scoring']
Integrability," processing: 0h 8m 25s 481ms. cluster uniref90-DB-wwmj uniref90-DB-wwmj_clu tmp/ --cov-mode 2 -c 0.8 --min-seq-id 0.9 . MMseqs Version: 15.6f452; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 2; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 64; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name ; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:2206,wrap,wrapped,2206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['wrap'],['wrapped']
Integrability,"""there must be an error"" messages while clustering",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/15:25,message,messages,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15,1,['message'],['messages']
Integrability,"# Current Behavior; The download FASTA targets for the 'nr' and 'nt' databases are no longer being updated by NCBI. Explanation: focusing on 'NR' as an example, the URL in [databases.sh](https://github.com/soedinglab/MMseqs2/blob/87e7103d289029dc3345f85ea9a4c4c6d6416e46/data/workflow/databases.sh#L500) points to https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/nr.gz. The README in that FTP location states:. > In April 2024, the BLAST FASTA files in this directory will no longer be; available. You can easily generate FASTA files yourself from the formatted; BLAST databases by using the BLAST utility blastdbcmd that comes with the; standalone BLAST programs. See NCBI Insights for more details; https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/. Indeed, the nr.gz file was last updated on 2024-02-07. Looking in the [parent directoy](https://ftp.ncbi.nlm.nih.gov/blast/db), the various NR database files have been updated as recently as 2024-10-02. Therefore, the download targets for mmseqs2 are out of date by about 8 months, and this problem will get worse over time. . NCBI's solution for users is to download the blast-format files and then generate their own FASTA files:. > * Sequences in FASTA format can be generated from the pre-formatted databases by using the blastdbcmd utility;. Obviously this isn't ideal for many users, and it's been getting [at least some hate](https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/). ## Solution; Unless NCBI backflips on their decision, the only solution would be to change the `mmseqs databases` workflow for these databases to have an intermediate (slow) step of extracting a FASTA file before the `mmseqs createdb` step is run. However, this would obviously require extra dependencies, i.e. the `blastdbcmd`. Otherwise, I suppose you could host periodic builds of the databases on a server or something. Just thought I should bring this to your attention in case you are unaware :smile:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/893:1918,depend,dependencies,1918,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/893,1,['depend'],['dependencies']
Integrability,"## Context; I am using PHARROKA (available on Github) to annotate bacteriophage genomes. MMseq2 is a required dependency. It was working perfectly on my MacBook Pro purchased in 2011. I recently switched to a new one (MacBook M3-pro) and it is not working anymore (see the above PHARROKA output involving MMseqs). I am very far from being a developer and I am only a self-taught bioinformatician. I am thus seeking help !. I used Brew to install MMseqs, my OS is Mac OS X Sonoma 14.4.1. Thanks !. Nico",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/834:110,depend,dependency,110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/834,1,['depend'],['dependency']
Integrability,"## Current Behavior; Trying to run search on a DB using Uniref100 as target.; Prefiltering seems to work fine, but software crashes while aligning, returning:; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Steps to Reproduce (for bugs); Command; $ mmseqs search ../hmmsearchDB ~/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --min-length 35. ## MMseqs Output (for bugs); MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 64; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:686,wrap,wrapped,686,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,1,['wrap'],['wrapped']
Integrability,"## Current Behavior; When clustering is done I get these error messages about buffer size, I am not sure if this means there is a problem with the results. Should I run it again or is this fine?. ## MMseqs Output (for bugs); Clustering step 1...; Clustering step 2...; Clustering step 3...; Clustering step 4...; Clustering step 5...; Writing the results...; Tried to process the clustering list for the query 488890 , the length of the list = 169845; Output buffer size < clustering result size! (1000000 < 1559909); Increase buffer size or reconsider your parameters -> output buffer is already huge ;-); Tried to process the clustering list for the query 1208093 , the length of the list = 234332; Output buffer size < clustering result size! (1559910 < 2152804); Increase buffer size or reconsider your parameters -> output buffer is already huge ;-); Tried to process the clustering list for the query 11891971 , the length of the list = 277233; Output buffer size < clustering result size! (2152805 < 2534475); Increase buffer size or reconsider your parameters -> output buffer is already huge ;-); Time for merging files: 0 h 0 m 1 s; ...done. ## Your Environment; MMseqs Version:	06c71aa6c8003203db75ebbb9f213fd34abcabd4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/61:63,message,messages,63,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/61,1,['message'],['messages']
Integrability,"## Expected Behavior. ## Current Behavior; $ mmseqs search queryDB sequenceDB resultDB tmp; search queryDB sequenceDB resultDB tmp . MMseqs Version: 	GITDIR-NOTFOUND; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/817:291,wrap,wrapped,291,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/817,1,['wrap'],['wrapped']
Integrability,"## Expected Behavior. * why did the error happen?; * how to fix it?. ## Current Behavior. ## Steps to Reproduce (for bugs); data: 2.1 billion of antibody sequences; cmd: easy-linclust ./DB.fasta clusterRes tmp --min-seq-id 0.95 -c 0.95. ## MMseqs Output (for bugs). MMseqs Version: 13.45111; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 32; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.95; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.95; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. linclust tmp/14608094218366142978/input tmp/14608094218366142978/clu tmp/14608094218366142978/clu_tmp -e 0.001 --min-seq-id 0.95 -c 0.95 --spaced-kmer-mode 0 --remove-tmp-files 1. Set cluster mode SET COVER.; Killed; Error: Rescore with hamming distance step died; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our docume",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/730:522,wrap,wrapped,522,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/730,1,['wrap'],['wrapped']
Integrability,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/541:65,depend,dependencies,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541,1,['depend'],['dependencies']
Integrability,"## Expected Behavior. Don't crash on envdb when sequence length is less than 12 aa long (for example on `SEGGQDFWL` or `GSSGLISMPRV`). ## Current Behavior. MMseqs2 process crashes on aligning ColabFold envdb every time if input `.fasta` file contains short sequence (this also happens if .fasta file contains more than one sequence). UniRef database is processed every time without issue, crash happens only on envdb processing. ```; align results_700_only_456_fasta_700_5/prof_res ../db_sources/colabfold_envdb_202108_db.idx results_700_only_456_fasta_700_5/tmp/17071544472219224293/pref_0 results_700_only_456_fasta_700_5/tmp/17071544472219224293/aln_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Index version: 16; Generated by: fcf52600801a73e95fd74068e1bb1afb437d719d; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 209335862 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Segmentation fault (core dumped); Error: Alignment died; Traceback (most recent call last):; File ""/home/x/genomic/alphafold2/venv38alphafold2/bin/colabfold_search"", line 8, in <module>; sys.exit(main()); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 180, in main; mmseqs_search(; File ""/home/x/genomic/alphafold2/venv38alphafold2/l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/538:753,wrap,wrapped-scoring,753,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538,1,['wrap'],['wrapped-scoring']
Integrability,"## Expected Behavior. I should get a result_mmseqs2 and tmp file corresponding to the research. I ran the following command to do so: . `/beegfs/data/eludoc/TOOLS/MMseqs2/build/bin/mmseqs search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5`. ## Current Behavior. I get the following error message : . ```; Segmentation fault; Error: Prefilter died; Error: Search step died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; eludoc@pbil-deb:/beegfs/data/eludoc/these/NCBI_protein_viruses$ /beegfs/data/eludoc/TOOLS/MMseqs2/build/bin/mmseqs search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5. search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5 . MMseqs Version: 	8c79865b60025674b9c825fd7238bd0b95503bc7; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.01; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/234:604,message,message,604,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234,1,['message'],['message']
Integrability,"## Expected Behavior. The E-values should be robust to changes in the number of splits. ## Current Behavior. Splitting the database during search (`--split-mode 0`) will result in varying E-values, depending on the number of splits. ## Steps to Reproduce (for bugs). Run `mmseqs search` with `--split-mode 0` and varying values for `--split`. ## MMseqs Output (for bugs). Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Suggestion. One possible way to fix this would be to set a constant database size internally when using `--split-mode 0`. It could be useful to have this parameter exposed to the user, similar to `-Z` in HMMER:. ```; -Z <x> Assert that the total number of targets in your searches is; <x>, for the purposes of per-sequence E-value calculations,; rather than the actual number of targets seen.; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/653:198,depend,depending,198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/653,1,['depend'],['depending']
Integrability,"## Expected Behavior. running blastp-like search against TrEMBL. ## Current Behavior. Crash at prefilter stage. ## Steps to Reproduce (for bugs). mmseqs search tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/RESULT.mms tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep. ## MMseqs Output (for bugs). > MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; > Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; > Add backtrace 	false; > Alignment mode 	2; > Allow wrapped scoring 	false; > E-value threshold 	0.001; > Seq. id. threshold 	0; > Min alignment length 	0; > Seq. id. mode 	0; > Alternative alignments 	0; > Coverage threshold 	0; > Coverage mode 	0; > Max sequence length 	65535; > Compositional bias 	1; > Realign hits 	false; > Max reject 	2147483647; > Max accept 	2147483647; > Include identical seq. id. 	false; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	nucl:5,aa:11; > Gap extension cost 	nucl:2,aa:1; > Zdrop 	40; > Threads 	32; > Compressed 	0; > Verbosity 	3; > Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; > Sensitivity 	5.7; > k-mer length 	0; > k-score 	2147483647; > Alphabet size 	nucl:5,aa:21; > Max results per query 	300; > Split database 	0; > Split mode 	2; > Split memory limit 	0; > Diagonal scoring 	true; > Exact k-mer matching 	0; > Mask residues 	1; > Mask lower case residues 	0; > Minimum diagonal score 	15; > Spaced k-mers 	1; > Spaced k-mer pattern 	; > Local temporary path 	; > Rescore mode 	0; > Remove hits by seq. id. and coverage	false; > Sort results 	0; > Mask profile 	1; > Profile E-value threshold 	0.1; > Global sequence weighting 	false; > Allow deletions 	false; > Filter MSA 	1; > Maximum seq. id. threshold 	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select N most diverse seqs 	1000; > Omit consensus 	false; > Min codons in o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/564:566,wrap,wrapped,566,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564,1,['wrap'],['wrapped']
Integrability,"## Expected Behavior; Compare a set of distinct unknown proteins to PHROGs DB via MMseqs2. ## Current Behavior; Error: Alignment died. All .index are empty. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb GENOMAD/genomad_output/Bins_summary/Bins_virus_proteins.faa PHROGS/target_seq ##This command seems to work. mmseqs search PHROGS/phrogs_mmseqs_db/phrogs_profile_db PHROGS/target_seq PHROGS/Bins_PHROGS PHROGS/tmp -s 7 . ##This command is very long and failed. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. align MMSEQ2_PHROGS/phrogs_mmseqs_db/phrogs_profile_db MMSEQ2_PHROGS/target_seq MMSEQ2_PHROGS/tmp/3583634493861447998/pref_0 MMSEQ2_PHROGS/Bins_PHROGS --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 38880 type: Profile; Target database size: 75478 type: Aminoacid; Calculation of alignments; Score of forward/backward SW differ: 539 542. Q: 0 T: 31246. ] 0.00% 1 eta -; Start: Q: 6, T: 0. End: Q: 192, T 154; Score of forward/backward SW differ: 1751 1748. Q: 5165 T: 52236.; Start: Q: 2, T: 7. End: Q: 182, T 267; Error: Alignment died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; I",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/677:949,wrap,wrapped-scoring,949,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/677,1,['wrap'],['wrapped-scoring']
Integrability,"## Expected Behavior; Completion of download and db creation for GTDB. ## Current Behavior; I installed release 14-7e284 via conda yesterday and tried to download various databases via the databases module. The following error messages were generated for GTDB; other databases were generated without errors. I thought problems with GTDB were fixed in previous versions (e.g., see issue [#742](https://github.com/soedinglab/MMseqs2/pull/742)), but perhaps changes were reverted in the latest release via conda?. Here are the relevant error messages (full output also included below):. 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseComma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:227,message,messages,227,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,2,['message'],['messages']
Integrability,"## Expected Behavior; Completion to provide output file. ## Current Behavior; It dies with the following message:; `Target database size: 460882 type: Nucleotide; tmp/288148333766582684/search_tmp/3592684985880184946/blastp.sh: line 99: 141854 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: Search died`. ## Steps to Reproduce (for bugs); The command I used was:. `mmseqs easy-search --search-type 3 two_test.fa ../../../reference.fna two_test_out tmp`. where `two_test.fa` is a file with two DNA sequences, and reference.fna is a ~4G file with many DNA sequences. . ## MMseqs Output (for bugs); Here's [the gist](https://gist.github.com/sodiumnitrate/5bf79ff79a6ccea91bf32831d9db0ca0) for the full output. ## Context; Trying to search for two DNA sequences in `two_test.fa` within a large reference file `reference.fna`. ## Your Environment; I pulled the latest version (`3e436173321a2d0365a08bfb3b281108ed9ad414`) from the github repo and compiled it myself. Using `CMake v3.24.3` and `GCC v12.2.0`. Running on a node with 32 CPUs, and 5G memory per CPU (160G total). Interestingly, this command worked twice before it stopped working. Tried again by removing the `tmp` folder, but that did not make a difference. I can verify read access to both fasta files, as well as write access to the directory I'm running the command in. What could be the issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/718:105,message,message,105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/718,1,['message'],['message']
Integrability,"## Expected Behavior; Hi there! I am hoping to cluster a fasta file of contigs from an assembly of 134 samples. . ## Current Behavior; Getting error message that entries are longer than max sequence length of 65535 ([see error output](https://gist.github.com/cmajones/f8e3a9c3da8998672ef342788a2f050e)). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. Command: `mmseqs easy-cluster scaffolds.fasta MRN_clustered tmp`. ## MMseqs Output (for bugs); [See output here](https://gist.github.com/cmajones/f8e3a9c3da8998672ef342788a2f050e). ## Context; Am I missing an option for controlling max sequence length in mmseqs? Allowing for large contigs would be helpful in this context of a cross-assembly from 134 samples, containing 422691 sequences ranging in length from 679 kbp to 127 bp. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: MMseqs2 Version: 8.fac81; * Which MMseqs version was used: Installed via miniconda on ubuntu server. ; * Server specifications: 80 core server, 1.5 TB memory; * Operating system and version: ubuntu 16.04.5. Thanks for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/183:149,message,message,149,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/183,1,['message'],['message']
Integrability,"## Expected Behavior; Hi! I'm clustering ~60000 nucleotide sequences, each 250bp to 500bp. ; Here is the command I use; mmseqs cluster shrimpDB shrimp.clu97 tmp97 --cluster-mode 0 -s 7.5 --min-seq-id 0.97 --min-aln-len 200. ## Current Behavior; I got several lines of error messages:; there must be an error: 50016 deleted from 30868 that now is empty, but not assigned to a cluster; there must be an error: 33062 deleted from 15885 that now is empty, but not assigned to a cluster; there must be an error: 40430 deleted from 27586 that now is empty, but not assigned to a cluster; there must be an error: 13350 deleted from 28482 that now is empty, but not assigned to a cluster; there must be an error: 11573 deleted from 27334 that now is empty, but not assigned to a cluster. ## MMseqs Output (for bugs); (base) [xshan@node422 blast]$ mmseqs cluster shrimpDB shrimp.clu97 tmp97 --cluster-mode 0 -s 7.5 --min-seq-id 0.97 --min-aln-len 200; Create directory tmp97; cluster shrimpDB shrimp.clu97 tmp97 --cluster-mode 0 -s 7.5 --min-seq-id 0.97 --min-aln-len 200. MMseqs Version: 	bb0a1b3569b9fe115f3bf63e5ba1da234748de23; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	false; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	20; Compressed 	0; Verbosity 	3; A",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:274,message,messages,274,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['message'],['messages']
Integrability,"## Expected Behavior; Hi, I expected that this library would come with a/the conda environment. It's not a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480:998,depend,dependencies,998,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480,1,['depend'],['dependencies']
Integrability,"## Expected Behavior; I have been trying to build the colabfold expandable profile databases on my local machine, however I am encountering an error when running the tsv2exprofiledb command. The command runs, but fails halfway through with the below error messages. ## Steps to Reproduce (for bugs); For uniref30: mmseqs tsv2exprofiledb uniref30_2103 uniref30_2103; For colabfold metagenomic db: mmseqs tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db. ## MMseqs Output (for bugs); ### uniref30: ; tsv2exprofiledb uniref30_2103 uniref30_2103_db. MMseqs Version: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; Verbosity 3. tsv2db uniref30_2103.tsv uniref30_2103_db_tmp --output-dbtype 0 -v 3. Output database type: Aminoacid; Time for merging to uniref30_2103_db_tmp: 0h 0m 29s 721ms; Time for processing: 0h 3m 27s 506ms; compress uniref30_2103_db_tmp uniref30_2103_db -v 3. Can not set mode for uniref30_2103_db.0!. ### colabfold_env_db_202108_db:. mmseqs tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db; tsv2exprofiledb colabfold_envdb_202108 colabfold_envdb_202108_db. MMseqs Version: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; Verbosity 3. tsv2db colabfold_envdb_202108.tsv colabfold_envdb_202108_db_tmp --output-dbtype 0 -v 3. Output database type: Aminoacid; Time for merging to colabfold_envdb_202108_db_tmp: 0h 3m 36s 590ms; Time for processing: 0h 20m 26s 68ms; compress colabfold_envdb_202108_db_tmp colabfold_envdb_202108_db -v 3. Failed to mmap memory dataSize=38374278339 File=colabfold_envdb_202108_db_tmp. Error 12. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 7281baf933ab4ace4a7fc2548c49d261ad8cd5b6; * Which MMseqs version was used: Compiled from source; * Operating system and version: Ubuntu WSL2 on Windows 10. I've tried deleting and redownloading the databases to account for possible file corruption, my only other thought is that it could be a memory issue, since I am t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/530:256,message,messages,256,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/530,1,['message'],['messages']
Integrability,"## Expected Behavior; I try to do download database but the commande line give in the manual doesn't work. ## Current Behavior; error message : ; ' Invalid Command: databases; Did you mean ""mmseqs clusterupdate""? '. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; i use this line :; 'mmseqs databases UniProtKB/Swiss-Prot testdb/swissprot tmp'. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; no output, just error message; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/271:134,message,message,134,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271,2,['message'],['message']
Integrability,"## Expected Behavior; I try to use easy-linsearch and linsearch but both have same issue : empty files; First, I have try easy-linsearch with the line :; ""$ mmseqs easy-linsearch /work/cbelliardo/6-ensembl_clust/metag_G-rosea.fa /bighub/hub/DB/mmseq_swissprot/swissprot out tmp --search-type 2 -v 3 --threads 8""; but the output ( out file ) is empty without error message. Then i have try whit linsearch cmd.; $ mmseqs createdb metag_G-rosea.fa queryDB; $ mmseqs linsearch queryDB /bighub/hub/DB/mmseq_swissprot/swissprot resultDB tmp; $ mmseqs convertalis queryDB /bighub/hub/DB/mmseq_swissprot/swissprot resultDB resultDB.m8 ; I have the same issue. . The metag_G-rosea.fa file is a fasta file with 80 charactere by line. I have try with search and it's work really well. so, the file seems to be ok. ## MMseqs Output (for bugs); createdb metag_G-rosea.fa queryDB . MMseqs Version: 	10.6d92c; Max sequence length 	65535; Split seq. by length 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Assuming DNA database, forcing parameter --dont-split-seq-by-len true; Converting sequences; [; Time for merging into queryDB_h by mergeResults: 0h 0m 0s 107ms; Time for merging into queryDB by mergeResults: 0h 0m 0s 116ms; Time for merging into queryDB.lookup by mergeResults: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 479ms; Tmp tmp folder does not exist or is not a directory.; extractorfs queryDB tmp/2730103712073724212/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames; 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 101 0s 57ms; Time for merging into tmp/2730103712073724212/q_orfs_aa_h by mergeResults: 0h 0m 0s 174ms; Time for merging into tmp/2730103712073724212/q_orfs_aa b",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:364,message,message,364,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,1,['message'],['message']
Integrability,"## Expected Behavior; I want to update my clusters after a database update (in which I add new sequences but also delete sequences compared to the old database). ; The clusterupdate command works, but when I try to convert the cluster database to a tsv file, I have an error message related to the index (see below). I tried the same thing on a new database where I just added sequences and it worked perfectly, so I assume the problem comes from the fact that I remove sequences from the old database? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result data",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272:275,message,message,275,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272,1,['message'],['message']
Integrability,"## Expected Behavior; I want use easy-linclust to cluster protein seqs.; ## Current Behavior; mmseqs easy-linclust all_seq.fasta clusterRes tmp --cov-mode 0 --min-seq-id 0.4. ## MMseqs Output (for bugs); Create directory tmp; easy-linclust all_seq.fasta clusterRes tmp --cov-mode 1 --min-seq-id 0.4 . MMseqs Version: 	a14688744081c15439fa3092eec9dfd8be40440b; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	64; Compressed 	0; Verbosity 	3; Weight file name 	; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.4; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb all_seq.fasta tmp/8115150149931881526/inpu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:651,wrap,wrapped,651,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['wrap'],['wrapped']
Integrability,"## Expected Behavior; I was testing the example of `mmseqs easy-search examples/QUERY.fasta examples/DB.fasta alnRes.m8 tmp`. But I didn't see `alnRes.m8` in aimed `tmp` folder.; ## Current Behavior; ```; [lihuilin@login01 MMseqs2]$ ls; azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile examples lib LICENSE.md README.md src util; [lihuilin@login01 MMseqs2]$ mmseqs easy-search examples/QUERY.fasta examples/DB.fasta alnResult.m8 tmp; Create directory tmp; easy-search examples/QUERY.fasta examples/DB.fasta alnResult.m8 tmp. MMseqs Version: 87e7103d289029dc3345f85ea9a4c4c6d6416e46; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 40; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Glo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:717,wrap,wrapped,717,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['wrap'],['wrapped']
Integrability,## Expected Behavior; It should be possible to download `pdb_seqres.txt.gz` from `ftp.wwpdb.org`. ## Current Behavior; It seems the protocol is getting deprecated. We should use `files.wwpdb.org` instead. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; ```bash; mmseqs databases PDB mmseqs ~/data/tmp; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; databases PDB mmseqs /home/aomidi/data/tmp. MMseqs Version: 	6f45232ac8daca14e354ae320a4359056ec524c2; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	20; Verbosity 	3. 11/04 11:35:29 [NOTICE] Downloading 1 item(s); *** Download Progress Summary as of Sat Nov 4 11:36:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; ----------------------------------------------------------------------------------------------------------------------. *** Download Progress Summary as of Sat Nov 4 11:37:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; ----------------------------------------------------------------------------------------------------------------------. *** Download Progress Summary as of Sat Nov 4 11:38:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; ----------------------------------------------------------------------------------------------------------------------,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/772:132,protocol,protocol,132,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/772,1,['protocol'],['protocol']
Integrability,"## Expected Behavior; Not crashing, with a better error message if this is a user problem. ## Current Behavior; Seg Fault. 90% of profile searches are fine against this database, but others segfault. example below. ## Steps to Reproduce (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2; ```. ## MMseqs Output (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	2; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local tempor",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:56,message,message,56,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,2,"['message', 'wrap']","['message', 'wrapped']"
Integrability,"## Expected Behavior; Not sure. ## Current Behavior; After running; `mmseqs easy-search --search-type 3 --num-iterations 2 --threads 1 sequences/5LJ5_5.fasta databases/MSA_debug.fasta results/result tmp`. the program crashes with; `Can not allocate entries memory in IndexTable`. _Update:_; * Appending the query sequence to the database (which should assure at least one match is found) results in a different crash message: `Query sequence 0 has a result with no diagonal information. Please check your database.`; * Also, the log show query database size to be 2 which is weird because there is only one sequence in the file. But I can't find anything wrong with query .fasta file. _Update (2022-09-08)_:; Was trying out to the iterative step manually and ended up with the following error when trying to compute the profile:; ```; Invalid input database and --search-type combination; queryDbType: Profile; targetDbType: Nucleotide; targetSrcDbType: Unknown; searchMode: 3; ```; I suppose that mean profile search against a nucleotide database is not possible? I've also realized that there are many iterative profile search tools for proteins (psi-blast, jackhmmer) but I don't know a single one for nucleotide sequences. Is there some reason while searching with profiles is not possible in case of nucleotide sequences?. ## Context; Hi, I would like to compute MSA alignments from blast nt database (https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/) for multiple RNA sequences. Ideally, the procedure should be similar to Colabfold's MSA computation and there should be more than one search iteration for each sequence.; Note that I am limited to ~1TB RAM and the nt database index (created by createindex) does not fit into memory.; What would be the best way to go about it? . ## Steps to Reproduce (for bugs); ### 5LJ5_5.fasta:; >5LJ5_5; GUUCGCGAAGUAACCCUUCGUGGACAUUUGGUCAAUUUGAAACAAUACAGAGAUGAUCAGCAGUUCCCCUGCAUAAGGAU; GAACCGUUUUACAAAGAGAUUUAUUUCGUUUU. ### msa_debug; >URS0000000021 rRNA from 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:417,message,message,417,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['message'],['message']
Integrability,"## Expected Behavior; Precompute mmseqs index tables are generate using `createindex`. ## Current Behavior; Fails after a few minutes of computation with the following error message:; **indexdb died**. ## Steps to Reproduce (for bugs). > Download the Uniclust30 database (August 2018); `wget --verbose http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz; `. > Extract the downloaded archive . > Convert the hhm file (uniclust30_2018_08_hhm_db) to MMseqs profile DB; `mseqs convertprofiledb uniclust30_2018_08_hhm_db profile_from_hmm --threads 30 -v 3; `. > Generate the index; `mmseqs createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3`. ## MMseqs Output (for bugs); ```; > mmseqs createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3; Program call:; createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Tmp ./tmp folder does not exist or is not a directory.; Created dir ./tmp; Program call:; indexdb ./profile_from_hhm/profile_from_hmm ./profile_from_hhm/profile_from_hmm --sub-mat blosum62.out -k 5 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7 --k-score 2147483647 --include-headers 0 --split 0 --split-memory-limit 0 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/130:174,message,message,174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130,1,['message'],['message']
Integrability,"## Expected Behavior; Run mmseq search with an array of jobs. ## Current Behavior; As a test, I began with an array of 5 jobs only. 2 of them failed with a different error message. When I run them alone, they work. This behaviour is similar to the issue #239 . ## Steps to Reproduce (for bugs); `sarray -J mmseq --mail-type=ARRAY_TASKS,FAIL commandMMseqs --%=5`; where commandMMseqs contains:; `sbatch command_mmseq2_model.sbatch GCA_018105865.1 GCA_901001135.2` ; `sbatch command_mmseq2_model.sbatch GCA_009193005.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_905160935.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_019095985.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_001703475.1 GCA_901001135.2`. command_mmseq2_model.sbatch contains:; ```; #!/bin/bash; #; #SBATCH -N 1 # nombre de nœuds; #SBATCH -c 20 # nombre de cœurs sur ce meme noeud; #SBATCH --mem 50G # mémoire vive pour l'ensemble des cœurs; #SBATCH -J mmseq. module load system/Miniconda3-4.7.10 ; module load bioinfo/mmseqs2-v13.45111. mmseqs search copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out tmp -s 5.7 --search-type 3 --threads 20 --max-seqs 50 ; mmseqs filterdb mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit --extract-lines 1 ; mmseqs convertalis copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.*[0-9]* &; awk '{if ($3>=0.75 && $4>=300 && $12>=200) print $0}' mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab > mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab.filtered; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; ```. ## MMseqs Output (for bugs); One job fails ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/607:172,message,message,172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/607,1,['message'],['message']
Integrability,"## Expected Behavior; Run rbh using computer clusters.; ## Current Behavior; I am running 'mmseqs rbh' within 1000 jobs in parallel using High-performance computing. But there are always some jobs failed due to different error messages(`STDERR`). ## Steps to Reproduce (for bugs); this is my cmd to run rbh:; ```sh; $ mmseqs rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files; ```; so `$db_name` is a variable and for parallel jobs, it's the element of my name list. ; ## MMseqs Output (for bugs); there are several kinds of `STDERR` files:; ```sh; Could not delete /userfolder/rbh/result/tmp/latest!; ```; or; ```sh; Could not write file tmp/rbh.sh!; ```; and ; ```sh; Failed to execute tmp/rbh.sh with error 26.; ```; Even though the `STDERR` files are different, all `STDOUT` are quite similar: it seems that they all collapse in the middle of the process. The corresponding output is ; ```sh; rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files. MMseqs Version: f05f8c51d6e9c7c0b15fbd533e4b678303f50b3e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; E-value threshold 0.001; Seq. id. threshold 0; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 28; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Lo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/239:227,message,messages,227,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/239,1,['message'],['messages']
Integrability,"## Expected Behavior; Set RAM to 1.4T as specified by `--split-memory-limit 1400G`; ## Current Behavior; MMseqs set the limit to only 1T RAM; ## Steps to Reproduce (for bugs); I set `--split-memory-limit` to 1400G using the following command; ```; mmseqs easy-linclust {uniprot_sprot,uniprot_trembl,metaclust_nr,MERC,SRC}.fasta \; linclust_results/universedb-100 \; tmp/universedb-100 \; -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 1 \; --split-memory-limit 1400G; ```. ## MMseqs Output (for bugs); In the parameter header printed by MMseqs at the begging, the `Split memory limit` shown as 1T.; ```; MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 1; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 1T # <================ Shown here; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/328:877,wrap,wrapped,877,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/328,1,['wrap'],['wrapped']
Integrability,"## Expected Behavior; Successful create a search resultDB when run `mmseqs search query/queryDB target/tragetDB search/resultDB -s 7.5 --search-type 3`; but fail when run `mmseqs search query/queryDB target/tragetDB search/resultDB -s 7.5 --search-type 3 --num-iterations 2`; ## Current Behavior; Error: Alignment died; Error: Search step died; ## Steps to Reproduce (for bugs); ```; mmseqs createdb query.fasta query/queryDB; mmseqs createdb targegt.fasta target/targetDB; mmseqs query/queryDB target/targetDB search/resultDB tmp -s 7.5 --search-type 3 --num-iterations 2; ```. ## MMseqs Output (for bugs). > MMseqs Version: 	df77d9e6cf640fe8990f247441ab44d4f4ad9cdc; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	2; Max sequence length 	10000; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; R",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:792,wrap,wrapped,792,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,1,['wrap'],['wrapped']
Integrability,"## Expected Behavior; Summary: Running linclust or clust with a very big database leads to a heavy slowdown in the rescorediagonal part. Expected the job to continue much faster. It releases a warning that says `Can not touch X into main memory` and the job continues running.; ## Current Behavior; The job is stuck at rescorediagonal with no output after several hours. The job is however accesing the indexes inside of the temporary folder.; Is there anyway to fix this? Or speed it up?; ## MMSeqs Output; linclust JGI JGI_nr tmp --cluster-mode 2 --cov-mode 1 -c 0.99 --min-seq-id 0.95 --split-memory-limit 300G . MMseqs Version: 	c498f51053e2f550a4ab4bee534b0ef80033a2b3; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Threads 	96; Compressed 	0; Verbosity 	3; Weight file name 	; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.95; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.99; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Resco",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:966,wrap,wrapped,966,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['wrap'],['wrapped']
Integrability,"## Expected Behavior; The functional annotation of representative sequences (75 GB) in a FASTA file with eggNOG and PFAM. ## Current Behavior; I started with the eggNOG annotation, which is running for more than 120 hours now. Is there a way to speed the process up?. ## MMseqs Output (for bugs); ```; repSEQS.fna; Create directory repSEQS_eggnog.tmp; easy-search repSEQS.fna databases/eggnog repSEQS_eggnog.csv repSEQS_eggnog.tmp \; --dbtype 2 \; --split-memory-limit 300G \; --threads 56 \; --remove-tmp-files false \; --greedy-best-hits 1 . MMseqs Version: 	8ff26f23a6b880df36cadb707890084503ceaffb; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	56; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	300G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask pro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/594:727,wrap,wrapped,727,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594,1,['wrap'],['wrapped']
Integrability,"## Expected Behavior; The search should work as easy-search for the protein sequence fasta file. ## Current Behavior; Only easy-search is working for the protein sequence fasta file. ## Steps to Reproduce (for bugs); ` mmseqs search /mount-nfs/mydataset/single_train_sequences.fasta /mount-nfs/unierf100/uniref100.fasta /mount-nfs/mmseq_single/alRes.m8 ./tmp`. ## MMseqs Output (for bugs); ```; MMseqs Version: 14.7e284; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 240; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/720:541,wrap,wrapped,541,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/720,1,['wrap'],['wrapped']
Integrability,"## Expected Behavior; Using easy-search for multiple alignment (non-duplicate PDB seqs against Uniref100). . I've run this on a cloud instance (64G RAM), and a local server with 256G RAM. It completed the search on the server in 9 hours, producing an output file of 41G. . I expected it to finish running on the cloud at a slower speed because the target DB was split into more chunks (87 splits on the cloud VS 7 splits on the server). ## Current Behavior; On the cloud, however, after the prefiltering step, both ""align"" and ""convertalis"" logged a message ""Can not touch X into main memory"". The job will stay hanging but not produce any more logging or output files (there were a bunch of output files X.0, X.1, X.2.. not merged outputs). I killed it after 2 days. UPDATE: I've also tried to set --split-memory-limit 40G, it did finish running (in 16 hours) and produced a single output file, despite still displaying the message ""can not touch X into memory"". Also, the output file is larger than the output I got from running on the server previously (cloud VS server = 67G/41G, 109912025 lines/ 65303318 lines). I can't figure out what could cause the differences, given the same input files, same script (except for adding --split-memory-limit). So my two questions are:; 1) What's up with the warning ""Can not touch X into main memory""? ; 2) Why are the output files different?. ## Steps to Reproduce (for bugs); `mmseqs easy-search pdb_unique_seqs_all.fasta uniref100.fasta output/pdb_uniref100_6cpu_s3_e10minus3 tmp/ -a -s 3 --threads 6 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar,qaln,taln`; ## MMseqs Output (for bugs); Log file for running on cloud instance WITHOUT setting --split-memory-limit, no merged output, job hanging.; [log_easysearch.txt](https://github.com/user-attachments/files/16683740/log_easysearch.txt). Log file for running on the cloud WITH setting --split-memory-limit 40G, finished running with a single outpu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/877:550,message,message,550,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/877,2,['message'],['message']
Integrability,"## Expected Behavior; When running a command on a machine with multiple cores, all the output files should be combined into a single final results file. ## Current Behavior; All the files are numbered `1` to `n` where `n` is the number of cores. . ## Steps to Reproduce (for bugs); This happens with many commands (e.g. `mmseqs cluster` `mmseqs lca`, `mmseqs taxonomy`, etc). ## Context; Each file is numbered individually, but a better output would be to combine all outputs to a single file. . A trivial solution is to add `--threads 1` to the command, but that seems to be anti-use-case. The number of files is dependent on the number of cores. `cat results.? results.?? > results` is a trivial solution, but clumsy to implement for every `mmseqs` call in a pipeline. In addition, the current `mmseqs` solution doesn't work well with (for e.g.) `snakemake` that is expecting specific files. ## Your Environment; MMseqs2 Version: c75fe9acf701d9dee97b68dcbbda92fa7b1fc2de; Running on CentOS 8.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/292:614,depend,dependent,614,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/292,1,['depend'],['dependent']
Integrability,"## Expected Behavior; cluster all the sequences. ## Current Behavior; some sequences are lost, rather than clustered accordingly . ## Steps to Reproduce (for bugs); easy-linclust fasta_file output_path tmp_folder --min-seq-id 0.5. ## MMseqs Output; easy-linclust roman/seqs/lectins_seq.fasta roman/test/lectins_seq roman/test/tmp --min-seq-id 0.5. MMseqs Version: 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 128; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:623,wrap,wrapped,623,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['wrap'],['wrapped']
Integrability,"## Expected Behaviour. Unknown. ## Current Behaviour. I am trying to re-create the clustered nr database currently featured on the BLAST site. The cluster step appears to stall after merging the split files and I get the message ""Cannot touch 215222407074 into main memory"". I have 188G of RAM and 63 cores available. I have tried to reduce the amount of memory using the --split-memory-limit 70G, --split-mode 2, --split 2, and --compressed 1 options but it does not appear to have helped. This is my first time using MMseqs so any help would be much appreciated. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Create directory tmp; cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1 . MMseqs Version: 	bdd169b3e285299cab792e62d60eb1f4e4e434d2; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	4; Split mode 	2; Split memory limit 	70G; Coverage threshold 	0.9; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:221,message,message,221,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['message'],['message']
Integrability,"## Intention; I am trying perform an exhaustive all against all search of a large database with sensitivity similar to blast. The database contains approximately 73,000 sequences with an average length around 300 amino acids. Process is killed while reading results with the error swapresults died. . On Linux mint and using MMseqs2 Release 15-6f452. ## output; cahoonlab@lagbb-bcecmint:~$ mmseqs search Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 alnment/alignment tmp --exhaustive-search -s 8; search Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 alnment/alignment tmp --exhaustive-search -s 8 . MMseqs Version: 	78ae2c5b8dba889079745e8013deeb30c3ac8a1a; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	8; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; S",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:843,wrap,wrapped,843,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['wrap'],['wrapped']
Integrability,"## Main Issue. Dear mmseqs team,. I am a fairly new user of your software and have run into some unexpected behavior which I am unable to resolve. I am attempting to cluster a database of eukaryotic protein sequences (~1.8*10e6 sequences) using profile search based clustering. I am attempting to iterate or cascade the workflow described in ""How to cluster using profiles"". The issue I am encountering is that sequences of very different length are merged in clustering despite providing -c 0.8 --covmode 0 during the searches. This causes issues during cascaded clustering as single domain proteins are merged with multi-domain proteins. . Example output after one round of the protocol (described below, -c 0.8, --covmode 0). ![poor_MSA](https://user-images.githubusercontent.com/131811718/234382984-9eacd216-41b8-46af-a694-7805a1ea4d5d.png). For basic cascaded clustering ""mmseqs cluster"" or single round clustering using ""search"" followed by ""clust"" the behavior appear to function as intended. Perhaps something in the profile generation or implementation of profile against consensus searches affects the interpretation of the -c parameter? Investigating the alignment data of the attached MSA with mmseqs convertalis (attached below) shows that all hits indeed passes the -c 0.8 cutoff? As such perhaps my understanding of what constitutes alignment coverage is lacking and in that case how would one go about retricting the ""coverage"" to only query-target pairs with lengths within 80% of each other? I have tried --covmode 5 with similar results. . ## Expected Behavior. Restriction of clustered protein sequence lengths by imposing cover limits via the -c parameter in conjunction with any --covmode. ## Current Behavior. Clusters containing sequences of vastly different lengths far outside the range of the -c cutoff. . ## Context. My protocol can be summarized roughly as:. 1) Collapse paralogs and create cluster representatives in order to reduce database redundancy using;; mmseqs clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:680,protocol,protocol,680,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['protocol'],['protocol']
Integrability,"## Question; Hello to everyone!. I have generated some MSA from some sequences using mmseqs, and after having worked a little with them I have noted an interesting/puzzling fact about these MSA that I want to make sure is not problematic. I generated the MSA as follows:. `mmseqs search query_full source_db target_full tmp/ --num-iterations 3 -a -s 8 -e 0.1 --max-seqs 10000`. Followed by. `mmseqs result2msa query_full source_db target_full msa_full --msa-format-mode 6`. These commands go trough without any error messages and give me the desired MSA. I have noted though that if I then take the seed sequence used in the search function for a particular MSA, and after having realigned with pyhmmer, I compute the normalised hamming distance of the seed sequence from the elements in the MSA, for some MSA I get a histogram like this one. ![image_480](https://github.com/soedinglab/MMseqs2/assets/43722592/eb413cab-480d-4d5b-bca5-851363f38169). Which signals that most of the alignment is at 70%-80% of sequence dissimilarity from the seed MSA. While I know that there can be homologous sequences with low sequence identity, I was expecting also a significant number at lower hamming distance representing close homologous. . ## Question; Is such a behaviour to be expected? From my understanding at some point of the search algorithm mmseqs clusters the different target sequences based on the scores of the seed, could it be that than it selects just a single representative from each cluster and for this reason we have very few similar sequences to the seed in the MSA? If that it the case I would kindly ask you also some references to gain a little more insight in the whole machinery. If on the other side this is not to be expected, what mistake could I be making in the MSA generation?. ## PS. One last curiosity, is the seed sequences included in the MSA generated or not?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/755:517,message,messages,517,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/755,1,['message'],['messages']
Integrability,"## Suggestion of a feature. It would be extremely useful if mmseqs have native python bindings. Results from the search could be returned as pandas Dataframe (which is standard python tabular format). It would simplify the usage of mmseqs2 as a building block for bioinformatics aplications.; Such bindings could be implemented using pybind (https://github.com/pybind/pybind11). Currently we are interested in this feature as a [whole organisation](https://github.com/covid-genomics), however we don't have enough resources to create and maintain bindings by ourselves.; With little to no change mmseqs2 could be also used as a Python framework for biological sequences manipulation (similar to [Biopython](https://biopython.org/) of [Biotite](https://www.biotite-python.org/index.html), but faster and dedicated for large volumes of sequences). ## PoC. We created a very rough [PoC with bypind11](https://github.com/covid-genomics/biosnake) to examine how easy it is to create api wrappers.; The bindings are far from being production-ready and the project was just used as a proof that this is possible. ## Possible collaboration. We want to know if you are interested in helping us develop and maintain the bindings. If yes, then we would like to see tight future collaboration to make mmseqs2 more accessible. Bindings would make it easier to use in standard data science pipelines and much more flexible. [Covid Genomics](http://covidgenomics.com/) contact email: [contact@covidgenomics.com](mailto:contact@covidgenomics.com)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/450:982,wrap,wrappers,982,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450,1,['wrap'],['wrappers']
Integrability,"- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.1 extensions, using flags: -march=native -msse4.1 -mfpmath=sse; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /galaxy/home/ksahlin/prefix/source/MMseqs2/build; [ksahlin@desmond build]$ make; Scanning dependencies of target cacode; make[2]: Warning: File 'lib/cacode/CMakeFiles/cacode.dir/depend.make' has modification time 0.00048 s in the future; [ 0%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; make[2]: warning: Clock skew detected. Your build may be incomplete.; [ 1%] Built target cacode; Scanning dependencies of target alp; [ 1%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 1%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 2%] Building CX",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:2526,depend,dependencies,2526,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,1,['depend'],['dependencies']
Integrability,"--wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 8 --compressed 0 -v 3 . Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 11.80K 0s 9ms ; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 23ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 11803 type: Aminoacid; Target database size: 11803 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 11.80K 1s 228ms ; Time for merging to aln: 0h 0m 0s 3ms; 15505 alignments calculated; 15076 sequence pairs passed the thresholds (0.972332 of overall calculated); 1.277302 hits per query sequence; Time for pro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:11317,wrap,wrapped-scoring,11317,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['wrap'],['wrapped-scoring']
Integrability,"-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:2768,wrap,wrapped-scoring,2768,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['wrap'],['wrapped-scoring']
Integrability,"-cov-mode 0 -c 0.8 -e 0.001 -s 7 --min-seq-id 0.4 --threads 40 --max-seqs 200 --max-iterations 1000 --alignment-mode 3 --similarity-type 2 . MMseqs Version: 14.7e284; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 7; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 200; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 40; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.4; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Connected component clustering produces less clusters in a single step clustering.; Please u",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:8351,wrap,wrapped,8351,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped']
Integrability,"-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3. [=====================] ===================6= ========0s 1ms==; ==============Time for merging to pref_rescore2: 0h 0m 0s 8ms; Time for processing: 0h 0m 0s 27ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to aln: 0h 0m 0s 3ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 15ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:14732,wrap,wrapped-scoring,14732,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['wrap'],['wrapped-scoring']
Integrability,"-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 58ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=================================================================] 100.00% 276 0s 31ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 665ms; align tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/pref_step0 tmp//538598962955004214/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 77ms; Time for merging to aln_step0: 0h 0m 0s 9ms; 413 alignments calculated; 406 sequence pairs passed the thresholds (0.983051 of overall calculated); 1.471014 hits per query sequence; Time for processing: 0h 0m 0s 121ms; clust tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/aln_step0 tmp//538598962955",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:13044,wrap,wrapped-scoring,13044,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['wrap'],['wrapped-scoring']
Integrability,-ng 13.2.0 h807b86a_3 conda-forge; libgomp 13.2.0 h807b86a_3 conda-forge; libnsl 2.0.1 hd590300_0 conda-forge; libsanitizer 12.3.0 h0f45ef3_3 conda-forge; libsqlite 3.44.2 h2797004_0 conda-forge; libstdcxx-devel_linux-64 12.3.0 h8bca6fd_103 conda-forge; libstdcxx-ng 13.2.0 h7e041cc_3 conda-forge; libuuid 2.38.1 h0b41bf4_0 conda-forge; libxcrypt 4.4.36 hd590300_1 conda-forge; libzlib 1.2.13 hd590300_5 conda-forge; markdown 3.5.1 pypi_0 pypi; markupsafe 2.1.3 pypi_0 pypi; matplotlib 3.8.2 pypi_0 pypi; ml-collections 0.1.1 pypi_0 pypi; ml-dtypes 0.2.0 pypi_0 pypi; ncurses 6.4 h59595ed_2 conda-forge; numpy 1.26.3 pypi_0 pypi; oauthlib 3.2.2 pypi_0 pypi; openssl 3.2.0 hd590300_1 conda-forge; opt-einsum 3.3.0 pypi_0 pypi; packaging 23.2 pypi_0 pypi; pandas 1.5.3 pypi_0 pypi; pillow 10.2.0 pypi_0 pypi; pip 23.3.2 pyhd8ed1ab_0 conda-forge; protobuf 4.23.4 pypi_0 pypi; py3dmol 2.0.4 pypi_0 pypi; pyasn1 0.5.1 pypi_0 pypi; pyasn1-modules 0.3.0 pypi_0 pypi; pyparsing 3.1.1 pypi_0 pypi; python 3.10.13 hd12c33a_1_cpython conda-forge; python-dateutil 2.8.2 pypi_0 pypi; pytz 2023.3.post1 pypi_0 pypi; pyyaml 6.0.1 pypi_0 pypi; readline 8.2 h8228510_1 conda-forge; requests 2.31.0 pypi_0 pypi; requests-oauthlib 1.3.1 pypi_0 pypi; rsa 4.9 pypi_0 pypi; scipy 1.11.4 pypi_0 pypi; setuptools 69.0.3 pyhd8ed1ab_0 conda-forge; six 1.16.0 pypi_0 pypi; sysroot_linux-64 2.12 he073ed8_16 conda-forge; tabulate 0.9.0 pypi_0 pypi; tensorboard 2.15.1 pypi_0 pypi; tensorboard-data-server 0.7.2 pypi_0 pypi; tensorflow-cpu 2.15.0.post1 pypi_0 pypi; tensorflow-estimator 2.15.0 pypi_0 pypi; tensorflow-io-gcs-filesystem 0.35.0 pypi_0 pypi; termcolor 2.4.0 pypi_0 pypi; tk 8.6.13 noxft_h4845f30_101 conda-forge; toolz 0.12.0 pypi_0 pypi; tqdm 4.66.1 pypi_0 pypi; typing-extensions 4.9.0 pypi_0 pypi; tzdata 2023d h0c530f3_0 conda-forge; urllib3 2.1.0 pypi_0 pypi; werkzeug 3.0.1 pypi_0 pypi; wheel 0.42.0 pyhd8ed1ab_0 conda-forge; wrapt 1.14.1 pypi_0 pypi; xz 5.2.6 h166bdaf_0 conda-forge; zipp 3.17.0 pypi_0 pypi`,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/795:5838,wrap,wrapt,5838,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/795,1,['wrap'],['wrapt']
Integrability,"-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 160ms; rescorediagonal ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref tmp//538598962955004214/linclust/16628284907041385511/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 303 0s 15ms; Time for merging to pref_rescore1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 47ms; clust ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref_rescore1 tmp//538598962955004214/linclust/16628284907041385511/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 303 0s 5ms; Sort entries; Find missing connections; Found 28 new connections.; Reconstruct initial order; [=================================================================] 100.00% 303 0s 14ms; Add missing connections; [================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:4576,wrap,wrapped-scoring,4576,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['wrap'],['wrapped-scoring']
Integrability,"-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 182ms; rescorediagonal DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 303 0s 14ms; Time for merging to pref_rescore1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 46ms; clust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore1 tmpfiles//13298481167543164943/linclust/10229649346622198404/pre_clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================] 303 0s 0ms; Sort entries; Find missing connections; Found 28 new connections.; Reconstruct initial order; [=================================================================] 303 0s 6ms; Add missing connections; [====================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:4531,wrap,wrapped-scoring,4531,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['wrap'],['wrapped-scoring']
Integrability,"-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 100.00% 121.96M 5m 3s 965ms ; Time for merging to pref_rescore1: 0h 1m 26s 443ms; Time for processing: 0h 7m 19s 298ms; clust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 cluster_tmp/1127447206531551203/linclust/8761493678692146066/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 0m 53s 944ms. Size of the sequence database: 121964581; Size of the alignment database: 121964581; Number of clusters: 119253279. Writing results 0h 1m 14s 106ms; Time for merging to pre_clust: 0h 0m 55s 443ms; Time for processing: 0h 4m 11s 817ms; createsubdb cluster_tmp/11274472065315512",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:5116,wrap,wrapped-scoring,5116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['wrap'],['wrapped-scoring']
Integrability,".9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 156ms; rescorediagonal DB_in/shuffle_in DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [==============================================================] ===1.95K 0s 40ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 71ms; clust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore1 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 1.95K 0s 9ms; Sort entries; Find missing connections; Found 1534 new connections.; Reconstruct initial order; [=================================================================] 1.95K 0s 10ms; Add missing connections; [=============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:4496,wrap,wrapped-scoring,4496,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['wrap'],['wrapped-scoring']
Integrability,".out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; rescorediagonal DB_in DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 303 0s 28ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms===============> ] 94.37% 286 eta 0s; Time for processing: 0h 0m 0s 69ms; clust DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore1 tmp//10798751672030653963/linclust/5052420726377277994/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 303 0s 10ms; Sort entries; Find missing connections; Found 29 new connections.; Reconstruct initial order; [=================================================================] 100.00% 303 0s 9ms; Add missing connections; [============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:4691,wrap,wrapped-scoring,4691,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['wrap'],['wrapped-scoring']
Integrability,"//mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:2733,protocol,protocol,2733,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['protocol'],['protocol']
Integrability,"/cated_sk100; mmseqs clusthash scafDB/cated_sk100 resultsDB/resultDB --min-seq-id 0.99 --threads $THREADS; mmseqs clust scafDB/cated_sk100 resultsDB/resultDB clusterDB --threads $THREADS; mmseqs result2repseq scafDB/cated_sk100 clusterDB DB_clu_rep; mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header. When ""Compute 1 unique hashes."" is printed, there are 10 resultsDB files and 10 resultDB.index files, however, only one (resultDB.index.7) is getting larger with time (and is > 0 in size). Meanwhile only one thread seems to be utilized (around 8% of the total 10 threads given).; When the clusthash finishes there is one resultsDB.index file, and 10 resultsDB files, 8 with zero size, and resultsDB.index7 and resultsDB.index both with the same size). After this, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file. This fasta file size <1gb but I first tried to run this process on a >80gb file on remote compute node and was concerned when I saw the job was using only a small part of the resources.; Not part of this issue but realted; also tried to do the same thing with a large protein file but I get invalid fasta entry errors (maybe because of the ""*"" marking STOPs left by the ORF predictor, but that wouldn't happen in the nucleic acid file example above). ## Yo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261:1434,message,message,1434,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261,1,['message'],['message']
Integrability,/generated/createindex.sh.h; [ 19%] Generating ../generated/createtaxdb.sh.h; [ 19%] Generating ../generated/translated_search.sh.h; [ 20%] Generating ../generated/taxpercontig.sh.h; [ 20%] Generating ../generated/multihitdb.sh.h; [ 20%] Generating ../generated/multihitsearch.sh.h; [ 21%] Generating ../generated/enrich.sh.h; [ 21%] Generating ../generated/blastn.sh.h; [ 21%] Generating ../generated/searchslicedtargetprofile.sh.h; [ 22%] Generating ../generated/taxonomy.sh.h; [ 22%] Generating ../generated/linsearch.sh.h; [ 23%] Generating ../generated/databases.sh.h; [ 23%] Generating ../generated/nucleotide_clustering.sh.h; [ 23%] Generating ../generated/iterativepp.sh.h; [ 24%] Generating ../generated/tsv2exprofiledb.sh.h; [ 24%] Built target generated; Scanning dependencies of target version; [ 25%] Building CXX object src/version/CMakeFiles/version.dir/Version.cpp.o; Linking CXX static library libversion.a; [ 25%] Built target version; Scanning dependencies of target libzstd_static; [ 25%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/entropy_common.c.o; [ 25%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/fse_decompress.c.o; [ 26%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/threading.c.o; [ 26%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/pool.c.o; [ 26%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/zstd_common.c.o; [ 27%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/error_private.c.o; [ 27%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/xxhash.c.o; [ 28%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/compress/hist.c.o; [ 28%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_stat,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:7685,depend,dependencies,7685,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,1,['depend'],['dependencies']
Integrability,"/tmp/5351426679731834765/clu_redundancy ./mmseqs_output/tmp/5351426679731834765/clu_step0 ./mmseqs_output/tmp/5351426679731834765/clu_step1 ./mmseqs_output/tmp/5351426679731834765/clu_step2 . Clustering step 1; [=================================================================] 20.94K 0s 219ms; Clustering step 2; [=================================================================] 10.97K 0s 427ms; Clustering step 3; [=================================================================] 8.34K 0s 657ms; Clustering step 4; [=================================================================] 8.19K 0s 758ms; Write merged clustering; [=================================================================] 100.00K 0s 956ms; Time for merging to clu: 0h 0m 0s 164ms; Time for processing: 0h 0m 1s 268ms; align ./mms_smallDB ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/clu ./mmseqs_output/tmp/5351426679731834765/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 100000 type: Aminoacid; Target database size: 100000 type: Aminoacid; Calculation of alignments; [=================================================================] 8.19K 8s 160ms; Time for merging to aln: 0h 0m 0s 15ms; 99829 alignments calculated; 73771 sequence pairs passed the thresholds (0.738974 of overall calculated); 9.012951 hits per query sequence; Time for process",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:33652,wrap,wrapped-scoring,33652,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped-scoring']
Integrability,"0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 20.00K 0s 10ms ; Time for merging to pref_rescore1: 0h 0m 0s 4ms==================>] 99.51% 19.90K eta 0s ; Time for processing: 0h 0m 0s 25ms; clust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 20.00K 0s 7ms ; Sort entries; Find missing connections; Found 12302 new connections.; Reconstruct initial order; [============================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:6972,wrap,wrapped-scoring,6972,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['wrap'],['wrapped-scoring']
Integrability,"0.3 --threads 128; cluster tmpDB DB_clu tmp --min-seq-id 0.3 --threads 128 . MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.3; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 5.000000; Set cluster mod",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:1502,wrap,wrapped,1502,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['wrap'],['wrapped']
Integrability,"0059278292880/linclust/10067396915876818640/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 16ms; Time for processing: 0h 0m 0s 564ms; filterdb tmp/16479300059278292880/linclust/10067396915876818640/pref_filter1 tmp/16479300059278292880/linclust/10067396915876818640/pref_filter2 --filter-file tmp/16479300059278292880/linclust/10067396915876818640/order_redundancy --threads 112 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 855.53K 0s 584ms; Time for merging to pref_filter2: 0h 0m 1s 180ms; Time for processing: 0h 0m 3s 237ms; align tmp/16479300059278292880/linclust/10067396915876818640/input_step_redundancy tmp/16479300059278292880/linclust/10067396915876818640/input_step_redundancy tmp/16479300059278292880/linclust/10067396915876818640/pref_filter2 tmp/16479300059278292880/linclust/10067396915876818640/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 112 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 855530 type: Nucleotide; Target database size: 855530 type: Nucleotide; Calculation of alignments; [=================================================================] 855.53K 2m 53s 344ms; Time for merging to aln: 0h 0m 0s 811ms; 12214778 alignments calculated; 932129 sequence pairs passed the thresholds (0.076312 of overall calculated); 1.089534 hits per query sequence; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:8156,wrap,wrapped-scoring,8156,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['wrap'],['wrapped-scoring']
Integrability,"0235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 9.50M 1m 30s 166ms; Time for merging to pref_rescore1: 0h 0m 3s 976ms; Time for processing: 0h 1m 39s 656ms; clust DB tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 tmp/576731152808920235/linclust/1790908825406232727/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 1s 66ms. Size of the sequence database: 9502826; Size of the alignment database: 9502826; Number of clusters: 8785102. Writing results 0h 0m 1s 200ms; Time for merging to pre_clust: 0h 0m 0s 5ms; Time for processing: 0h 0m 5s 962ms; createsubdb tmp/576731152808920235/linclust/1790908825406232727/order_redundancy DB tmp/576731152808920235/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:5900,wrap,wrapped-scoring,5900,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['wrap'],['wrapped-scoring']
Integrability,"090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s 620ms; Time for processing: 5h 43m 57s 88ms; rescorediagonal inDB inDB tmp/18375844090983922724/pref tmp/18375844090983922724/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 ; -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 160 --compressed 0 -v 3. [=================================================================] 100.00% 2.83B 1h 11m 50s 841ms. [=================================================================] ; .; .; .; 100.00% 1.00M 0s 440ms; [=================================================================] 100.00% 1.00M 0s 541ms; [=================================================================] 100.00% 1.00M 0s 501ms; [=================================================================] 100.00% 1.00M 0s 455ms; [=================================================================] 100.00% 1.00M 0s 609ms; [=================================================================] 100.00% 1.00M 0s 536ms; [=================================================================] 100.00% 1.00M 0s 626ms; [============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:3137,wrap,wrapped-scoring,3137,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311,1,['wrap'],['wrapped-scoring']
Integrability,"1) I am looking through the code and seeing some bugs in how coverage works within the alignment for taxonomy.; Ignoring if this makes sense or not, its definitely broken code-wise. . It also would not be super well defined which coverage to compute, since we do multiple alignments with the 2bLCA procedure. What is currently implemented (however broken) is that it would try to compute the coverage between the extracted subfragment of the database against the other database hits. https://github.com/soedinglab/MMseqs2/wiki#the-concept-of-lca In the figure here this would be the coverage of the pink hit 1 fragment versus Hit 2, 3 and 4. I am not sure which coverage would make the most sense to compute and in any case would require us to run new benchmarks. 2) You need to pass `--tax-output-mode 2` to also compute and store the alignments. They will be placed at `taxresults.database_aln` in your case. 3) easy-taxonomy and taxonomy behave the same, the only difference is that the former takes FASTA input while the later only takes MMseqs2 databases. The main algorithmic difference depends on the input type though. With nucleotide input it will use the contig taxonomy procedure described in the MMseqs2 taxonomy paper, this includes the fast ORF-prefiltering and the taxonomy majority voting. The ORF-prefiltering can be overaggressive for short-reads, our previous recommendation was to disable the ORF-prefiltering with `--orf-filter 0` if you give it short read input. We are currently developing a better fix in #832 currently that should not require messing with this parameter. For protein input, the ORF-filtering and majority voting does not happen.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/750#issuecomment-2063529866:1093,depend,depends,1093,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/750#issuecomment-2063529866,1,['depend'],['depends']
Integrability,"1) Sounds about right. You still need to merge all clusterings in the end with `mergeclusters` (careful about the order of the input clusterings). Also keep in mind that the `cluster` workflow also has a reassignment stage since some time that is more involved to emulate (if you need something like that).; 2) You should use `filterdb` `--filter-column` + `--comparison-operator` + `--comparison-value`. It's a lot faster than `apply`.; However, I am not sure this approach is actually faster. Doing a low sensitivity clustering at 90% first and then taking all representatives and clustering at 50% is a lot faster than clustering at 50% directly and then reconstructing the 90% step.; 3. Createsubdb will depending on `--subdb-mode` either only write a new `.index` and symlink the data, or write only the selected entries (+ their respective index entry). The headers are currently always symlinked.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/308#issuecomment-625286399:708,depend,depending,708,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/308#issuecomment-625286399,1,['depend'],['depending']
Integrability,"10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_1. align result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_0 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. rmdb result_20230419_115721/tmp/16464230693756166324/aln_0; rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. result2profile result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/ta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:4363,wrap,wrapped-scoring,4363,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['wrap'],['wrapped-scoring']
Integrability,"10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_2. align result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_2 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_1 result_20230419_115721/res result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. expandaln result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/res /home/user/project/target_DB/target_DB.idx result_20230419_115721/res_exp ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:7337,wrap,wrapped-scoring,7337,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['wrap'],['wrapped-scoring']
Integrability,"16 0s 6ms; Index statistics; Entries: 125; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; XXXXXX 6; XXXXXX 6; XXXXXX 4; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 1; Time for index table init: 0h 0m 1s 308ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 416; Target db start 1 to 416; [=================================================================] 416 0s 20ms. 0.116417 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; Time for processing: 0h 0m 2s 35ms; align DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/pref_step0 DB_clustered/tmp/17526443716087640986/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 416 type: Aminoacid; Target database size: 416 type: Aminoacid; Calculation of alignments; [=================================================================] 416 0s 60ms; Time for merging to aln_step0: 0h 0m 0s 1ms. 464 alignments calculated.; 437 sequence pairs passed the thresholds (0.941810 of overall calculated).; 1.050481 hits per query sequence.; Time for processing: 0h 0m 0s 117ms; clust DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/aln_step0 DB_clustered/tmp/17526443716087640986/clu_step0 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:12960,wrap,wrapped-scoring,12960,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['wrap'],['wrapped-scoring']
Integrability,"16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Estimated memory consumption: 127G; Target database size: 34746192 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 434ms; align profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 /tmp/15358673946673749737/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:4929,wrap,wrapped-scoring,4929,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['wrap'],['wrapped-scoring']
Integrability,"1831648_seqs.mmseqs2clu tmp --cov-mode 0 -c 0.85 --min-seq-id 0.95 --threads 112 . MMseqs Version: 	15.6f452; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.85; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	false; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	112; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.95; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:1412,wrap,wrapped,1412,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['wrap'],['wrapped']
Integrability,"1; FDDTDS 20; NGGSLK 17; DLLDMP 17; DVLDMP 17; GEQVAR 16; FDDTDT 16; Time for index table init: 0h 0m 2s 591ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8338; Target db start 1 to 8338; [=================================================================] 8.34K 26s 907ms. 903.365687 k-mers per position; 4641 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 88 sequences passed prefiltering per query sequence; 76 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 36ms; Time for processing: 0h 0m 32s 520ms; align ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/pref_step2 ./mmseqs_output/tmp/5351426679731834765/aln_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 8338 type: Aminoacid; Target database size: 8338 type: Aminoacid; Calculation of alignments; [=================================================================] 8.34K 17s 958ms; Time for merging to aln_step2: 0h 0m 0s 88ms; 489475 alignments calculated; 8622 sequence pairs passed the thresholds (0.017615 of overall calculated); 1.034061 hits per query sequence; Time for proc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:30583,wrap,wrapped-scoring,30583,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped-scoring']
Integrability,"2 tmp//538598962955004214/linclust/16628284907041385511/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 11ms ] 54.55% 151 eta 0s; Time for processing: 0h 0m 0s 54ms; align tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/pref_rescore2 tmp//538598962955004214/linclust/16628284907041385511/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 97ms; Time for merging to aln: 0h 0m 0s 9ms; 276 alignments calculated; 276 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 117ms; clust tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/lin",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:8200,wrap,wrapped-scoring,8200,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['wrap'],['wrapped-scoring']
Integrability,"259d8f2b659162236 ; 2- Compile as [described here](https://github.com/soedinglab/MMseqs2/#compile-from-source) but changing `cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..` by `cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=. ..` ; 3- Run all steps below:; > mmseqs createdb tcdb_query.nr.fa tcdb_query.nr.db 2>&1 >> log ; > mmseqs createdb all.fa all.db 2>&1 >> log; ; > mmseqs search tcdb_query.nr.db all.db tcdb_result.db tmp --threads 40 -s 7.5 --num-iterations 3 -a --max-seqs 17702628 -c 0.8 --add-self-matches 2>&1 >> log . 4- After crash:; > gdb --args mmseqs align tcdb_query.nr.db all.db tmp/1072319213335698383/pref_0 tmp/1072319213335698383/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 17702628 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 -v 3 . return:; ```; GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-114.el7; Copyright (C) 2013 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /home/acpguedes/source/MMseqs2/build/bin/mmseqs...done.; (gdb) bt; No stack.; ```. Important note:; I send the STDOUT and STDERR to log file but there are one message that was printed on the screen and not on log file: ; `scoreIdentical has different length L: scoreIdentical has different length L: 604154 query_length: 126; query_length: 626`. I can send you the entire directory but it is too large to upload on github.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-455599510:1866,message,message,1866,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-455599510,1,['message'],['message']
Integrability,"3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; filterdb clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_filter1 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_filter2 --filter-file clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 154 0s 34ms; Time for merging to pref_filter2: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 99ms; rescorediagonal clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_filter2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 7ms; Time for merging to pref_rescore2: 0h 0m 0s 1ms ] 49.67% 77 eta 0s; Time for processing: 0h 0m 0s 37ms; align clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:8348,wrap,wrapped-scoring,8348,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability,"3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; filterdb clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_filter1 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_filter2 --filter-file clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 154 0s 13ms; Time for merging to pref_filter2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 79ms; rescorediagonal clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_filter2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 22ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms ] 49.02% 76 eta 0s; Time for processing: 0h 0m 0s 76ms; align clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:23968,wrap,wrapped-scoring,23968,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability,"30198/input; _step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/pref_filter2 tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore2; --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 2 --min-seq-id 0.9 ; --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [================================================================] =74.93M 28m 19s 496ms; Time for merging to pref_rescore2: 0h 0m 51s 111ms; Time for processing: 0h 29m 44s 106ms; align tmp//16518381706844811497/linclust/1189823685496030198/input_step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/input_step_redu; ndancy tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore2 tmp//16518381706844811497/linclust/1189823685496030198/aln --sub-mat 'aa:blos; um62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mo; de 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --; add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-sc; ore-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0; -v 3 . Compute score, coverage and sequence identity; Query database size: 74926526 type: Aminoacid; Target database size: 74926526 type: Aminoacid; Calculation of alignments; [=================================================================] 74.93M 3m 46s 500ms; Time for merging to aln: 0h 0m 54s 46ms; 92521862 alignments calculated; 75488967 sequence pairs passed the thresholds (0.815904 of overall calculated); 1.007507 hits per query seq",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:9361,wrap,wrapped-scoring,9361,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['wrap'],['wrapped-scoring']
Integrability,"31834765/linclust/262265298633898384/pref_filter2 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 31.32K 0s 42ms; Time for merging to pref_rescore2: 0h 0m 0s 90ms; Time for processing: 0h 0m 0s 772ms; align ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore2 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 31321 type: Aminoacid; Target database size: 31321 type: Aminoacid; Calculation of alignments; [=================================================================] 31.32K 3s 713ms; Time for merging to aln: 0h 0m 0s 107ms; 53166 alignments calculated; 45707 sequence pairs passed the thresholds (0.859704 of overall calculated); 1.459308 hits per query sequence; Time for process",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:16001,wrap,wrapped-scoring,16001,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped-scoring']
Integrability,"40f11c32; ScoreMatrix: VTML80.out; Query database size: 1 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 104664 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 93ms; align tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 tmp_easy_search/6745795380167965363/result --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 104664 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 0ms; Time for merging to result: 0h 0m 0s 0ms; 300 alignments calculated; 300 sequence pairs passed the thresholds (",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:6701,wrap,wrapped-scoring,6701,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['wrap'],['wrapped-scoring']
Integrability,"4163985984779/order_redundancy tmp/8115150149931881526/clu_tmp/13790714163985984779/pref tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 23ms; filterdb tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter1 tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter2 --filter-file tmp/8115150149931881526/clu_tmp/13790714163985984779/order_redundancy --threads 64 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 31.44K 0s 20ms; Time for merging to pref_filter2: 0h 0m 0s 88ms; Time for processing: 0h 0m 0s 360ms; rescorediagonal tmp/8115150149931881526/clu_tmp/13790714163985984779/input_step_redundancy tmp/8115150149931881526/clu_tmp/13790714163985984779/input_step_redundancy tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter2 tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [=========Error: Ungapped alignment step died; Error: Search died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): a14688744081c15439fa3092eec9dfd8be40440b; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Source install from github ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GNU Make 4.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): SSE4; * Operating system and version: gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:6967,wrap,wrapped-scoring,6967,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['wrap'],['wrapped-scoring']
Integrability,"47; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redundancy tmp//538598962955004214/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adju",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:2205,wrap,wrapped-scoring,2205,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['wrap'],['wrapped-scoring']
Integrability,"488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 975ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 35ms. 125.182478 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 657ms; align tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776346521331899/pref_step2 tmp//7897776346521331899/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 124 type: Aminoacid; Target database size: 124 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 37ms; Time for merging to aln_step2: 0h 0m 0s 8ms; 124 alignments calculated; 124 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 80ms; clust tmp//7897776346521331899/input_step2 tmp//7897776346521331899/aln_step2 tmp//7897776346521331899/c",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:21518,wrap,wrapped-scoring,21518,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['wrap'],['wrapped-scoring']
Integrability,"5256/linclust/6279588666755106708/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 3ms; Time for processing: 0h 1m 40s 43ms; filterdb tmp97/17949317426677965256/linclust/6279588666755106708/pref_filter1 tmp97/17949317426677965256/linclust/6279588666755106708/pref_filter2 --filter-file tmp97/17949317426677965256/linclust/6279588666755106708/order_redundancy --threads 20 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 25.63K 0s 61ms; Time for merging to pref_filter2: 0h 0m 0s 138ms; Time for processing: 0h 1m 40s 346ms; align tmp97/17949317426677965256/linclust/6279588666755106708/input_step_redundancy tmp97/17949317426677965256/linclust/6279588666755106708/input_step_redundancy tmp97/17949317426677965256/linclust/6279588666755106708/pref_filter2 tmp97/17949317426677965256/linclust/6279588666755106708/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 20 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 25629 type: Nucleotide; Target database size: 25629 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 25.63K 1s 731ms; Time for merging to aln: 0h 0m 0s 152ms; 209782 alignments calculated; 32736 sequence pairs passed the thresholds (0.156048 of overall calculated); 1.277303 hits per query sequence; Tim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:8715,wrap,wrapped-scoring,8715,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['wrap'],['wrapped-scoring']
Integrability,"537 MB; Avg k-mer size: 0.133630; Top 10 k-mers; GQQVAR 190; QLGQRV 110; IHDKNI 105; ALGSGK 105; LLPGKT 102; SGGTLR 84; SGLGRV 75; VGSSST 61; VMHAGS 59; ATADTT 59; Time for index table init: 0h 0m 5s 872ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 500; Target db start 1 to 20000; [=================================================================] 100.00% 500 2s 36ms. 296.967038 k-mers per position; 19293 DB matches per sequence; 0 overflows; 137 sequences passed prefiltering per query sequence; 113 median result list length; 1 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 162ms; Time for processing: 0h 0m 11s 426ms; align tmp/18110643841744502873/query tmp/18110643841744502873/target tmp/18110643841744502873/search_tmp/5440497380282616509/pref_0 tmp/18110643841744502873/result --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-cor r-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realig n-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 500 type: Aminoacid; Target database size: 20000 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 500 23s 390ms; Time for merging to result: 0h 0m 0s 44ms; 68875 alignments calculated; 12897 sequence pairs passed the thresholds (0.187252 of overall calculated); 25.794001 hits per query sequence; Time for pro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:6455,wrap,wrapped-scoring,6455,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['wrap'],['wrapped-scoring']
Integrability,"5406232727/pref tmp/576731152808920235/linclust/1790908825406232727/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 5ms; Time for processing: 0h 0m 3s 585ms; filterdb tmp/576731152808920235/linclust/1790908825406232727/pref_filter1 tmp/576731152808920235/linclust/1790908825406232727/pref_filter2 --filter-file tmp/576731152808920235/linclust/1790908825406232727/order_redundancy --threads 128 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 8.79M 22s 293ms; Time for merging to pref_filter2: 0h 0m 4s 651ms; Time for processing: 0h 0m 33s 252ms; align tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/pref_filter2 tmp/576731152808920235/linclust/1790908825406232727/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 128 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 8785102 type: Nucleotide; Target database size: 8785102 type: Nucleotide; Calculation of alignments; [=================================================================] 8.79M 11m 6s 373ms; Time for merging to aln: 0h 0m 5s 49ms; 1248621641 alignments calculated; 12850181 sequence pairs passed the thresholds (0.010291 of overall calculated); 1.462724 hits per query sequence; Time for processing: 0h 11m 16s 565ms; clust tmp/576731152808920235/linclust/1790908825406232727/input_step_r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:8213,wrap,wrapped-scoring,8213,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['wrap'],['wrapped-scoring']
Integrability,"62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 25.00K 0s 11ms ; Time for merging to pref_rescore1: 0h 0m 0s 8ms==================>] 99.34% 24.84K eta 0s ; Time for processing: 0h 0m 0s 48ms; clust experiments/small.mm.db experiments/tmp//6404161245249296443/pref_rescore1 experiments/tmp//6404161245249296443/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 25.00K 0s 9ms ; Sort entries; Find missing connections; Found 597 new connections.; Reconstruct initial order; [=================================================================] 100.00% 25.00K 0s 17ms ; Add missing connections; [=========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:5819,wrap,wrapped-scoring,5819,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['wrap'],['wrapped-scoring']
Integrability,"647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:13,nucl:5; k-mers per sequence 	21; Spaced k-mers 	1; Spaced k-mer pattern; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	fal",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:3088,wrap,wrapped,3088,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,1,['wrap'],['wrapped']
Integrability,"6521331899/linclust/17269245559208916342/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; filterdb tmp//7897776346521331899/linclust/17269245559208916342/pref_filter1 tmp//7897776346521331899/linclust/17269245559208916342/pref_filter2 --filter-file tmp//7897776346521331899/linclust/17269245559208916342/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 127 0s 8ms; Time for merging to pref_filter2: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 44ms; rescorediagonal tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/pref_filter2 tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 127 0s 5ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms=====> ] 78.57% 100 eta 0s; Time for processing: 0h 0m 0s 27ms; align tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore2 tmp//7897776346521331899/linclust/17269245559208916342/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --com",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:7577,wrap,wrapped-scoring,7577,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['wrap'],['wrapped-scoring']
Integrability,"68; ACNSPVY	29959; Write ENTRIES (40009); Write ENTRIESOFFSETS (40010); Write SEQINDEXDATASIZE (40015); Write SEQINDEXSEQOFFSET (40016); Write SEQINDEXDATA (40014); Write ENTRIESNUM (40012); Write SEQCOUNT (40013); Time for merging to NR.idx: 0h 0m 0s 603ms; Time for processing: 2h 25m 32s 642ms; ```; Unfortunately, I don't have the output of `createtaxdb` as managed to run it in interactive mode (it took less than 10 minutes). This is the output from the `easy-taxonomy` command:; ```. easy-taxonomy contigs.fasta refDB/NR alnRes tmp --split-memory-limit 100G --threads 16 . MMseqs Version: 	13.45111; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Majority threshold 	0.5; Vote mo; ```de 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	16; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	100G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove h",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:91859,wrap,wrapped,91859,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,1,['wrap'],['wrapped']
Integrability,"72030653963/linclust/5052420726377277994/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; filterdb tmp//10798751672030653963/linclust/5052420726377277994/pref_filter1 tmp//10798751672030653963/linclust/5052420726377277994/pref_filter2 --filter-file tmp//10798751672030653963/linclust/5052420726377277994/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 276 0s 5ms; Time for merging to pref_filter2: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 20ms; rescorediagonal tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/pref_filter2 tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 8ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms ] 16.00% 45 eta 0s; Time for processing: 0h 0m 0s 37ms; align tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore2 tmp//10798751672030653963/linclust/5052420726377277994/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:7459,wrap,wrapped-scoring,7459,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['wrap'],['wrapped-scoring']
Integrability,"73363201721293217/pref_filter1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_filter2 --filter-file /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/order_redundancy --threads 8 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 11.80K 0s 11ms ; Time for merging to pref_filter2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 19ms; rescorediagonal /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_filter2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 8 --compressed 0 -v 3 . Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 11.80K 0s 9ms ; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 23ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:10302,wrap,wrapped-scoring,10302,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['wrap'],['wrapped-scoring']
Integrability,"75233; [=================================================================] 100.00% 75.23K 8m 43s 269ms . 3286.821735 k-mers per position; 713534 DB matches per sequence; 1 overflows; 26270 sequences passed prefiltering per query sequence; 26950 median result list length; 0 sequences with 0 size result lists; Time for merging to pref: 0h 0m 0s 15ms; Time for processing: 0h 8m 44s 825ms; result2stats tmp/5233442526903138997/profileDB Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/pref tmp/5233442526903138997/pref_count.tsv --stat linecount --tsv --threads 16 --compressed 0 -v 3 . [=================================================================] 100.00% 75.23K 1s 543ms ; Time for merging to pref_count.tsv: 0h 0m 0s 20ms; Time for processing: 0h 0m 1s 810ms; align tmp/5233442526903138997/profileDB Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/pref tmp/5233442526903138997/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 1 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score and coverage; Query database size: 75233 type: Aminoacid; Target database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 41m 40s 149ms ; Time for merging to aln: 0h 0m 0s 11ms; 1976417423 alignments calculated; 672599536 sequence pairs passed the thresholds (0.340313 of overall calculated); 8940.219727 hits per query sequence; Time for pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:5842,wrap,wrapped-scoring,5842,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['wrap'],['wrapped-scoring']
Integrability,"79/cluster/3119053913462861916/linclust/8450400992607156393/order_redundancy. Filtering using file(s); [=================================================================] 6 0s 29ms; Time for merging to pref_filter2: 0h 0m 0s 53ms; Time for processing: 0h 0m 0s 270ms; rescorediagonal /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_filter2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3. [=====================] ===================6= ========0s 1ms==; ==============Time for merging to pref_rescore2: 0h 0m 0s 8ms; Time for processing: 0h 0m 0s 27ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/aln",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:13651,wrap,wrapped-scoring,13651,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['wrap'],['wrapped-scoring']
Integrability,"8598962955004214/linclust/16628284907041385511/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; filterdb tmp//538598962955004214/linclust/16628284907041385511/pref_filter1 tmp//538598962955004214/linclust/16628284907041385511/pref_filter2 --filter-file tmp//538598962955004214/linclust/16628284907041385511/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 276 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 46ms; rescorediagonal tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/pref_filter2 tmp//538598962955004214/linclust/16628284907041385511/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 11ms ] 54.55% 151 eta 0s; Time for processing: 0h 0m 0s 54ms; align tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/pref_rescore2 tmp//538598962955004214/linclust/16628284907041385511/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:7331,wrap,wrapped-scoring,7331,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['wrap'],['wrapped-scoring']
Integrability,"9235; CGAACGTGGGAACGG	8944; GGGGAAAGGCTGGGG	7283; TCGATTACGGTAACG	6945; GTGCGCAGCGTATCG	6389; CCCGGCTCACGAATG	5538; ACTGCGTAAGGGTGG	5044; GACCGAGGGCACGGG	4773; Time for index table init: 0h 0m 8s 613ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 39650; Target db start 1 to 19825; [=================================================================] 100.00% 39.65K 3s 800ms. 0.928116 k-mers per position; 129909 DB matches per sequence; 0 overflows; 85 sequences passed prefiltering per query sequence; 1 median result list length; 19825 sequences with 0 size result lists; Time for merging to pref: 0h 0m 0s 137ms; Time for processing: 0h 3m 32s 791ms; rescorediagonal tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/pref tmp97/17949317426677965256/aln_ungapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 39.65K 0s 376ms; Time for merging to aln_ungapped: 0h 0m 0s 129ms; Time for processing: 0h 6m 40s 663ms; subtractdbs tmp97/17949317426677965256/pref tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/pref_subtract --threads 20 --compressed 0 -v 3. subtractdbs tmp97/17949317426677965256/pref tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/pref_subtract --threads 20 --compressed 0 -v 3. Remove tmp97/17949317426677965256/aln_ungapped ids from tmp97/17949317426677965256/pref; [=================================================================] 100.00% 39.65K 0s 144ms; Time for merging to pref_subtract: 0h 0m 0s 168ms; Time for processing: 0h 0m 0s 503ms; align tmp97/179493174266779652",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:14419,wrap,wrapped-scoring,14419,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['wrap'],['wrapped-scoring']
Integrability,"935; Time for index table init: 0h 1m 19s 523ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 882920; Target db start 1 to 311921; [=================================================================] 882.92K 1m 16s 342ms. 0.958336 k-mers per position; 27663 DB matches per sequence; 7 overflows; 0 queries produce too much hits (truncated result); 100 sequences passed prefiltering per query sequence; 63 median result list length; 205 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 481ms; Time for processing: 0h 2m 41s 423ms; align tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 tmp/2226585588535541735/search_tmp/11167723337111805049/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 882920 type: Nucleotide; Target database size: 311921 type: Nucleotide; Calculation of alignments; [=================================================================] 882.92K 5m 58s 443ms; Time for merging to aln: 0h 0m 0s 462ms. 88720927 alignments calculated.; 46477238 sequence pairs passed the thresholds (0.523859 of overall calculated).; 52.640373 hits per query sequence.; Time for processing: 0h 6m 3s 620ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 272ms; rmdb tmp/2226585588",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339:8622,wrap,wrapped-scoring,8622,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339,1,['wrap'],['wrapped-scoring']
Integrability,"9731834765/seq_wrong_assigned_pref_swaped --threads 40 --compressed 0 -v 3 . [=================================================================] 26.23K 0s 396ms; Computing offsets.; [=================================================================] 26.23K 0s 384ms. Reading results.; [=================================================================] 26.23K 0s 441ms. Output database: ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00K 0s 144ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 19ms; Time for processing: 0h 0m 2s 119ms; align ./mmseqs_output/tmp/5351426679731834765/seq_seeds.merged ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped_aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 34414 type: Aminoacid; Target database size: 26229 type: Aminoacid; Calculation of alignments; [=================================================================] 34.29K 6m 32s 543ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 85ms; 4335308 alignments calculated; 2294027 sequence pairs passed the thresholds (0.529150 of overall calculated); 66.900757 hi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:40519,wrap,wrapped-scoring,40519,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped-scoring']
Integrability,"973434362/order_redundancy db/dbclust tmp/16437734971973434362/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 16ms; Time for processing: 0h 0m 0s 46ms; createsubdb tmp/16437734971973434362/order_redundancy tmp/16437734971973434362/pref tmp/16437734971973434362/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 12ms; Time for processing: 0h 0m 0s 36ms; filterdb tmp/16437734971973434362/pref_filter1 tmp/16437734971973434362/pref_filter2 --filter-file tmp/16437734971973434362/order_redundancy. Filtering using file(s); [=================================================================] 140.16K 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 35ms; Time for processing: 0h 0m 0s 92ms; align tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/pref_filter2 tmp/16437734971973434362/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 30000000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 36 --compressed 0 -v 3. Compute score and coverage; Query database size: 140160 type: Nucleotide; Target database size: 140160 type: Nucleotide; Calculation of alignments; [============tmp/16437734971973434362/linclust.sh: line 75: 22654 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; ```; ## Context; I have a Fasta with about 140000 sequences which range from a few thousands nucleotides to about 20 millions. The memory consumption is fine throughout the mmseqs steps. But at some point during the align phase, a segmentation fault is thrown. It doesn't seem ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:4035,wrap,wrapped-scoring,4035,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['wrap'],['wrapped-scoring']
Integrability,"97776346521331899/linclust/17269245559208916342/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 127 0s 5ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms=====> ] 78.57% 100 eta 0s; Time for processing: 0h 0m 0s 27ms; align tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore2 tmp//7897776346521331899/linclust/17269245559208916342/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 127 type: Aminoacid; Target database size: 127 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 127 0s 17ms; Time for merging to aln: 0h 0m 0s 1ms; 130 alignments calculated; 130 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.023622 hits per query sequence; Time for processing: 0h 0m 0s 57ms; clust tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/li",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:8454,wrap,wrapped-scoring,8454,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['wrap'],['wrapped-scoring']
Integrability,"98404/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; filterdb tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_filter1 tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_filter2 --filter-file tmpfiles//13298481167543164943/linclust/10229649346622198404/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 276 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 31ms; rescorediagonal tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_filter2 tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 52ms; align tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore2 tmpfiles//13298481167543164943/linclust/10229649346622198404/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-co",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:7371,wrap,wrapped-scoring,7371,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['wrap'],['wrapped-scoring']
Integrability,"9ms; swapdb tmpfiles//13298481167543164943/seq_wrong_assigned_pref tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped --threads 16 --compressed 0 -v 3. [=================================================================] 10 0s 5ms; Computing offsets.; [=================================================================] 10 0s 2ms. Reading results.; [=================================================================] 10 0s 5ms. Output database: tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped; [=================================================================] 297 0s 5ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 73ms; align tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/seq_wrong_assigned tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 210 type: Aminoacid; Target database size: 10 type: Aminoacid; Calculation of alignments; [=================================================================] 22 0s 31ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 0ms. 29 alignments calculated.; 21 sequence pairs passed the thresholds (0.724138 of overall calculated).; 0.954545 hits per query sequence.; Time for processing: 0h 0m 0s 80ms; filterdb tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln_oco",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:30145,wrap,wrapped-scoring,30145,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['wrap'],['wrapped-scoring']
Integrability,": 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 0s 848ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=================================================================] 100.00% 276 0s 19ms. 1.394095 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 477ms; align tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/pref_step0 tmp//10798751672030653963/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 44ms; Time for merging to aln_step0: 0h 0m 0s 7ms; 415 alignments calculated; 408 sequence pairs passed the thresholds (0.983133 of overall calculated); 1.478261 hits per query sequence; Time for processing: 0h 0m 0s 89ms; clust tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/aln_step0 tmp//107987516",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:13159,wrap,wrapped-scoring,13159,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['wrap'],['wrapped-scoring']
Integrability,": 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 119ms. similarity type 2:. Create directory clu/sim2_tmp; cluster in/DB_in clu/sim2_clu clu/sim2_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 2. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_red",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:17490,wrap,wrapped,17490,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped']
Integrability,"; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterlinclust ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/clu_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,n",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:9639,wrap,wrapped-scoring,9639,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped-scoring']
Integrability,"; Top 10 k-mers; IHDKNI	9354; DVSGLL	6729; LGGFVY	6623; SSSSSS	5575; IGGFVY	4538; LSCHLV	4001; EKDYGV	3708; LIMAGS	3629; FGVKLP	3541; KSVSVV	3538; Time for index table init: 0h 0m 12s 974ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1270615; Target db start 1 to 1270615; [=================================================================] 1.27M 2h 31m 44s 357ms. 1266.108246 k-mers per position; 3373560 DB matches per sequence; 626307 overflows; 21 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 601 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 657ms; Time for processing: 2h 32m 1s 811ms; align euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 euk72-90.profile_search2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 48 --compressed 0 -v 3 . Compute score and coverage; Query database size: 1270615 type: Profile; Target database size: 1270615 type: Aminoacid; Calculation of alignments; [=================================================================] 1.27M 33m 52s 295ms; Time for merging to euk72-90.profile_search2: 0h 0m 0s 650ms; 109004199 alignments calculated; 56769447 sequence pairs passed the thresholds (0.520801 of overall calculated); 44.678715 hits per query sequence; Ti",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:10322,wrap,wrapped-scoring,10322,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['wrap'],['wrapped-scoring']
Integrability,"; [=================================================================] 6 0s 0ms. 1.337707 k-mers per position; 39 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 473ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 0ms; Time for merging to aln_step0: 0h 0m 0s 3ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 13ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cl",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:20880,wrap,wrapped-scoring,20880,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['wrap'],['wrapped-scoring']
Integrability,"; result2stats /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 15.11M 1s 487ms; Time for merging to pref_count.tsv: 0h 0m 4s 788ms; Time for processing: 0h 0m 11s 535ms; align /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 15106287 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.11M 1h 57m 11s 538ms; Time for merging to aln: 0h 0m 19s 511ms. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:11282,wrap,wrapped-scoring,11282,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['wrap'],['wrapped-scoring']
Integrability,"===============================================================] 2.20B 32m 57s 186ms; Sort kmer 0h 0m 27s 256ms; Sort by rep. sequence 0h 0m 7s 71ms; Generate k-mers list for 16 split; [=================================================================] 2.20B 35m 20s 821ms; Sort kmer 0h 0m 27s 251ms; Sort by rep. sequence 0h 0m 4s 12ms; Generate k-mers list for 17 split; [=================================================================] 2.20B 39m 55s 45ms; Sort kmer 0h 0m 4s 162ms; Sort by rep. sequence 0h 0m 0s 40ms; Merge splits ... Time for fill: 0h 58m 23s 248ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 10h 8m 58s 194ms; rescorediagonal /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.75 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . Can not touch 293012172012 into main memory; [=================================================================] 2.20B 14h 48m 14s 895ms; Time for merging to pref_rescore1: 0h 21m 28s 875ms; Time for processing: 15h 32m 14s 793ms; Error: Pre-clustering step died; ```; And when I rerun my job I have : ; ```; linclust /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB_clu /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp --min-seq-id 0.75 --threads 20 -v 3 --force-reuse 1 --split-memory-limit 62G . MMseqs Version: 	f5f780acd64482cd59b46eae0a107f763cd17b4d; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	20; Compressed 	0; Verbosity 	3; Weight file name 	; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:7193,wrap,wrapped-scoring,7193,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['wrap'],['wrapped-scoring']
Integrability,"==========================================] 100.00% 39.65K 0s 376ms; Time for merging to aln_ungapped: 0h 0m 0s 129ms; Time for processing: 0h 6m 40s 663ms; subtractdbs tmp97/17949317426677965256/pref tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/pref_subtract --threads 20 --compressed 0 -v 3. subtractdbs tmp97/17949317426677965256/pref tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/pref_subtract --threads 20 --compressed 0 -v 3. Remove tmp97/17949317426677965256/aln_ungapped ids from tmp97/17949317426677965256/pref; [=================================================================] 100.00% 39.65K 0s 144ms; Time for merging to pref_subtract: 0h 0m 0s 168ms; Time for processing: 0h 0m 0s 503ms; align tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/pref_subtract tmp97/17949317426677965256/aln_gapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 20 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 39650 type: Nucleotide; Target database size: 19825 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 39.65K 11s 920ms; Time for merging to aln_gapped: 0h 1m 40s 131ms; 2105218 alignments calculated; 1620 sequence pairs passed the thresholds (0.000770 of overall calculated); 0.040858 hits per query sequ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:15669,wrap,wrapped-scoring,15669,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['wrap'],['wrapped-scoring']
Integrability,"========] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 219ms; Time for processing: 0h 0m 6s 996ms; align /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 /scratch/orakov/tmp/queryT.mmsq.outDB --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 100000 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score and coverage; Query database size: 313 type: Aminoacid; Target database size: 313 type: Aminoacid; Calculation of alignments; [=================================================================] 313 0s 75ms; Time for merging to queryT.mmsq.outDB: 0h 0m 0s 320ms. 408 alignments calculated.; 408 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.303514 hits per query sequence.; Time for processing: 0h 0m 0s 966ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:2374,wrap,wrapped-scoring,2374,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497,1,['wrap'],['wrapped-scoring']
Integrability,"> Could you post the full log of the two runs? That would make it easier to say what might be going wrong. Thank you!; **runs of EPYC 7742**; (base) ct@test:~$ ~/mmseqs/bin/mmseqs taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp ; taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	256; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	fals",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:878,wrap,wrapped,878,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,1,['wrap'],['wrapped']
Integrability,"> First question: do you have specific recommendations when dealing with a transcriptome as the query? For example taking into account the rather short contigs and splicing. I am not super familiar with transcriptomics datasets. Depending on the length of your queries you might want to turn of the early ORF filter (`--orf-filter 0`) as it can sometimes reject too many ORFs if the sequences are short. We also have a different project that deals with contamination: https://github.com/martin-steinegger/conterminator; Though that tool is currently only for all-vs-all genome contamination annotations. But Martin was planning to build a scan mode for one-vs-RefSeq/GenBank. > Second question: There are no genome assemblies form closely related species available. What are your thoughts regarding nucl-nucl search VS translated_nucl-prot search in this case?. Generally our nucl-nucl searching capabilities are less developed than than anything-prot. In the taxonomy assignment, nucl-nucl still uses top-hit taxon assignment instead of LCA. We haven't gotten around to thoroughly benchmark the nucl-nucl homology search and publish it (it does work quite well in the preliminary tests). And nucl-nucl homology search is limited to around ~80% sequence identity (which is usually more than enough for taxonomy though). Also building a taxonomy database for the NT is painful and the database might get extremely large (haven't tried it in a while though). I'd be quite interested in what you find out in your experiments with it though. We do plan to develop this part further. > Third questions: In case I do a translated_nucl-prot search how do I deal with the fact that my queries are both from Euk. and Prok. origin? I mean regarding translation table. Would you worry about this?. By default, we extract fragments from any codon to a stop codon and repeat the procedure. So the translation table matters a bit less (only affected by alternative stop codons). And since we only do local alignment",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824083071:229,Depend,Depending,229,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824083071,1,['Depend'],['Depending']
Integrability,"> `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`; > ; > MMseqs Version: 12.113e3; > Compressed 0; > Extract mode 2; > Preload mode 0; > Threads 40; > Verbosity 3; > ; > Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. I tried to reproduce the above error on a different target database to see if its something to do with the sequences and got the same error with the following additional error messages. Just thought reporting it might help to figure out what's wrong. `free(): corrupted unsorted chunks`; `Aborted (core dumped)`. @milot-mirdita or @martin-steinegger do you have any idea what's going on? Any help is appreciated. . Thanks,; Manu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568:440,message,messages,440,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568,1,['message'],['messages']
Integrability,"?Dear Milot,. I attached the log file here with this email, please check if you can access it. Many Thanks,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 28 September 2020 14:48; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Ah sorry I had forgotten about your previous message, too many different projects are going on!. Could you check the log-file upload again, I don't see a log. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699957190>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63ERYGGXCIXN2ZXRHM3LSIBZXBANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699966117:853,message,message,853,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699966117,1,['message'],['message']
Integrability,@fstrozzi `createdb` should now not depend on the main memory anymore.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/124#issuecomment-450546591:36,depend,depend,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/124#issuecomment-450546591,1,['depend'],['depend']
Integrability,"@martin-steinegger @milot-mirdita ; I have questions regarding the integration of this PR with the master branch. 1\) Our new algorithm uses[ 6 additional bytes](https://github.com/soedinglab/MMseqs2/pull/873/files#diff-01a2b94815f4cfc3201aa5f9a0108d6c01627ea12246d61963965559afb9a220) to store the adjacent information per each sequence, so the memory needed per sequence increases from 16 to 22 bytes. So if we were to pack our new linclust together with the old one, and use a parameter to choose between the two at runtime, quite a lot of memory would be wasted for users of old-linclust. Should I consider a prettier way of integrating the two, like dividing the structs and functions used for each version under the hood?; Or can we just assume that our users would be happier with the new version regardless of the increased memory usage?. 2\) If we were to replace linclust with our new version, should we provide the option to use the original version, or should we just totally replace it, or stage it for deprecation? I'm not sure how much this change would affect our users, or how many would want to use the old version instead of the new.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2311834168:67,integrat,integration,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2311834168,2,['integrat'],"['integrating', 'integration']"
Integrability,"@milot-mirdita ; Some template black magic seems pretty convenient (albeit a little dangerous). I'll try looking into it and check if it breaks anything. > But martin is also right, a 30% increase in RAM is not that much. Then if integrating the new linclust into our old version with dynamic memory allocation gets too ugly, I'll consider giving up on the 6 bytes of memory, or even removing the old version entirely. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2313991678:230,integrat,integrating,230,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2313991678,1,['integrat'],['integrating']
Integrability,"@mshrngci118 this really depends on your use case. You could use the sequence identity or score to define the strength of the connection between two proteins. The output fields are `query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits`. Score = `bits`, `fident`= sequence identity.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/377#issuecomment-1087333103:25,depend,depends,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/377#issuecomment-1087333103,1,['depend'],['depends']
Integrability,"AAAA	2; Time for index table init: 0h 0m 7s 405ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 4; Target db start 1 to 2; [================================================] 4 ================0s 6ms; =; 0.991092 k-mers per position; 4326 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 2 median result list length; 2 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 8s 1ms; align tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 tmp/9586069750715556969/search_tmp/1133007989511978496/aln --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 4 type: Nucleotide; Target database size: 2 type: Nucleotide; Calculation of alignments; [=================================================================] 4 0s 0ms; Time for merging to aln: 0h 0m 0s 0ms; 4 alignments calculated; 4 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 17ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:8984,wrap,wrapped-scoring,8984,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['wrap'],['wrapped-scoring']
Integrability,"ACCGGTATCGCGAA	2; Time for index table init: 0h 0m 8s 169ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 5; [=================================================================] 2 0s 0ms. 0.803571 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 8s 631ms; align tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 1 --compressed 0 -v 3 . Compute score only; Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; Calculation of alignments; [=================================================================] 2 0s 0ms; Time for merging to aln_0: 0h 0m 0s 0ms; 0 alignments calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:12572,wrap,wrapped-scoring,12572,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['wrap'],['wrapped-scoring']
Integrability,"Ah interesting, thank you for the explanation. Alternatively, having an informative error message that explains the failure would be helpful!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682#issuecomment-1473740986:90,message,message,90,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682#issuecomment-1473740986,1,['message'],['message']
Integrability,"Ah sorry I had forgotten about your previous message, too many different projects are going on!. Could you check the log-file upload again, I don't see a log.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699957190:45,message,message,45,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699957190,1,['message'],['message']
Integrability,"Ah sorry, that makes a lot of sense that this doesn't work. Iterative-profile searches won't work currently together with the taxonomy workflow, since the alignment positions computed in the taxonomy workflow don't refer to the same things that the iterative-profile-search workflow expects. I am not this type of search makes sense. Could you explain your use case for combining these two?. I am not sure if it's fixable with the current protocol, we might just disallow taxonomy in combination with iterative-profile searches instead.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814975954:439,protocol,protocol,439,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814975954,1,['protocol'],['protocol']
Integrability,"And the full output of a clustering run:. Tmp DB_clustered/tmp folder does not exist or is not a directory.; Create dir DB_clustered/tmp; cluster DB_in/shuffle_in DB_clustered/shuffle_cl DB_clustered/tmp --min-seq-id 0.9. MMseqs Version: 96d452cb432fc4674991a48952deaf24d1787e77; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:998,wrap,wrapped,998,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['wrap'],['wrapped']
Integrability,"As I mentioned briefly in Issue #94 when I ran `convertmsa`, to generate an msa database from an input stockholm formatted alignment, the output database had a leading space after the `>` character on the first line, which then caused `msa2profile` to output various ""Invalid"" messages. Removing the leading space as applied in the pull request seems to fix this issue. I don't think my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/96:277,message,messages,277,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96,1,['message'],['messages']
Integrability,"As mentioned [here](https://github.com/soedinglab/MMseqs2/issues/157) I tried to index a 108GB fasta file with 188M sequences (NCBI's nr) in a server with 188GB memory. > mmseqs createdb nr.fa nr.DB; > mmseqs createindex nr.DB tmp --split-memory-limit 126000000 --threads 15; MMseqs2 Version: 7-4e23d. But even setting the `--split-memory-size ` command it's still crashing with me. ; It seem that I need something ~631GB. The `createdb` was finished well without any weirdo message. ; But below follow the log of `createindex`. ```; Program call:; createindex nr.DB tmp --split-memory-limit 126000000 --threads 15 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; indexdb nr.DB nr.DB --sub-mat blosum62.out -k 0 --comp-bias-corr 1 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 2 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --include-headers 1 --check-compatible 0 --split 0 --split-memory-limit 126000000 --threads 15 -v 3 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3. Substitution matrices...; Use kmer size 7 an",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/161:475,message,message,475,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161,1,['message'],['message']
Integrability,"B; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 970ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 222; Target db start 1 to 222; [=================================================================] 100.00% 222 0s 52ms. 196.811469 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 11ms; Time for processing: 0h 0m 1s 704ms; align tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//10798751672030653963/pref_step2 tmp//10798751672030653963/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 222 type: Aminoacid; Target database size: 222 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 222 0s 80ms; Time for merging to aln_step2: 0h 0m 0s 11ms; 388 alignments calculated; 266 sequence pairs passed the thresholds (0.685567 of overall calculated); 1.198198 hits per query sequence; Time for processing: 0h 0m 0s 106ms; clust tmp//10798751672030653963/input_step2 tmp//10798751672030653963/aln_step2 tmp//10798751672030653",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:21445,wrap,wrapped-scoring,21445,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['wrap'],['wrapped-scoring']
Integrability,"BLAST Database error: No alias or index file found for protein database ; I have the error below:. Bio.Application.ApplicationError: Non-zero return code 2 from ‘psiblast -out 7NDB_B_WT.out -query 7NDB_B_WT.fasta -db /mnt/research/common-data/Bio/blastdb/nr -evalue 5000 -num_iterations 3 -out_ascii_pssm 7NDB_B_WT.pssm’, message ‘BLAST Database error: No alias or index file found for protein database [/mnt/research/common-data/Bio/blastdb/nr] in search path [/media/leon//Machine_learning_model_binding_free_energy_BFE_change_predictions/TopNetmAb/7NDB/features/7NDB_B_A_344_S::]’. I downloaded the “nr” file from the blast database and created a database link in the directory [/mnt/research/common-data/Bio/blastdb/nr]. But the error persists. Please, can anyone help me?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/518:322,message,message,322,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/518,1,['message'],['message']
Integrability,Can you post the output of `ldd /usr/local/bin/mmseqs` and `make clean build` in wip/mmseqs2? I wonder if my build is picking up some optional dependency that yours is not. I'm guessing you don't have many packages installed on the VM. Thanks...,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870790679:143,depend,dependency,143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870790679,1,['depend'],['dependency']
Integrability,"Can you use the `MMSEQS_ARCH` cmake flag to fix the mips build? I could add a flag like HAVE_ARM8 for MIPS. However, I am not sure we want to add code that is not regularly tested by continuous integration.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-707829562:194,integrat,integration,194,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-707829562,1,['integrat'],['integration']
Integrability,"Cetrainly, I just had to edit some paths due to some data being private information. ```; easy-taxonomy /sample.fastq.gz /nr /result /tmp -s 0.5. MMseqs Version: 	13.45111; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	26; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:574,wrap,wrapped,574,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591,1,['wrap'],['wrapped']
Integrability,Clustering stuck after merging splits with message about main memory,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:43,message,message,43,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['message'],['message']
Integrability,"Congrats [from the lambda-author] to the preprint of the paper, first of all :+1:. Although the contribution of the SeqAn library to MMSeqs2 is rather small, I would still ask you politely to include notice of its use, according to the license:. ```; // * Redistributions in binary form must reproduce the above copyright; // notice, this list of conditions and the following disclaimer in the; // documentation and/or other materials provided with the distribution.; ```. AFAICT the binaries don't do this and the shipped license file doesn't mention them. This likely affects other code-parts used in MMSeqs, as well, I am not sure. In any case, not a big deal, but would be nice if you could change this.; Also of course we depend on people citing the SeqAn library in their academic work if they use it. If this is still possible it would be great, but there is no (legal) requirement to do so. On an unrelated note: The ""non-commercial"" header in `src/alignment/smith_waterman_sse2.cpp` is incompatible with the GPL-license. I don't know if the header is just outdated, but if not, this might cause you trouble with the original author and/or make it impossible for other people to distribute mmseqs2...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/5:727,depend,depend,727,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/5,1,['depend'],['depend']
Integrability,"Could you please explain how you compare blastp and MMseqs2? Could you please provide the hits that you can not find? . We do not produce exactly the same hits than blast since we do use a different compositional bias correction. . The warning ""Sequence XXX produces too many hits. Results might be truncated"" indicates that their are too many high scoring diagonal (> target database size / 2). So we can not order them perfectly. How often does this message occur?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407013644:452,message,message,452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407013644,1,['message'],['message']
Integrability,Could you please run `cat /proc/cpuinfo` or `lscpu` on the 64GB node? ; If you were using the binary with the wrong instruction set (e.g. AVX2 on a CPU that does not support AVX2) it should give an error message way earlier.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-626718710:204,message,message,204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-626718710,1,['message'],['message']
Integrability,"Currently, I think it should crash no matter what since there is an index present that doesn't fit into RAM. The error message for that is very useless. You have to either recreate the index with a certain memory limit in mind or remove it (actually rename just the `.idx.dbtype` to something else and it won't be able to find and use it anymore, then you can name it back again later if you still need it).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-665032064:119,message,message,119,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-665032064,1,['message'],['message']
Integrability,"Dear MMseqs2 team,. I am trying to run the MPI version of mmseqs cluster and run into many synchronization issues of file and dir creations in a shared file system. From the errors, I was able to figure out some of them till the execution of the linclust.sh script. . My understanding is that out of the five steps in this [script](https://github.com/soedinglab/MMseqs2/blob/ffb05619cadadd8655b8719818ed566caaa6d0a6/data/workflow/linclust.sh#L21-L89), some steps should be run by a single process and some need parallel execution. I am guessing that the first four steps should be run in a single process, right?. Please advise. Best,; Zhao",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/874:91,synchroniz,synchronization,91,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/874,1,['synchroniz'],['synchronization']
Integrability,"Dear developers,. I am trying to perform clustering on the set of closely-related sequences of retrotransposons (n = 736,771). The module ""easy-linclust"" works fine for this dataset. But whenever I used the ""cluster"" module (and also the ""easy-cluster"" module), I got a long list of error messages such as the following. Error: there must be an error: 98829 deleted from 373971 that now is empty, but not assigned to a cluster. I am unsure why these error messages occur and whether they could affect my clustering results or not. Could you please help me to solve this issue? Thank you in advance. MMseqs version: 96d452cb432fc4674991a48952deaf24d1787e77 (self-compiled); Full log: ; [full.log](https://github.com/soedinglab/MMseqs2/files/5384506/full.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/363:289,message,messages,289,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363,2,['message'],['messages']
Integrability,"Depending on, how strict you are with the pairwise sequence identity between cluster members, I have two different answers for you. You can start with the highest sequence identity threshold (e.g. 90%) and then continue clustering that clustering down to the next lowest threshold (e.g. 50%) and then the next one (e.g. 30%). However, while that approach will be fast. When two 50% sequence identity clusters are merged into one 30% cluster. The sequence identity of the new representative with the merged members can drop below 30%. For our Uniclust databases, we solved the issue by clustering straight down to 30%, and then reusing the alignment results to also produce a 50% clustering, but the step from 90% to 30% is quite a bit slower than 90%->50%->30%:; https://github.com/soedinglab/uniclust-pipeline/blob/develop/uniclust_workflow.sh#L143",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/84#issuecomment-384807058:0,Depend,Depending,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/84#issuecomment-384807058,1,['Depend'],['Depending']
Integrability,"Depends on your use-case. What data are you clustering? Linclust is not as sensitive as the full clustering workflow. Linclust is also executed as the first stage of the ""normal"" cluster workflow.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/696#issuecomment-1515775556:0,Depend,Depends,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/696#issuecomment-1515775556,1,['Depend'],['Depends']
Integrability,"E/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	1; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. I don't know if the error is right at the start using _plass_ int this context or with the _map_ command. Could you ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:2894,wrap,wrapped,2894,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,1,['wrap'],['wrapped']
Integrability,"Easy-cluster createdb message ""Cannot extract identifier from entry""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/804:22,message,message,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/804,1,['message'],['message']
Integrability,Error message: Database clusterRes needs header information,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/673:6,message,message,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/673,1,['message'],['message']
Integrability,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460:116,message,message,116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460,2,"['depend', 'message']","['dependencies', 'message']"
Integrability,Files/alp.dir/sls_pvalues.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogproblim.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alignment_evaluer.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_regression.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatutil.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_basic.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_data.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_ioutil.cpp.o; [ 7%] Built target alp; Scanning dependencies of target ksw2; make[2]: Warning: File 'lib/ksw2/CMakeFiles/ksw2.dir/depend.make' has modification time 0.00049 s in the future; [ 7%] Building CXX object lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o; make[2]: warning: Clock skew detected. Your build may be incomplete.; [ 7%] Built target ksw2; Scanning dependencies of target generated; [ 8%] Generating ../generated/easysearch.sh.h; [ 8%] Generating ../generated/easycluster.sh.h; [ 9%] Generating ../generated/blastp.sh.h; [ 9%] Generating ../generated/blastpgp.sh.h; [ 9%] Generating ../generated/map.sh.h; [ 10%] Generating ../generated/linclust.sh.h; [ 10%] Generating ../generated/clustering.sh.h; [ 11%] Generating ../generated/cascaded_clustering.sh.h; [ 11%] Generating ../generated/update_clustering.sh.h; [ 11%] Generating ../generated/searchtargetprofile.sh.h; [ 12%] Generating ../generated/createindex.sh.h; [ 12%] Generating ../generated/translated_search.sh.h; [ 13%] Generating ../generated/taxonomy.sh.h; [ 13%] Generating ../generated/multihitdb.sh.h; [ 14%] Generating ../generated/multihitsearch.sh.h; [ 14%] Generating ../generated/summarizeresultsbyset.sh.h; [ 14%] Generating ../generated/nucleotide.out.h; [ 15%] Generating ../generated/blosum30.out.h; [ 15%] Generating ../generated/blosum35.out.h; [ 16%] Generating ../generated/blosu,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:4602,depend,dependencies,4602,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,1,['depend'],['dependencies']
Integrability,Finish up SIMDe integration,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/321:16,integrat,integration,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/321,1,['integrat'],['integration']
Integrability,"From the packaging POV, it's far better to do cmake discovery for zstd like you do for bz2 and zlib. I am told the Debian build does this already. . xxhash is also a really common dependency on many distros. The other libs do not seem to be common, but if you're adding discovery for two, might as well add them for more. The other cmake issue is BUILD_SHARED_LIBS. Unless set to OFF, the build fails because of relocation problems against the cacode and alp libraries. Forcing the build to be static means the external dependencies have to be built static also. Most distros don't like static-only builds for reasons widely shared.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411:180,depend,dependency,180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411,2,['depend'],"['dependencies', 'dependency']"
Integrability,"GCGGCGCG	151; CGCGGGCGTGGCGCG	149; CGTGCGCGTGGCGCG	147; CGCGCGCCCGGCGCG	133; Time for index table init: 0h 0m 39s 203ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 4000; Target db start 1 to 365688; [=================================================================] 100.00% 4.00K 0s 74ms ; [================================================================>] 99.72% 3.99K eta 0s ; 0.926667 k-mers per position; 434 DB matches per sequence; 0 overflows; 4 sequences passed prefiltering per query sequence; 1 median result list length; 1762 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 5ms; Time for processing: 0h 0m 40s 369ms; align tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 tmp/7935334228278574252/search/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 2 --max-seq-len 10000 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Compute score only; Query database size: 4000 type: Nucleotide; Target database size: 365688 type: Nucleotide; Calculation of alignments; Query sequence 236 has a result with no diagonal information. Please check your database.; Error: Alignment died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used:`df77d9e6cf640fe8990f247441ab44d4f4ad9cdc`; * Whi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:6696,wrap,wrapped-scoring,6696,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,1,['wrap'],['wrapped-scoring']
Integrability,Glad it's working. That was super weird. Regarding your guix definition. You might also want to add dependencies to bzlib and wget. (Theoretically also awk but awk seems to demanded by the POSIX standard to always be present).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/305#issuecomment-623449501:100,depend,dependencies,100,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/305#issuecomment-623449501,1,['depend'],['dependencies']
Integrability,"H (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32. In what little output didn't scroll away, I see a couple of messages like this:. posix_madvise returned an error /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/NOMPI_SLICE_TECH/DSL_17K_SPLIT_MODE_1/tmpFolder/4754201167969432722/pref",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:3450,message,messages,3450,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['message'],['messages']
Integrability,HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFiles/microtar.dir/microtar.c.o; Linking C static library libmicrotar.a; [ 1%] Built target microtar; Scanning dependencies of target cacode; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 3%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; [ 3%] Built target cacode; Scanning dependencies of target alp; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprobproto.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstat.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatmatrix.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.di,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:3420,depend,dependencies,3420,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,1,['depend'],['dependencies']
Integrability,"Hello !. Thank you for your reply. I just ran PHARROKA and got the following message. Hope it will help !. Nico. /Users/Nico/miniforge3/envs/HieVi/bin/pharokka.py:4: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; __import__('pkg_resources').require('Pharokka==1.7.1'); 2024-04-23 09:26:28.672 | INFO | input_commands:instantiate_dirs:183 - Removing output directory Output/ROSA-like as -f or --force was specified.; 2024-04-23 09:26:28.676 | INFO | __main__:main:95 - Starting Pharokka v1.7.1; 2024-04-23 09:26:28.676 | INFO | __main__:main:96 - Command executed: Namespace(infile='Input/ROSA-like/rosa-like.fasta', outdir='Output/ROSA-like', database='Databases', threads='1', force=True, prefix='Default', locustag='ROSA-like', gene_predictor='default', meta=False, split=False, coding_table='11', evalue='1E-05', fast=False, mmseqs2_only=False, meta_hmm=False, dnaapler=False, custom_hmm='', genbank=False, terminase=True, terminase_strand='pos', terminase_start='1', skip_extra_annotations=False, skip_mash=False, minced_args='', mash_distance=0.2, citation=False); 2024-04-23 09:26:28.676 | INFO | __main__:main:97 - Repository homepage is https://github.com/gbouras13/pharokka; 2024-04-23 09:26:28.676 | INFO | __main__:main:98 - Written by George Bouras: ***@***.***; 2024-04-23 09:26:28.676 | INFO | __main__:main:100 - Checking database installation in Databases.; 2024-04-23 09:26:28.677 | INFO | __main__:main:103 - All databases have been successfully checked.; 2024-04-23 09:26:28.677 | INFO | __main__:main:119 - Checking dependencies.; 2024-04-23 09:26:28.777 | INFO | input_commands:check_dependencies:379 - Phanotate version found is v1.6.5; 2024-04-23 09:26:28.778 | INFO | input_commands:check_dependencies:388 - Phanotate version is ok.; Traceback (most recent call last):; File ""/Users/Nico/miniforge3/envs/HieVi/bin/pharokka.py"", line 7, in <module>; exec(compile(f.read(), __file__, 'exec')); File ""/Users",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2071616310:77,message,message,77,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2071616310,1,['message'],['message']
Integrability,"Hello . I am having an issue while trying to create profiles from alignments. I am using NOG trimmed alignments, only a few of them. ; I convert them to stockholm first with esl-reformat from HMMER ; esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; Then :; mmseqs convertmsa COG0016.sto COG0016_db; mmseqs msa2profile COG0016_db COG0016_profile. At the last step, for the profile creation I get an error message : ; Could not open COG0016_profile_seq_h.index.126 for writing!. Here are the logs : [COG0016.log](https://github.com/soedinglab/MMseqs2/files/2465789/COG0016.log). Whichever file I am using I always get this particular index 126. Also I used sudo for permission it does not change anything. Well, there is also a full collections of empty files appearing... just around 1021. ## Steps to Reproduce (for bugs); I am adding all intermediary files, though github doesn't let me upload things with exotic extensions, so I had to rename all of them by appending .txt at the end. wget http://eggnogdb.embl.de/download/eggnog_4.5/data/NOG/NOG.trimmed_algs.tar.gz; tar -xzf NOG.trimmed_algs.tar.gz; mv NOG_trimmed_algs/NOG.COG0016.clustalo_trimmed.fa ../; [NOG.COG0016.clustalo_trimmed.fa.txt](https://github.com/soedinglab/MMseqs2/files/2465875/NOG.COG0016.clustalo_trimmed.fa.txt); esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; [COG0016.sto.txt](https://github.com/soedinglab/MMseqs2/files/2465876/COG0016.sto.txt); mmseqs convertmsa COG0016.sto COG0016_db; [COG0016_db.txt](https://github.com/soedinglab/MMseqs2/files/2465877/COG0016_db.txt); [COG0016_db.index.txt](https://github.com/soedinglab/MMseqs2/files/2465879/COG0016_db.index.txt); mmseqs msa2profile COG0016_db COG0016_profile. It would be cool if you could help me with that. Best,. Seb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/128:425,message,message,425,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/128,1,['message'],['message']
Integrability,"Hello @milot-mirdita and @martin-steinegger . ; Sorry if it took me some time to extra testing. As Milot was suggesting the problem happens when `createindex` and `search` are not set to use the Matrix.; Following I am showing the results alignments of a proteome against itself, using different combinations of of VTML80 and blosum62 for `createindex` and `search`. . | Pair | createindex | search | count | seconds |; | ------ | ------ | ------ | ------ | ------ |; | a-a | blosum62 | blosum62 | 10205 | 17.11 |; | a-a | VTML80 | blosum62 | 13962 | 91.36 |; | a-a | VTML80 | VTML80 | 14268 | 98.56 |; | a-a | blosum62 | VTML80 | 10709 | 16.5 |; | a-a | VTML40 | VTML40 | 14032 | 105.10 |. # Same alignments without indexing. | Pair | createindex | search | count | seconds |; | ------ | ------ | ------ | ------ | ------ |; | a-a | none | VTML80 | 14268 | 69.96 |; | a-a | none | blosum62 | 10205 | 13.66 |. As you can see from the second line, the results are same as in the first line of the fist table (in which only blosum62 was used). . I guess this solves the issue, and I am happy we found the problem :) ; Nevertheless, it would be very useful to have some kind of warning or even better, error message to avoid such things to happen (unless it is not the user's decision, in which case a ""--force-submat"" parameter might be handy). . Also, as I understand, among the `BLOSUM` matrixes only `blosum62` can be set at present, while different VTML matrixes can be set. . Could you please point me to somewhere I can see which MATRIXES can be used? ; Most matrixes files are under the `data` directory, but many did not work in my tests.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-674686756:1205,message,message,1205,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-674686756,1,['message'],['message']
Integrability,"Hello! ; I am trying to understand how exactly are bit scores and E-values calculated. I found the formula in [The Statistics of Sequence Similarity Scores](https://www.ncbi.nlm.nih.gov/BLAST/tutorial/Altschul-1.html) and noticed that besides query and target lengths (n, m), it depends on Lambda and K constants, which are tied to the used substitution scores and gap penalties. I found the function `computeEvalue()` https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/src/util/extractdomains.cpp#L46-L50. I can see those constants are hardcoded, which stands in contradiction to what is described in the document above. Where are those values coming from? I found they are present in Table 1 in [Altschul, S. F., & Gish, W. (1996). [27] Local alignment statistics. Computer Methods for Macromolecular Sequence Analysis, 460–480. doi:10.1016/s0076-6879(96)66029-7 ](https://doi.org/10.1016/S0076-6879(96)66029-7), but not in the same row.; ; For bit score calculation https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/lib/alp/sls_alignment_evaluer.hpp#L159-L162; those are variables indeed, but I had trouble determining how are they set are how they are changing. It it happening here?; https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/src/alignment/EvalueComputation.h#L48. Thanks in advance for the help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/731:279,depend,depends,279,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/731,1,['depend'],['depends']
Integrability,"Hello, . I am trying to cluster some nucleotide sequences that are circularly permuted. To this end, I am calling `--wrapped-scoring 1` but am encountering a problem (that does not happen when `--wrapped-scoring 1` is omitted) that seems to be due to the `--rescore-mode`. Here's an example command:; `mmseqs cluster perm_DB wrapped_perm_DB_clu tmp --rescore-mode 0 --min-seq-id 0.8 --wrapped-scoring 1`. it fails at a `rescorediagonal` step, citing: `ERROR: wrapped scoring is only allowed with RESCORE_MODE_HAMMING`. Further, specifying `--rescore-mode 0` (which should be the hamming mode) does not fix the issue, indeed, none of the `--rescore-modes` appear to help. Here's an example full output of the above command being run: https://gist.github.com/Zheludev/f567fdad8ea7d2761ec4fab681b211a5. This error does not occur when `mmseqs linclust --wrapped-scoring 1` is used, but in a test case, the `linclust` seems to lack the sensitivity I require - successfully clustering some permuted sequences together but not all, even if all permutations retain 100% sequence identity (upping the `--kmer-per-seq` 100x doesn't help either).. I am running this on linux with ample resources and on version 13.45111. I would greatly appreciate any help with this issue,. Thanks. IZ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/509:117,wrap,wrapped-scoring,117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509,5,['wrap'],"['wrapped', 'wrapped-scoring']"
Integrability,"Hello, ; I want to use MMseqs2 to cluster nucleotide sequences from different patients. I use WSL on windows with MMseqs2 version 13-45111+ds-2 by compiling from source. Firslty, I have created separate fasta files using python from an original dataframe containing nucleotide sequences and their IDs. Then, I placed the resulting fasta files in WSL under user/MMseqs2/build/tests and ran the following command: ""mmseqs createdb tests/output1.fasta test/DB1"" while in the ""MMseqs2"" root. However, I get the following error message: ""Cannot open test/DB1.source for writing"". Can you please help me? I apologise in advance if the problem is basic and I've made a mistake in the installation or execution procedure.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/725:523,message,message,523,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/725,1,['message'],['message']
Integrability,"Hello,. First, thank you for the fantastic work on mmseqs2, its super fast! I think I’ve come across an issue where exact matches arent being detected by the mmseqs2 search algorithm. . ## Expected Behavior; Exact matches hit eachother. ## Current Behavior; When a subset of sequences from a reference database are searched against the database, a surprisingly large fraction of proteins do not return themselves as their best hit. The severity of the problem depends on the database size, in the example below 2.8% of proteins do not hit themselves, but when I came across this issue I was generating a larger database where using the same test 31% of proteins were not hitting themselves at all. This result does not change if sensitivity is increased to the maximum (-s 8.5). I find this behaviour concerning given you’d expect an exact matches to be returned in a relatively small database. ## Steps to Reproduce (for bugs); If I grab 10 random genomes ([genome_proteins.tar.gz](https://github.com/soedinglab/MMseqs2/files/1444710/genome_proteins.tar.gz)) from NCBI and create a reference database using their proteins, and use one of these genomes as the query database:; ```; cat *faa > pooled.faa. mmseqs createdb \; 	pooled.faa \; 	reference_DB. mmseqs createdb \; 	GCF_000352185.1_protein.faa \; 	query_DB; ```; Then search query against the reference using default settings, and convert this to a blast-like output:; ```; mkdir tmp . mmseqs search \; 	query_DB \; 	reference_DB \; 	result_DB \; 	tmp . mmseqs convertalis \; 	query_DB \; 	reference_DB \; 	result_DB \; 	result_DB.m8; ```. and grab the top hit for each protein (i.e. first listed):. ```; for i in `cat result_DB.m8 | awk '{print $1}' | uniq `; 	do grep -m 1 -w ^$i result_DB.m8; done > result_DB.top_hits.m8; ```; Then, when we check the results in R:; ```; library('data.table'); d = fread('result_DB.top_hits.m8'); # Check if query matches the reference sequence ID; d$self_match = d$V1 == d$V2. # Check percentage of total ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/48:460,depend,depends,460,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/48,1,['depend'],['depends']
Integrability,"Hello,. I'm trying to run createdb but got the following error message. I have tried with less FASTA files as input but I still got the same message. ## Expected Behavior; createdb works without error. ## Current Behavior; createdb is not able to create a DB since it cannot open the output file for writing. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); MMseqs Version: 92deb92fb46583b4c68932111303d12dfa121364; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; Cannot open sequenceDB.source for writing. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/573:63,message,message,63,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/573,2,['message'],['message']
Integrability,"Hello,. I'm trying to run the search algorithm on a database comprised of over 20k sequences against the uniref100 db. This is the command I'm using and the version, followed by the error after approx. 18 minutes in the run. ##. search ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --split-memory-limit 150G. MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b. mem_align could not allocate memory.; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/3121500954244133633/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; Error: Alignment died. ##. I've tried increasing the memory, thinking this could be the issue, but so far the problem persists. Any help is appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/510:668,wrap,wrapped-scoring,668,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/510,1,['wrap'],['wrapped-scoring']
Integrability,"Hello,; I get the same error when trying the clustering of DNA sequences extracted from prokka annotation (.ffn). the command is : . $ mmseqs easy-cluster pacbio_assembly_protein_DNA_dereplicated.ffn clusterPacbio temp --min-seq-id 0.9. The error messages are after this step : ; ""; [=================================================================] 100.00% 245.49K 0s 110ms ; Add missing connections; [=================================================================] 100.00% 245.49K 0s 7ms . Time for read in: 0h 0m 0s 279ms; there must be an error: 138172 deleted from 117856 that now is empty, but not assigned to a cluster; there must be an error: 139364 deleted from 144033 that now is empty, but not assigned to a cluster; there must be an error: 119199 deleted from 119499 that now is empty, but not assigned to a cluster; there must be an error: 119078 deleted from 137716 that now is empty, but not assigned to a cluster; there must be an error: 120853 deleted from 137082 that now is empty, but not assigned to a cluster; there must be an error: 17414 deleted from 150027 that now is empty, but not assigned to a cluster; there must be an error: 119826 deleted from 117153 that now is empty, but not assigned to a cluster; there must be an error: 117154 deleted from 119723 that now is empty, but not assigned to a cluster; "". and before Clestering step 1. Those these errors affects the quality of the clustering ? . Thanks for your time. Aline. MMseqs Version: 5b03cdff7a91206bfd5db82b5b2f23bd6c8f0813. Complete log : [log_pacbio_error.txt](https://github.com/soedinglab/MMseqs2/files/5829621/log_pacbio_error.txt). The compressed 'pacbio_assembly_protein_DNA_dereplicated.ffn' input file can be found here https://enacshare.epfl.ch/dqTYpbvUuJiCnsktFWyfN",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673:247,message,messages,247,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673,1,['message'],['messages']
Integrability,"Hello,; I'm running `mmseqs search` on Travis virtual machine for integration test purpose.; The issue I have is that mmseqs requires more memory than it's available on the machine.; The dataset I'm using consists of 10 sequences, where each is 100 nucleotides long.; Is there a possibility to overcome this behaviour?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb dna.fasta queryDB; mmseqs createdb dna.fasta targetDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99; ```. ## MMseqs Output (for bugs); ```; Error executing process > 'search (1)'. Caused by:; Process `search (1)` terminated with an error exit status (1). Command executed:. mmseqs createdb query.1.fasta queryDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G; mmseqs createtsv queryDB targetDB outputDB chunk_alignment_tsv. Command exit status:; 1. Command output:; Omit consensus 568767/qfalse; Min codons in orf 	30; Max codons in length uery_seq32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode _seqs_sp2; Orf start mode a:VTML801; Forward frames corr 1 -1,2,3; Reverse frames 1.5 --th1,2,3; Translation table 	1; Translate orf de 0; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query se a com1; Search type 	3; Number search iterations 	1; Start sensitivity work/ac/4; Search steps 	1; Run a seq-profile search in slice modeging to false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false; ; search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G ; ; MMseqs Version: 	6d92cd21676ccc36531f2852f7eb747f6389435f; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	3; E-value thresho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/253:66,integrat,integration,66,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253,1,['integrat'],['integration']
Integrability,"Hello,; Indeed I tried the indexing without the --split parameter and this solved the issue! However I now have encountered a new issue during the searching (I'm using a locally compiled version compiled from source cloned from git this morning) - sorry for the french system messages (there is a floating point exception in tmp/blastp.sh : line 60, leading I guess to files missing tmp/pref_4 and tmp/aln_4):. ```; $mmseqs search tara_test.faa uniref90/uniref90.mms test1_uniref90 tmp --threads 24 -a > ; mmseqs_search_tara_1.out; tmp/blastp.sh : ligne 60 : 31911 Exception en point flottant (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET_DB_PREF"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Could not open data file /home/hingamp.p/tmp/pref_4!; mv: impossible d'évaluer '/home/hingamp.p/tmp/aln_4': Aucun fichier ou dossier de ce type. $more mmseqs_search_tara_1.out; Program call:; tara_test.faa uniref90/uniref90.mms test1_uniref90 tmp --threads 24 -a . MMseqs Version: e3588acbec735d8aa3158f7bdf38870bebc7d6df; Sub Matrix blosum62.out; Add backtrace true; Alignment mode 0; E-value threshold 0.001; Seq. Id Threshold 0; Coverage threshold 0; Max. sequence length 32000; Max. results per query 300; Compositional bias 1; Profile false; Realign hit false; Max Reject 2147483647; Detect fragments false; Include identical Seq. Id. false; Threads 24; Verbosity 3; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; Number search iterations 1; Start sensitivity 4; sensitivity step size 1; Sets the MPI runner . /home/hingamp.p; /home/hingamp.p; Program call:; tara_test.faa uniref90/uniref90.mms /home/hingamp.p/t",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251310375:276,message,messages,276,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251310375,1,['message'],['messages']
Integrability,"Hello. MMSeq2 dies after write error, The shell output is below. Anyone knows why this happens?. Thanks,. Torsten. ___________________; Create directory tmp; search kelp_database uniref50 results tmp . MMseqs Version: 	GITDIR-NOTFOUND; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/478:360,wrap,wrapped,360,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478,1,['wrap'],['wrapped']
Integrability,Hello. my apologies if I'm posting this message in the wrong place (I am not reporting a potential bug here). I would like to align a dataset containing ~30Mio illumina reads against TrEMBL. . However the run crashes because the generated files are huge and I eventually run out of disk space. Can someone help me to optimize the search parameters to limit the disk space usage (I am only interested in finding the 10 best hits of each read). I am currently running this command:. mmseqs search QUERY.mms TrEMBL RESULT.mms /tmp/tmp_mmseqs.55447 --remove-tmp-files true --threads 60 -a -e 1E-3 -v 3 -s 2.5 --max-rejected 10 --max-seqs 100000. and get this warning: Hard disk might not have enough free space (1T left).The prefilter result might need up to 353T. Thank you for the help; best regards; Guillaume,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/380:40,message,message,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/380,1,['message'],['message']
Integrability,Here is my initial clustering update:; `mmseqs clusterupdate Uniprot_Unreviewed_Zmays /home/ec2-user/MMSeqs2/Uniprot_Unreviewed_Zmays_Tomato_Dmagna_kmer20_results/Uniprot_Unreviewed_Zmays_Tomato_Dmagna Uniprot_Unreviewed_Zmays_clu Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu ./tmp`. And the tsv generation:; `mmseqs createtsv ./Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu.tsv`. tsv error message:; ```; MMseqs Version: f3b88f27def72ac5392131b98e079930f3b087c7; first sequence as respresentative false; Target column 0; Add Full Header false. Query file is ./Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB; Target file is Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB; Data file is Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu; Start writing file to Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu.tsv; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_S_construct null not valid; Aborted; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404865556:654,message,message,654,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404865556,1,['message'],['message']
Integrability,"Here's the output from that search job:. ```; align /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search/seqs17_db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/pref_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 1 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score only; Query database size: 6526 type: Aminoacid; Target database size: 41195879 type: Aminoacid; Calculation of alignments; [=================================================================] 7.00K 0s 8ms; Time for merging to aln_0: 0h 0m 0s 9ms. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 3s 593ms; align /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/profile_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/pref_1 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 1 --add-self-ma",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203:510,wrap,wrapped-scoring,510,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203,1,['wrap'],['wrapped-scoring']
Integrability,"Hi . thanks for reporting this issues. Could you please provide the output of MMseqs2 and the how you called it?. I tried to reproduce Unexpected Behavior 1 by using this workflow. ```; mmseqs createdb test.fasta test; mmseqs search test test res /tmp/res/ -a; mmseqs convertalis test test res res.tsv; ```. The output is . ```. 0000_A 0000_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0000_A 0002_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0000_A 0001_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0001_A 0001_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0001_A 0000_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0001_A 0002_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0002_A 0002_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0002_A 0000_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0002_A 0001_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; ```. Unexpected Behavior 3:; There is a sequence length limitation in MMseqs2. With 6-mer spaced it needs at least 13 residues to detect a hit, w/o spacing just 12.; I can run this example 3 without any error message.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275014229:997,message,message,997,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275014229,1,['message'],['message']
Integrability,"Hi @ahof1704 ,; ```convertalis``` uses very little resources. I doubt this issue is a memory issue.; Actually, error messages in MMSeqs2 are quite uninformative. In my experience, if you get a 'Killed' message in a case where memory is surely involved, it doesn't mean that another 'Killed' means the same.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/829#issuecomment-2058366692:117,message,messages,117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/829#issuecomment-2058366692,2,['message'],"['message', 'messages']"
Integrability,"Hi @martin-steinegger ; thanks, a wrapper may solve. But, may I extract a separated DB for single sequences and merge it in a final DB?. I would like to use `msa2profile` after I got all alignments, it works with `result2msa`. So, if I may extract the results with only one sequence to merge with msa DB or profile DB I think it may be better than writing a wrapper script. Anyway, here is the wrapper. :) . ```; #!/bin/bash. FILE=$(mktemp). cat > $FILE. nseq=$( cat $FILE | grep -c '^>'). if (( nseq > 1 )); then; cat $FILE | clustalo -i - --threads=1; else; cat $FILE; fi; ```. Can `apply` use a call for a function, like:; >myfunc function(){ ... } ; >mmseqs aplly db dbin dbout -- myfunction -",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/196#issuecomment-485953970:34,wrap,wrapper,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/196#issuecomment-485953970,3,['wrap'],['wrapper']
Integrability,"Hi @milot-mirdita, @sanyalab,. > Maybe it works if you explicitly also add the conda-forge channel:; > ; > ```; > conda install -c conda-forge -c bioconda mmseqs2; > ```. Yes, this is exactly what is needed. Ideally, one would have the channel configuration set as described in https://bioconda.github.io/user/install.html#set-up-channels. > Your kernel/libc versions are very old. I am surprised that conda runs at all. We (Bioconda and conda-forge) currently support CentOS 6 (i.e., glibc 2.12, Linux 2.6.32 (w/ RHEL patches)) as the oldest supported system. We'll move to CentOS 7 in the future, but had/needed to delay that move because some of our users still use CentOS/RHEL 6. Due to the CentOS 8 Linux <> CentOS 8 Stream debacle this move has been delayed further.; (Read: At some point, maybe in half a year or so (no date set yet), Bioconda/conda-forge may build packages that would require you, @sanyalab, to run on an updated system.). > These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. The libstdc++/libgomp didn't come from `conda-forge` but most likely from `defaults`/`pkgs/main` which have packages provided by Anaconda. Anaconda started to compile against CentOS 7 (i.e., glibc 2.17) at some point (but in the meantime they also noticed customers still rely on CentOS 6). In any case, using `-c conda-forge -c bioconda` (or having those two in the Conda configuration beforehand) will yield glibc 2.12 compatible libstdc++/libgomp from `conda-forge`. ----; Overall, this isn't and upstream MMseqs2 issue but purely downstream and can be remedied by using the Conda channel order recommended in the Bioconda docs. Cheers,; Marcel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999:962,message,messages,962,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999,2,"['depend', 'message']","['dependencies', 'messages']"
Integrability,"Hi Christoph,. We removed split index support from createindex a few months ago. The implementation was not really mature enough. If you want to use a precomputed index table, it currently has to fit into memory completely. . We wanted to reimplement that feature soonish (for our upcoming webserver manuscript), though i cannot give you a timeline for that. We should definitely give a good error message though, if createindex is going to fail anyway. Running your searches without a precomputed index will work. Also for sequence target databases, -s will not affect the required memory. For profile databases, it does (quite dramatically so). Best regards,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/49#issuecomment-342828925:398,message,message,398,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/49#issuecomment-342828925,1,['message'],['message']
Integrability,"Hi Clovis, I pulled the most recent version and recompiled it. ; Running the call; ```; mmseqs clusterupdate DB DB_dup clu1 DB_mapped clu3 tmp3 --min-seq-id 0.9 --cluster-mode 1; ```. resulted in the following error message:; ```; Please recreate your database or add a .dbtype file to your sequence/profile database.; Error: Search died; ```. ""DB.dbtype"" and ""DB_dup.dbtype"" were both present in the directory, but ""DB_mapped.dbtype"" was not, so I duplicated and renamed the ""DB_dup.dbtype"" file to ""DB_mapped.dbtype"", but that did not solve the issue. I don't have the option to reopen the issue, but that may not be necessary if this is an easily-fixed problem. Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/53#issuecomment-356634146:216,message,message,216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/53#issuecomment-356634146,1,['message'],['message']
Integrability,"Hi Martin,. Here is a logfile for one of the samples that I ran. I had to remove all the ""="" signs printed in it (as indicator of progress) because otherwise it increased the file size to ~13GB. Please let me know if I am using mmseqs correctly or if there is some other trick to speed it up... regards,. Dhwani. ________________________________; From: Martin Steinegger <notifications@github.com>; Sent: Sunday, June 30, 2019 6:46:32 PM; To: soedinglab/MMseqs2; Cc: Dhwani Desai; Mention; Subject: Re: [soedinglab/MMseqs2] Speed up mmseqs for large database and multiple large query sets by loading target into memory (#214). It would help if you could provide a log file. So I can see which module is slow. The database does not stay necessarily memory. The OS can reuse the memory. The memory just got memory mapped by mmseqs2 (depending on the --db-load-mode). —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/214?email_source=notifications&email_token=ABYZBDOQNQW6KRHGR3W5473P5ESTPA5CNFSM4H333Q62YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODY4UNEA#issuecomment-507070096>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABYZBDMYW6UIXY2PZFDTSZDP5ESTPANCNFSM4H333Q6Q>. createdb test_reads/S1E3-S3_assembled_kneaddata.fastq mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB . MMseqs Version: 	73ce3b88754987122b4fc5e69a721beeecd677d0; Max sequence length 	65535; Split seq. by length 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Assuming DNA database, forcing parameter --dont-split-seq-by-len true; Converting sequences; [	1 Mio. sequences processed; 	2 Mio. sequences processed; 	3 Mio. sequences processed; 	4 Mio. sequences processed; 	5 Mio. sequences processed. Time for merging files: 0h 0m 4s 846ms; Time for merging files: 0h 0m 35s 669ms; Time for merging files: 0h 0m 1s 887ms; T",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:831,depend,depending,831,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,1,['depend'],['depending']
Integrability,"Hi Milot,. Thank you so much for the explanation. I was not sure if it was the chain or KOG and did not want to misinterpret it. Kathie; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: Monday, January 18, 2021 8:31 AM; To: soedinglab/MMseqs2 <MMseqs2@noreply.github.com>; Cc: Mihindukulasuriya, Kathie <mihindu@wustl.edu>; Author <author@noreply.github.com>; Subject: Re: [soedinglab/MMseqs2] interpretation of web mmseqs2 output (#393). * External Email - Caution *. I am not sure which output this exactly is. The server at web output of search.mmseqs.com gives a slightly different presentation. But how you listed it, I think it should be these columns:. query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln. target is the target identifier, in this case it's just a PDB identifier. The part after the _ is the PDB chain. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762286505>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ANDVLDIQ64ZCBT3HF3OERJDS2RA43ANCNFSM4WDGPERA>. ________________________________; The materials in this message are private and may contain Protected Healthcare Information or other information of a sensitive nature. If you are not the intended recipient, be advised that any unauthorized use, disclosure, copying or the taking of any action in reliance on the contents of this information is strictly prohibited. If you have received this email in error, please immediately notify the sender via telephone or return mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762294329:1263,message,message,1263,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762294329,1,['message'],['message']
Integrability,"Hi Milot,. thanks for the super-quick fix. Have tried it with the new version and we don't get any error messages anymore :). Best,; Thomas. > Am 03.02.2017 um 16:24 schrieb Milot Mirdita <notifications@github.com>:; > ; > Hi Thomas,; > ; > Martin pushed an update earlier. Just pull the latest version and try again. You don't have to change anything else.; > ; > Best,; > Milot; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-277423828:105,message,messages,105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-277423828,1,['message'],['messages']
Integrability,"Hi Raphael,. I think I fixed the issues we had. You can use the script below to create a profile database to search against. I hope that helps. Best regards,. Milot. ```; # download the latest version of the pfam in stockholm format; wget http://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/Pfam-A.full.gz. # convert stockholm msas to a fasta msa db; # the pfam documentation says that the sequences in the pfam will not wrap around; # so the awk script does not wrapping stockholm entries; zcat Pfam-A.full.gz | tr '[a-z]' '[A-Z]' | awk -v db=pfam_msa \; 'BEGIN { idx = 1; offset = 0; } /^#=GF/ && $2 == ""AC"" { key=$3; next; } /^#/ { next; } /^\/\// { cnt = 0; res=""""; for (i in seq) { gsub(/\./, ""-"", seq[i]); if (cnt++ == 0) { res=res"">""key""\n""seq[i]""\n""; } else { res=res"">""i""\n""seq[i]""\n""; } } size=length(res) + 1; printf(""%s\0"", res) > db; print idx""\t""offset""\t""size > db"".index""; idx = idx + 1; offset = offset + size; delete seq; next; } { seq[$1] = $2; }'. # create profiles; # since pfam has no representative sequence use gap-rule for match mode; # that will filter out columns with more than 50% gaps (of weighted sequences); mmseqs msa2profile pfam_msa pfam_profile --match-mode 1. # precompute mmseqs index table (not required for a single search run); mmseqs createindex pfam_profile tmp -k 5 -s 7. # search; # use --no-preload flag, if using a precomputed index table ; # and query_db is small to medium sized. Without that the precomputed index table; # will be first read completely into memory (unnecessary overhead).; # If you want to annotate more than a few hundred thousand sequences, leave out that flag; mmseqs search query_db pfam_profile_new result tmp -k 5 -s 7; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/59#issuecomment-363790772:425,wrap,wrap,425,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/59#issuecomment-363790772,2,['wrap'],"['wrap', 'wrapping']"
Integrability,"Hi There,. I'm having problems trying to install fix #309. https://github.com/soedinglab/MMseqs2/pull/309. When trying to checkout the fix code I get an error.; https://github.com/soedinglab/MMseqs2/pull/309/commits/bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; It appear that this commit is not part of the mmeseq main branch. . see below:. # git clone https://github.com/soedinglab/MMseqs2.git; Cloning into 'MMseqs2'...; remote: Enumerating objects: 284, done.; remote: Counting objects: 100% (284/284), done.; remote: Compressing objects: 100% (206/206), done.; remote: Total 34346 (delta 175), reused 143 (delta 78), pack-reused 34062; Receiving objects: 100% (34346/34346), 27.68 MiB | 13.72 MiB/s, done.; Resolving deltas: 100% (26632/26632), done.; Checking out files: 100% (968/968), done. # git checkout bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; fatal: Not a git repository (or any parent up to mount point /powerapps); Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set). I also tried to download the SIMD as a sub module.; https://github.com/simd-everywhere/simde; And integrated it with mmeseq with no success. Can you please share a guide on how to install mmesq2 from source with this fix. Your help is much appreciated. Thanks. BR,; Eyal.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464:1099,integrat,integrated,1099,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464,2,['integrat'],['integrated']
Integrability,"Hi all,. I was trying for the first time to run MMseqs to assign taxonomy. Just to test it I used a set of short reads as input and tried to annotate it against the uniref100 db. Everything works fine but I'm having problems in the last step of the process. ## Expected Behavior. ` mmseqs taxonomy readsDNA10 uniref_db result /tmp -s 6 `. should generate a result file with the assigned taxonomy. ## Current Behavior. MMseqs Version: 60b77df37df55c3984870760591facbb361c3939; ORF filter 1; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Taxonomy output mode 0; Majority threshold 0.5; Vote mode 1; LCA ranks; Column with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 6; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/669:884,wrap,wrapped,884,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669,1,['wrap'],['wrapped']
Integrability,"Hi there, thanks for reading this. I am trying to download mmseq2 but it always gives me the error message: cannot verify mmseqs.com's certificate, issued by ‘/C=US/O=Let's Encrypt/CN=R3’: Issued certificate has expired. Could you please help me with this issue?. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/751:99,message,message,99,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/751,1,['message'],['message']
Integrability,"Hi, ; I'm using the mmseqs2 to assign the taxonomic label for my human gut microbiota contigs, Here I have two questions and any suggestion would be nice,. 1. I have noticed that there are many prebuiled dabatabse which includ GTDB ,but in the wiki page there is a section about `Create a seqTaxDB for GTDB`, does this step have been integrated in the pre-established GTDB database? ; 2. I have tried differert database to run the taxonomy module, finally, I found there are little consistance at the species level between any two database ,I tried swissprot, uniref50 , uniref90 , nr, and GTDB, so I'm confused which database should be adopt, is there any recommendation? by the way, it's bacteria. Is there any preference? The results in your paper use the refseq database ,so what if you change another database?. I do need your help, please,Thanks a lot !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/546:334,integrat,integrated,334,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/546,1,['integrat'],['integrated']
Integrability,"Hi, I think there is some inconsistency in `extractalignedregion` module to generate database with regions. I'm trying to cluster aligned regions belonging to a db. ```; mmseqs search id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN /tmp/ --threads 40 -s 7.5 -a -e 1e-10 --alt-ali 1 &> allvsall.search.log ; mmseqs convertalis id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.tsv --threads 40 ; mmseqs extractalignedregion id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.SEQ --threads 40; mmseqs cluster pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ.CLU /tmp/ -e 1e-10 -c 0 -a -s 7.5 --threads 40 ; ```. But it fails in the last step with this message. ```; rescorediagonal pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 1e-10 -c 0.5 -a 1 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 204.52K 0s 215ms; Time for merging files: 0h 0m 0s 94ms; Time for processing: 0h 0m 0s 845ms; clust pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 /tmp//1456503536827778696/linclust/7100099902620488817/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Sequence db size != result db size; Error: Pre-clustering step died; Error: linclust died; ```. I think it is happening because of the number of files generated by the `extractalignedregion` module.; If it isn'",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/210:899,message,message,899,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/210,1,['message'],['message']
Integrability,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/212:650,message,message,650,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212,1,['message'],['message']
Integrability,"Hi,. I am using a strategy that I have been using for some time successfully but since the last update, it has stopped working. The idea is to group the sequences and generate an MSA for each cluster to generate models for each MSA and compare all models with hhsearch. So after compiling my cluster, I use `createseqfiledb` and then use` apply` with clustalo. Exactly the apply step has returned me some errors and it never finishes. The usual pipeline is:; ```; # .... a lot of clusters hierarchically prepared ; mmseqs mergeclusters sbps.DB sbps.CLU $(\ls -d1t id_0cov_0.8evalue_* | tac | sed 's/$/\/MMseqsClust/' | xargs ) --threads 30 ; mmseqs createtsv sbps.DB sbps.DB sbps.CLU sbps.CLU.tsv --threads 40. mmseqs createseqfiledb sbps.DB sbps.CLU sbps.CLU.SEQ --threads 30 --min-sequences 3. ## errors from this point; mmseqs apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --output-order=input-order --threads=1 --iter=5 ; ```. The error is exemplified by this:; ```; apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --threads=1 --iter=5 . MMseqs Version:	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Threads 	30; Compressed	0; Verbosity 	3. Start applying.; write stdin1: Bad address ] 0.00% 1 eta -; ERROR: Sequence 'WP_078846918.1/28-316' has 0 residues; FATAL: Reading sequence file '-' failed; ERROR: Sequence 'WP_082295029.1/41-339' has 0 residues ] 2.09% 29 eta 2h 51m 21s ; FATAL: Reading sequence file '-' failed; Entry 30 exited with error code 1!. ```. I may share the `sbps.DB` and `sbps.CLU` and associated files to check, but I'm sure that they are fine. Just tell me how to send to you. But I don't know if the issue happens in `createseqfiledb` but since it doesn't return any error message and the files seem okay, the problem may be the STDIN.; Searching sequences like `WP_082295029.1/41-339` in the files I was able to find it and the sequence is the same as the initial fasta file. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/230:1736,message,message,1736,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230,1,['message'],['message']
Integrability,"Hi,. I have written a tool called pharokka (https://github.com/gbouras13/pharokka) that annotates bacteriophage genomes. Pharokka uses mmseqs2 to match predicted CDS to the PHROGs (https://phrogs.lmge.uca.fr), CARD and VFDB databases using mmseqs2 which follows the method at https://phrogs.lmge.uca.fr/READMORE.php. Mmseqs2 is amazingly fast especially for large input metaviromes, so it's a brilliant choice for this clustering - thanks for developing it!. I am coming across a problem with the new version released 10 days ago. With v 13.4511, the 3 mmseqs2 searches take approximately 5-10 minutes in total depending on input, architecture and threads used. However, since mmseqs2 v14-7e284 has been released, users of pharokka have reported that the mmseqs2 step hangs indefinitely (at least 20+ hours) when pharokka with mmseqs2 v14-7e284 is installed with bioconda. I have replicated the issue on my machines also. . The relevant lines in pharokka are 358-369:. https://github.com/gbouras13/pharokka/blob/3b8f7ae207b367366765f482c9dce1dd2cccee80/bin/processes.py#L358 . # create target db; ""mmseqs"", ""createdb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/625:611,depend,depending,611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625,1,['depend'],['depending']
Integrability,"Hi,. I would like to thank you for this very nice software. I'm wondering if you can add to the wiki page the protocol to annotate a dataset of proteins with Pfam domains (as explained in the example 3 of the MMseqs2 paper). I'm struggling to build a profile DB from the PFAM Hmm profiles and I'm quite certain that it would be very useful for many of us!. Best. Raphael",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/59:110,protocol,protocol,110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/59,1,['protocol'],['protocol']
Integrability,"Hi,. I'm running MMseq2s to clusterize a huge set of fasta sequences (near 640000). I run the easy-cluster procedure (mmseqs easy-cluster scaffold.fa clustered tmp) but in some point the follow message appear:. Index table: Masked residues: 2748074; Index table: fill; Segmentation fault (core dumped); Error: Prefilter step 0 died; Error: Search died. Any idea of what happend?; Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/187:194,message,message,194,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187,1,['message'],['message']
Integrability,"Hi,. I'm trying to convert the MSA of a cluster DB to HH-blits format. . So, I follow [this tutorial](https://github.com/soedinglab/mmseqs2/wiki#how-to-create-a-hhblits-database). > mmseqs result2msa pbps.DB pbps.DB pbps.CLU pbps.CLU.msa --compress ; > ln -s pbps.DB_h pbps_MSA_header.ffdata ; > ln -s pbps.DB_h.index pbps_MSA_header.ffdindex ; > ln -s pbps.DB_h.index pbps_MSA_header.ffindex ; > ln -s pbps.DB pbps_MSA.ffdata ; > ln -s pbps.DB.index pbps_MSA.ffindex . All commands above work nicely, the `pbps.CLU` database are also nice capable to generate the TSV file with all clusters. But when I run:; > mpirun -np 2 /usr/lib/hh/bin/cstranslate -i pbps.CLU.msa_ca3m.ffdata -o pbps.CLU.msa_cs219 -A /usr/lib/hh/data/cs219.lib -D /usr/lib/hh/data/context_data.lib -x 0.4 -c 4 -I ca3m. I got this message:; ```; Reading context library for pseudocounts from context_data.lib ...; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[19728,1],1]; Exit code: 1; --------------------------------------------------------------------------; ```. How can I debug this error?? . Also, when I used the `mmseqs result2msa` with `--compress` option the output are two files with `_ca3m.ffdata` and `_ca3m.ffindex`. Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174:801,message,message,801,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174,1,['message'],['message']
Integrability,"Hi,. I'm using MMSeqs2 15-6f452. Here what I've done : . # Download UniRef100; mmseqs databases UniRef100 UniRef100DB tmp; # Remove Ospithokontes; mmseqs filtertaxseqdb UniRef100DB UniRef100NoOpisthokontaDB --taxon-list '!33154'; # Convert .msa; mmseqs convertmsa PRK_align.msa PRK_msaDB; # Transform PRK in a profil; mmseqs msa2profile PRK_msaDB profilePRK_DB; # Search in database; mmseqs search profilePRK_DB UniRef100NoOpisthokontaDB PRK_alnResults tmp/ --cov-mode 0 -c 0.8; # Compute taxonomy; mmseqs taxonomy PRK_alnResults UniRef100NoOpisthokontaDB PRK_TaxaDB tmp/. # Error message; Input database ""PRK_alnResults"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid. I don't get why the output of search cannot be used with taxonomy. What I want to do is to grep all the UniRef100 ID present in PRK_alnResults and to used at the end taxonomyreport on them. I'm on this since few days, and unable to find a solution. I'd be very pleased if you have time to give me some tips about it. Xillanne",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/896:581,message,message,581,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/896,1,['message'],['message']
Integrability,"Hi,. I'm using the mmseqs hosted in linuxbrew version 3-be8f6. I'm using a routine to hierarchical cluster which I remove gradually the redundancy. ; I've got some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/102:75,rout,routine,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102,3,['rout'],['routine']
Integrability,"Hi,; Thanks for reporting this.; The 3 error messages you get are not critical. It is due to a recent change in the default parameters of mmseqs that makes it not generating the aln_*, clu_* and input_* files. This shouldn't affect the workflow.; From your call, you should actually get a DB_clusterupdate database. Could you check if it is conform to what you expected ?. Concerning the ATCG warning, it is just a warning to the user in case there are some sequences containing only residues A, T, C and G. If sometimes you do not have the warning it may may be due to the fact the tmp folder was not empty and mmseqs did not perform the search again. Best,; Clovis.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17#issuecomment-280642395:45,message,messages,45,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17#issuecomment-280642395,1,['message'],['messages']
Integrability,"Hi,; thank you very much for mmseqs2, it's really amazing! . We are clustering a few million of sequences following a similar approach than the one described in your uniclust pipeline. Before reinventing the wheel, we are wondering if mmseqs has an easy workaround to extract the sequence identities for each pair of sequences in a cluster from the _alignment_ file. Our aim would be to be able to integrate the identities between pairs to the output of _createtsv_. Do you have any recommendations?. Many thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/13:398,integrat,integrate,398,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/13,1,['integrat'],['integrate']
Integrability,"Hi. I was trying to search single queries against NCBI NR just for test. ; Somehow, I got just a few results ~450 results by a query. The point is, the lowest e-value is too low ~1e-50. I've got no error message. Then, I think I'm doing something wrong in `createindex`.; Probably I need to change some parameters as `--max-seqs`. For example, I used this query:; ```; >WP_066948057.1 AAA family ATPase [Microtetraspora fusca]; MRKVPLPEPVSAALTDALDQLRLAVEDLHFGLDIPGAEEARKAQAAVLAQLEDYVIPRVHMSTAPALIVVAGSTGAGKST; LVNTLAAQRVSTTGVRRPTTGTPVLVCHPDDHEWFAEGDLLGGLTRLERPVEGVGTDSVVLSTTERLPPGVALLDTPDID; SVVEEHHEIAHRMLDAADMWVFVTTASRYADAPSWNLLRLAKERGARLVIVLSRVPEKSRDVIVKHFGRMLDEYGLADAE; RFVIKETTVTEGRLPDKEVSELRMWLAHLSVDDERRAAAVRTTLNGVLDSFRNRVPALARHLETQVALRADLRSDVDAAY; MGALADIDEATRNGSLLRGEVLARWQDFAGSGDLIRTLQLRRGGKGGQRGPQRARALRTAIRNALESVINSAAERAAEEV; VVRWRQRAGAGDRLAATPGLGRSSDEATQRTSRAIGAWQDHVTELIRTEGVTKRSVARLVSFDVESLALIFTVSLLGYGA; TDVSSGRGAGALPQRLLRALLGAESLRNISAKARSDLRARIGMVFDEETLRYVDELDGAGIPDEAAATRLYQATYNLEVA; R; ```. The NR was prepared with; ```; mmseqs databases NR nr tmp; mmseqs createindex nr tmp; ```. And the search was performed like this; ```; mmseqs easy-search query.fa nr result tmp; ```. The same query with blastp has returned me 5000 results using `-max_target_seqs 5000`. https://github.com/soedinglab/MMseqs2/wiki#disk-space. Do I need to change the parameters in `createindex` ?. I'd like to maximize the number of results for a e-value threshold. As returning all results down to 1e-3 of e-value or other value I choose. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/300:204,message,message,204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/300,1,['message'],['message']
Integrability,"I 42; ALGNGK 34; GLGNGK 32; ELPGVN 31; DLLDLP 29; GQQVAR 24; GEQVAR 23; Time for index table init: 0h 0m 2s 664ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10966; Target db start 1 to 10966; [=================================================================] 10.97K 3s 91ms. 46.510777 k-mers per position; 438 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 13 sequences passed prefiltering per query sequence; 7 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 41ms; Time for processing: 0h 0m 8s 706ms; align ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/pref_step1 ./mmseqs_output/tmp/5351426679731834765/aln_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 10966 type: Aminoacid; Target database size: 10966 type: Aminoacid; Calculation of alignments; [=================================================================] 10.97K 9s 362ms; Time for merging to aln_step1: 0h 0m 0s 91ms; 128470 alignments calculated; 17027 sequence pairs passed the thresholds (0.132537 of overall calculated); 1.552708 hits per query sequence; Time for p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:25993,wrap,wrapped-scoring,25993,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped-scoring']
Integrability,"I already tried use less threads or more database split num, cant figure out its a memory or thread competition issue, at least these two strategy not work for me. I can provide my machine and user account for you to debug if you wish.; ________________________________; From: Milot Mirdita ***@***.***>; Sent: Tuesday, December 26, 2023 12:40 PM; To: soedinglab/MMseqs2 ***@***.***>; Cc: Wangchentong ***@***.***>; Author ***@***.***>; Subject: Re: [soedinglab/MMseqs2] process stuck at rescorediagonal when do cluster (Issue #602). Can you try to use less threads (--threads 32 or 64) on the same machine?. ―; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/602#issuecomment-1869248893>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AV22KHCU6QM2YZCFFOMHCJ3YLJILPAVCNFSM6AAAAAAQFZF5I2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQNRZGI2DQOBZGM>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602#issuecomment-1869574155:965,Message,Message,965,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602#issuecomment-1869574155,1,['Message'],['Message']
Integrability,"I am having an error message saying ""2023-07-03 13:58:41,863 Warning: importing 'simtk.openmm' is deprecated. Import 'openmm' instead."" What should I do to solve it?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/727:21,message,message,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/727,1,['message'],['message']
Integrability,"I am not sure we deal well with 50-mers, the default nucleotide k-mer size is 14 or 15 (depending on the database size). ; Also, we have predefined spaced-kmer patterns only up to 30-mers, after that no spaced-kmers are used anymore.; Could you check if something more sensible happens if you leave out the k-mer size parameter?. We have commented out debug code interspersed in a lot of places to track down issues like that, however that's not very easy to use. Could you try to rule out the k-mer size issue first?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923016729:88,depend,depending,88,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923016729,1,['depend'],['depending']
Integrability,I am trying to reproduce the issue but can't manage to. Could you upload the files somewhere (or at least a small subset that also fails with this error message)?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/334#issuecomment-665645856:153,message,message,153,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/334#issuecomment-665645856,1,['message'],['message']
Integrability,"I assume the message comes from alignments that find --max-seqs similiar sequences. So the filter would remove all sequences but then add back the query sequence. I would recommend to work on a redundancy reduced database. E.g. Uniclust90 (uniclust.mmseqs.com). I forgot, you need to add the flat --add-self-matches to your search. . mmseqs search pdb_05_profile pdb_05_rep pdb_05_pp_res tmp --threads 110 -e 0.05 --add-self-matches; mmseqs clust pdb_05_profile pdb_05_pp_res pdb_05_pp_clu --threads 110 --cluster-mode 1 --similarity-type 1. Do you use MMseqs2 on a computer with 110 core?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369616060:13,message,message,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369616060,1,['message'],['message']
Integrability,I checked it's indeed in this function. It doesn't like the simde implementation of `_mm256_loadu_si256` (https://github.com/nemequ/simde/blob/000f9bac0d339d32ec7d06d32f362e381cf4f960/simde/x86/avx.h#L3375). I think this is a function where the `simd.h` wrapper to generate either native SSE4.1 or AVX2 code was actually pretty useful. We should probably just keep using 128-bit SIMD in this case.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630814909:254,wrap,wrapper,254,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630814909,1,['wrap'],['wrapper']
Integrability,"I created an index for UniRef90 using `--split 4`, which produced 4 splits and required ~70G of memory to generate. Now I'm trying to run `mmseqs search` on that target database with the associated idx that I just created. My `mmseq search` cluster jobs all die (even when providing up to 200G of memory) with the following error: . ```; Failed to mmap memory dataSize=58928025600 File=/ebio/abt3_scratch/nyoungblut/Struo2_255873462447/humann3_search/mmseqs_search_db/db.idx. Error 12; ```. According to the error message, the database size is < 100G, so why am I getting an `mmap` error? . I also get this error when using `--db-load-mode 1`, which should use fread instead of mmap, according to the help docs, so I don't understand why I'm still getting the `Failed to mmap memory` in that situation. . I'm using mmseq2 12.113e3. The `mmseqs search` jobs complete successfully when running them locally (a server with plenty of memory). It appears to be something specific to the SGE cluster. Both local and cluster nodes are running `Ubuntu 18.04.5`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702:514,message,message,514,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702,1,['message'],['message']
Integrability,"I don't think you need much changing. The defaults are set to optimize sensitivity while keeping false positives low. You can further decrease the E-value threshold, but you can do that also after the search just based on the result file. Sequence identity, coverage etc. depend a lot on your specific research question.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/721#issuecomment-1596472013:272,depend,depend,272,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/721#issuecomment-1596472013,1,['depend'],['depend']
Integrability,"I encountered an error while executing the command cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ... My cmake version is 3.28.0, and gcc version 7.3. The error message I received is as follows:. -- The CXX compiler identification is GNU 7.3.0 ; -- The C compiler identification is GNU 7.3.0 ; -- Detecting CXX compiler ABI info ; -- Detecting CXX compiler ABI info - failed ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ - broken ; CMake Error at /usr/local/share/cmake-3.28/Modules/CMakeTestCXXCompiler.cmake:60 (message): ; The C++ compiler; ""/home/anaconda3/envs/AlphaFlow/bin/c++"" ; is not able to compile a simple test program. ; It fails with the following output:; Change Dir: '/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz'; Run Build Command(s): /usr/local/bin/cmake -E env VERBOSE=1 /usr/bin/gmake -f Makefile cmTC_8b7b3/fast ; /usr/bin/gmake -f CMakeFiles/cmTC_8b7b3.dir/build.make CMakeFiles/cmTC_8b7b3.dir/build; gmake[1]: Entering directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; Building CXX object CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o ; /home/anaconda3/envs/AlphaFlow/bin/c++ -o CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -c /home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz/testCXXCompiler.cxx ; Linking CXX executable cmTC_8b7b3 ; /usr/local/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8b7b3.dir/link.txt --verbose=1 ; /home/anaconda3/envs/AlphaFlow/bin/c++ -rdynamic CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -o cmTC_8b7b3 ; collect2: fatal error: cannot find 'ld' compilation terminated. ; gmake[1]: *** [cmTC_8b7b3] Error 1 ; gmake[1]: Leaving directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; gmake: *** [cmTC_8b7b3/fast] Error 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/816:172,message,message,172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/816,2,['message'],['message']
Integrability,I finished up the integration in #321. Thanks a lot again!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-649132530:18,integrat,integration,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-649132530,1,['integrat'],['integration']
Integrability,"I get the helpfulness of the multi-output, but it really does make integrating mmseqs in a snakemake pipeline a pain. It would be helpful to know which files are actually the input and output of each subcommand, but I get that it would be a large change to the script help docs, and if you were to change the implementation, you'd have to change all of the docs. . I don't know why `clusterupdate` is using `extractorfs` either. For my test, I'm just taking some full-length gene AA sequences (generated by prodigal from a set of genomes), and trying to update those with a few more full-length gene AA sequences. I'll double check my code.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664823477:67,integrat,integrating,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664823477,1,['integrat'],['integrating']
Integrability,"I got the same error but in different place, I ran local colabfold API Server, the error message is . Invalid database read for database data file=/data/colabFold/MsaServer/databases/uniref30_2202_db.idx, database index=/data/colabFold/MsaServer/databases/uniref30_2202_db.idx.index; getData: local id (4294967295) >= db size (22). Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1536475039:89,message,message,89,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1536475039,1,['message'],['message']
Integrability,"I have a few missing fields in my taxonomy levels. I'm assuming that's what is causing this error: . ```; easy-taxonomy test_euk.fasta MicroEuk100.eukaryota_odb10 test_results/tax tmp/. MMseqs Version: 	14.7e284; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Majority threshold 	0.5; Vote mode 	1; LCA ranks; Column with taxonomic lineage 	0; Compressed 	0; Threads 	128; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. thre",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:613,wrap,wrapped,613,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,1,['wrap'],['wrapped']
Integrability,"I have an explanation for the above error message: even though there are TB of free space on the partition I'm using, I had reached my quota... After some spring cleaning, the above `mmseqs createindex uniref90.mms --split 8` command completed successfully! Sorry for the unnecessary last report.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251897402:42,message,message,42,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251897402,1,['message'],['message']
Integrability,"I have found a [wrapper script](https://github.com/soedinglab/MMseqs2/issues/196#issuecomment-485953970) that works in another issue. Alternatively, I also came up with a simple solution:; ```; #!/bin/bash. external-tool <(cat); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/536#issuecomment-1041133822:16,wrap,wrapper,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/536#issuecomment-1041133822,2,['wrap'],['wrapper']
Integrability,"I have installed the latest version available via ; `conda install -c conda-forge -c bioconda mmseqs2`. I tried to download the PDB database via ; `mmseqs databases PDB pdb_db tmp`. This leads to the process just hanging. One of the error messages printed shows that the URL seems to be inactive, as described in this [issue](https://github.com/soedinglab/MMseqs2/issues/772#issue-1977470516) (#772). . 03/11 13:57:28 [ERROR] CUID#7 - Download aborted. URI=https://ftp.wwpdb.org/pub/pdb/derived_data/pdb_seqres.txt.gz; Exception: [AbstractCommand.cc:340] errorCode=2 Timeout. Is there a way to specify the URL when calling `mmseqs databases`? Or could you suggest a fix for the code when installed via conda?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/820:239,message,messages,239,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/820,1,['message'],['messages']
Integrability,"I just hit this as well. The error message doesn't make the formatting problem obvious, but after finding this thread it was a quick and easy fix to manually correct the fasta lines that start with `> ` to begin with `>`. If writing the logic to handle parsing both `> ` & `>` is more trouble than it is worth, revising the error message to indicate that the user may only need to fix the spacing issue and then try again would be very helpful! The file that caused the issue for me was downloaded from a small database maintained by an individual research lab, so I assume the issue was because the fasta file was likely manually updated at some point rather than machine-generated. That's just a suggestion though - I was able to find this thread and solution within easily enough and there seem to be a handful of existing fasta validator tools that could also help users identify the root cause of their issue without internalizing that logic into this suite of tools as well. P.S. thanks for MMSeqs!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896:35,message,message,35,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896,2,['message'],['message']
Integrability,"I ran mmseqs2 on the web, choosing all databases and then clicked ""Download M8""; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: Monday, January 18, 2021 8:46 AM; To: soedinglab/MMseqs2 <MMseqs2@noreply.github.com>; Cc: Mihindukulasuriya, Kathie <mihindu@wustl.edu>; Author <author@noreply.github.com>; Subject: Re: [soedinglab/MMseqs2] interpretation of web mmseqs2 output (#393). * External Email - Caution *. Where exactly did you find this output? I probably should add an explanation there. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762295185>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ANDVLDNB2TDE2GSSTSCIU6TS2RCU3ANCNFSM4WDGPERA>. ________________________________; The materials in this message are private and may contain Protected Healthcare Information or other information of a sensitive nature. If you are not the intended recipient, be advised that any unauthorized use, disclosure, copying or the taking of any action in reliance on the contents of this information is strictly prohibited. If you have received this email in error, please immediately notify the sender via telephone or return mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762298123:886,message,message,886,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762298123,1,['message'],['message']
Integrability,"I re-ran from the very beginning (because it seems the temp files were auto-removed, e.g., `input_step_redundancy`). However, there is no backtrace output.; ```; Time for merging to pref_filter1: 0h 0m 45s 203ms; Time for processing: 0h 1m 56s 417ms; filterdb /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter1 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 --filter-file /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/order_redundancy --threads 96 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 245.75M 2m 6s 123ms; Time for merging to pref_filter2: 0h 2m 13s 365ms; Time for processing: 0h 6m 17s 259ms; rescorediagonal /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0; --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3. Segmentation fault (core dumped) ] 0.00% 1 eta -; Error: Ungapped alignment step died; Error: Search died; [Inferior 1 (process 161684) exited with code 01]; (gdb) bt; No stack.; ```; Let me know if there is something else I can test.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972:1197,wrap,wrapped-scoring,1197,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972,1,['wrap'],['wrapped-scoring']
Integrability,"I should also mention that I did not get the hanging issue when I reduced sensitivity to 4. Unfortunately, I need higher sensitivity for this particular search! Here is the log:. ```; easy-search -s 7 query.fasta targetDB_split/targetDB_split_0_32 results/0.m8 tmp . MMseqs Version: 	15.6f452; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pse",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:418,wrap,wrapped,418,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257,1,['wrap'],['wrapped']
Integrability,"I still can't manage to compile the code on our servers. I get many instances of this error (or similar):; ```; lib/simde/simde/x86/avx2.h:718:62: error: cannot convert ‘simd_int {aka __vector(4) long long int}’ to ‘__vector(4) long int’ for argument ‘1’ to ‘__vector(4) long int simde_mm256_cmpeq_epi8(__vector(4) long int, __vector(4) long int)’; ```. Any idea what's happening?. ```; $ gcc -v; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/5/lto-wrapper; Target: x86_64-linux-gnu; Configured with: ../src/configure -v --with-pkgversion='Ubuntu 5.4.0-6ubuntu1~16.04.12' --with-bugurl=file:///usr/share/doc/gcc-5/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-5 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-5-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-5-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-5-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu; Thread model: posix; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495:493,wrap,wrapper,493,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495,1,['wrap'],['wrapper']
Integrability,"I still cannot make it report at least one score per query after solving issue #283.; Here is the log. search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /scratch/jobs/56067190 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:448,wrap,wrapped,448,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276,1,['wrap'],['wrapped']
Integrability,"I think the error message should say ""could not"" not ""could""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/202:18,message,message,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/202,1,['message'],['message']
Integrability,"I tried re-running with 250 GB RAM requested and 32 threads specified. It is now telling me it would need 717 G??. ```; Create directory tmp; taxonomy KLEB_PO07_megahitDB /home/sdwork/scratch/metagenomics/uniref_db/uniref90 KLEB_PO07_megahit_result tmp --threads 32. MMseqs Version: 	GITDIR-NOTFOUND; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks; Column with taxonomic lineage 	0; Compressed 	0; Threads 	32; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global seq",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:725,wrap,wrapped,725,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741,1,['wrap'],['wrapped']
Integrability,"I tried the current conda version of mmseqs, which is MMseqs2 Version: 14.7e284. I ran the following commands ; mmseqs createdb --dbtype 2 input.fas DB; mmseqs cluster DB clusterRes /dev/shm/user/ --min-seq-id 0.95 -c 0.8 --cov-mode 1. When trying to get the sequences with; mmseqs convert2fasta clusterRes out_cluster.fas; (I also tried with and without the --use-header-file 0 and --use-header-file 1 option.). I get the error message: ; Database clusterRes needs header information. I found no explanation for this. I created an output database and hoped to get the result converted back to fasta files. I get this same error message when trying the clusterupdate option.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/673:429,message,message,429,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/673,2,['message'],['message']
Integrability,"I tried to reconstruct the command that probably crashed. Could you run it again inside a debugger to recover the backtrace? I have no clue what could have gone wrong so early in the command invocation (the running module had no output at all before it crashed).; 1) Run the following command; ```; gdb --args mmseqs rescorediagonal /export/tmp/MERC/4233864688410091672/input_step_redundancy /export/tmp/MERC/4233864688410091672/input_step_redundancy /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter2 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3; ```; 2) wait for a command prompt; 3) press `r` for run and then enter; 4) wait for the crash; 5) press `bt` for backtrace and then enter; 6) copy the output and paste it here. Thanks a lot for reporting the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649841049:675,wrap,wrapped-scoring,675,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649841049,1,['wrap'],['wrapped-scoring']
Integrability,I tried to reproduce the behavior but I could not. I did not see this message before in my runs. But I think your results will be fine if not all sequences reports this warning. But just to figure out what does wrong: Could you provide us the MSA where this issue occurs? I have create a patch which should print out the MSA if the warning occurs ( https://gist.github.com/martin-steinegger/2ecff9e259d97eca3f9c45c69912d113 ). Thanks a lot.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/72#issuecomment-371032617:70,message,message,70,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/72#issuecomment-371032617,1,['message'],['message']
Integrability,"I tried to reproduce the problem in my FreeBSD 13 VM with your wip-ports repository and I can't get it to hang. I tried with both `-msse2` and `-march=x86_64` (and removed the `USE_GCC` line). Maybe the issue is that it's swapping at that moment a bit excessively and it would eventually continue? Could you attach gdb/lldb at the moment it's hanging and produce a stack trace? That's quite the odd issue that I've not encountered on any other systems :/. I think the c++ standard was somewhat of a conscious choice, as we don't really want to use modern C++, but (iirc) gcc 4.8 would complain about one of the dependencies without increasing the c++ standard slightly.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869585650:611,depend,dependencies,611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869585650,1,['depend'],['dependencies']
Integrability,"I was trying to use MMSEQS2 for clustering with:. mmseqs cluster DB clu tmp --cascaded -e 1e-5 --max-seqs 30000 --similarity-type 1. It was working fine (MMseqs version ad5b994c5f21d2117c359ecb748811cbd01eba73) but when I try to execute it in another machine (both macOS El Capitan 10.11.6, this time MMseqs version e3ca470308523cb3d997088c65e821cc79e2a422), I get several error messages as follows,. ERROR: Set 0 has more elements than allocated (1)!. and the clustering never finishes. Any idea of what is this due to or how to solve it?. Thank you in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/28:379,message,messages,379,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/28,1,['message'],['messages']
Integrability,"I was trying to use clusterupdate to update a clustering (DB_trimmed_clu) build from DB_trimmed (a library of proteins) to DB_clusterupdate from a extended version of the library (DB_new) with 2 sequences overlap. However, the program is not able to finish and I get the error:. mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; mv: rename tmp/input_* to tmp/search/input_*: No such file or directory. Although the program is able to continue until the merging of the updated clusterings (see log below). I also get a random number of warnings (depending on the execution) pointing out that I am using DNA, but I am not. For instance:. WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence. I attach the log of the cluster update call:. `mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp &> update_log.txt`. > Program call:; > DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:633,depend,depending,633,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['depend'],['depending']
Integrability,"I would like to specify in a `mmseqs search` command the effective size of a database, the way blastp allows with the `-dbsize` option. I have not been able to find an analogous option in the MMseqs help message, am I missing anything?; Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/505:204,message,message,204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/505,1,['message'],['message']
Integrability,"I would recommend to just use UniProt instead of NR. it’s much better maintained, especially with the versioning. Any annotations against the NR are essentially unreproducible due to the lack of versioning by the NCBI. I don’t plan on integrating the blast databases for the foreseeable future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/893#issuecomment-2390571174:235,integrat,integrating,235,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/893#issuecomment-2390571174,1,['integrat'],['integrating']
Integrability,"I'm getting a similar segemntation fault with a tblastn-style search against a taxonomy-annotated target database derived from BLAST NT. Interestingly, it looks like the prefilter step calculates the memory consumption at 60T but jumps right into prefiltering instead of splitting the database to handle the ~620G memory limit. I also used the --compressed flag, but will check to see if removing that flag fixes the problem for me too. @milot-mirdita It may be worth re-opening this issue. ```; search query_db/db target_db/db result_db/db /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search -s 6 -a --num-iterations 1 --use-all-table-starts 1 --compressed 1 --split-memory-limit 618475290624 --threads 96 . MMseqs Version: 45111b641859ed0ddd875b94d6fd1aef1a675b7e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 6; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 589824T; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:938,wrap,wrapped,938,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510,1,['wrap'],['wrapped']
Integrability,"I'm running easy-search for a set of fasta files. For the majority of files everything is fine, for a small subset i'm getting the same error after prefiltering. . That's an example of my command: `../bin/mmseqs/bin/mmseqs easy-search s01_complete_refseq_representative_fasta_DEVIDED/mmseqs_rep_d_2.fa mmseqs/mmseqs_clu_rep_db/DB mmseqs_test.tsv tmp1 --format-mode 4 --num-iterations 5 -e 1e-5 --format-output query,target,fident,alnlen,mism; atch,gapopen,qstart,qend,tstart,tend,evalue,bits --max-seqs 1000000 -s 6`. ## MMseqs Output (for bugs). ```; MMseqs Version: b22d5f6d02cb27ebc2cd931d8d20fe92ff54b8a8; Substitution matrix aa:blosum62.out,nucl:nucleotide.out ; Add backtrace false; Alignment mode 3 ; Alignment mode 0; Allow wrapped scoring false ; E-value threshold 1e-05; Seq. id. threshold 0 ; Min alignment length 0; Seq. id. mode 0 ; Alternative alignments 0; Coverage threshold 0 ; Coverage mode 0; Max sequence length 65535 ; Compositional bias 1; Compositional bias 1 ; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800 ; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 16; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 6; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 1000000; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1 ; Profile E-v",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/774:732,wrap,wrapped,732,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/774,1,['wrap'],['wrapped']
Integrability,"I'm trying to create clusters of a number of pre-clustered databases, all stored in multi-fasta files. The `createdb` command seems to runs fine on all files, however, the `cluster` command leads to an error on some, but not all, files:. ```; Invalid database read for database data file=tmp_clusters/DB, database index=tmp_clusters/DB.index; getData: local id (27) >= db size (27); Rescore diagonals.; Could not open data file tmp_clusters/tmp/linclust/pref!; Could not open data file tmp_clusters/tmp/linclust/pref_rescore1!; awk: can't open file tmp_clusters/tmp/linclust/pre_clust.index; source line number 1; ```. This error is followed by many other errors, all related to being unable to open data files (e.g. `Could not open data file tmp_clusters/tmp/linclust/pref!`). The error seems to depend on the sequences in the file. For example, if I merge two of the fasta-files, one of which runs without errors and one which leads to above error, the error is reproduced. I have not been able to identify which feature in the sequences leads to the error. Before every run of mmseqs, I delete all temp files. Regarding my environment:; * OSX 10.11.3; * Git commit - 3ff5b8e26c93420c04c589fc663734ee8c964c3c; * Self compiled . I've attached two files, one that leads to errors in my build, and one that does not. Hope you can help. . [DB_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089709/DB_errors.txt); [DB_no_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089710/DB_no_errors.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/35:797,depend,depend,797,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/35,1,['depend'],['depend']
Integrability,"I'm upgrading a snake workflow that uses an older version of mmseqs (bc080d753c826a3f9153310f9e12b66976fba905) to a newer one (b0b8e85f3b8437c10a666e3ea35c78c0ad0d7ec2). I'm having some trouble getting old commands to work with the newer version. For the taxonomy call:; ```; mmseqs taxonomy <i:queryDB> <i:targetDB> <o:taxaDB> <tmpDir> [options]; ```; I'm using a targetDB that was generated with the old version, so I wondered if that could be an issue. But remaking the targetDB with the new version didn't fix it in a previous attempt. ## Expected Behavior. Convert alignment results into an .m8 formatted file. Exactly like shandley was trying to do in this issue:; https://github.com/soedinglab/MMseqs2/issues/226. ## Current Behavior. I'm following the commands given in the solution to this issue here: https://github.com/soedinglab/MMseqs2/issues/226. While the taxonomy call works fine, the convertalis call fails with the message:; [Backtrace cigar is missing in the alignment result. Please recompute the alignment with the -a flag. ## Steps to Reproduce (for bugs). Used the commands given as the solution to this issue:; https://github.com/soedinglab/MMseqs2/issues/226. This has worked fine for the older version of mmseqs2, but no longer works with the new version. This taxonomy call produces output files in taxonomyResult with 10 columns:. ```; mmseqs taxonomy \; seqtable_queryDB \; targetDB \; taxonomyResult \; tmp_aa \; -a \; -s 7 \; --tax-output-mode 1 \; --search-type 2 \; --threads 16; ```. Next I try to convert the taxonomyResult to .m8 using mmseqs convertalis, which fails. ```; mmseqs convertalis \; seqtable_queryDB \; targetDB \; taxonomyResult \; aln.m8 \; --format-output ""query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln""; ````. ## MMseqs Output (for bugs). [Backtrace cigar is missing in the alignment result. Please recompute the alignment with the -a flag.; Command: mmseqs align results/results/mmseqs_aa_out/seqtable_q",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/614:933,message,message,933,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/614,1,['message'],['message']
Integrability,"I've been evaluating how adding pseudocounts change the sensitivity of profile searches. ```; mmseqs msa2profile msa_db/msa_db profile_db/profile_db --match-mode 1 --match-ratio 0.5 --threads 64; mmseqs msa2profile msa_db/msa_db profile_db_pseudo/profile_db --match-mode 1 --match-ratio 0.5 --threads 64 --pca 0.3; ```. I noticed, however, that the search results are different depending on the version of MMSeqs2. If I use the latest GitHub/Conda release (`13-45111`), the search on the `profile_db_pseudo` will provide more results (as expected, given that the alignments are not very diverse). If I use a newer release (`92deb92fb46583b4c68932111303d12dfa121364`), the search on the database with pseudocounts will results in *less* hits. ```; mmseqs easy-search --threads 64 fragment_sequences.faa profile_db_pseudo/profile_db mmseqs2_results_pseudo tmp; ```. Were there any changes in MMSeqs2's behavior regarding pseudocounts? Also, are there recommendations about how to use the `--pca` parameter?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/547:378,depend,depending,378,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/547,1,['depend'],['depending']
Integrability,"I've been trying to perform some basic tests with MMSeqs2 and have encountered an issue where I repeated get the following error message:. Init data structures...; Compute score only.; Could not open data file [path_to_dir]/mmseqs_tmp/pref_4!. The ""[path_to_dir]/mmseqs_tmp/"" directory contains two temporary files (pref_4.index_tmp_0.0 and pref_4_tmp_0.0) along with a blastp.sh script. I'm not using any advanced options for my search, and both input databases are (as far as I can see) formatted correctly. Maybe I'm overlooking something embarrassingly simple?. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/11:129,message,message,129,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/11,1,['message'],['message']
Integrability,"I've got a file with about 200,000 sequences. When running mmseqs2 `easy-cluster` like this:; ```; mmseqs easy-cluster test.fasta out.db tmp --min-seq-id 1.00 -c 0.90 -s 8 --max-seqs 1000 --cluster-mode 1 --threads 6; ```; the program crashes with:; ```; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007f4554305010 ***; ```; If I subselect some sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time f",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:579,depend,depend,579,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['depend'],['depend']
Integrability,"If I compile with GCC 10 (just make USE_GCC=yes in FreeBSD ports), it does not hang with only SSE. I'd hate to add such a heavy dependency to the port, though, so it would be good to figure out what's going wrong with clang 10. The PowerEdge has 32 hyperthreads and 64G RAM. Is 2G/thread not enough for SLICEPROFILE? If not, how can I limit the number of threads in the regression tests? It doesn't seem to respect OMP_NUM_THREADS=16. I still see CPU spike to > 3000%. I'll test your patches later. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240:128,depend,dependency,128,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240,1,['depend'],['dependency']
Integrability,"If I run `mmseqs taxonomy` with version 9.d36de on a taxonomy database created with version 8.fac81, then I get the following error:. ```; [...]; Filter by numerical comparison to first row.; [=================================================================] 121.87K 21m 16s 334ms; Time for merging files: 1h 14m 39s 541ms; Time for processing: 2h 14m 15s 378ms; terminate called after throwing an instance of 'std::out_of_range'; terminate called recursively; terminate called recursively; what(): map::atAborted; Error: Lca died; ```. The database was created from uniclust90_2018_08.tar.gz. If I instead run `mmseqs taxonomy` with version 8.fac81, then the job finishes successfully. It appears that `mmseqs taxonomy` is not backwards-compatible, but it has no checks on the database to warn the user of this. Instead, the user gets a cryptic error message.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221:853,message,message,853,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221,1,['message'],['message']
Integrability,"In total I have 2.2M sequences in the target DB and I set --max-seqs=3000000. It still prints the message ""...too many hits"". What else am I missing?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407046555:98,message,message,98,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407046555,1,['message'],['message']
Integrability,Is there an error message or anything else? MMseqs2 works fine on my Apple Silicon MacBook,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2070153790:18,message,message,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2070153790,1,['message'],['message']
Integrability,It depends on your use case. If your profiles are query centric than you can use mmseqs to create the profiles. Mmseqs alignment is a center star alignment which does not allow gaps in the query sequence. . mmseqs search query target aln tmp -a; mmseqs result2profile query target aln prof . If you need a protein family representation than creating profiles from MSAs makes more sense. . mmseqs search query target aln tmp; mmseqs createseqfiledb target aln alnseq; mmseqs apply alnseq alnseqmsa — msaaligner,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/108#issuecomment-444727789:3,depend,depends,3,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/108#issuecomment-444727789,1,['depend'],['depends']
Integrability,"It doesn't look like the MSAs for the KOFAM profiles are available for download, we can't create profiles for MMseqs2 without the original MSAs. I don't have specific recommendations for replacing HMMER. Generally, a high sensitivity search against the pfam profiles should work pretty well. As these are different algorithms, MMseqs2 will never 100% match HMMER or the other way around, so it depends on your application if this is good enough or not. The searching against the Pfam profiles with `--exhaustive-search` will use a different search mode that might be more sensitive since it internally swaps Pfam database to the query side and can generate similar k-mers based on the Pfam profiles, but we never thoroughly tested this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/771#issuecomment-1785450124:394,depend,depends,394,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/771#issuecomment-1785450124,1,['depend'],['depends']
Integrability,It would help if you could provide a log file. So I can see which module is slow. . The database does not stay necessarily memory. The OS can reuse the memory. The memory just got memory mapped by mmseqs2 (depending on the --db-load-mode).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-507070096:206,depend,depending,206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-507070096,1,['depend'],['depending']
Integrability,"MMseqs2 does not know about SLURM memory limits, you can force the prefilter to use less memory (and process the search in multiple steps) with `--split-memory-limit`:. ```; mmseqs taxonomy --search-type 3 --split-memory-limit 100G ...; ```. Alternatively, you can increase the SLURM memory limit to allow it to use everything. `--split-memory-limit` should be about 80% of the total RAM you are willing to commit to MMseqs2. So in your case I took ~80% of 144GB (144179200 in the SLURM error message).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/232#issuecomment-536568505:493,message,message,493,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232#issuecomment-536568505,1,['message'],['message']
Integrability,"MMseqs2 doesn't have an inbuilt module to merge paired-end reads.; You could use plass `mergereads` module which has integrated [flash](http://ccb.jhu.edu/software/FLASH/index.shtml), to merge paired-end reads. The output from plass can be directly consumed by the MMseqs2 taxonomy.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/436#issuecomment-815852585:117,integrat,integrated,117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/436#issuecomment-815852585,1,['integrat'],['integrated']
Integrability,"Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-patter",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:3055,wrap,wrapped-scoring,3055,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability,"Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:2426,wrap,wrapped-scoring,2426,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['wrap'],['wrapped-scoring']
Integrability,"Maybe I'm going crazy, but this really does seem like a bug. Perhaps there's something obvious here, but I'm not seeing it. ## Expected Behavior; Returning hits with e-values less than specified e-value threshold on the command line when using easy-search. ## Current Behavior. e-value threshold becomes zero when specified e-value < 1E-45. `mmseqs easy-search da7915829ba14fe0a86c3cc539a89f43.constructs.fa /db/mmseqs/uniprotkb_swiss-prot result.m8 /dev/shm/tmp3343 -e 1E-46`. ```; MMseqs Version: 12.113e3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0; Seq. id. threshold 0; Min alignment length 0; ```. ## Steps to Reproduce (for bugs); Run an easy-search. Specift an e-value threshold < 1E-45; ; ## MMseqs Output (for bugs); ```; MMseqs Version: 12.113e3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequenc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/379:611,wrap,wrapped,611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/379,2,['wrap'],['wrapped']
Integrability,"Maybe this is by design, but the (helpful) message about `--cluster-reassign` makes it seem like a flag as opposed to an option, i.e. have to specify `--cluster-reassign 1` to turn it on. Here is a suggestion... (fwiw I haven't tried this option yet because the install from conda on my machine with my current dataset is giving me an error `Alignment format is not supported! ] 0.00% 1 eta - Error: Clustering step 2 died Error: Search died`, but I will investigate more on my end to see if it's an issue with my version/files)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/329:43,message,message,43,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329,1,['message'],['message']
Integrability,"Message ""Error: there must be an error: ~"" appears when mmseqs cluster/easy-cluster is used",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/363:0,Message,Message,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363,1,['Message'],['Message']
Integrability,"Metaclust, a database clustered by linclust protocol in MMseqs2, is becoming smaller with each release. Metaclust95 2017_01 has 97G.; Metaclust 2017_05 has 60G.; Metaclust 2018_01 has 28G only.; Shouldn't the number of Metaclust entries increase with time?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/54:44,protocol,protocol,44,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/54,1,['protocol'],['protocol']
Integrability,"My point of view is that of a computational biologist who is both an end-user and developer of software that includes mmseqs as a dependency. As a developer myself, I view end users who are sophisticated enough to say things about builds as a fairly precious resource. So let me make my point one more time before I accept your decision and move on. . While I admit there are things that suck about semantic versioning, it has two outstanding qualities: (1) it has a controlled syntax that is widely used, and (2) it's easy to determine whether software that follow the pattern is older, newer, or equal to a reference version that someone else tested. Among the three recipes shown above and the binaries available for download, it seems that there are 3 different versioning schemes in use that will show up as the output of ""mmseqs version"" (12.11e3, 12-11e3, and the full SHA1). If I add my software (which uses VERSION_OVERRIDE=12.0 internally for compatibility with python semantic versioning), that's a 4th. My install code can't easily determine if a binary of unknown provenance is lower, equal, or higher than the recommended version. Neither can any downstream users without the sophistication to look at your repository's version tags. Using semantic versioning as a standard (that can be overridden by packagers or users if needed) would avoid this issue. To finish with something nice, your build system is well-done and build are smooth on the various linux and macos BigSur platforms I've tested it on. Feel free to close this issue after reading.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559:130,depend,dependency,130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559,1,['depend'],['dependency']
Integrability,"My taget database contains about 2M sequence (from ~120 species) and my query database contains about 10K sequence (one species). For blastp, I use blastp command with evalue cutoff 0.01 as following:; > blastp -db $db_blastp/AllDB -query $spe_fasta -out $spe_id.blastp.txt -evalue 0.01 -outfmt 6 -num_threads $num_cores; ; For mmseq2, I use ; > mmseqs search $mmseq_db_dir/$spe_id $mmseq_db_dir/AllDB $search_dir/$spe_id $tmp_dir --threads $num_cores -s 7.5 -e 0.01; Then I convert them to outfmt6, ; > mmseqs convertalis $mmseq_db_dir/$spe_id $mmseq_db_dir/AllDB $search_dir/$spe_id $outfmt6/$spe_id.mmseq.txt. Then I count the number of lines of the two output files. I noticed that blastp has about 3 times hits than mmseqs. . The message “…too many hits” occurs very frequently and therefore I wondered mmseqs could identify the hits, but the results may be truncated.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407016364:735,message,message,735,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407016364,1,['message'],['message']
Integrability,"NFO | __main__:main:96 - Command executed: Namespace(infile='Input/ROSA-like/rosa-like.fasta', outdir='Output/ROSA-like', database='Databases', threads='1', force=True, prefix='Default', locustag='ROSA-like', gene_predictor='default', meta=False, split=False, coding_table='11', evalue='1E-05', fast=False, mmseqs2_only=False, meta_hmm=False, dnaapler=False, custom_hmm='', genbank=False, terminase=True, terminase_strand='pos', terminase_start='1', skip_extra_annotations=False, skip_mash=False, minced_args='', mash_distance=0.2, citation=False); 2024-04-23 09:26:28.676 | INFO | __main__:main:97 - Repository homepage is https://github.com/gbouras13/pharokka; 2024-04-23 09:26:28.676 | INFO | __main__:main:98 - Written by George Bouras: ***@***.***; 2024-04-23 09:26:28.676 | INFO | __main__:main:100 - Checking database installation in Databases.; 2024-04-23 09:26:28.677 | INFO | __main__:main:103 - All databases have been successfully checked.; 2024-04-23 09:26:28.677 | INFO | __main__:main:119 - Checking dependencies.; 2024-04-23 09:26:28.777 | INFO | input_commands:check_dependencies:379 - Phanotate version found is v1.6.5; 2024-04-23 09:26:28.778 | INFO | input_commands:check_dependencies:388 - Phanotate version is ok.; Traceback (most recent call last):; File ""/Users/Nico/miniforge3/envs/HieVi/bin/pharokka.py"", line 7, in <module>; exec(compile(f.read(), __file__, 'exec')); File ""/Users/nico/Documents/myCore/Bioinformatics/pharokka/bin/pharokka.py"", line 489, in <module>; main(); File ""/Users/nico/Documents/myCore/Bioinformatics/pharokka/bin/pharokka.py"", line 128, in main; ) = check_dependencies(args.skip_mash); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/Users/nico/Documents/myCore/Bioinformatics/pharokka/bin/input_commands.py"", line 407, in check_dependencies; mmseqs_major_version = int(mmseqs_version.split(""."")[0]); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ValueError: invalid literal for int() with base 10: '15-6f452'. > Le 22 avr. 2024 à 19:17, Milot Mirdita ***@***.***>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2071616310:1609,depend,dependencies,1609,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2071616310,1,['depend'],['dependencies']
Integrability,"No error occurs when I run with the following command:. `mmseqs createdb ./*.faa .. /mmseqs_DB/DB_1`; `mmseqs linclust DB_1 linclu_1 ../all_reference_protein_faa --min-seq-id 1 --cov-mode 1 -c 0.8 --kmer-per-seq 80 --remove-tmp-files --threads 25`; `mmseqs createsubdb linclu_1 DB_1 DB_1_clu_rep`; `mmseqs convert2fasta DB_1_clu_rep DB_1_clu_rep.fasta`. However, when I generate multiple databases and merge them, an error occurs:. `mmseqs createdb ../DB1/*.faa .. /mmseqs_DB/DB_1`; `mmseqs createdb ../DB2/*.faa .. /mmseqs_DB/DB_2`; `mmseqs mergedbs DB_1 ../mmseqs_DB_merge/DB_merge DB_2`; `mmseqs linclust DB_merge linclu_merge ../all_reference_protein_faa --min-seq-id 1 --cov-mode 1 -c 0.8 --kmer-per-seq 80 --remove-tmp-files --threads 25`; `mmseqs createsubdb linclu_merge DB_merge DB_merge_clu_rep`. No errors have been generated so far.; An error occurs when I run the following code:. `mmseqs convert2fasta DB_merge_clu_rep DB_merge_clu_rep.fasta`. The error message is as follows:; Database DB_merge_clu_rep needs header information. Is it `mmseqs mergedbs DB_1... /mmseqs_DB_merge/DB_merge DB_2` Is there an error in this step?. Thank you for your reply!. With best wishes!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/819:968,message,message,968,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/819,1,['message'],['message']
Integrability,"No worries, happy to have double checked that all dependencies are in order :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895357636:50,depend,dependencies,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895357636,1,['depend'],['dependencies']
Integrability,"Oh, great to hear that you could find parameters! I would be interested how you benchmark and what kind of parameters you used in the end. What do you mean by controls? It would be easy to include gap open and extend costs to MMseqs2. But I think it would make more sense if the gap costs depends on the diversity of the profiles. More diverse profiles need lower gap open and extend costs compared to less divers once. So one global parameters might not fit all profiles equally. This is still an open point. We do not explicitly encode the iterations in the results. But we append hits after each iteration to the previous results. So you could recognize iteration changes by comparing the e-value to previous hits. A lower e-values compared to the previous hits indicates a new iteration.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/106#issuecomment-407427261:289,depend,depends,289,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/106#issuecomment-407427261,1,['depend'],['depends']
Integrability,"Okay I am not sure how to reproduce the issue. It doesn't crash here. ; Does it crash consistently? . Can you please repeat only the linclust call with the same tmp files:; ```; mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707:578,wrap,wrapped-scoring,578,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707,1,['wrap'],['wrapped-scoring']
Integrability,"One other thing, not sure if helpful but to me it seems somewhat indicative. For mmseqs search, I'm getting an t=aN+b kind of dependence, where t is runtime and N number of provided sequences in the fasta file. The a factor seems actually quite fine, it's the b that makes it problematic. Otherwise it would be ~5 seconds to search through uniref for one 1:1 complex (150+70 aa), and presumably ~15 seconds for envdb, assuming linear scaling. Together with the non-search steps, that would fit into runtime we're getting from the colabfold server. ![image](https://user-images.githubusercontent.com/16358238/213735099-efefb75e-072d-44e3-abe1-f8e8a86803ce.png). If you know the environment on which the colabfold server is running and library versions it was compiled against (or any other machine on which expected runtime is experienced), I can try to reproduce it in more similar conditions.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1398561095:126,depend,dependence,126,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1398561095,1,['depend'],['dependence']
Integrability,"PEAR 65; FDDTDS 59; ADYTFS 55; LITRGY 55; GPGGTT 44; Time for index table init: 0h 0m 2s 668ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 20942; Target db start 1 to 20942; [=================================================================] 20.94K 0s 928ms. 1.256278 k-mers per position; 118 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 8 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 51ms; Time for processing: 0h 0m 6s 669ms; align ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/pref_step0 ./mmseqs_output/tmp/5351426679731834765/aln_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 20942 type: Aminoacid; Target database size: 20942 type: Aminoacid; Calculation of alignments; [=================================================================] 20.94K 15s 380ms; Time for merging to aln_step0: 0h 0m 0s 75ms; 172065 alignments calculated; 67554 sequence pairs passed the thresholds (0.392607 of overall calculated); 3.225766 hits per query sequence; Time for ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:21376,wrap,wrapped-scoring,21376,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped-scoring']
Integrability,"P_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; Thanks in advance,; Yehor. ## MMseqs Output; search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 --start-sens 1 --sens-steps 3 -s 12 --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	inf; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	20; Gap extension cost 	3; Zdrop 	40; Threads 	28; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:VTML40.out,aa:VTML40.out; Sensitivity 	12; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	11011101; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort res",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:2435,wrap,wrapped,2435,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['wrap'],['wrapped']
Integrability,Perhaps one option would be to raise an error in `convertmsa` with a helpful message when the user specifies an identifier field that is absent from the stockholm file?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/96#issuecomment-397010828:77,message,message,77,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96#issuecomment-397010828,1,['message'],['message']
Integrability,"Please run only the `rescorediagonal` module in GDB or it won't be able to catch the crash:; ```; gdb --args mmseqs rescorediagonal /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0; --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649893743:544,wrap,wrapped-scoring,544,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649893743,1,['wrap'],['wrapped-scoring']
Integrability,"Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time for processing: 4h 41m 10s 259ms; rescorediagonal /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3; ```; ^^^^^^; There is no more printed info after the last line in the above output, and it got stuck for more than 12h. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `cab0e83840f5afa0632aada56e6bacaf46211c33`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:5389,wrap,wrapped-scoring,5389,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['wrap'],['wrapped-scoring']
Integrability,"Recently I came across the tool you have developed: MMseqs2 and I have tested for the protein search. It is very fast comparing to blastp. However, I noticed the number of hit is about 1/3 of the blastp hit if I use the most sensitive parameter -s 7.5 and the same evalue cutoff 0.01. The target database is about 2M sequence and the query is 10K sequence. I noticed a lot of warning message was printed ""Sequence 131 produces too many hits. Results might be truncated”. I have tried to change other parameters, such as —max-accept, but the situation does not change. It would be great if you could provide some information about how to produce all the hits as close as possible to blastp (with the same evalue cutoff), but much faster. Thanks.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107:384,message,message,384,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107,1,['message'],['message']
Integrability,"Replacing the `util/regression/samtools/samtools.sh` with the following works:; ```; #!/bin/sh -e; SELF=""$( cd ""$(dirname ""$0"")"" ; pwd -P )""; SUFFIX=""""; case ""$(uname -m)"" in; arm*|aarch*) SUFFIX=""-aarch64"" ;;; ppc*) SUFFIX=""-ppc64le"" ;;; esac; case ""$(echo ""$OSTYPE"" | tr '[:upper:]' '[:lower:]')"" in; linux*) exec ""$SELF/samtools-linux$SUFFIX"" ""$@"" ;;; darwin*) exec ""$SELF/samtools-darwin"" ""$@"" ;;; msys*|cygwin*) exec ""$SELF/samtools-windows"" ""$@"" ;;; esac; samtools ""$@""; ```; I don't want to push that commit that right now since we are in the process of some bigger refactoring. `SLICEPROFILE` is a bit fickle about RAM available per core used. That seems to have been the problem:; ```; [=======mem_align could not allocate memory.; ```. I also fixed the bogus error messages in https://github.com/soedinglab/MMseqs2/commit/15ace29a276be54fee6b9aedd7a1e814a3c7769b",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414:775,message,messages,775,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414,1,['message'],['messages']
Integrability,Requesting from the current urls with ftp as protocol gives me error as follows:. `Invalid request. Privoxy doesn't support FTP.`,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/496:45,protocol,protocol,45,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/496,1,['protocol'],['protocol']
Integrability,"Running easy-cluster pipeline on a fasta file of protein sequences. Getting 575 messages saying ""Cannot extract identifier from entry nnnnn"" out of 37k input proteins. ; Is this an error or just a warning? ; Are those proteins being clustered or ignored? ; How can I figure out which proteins in my input file are causing the problem so I can fix it? ; Is there a description of the required fasta header format for proper identifier extraction in the manual (I didn't see it)?. Ubuntu 20.04; mmseqs2 v 13.45111. Thanks,; Bill",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/804:80,message,messages,80,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/804,1,['message'],['messages']
Integrability,So I traced back where this message comes from. Seems like the current cluster reassignment procedure will only work with greedy incremental clustering. Not sure if it can be made to work with other cluster modes easily. I guess it should automatically choose greedy if `--cluster-reassign` is used.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-776195438:28,message,message,28,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-776195438,1,['message'],['message']
Integrability,"Sorry I was traveling. I don't see anything out of the ordinary in your screenshot. ; I still don't really have an idea whats going on. I repeated the UniRef search with your query on the MSA server:; ```; Command being timed: ""mmseqs search mmseq_in_db uniref30_2202_db mmseq_in_res mmseq_in_tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000""; User time (seconds): 13.10; System time (seconds): 21.13; Percent of CPU this job got: 99%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:34.23; Average shared text size (kbytes): 0; Average unshared data size (kbytes): 0; Average stack size (kbytes): 0; Average total size (kbytes): 0; Maximum resident set size (kbytes): 19188072; Average resident set size (kbytes): 0; Major (requiring I/O) page faults: 0; Minor (reclaiming a frame) page faults: 9091215; Voluntary context switches: 57; Involuntary context switches: 503; Swaps: 0; File system inputs: 0; File system outputs: 8888; Socket messages sent: 0; Socket messages received: 0; Signals delivered: 0; Page size (bytes): 4096; Exit status: 0; ```. One thing we do differently since we still have enough spare CPU capacity on the server is enable some limited multithreading and parallel processing. We use `--threads 2`, which will hide quite a bit of overhead in your use-case:; ```; User time (seconds): 12.32; System time (seconds): 20.86; Percent of CPU this job got: 132%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.12; ```. And we also start the env-db and template search in parallel to the expand-align steps. ; (`path.colabfold.parallelstages` parameter in the API server). This will hide quite a bit of latency. However, the initial search is still a lot faster for us despite worse CPU/RAM specs. . Can you check if `vmtouch` has actually but everything into RAM? `htop` should look something like this:; ```; root 20 0 605G 605G 605G S 0.0 15.0 6:22.98 /home/steineggerlab/miniforge3/bin/vmtouch -f -t -l -m 4000 colabfold_envdb_202108.idx pd",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953:973,message,messages,973,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953,2,['message'],['messages']
Integrability,Sorry for bothering again. I thought that in order to provide a reproducible example here are more details: ; I assembled a genome with shovill like this ` shovill --outdir assembly --R1 SRR4213076_1.fastq.gz --R2 SRR4213076_2.fastq.gz`; [Here are the fastq files](https://www.ebi.ac.uk/ena/browser/view/SRR4213076?show=reads); I used prokka to annotate this genome and used 2 toy examples with just 3 sequences. ; [Here are the assembly and the genome.faa genome.fna files [just 3 sequences in each file]; ](https://drive.google.com/drive/folders/1iaLnhPWb859QnTMO-ZwSgHwm_J-mPiuQ?usp=sharing). I tried this routine either using nucleotides or amino acids. . ```; mmseqs createdb SRR* sample_db; mmseqs createdb genome.faa collection_db; # mmmseqs createdb genome.ffn collection_db # alternatively using nucleotides; mseqs cluster collection_db collection_clu TemPoral; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map tempora --threads 7; mmseqs convertalis sample_db collection_db sample_map result.tsv; mmseqs summarizealis sample_map sample_map_summary; mmseqs createtsv sample_db collection_db sample_map_summary sample_map_summary.tsv; ```. This works fine with amino acids but [as shown in the log included in the post above] it doesn't work when using directly nucleotides or the ffn file. I chose MMseqs2 due to its speed and the scale of the task in our case. I thought it would be better to build the catalog of genes with nucleotides so for the search I though searching nuc against nuc. Can you help me with this? Thanks in advance,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/507#issuecomment-978222623:609,rout,routine,609,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507#issuecomment-978222623,1,['rout'],['routine']
Integrability,Sorry for the delay. I was dealing with some private stuff :/. I would drop 32-bit support. Even with the patch it doesn't pass the integration tests and tracking down why would be very low priority as we require a >4GB address space for everything except small databases anyway.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505:132,integrat,integration,132,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505,1,['integrat'],['integration']
Integrability,"Sorry for the late reply, . Currently the version of mmseqs I have is `MMseqs2 Version: 13.45111`. The messages I get for the functions are. ```; --msa-format-mode INT Format MSA as: 0: binary cA3M DB; 1: binary ca3m w. consensus DB; 2: aligned FASTA DB; 3: aligned FASTA w. header summary; 4: STOCKHOLM flat file [0]; ```; While for `mmseqs unpackdb` I have; ```; usage: mmseqs unpackdb <i:DB> <o:outDir> [options]; By Milot Mirdita <milot@mirdita.de>; options: common:; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; ```. Do you think that just updating the version will solve the problem? I downloaded the library using the suggested conda command of the github page.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471607391:103,message,messages,103,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471607391,1,['message'],['messages']
Integrability,"Sorry for the late reply. Using wrapped-scoring was originally only supported with `RESCORE_MODE_HAMMING` by now, it should work with all rescore modes, but the error message you have mentioned was unfortunately left in. At that point in the code, `rescorediagonal` is always called with `RESCORE_MODE_ALIGNMENT`, whereas linclust always calls rescorediagonal with `RESCORE_MODE_HAMMING`, which is why you did not see this issue using linclust. I have removed the error message now. Can you check again with the latest version (bfc6f85)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/509#issuecomment-986305087:32,wrap,wrapped-scoring,32,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509#issuecomment-986305087,3,"['message', 'wrap']","['message', 'wrapped-scoring']"
Integrability,"Sorry, I misunderstood you. Any combination of profiles and nucleotides will not currently. Adding nucleotide profile support to HHblits would be a far more difficult task than doing that in MMseqs2. I would not recommend going that route.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-750566414:233,rout,route,233,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-750566414,1,['rout'],['route']
Integrability,"Sounds like a plan!. Building a plugin is a pretty big lift as it requires close integration with Qiime 2 [semantic types](https://docs.qiime2.org/2019.10/semantic-types/). But at least the [docs](https://docs.qiime2.org/2019.10/plugins/developing/) are good! . I don't think I'm the right person to lead development, but I would be happy to contribute methods to the plugin.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580295404:81,integrat,integration,81,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580295404,1,['integrat'],['integration']
Integrability,"TATCCCCTCGAGG	12523; CATAAAAACCGAGGG	12298; TAAAAACCCCGGGGG	12038; TTTTATTTTATTCTT	9764; CTTAGGGGTTACGTT	9670; GTGTAATCCCTCGAG	9663; CTGAAACCATTCTCG	9602; Time for index table init: 0h 2m 35s 948ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1604546; Target db start 1 to 802273; [=================================================================] 1.60M 1h 46m 59s 76ms. 0.996125 k-mers per position; 14106896 DB matches per sequence; 1161942 overflows; 277 sequences passed prefiltering per query sequence; 300 median result list length; 3973 sequences with 0 size result lists; Time for merging to pref: 0h 0m 0s 974ms; Time for processing: 1h 49m 41s 539ms; rescorediagonal tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/pref tmp/16479300059278292880/aln_ungapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.85 -a 0 --cov-mode 0 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 112 --compressed 0 -v 3 . [=================================================================] 1.60M 14m 50s 51ms; Time for merging to aln_ungapped: 0h 0m 1s 439ms; Time for processing: 0h 15m 7s 16ms; subtractdbs tmp/16479300059278292880/pref tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/pref_subtract --threads 112 --compressed 0 -v 3 . subtractdbs tmp/16479300059278292880/pref tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/pref_subtract --threads 112 --compressed 0 -v 3 . Remove tmp/16479300059278292880/aln_ungapped ids from tmp/16479300059278292880/pref; [=================================================================] 1.60M 1s 175ms; Time for merging to pref_subtract: 0h 0m 1s 400ms; Time for processing: 0h 0m 5s 506ms; align tmp/16479300059278292880/query_seqs tmp/1647930005",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:13849,wrap,wrapped-scoring,13849,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['wrap'],['wrapped-scoring']
Integrability,"Thank you @gieses for the reply! . Just for a context, when I proposed this issue (months ago) I was trying to replace the msa pairing workflow in alphafold. I got stuck when I had to deal with the taxonomy labels. This is particularly tricky when I wanted to use uniref50 instead of 30. . I finally chose to integrate a new pipeline using the monomer msa from mmseqs, and pairing them with alphafold-multimer's python code. To link the searched msas with taxonomy labels, I extracted a map between taxonomy labels and uniref ids from uniref50 myself.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/628#issuecomment-1448304253:309,integrat,integrate,309,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/628#issuecomment-1448304253,1,['integrat'],['integrate']
Integrability,"Thank you for the help, I missed the part about the index being fully loaded in the memory (instead I read in the article that a db used multiple times should be indexed, which sounds broader than the niche use case you describe). . As #519 mentions, what is the difference between `concat` and `merge` ? I guess a sequence present in both `DB` will be search only once and reported with both `qset` with `merge` and twice in `concat` ? That would a huge advantage for my work as I have replicates. Also, is there a way to determine how big the index will be ? I suppose it depends on the `max-seq-len` parameter ?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734289077:574,depend,depends,574,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734289077,1,['depend'],['depends']
Integrability,"Thank you very much for answering so fast.; Just another doubt I have. ; Does this change the scores calculated for the specific position compared to a Psiblast PSSM? ; I don't know if it is correct but besides counting the frequencies of each amino acid in that position to calculate the score, PSSMs also add a pseudo count that depends on the identity of the aminoacid in that position because it is based on blossum62, so if the position is not the initial one but rather a consensus the pseudocount will differ right?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/847#issuecomment-2136635601:331,depend,depends,331,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/847#issuecomment-2136635601,1,['depend'],['depends']
Integrability,"Thank you! Hmm, so I get this message:. MMseqs2 Version: GITDIR-NOTFOUND. I looked through the other Q&A, it looks like this might have been because I downloaded a ZIP folder? (I unfortunately don't recall because I had downloaded mmseq 9 months ago in Feb 2021.)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965833044:30,message,message,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965833044,1,['message'],['message']
Integrability,"Thank you! Sorry it was premature of me to make a PR without understanding the issue, and I can see I am breaking something. However, I haven't yet got your workaround to work (I get the same ""Invalid"" messages, even after running with `--identifier-field 0 ` flag), I think this is because my stockholm header is only 2 lines (no AC or ID fields)? If these are compulsory fields then the problem is not yours but with the way I generate the stockholm alignment via Biopython? If so, then let me know I can fix this in Biopython. My input file looks like this generated from a fasta MSA:. ```; $ head -n 3 TEST.sth; # STOCKHOLM 1.0; #=GF SQ 19; db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299 MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/96#issuecomment-396652988:202,message,messages,202,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96#issuecomment-396652988,1,['message'],['messages']
Integrability,Thanks a lot for reporting this bug. ; Commit https://github.com/soedinglab/MMseqs2/commit/138ebea099c33a2fbc3c282235b1c839bae1fb43 should now print an error message.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/41#issuecomment-321148628:158,message,message,158,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41#issuecomment-321148628,1,['message'],['message']
Integrability,"Thanks a lot for the help, @milot-mirdita . Build PROFILEDB and search with this was successful.; final steps:; > mmseqs search PROFILEDB /databases/fadb/freeze/all.mmseqs pbp.found_with_profile tmp --threads 10 -a -c 0.8 --cov-mode 2 --add-self-matches ; > mmseqs convertalis PROFILEDB /databases/fadb/freeze/all.mmseqs pbp.found_with_profile pbp.found_with_profile.tsv . At this point, everything okay. ; The step below also was performed nicely without errors. ; > mmseqs extractalignedregion PROFILEDB /databases/fadb/freeze/all.mmseqs pbp.found_with_profile pbp.found_with_profile.ALIGNEDREGION . The crash happens here:; > mmseqs convert2fasta pbp.found_with_profile.ALIGNEDREGIONS pbp.found_with_profile.ALIGNEDREGIONS.fa . With this message:; ```; Program call:; convert2fasta pbp.found_with_profile.ALIGNEDREGIONS pbp.found_with_profile.ALIGNEDREGIONS.fa . MMseqs Version: 	7-4e23d; Use ffindex header	false; Verbosity 	3. Could not open data file pbp.found_with_profile.ALIGNEDREGIONS!; ```. But I realised maybe I did everything wrong. . What I want, actually, is the MSA for each cluster with only aligned regions. ; Also, I want the MSA of aligned regions from a search result. The deal is: I have 501 queries single domain, I would to use this against a 17M sequences DB, since the matches probably have at least 1 region contains the same domain as the query, I would like the MSA or even a sequence DB itself contain **only the regions of the match**. ; Extracting only the region of the matches allow me to infer more accurate alignments and phylogeny. Also allow me build specifics models. . Could you provide me a simple workflow to this task?. Thanks in advance.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/153#issuecomment-458988413:741,message,message,741,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/153#issuecomment-458988413,2,['message'],['message']
Integrability,"Thanks a lot for your reply,. I tried but I am getting assembler error:; /tmp/cccDx2GQ.s: Assembler messages:; /tmp/cccDx2GQ.s:516: Error: no such instruction: `vpbroadcastq %xmm2,%ymm1'; /tmp/cccDx2GQ.s:525: Error: suffix or operands invalid for `vpaddq'; make[2]: *** [lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o] Error 1; make[1]: *** [lib/cacode/CMakeFiles/cacode.dir/all] Error 2; make: *** [all] Error 2. I have; cmake version 2.8.12.2; gcc version 5.5.0 (GCC). Florian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645:100,message,messages,100,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645,1,['message'],['messages']
Integrability,"Thanks a lot for your reply. I did not set this option because according to the help message, I thought the ```--alignment-mode 3``` is set by default:; ```; --alignment-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment [3]; ```; When I run the command as I did (without explicitly setting it), I also get the following output:; ```; MMseqs Version: 6f45232ac8daca14e354ae320a4359056ec524c2; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 3; Alignment mode 0; ```. This is the same when I manually set ```--alignment-mode 3```. Can you maybe help me understand why there are 2 alignment mode parameters in the output that differ (i.e. are there 2 different parameters and I forgot to set one)? I also get the same results and bit scores (such as the example above) when I run the command as I reported above, when I manually set ```--alignment-mode 3``` or when I additionally set ```-a```. I would appreciate any help!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/792#issuecomment-1873728731:85,message,message,85,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/792#issuecomment-1873728731,1,['message'],['message']
Integrability,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:234,depend,dependency,234,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850,3,['depend'],['dependency']
Integrability,"Thanks for the quick and detailed feedback! Partial answer:; 1) awk, zlib, bzip2, and omp are included in the FreeBSD base, so no package dependency needed.; 2) Generally, FreeBSD ports respect the user's env regarding build options and of course the binary package has to be pessimistic about hardware. I'll check on the baseline assumptions and what clang -O2 emits, though. I was also thinking of adding a package message suggesting that it be built from source with more agressive optimizations to get better performance. That's trivial to do with FreeBSD ports. I wanted to sneak the commit in before the quarterly branch coming next week so it's at least available in the next quarterly package set, I haven't put much effort into perfecting it yet. With your feedback I should be able to make some good improvements by then.; 3) Do you actually plan to continue support for 32-bit platforms? It's disabled for many bioinformatics ports already.; I'll look into the rest of your comments ASAP.; BTW, this is the first time in my lengthy career I've ported a C++/cmake project to any platform and got a build with zero warnings on the first try. Somebody on your end is doing some good work. ;-)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680:138,depend,dependency,138,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680,4,"['depend', 'message']","['dependency', 'message']"
Integrability,"Thanks for your detailed reply!. > I am not super familiar with transcriptomics datasets. Depending on the length of your queries you might want to turn of the early ORF filter (--orf-filter 0) as it can sometimes reject too many ORFs if the sequences are short. I'll try the `--orf-filter 0` option as you suggested. Yes, of course in the case of a transcriptome the ORFs are often short if the assembler is not able to resolve all the isoforms properly. > Generally our nucl-nucl searching capabilities are less developed than than anything-prot. In the taxonomy assignment, nucl-nucl still uses top-hit taxon assignment instead of LCA. We haven't gotten around to thoroughly benchmark the nucl-nucl homology search and publish it (it does work quite well in the preliminary tests). I run a nucl-nucl taxonomy assignment (against NT) and it performed well I think. I did not systematically check, but I did some cross-checks with blastn and it reported the exact same hits. Assuming blast to be the ""gold-standard"" I was quite impressed by the performance of your tool, because it was so much faster. > Also building a taxonomy database for the NT is painful and the database might get extremely large (haven't tried it in a while though). I just did that and it worked. According to your instructions in the Wiki. I'll let you know in case I have something interesting to report.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824596494:90,Depend,Depending,90,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824596494,1,['Depend'],['Depending']
Integrability,"That looks already like an impressive amount of work for a PoC. . A few (disjointed) thoughts:. * How is error management handled in your project? We rely on `exit()` quite heavily as you have probably noticed already and in these cases we don't free memory or file handles anymore either. Refactoring that would be a major undertaking. * We would prefer to not give API/ABI stability guarantees, ideally we would only have to worry about keeping the command line interface as stable as possible. Personally, I would have tried auto-generating bindings by extracting information from `MMseqsBase.cpp` and `Parameters.h/cpp` and keep MMseqs2 as a separate binary around. * Another thing that we have only realized a few years after having started MMseqs2 is that we have essentially build a database management system for sequence data. I think if we had the chance to reimagine MMseqs2 as something new and consumable directly through APIs I would emphasize this aspect. * Do you have any experience with Python and Rust? There is a good chance we will add the first Rust dependency within the next half year or so and we are interesting in investigating something so new modules could be written in Rust instead of C++ (but continue to use the existing C++ classes). This might make the build system much more complicated in the near future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/450#issuecomment-834598461:464,interface,interface,464,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450#issuecomment-834598461,2,"['depend', 'interface']","['dependency', 'interface']"
Integrability,The E-value is not guaranteed to be always higher than the one of blastp. It always depends on the composition bias of the specific sequence. . You can see in Figure S. 8 how the false discovery rates of MMseqs2 and blastp relate to each other and choose an acceptable e-value cutoff based on that. You can see the accuracy of blastp and MMseqs2 compared in Figure S. 8. If you need a comparable e-value you would need to turn off the compsition bias correction of Blast (--comp_based_stats 0) and MMseqs2 (--comp-bias-corr 0) .,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/45#issuecomment-330207254:84,depend,depends,84,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/45#issuecomment-330207254,1,['depend'],['depends']
Integrability,The `Killed` error message sounds like your job system killed the job for running out of memory. You can use the `--split-memory-Limit` parameter to adjust the maximum memory MMseqs2 is allowed to use. By default it will try to use as much as the system has.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-713695619:19,message,message,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-713695619,1,['message'],['message']
Integrability,"The `convertalis` command exits with an error when no match is found in the DB. Maybe this could be caught by the web server and an informative message could be displayed in the results page (instead of the standard `Error!`).; ```; mmseqs-web-worker_1 | easy-search /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/job.fasta /opt/mmseqs-web/databases/test_nt /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/alis_test_nt /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp --dont-shuffle --db-output --db-load-mode 2 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --search-type 3 --strand 2 --greedy-best-hits; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | MMseqs Version: 	d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | Substitution matrix 	blosum62.out; mmseqs-web-worker_1 | Add backtrace 	false; mmseqs-web-worker_1 | Alignment mode 	3; mmseqs-web-worker_1 | E-value threshold 	0.001; mmseqs-web-worker_1 | Seq. id. threshold 	0; mmseqs-web-worker_1 | Min. alignment length 	0; mmseqs-web-worker_1 | Seq. id. mode 	0; mmseqs-web-worker_1 | Alternative alignments 	0; mmseqs-web-worker_1 | Coverage threshold 	0; mmseqs-web-worker_1 | Coverage mode 	0; mmseqs-web-worker_1 | Max sequence length 	65535; mmseqs-web-worker_1 | Compositional bias 	1; mmseqs-web-worker_1 | Realign hits 	false; mmseqs-web-worker_1 | Max reject 	2147483647; mmseqs-web-worker_1 | Max accept 	2147483647; mmseqs-web-worker_1 | Include identical seq. id. 	false; mmseqs-web-worker_1 | Preload mode 	2; mmseqs-web-worker_1 | Pseudo count a 	1; mmseqs-web-worker_1 | Pseudo count b 	1.5; mmseqs-web-worker_1 | Score bias 	0; mmseqs-web-worker_1 | Gap open cost 	11; mmseqs-web-worker_1 | Gap extension cost 	1; mmseqs-web-worker_1 | Threads 	24; mmseqs-web-worker_1 | Compressed 	0; mmseqs-web-worker_1 | Verbosity 	3; mmseqs-web-worker_1 | Seed substitution matrix 	VTML80.out; mmseqs-web-worker_1 | Se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:144,message,message,144,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['message'],['message']
Integrability,"The `expandaln` command fails to properly read index, producing an '`Invalid database read for database data`' error. ## Expected Behavior. Command to run without error messages. ## Current Behavior. Command fails instantly with following error message:. ```; Invalid database read for database data file=db/human.idx, database index=db/human.idx.index; getData: local id (4294967295) >= db size (22); ```. ## Steps to Reproduce (for bugs); ```bash; mkdir db; mkdir job; mmseqs createdb uniprotkb_human.fasta db/human; mmseqs createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1; mmseqs createdb query.fasta job/qdb. mmseqs search job/qdb db/human job/res job/tmp1 --num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000. mmseqs mvdb job/tmp1/latest/profile_1 job/prof_res; mmseqs lndb job/qdb_h job/prof_res_h. # Command which fails:; mmseqs expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95; ```. ## MMseqs Output (for bugs); createdb:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [79690] 0s 233ms; Time for merging to human_h: 0h 0m 0s 24ms; Time for merging to human: 0h 0m 0s 53ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 472ms; ```. createindex:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616:169,message,messages,169,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616,2,['message'],"['message', 'messages']"
Integrability,"The `ln -s` commands are required for `cstranslate` to work. I am confused why the error message is saying `'clu_msa'` while the output name you used for `result2msa` is `cluMsa`. I think something is misnamed. Btw you can also drop the `A /path/to/cs219.lib -D /path/to/context_data.lib` parameters, they are not needed anymore in the latest HH-suite release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/508#issuecomment-974118499:89,message,message,89,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/508#issuecomment-974118499,1,['message'],['message']
Integrability,"The cluster used to contain less sequences than the input when we used the older version. ; We tried to use the latest version and now the number seems to match! One more question is still on the truncation, that we got messages ""1 queries produce too much hits (truncated result)"". What does this mean? Should this be a concern? Thank you very much! ; [log_clu_03_25.txt](https://github.com/soedinglab/MMseqs2/files/4388245/log_clu_03_25.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/291#issuecomment-604511463:220,message,messages,220,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/291#issuecomment-604511463,1,['message'],['messages']
Integrability,"The docs for `--split-memory-limit` say that this number should be provided in units of megabytes. However, it looks like it is actually being interpreted as kilobytes. Perhaps there is an inconsistant conversion somewhere, e.g. multiplying by 1024 instead of 1024^2?. ```shell; [saladi1@comet-ln3 mmdb]$ mmseqs search -h | grep mem; --split-mode 	2 	0: split target db; 1: split query db; 2: auto, depending on main memory; --split-memory-limit 	0 	Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.; ```. When I specify `--split-memory-limit 1000000` (1 TB) to `mmseqs search`, it looks like `mmseqs prefilter` is called carrying this parameter through, however, it dies with the following message:. > Can not fit databased into 1024000000 byte. Please use a computer with more main memory. This is odd because, 1024000000 bytes = 1 GB not 1 TB (off by a factor of 1e3). See call and output below. I'm not sure how many places this unit conversion is done, but in the context of `mmseqs prefilter` it does look like the parameter is multiplied by 1024 (as opposed to 1024^2). https://github.com/soedinglab/MMseqs2/blob/d32e75025c1bd419188d4892db863a0f02b30ddf/src/prefiltering/Prefiltering.cpp#L184. ## MMseqs Output; ```shell. [saladi1@comet-30-01 mmdb]$ mmseqs search \; > euk_screen/screenDB \; > uref_euk85_rep/uref_euk85_rep \; > euk_screen_prof \; > mmtemp \; > --local-tmp /scratch/saladi1/22776241/ \; > --remove-tmp-files 1 \; > --split-memory-limit 1000000; search euk_screen/screenDB uref_euk85_rep/uref_euk85_rep euk_screen_prof mmtemp --local-tmp /scratch/saladi1/22776241/ --remove-tmp-files 1 --split-memory-limit 1000000. MMseqs Version: 	fac81fa7a63c1205209d4acbc46ce2209abcaa8a; Substitution Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/193:399,depend,depending,399,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193,2,"['depend', 'message']","['depending', 'message']"
Integrability,"The hangs are not totally consistent, but seem to usually happen here:; ...; Create directory /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/EASY_PROFILE/tmp; easy-search /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/data/query.fasta /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/data/targetannotation.fasta /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/EASY_PROFILE/results_aln.m8 /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/EASY_PROFILE/tmp -e 10000 -s 4 --max-seqs 4000 --num-iterations 2 --compressed 1 . MMseqs Version: 	0aab0f129537ab954340eb44d8e99e4d69a1dfd3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	10000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	1; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	4000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	fals",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869008777:838,wrap,wrapped,838,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869008777,1,['wrap'],['wrapped']
Integrability,"The index can not be shrunk, if you want to allow for real-time searches. Depending on the size of your database, you could implement the same clustered MMseqs2 search workflow as implemented in ColabFold. This will reduce memory requirements massively. We plan to eventually over this workflow directly in MMseqs2.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/687#issuecomment-1479990691:74,Depend,Depending,74,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/687#issuecomment-1479990691,1,['Depend'],['Depending']
Integrability,"The issue is basically that MMseqs2 cannot extract any putative protein ORFs from the nucleotide reads since the default minimum length threshold is too long. You can reduce this threshold with something like `--min-length 15` (15*3=45 nucl min length). The error message is pretty bad, we should fix this. Btw `plass` include a `mergereads` module to produce merged reads from paired reads and produces a sequence database that can then be read by `mmseqs search` that might be useful to extend some of the read lengths a bit and produce better annotations.; You can also first run the complete `plass` workflow to produce assembled proteins that can be better annotated. Plass will also struggle with the same parameter though and would also need a shorter `--min-length`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/325#issuecomment-652402322:264,message,message,264,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/325#issuecomment-652402322,1,['message'],['message']
Integrability,"The wiki entry needs a bit work. I recommend using the precomputed index only for very specific cases. You also will likely neither need merge nor concat, they are both for combining two databases in different ways (concat sticks all the entries of one database after the entries of the other one; merge combines database entries). . In your case you should just pass multiple FASTA files to `createdb`. `mmseqs createdb FASTA1.fa FASTA2.fa ... FASTN.fa db`. This will create a `.source` file with:; ```; 1 FASTA1.fa; 2 FASTA2.fa; ...; ```. And these values are the `qsetid` and `qset` (or `tsetid`, `tset`) respectively. Regarding approximate size, you can look up the memory consumption entries in the wiki/user-guide. It more depends on avg length, than max-length.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734762067:729,depend,depends,729,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734762067,2,['depend'],['depends']
Integrability,There were some spelling/grammar typos in the help message... in case it's helpful,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/190:51,message,message,51,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/190,1,['message'],['message']
Integrability,This looks about right. What's the error message?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1464195021:41,message,message,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1464195021,1,['message'],['message']
Integrability,"This more a feature request!. would someone have time and competence to create a python module similar to the one for vsearch (https://github.com/qiime2/q2-feature-classifier/tree/master/q2_feature_classifier) so that we can classify with multithreading in qiime2?. blast or vsearch runs typically take over 1 day and more for 50k long ONT reads which is really very long and I am dreaming of the speedup seen in the mmseqs2 paper. my current qiime2 execution looks like this in top but I have little knowledge of what it should translate to with mmseqs2; if I could have an equivalent, I may try to hack the [vsearch wrapper code](https://github.com/qiime2/q2-feature-classifier/blob/master/q2_feature_classifier/_vsearch.py) but my python skills are not that great. `qiime feature-classifier classify-consensus-vsearch --i-query rep-seqs.qza --i-reference-reads /data/biodata/MetONTIIME_DB/rrnDB_operons_sequence.qza --i-reference-taxonomy /data/biodata/MetONTIIME_DB/rrnDB_operons_taxonomy.qza --p-perc-identity 0.77 --p-query-cov 0.8 --p-maxaccepts 1 --p-strand both --p-min-consensus 0.51 --p-unassignable-label Unassigned --p-threads 24 --o-classification taxonomy.qza`. Thanks for any help on this. PS:I do not dare to double post on the qiime2 page as this is often seen as offending by developers.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/235:618,wrap,wrapper,618,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235,1,['wrap'],['wrapper']
Integrability,"Time for merging to pref_0_tmp_15_tmp: 0h 0m 0s 20ms; Merging 16 target splits to pref_0; Preparing offsets for merging: 0h 0m 0s 53ms; [=================================================================] 1.08K 0s 37ms; Time for merging to pref_0: 0h 0m 0s 23ms; Time for merging target splits: 0h 0m 0s 174ms; Time for merging to pref_0_tmp: 0h 0m 0s 45ms; Time for processing: 0h 6m 46s 299ms; lcaalign /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/pref_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=================================================================] 1.08K 0s 508ms; Time for merging to aln_0: 0h 0m 0s 8ms; 19048 alignments calculated; 15817 sequence pairs passed the thresholds (0.830376 of overall calculated); 14.713489 hits per query sequence; Time for processing: 0h 0m 54s 194ms; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:15803,wrap,wrapped-scoring,15803,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,1,['wrap'],['wrapped-scoring']
Integrability,"Tmp tmpfiles/ folder does not exist or is not a directory.; Create dir tmpfiles/; cluster DB_in/fasta_in_db_HC DB_clustered/clustered_HC tmpfiles/ --cluster-reassign 1 --cluster-mode 1 --cov-mode 0. MMseqs Version: 96d452cb432fc4674991a48952deaf24d1787e77; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundan",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:975,wrap,wrapped,975,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['wrap'],['wrapped']
Integrability,"UGGAGGAACACCAGUGGCGAAGGCGACUUUCU; GGUCUGUAACUGACGCUGAUGUGCGAAAGCGUGGGGAUCAAACAGGAUUAGAUACCCUGGUAGUCCACGCCGUAAACGAU; GAGUGCUAAGUGUUAGGGGGUUUCCGCCCCUUAGUGCUGCAGCUAACGCAUUAAGCACUCCGCCUGGGGAGUACGACCGC; AAGGUUGAAACUCAAAGGAAUUGACGGGGACCCGCACAAGCGGUGGAGCAUGUGGUUUAAUUCGAAGCAACGCGAAGAAC; CUUACCAAAUCUUGACAUCCUCUGACCCCUCUAGAGAUAGAGUUUUCCCCUUCGGGGGACAGAGUGACAGGUGGUGCAUG; GUUGUCGUCAGCUCGCGUCGUGAGAUGUUGGGUUAAGUCCCGCAACGAGCGCAACCCUUAAGCUUAGUUGCCAUCAUUAA; GUUGGGCACUCUAAGUUGACUGCCGGUGACAAACCGGAGGAAGGUGGGGAUGACGUCAAAUCAUCAUGCCCCUUAUGAUU; UGGGCUACACACGUGCUACAAUGGACAAUACAAAGGGCAGCGAAACUGCGAGGUCAAGCAAAUCCCAUAAAGUUGUUCUC; AGUUCGGAUUGUAGUCUGCAACUCGACUACAUGAAGCUGGAAUCGCUAGUAAUCGUAGAUCAGCAUGCUACGGUGAAUAC; GUUCCCGGGUCU. ## MMseqs Output (for bugs); easy-search --search-type 3 --num-iterations 2 --threads 1 sequences/5LJ5_5.fasta databases/MSA_debug.fasta results/result tmp . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	1; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:5825,wrap,wrapped,5825,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['wrap'],['wrapped']
Integrability,"UPDATE: Index is huge:. ```; total 3.8T; -rwxrwx--- 1 guelou01 nogroup 447G Aug 18 19:33 NCBI_ALL_DB; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 19:34 NCBI_ALL_DB.dbtype; -rwxrwx--- 1 guelou01 nogroup 954M Aug 18 18:11 NCBI_ALL_DB_h; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 18:11 NCBI_ALL_DB_h.dbtype; -rwxrwx--- 1 guelou01 nogroup 195M Aug 18 19:34 NCBI_ALL_DB_h.index; -rwxrwx--- 1 guelou01 nogroup 80K Sep 14 14:31 NCBI_ALL_DB.idx.0; -rwxrwx--- 1 guelou01 nogroup 895G Sep 14 14:31 NCBI_ALL_DB.idx.1; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.2; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.3; -rwxrwx--- 1 guelou01 nogroup 623G Sep 14 14:31 NCBI_ALL_DB.idx.4; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.5; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.6; -rwxrwx--- 1 guelou01 nogroup 4 Sep 14 14:31 NCBI_ALL_DB.idx.dbtype; -rwxrwx--- 1 guelou01 nogroup 1.1K Sep 14 14:31 NCBI_ALL_DB.idx.index; -rwxrwx--- 1 guelou01 nogroup 236M Aug 18 19:34 NCBI_ALL_DB.index; -rwxrwx--- 1 guelou01 nogroup 257M Aug 18 19:34 NCBI_ALL_DB.lookup; -rwxrwx--- 1 guelou01 nogroup 17 Aug 18 18:10 NCBI_ALL_DB.source; ```; And when starting the search the following message is confusing:; ```; Process needs more than 641G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; ```; Adding `--split X` does not have any effect, but does not cause any error. The search now runs for several days with a low CPU usage, only few threads on `idx` files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063:1223,message,message,1223,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063,1,['message'],['message']
Integrability,We can compile MMseqs2 without bz2 and zlib but we need zstd and xxhash. Therefore we included it into the repository. It might be not optimal for shipping but it decreases the dependencies to compile the software.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-776931258:177,depend,dependencies,177,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-776931258,1,['depend'],['dependencies']
Integrability,"We currently don't support global alignments. It should be not too difficult to integrate a fast NW implementation as a separate MMseqs2 module. However, since none of us is working with global alignments, this would be a very low priority feature. The `--global-alignment` parameter is really badly named and does something unrelated for normal searches. We really should remove it. Either [opal](https://github.com/Martinsos/opal) or [parasail](https://github.com/jeffdaily/parasail) might serve as the base for the implementation. If you are interested in contributing this feature we could help guide you through.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518442291:80,integrat,integrate,80,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518442291,2,['integrat'],['integrate']
Integrability,"We do not currently have a very easy way to limit memory. For the prefilter (main module for normal sequences searches) you can specify an appropriate `--split` value, that will then reduce the required memory to (I think there is an error in the user guide, have to double check, but this should be the correct formula):. ```; (7 byte * N * L) / #splits + 8 byte * 21^k; ```. We have two more very memory intense modules:`swapresults` and `kmermatcher`. These are very important for profile searches and linclust. Their splitting logic is however not exposed to the command line interface yet. The clustering module also can use a lot of memory, but if you stay with the default cascaded clustering that should not become an issue. A hack to limit how much memory `swapresults`, `kmermatcher` and `prefilter` will use, would be to manually edit `size_t Util::getTotalSystemMemory()` in `commons/Util.cpp`. We will discuss what we can do about this limiting memory issue internally and get back to you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359788065:580,interface,interface,580,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359788065,2,['interface'],['interface']
Integrability,"We finished the SIMDe integration yesterday. Please use the main MMseqs2 git. I am happy for any feedback since this is fresh from the oven, but please make a new issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649410251:22,integrat,integration,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649410251,2,['integrat'],['integration']
Integrability,We integrated the MMseqs2 regression test into the git repository. See:; https://github.com/soedinglab/MMseqs2/wiki/MMseqs2-Developer-Guide#regression-test,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/25#issuecomment-539000656:3,integrat,integrated,3,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/25#issuecomment-539000656,1,['integrat'],['integrated']
Integrability,"We were a bit busy with a paper submission, sorry for the delay. This behavior is kind of okay and expected.; The procedure to map an NR entry to a taxonomic label is a bit involved since NCBI's NR, accession2taxid and taxdump don't match very well and it's difficult to bring them into a consistent state. This message happens when we can parse a taxonomic identifier looking the accession up in one of the accession2taxid files, but the taxonomic identifier is not contained in the taxdump anymore. In this case we either try to take the taxonomic identifier of the next sequence that was clustered into this entry or leave this entry unannotated (thus it cannot contribute to LCA computation despite being findable through searching). For nearly all sequences the mapping procedure works correctly (331375261 vs 331433500). The remaining 50K entries are however kind of tricky and we don't have a good solution yet to get a taxonomic identifier automatically for those.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/381#issuecomment-744417949:312,message,message,312,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/381#issuecomment-744417949,1,['message'],['message']
Integrability,We would be happy to assist members of the Qiime community with integrating MMseqs2.; We felt it was a bit too much for us to tackle alone.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580226294:64,integrat,integrating,64,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580226294,1,['integrat'],['integrating']
Integrability,"What are the memory requirements for `clusthash`? I am trying to redundancy filter a database of about 1.4 billion proteins using `clusthash` and when running the program, I get the message; ```; Can not touch 271995225098 into main memory; ```; It then continues to run for ~30 mins and then progress just halts. I left it running for 10 hours with no change in progress. I first tried running with 64G memory and then 128G memory with the same results. Do all the sequences in the database need to fit into memory for `clusthash` to work? Would I be better off running `linclust` with `-c 100`?. Thank you",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/442:182,message,message,182,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/442,1,['message'],['message']
Integrability,What is the error message? . `Could not allocate foundDiagonals memory in QueryMatcher` should only be possible to happen during the prefiltering stage not the alignment stage.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242908:18,message,message,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242908,1,['message'],['message']
Integrability,"When I am running the mmseq2 in the conda environment to convert the expandable profile databases to MMseqs2 format following the protocol:. mmseqs tsv2exprofiledb uniref30_2103 uniref30_2103_db. error:. Invalid Command: tsv2exprofiledb; Did you mean ""mmseqs convertprofiledb""?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/576:130,protocol,protocol,130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/576,1,['protocol'],['protocol']
Integrability,"When I use createseqfiledb on a clusterDB file, as described in the readme, I get a continuous stream of ""Invalid entry in line x!"" messages, where x are different lines. What does this error mean? The resulting clu_seq file is empty.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/6:132,message,messages,132,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/6,1,['message'],['messages']
Integrability,"When creating a taxonomy database via:. ```; mmseqs createdb target.fasta targetDB; mmseqs createtaxdb targetDB tmp; ```. ...how can the user know what taxonomy is given to each sequence in the tax database? There doesn't seem to be a subcommand for inspecting the taxonomy database. One could maybe to it with the `mmseqs filtertaxdb` command, but it requires a ""targetDB"" and a ""taxaDB""; however, the `mmseqs createtaxdb` doesn't seem to create any specific ""taxaDB"" file. . It appears that `mmseqs createtaxdb` doesn't warn about missing uniprot identifiers. It really doesn't provide any summary at all. I just tried provided a full `seqID <--> uniprot` mapping file versus a truncated file, and I got the same ""Database created"" output message, so it seems that even if there's really little to no taxonomic info in the taxonomy database, the database will still be created without the user knowing what info is actually in it. . I'm using version 9.d36de",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/222:741,message,message,741,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/222,1,['message'],['message']
Integrability,"While clustering a database of about 10 million proteins, we receive lots of ""there must be an error"" messages, e.g.:. there must be an error: 1835775 deleted from 4496505 that now is empty, but not assigned to a cluster; there must be an error: 6964402 deleted from 7957737 that now is empty, but not assigned to a cluster; there must be an error: 2422408 deleted from 2413081 that now is empty, but not assigned to a cluster; ... This is the script running the clustering:; ```; MMSEQS=mmseqs-static_avx2; SEQFILE=eggnog4.proteins.core_periphery.fa.gz; pigz -dc $SEQFILE >$TMPDIR/db.fasta; $MMSEQS createdb $TMPDIR/db.fasta $TMPDIR/db; mkdir $TMPDIR/clutmp; $MMSEQS cluster $TMPDIR/db $TMPDIR/db_clu $TMPDIR/clutmp --cascaded -e 1 --threads 16; ```. The effect is independent from the mmseqs2 binary (your static avx2 binary, self-compiled sse4.1 binary). We run Fedora 25 with 4.9.5 kernel. The machine has 40 cores and 1 TB RAM. Thanks for your help,; Thomas Rattei",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/15:102,message,messages,102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15,1,['message'],['messages']
Integrability,"Without the CMakeLists patch, I get the following on aarch64:; cc: error: the clang compiler does not support '-march=native'; At any rate, when restricting an upstream build system, it's generally better to use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:953,depend,dependency,953,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555,1,['depend'],['dependency']
Integrability,"XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 50ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [=================================================================] 100.00% 239 0s 20ms; [================================================================>] 99.58% 238 eta 0s; 20.876247 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 824ms; align tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/pref_step1 tmp//10798751672030653963/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 239 type: Aminoacid; Target database size: 239 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 239 0s 46ms; Time for merging to aln_step1: 0h 0m 0s 11ms; 308 alignments calculated; 270 sequence pairs passed the thresholds (0.876623 of overall calculated); 1.129707 hits per query sequence; Time for processing: 0h 0m 0s 78ms; clust tmp//10798751672030653963/input_step1 tmp//10798751672030653963/aln_step1 tmp//107987516720306539",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:17356,wrap,wrapped-scoring,17356,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['wrap'],['wrapped-scoring']
Integrability,"YGMDVW; CARGWGWGAVAGRAEYYFDYW; CARDWDYDILTGSWFGAFDIW; CARDQRQFQLLGRFGWFDPW; CARELFTAVAGKGGIDYW; CARGWYFDYW; CARSSSRGFDYW; CARIVLGASGTYPSPGFDPW; CARIPGWDRGTDRNWNDDW; CAKDSRSGIAGVDAFDIW; CARTYSFDSSGYYYDYW; CARDQDSGYPTYYYYYMDVW; CARAFYDSNWSVGSYFDSW; CARDSGGNYGDSYFDYW; CAKDVRYCSSTSCYFSAFDIW; CARDLAGVPAALGCWFDPW; CARGGGSYYYWFDPW; CVRDLALFEVVIQQGVW; CARVQRYYPDSSGFYGRRFDIW; CAHNRFQYCSSTTCYTLLPFDYW; CARSGGGSYRGPFDYW; CARRRSSSRYSSGWYMYYYYMDVW; CAKEGRPSDIVVVVAFDYW; CARSTSGSYYYGMDVW; CARDSPFSALGASNDYW; CAKDFGGDNTAMVEYFFDFW; CVRDYGDFYFDYW; CARADPYQLLGQHYYYGMDVW; CARAPLFPTGVLAGDYYYYGMDVW; CAKDRTAVFLFFGLGDAFDIW; CASSSGYLFHSDYW. ## MMseqs Output (for bugs). ```; search //app/database/sequences/sequences //app/database/sequences/sequences; DB //app/clustering/sequences/sequences_output /tmp --gap-open nucl:5,aa:2 --gap-extend nucl:5,aa:0. MMseqs Version: ad5837b3444728411e6c90f8c6ba9370f665c443; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:2; Gap extension cost nucl:5,aa:0; Zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:2559,wrap,wrapped,2559,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,1,['wrap'],['wrapped']
Integrability,"Yeah, I think the base names helps. It would also be helpful if the help doc for each subcommand listed which files are needed for input (eg., *.index and *.dbtype) and which files will be written. . At times, I found out the hard way that a certain subcommand doesn't create all files for the next step in the mmseqs workflow that I'm running, so I have to figure out how to create them after getting the error message stating that I need them (eg., Issue #146)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/155#issuecomment-463363392:412,message,message,412,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/155#issuecomment-463363392,1,['message'],['message']
Integrability,"Yes @milot-mirdita , that worked too!. Here's the full wrapper script for handling clusters with single sequences, should anybody else need it:; ```; #!/bin/bash. FILE=$(mktemp); cat /dev/stdin > $FILE. nseq=$( cat $FILE | grep -c '^>'). if [ $nseq -gt 1 ];; then; external-tool $FILE; else; cat $FILE; fi; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/536#issuecomment-1042419761:55,wrap,wrapper,55,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/536#issuecomment-1042419761,1,['wrap'],['wrapper']
Integrability,"Yes, I've tried recompiling several times as well, and receive the same error after successful compilation. When running the command you gave, I get the following error:. Command: ; ```; ~/data/dir/mmseqs2/build-mpi/bin/mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-le",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:620,wrap,wrapped-scoring,620,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,1,['wrap'],['wrapped-scoring']
Integrability,"You are right that it might be a bit fragile. . Exactly, these two workflows need to have something to download files. The workflows are automatically compiled into the binary and executed when the respective workflow is called (that's what either the xxd or perl build time dependency is for). Fetch sounds good, I'll try that out when I get a CirrusCI with FreeBSD going. AVX2 is a bit IIRC ~30% faster than SSE4.1, so it's not super important. The only problem is if no SIMD flags are specified at all. Then we fall back to the scalar intrinsic implementations of SIMDe which are a lot slower (don't have an exact number, but it was a few factors slower).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868454512:275,depend,dependency,275,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868454512,1,['depend'],['dependency']
Integrability,You can add the `--createdb-mode 0` parameter as a workaround. . Edit: A space saving optimization is going wrong: The check for the optimization to work correctly depends on `--dbtype` not being set. The check should not depend on this parameter as its unrelated. Leaving out `--dbtype` should also fix the problem.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457464790:164,depend,depends,164,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457464790,2,['depend'],"['depend', 'depends']"
Integrability,You can just remove this cases with this command. mmseqs createseqfiledb ../pbps.DB pbps.CLU pbps.CLU.SEQ --min-sequences 2. If you want the single files in your final result than you need to write wrapper script for `clustalo` that handle this case,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/196#issuecomment-485948735:198,wrap,wrapper,198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/196#issuecomment-485948735,1,['wrap'],['wrapper']
Integrability,"You can use the `filtertaxseqdb` command (https://github.com/soedinglab/MMseqs2/wiki#filtering-a-seqtaxdb) to build a subset of the Uniprot that only contains bacterial sequences. For bacteria you would run (after `createdb/databases`):; ```; mmseqs filtertaxseqdb uniprot uniprot_bak --taxon-list 2; ```. I am also trying to integrate taxonomy information into the NR reliably. Once that's working you would have an even larger resource. . (Btw in the `filtertaxseqdb` module of MMseqs2 release 11 seperating taxon ids by `,` does something weird. I would recommend to use the latest git MMseqs2, statically compiled binaries at https://mmseqs.com/latest).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669600074:326,integrat,integrate,326,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669600074,1,['integrat'],['integrate']
Integrability,"You definitely need more RAM. Half a billion sequences will require 24GB for reading in the database alone. Linclust, the first clustering step, will not be a limiting factor, but the steps afterwards will be. Depending on how well linclust is able to reduce your dataset, the MMseqs2 prefilter will require up to 500GB RAM for optimal speed, though it will be able to run with much less at a slightly reduced speed. If you only require linclust quality of clustering (down to 50% sequence identity), then 32GB RAM might be enough. For clustering such a large number of sequences with the full MMseqs2 clustering workflow (<50% sequence identity) we recommend at least 64GB to 128GB RAM compute nodes.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/157#issuecomment-459402647:210,Depend,Depending,210,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/157#issuecomment-459402647,1,['Depend'],['Depending']
Integrability,"Your initial run did not work, because it was the wrong sequence database passed to `createtsv`. We should probably give a better error message though.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404855346:136,message,message,136,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404855346,1,['message'],['message']
Integrability,"Your kernel/libc versions are very old. I am surprised that conda runs at all. These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. If you compile MMseqs2 on your own from source it might still work, no guarantees though.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-867849511:91,message,messages,91,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-867849511,2,"['depend', 'message']","['dependencies', 'messages']"
Integrability,"[=================================================================] 773.45M 1h 49m 44s 916ms; Process file into 1 parts; Generate k-mers list for 1 split; [=================================================================] 773.45M 3m 43s 762ms. Adjusted k-mer length 18; Sort kmer 0h 0m 8s 851ms; Sort by rep. sequence 0h 0m 0s 535ms; Merge splits ... Time for fill: 0h 0m 8s 279ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 2h 8m 37s 699ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 50 --compressed 0 -v 3 . [=================================================================] 773.45M 16m 6s 276ms; Time for merging to pref_rescore1: 0h 37m 19s 763ms; Time for processing: 1h 10m 8s 990ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref_rescore1 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 50 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 1m 16s 664ms. Size of the sequence database: 773451991; Size of the alignment database: 773451991; Number of clusters: 764944220. Wr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:11532,wrap,wrapped-scoring,11532,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['wrap'],['wrapped-scoring']
Integrability,"[mmseqslinux.zip](https://github.com/soedinglab/MMseqs2/files/3623807/mmseqslinux.zip). [mmseqwin.zip](https://github.com/soedinglab/MMseqs2/files/3623810/mmseqwin.zip). Thanks for looking into this -- these files should reproduce the error but may be machine/environment dependent. We have had the same error on three PCs (~5-8 years old) but had success today on MacOS on a < 1 year old computer. I don't know if that will help diagnose the issue, but the files should contain the relevant inputs to reproduce the issue, from two different operating systems. Also attaching the stack dump that cygwin provided if it proves to be useful:; [mmseqsstackdumpwindows.zip](https://github.com/soedinglab/MMseqs2/files/3623831/mmseqsstackdumpwindows.zip)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/229#issuecomment-532444906:272,depend,dependent,272,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229#issuecomment-532444906,1,['depend'],['dependent']
Integrability,] Generating ../generated/blosum90.out.h; [ 21%] Generating ../generated/blosum95.out.h; [ 21%] Generating ../generated/blosum100.out.h; [ 21%] Generating ../generated/CovSeqidQscPercMinDiag.out.h; [ 22%] Generating ../generated/CovSeqidQscPercMinDiagTargetCov.out.h; [ 22%] Generating ../generated/ExpOpt3_8_polished.cs32.lib.h; [ 23%] Generating ../generated/Library255_may17.lib.h; [ 23%] Generating ../generated/K4000.crf.h; [ 23%] Generating ../generated/libPure_blosum62_255.lib.h; [ 24%] Generating ../generated/libPure_blosum62_32.lib.h; [ 24%] Built target generated; Scanning dependencies of target version; make[2]: Warning: File 'src/version/CMakeFiles/version.dir/depend.make' has modification time 0.00026 s in the future; [ 24%] Building CXX object src/version/CMakeFiles/version.dir/Version.cpp.o; [ 25%] Linking CXX static library libversion.a; make[2]: warning: Clock skew detected. Your build may be incomplete.; [ 25%] Built target version; Scanning dependencies of target mmseqs-framework; [ 26%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Alignment.cpp.o; [ 26%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/CompressedA3M.cpp.o; [ 26%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Main.cpp.o; [ 27%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Matcher.cpp.o; [ 27%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/MsaFilter.cpp.o; [ 28%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/MultipleAlignment.cpp.o; [ 28%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/PSSMCalculator.cpp.o; [ 28%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/StripedSmithWaterman.cpp.o; [ 29%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/BandedNucleotideAligner.cpp.o; [ 29%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/clustering/Main.cpp.o; [ 30%] Building CXX object src/CMakeFiles/mmseqs-framework,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:7066,depend,dependencies,7066,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,1,['depend'],['dependencies']
Integrability,"_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_filter2 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================================] 417 0s 10ms; ==Time for merging to pref_rescore2: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 52ms; align DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore2 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 417 type: Aminoacid; Target database size: 417 type: Aminoacid; Calculation of alignments; [=================================================================] 417 0s 37ms; Time for merging to aln: 0h 0m 0s 2ms. 615 alignments calculated.; 418 sequence pairs passed the thresholds (0.679675 of overall calculated).; 1.002398 hits per query sequence.; Time for processing: 0h 0m 0s 81ms; clust DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/aln DB_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:8171,wrap,wrapped-scoring,8171,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['wrap'],['wrapped-scoring']
Integrability,"_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/l",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:5793,wrap,wrapped-scoring,5793,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['wrap'],['wrapped-scoring']
Integrability,"`Could not allocate foundDiagonals memory in QueryMatcher` is the only error message that I received. . I was running this in a `snakemake` pipeline, which tried the run with progressively more memory (240, 480, 720 GB), and each time, I got the error: `Could not allocate foundDiagonals memory in QueryMatcher`, and the log file looked the same (less dots at the end of the log file when less memory was used)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452249730:77,message,message,77,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452249730,1,['message'],['message']
Integrability,"`nrtotaxmapping` is slightly weird as it already requires the NCBI taxdb files to be present.; In the `databases` workflow, I create an empty `_mapping` file first, so `createtaxdb` will not try to create one, then call `createtaxdb` and then finally `nrtotaxmapping`. I have to integrate `nrtotaxmapping` into `createtaxdb` eventually to clean this up I guess.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-923028297:279,integrat,integrate,279,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-923028297,1,['integrat'],['integrate']
Integrability,"a artificial2/DB_artificial`; `mmseqs cluster artificial2/DB_artificial db_clu tmp/ --cluster-reassign 1 --cov-mode 0 --cluster-mode 0`. output: . Create directory tmp/; cluster artificial2/DB_artificial db_clu tmp/ --cluster-reassign 1 --cov-mode 0 --cluster-mode 0. MMseqs Version: 9290a2b529da9763992bde2e6e0f95c61b003123; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_r",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:1262,wrap,wrapped,1262,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['wrap'],['wrapped']
Integrability,a wrapper for MMseq2 in qiime2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/235:2,wrap,wrapper,2,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235,1,['wrap'],['wrapper']
Integrability,"aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 ; [=================================================================] 292.14M 2m 8s 805ms; Time for merging to pref_rescore1: 0h 2m 40s 361ms; Time for processing: 0h 5m 54s 815ms; clust /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 96 --compressed 0 -v 3 ; Clustering mode: Greedy; Total time: 0h 1m 7s 208ms; Size of the sequence database: 292137902; Size of the alignment database: 292137902; Number of clusters: 245753321; Writing results 0h 1m 30s 550ms; Time for merging to pre_clust: 0h 1m 31s 28ms; Time for processing: 0h 5m 19s 116ms; createsubdb /export/tmp/MERC/4233864",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:3083,wrap,wrapped-scoring,3083,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,1,['wrap'],['wrapped-scoring']
Integrability,"an optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be filed against your own project-compiled binaries and test against those binaries first when tracking bugs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1966,depend,dependencies,1966,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463,2,['depend'],['dependencies']
Integrability,ating ../generated/blosum60.out.h; [ 18%] Generating ../generated/blosum62.out.h; [ 18%] Generating ../generated/blosum65.out.h; [ 19%] Generating ../generated/blosum70.out.h; [ 19%] Generating ../generated/blosum75.out.h; [ 19%] Generating ../generated/blosum80.out.h; [ 20%] Generating ../generated/blosum85.out.h; [ 20%] Generating ../generated/blosum90.out.h; [ 21%] Generating ../generated/blosum95.out.h; [ 21%] Generating ../generated/blosum100.out.h; [ 21%] Generating ../generated/CovSeqidQscPercMinDiag.out.h; [ 22%] Generating ../generated/CovSeqidQscPercMinDiagTargetCov.out.h; [ 22%] Generating ../generated/ExpOpt3_8_polished.cs32.lib.h; [ 23%] Generating ../generated/Library255_may17.lib.h; [ 23%] Generating ../generated/K4000.crf.h; [ 23%] Generating ../generated/libPure_blosum62_255.lib.h; [ 24%] Generating ../generated/libPure_blosum62_32.lib.h; [ 24%] Built target generated; Scanning dependencies of target version; make[2]: Warning: File 'src/version/CMakeFiles/version.dir/depend.make' has modification time 0.00026 s in the future; [ 24%] Building CXX object src/version/CMakeFiles/version.dir/Version.cpp.o; [ 25%] Linking CXX static library libversion.a; make[2]: warning: Clock skew detected. Your build may be incomplete.; [ 25%] Built target version; Scanning dependencies of target mmseqs-framework; [ 26%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Alignment.cpp.o; [ 26%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/CompressedA3M.cpp.o; [ 26%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Main.cpp.o; [ 27%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Matcher.cpp.o; [ 27%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/MsaFilter.cpp.o; [ 28%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/MultipleAlignment.cpp.o; [ 28%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/PSSMCalculator.cpp.o; [ 28%] Building CXX object s,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:6773,depend,depend,6773,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,1,['depend'],['depend']
Integrability,b/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/dictBuilder/fastcover.c.o; [ 34%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/dictBuilder/divsufsort.c.o; [ 34%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/dictBuilder/zdict.c.o; [ 34%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/deprecated/zbuff_common.c.o; [ 35%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/deprecated/zbuff_compress.c.o; [ 35%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/deprecated/zbuff_decompress.c.o; Linking C static library libzstd.a; [ 35%] Built target libzstd_static; Scanning dependencies of target tinyexpr; [ 35%] Building C object lib/tinyexpr/CMakeFiles/tinyexpr.dir/tinyexpr.c.o; Linking C static library libtinyexpr.a; [ 35%] Built target tinyexpr; Scanning dependencies of target mmseqs-framework; [ 35%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Alignment.cpp.o; [ 36%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/CompressedA3M.cpp.o; [ 36%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Main.cpp.o; [ 37%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Matcher.cpp.o; [ 37%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/MsaFilter.cpp.o; [ 37%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/MultipleAlignment.cpp.o; [ 38%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/PSSMCalculator.cpp.o; [ 38%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/StripedSmithWaterman.cpp.o; [ 38%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/BandedNucleotideAligner.cpp.o; [ 39%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/rescorediagonal.cpp.o; [ 39%] Building CXX object src/CMakeFiles/mmseq,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:11337,depend,dependencies,11337,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,1,['depend'],['dependencies']
Integrability,"bfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02);",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1214,message,message,1214,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476,1,['message'],['message']
Integrability,"cat/protein_cat/tmp/14045843375066908893/pref_filter2 --filter-file /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/order_redundancy --threads 50 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 764.94M 2m 3s 835ms; Time for merging to pref_filter2: 0h 26m 51s 419ms; Time for processing: 0h 44m 18s 340ms; align /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref_filter2 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 50 --compressed 0 -v 3 . Compute score and coverage; Query database size: 764944220 type: Nucleotide; Target database size: 764944220 type: Nucleotide; Calculation of alignments; [=================================================================] 764.94M 23m 36s 275ms; Time for merging to aln: 0h 32m 14s 887ms. 781315288 alignments calculated.; 765501793 sequence pairs passed the thresholds (0.979760 of overall calculated).; 1.000729 hits per query sequence.; Time for processing: 1h 9m 13s 720ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/input_step_redundancy /hwfssz1",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:14829,wrap,wrapped-scoring,14829,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['wrap'],['wrapped-scoring']
Integrability,"ced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 100000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00K 0s 853ms; Sort kmer 0h 0m 0s 789ms; Sort by rep. sequence 0h 0m 0s 951ms; Time for fill: 0h 0m 0s 155ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 3s 166ms; rescorediagonal ./mms_smallDB ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 100.00K 0s 206ms; Time for merging to pref_rescore1: 0h 0m 0s 757ms; Time for processing: 0h 0m 1s 988ms; clust ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore1 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pre_clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Connected Component; [=================================================================] 100.00K 0s 367ms; Sort entries; Find missing connections; Found 245160 new connections.; Reconstruct initial order; [=================================================================] 100.00K 0s 304ms; Add missing connections; [===================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:12203,wrap,wrapped-scoring,12203,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped-scoring']
Integrability,"ces in behaviour:. ~ See newest comment below for log with reproducible data ~. `mmseqs cluster DB_in DB_clu tmp/ --cluster-reassign 1 --cluster-mode 0 --cov-mode 0`. Create directory tmp/; cluster DB_in DB_clu tmp/ --cluster-reassign 1 --cluster-mode 0 --cov-mode 0. MMseqs Version: 9290a2b529da9763992bde2e6e0f95c61b003123; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//1079",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:1243,wrap,wrapped,1243,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['wrap'],['wrapped']
Integrability,"cid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 6 0s 1ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 22ms; rescorediagonal /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3. [=================================================================] 6 0s 3ms; Time for merging to pref_rescore1: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 23ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 6 0s 0ms; Sort entries; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:9572,wrap,wrapped-scoring,9572,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['wrap'],['wrapped-scoring']
Integrability,"cluster fails when ""--wrapped-scoring 1"" is called due to rescore-mode despite it being specified",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/509:22,wrap,wrapped-scoring,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509,1,['wrap'],['wrapped-scoring']
Integrability,"clustering ""mmseqs cluster"" or single round clustering using ""search"" followed by ""clust"" the behavior appear to function as intended. Perhaps something in the profile generation or implementation of profile against consensus searches affects the interpretation of the -c parameter? Investigating the alignment data of the attached MSA with mmseqs convertalis (attached below) shows that all hits indeed passes the -c 0.8 cutoff? As such perhaps my understanding of what constitutes alignment coverage is lacking and in that case how would one go about retricting the ""coverage"" to only query-target pairs with lengths within 80% of each other? I have tried --covmode 5 with similar results. . ## Expected Behavior. Restriction of clustered protein sequence lengths by imposing cover limits via the -c parameter in conjunction with any --covmode. ## Current Behavior. Clusters containing sequences of vastly different lengths far outside the range of the -c cutoff. . ## Context. My protocol can be summarized roughly as:. 1) Collapse paralogs and create cluster representatives in order to reduce database redundancy using;; mmseqs cluster initial-database clusters -s 5 -c 0.8 --min-seq-id 0.9 --cluster_mode 0 --max-iterations 3 --max-seqs 100 --covmode 0. 2) Iterate profile generation and searches of profiles against consensus sequences; mmseqs search cluster-representatives cluster-representatives representative-search -s 7 -c 0.8 --covmode 0 --maxseqs 300 -e 0.003; mmseqs result2profile cluster-representatives cluster-representatives representative-search profiles; mmseqs profile2consensus profiles initial-database consensus; mmseqs search profiles consensus profile-search -s 7 -c 0.8 --covmode 0 --maxseqs 300 -e 0.003; mmseqs clust --clustermode 0 consensus profile-search profile-clusters; mmseqs createsubdb profile-clusters initial-database new-cluster-representatives. Here new-cluster-representatives are used as input to round two of searches. . ## Alignment data ; query target",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:1848,protocol,protocol,1848,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['protocol'],['protocol']
Integrability,"createdb should need about 24 byte per sequence to track the creation of the index, which when explodes on the machine with 10GB ram apparently. . @acpguedes We recently clusterd 2 billion sequences on 128GB nodes, however also with a bit of pain. `--split-memory-limit` will help. However the description message is wrong, the parameter expects kilobyte of memory not megabyte. Try running with about 70% of your RAM.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/157#issuecomment-459710150:306,message,message,306,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/157#issuecomment-459710150,1,['message'],['message']
Integrability,ct lib/alp/CMakeFiles/alp.dir/njn_localmaxstat.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatmatrix.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_sim.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_pvalues.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogproblim.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alignment_evaluer.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_regression.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatutil.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_basic.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_data.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_ioutil.cpp.o; [ 7%] Built target alp; Scanning dependencies of target ksw2; make[2]: Warning: File 'lib/ksw2/CMakeFiles/ksw2.dir/depend.make' has modification time 0.00049 s in the future; [ 7%] Building CXX object lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o; make[2]: warning: Clock skew detected. Your build may be incomplete.; [ 7%] Built target ksw2; Scanning dependencies of target generated; [ 8%] Generating ../generated/easysearch.sh.h; [ 8%] Generating ../generated/easycluster.sh.h; [ 9%] Generating ../generated/blastp.sh.h; [ 9%] Generating ../generated/blastpgp.sh.h; [ 9%] Generating ../generated/map.sh.h; [ 10%] Generating ../generated/linclust.sh.h; [ 10%] Generating ../generated/clustering.sh.h; [ 11%] Generating ../generated/cascaded_clustering.sh.h; [ 11%] Generating ../generated/update_clustering.sh.h; [ 11%] Generating ../generated/searchtargetprofile.sh.h; [ 12%] Generating ../generated/createindex.sh.h; [ 12%] Generating ../generated/translated_search.sh.h; [ 13%] Generating ../generated/taxonomy.sh.h; [ 13%] Generating ../generated/multihitdb.sh.h; [ 14%] Generating ../generated/multihitsear,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:4361,depend,depend,4361,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,1,['depend'],['depend']
Integrability,"d 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 149ms; rescorediagonal artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 136 0s 18ms; Time for merging to pref_rescore1: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 48ms; clust artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore1 tmp//7897776346521331899/linclust/17269245559208916342/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 136 0s 1ms; Sort entries; Find missing connections; Found 9 new connections.; Reconstruct initial order; [=================================================================] 100.00% 136 0s 2ms; Add missing connections; [==============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:4809,wrap,wrapped-scoring,4809,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['wrap'],['wrapped-scoring']
Integrability,"d 0 -v 3 . [=================================================================] 1.60M 14m 50s 51ms; Time for merging to aln_ungapped: 0h 0m 1s 439ms; Time for processing: 0h 15m 7s 16ms; subtractdbs tmp/16479300059278292880/pref tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/pref_subtract --threads 112 --compressed 0 -v 3 . subtractdbs tmp/16479300059278292880/pref tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/pref_subtract --threads 112 --compressed 0 -v 3 . Remove tmp/16479300059278292880/aln_ungapped ids from tmp/16479300059278292880/pref; [=================================================================] 1.60M 1s 175ms; Time for merging to pref_subtract: 0h 0m 1s 400ms; Time for processing: 0h 0m 5s 506ms; align tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/pref_subtract tmp/16479300059278292880/aln_gapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 112 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1604546 type: Nucleotide; Target database size: 802273 type: Nucleotide; Calculation of alignments; [=================================================================] 1.60M 22m 53s 435ms; Time for merging to aln_gapped: 0h 0m 0s 903ms; 70826259 alignments calculated; 3445894 sequence pairs passed the thresholds (0.048653 of overall calculated); 2.147582 hits per query se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:15065,wrap,wrapped-scoring,15065,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['wrap'],['wrapped-scoring']
Integrability,"d. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner; Force restart using the latest tmp false; Remove Temporary Files false. Could not create symlink of tmp/5177011769629871693!. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I got a remote VM from a university lab in which I run the project. everything was going quite well (compilation, installation, creating the DBs) but when I wanted to pre-compute the index of targetDB, I got this weird error with no further details to solve it. I don't know if it is related to the privileges granted to me in the VM or the version of MMseqs. Would you please suggest some hints/help?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 9357bb750290e2862ab4da522f03c971f71cfff3; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc version 4.8.5 & cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Architecture : x86_64 / Processor : 4x Intel Xeon E312xx (Sandy Bridge) / Memory : 196.62 GiB / Instruction set: SSE4_1; * Operating system and version: CentOS 7.6.1810",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/171:3605,Bridg,Bridge,3605,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/171,1,['Bridg'],['Bridge']
Integrability,"d.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:2049,protocol,protocol,2049,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['protocol'],['protocol']
Integrability,d_static.dir/__/__/__/lib/decompress/zstd_ddict.c.o; [ 33%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/dictBuilder/cover.c.o; [ 33%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/dictBuilder/fastcover.c.o; [ 34%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/dictBuilder/divsufsort.c.o; [ 34%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/dictBuilder/zdict.c.o; [ 34%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/deprecated/zbuff_common.c.o; [ 35%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/deprecated/zbuff_compress.c.o; [ 35%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/deprecated/zbuff_decompress.c.o; Linking C static library libzstd.a; [ 35%] Built target libzstd_static; Scanning dependencies of target tinyexpr; [ 35%] Building C object lib/tinyexpr/CMakeFiles/tinyexpr.dir/tinyexpr.c.o; Linking C static library libtinyexpr.a; [ 35%] Built target tinyexpr; Scanning dependencies of target mmseqs-framework; [ 35%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Alignment.cpp.o; [ 36%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/CompressedA3M.cpp.o; [ 36%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Main.cpp.o; [ 37%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Matcher.cpp.o; [ 37%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/MsaFilter.cpp.o; [ 37%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/MultipleAlignment.cpp.o; [ 38%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/PSSMCalculator.cpp.o; [ 38%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/StripedSmithWaterman.cpp.o; [ 38%] Building CXX object src/CMakeFiles/mmseqs-fra,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:11149,depend,dependencies,11149,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,1,['depend'],['dependencies']
Integrability,"different values of --threads and --split-memory-limit (<200G) but no success. I tried to reindex UniRef90 using --split-memory-limit 200G, still no success. So I'm wondering if it's really possible to run MMSEQS on UniRef90 with 256GB of RAM, or if I'm missing an option that makes it possible. Thank you in advance for the help. Guillaume. ## Expected Behavior; Complete the search. ## Current Behavior. Fail at the prefilter stage. Error: Prefilter died; Error: Search died. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. Downloaded UniRef90 using the mmseqs databases tool. Then:; mmseqs easy-search ./DNAP-BAIT ./UniRef90 RST /tmp/MMS$$ --threads 4. ## MMseqs Output (for bugs). easy-search /shared/projects/phycovir/SONIA/DNAP-BAIT ./UniRef90 RST /tmp/MMS6178 --threads 4 . MMseqs Version: 	14.7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	4; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matchin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/728:1062,wrap,wrapped,1062,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728,1,['wrap'],['wrapped']
Integrability,ding CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatmatrix.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_sim.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_pvalues.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogproblim.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alignment_evaluer.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_regression.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatutil.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_basic.cpp.o; [ 8%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_data.cpp.o; [ 8%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_ioutil.cpp.o; [ 8%] Built target alp; Scanning dependencies of target ksw2; [ 8%] Building CXX object lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o; [ 8%] Built target ksw2; Scanning dependencies of target generated; [ 8%] Generating ../generated/VTML80.out.h; [ 9%] Generating ../generated/VTML40.out.h; [ 9%] Generating ../generated/nucleotide.out.h; [ 9%] Generating ../generated/blosum62.out.h; [ 10%] Generating ../generated/PAM30.out.h; [ 10%] Generating ../generated/CovSeqidQscPercMinDiag.lib.h; [ 10%] Generating ../generated/CovSeqidQscPercMinDiagTargetCov.lib.h; [ 11%] Generating ../generated/ExpOpt3_8_polished.cs32.lib.h; [ 11%] Generating ../generated/Library255_may17.lib.h; [ 12%] Generating ../generated/libPolished_8.lib.h; [ 12%] Generating ../generated/cs219.lib.h; [ 12%] Generating ../generated/krona_prelude.html.h; [ 13%] Generating ../generated/result_viz_prelude.html.zst.h; [ 13%] Generating ../generated/K4000.crf.h; [ 13%] Generating ../generated/easysearch.sh.h; [ 14%] Generating ../generated/easycluster.sh.h; [ 14%] Generating ../generated/easytaxonomy.sh.h; [ 15%] Generating ../generated/easyrbh.sh.h; [ 15%] Generating ../generated/blastp.sh.h; [ 15%] Ge,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:5312,depend,dependencies,5312,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,1,['depend'],['dependencies']
Integrability,"dinglab/MMseqs2] the website to download ssu.fna for GTDB doesn't work (Issue #548). Hi, ; ; I’m sorry but I can’t help. I couldn't use it at the end because of that problem. ; Best, ; Ana ; ; &gt; On 3 Aug 2023, at 08:11, csm276 ***@***.*** ***@***.***&gt;&gt; wrote: ; &gt; ; &gt; ; &gt; Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au <http://data.ace.uq.edu.au/&gt; (data.ace.uq.edu.au <http://data.ace.uq.edu.au/&gt;)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found. ... ... awk -F'[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory) ; &gt; ; &gt; Any help on this will be appreciated ; &gt; ; &gt; Hi， ; &gt; How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working ; &gt; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna <https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna&gt; ; &gt; Can you give me some advice? Thanks a lot. ; &gt; ; &gt; — ; &gt; Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073&gt;, or unsubscribe <https://github.com/notifications/unsubscribe-auth/APMXFJCAL7ML33M3S4GNM33XTM6K3ANCNFSM5QJH4VIA&gt;. ; &gt; You are receiving this because you commented. ; &gt; ; ; ; ; --------------------------------------------- ; Ana María Cabello Pérez, PhD ; ; Centro Oceanográfico de Málaga (IEO-CSIC) ; Instituto Español de Oceanografía ; Puerto Pesquero s/n ; 29640 Fuengirola, Málaga, Spain ; Tel: +34 95 219 71 24 ; ***@***.*** ; --------------------------------------------- ; ; ; —; Reply to this email directly, view it on GitHub, or unsubscribe.; You are receiving this because you commented.Message ID: ***@***.***&gt;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1665018131:2216,Message,Message,2216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1665018131,1,['Message'],['Message']
Integrability,"e following error:. ```; taxonomy -e 1e-5 --max-seqs 200 --num-iterations 2 --start-sens 1 --sens-steps 3 -s 6 --lca-ranks superkingdom,kingdom,phylum,class,order,family,genus,species --threads 8 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/seqs_tax_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP. MMseqs Version: 	13.45111; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	superkingdom,kingdom,phylum,class,order,family,genus,species; Column with taxonomic lineage 	0; Compressed 	0; Threads 	8; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1e-05; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:1206,wrap,wrapped,1206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,1,['wrap'],['wrapped']
Integrability,"e for processing: 0h 0m 0s 75ms; mergeclusters DB_in tmp//10798751672030653963/clu tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/clu_step0 tmp//10798751672030653963/clu_step1 tmp//10798751672030653963/clu_step2. Clustering step 1; [=================================================================] 100.00% 276 0s 5ms; Clustering step 2; [=================================================================] 100.00% 239 0s 25ms; Clustering step 3; [=================================================================] 100.00% 222 0s 44ms; Clustering step 4; [=================================================================] 100.00% 200 0s 61ms; Write merged clustering; [=================================================================] 100.00% 303 0s 73ms; Time for merging to clu: 0h 0m 0s 10ms; Time for processing: 0h 0m 0s 88ms; align DB_in DB_in tmp//10798751672030653963/clu tmp//10798751672030653963/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 303 type: Aminoacid; Target database size: 303 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 200 0s 20ms; Time for merging to aln: 0h 0m 0s 1ms; 303 alignments calculated; 289 sequence pairs passed the thresholds (0.953795 of overall calculated); 1.445000 hits per query sequence; Time for processing: 0h 0m 0s 47ms; subtractdbs tmp//10798751672030653963/clu tmp//10798751672030653963/aln tmp//10798751672030653963/clu_not_acce",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:24200,wrap,wrapped-scoring,24200,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['wrap'],['wrapped-scoring']
Integrability,"e set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 1.39K 0s 32ms; Time for merging to pref_rescore1_tmp_0: 0h 0m 0s 202ms========> ] 96.68% 1.34K eta 0s; Time for merging to pref_rescore1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 961ms; clust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 1.39K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [============================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:5861,wrap,wrapped-scoring,5861,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['wrap'],['wrapped-scoring']
Integrability,"e size: 8408 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8408; Target db start 1 to 756891; [=================================================================] 100.00% 8.41K 0s 981ms . 0.020249 k-mers per position; 72 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 8273 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 10ms; Time for processing: 0h 0m 11s 757ms; align IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 tmp/16138406286044646862/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 8408 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.41K 0s 647ms ; Time for merging to aln_0: 0h 0m 0s 8ms. 2061 alignments calculated.; 2061 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.245124 hits per query sequence.; Time for processing: 0h 0m 1s 887ms; createsubdb tmp/16138406286044646862/order_0 IP_DB/IP_DB tmp/16138406286044646862/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; prefilter tmp/16138406286044646862/input_0 Cryptic_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:5880,wrap,wrapped-scoring,5880,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['wrap'],['wrapped-scoring']
Integrability,"e? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result database: CLU_updated; Start writing to clusters.tsv; Invalid database read for database data file=DB_updated_h, database index=DB_updated_h.index; getData: local id (4294967295) >= db size (17); ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment. * _Git commit used:_ 2f66ae897fc813450fa5ef0c78123bd3c41c4717; * _Which MMseqs version was used_: Compilation from source; * _Cmake versions used_: cmake version 3.5.1; * Op",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272:1485,message,message,1485,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272,1,['message'],['message']
Integrability,"eads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1 . MMseqs Version: 	bdd169b3e285299cab792e62d60eb1f4e4e434d2; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	4; Split mode 	2; Split memory limit 	70G; Coverage threshold 	0.9; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:2157,wrap,wrapped,2157,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['wrap'],['wrapped']
Integrability,"easonable values to use. What I actually need, is only the best hit(s) for my queries. I would be thankful for any advice ;-) . My command: ; `Programs/MMSeqs2/mmseqs/bin/mmseqs easy-search --slice-search --search-type 3 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen"" A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ 1> A2p515F2F4F6_vs_NT_Jan2021.mmseq2.std 2>&1`. The stdout:; ```; easy-search --slice-search --search-type 3 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	256; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary p",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:1598,wrap,wrapped,1598,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['wrap'],['wrapped']
Integrability,ect src/CMakeFiles/mmseqs-framework.dir/util/proteinaln2nucl.cpp.o; [ 92%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/versionstring.cpp.o; [ 92%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/diskspaceavail.cpp.o; [ 93%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/Cluster.cpp.o; [ 93%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/ClusterUpdate.cpp.o; [ 93%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/Databases.cpp.o; [ 94%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/Linclust.cpp.o; [ 94%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasySearch.cpp.o; [ 95%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasyRbh.cpp.o; [ 95%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasyCluster.cpp.o; [ 95%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasyLinclust.cpp.o; [ 96%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/Enrich.cpp.o; [ 96%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/Linsearch.cpp.o; [ 96%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/Map.cpp.o; [ 97%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/Rbh.cpp.o; [ 97%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/Search.cpp.o; [ 98%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/Taxonomy.cpp.o; [ 98%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasyTaxonomy.cpp.o; [ 98%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/CreateIndex.cpp.o; [100%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/MMseqsBase.cpp.o; Linking CXX static library libmmseqs-framework.a; [100%] Built target mmseqs-framework; Scanning dependencies of target mmseqs; [100%] Building CXX object src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o; Linking CXX executable mmseqs; [100%] Built target mmseqs; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:26457,depend,dependencies,26457,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,1,['depend'],['dependencies']
Integrability,"eject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --m",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:2389,wrap,wrapped-scoring,2389,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['wrap'],['wrapped-scoring']
Integrability,"er position; mmseqs-web-worker_1 | 0 DB matches per sequence; mmseqs-web-worker_1 | 0 overflows; mmseqs-web-worker_1 | 0 queries produce too much hits (truncated result); mmseqs-web-worker_1 | 0 sequences passed prefiltering per query sequence; mmseqs-web-worker_1 | 0 median result list length; mmseqs-web-worker_1 | 1 sequences with 0 size result lists; mmseqs-web-worker_1 | Time for merging to pref_0: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 5ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/search/pref_0 /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --zdrop 40 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Compute score, coverage and sequence identity; mmseqs-web-worker_1 | Query database size: 1 type: Nucleotide; mmseqs-web-worker_1 | Target database size: 10754 type: Nucleotide; mmseqs-web-worker_1 | Calculation of alignments; mmseqs-web-worker_1 | [=================================================================] 1 0s 2ms; mmseqs-web-worker_1 | Time for merging to aln: 0h 0m 0s 0ms; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:24959,wrap,wrapped-scoring,24959,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['wrap'],['wrapped-scoring']
Integrability,"er size: 0.000001; Top 10 k-mers; DFVKIA	1; ATLTKA	1; SEEGLA	1; IWEEIC	1; PFDSKD	1; CLRHLD	1; DMAGTD	1; QNRWRE	1; GENRSE	1; LAKPDF	1; Time for index table init: 0h 0m 0s 778ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 1; [=================================================================] 100.00% 1 eta -. 602.620000 k-mers per position; 41 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 740ms; align tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 tmp/15248047069833069253/result --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 1 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 1 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Time for merging to result: 0h 0m 0s 0ms; 1 alignments calculated; 1 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 28ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:7249,wrap,wrapped-scoring,7249,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,1,['wrap'],['wrapped-scoring']
Integrability,"er using colabfold. ## Current Behavior; Local mmseqs always paused for hours without generating outputs. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I am using `colab_search` which calls `mmseqs` like `search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8`. The query contains 4 amino acid sequences, and each has the length of 493 amino acid. NOTE, when I took off `--split 8`, I also observed that mmseqs halts at certain stage. ## MMseqs Output (for bugs); <pre>; search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8 [93/1999]. MMseqs Version: b768f48f0bd73688b6a68132159a97f7b6310f03; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 2; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 72; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 8; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 10000; Split database 8; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Exact k-mer matching 0 [49/1999]; Mask r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517:1085,wrap,wrapped,1085,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517,1,['wrap'],['wrapped']
Integrability,"er-mode 0 -s 7.5 --min-seq-id 0.97 --min-aln-len 200. MMseqs Version: 	bb0a1b3569b9fe115f3bf63e5ba1da234748de23; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	false; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	20; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.97; Min alignment length 	200; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:2066,wrap,wrapped,2066,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['wrap'],['wrapped']
Integrability,"erage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. align /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /scratch/jobs/56067190/14902988131097346952/pref_0 /tmp/56067190/queryT.fa.mmsq.outDB --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 100000 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score and coverage; Query database size: 10000 type: Aminoacid; Target database size: 10000 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 130 0s 27ms ; Time for merging to queryT.fa.mmsq.outDB: 0h 0m 0s 0ms. 1711 alignments calculated.; 1711 sequence pairs passed the thresholds (1.000000 of overall calculated).; 13.161538 hits per query sequence.; Time for processing: 0h 0m 0s 119ms; convertalis /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /tmp/56067190/queryT.fa.mmsq.m8 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:4785,wrap,wrapped-scoring,4785,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276,1,['wrap'],['wrapped-scoring']
Integrability,"eric ids 0; Compressed 0; Verbosity 3. Converting sequences; [===================================; Time for merging to BH193L-2_S20_database_h: 0h 0m 0s 80ms; Time for merging to BH193L-2_S20_database: 0h 0m 0s 85ms; Database type: Aminoacid; Time for processing: 0h 0m 17s 880ms; Create directory tmp_BH193L-2_S20; taxonomy --lca-mode 3 --threads 36 -e 0.0001 --tax-lineage 1 -s 3 --lca-ranks species,genus,family,order,class,phylum,kingdom,superkingdom BH193L-2_S20_database NR BH193L-2_S20.result tmp_BH193L-2_S20. MMseqs Version: 14.7e284; ORF filter 1; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Taxonomy output mode 0; Majority threshold 0.5; Vote mode 1; LCA ranks species,genus,family,order,class,phylum,kingdom,superkingdom; Column with taxonomic lineage 1; Compressed 0; Threads 36; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.0001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 3; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagon",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/678:1382,wrap,wrapped,1382,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678,1,['wrap'],['wrapped']
Integrability,"ernative alignments 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	1; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:2829,wrap,wrapped-scoring,2829,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['wrap'],['wrapped-scoring']
Integrability,"ers; TGPTYY 27757; AFYRLP 26608; PIPVFY 26525; FTVGTY 26386; TLTNDY 25757; SALDYW 25262; EPVKNS 25067; GAFLPY 24885; AGYFDW 24698; HYFVAV 24187; Time for index table init: 0h 0m 17s 833ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Context; Used the same db (hmmsearchDB) to cluster my sequences using mmseqs cluster. Now I'm trying to see what each cluster is comprised of by running a sear",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:5050,wrap,wrapped-scoring,5050,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,1,['wrap'],['wrapped-scoring']
Integrability,"ery database size: 8000 type: Nucleotide; Estimated memory consumption: 18G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; ^C===============> ] 25.00% 2.00K eta 5m 1s . **Runs of Intel computer**; [kabru@bwp-cfdmain test]$ mmseqs taxonomy testdb ~/datenbank/silvadb testx_result tmp; taxonomy testdb /home/kabru/datenbank/silvadb testx_result tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	72; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverag",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:5072,wrap,wrapped,5072,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,1,['wrap'],['wrapped']
Integrability,es/alp.dir/njn_dynprogprobproto.cpp.o; [ 2%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstat.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatmatrix.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_sim.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_pvalues.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogproblim.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alignment_evaluer.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_regression.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatutil.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_basic.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_data.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_ioutil.cpp.o; [ 7%] Built target alp; Scanning dependencies of target ksw2; make[2]: Warning: File 'lib/ksw2/CMakeFiles/ksw2.dir/depend.make' has modification time 0.00049 s in the future; [ 7%] Building CXX object lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o; make[2]: warning: Clock skew detected. Your build may be incomplete.; [ 7%] Built target ksw2; Scanning dependencies of target generated; [ 8%] Generating ../generated/easysearch.sh.h; [ 8%] Generating ../generated/easycluster.sh.h; [ 9%] Generating ../generated/blastp.sh.h; [ 9%] Generating ../generated/blastpgp.sh.h; [ 9%] Generating ../generated/map.sh.h; [ 10%] Generating ../generated/linclust.sh.h; [ 10%] Generating ../generated/clustering.sh.h; [ 11%] Generating ../generated/cascaded_clustering.sh.h; [ 11%] Generating ../generated/update_clustering.sh.h; [ 11%] Generating ../generated/searchtargetprofile.sh.h; [ 12%] Generating ../generated/createindex.sh.h; [ 12%] Generating ../generated/translated_search.sh.h; [ 13%] Generating ../generated/taxonomy.sh.h; [ 13%] Generating ../generat,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:4279,depend,dependencies,4279,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,1,['depend'],['dependencies']
Integrability,"essing: 0h 0m 1s 801ms; swapdb tmp//538598962955004214/seq_wrong_assigned_pref tmp//538598962955004214/seq_wrong_assigned_pref_swaped --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 9 0s 13ms; Computing offsets.; [=================================================================] 100.00% 9 0s 5ms. Reading results.; [=================================================================] 100.00% 9 0s 4ms. Output database: tmp//538598962955004214/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00% 297 0s 6ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 85ms; align tmp//538598962955004214/seq_seeds.merged tmp//538598962955004214/seq_wrong_assigned tmp//538598962955004214/seq_wrong_assigned_pref_swaped tmp//538598962955004214/seq_wrong_assigned_pref_swaped_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 210 type: Aminoacid; Target database size: 9 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 18 0s 12ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 0ms; 24 alignments calculated; 18 sequence pairs passed the thresholds (0.750000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 63ms; filterdb tmp//538598962955004214/seq_wrong_assigned_pref_swaped_aln tmp//53859896295",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:30125,wrap,wrapped-scoring,30125,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['wrap'],['wrapped-scoring']
Integrability,"et to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 of overall calculated).; 1.097190 hits per query sequence.; Time for merging to aln: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 84ms; clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:11540,wrap,wrapped-scoring,11540,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['wrap'],['wrapped-scoring']
Integrability,"failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:9776,wrap,wrapped-scoring,9776,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['wrap'],['wrapped-scoring']
Integrability,"fle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [19999] 0s 15ms; Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 16ms; Create directory /tmp/mydir/7574787915800795625/clu_tmp; cluster /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1 . Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/657336320172",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:4245,wrap,wrapped-scoring,4245,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['wrap'],['wrapped-scoring']
Integrability,"g k-mer size: 7.824739; Top 10 k-mers; DFEQLPH	65289; NVPGWSP	65148; FRYAFPS	64963; RYYVLGW	64817; VDRLNTQ	63812; WRLDFLN	62949; TVDGDFS	62609; NKTDFVQ	61859; QDWVQIP	61316; LDGAYVP	59471; Time for index table init: 0h 16m 9s 488ms; Time for processing: 0h 16m 22s 538ms; lcaalign /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Input /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 does not exist; Error: Alignment died; Error: First search died; Error: taxonomy died; Error: Search died; ```. Many thanks; Antonio. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 5daca424b162cc5fdf0b9cd151aebed86975cbf6; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Sel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/433:1748,wrap,wrapped-scoring,1748,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433,1,['wrap'],['wrapped-scoring']
Integrability,"get db start 1 to 6; =[================================================================] 6 0s 2ms. 37.492909 k-mers per position; 87 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 474ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to aln_step2: 0h 0m 0s 3ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 15ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_upda",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:31004,wrap,wrapped-scoring,31004,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['wrap'],['wrapped-scoring']
Integrability,"get db start 1 to 6; [=================================================================] 6 0s 1ms. 7.473668 k-mers per position; 69 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 25ms; Time for processing: 0h 0m 1s 533ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to aln_step1: 0h 0m 0s 4ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 17ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_upda",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:25953,wrap,wrapped-scoring,25953,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['wrap'],['wrapped-scoring']
Integrability,"gives similar results. ## MMseqs Output (for bugs). similarity type 1: ; Create directory clu/sim1_tmp; cluster in/DB_in clu/sim1_clu clu/sim1_tmp --cov-mode 0 -c 0.8 --cluster-mode 0 --min-seq-id 0.9 --mask 0 -k 5 --spaced-kmer-pattern 110111 --similarity-type 1. MMseqs Version: a19f5a526012b849a723935acf56d10f39d24611; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 5; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:1889,wrap,wrapped,1889,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped']
Integrability,"h 0m 0s 736ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9304; Target db start 1 to 9304; [=================================================================] 100.00% 9.30K 0s 164ms . 2.036021 k-mers per position; 245 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 2 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 265ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 9304 type: Aminoacid; Target database size: 9304 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 9.30K 1s 357ms ; Time for merging to aln_step0: 0h 0m 0s 2ms; 22013 alignments calculated; 18612 sequence pairs passed the thresholds (0.845500 of overall calculated); 2.000430 hits per query sequence; Time for ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:18523,wrap,wrapped-scoring,18523,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['wrap'],['wrapped-scoring']
Integrability,"here are cores available on each node (48); ## Current Behavior; 1 MPI task per node is launched, but the number of threads running on any node is capped at 12, regardless of what value argument to `--threads` is provided; ## Steps to Reproduce (for bugs). Job script:. ```; #!/usr/bin/env bash. #SBATCH --job-name=mmseqs; #SBATCH --output=mmseqs_gcc12_test2.log; #SBATCH -N 8; #SBATCH --ntasks-per-node=1; #SBATCH --cpus-per-task=48; #SBATCH --time=08:00:00; #SBATCH -p medium. module load slurm; module load openmpi/gcc12.1.0/4.1.4. export PATH=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45/bin:$PATH. DBDIR=/lustre/projects/carlson-group/mmseqs2-project/DBs. RUNNER=""mpirun -pernode -np 8"" mmseqs search human_prot.db $DBDIR/UniRef50 human_prot_results_test2 ./tmp; ```. ## MMseqs Output (for bugs); ```. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	384; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer match",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:1347,wrap,wrapped,1347,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['wrap'],['wrapped']
Integrability,"hold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:2131,message,message,2131,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['message'],['message']
Integrability,"i,. I'm getting an error when trying to blastn sequences vs NT DB. I also tried to just run the last convertalis command on a different computer and saw it crashed after getting to ~2TB of RAM usage. Is there a way to bypass and solve this issue?. Thanks!; Haim; ; ## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. easy-search --search-type 3 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen /tmp/rep.fasta.gz /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/rep_vs_NT_Jan2021.mmseq2.m8 /tmp/ --threads 32 --split-memory-limit 250G . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	250G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:1005,wrap,wrapped,1005,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['wrap'],['wrapped']
Integrability,"icial2/DB_artificial tmp//7897776346521331899/clu tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/clu_step0 tmp//7897776346521331899/clu_step1 tmp//7897776346521331899/clu_step2. Clustering step 1; [=================================================================] 100.00% 124 0s 5ms; Clustering step 2; [=================================================================] 100.00% 124 0s 27ms; Clustering step 3; [=================================================================] 100.00% 124 0s 45ms; Clustering step 4; [=================================================================] 100.00% 124 0s 64ms; Write merged clustering; [=================================================================] 100.00% 136 0s 79ms; Time for merging to clu: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 99ms; align artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/clu tmp//7897776346521331899/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 136 type: Aminoacid; Target database size: 136 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 17ms; Time for merging to aln: 0h 0m 0s 2ms; 136 alignments calculated; 134 sequence pairs passed the thresholds (0.985294 of overall calculated); 1.080645 hits per query sequence; Time for processing: 0h 0m 0s 43ms; subtractdbs tmp//7897776346521331899/clu tmp//7897776346521331899/aln tmp//7897776346521331899/clu_not_accepte",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:24322,wrap,wrapped-scoring,24322,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['wrap'],['wrapped-scoring']
Integrability,"ide database (97 GB) with uniprotkb. . ## Current Behavior; The first filtering step (easy-taxonomy) runs for about 12 hours now. Is that correct? Is there a way to speed up the pre-filtering? If the pre-filtering process is split into 6 parts, can I expect that every section takes 12 hours?. ## Steps to Reproduce (for bugs); ```; mmseqs databases UniProtKB databases/uniprotkb tmp; mmseqs easy-taxonomy input.fna databases/uniprotkb taxdb tmp --dbtype 2 --lca-mode 4 --orf-filter 0 --tax-lineage 1 --split-memory-limit 200G --threads 32; ```; ## MMseqs Output (for bugs); Create directory tmp; ```; MMseqs Version: 13.45111; ORF filter 0; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 4; Majority threshold 0.5; Vote mode 1; LCA ranks ; Column with taxonomic lineage 1; Compressed 0; Threads 32; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 200G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/577:1084,wrap,wrapped,1084,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577,1,['wrap'],['wrapped']
Integrability,"ign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:3687,wrap,wrapped-scoring,3687,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['wrap'],['wrapped-scoring']
Integrability,"iles//13298481167543164943/linclust/10229649346622198404/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 52ms; align tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore2 tmpfiles//13298481167543164943/linclust/10229649346622198404/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 276 0s 26ms; Time for merging to aln: 0h 0m 0s 1ms. 276 alignments calculated.; 276 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 82ms; clust tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/aln tmpfiles//1329848",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:8239,wrap,wrapped-scoring,8239,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['wrap'],['wrapped-scoring']
Integrability,"ilter result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:1778,wrap,wrapped-scoring,1778,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['wrap'],['wrapped-scoring']
Integrability,"im2_tmp/12164117771218227067/linclust/3267328275516617562/pref_filter2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 22ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms ] 49.02% 76 eta 0s; Time for processing: 0h 0m 0s 76ms; align clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 34ms; Time for merging to aln: 0h 0m 0s 2ms; 154 alignments calculated; 154 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 142ms; clust clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/121",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:24759,wrap,wrapped-scoring,24759,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability,"in GTDB database for mmseqs (https://zenodo.org/record/4751564/files/GTDB_v95.tar.gz) and standard taxonomy command line with 24 threads and >100 Gb RAM. mmseqs2 is progressing very slowly for this single bin (330kbases only, quoting hours to run). The authors of SemiBin quote the step which includes mmseq taxonomic assignment as taking 90-120 minutes on similar sizes servers for contigs from whole datasets. Does runtime scales with the search database and not the query size? Have I done something wrong? All advice gratefully received. ## MMseqs Output (for bugs); ```; MMseqs Version: 13.45111; ORF filter 1; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Taxonomy output mode 0; Majority threshold 0.5; Vote mode 1; LCA ranks; Column with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 2; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/479:1137,wrap,wrapped,1137,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479,1,['wrap'],['wrapped']
Integrability,"index table init: 0h 0m 0s 735ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6712; Target db start 1 to 6712; [=================================================================] 100.00% 6.71K 0s 701ms . 36.614229 k-mers per position; 788 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 4 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 802ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 6712 type: Aminoacid; Target database size: 6712 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 6.71K 0s 264ms ; Time for merging to aln_step1: 0h 0m 0s 1ms; 13873 alignments calculated; 8509 sequence pairs passed the thresholds (0.613350 of overall calculated); 1.267729 hits per query sequence; Time for p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:23374,wrap,wrapped-scoring,23374,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['wrap'],['wrapped-scoring']
Integrability,"ity 	3. Query database size: 1270615 type: Profile; Target database size: 1270615 type: Aminoacid; [=================================================================] 1.27M 21m 19s 868ms; Time for merging to euk72-90.profile2: 0h 0m 40s 828ms; Time for processing: 0h 23m 5s 420ms; profile2consensus euk72-90.profile2 euk72-90.consensus2 --threads 48 . MMseqs Version: 	aabc78c298f35cbc7a4136206c1a83adaa68695f; Substitution matrix	aa:blosum62.out,nucl:nucleotide.out; Max sequence length	65535; Threads 	48; Compressed 	0; Verbosity 	3. [=================================================================] 1.27M 2m 13s 834ms; Time for merging to euk72-90.consensus2: 0h 0m 0s 850ms; Time for processing: 0h 2m 15s 974ms; search euk72-90.profile2 euk72-90.consensus2 euk72-90.profile_search2 .mmseqs_tmp -s 7 -c 0.8 --threads 48 . MMseqs Version: 	aabc78c298f35cbc7a4136206c1a83adaa68695f; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	48; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matchi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:5757,wrap,wrapped,5757,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['wrap'],['wrapped']
Integrability,"ize 15 ; > Index table: counting k-mers; > Segmentation fault (core dumped) ] 0.00% 1 eta -; > Error: Prefilter died; > Error: Search step died; > Error: Search died; > . ## Steps to Reproduce (for bugs). First create a custom nucleotide database. `mmseqs createdb --dbtype 2 --compressed 1 refseq_bacteria_archaea_fungi_viral.fna.gz seqTaxDB`; `mmseqs createtaxdb seqTaxDB tmp --ncbi-tax-dump ncbi-taxdump --tax-mapping-file fastaid_taxid.tsv`. Next run easy-search. `mmseqs easy-search all_nuc.fasta seqTaxDB tax_assignments.txt tmp --search-type 3 --min-seq-id 0.65 -e 0.01 -c 0.8 --cov-mode 2 --threads 16`. ## MMseqs Output (for bugs). Below is the output of `easy-search`. > easy-search all_nuc.fasta seqTaxDB tax_assignments.txt tmp --search-type 3 --min-seq-id 0.65 -e 0.01 -c 0.8 --cov-mode 2 --threads 16 ; > ; > MMseqs Version: 	8ef39f4151eddcdc78f9c2dadf6b4dd6864435c9; > Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; > Add backtrace 	false; > Alignment mode 	3; > Alignment mode 	0; > Allow wrapped scoring 	false; > E-value threshold 	0.01; > Seq. id. threshold 	0.65; > Min alignment length 	0; > Seq. id. mode 	0; > Alternative alignments 	0; > Coverage threshold 	0.8; > Coverage mode 	2; > Max sequence length 	65535; > Compositional bias 	1; > Compositional bias 	1; > Max reject 	2147483647; > Max accept 	2147483647; > Include identical seq. id. 	false; > Preload mode 	0; > Pseudo count a 	substitution:1.100,context:1.400; > Pseudo count b 	substitution:4.100,context:5.800; > Score bias 	0; > Realign hits 	false; > Realign score bias 	-0.2; > Realign max seqs 	2147483647; > Correlation score weight 	0; > Gap open cost 	aa:11,nucl:5; > Gap extension cost 	aa:1,nucl:2; > Zdrop 	40; > Threads 	16; > Compressed 	0; > Verbosity 	3; > Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; > Sensitivity 	5.7; > k-mer length 	0; > Target search mode 	0; > k-score 	seq:2147483647,prof:2147483647; > Alphabet size 	aa:21,nucl:5; > Max results per query 	300; >",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/882:1184,wrap,wrapped,1184,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882,1,['wrap'],['wrapped']
Integrability,"l:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . Database size: 440656032 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 440.66M 1m 58s 106ms; Sort kmer 0h 1m 9s 431ms; Sort by rep. sequence 0h 0m 39s 418ms; Time for fill: 0h 2m 31s 613ms; Time for merging to pref: 0h 0m 0s 1ms; Time for processing: 0h 9m 8s 726ms; rescorediagonal All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 440.66M 7m 9s 976ms; Time for merging to pref_rescore1: 0h 2m 33s 403ms; Time for processing: 0h 11m 51s 610ms; clust All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore1 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 56 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 1m 32s 562ms. Size of the sequence database: 440656032; Size of the alignment database: 440656032; Number of clusters: 35665237. Writing results 0h 0m 11s 300ms; Time for merging to pre_clust: 0h 0m 0s 0ms; Time for processing: 0h 2m 42s 666ms; createsubdb All_cohort_tmp//99483873210928",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:5660,wrap,wrapped-scoring,5660,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['wrap'],['wrapped-scoring']
Integrability,"ld_search execute search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 ). ## MMseqs Output (for bugs). MSA_200/qdb exists and will be overwritten; createdb MSA_200/query.fas MSA_200/qdb --shuffle 0 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Database type 	0; Shuffle input database	false; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 0ms; Time for merging to qdb: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 0ms; search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	8; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	10000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:1578,wrap,wrapped,1578,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['wrap'],['wrapped']
Integrability,"leotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Database size: 51992 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 51.99K 0s 346ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 62ms; Sort by rep. sequence 0h 0m 0s 19ms; Time for fill: 0h 0m 0s 27ms; Time for merging to pref: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 567ms; rescorediagonal shrimpDB shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref tmp97/17949317426677965256/linclust/6279588666755106708/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 51.99K 0s 101ms; Time for merging to pref_rescore1: 0h 0m 0s 185ms================>] 99.62% 51.80K eta 0s; Time for processing: 0h 5m 0s 451ms; clust shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref_rescore1 tmp97/17949317426677965256/linclust/6279588666755106708/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Clustering mode: Set Cover; [=================================================================] 100.00% 51.99K 0s 51ms; Sort entries; Find missing connections; Found 39230 new connections.; Reconstruct initial order; [=================================================================] 100.00% 51.99K 0s 5",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:5836,wrap,wrapped-scoring,5836,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['wrap'],['wrapped-scoring']
Integrability,"lf-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_2 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_query_20230412_142303/tmp/18292001434761310910/profile_1 result_query_20230412_142303/res result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2. expandaln result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:8257,wrap,wrapped-scoring,8257,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['wrap'],['wrapped-scoring']
Integrability,"load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity typ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:1883,wrap,wrapped-scoring,1883,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,1,['wrap'],['wrapped-scoring']
Integrability,"lse; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --c",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:2156,wrap,wrapped-scoring,2156,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['wrap'],['wrapped-scoring']
Integrability,"lt2stats /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 280.71K 0s 74ms; Time for merging to pref_count.tsv: 0h 0m 0s 77ms; Time for processing: 0h 0m 0s 753ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 280714 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 280.71K 3m 53s 720ms; Time for merging to aln: 0h 0m 0s 84ms; 356937745 alignments calculated; 350790208 sequence pairs passed the thresholds (0.982777 of overall calculated); 1249.635620 hits per query sequence; Time for processing: 0h 3m 57s 914ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/sea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:9123,wrap,wrapped-scoring,9123,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['wrap'],['wrapped-scoring']
Integrability,"m 0s 47ms; Time for merging to input: 0h 0m 0s 25ms; Database type: Nucleotide; Time for processing: 0h 0m 1s 143ms; Create directory tmp/3198441352783276465/clu_tmp; cluster tmp/3198441352783276465/input tmp/3198441352783276465/clu tmp/3198441352783276465/clu_tmp --max-seqs 20 -c 0 --cov-mode 5 --spaced-kmer-mode 1 --threads 24 --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --cluster-mode 1 --cluster-reassign 1 --remove-tmp-files 1 . Set cluster sensitivity to -s 1.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusteringSet cluster iterations to 1; linclust tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/clu_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 5 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:4732,wrap,wrapped-scoring,4732,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['wrap'],['wrapped-scoring']
Integrability,"m/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[===============================================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:1534,protocol,protocol,1534,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['protocol'],['protocol']
Integrability,m50.out.h; [ 17%] Generating ../generated/blosum55.out.h; [ 17%] Generating ../generated/blosum60.out.h; [ 18%] Generating ../generated/blosum62.out.h; [ 18%] Generating ../generated/blosum65.out.h; [ 19%] Generating ../generated/blosum70.out.h; [ 19%] Generating ../generated/blosum75.out.h; [ 19%] Generating ../generated/blosum80.out.h; [ 20%] Generating ../generated/blosum85.out.h; [ 20%] Generating ../generated/blosum90.out.h; [ 21%] Generating ../generated/blosum95.out.h; [ 21%] Generating ../generated/blosum100.out.h; [ 21%] Generating ../generated/CovSeqidQscPercMinDiag.out.h; [ 22%] Generating ../generated/CovSeqidQscPercMinDiagTargetCov.out.h; [ 22%] Generating ../generated/ExpOpt3_8_polished.cs32.lib.h; [ 23%] Generating ../generated/Library255_may17.lib.h; [ 23%] Generating ../generated/K4000.crf.h; [ 23%] Generating ../generated/libPure_blosum62_255.lib.h; [ 24%] Generating ../generated/libPure_blosum62_32.lib.h; [ 24%] Built target generated; Scanning dependencies of target version; make[2]: Warning: File 'src/version/CMakeFiles/version.dir/depend.make' has modification time 0.00026 s in the future; [ 24%] Building CXX object src/version/CMakeFiles/version.dir/Version.cpp.o; [ 25%] Linking CXX static library libversion.a; make[2]: warning: Clock skew detected. Your build may be incomplete.; [ 25%] Built target version; Scanning dependencies of target mmseqs-framework; [ 26%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Alignment.cpp.o; [ 26%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/CompressedA3M.cpp.o; [ 26%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Main.cpp.o; [ 27%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Matcher.cpp.o; [ 27%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/MsaFilter.cpp.o; [ 28%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/MultipleAlignment.cpp.o; [ 28%] Building CXX object src/CMakeFiles/mmseqs-fra,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:6682,depend,dependencies,6682,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,1,['depend'],['dependencies']
Integrability,"martin-steinegger That makes sense, although it also happens with Set Cover (it's --cluster-reassign, right? --reassign-cluster is not recognized):. Create directory tmp/; cluster ../DB_in/fasta_in_db_HC DB_clu tmp/ --cov-mode 0 --cluster-mode 0 --cluster-reassign 1. MMseqs Version: 0828d86539a4b6d7f64bc369a5b29920862afc5a; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:1045,wrap,wrapped,1045,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['wrap'],['wrapped']
Integrability,"mation for ~12h. Not sure if it's related to #323 but since it's a different behavior I just open a new issue. . ## Expected Behavior; Normally exit. ## Current Behavior; Got stuck after the first call of `rescorediagonal`. No progress and no printed information for ~12h. ## Steps to Reproduce (for bugs); ```; > wget http://gwdu111.gwdg.de/~compbiol/plass/2018_08/SRC.fasta.gz; > gunzip -k SRC.fasta.gz; > mmseqs easy-linclust SRC.fasta test/SRC-50 /export/scratch/SRC-50 -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 0.5 --split-memory-limit 500G; ```. ## MMseqs Output (for bugs); ```; easy-linclust SRC.fasta test/SRC-50 /export/scratch/SRC-50 -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 0.5 --split-memory-limit 500G. MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500G; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Crea",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:1180,wrap,wrapped,1180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['wrap'],['wrapped']
Integrability,"me for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; filterdb DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_filter1 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_filter2 --filter-file DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 417 0s 17ms; Time for merging to pref_filter2: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 37ms; rescorediagonal DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_filter2 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================================] 417 0s 10ms; ==Time for merging to pref_rescore2: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 52ms; align DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore2 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:7391,wrap,wrapped-scoring,7391,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['wrap'],['wrapped-scoring']
Integrability,"me/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 result_query_20230412_142303/tmp/18292001434761310910/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:2903,wrap,wrapped-scoring,2903,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['wrap'],['wrapped-scoring']
Integrability,"mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 25ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 237; Target db start 1 to 237; [=================================================================] 237 0s 19ms. 20.483280 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 707ms; align tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/pref_step1 tmpfiles//13298481167543164943/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 237 type: Aminoacid; Target database size: 237 type: Aminoacid; Calculation of alignments; [=================================================================] 237 0s 50ms; Time for merging to aln_step1: 0h 0m 0s 3ms. 306 alignments calculated.; 271 sequence pairs passed the thresholds (0.885621 of overall calculated).; 1.143460 hits per query sequence.; Time for processing: 0h 0m 0s 99ms; clust tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/aln_step1 tmpfiles//13298481167543164943/clu_step1 --cluster-mode 1 --max-iterations ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:17179,wrap,wrapped-scoring,17179,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['wrap'],['wrapped-scoring']
Integrability,"merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My questions are:; 1) How big of a RAM is required for the createindex step? Was that the reason a ""targetDB.idx"" was not generated?. 2) How much memory do I need for the indexed files to be fetched into memory (i.e. the""touchdb"" step)? Is it the total of all the ""targetDB.idx.0,1,2...14 "" files which will be over 1TB? Or is it something smaller?. 3) The log message for mmseqs touchdb step wasn't very helpful. Did it work or not?. Thank you,; Tongji",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/757:2354,message,message,2354,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757,1,['message'],['message']
Integrability,"mit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 100 --compressed 0 -v 3 . [=================================================================] 773.45M 13m 49s 19ms; Time for merging to pref_rescore1: 0h 25m 43s 735ms; Time for processing: 0h 53m 14s 579ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref_rescore1 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 100 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 0m 42s 573ms. Size of the sequence database: 773451991; Size of the alignment database: 773451991; Number of clusters: 764944038.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:2374,wrap,wrapped-scoring,2374,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['wrap'],['wrapped-scoring']
Integrability,mmseqs easy-search with .fasta files dies without a descriptive error message,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/718:70,message,message,70,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/718,1,['message'],['message']
Integrability,"mmseqs_output/mmseqs_output tmp --cluster-mode 1 --cluster-reassign 1 --threads 24 -c 0.0 --cov-mode 5 --min-seq-id 0.8 . MMseqs Version: 15.6f452; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0; Coverage mode 5; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 24; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.8; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Weight file name ; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files true; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false; Database type 0; Shuffle input database true",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:2273,wrap,wrapped,2273,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['wrap'],['wrapped']
Integrability,"mp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 10ms; Time for processing: 0h 0m 0s 41ms; filterdb /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 --filter-file /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 757 0s 4ms; Time for merging to pref_filter2: 0h 0m 0s 62ms; Time for processing: 0h 0m 0s 270ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/linclust.sh: line 68: 88046 Segmentation fault: 11 $RUNNER ""$MMSEQS"" rescorediagonal ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/pref_rescore2"" ${UNGAPPED_ALN_PAR}; Error: Ungapped alignment step died; Error: linclust died; Error: Search died. Running on Mac intel i9 and mmseqs2 14-7e284. Thank you all for your help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:9574,wrap,wrapped-scoring,9574,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['wrap'],['wrapped-scoring']
Integrability,"ms; result2stats /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 278.90K 0s 59ms; Time for merging to pref_count.tsv: 0h 0m 0s 61ms; Time for processing: 0h 0m 0s 594ms; align /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 278905 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 278.90K 3m 30s 81ms; Time for merging to aln: 0h 0m 0s 79ms. 356498221 alignments calculated.; 350372623 sequence pairs passed the thresholds (0.982817 of overall calculated).; 1256.243652 hits per query sequence.; Time for processing: 0h 3m 35s 108ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 0s 344ms; sw",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:5674,wrap,wrapped-scoring,5674,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['wrap'],['wrapped-scoring']
Integrability,"mseqs createdb N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.faa N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db. mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_42; 5.proteins.taxonomy temp --threads 8; ```. ## Full traceback of search command; ```; mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8; Tmp temp folder does not exist or is not a directory.; Create dir temp; taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8. MMseqs Version: ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile e-value threshold 0.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/278:1904,wrap,wrapped,1904,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278,1,['wrap'],['wrapped']
Integrability,"mseqs createindex uniref90_DB uniref90_index --threads 16; mmseqs createtaxdb uniref90_DB tmp. I did the same for my queries:; mmseqs createdb queries.fa queries_DB; mmseqs createindex queries_DB queries_index. Then, I searched the query database against the Uniref90 database:; mmseqs search queries_DB uniref90_DB queries_search_result uniref90_index --threads 16. Finally, I applied LCA taxonomy:; mmseqs taxonomy Untersee/SRR17021127_orf_nosZ_only_DB uniref90_DB taxonomyResult tmp --tax-lineage 1 . This is the output:; MMseqs Version: 	12ba202798016f7f8880be11d792592fdb674448; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	1; Compressed 	0; Threads 	128; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/708:1322,wrap,wrapped,1322,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/708,1,['wrap'],['wrapped']
Integrability,"n-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . Can not touch 293012172012 into main memory; [=================================================================] 2.20B 14h 48m 14s 895ms; Time for merging to pref_rescore1: 0h 21m 28s 875ms; Time for processing: 15h 32m 14s 793ms; Error: Pre-clustering step died; ```; And when I rerun my job I have : ; ```; linclust /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB_clu /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp --min-seq-id 0.75 --threads 20 -v 3 --force-reuse 1 --split-memory-limit 62G . MMseqs Version: 	f5f780acd64482cd59b46eae0a107f763cd17b4d; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	20; Compressed 	0; Verbosity 	3; Weight file name 	; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.75; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	62G; Include only extendab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:8296,wrap,wrapped,8296,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['wrap'],['wrapped']
Integrability,"nclust/1189823685496030198/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 39s 536ms; filterdb tmp//16518381706844811497/linclust/1189823685496030198/pref_filter1 tmp//16518381706844811497/linclust/1189823685496030198/pref_filter2 --filter; -file tmp//16518381706844811497/linclust/1189823685496030198/order_redundancy --threads 64 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 74.93M 16s 227ms; Time for merging to pref_filter2: 0h 0m 46s 160ms; Time for processing: 0h 1m 35s 246ms; rescorediagonal tmp//16518381706844811497/linclust/1189823685496030198/input_step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/input; _step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/pref_filter2 tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore2; --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 2 --min-seq-id 0.9 ; --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [================================================================] =74.93M 28m 19s 496ms; Time for merging to pref_rescore2: 0h 0m 51s 111ms; Time for processing: 0h 29m 44s 106ms; align tmp//16518381706844811497/linclust/1189823685496030198/input_step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/input_step_redu; ndancy tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore2 tmp//16518381706844811497/linclust/1189823685496030198/aln --sub-mat 'aa:blos; um62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mo; de 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:8579,wrap,wrapped-scoring,8579,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['wrap'],['wrapped-scoring']
Integrability,"netsurfp seems to not be really open source, so I can't find exactly whats going wrong. . I found this https://github.com/Eryk96/NetSurfP-3.0/blob/main/nsp2/netsurfp2_dev/preprocessing/mmseqs.py, but it looks somewhat different to your error message. I would recommend to make a fake mmseqs script that fixes the issue for netsurfp:; ```; mv /opt/conda/envs/netsurfp/bin/mmseqs /opt/conda/envs/netsurfp/bin/mmseqs_real; cat << 'HERE' > /opt/conda/envs/netsurfp/bin/mmseqs; #!/bin/sh ; export MMSEQS_FORCE_MERGE=1; mmseqs_real ""${@}""; HERE; chmod +x /opt/conda/envs/netsurfp/bin/mmseqs; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/581#issuecomment-1197679944:242,message,message,242,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/581#issuecomment-1197679944,1,['message'],['message']
Integrability,"ng Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.1 extensions, using flags: -march=native -msse4.1 -mfpmath=sse; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /galaxy/home/ksahlin/prefix/source/MMseqs2/build; [ksahlin@desmond build]$ make; Scanning dependencies of target cacode; make[2]: Warning: File 'lib/cacode/CMakeFiles/cacode.dir/depend.make' has modification time 0.00048 s in the future; [ 0%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; make[2]: warning: Clock skew detected. Your build may be incomplete.; [ 1%] Built target cacode; Scanning dependencies of target alp; [ 1%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 1%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 2%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprobproto.cpp.o; [ 2%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstat.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatmatrix.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_sim.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:2614,depend,depend,2614,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,1,['depend'],['depend']
Integrability,"nimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. align //app/database/sequences/sequences //app/database/sequences/sequences; B tmp/17369488595077942690/pref_0 //app/clustering/sequences/sequences_output --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq; -id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 21474; 83647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0; --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:2 --gap-ex; tend nucl:5,aa:0 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score and coverage; Query database size: 74 type: Aminoacid; Target database size: 74 type: Aminoacid; Calculation of alignments; terminate called after throwing an instance of 'Sls::error'; Aborted; Error: Alignment died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ad5837b3444728411e6c90f8c6ba9370f665c443; * Which MMseqs version was used (Statically-compiled, self-compiled",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:4809,wrap,wrapped-scoring,4809,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,1,['wrap'],['wrapped-scoring']
Integrability,"niref90_cleaned_DB_v5 result/taxonomyResult_prokka_${task_id}/taxonomyResult_${task_id}_prokka result/taxonomyResult_prokka_${task_id}_cleanDB_report_v5; # to krona; mmseqs taxonomyreport mmseq2DB/uniref90_cleaned_DB_v5 result/taxonomyResult_prokka_${task_id}/taxonomyResult_${task_id}_prokka result/taxonomyResult_${task_id}_prokka_cleanDB_v5.html --report-mode 1; ``` . Part of the report shows:; ```commandline; 0.0989	1	0	genus	2903100	 Mariniplasma; 0.0989	1	1	species	2735436	 Mariniplasma anaerobium; 0.0989	1	0	class	1912503	 Candidatus Izimaplasma; 0.0989	1	0	order	2975519	 Candidatus Izemoplasmatales; 0.0989	1	0	family	2975520	 Candidatus Izemoplasmataceae; 0.0989	1	0	genus	2975521	 Xianfuyuplasma; 0.0989	1	1	species	2782163	 Xianfuyuplasma coldseepsis; ```; In theory the ""Candidatus"" should be removed by filter. (just in case, I have checked other Candidatus exist in DB is already removed); ; I search if the ""Candidatus Izimaplasma"" is in uniref90.fsa, but there is not. ; (And the taxon id for this specie is not exist in uniref90.fsa). And then I search the same word in ""uniref90_cleaned_DB_v5_h"" :; ```bash; grep ""Candidatus Izimaplasma"" uniref90_cleaned_DB_v5_h --text | head -n 5; UniRef90_A0A2A1ZTN3 Uncharacterized protein n=1 Tax=Candidatus Izimaplasma sp. ZiA1 TaxID=2024899 RepID=A0A2A1ZTN3_9BACT; UniRef90_A0A2A1ZRW6 Cadmium-translocating P-type ATPase n=1 Tax=Candidatus Izimaplasma sp. ZiA1 TaxID=2024899 RepID=A0A2A1ZRW6_9BACT; UniRef90_A0A2A1ZNE5 ATP-dependent RecD-like DNA helicase n=1 Tax=Candidatus Izimaplasma sp. ZiA1 TaxID=2024899 RepID=A0A2A1ZNE5_9BACT; UniRef90_A0A094INE2 Peptidase family S41 n=1 Tax=Candidatus Izimaplasma sp. HR2 TaxID=1541960 RepID=A0A094INE2_9BACT; UniRef90_A0A094KYW2 Internalin-A n=1 Tax=Candidatus Izimaplasma sp. HR2 TaxID=1541960 RepID=A0A094KYW2_9BACT; ```; I suppose that something happens when I use the createtaxdb to create the targetDB, but I'm not sure about what it is... ; I hope my description is clear for you. Thanks,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/676#issuecomment-1458067706:2488,depend,dependent,2488,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/676#issuecomment-1458067706,2,['depend'],['dependent']
Integrability,"ntext:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_1 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_query_20230412_142303/tmp/18292001434761310910/profile_0 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_0. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. result2profile result_query_20230412_142303/tmp/1829200143",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:4973,wrap,wrapped-scoring,4973,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['wrap'],['wrapped-scoring']
Integrability,"nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score only; Query database size: 6526 type: Aminoacid; Target database size: 41195879 type: Aminoacid; Calculation of alignments; [=================================================================] 7.00K 0s 8ms; Time for merging to aln_0: 0h 0m 0s 9ms. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 3s 593ms; align /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/profile_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/pref_1 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 1 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 7002 type: Profile; Target database size: 41195879 type: Aminoacid; Calculation of alignments; [=================================================================] 7.00K 0s 20ms; Time for merging to aln_tmp_1: 0h 0m 0s 10ms. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 4s 529ms; mergedbs /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/profile_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/Un",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203:1792,wrap,wrapped-scoring,1792,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203,1,['wrap'],['wrapped-scoring']
Integrability,"oacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 105; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8273; Target db start 1 to 756891; [=================================================================] 100.00% 8.27K 1s 888ms . 7.501658 k-mers per position; 14614 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 5 sequences passed prefiltering per query sequence; 0 median result list length; 7780 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 6ms; Time for processing: 0h 0m 23s 645ms; align tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 tmp/16138406286044646862/aln_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 8273 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.27K 1s 879ms ; Time for merging to aln_1: 0h 0m 0s 9ms. 41734 alignments calculated.; 41734 sequence pairs passed the thresholds (1.000000 of overall calculated).; 5.044603 hits per query sequence.; Time for processing: 0h 0m 5s 83ms; mergedbs IP_DB/IP_DB tmp/16138406286044646862/aln_merge_new tmp/16138406286044646862/aln_0 tmp/16138406286044646862/aln_1 --compressed 0 -v 3 . Merging the results to tmp/16138406286044646862/aln_merge_new; Time for merging to aln_merge_new",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:8542,wrap,wrapped-scoring,8542,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['wrap'],['wrapped-scoring']
Integrability,"ompute with --shuffle 0; Converting sequences; [1718] 0s 24ms; Time for merging to input_h: 0h 0m 0s 10ms; Time for merging to input: 0h 0m 0s 10ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 81ms; Create directory /Volumes/s/tmp/3581369344000996149/clu_tmp; cluster /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu /Volumes/s/tmp/3581369344000996149/clu_tmp --max-seqs 20 -c 0.8 --cov-mode 1 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --min-seq-id 0.5 --remove-tmp-files 1. Set cluster sensitivity to -s 3.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/clu_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:3857,wrap,wrapped-scoring,3857,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['wrap'],['wrapped-scoring']
Integrability,"onal experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_filter2 experiments/tmp//6404161245249296443/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_rescore2: 0h 0m 0s 19ms=================>] 99.48% 24.47K eta 0s ; Time for processing: 0h 0m 0s 59ms; align experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_rescore2 experiments/tmp//6404161245249296443/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 12 --compressed 0 -v 3 . Compute score and coverage; Query database size: 24598 type: Aminoacid; Target database size: 24598 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 24.60K 0s 159ms ; Time for merging to aln: 0h 0m 0s 22ms. 25322 alignments calculated.; 24830 sequence pairs passed the thresholds (0.980570 of overall calculated).; 1.009432 hits per query sequence.; Time for processing: 0h 0m 0s 211ms; clust experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/aln experiments/tmp//6404161245249296443/clust --cluster-mode 0 --max-iterations 1000 --simil",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:9092,wrap,wrapped-scoring,9092,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['wrap'],['wrapped-scoring']
Integrability,"ons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Input database ""/mount-nfs/mydataset/single_train_sequences.fasta"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid; ```. ## Context; I am trying to extract the pssm for a big fasta file following this steps:; https://github.com/soedinglab/MMseqs2/issues/580; Unfortunately, only the easy-search is working and not the search. If I tried to just use the easy-search I get the same message as above when I try to run the ""result2profile"" script. I also tried to extract a single sequence from my fasta file, and I got the same error.; Here is the single fasta file that I am trying to test with :; ```; >A0A8I6GHU0 tr|A0A8I6GHU0|A0A8I6GHU0_RAT U6 snRNA-associated Sm-like protein LSm1 OS=Rattus norvegicus OX=10116 GN=Lsm1 PE=3 SV=1; HCISSLKLTAFFKRSFLLSPEKHLVLLRDGRTLIGFLRSIDQFANLVLHQTVERIHVGRK; YGDIPRGIFVVRGENVVLLGEIDLEKESDTPLQQVSIEEILEEQRVEQQSRLEAEKLKVQ; ALKDRGLSIPRADTLDEY; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Which MMseqs version was used: latest version from conda.; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU support both AVX2/SSE and the server has 450GB of memory; * Operating system and version: Ubuntu 20.04.4 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/720:3214,message,message,3214,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/720,1,['message'],['message']
Integrability,"or large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	24; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false; Database type",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:2116,wrap,wrapped,2116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['wrap'],['wrapped']
Integrability,"ort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_filter2 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 35.67M 9s 733ms; Time for merging to pref_rescore2: 0h 0m 12s 355ms; Time for processing: 0h 0m 38s 935ms; align All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore2 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 56 --compressed 0 -v 3 . Compute score and coverage; Query database size: 35665237 type: Aminoacid; Target database size: 35665237 type: Aminoacid; Calculation of alignments; [=================================================================] 35.67M 7m 56s 191ms; Time for merging to aln: 0h 0m 12s 23ms; 118495359 alignments calculated; 45078108 sequence pairs passed the thresholds (0.380421 of overall calculated); 1.263923 hits per query sequence; Time for processing: 0h 8m 32s 609ms; clust All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redunda",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:9016,wrap,wrapped-scoring,9016,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['wrap'],['wrapped-scoring']
Integrability,"p sample_db collection_rep sample_map temporal; ```. Here are both files ; [genome.ffn.txt](https://github.com/soedinglab/MMseqs2/files/7558993/genome.ffn.txt); [genome.faa.txt](https://github.com/soedinglab/MMseqs2/files/7558994/genome.faa.txt). ## MMseqs Output (for bugs). ```; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	8; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. **It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace)**; ```; trying `--search-type 3 `throws me this error. `Unrecognized parameter ""--search-type"". Did you mean ""--seed-sub",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/507:2258,wrap,wrapped,2258,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507,1,['wrap'],['wrapped']
Integrability,"p-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score and coverage; Query database size: 75233 type: Aminoacid; Target database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 41m 40s 149ms ; Time for merging to aln: 0h 0m 0s 11ms; 1976417423 alignments calculated; 672599536 sequence pairs passed the thresholds (0.340313 of overall calculated); 8940.219727 hits per query sequence; Time for processing: 1h 41m 41s 324ms; rmdb tmp/5233442526903138997/pref -v 3 . Time for processing: 0h 0m 0s 616ms; mvdb tmp/5233442526903138997/aln tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 0ms; align /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/aln_merged tmp/5233442526903138997/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score and coverage; Query database size: 75233 type: Aminoacid; Target database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 9m 57s 768ms ; Time for merging to aln: 0h 0m 0s 17ms; 672599536 alignments calculated; 672599536 sequence pairs passed the thresholds (1.000000 of overall calculated); 8940.219727 hits per query sequence; Time for proc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:7302,wrap,wrapped-scoring,7302,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['wrap'],['wrapped-scoring']
Integrability,"per sequence; docker-compose-mmseqs-web-worker-1 | 0 overflows; docker-compose-mmseqs-web-worker-1 | 0 queries produce too much hits (truncated result); docker-compose-mmseqs-web-worker-1 | 6 sequences passed prefiltering per query sequence; docker-compose-mmseqs-web-worker-1 | 6 median result list length; docker-compose-mmseqs-web-worker-1 | 0 sequences with 0 size result lists; docker-compose-mmseqs-web-worker-1 | Time for merging to pref_0: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 8ms; docker-compose-mmseqs-web-worker-1 | align /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/pref_0 /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/result --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 2 --compressed 0 -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Compute score, coverage and sequence identity; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Calculation of alignments; docker-compose-mmseqs-web-worker-1 | [===================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717:5345,wrap,wrapped-scoring,5345,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717,1,['wrap'],['wrapped-scoring']
Integrability,"per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 172ms; rescorediagonal in/DB_in in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 164 0s 38ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms ] 25.77% 43 eta 0s; Time for processing: 0h 0m 0s 102ms; clust in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 164 0s 7ms; Sort entries; Find missing connections; Found 10 new connections.; Reconstruct initial order; [=================================================================] 100.00% 164 0s 6ms; Add missing connections; [==========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:21098,wrap,wrapped-scoring,21098,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability,"per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 170ms; rescorediagonal in/DB_in in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 164 0s 28ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 84ms; clust in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 164 0s 12ms; Sort entries; Find missing connections; Found 10 new connections.; Reconstruct initial order; [=================================================================] 100.00% 164 0s 12ms; Add missing connections; [============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:5495,wrap,wrapped-scoring,5495,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability,"pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 30s 812ms; Time for processing: 0h 1m 20s 243ms; filterdb cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_filter1 cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_filter2 --filter-file cluster_tmp/1127447206531551203/linclust/8761493678692146066/order_redundancy --threads 40 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 119.25M 2m 56s 532ms ; Time for merging to pref_filter2: 0h 1m 34s 791ms; Time for processing: 0h 5m 27s 349ms; align cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_filter2 cluster_tmp/1127447206531551203/linclust/8761493678692146066/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 119253279 type: Nucleotide; Target database size: 119253279 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 119.25M 1h 5m 19s 819ms ; Time for merging to aln: 0h 1m 24s 501ms. 1903287037 alignments calculated.; 119437486 sequence pairs passed the thresholds (0.062753 of overall calculated).; 1.001545 hits per query sequence.; Time for processing: 1h 7m 38s 628ms; clust cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:7631,wrap,wrapped-scoring,7631,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['wrap'],['wrapped-scoring']
Integrability,"pref_filter1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 422ms; filterdb ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_filter1 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_filter2 --filter-file ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/order_redundancy --threads 40 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 31.32K 0s 100ms; Time for merging to pref_filter2: 0h 0m 0s 137ms; Time for processing: 0h 0m 0s 847ms; rescorediagonal ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_filter2 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 31.32K 0s 42ms; Time for merging to pref_rescore2: 0h 0m 0s 90ms; Time for processing: 0h 0m 0s 772ms; align ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore2 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 214",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:15183,wrap,wrapped-scoring,15183,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['wrap'],['wrapped-scoring']
Integrability,"prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2310; Target db start 1 to 713072; [=================================================================] 100.00% 2.31K 0s 200ms. 8.191356 k-mers per position; 1212 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2301 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 0s 457ms; Time for processing: 0h 0m 1s 487ms; rescorediagonal tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_pref tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0 -e 100 -c 0 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; [=================================================================] 100.00% 2.31K 0s 3ms; Time for merging to orfs_aln: 0h 0m 0s 469ms; Time for processing: 0h 0m 1s 239ms; createsubdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aln.list tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter --subdb-mode 1 --id-mode 0 -v 3. Time for merging to orfs_filter: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 35ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter_h -v 3. Time for processing: 0h 0m 0s 5ms; createsubdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aln.list tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa_h tmp//15404483323509150572/taxonomy",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:6539,wrap,wrapped-scoring,6539,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,1,['wrap'],['wrapped-scoring']
Integrability,"presentative sequences are redundant; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; > mmseqs easy-linclust /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort.faa /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort All_cohort_tmp/ --min-seq-id 0.9 --cov-mode 1 -c 0.9 --cluster-mode 2 --max-seq-len 10000 --threads 56; ## MMseqs Output (for bugs); Create directory All_cohort_tmp/; easy-linclust /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort.faa /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort All_cohort_tmp/ --min-seq-id 0.9 --cov-mode 1 -c 0.9 --cluster-mode 2 --max-seq-len 10000 --threads 56 . MMseqs Version: 	13-45111+ds-2; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Threads 	56; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage mode 	1; Max sequence length 	10000; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Alphabet size 	nucl:5,aa:21; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Mask residues 	1; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:1941,wrap,wrapped,1941,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['wrap'],['wrapped']
Integrability,qjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFiles/microtar.dir/microtar.c.o; Linking C static library libmicrotar.a; [ 1%] Built target microtar; Scanning dependencies of target cacode; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 3%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; [ 3%] Built target cacode; Scanning dependencies of target alp; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprobproto.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstat.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatmatrix.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_sim.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_pvalues.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogproblim.cpp.o; [ 6%] Building,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:3606,depend,dependencies,3606,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,1,['depend'],['dependencies']
Integrability,"r 50; mmseqs search queryDB targetDB no_e_cutoff/resultDB tmp --search-type 3 >&1 | tee no_e_cutoff/no_e_cutoff.out; mmseqs convertalis queryDB targetDB no_e_cutoff/resultDB no_e_cutoff/resultDB_no_e_cutoff.m8 >&1 | tee -a no_e_cutoff/no_e_cutoff.out; rm -r tmp; mmseqs search queryDB targetDB 30/resultDB tmp -e 1e-30 --search-type 3 >&1 | tee 30/30.out; mmseqs convertalis queryDB targetDB 30/resultDB 30/resultDB_30.m8 >&1 | tee -a 30/30.out; rm -r tmp; mmseqs search queryDB targetDB 50/resultDB tmp -e 1e-50 --search-type 3 >&1 | tee 50/50.out; mmseqs convertalis queryDB targetDB 50/resultDB 50/resultDB_50.m8 >&1 | tee -a 50/50.out; ```. ## MMseqs Output (for bugs); The outputs are contained in the .zip above. ## Context; I'm fairly certain that the problem is being caused due to the fact that 1e-50 when convereted to float will become 0. Therefore the e value will be set to 0. This means that all results are filtered out of the alignment. If this is not fixable, it would at least be extremely helpful to have a strong warning message. It took me a day to break this all down and find out what the cause was. Filter with an e-value of 1e-50 is not uncommon. Especially during taxonomy matches (my actual goal) to for example perform QC on raw seq data. ## Your Environment; I installed using conda:; ```; # Name Version Build Channel; mmseqs2 12.113e3 h2d02072_2 bioconda; ```; The running server:; ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 256; On-line CPU(s) list: 0-254; Off-line CPU(s) list: 255; Thread(s) per core: 1; Core(s) per socket: 64; Socket(s): 2; NUMA node(s): 2; Vendor ID: AuthenticAMD; CPU family: 23; Model: 49; Model name: AMD EPYC 7702 64-Core Processor; Stepping: 0. NAME=""Ubuntu""; VERSION=""18.04.4 LTS (Bionic Beaver)""; ID=ubuntu; ID_LIKE=debian; PRETTY_NAME=""Ubuntu 18.04.4 LTS""; VERSION_ID=""18.04""; HOME_URL=""https://www.ubuntu.com/""; SUPPORT_URL=""https://help.ubuntu.com/""; BUG_REPORT_URL=""https://bugs.launch",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/399:1828,message,message,1828,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399,1,['message'],['message']
Integrability,"r making such an amazing program, secondly I was wondering if you could provide some advice on how to handle a very large query database. I have several terabytes that I would like to check against the nr. Currently I am using the easy-taxonomy workflow, I have loaded about 1/15th of my data as a proof of concept. However as you will see in the log below this will take quite some time. My main questions are: is this expected behaviour and how am I able to speed this up?. ## Current Behavior; LSBATCH: User input; mmseqs easy-taxonomy ./sample.fastq.gz ./nr ./result ./tmp -s 0.5. MMseqs Version: 	13.45111; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	26; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422:1046,wrap,wrapped,1046,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422,1,['wrap'],['wrapped']
Integrability,"r size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 994ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 218; Target db start 1 to 218; [=================================================================] 218 0s 55ms. 193.314206 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 763ms; align tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/pref_step2 tmpfiles//13298481167543164943/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 218 type: Aminoacid; Target database size: 218 type: Aminoacid; Calculation of alignments; [=================================================================] 218 0s 82ms; Time for merging to aln_step2: 0h 0m 0s 2ms. 358 alignments calculated.; 247 sequence pairs passed the thresholds (0.689944 of overall calculated).; 1.133028 hits per query sequence.; Time for processing: 0h 0m 0s 123ms; clust tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/aln_step2 tmpfiles//13298481167543164943/clu_step2 --cluster-mode 1 --max-iterations",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:21258,wrap,wrapped-scoring,21258,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['wrap'],['wrapped-scoring']
Integrability,"r-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 96025 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 96.03K 0s 882ms . Adjusted k-mer length 17; Sort kmer 0h 0m 0s 257ms; Sort by rep. sequence 0h 0m 0s 133ms; Time for fill: 0h 0m 0s 107ms; Time for merging to pref: 0h 0m 0s 28ms; Time for processing: 0h 0m 1s 808ms; rescorediagonal tmp/3198441352783276465/input tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.5 -a 0 --cov-mode 5 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 24 --compressed 0 -v 3 . [=================================================================] 100.00% 96.03K 0s 151ms ; Time for merging to pref_rescore1: 0h 0m 0s 241ms================>] 99.99% 96.02K eta 0s ; Time for processing: 0h 0m 1s 33ms; clust tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_rescore1 tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pre_clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Connected Component; [=================================================================] 100.00% 96.03K 0s 106ms ; Sort entries; Find missing connections; Found 292030 new connections.; Reconstruct initial order;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:7406,wrap,wrapped-scoring,7406,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['wrap'],['wrapped-scoring']
Integrability,"r-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 76215872 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 76.22M 6m 32s 415ms; Sort kmer 0h 0m 14s 675ms; Sort by rep. sequence 0h 0m 0s 974ms; Time for fill: 0h 0m 13s 496ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 7m 46s 594ms; rescorediagonal uniref90-DB-wwmj uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref tmp//16518381706844811497/linclust/11898236; 85496030198/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov; -mode 2 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [================================================================] =76.22M 19m 41s 19ms; Time for merging to pref_rescore1: 0h 0m 50s 277ms; Time for processing: 0h 21m 16s 644ms; clust uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore1 tmp//16518381706844811497/linclust/1189823685496030198/pre_cl; ust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 28s 473ms. Size of the sequence database: 76215872; Size of the alignment database: 76215872; Number of clusters: 74926526. Writing results 0h 0m 17s 970ms; Time for merging to pre_clust: 0h 0m 0s 1ms; Time for processing: 0h 1m 0s 559ms; createsubdb tmp//16518381706844811497/linclus",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:6153,wrap,wrapped-scoring,6153,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['wrap'],['wrapped-scoring']
Integrability,"r; `mmseqs align All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.linclust All_chr.seq50.noDup.mmseqdb.linclust.aln -a `. Creates many (empty) .aln.x and (mostly non-empty) .aln.index.x files and crash just (before?) finish. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs align All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.linclust All_chr.seq50.noDup.mmseqdb.linclust.aln -a . ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. align All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.gz All_chr.seq50.noDup.mmseqdb.linclust All_chr.seq50.noDup.mmseqdb.linclust.aln -a . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id.	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	256; Compressed 	0; Verbosity 	3. Compute score, coverage and sequence identity; Query database size: 1233743 type: Nucleotide; Target database size: 1233743 type: Nucleotide; Calculation of alignments; **Segmentation fault**===============================================>] 99.07% 509.65K eta 0s . ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many rele",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/462:1247,wrap,wrapped,1247,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/462,1,['wrap'],['wrapped']
Integrability,"rching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). © Martin Steinegger <martin.steinegger@mpibpc.mpg.de>. Usage: <i:queryDB> <i:targetDB> <o:alignmentDB> <tmpDir> [options]. prefilter options 	default 	description [value range]; --comp-bias-corr 	0 	correct for locally biased amino acid composition [0,1] ; --add-self-matches 	false 	artificially add entries of queries with themselves (for clustering); -s 	5.700 	sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive [1.0,7.5]; -k 	0 	k-mer size in the range (0: set automatically to optimum) ; --k-score 	2147483647	k-mer threshold for generating similar-k-mer lists ; --alph-size 	21 	alphabet size [2,21] ; --offset-result 	0 	Offset result list ; --split 	0 	Splits input sets into N equally distributed chunks. The default value sets the best split automatically. createindex can only be used with split 1.; --split-mode 	2 	0: split target db; 1: split query db; 2: auto, depending on main memory; --split-memory-limit 	0 	Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.; --diag-score 	1 	use diagonal score for sorting the prefilter results [0,1] ; --exact-kmer-matching 	0 	only exact k-mer matching [0,1] ; --mask 	1 	0: w/o low complexity masking, 1: with low complexity masking; --min-ungapped-score 	15 	accept only matches with ungapped alignment score above this threshold; --spaced-kmer-mode 	1 	0: use consecutive positions a k-mers; 1: use spaced k-mers ; --spaced-kmer-pattern 	 	User-specified spaced k-mer pattern ; --local-tmp 	 	Path where some of the temporary files will be created ; --disk-space-limit 	0 	Set the maximum disk space (in Mb) to use for reverse profile searches. Defaults (0) to all available disk space in the temp folder. align options 	default 	description [value range]; -a 	false 	add backtrace string (convert to alignments with mmseqs convertalis utility); --alignment-mode 	2 	How to compute the ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:5297,depend,depending,5297,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['depend'],['depending']
Integrability,"read for database data file=mmseqstest_nucl.fasta_QDB_h, database index=; ```. All the previous steps seem to work correctly (createdb, createindex, search) and have contents inside their files. For example, running head on the _QDB_h and _TDB_h files return the below result (both _h files are identical since my query is the nucleotide version of the prot sequence). ```; evm.model.utg902.1.8.5abb479e; evm.model.utg902.1.9.5abb479e; evm.model.utg902.1.10.5abb479e; evm.model.utg1004.80; evm.model.utg8847.1_evm.model.utg8847.2.3.5abb479e; evm.model.utg8847.1_evm.model.utg8847.2; evm.model.utg8847.1_evm.model.utg8847.2.5.5abb479e; evm.model.utg1937.4; evm.model.utg12562.19; ```. Head of the mmseqstest_nucl.fasta_QDB_h_index file == . ```; 1 0 32; 2 32 32; 3 64 33; 4 97 23; 5 120 53; 6 173 42; 7 215 53; 8 268 22; 9 290 24; ```. The _SDB file has this as its head. ```; 2 585 0.986 1.536E-193 1248 2085 1044 0 279 281; 1 514 0.877 2.516E-168 1248 2085 1044 0 280 282; 3 497 0.852 1.632E-162 1248 2085 1044 0 280 282; 7 365 1.000 2.704E-120 1075 1579 507 0 168 170; 6 316 0.883 2.496E-103 1075 1579 507 0 170 172; 5 306 0.857 1.240E-99 1075 1579 507 0 170 172; 3 591 0.993 2.689E-197 1081 1921 843 0 280 282; 1 520 0.886 7.407E-172 1081 1921 843 0 280 282; 2 493 0.845 2.708E-162 1081 1921 843 0 279 281; 1 591 0.993 2.689E-197 1081 1921 843 0 280 282; ```. The reason I was performing this test was to see how nucleotide -> protein searches worked and to see if the little wrapper script I made to automate MMS2 searches needed any modifications. I figured I'd try using the protein DB as both query and target which resulted in search and convertalis working perfectly. Thus, I think the issue me and @CHEN-Zhihan are having is occurring when performing a nucleotide -> protein search (based off his query file being named ""read.fasta"" I expect that it is a nucleotide sequence) and seems to be limited to the convertalis step since search looks fine to me. Does this sound right to you?. Zac.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-377736994:2911,wrap,wrapper,2911,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-377736994,1,['wrap'],['wrapper']
Integrability,"result /tmp/mydir; Create directory /tmp/mydir; easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files true; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of n",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:2094,wrap,wrapped,2094,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['wrap'],['wrapped']
Integrability,"riments/small.mm.db experiments/small.mm.db experiments/small50_seq experiments/small50_seq.fa`. ## MMseqs Output (for bugs). Full session output:. ```; user@user:~$ ./mmseqs/bin/mmseqs createdb experiments/small_sample.fa experiments/small.mm.db; Converting sequences; [24948] 0s 72ms; Time for merging to small.mm.db_h: 0h 0m 0s 37ms; Time for merging to small.mm.db: 0h 0m 0s 16ms; Database type: Aminoacid; Time for merging to small.mm.db.lookup: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 204ms; user@user:~$ ./mmseqs/bin/mmseqs linclust experiments/small.mm.db experiments/small50.mm.db experiments/tmp/ --min-seq-id 0.5; linclust experiments/small.mm.db experiments/small50.mm.db experiments/tmp/ --min-seq-id 0.5 . MMseqs Version: 	02be0c4ea6183fce9cf45521a8c145d10f3928c1; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Threads 	12; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:3384,wrap,wrapped,3384,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['wrap'],['wrapped']
Integrability,"rogs_mmseqs_db/phrogs_profile_db \; mmseqs_target_seq/${sample}/${sample}_targetofinterest_proteins.target_seq \; mmseqs_target_seq/${sample}/${sample}_targetofinterest_proteins_mmseqs \; mmseqs_target_seq/${sample}/${sample}_targetofinterest_proteins_mmseqs.tsv --full-header. cp mmseqs_target_seq/${sample}/${sample}_targetofinterest_proteins_mmseqs.tsv mmseqs_target_seq; echo ""file: mmseqs_target_seq/${sample}_targetofinterest_proteins_mmseqs.tsv"". ## Current Behavior; [Previous output omitted here]; Create directory mmseqs_target_seq/[bacteria_of_interest]/tmp; search phrogs_mmseqs_db/phrogs_profile_db mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins.target_seq mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins_mmseqs mmseqs_target_seq/[bacteria_of_interest]/tmp -s 7 . MMseqs Version: 	14.7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:2480,wrap,wrapped,2480,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,1,['wrap'],['wrapped']
Integrability,"rs/s/Documents/Albatros/protein/short_name-Group/clusterRes /Volumes/s/tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1. MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	1; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	16; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false; Database type 	0; Shuffle input database 	true; Createdb mod",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:1554,wrap,wrapped,1554,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['wrap'],['wrapped']
Integrability,"rw-rw-r-- 1 user user 9 Apr 14 16:58 nt.fnaDB.source; -rw-rw-r-- 1 user user 7644438631 Apr 14 16:58 nt.fnaDB_h; -rw-rw-r-- 1 user user 4 Apr 14 16:58 nt.fnaDB_h.dbtype; -rw-rw-r-- 1 user user 1609915648 Apr 14 17:03 nt.fnaDB_h.index; -rw-rw-r-- 1 user user 1043159832 Apr 14 17:21 nt.fnaDB_mapping; -rw-rw-r-- 1 user user 640718438 Apr 14 17:17 nt.fnaDB_taxonomy; ```. ## MMseqs Output (some paths & filenames redacted); ```; Create directory tmp; taxonomy --search-type 3 Transcripts_mmseqs2 nt.fnaDB MyTaxonomyResult tmp . MMseqs Version: 	19064f27c8d86fcdcd3daad60f6db70f6360f30b; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	64; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverag",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438:2398,wrap,wrapped,2398,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438,1,['wrap'],['wrapped']
Integrability,s/alp.dir/njn_dynprogprobproto.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstat.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatmatrix.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_sim.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_pvalues.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogproblim.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alignment_evaluer.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_regression.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatutil.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_basic.cpp.o; [ 8%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_data.cpp.o; [ 8%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_ioutil.cpp.o; [ 8%] Built target alp; Scanning dependencies of target ksw2; [ 8%] Building CXX object lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o; [ 8%] Built target ksw2; Scanning dependencies of target generated; [ 8%] Generating ../generated/VTML80.out.h; [ 9%] Generating ../generated/VTML40.out.h; [ 9%] Generating ../generated/nucleotide.out.h; [ 9%] Generating ../generated/blosum62.out.h; [ 10%] Generating ../generated/PAM30.out.h; [ 10%] Generating ../generated/CovSeqidQscPercMinDiag.lib.h; [ 10%] Generating ../generated/CovSeqidQscPercMinDiagTargetCov.lib.h; [ 11%] Generating ../generated/ExpOpt3_8_polished.cs32.lib.h; [ 11%] Generating ../generated/Library255_may17.lib.h; [ 12%] Generating ../generated/libPolished_8.lib.h; [ 12%] Generating ../generated/cs219.lib.h; [ 12%] Generating ../generated/krona_prelude.html.h; [ 13%] Generating ../generated/result_viz_prelude.html.zst.h; [ 13%] Generating ../generated/K4000.crf.h; [ 13%] Generating ../generated/easysearch.sh.h; [ 14%] Generating ../generated/easycluster.sh.h; [ 14%] Generating ../g,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:5172,depend,dependencies,5172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,1,['depend'],['dependencies']
Integrability,"s02938_DB /final/db_profile_vs_consensus/low_1/Genus02938/Genus02938_DB /final/db_cluster/low_1/Genus02938/Genus02938_DB. MMseqs Version: 15.6f452; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 144; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/844:1780,wrap,wrapped,1780,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/844,1,['wrap'],['wrapped']
Integrability,"s:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:2097,wrap,wrapped,2097,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['wrap'],['wrapped']
Integrability,"seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 77298 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 77.30K 0s 41ms; Sort kmer 0h 0m 0s 46ms; Sort by rep. sequence 0h 0m 0s 22ms; Time for fill: 0h 0m 0s 11ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 225ms; rescorediagonal tmp/8115150149931881526/input tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 77.30K 0s 71ms; Time for merging to pref_rescore1: 0h 0m 0s 102ms; Time for processing: 0h 0m 0s 429ms; clust tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore1 tmp/8115150149931881526/clu_tmp/13790714163985984779/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 0s 91ms. Size of the sequence database: 77298; Size of the alignment database: 77298; Number of clusters: 31445. Writing results 0h 0m 0s 3ms; Time for merging to pre_clust: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 188ms; createsubdb tmp/8115150149931881526/clu_tmp/137907141639859847",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:4586,wrap,wrapped-scoring,4586,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['wrap'],['wrapped-scoring']
Integrability,"sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_filter2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 7ms; Time for merging to pref_rescore2: 0h 0m 0s 1ms ] 49.67% 77 eta 0s; Time for processing: 0h 0m 0s 37ms; align clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 42ms; Time for merging to aln: 0h 0m 0s 4ms; 154 alignments calculated; 154 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 74ms; clust clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:9138,wrap,wrapped-scoring,9138,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability,"size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; ERIATC 1; Time for index table init: 0h 0m 1s 150ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 29ms. 0.916862 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 849ms; align tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/pref_step0 tmp//7897776346521331899/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 124 type: Aminoacid; Target database size: 124 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 23ms; Time for merging to aln_step0: 0h 0m 0s 1ms; 124 alignments calculated; 124 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 72ms; clust tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/aln_step0 tmp//78977763465",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:13312,wrap,wrapped-scoring,13312,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['wrap'],['wrapped-scoring']
Integrability,"split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 split; [=================================================================] 100.00% 541.12M 11m 3s 10ms ; Sort kmer 0h 0m 24s 363ms; Sort by rep. sequence 0h 0m 9s 647ms; Generate k-mers list for 4 split; [=================================================================] 100.00% 541.12M 11m 6s 122ms ; Sort kmer 0h 0m 14s 827ms; Sort by rep. sequence 0h 0m 3s 410ms; Merge splits ... Time for fill: 0h 14m 22s 381ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 1h 16m 36s 224ms; rescorediagonal DB DB tmp/10260956542131223380/linclust/4311072182387952617/pref tmp/10260956542131223380/linclust/4311072182387952617/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 1 -v 3 . Can not touch 215222407074 into main memory; [> ] 0.00% 1 eta -. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:6842,wrap,wrapped-scoring,6842,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['wrap'],['wrapped-scoring']
Integrability,"st aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name ; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 1; linclust uniref90-DB-wwmj tmp//16518381706844811497/clu_redundancy tmp//16518381706844811497/linclust --cluster-mode 3 --max-iterations 1000 --similarity; -type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignme; nt-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp; -bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,co; ntext:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.; 000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 -; -ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,n",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:3536,wrap,wrapped-scoring,3536,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['wrap'],['wrapped-scoring']
Integrability,"sters ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu tmp//538598962955004214/clu_redundancy tmp//538598962955004214/clu_step0 tmp//538598962955004214/clu_step1 tmp//538598962955004214/clu_step2. Clustering step 1; [=================================================================] 100.00% 276 0s 4ms; Clustering step 2; [=================================================================] 100.00% 239 0s 23ms; Clustering step 3; [=================================================================] 100.00% 221 0s 37ms; Clustering step 4; [=================================================================] 100.00% 201 0s 68ms; Write merged clustering; [=================================================================] 100.00% 303 0s 91ms; Time for merging to clu: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 109ms; align ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu tmp//538598962955004214/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 303 type: Aminoacid; Target database size: 303 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 201 0s 52ms; Time for merging to aln: 0h 0m 0s 1ms; 303 alignments calculated; 294 sequence pairs passed the thresholds (0.970297 of overall calculated); 1.462687 hits per query sequence; Time for processing: 0h 0m 0s 122ms; subtractdbs tmp//538598962955004214/clu tmp//538598962955004214/aln tmp//538598962955004214/clu_not_accepted ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:24060,wrap,wrapped-scoring,24060,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['wrap'],['wrapped-scoring']
Integrability,"sult.tsv; tmp_easy_search; -a 1; --alignment-mode 3; --remove-tmp-files 0; --sort-results 0; --threads 96 ; --format-mode 4; --format-output '$format_out'; ""; echo ""$cmd"" | cat -n; eval $cmd; ```. ## MMseqs Output (for bugs); ```; # mmseqs easy-search; # query.fasta; # target_DB; # result.tsv; # tmp_easy_search; # -a 1; # --alignment-mode 3; # --remove-tmp-files 0; # --sort-results 0; # --threads 96 ; # --format-mode 4; # --format-output 'query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qseq,tseq'; ; Create directory tmp_easy_search; easy-search query.fasta target_DB result.tsv tmp_easy_search -a 1 --alignment-mode 3 --remove-tmp-files 0 --sort-results 0 --threads 96 --format-mode 4 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qseq,tseq . MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matchin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:1608,wrap,wrapped,1608,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['wrap'],['wrapped']
Integrability,"sure to execute the reproduction steps with newly recreated and empty tmp folders. I have formatted the IMG/VR v4 7.1 AA database as recommended (https://github.com/soedinglab/MMseqs2/wiki#create-a-seqtaxdb-by-manual-annotation-of-a-sequence-database) and I've created a custom taxdump using taxonkit. The custom taxdb was created without issue:. ```; mmseqs createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db; createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loading nodes file ... Done, got 6986 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```. the job was submitted with teh following batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/I",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:1501,integrat,integrate,1501,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['integrat'],['integrate']
Integrability,"t 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB tmp/10260956542131223380/clu_redundancy tmp/10260956542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:3500,wrap,wrapped-scoring,3500,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['wrap'],['wrapped-scoring']
Integrability,"t nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mod",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:2208,wrap,wrapped-scoring,2208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['wrap'],['wrapped-scoring']
Integrability,"t/protein_cat/tmp/10916148350968526968/pref_filter2 --filter-file /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/order_redundancy --threads 100 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 764.94M 1m 44s 691ms; Time for merging to pref_filter2: 0h 20m 18s 697ms; Time for processing: 0h 33m 25s 677ms; align /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref_filter2 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 100 --compressed 0 -v 3 . Compute score and coverage; Query database size: 764944038 type: Nucleotide; Target database size: 764944038 type: Nucleotide; Calculation of alignments; [=================================================================] 764.94M 11m 10s 977ms; Time for merging to aln: 0h 22m 11s 346ms. 781259144 alignments calculated.; 765501715 sequence pairs passed the thresholds (0.979831 of overall calculated).; 1.000729 hits per query sequence.; Time for processing: 0h 49m 18s 712ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/input_step_redundancy /hwfss",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:5674,wrap,wrapped-scoring,5674,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['wrap'],['wrapped-scoring']
Integrability,"t2stats /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 15.29M 1s 717ms; Time for merging to pref_count.tsv: 0h 0m 4s 684ms; Time for processing: 0h 0m 14s 46ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 15288254 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.29M 2h 10m 35s 557ms; Time for merging to aln: 0h 0m 13s 903ms; 12490036390 alignments calculated; 12287580750 sequence pairs passed the thresholds (0.983791 of overall calculated); 803.726868 hits per query sequence; Time for processing: 2h 10m 56s 695ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/1741484913889",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:14810,wrap,wrapped-scoring,14810,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['wrap'],['wrapped-scoring']
Integrability,"t2stats /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 23.55M 2s 494ms; Time for merging to pref_count.tsv: 0h 0m 8s 27ms; Time for processing: 0h 0m 21s 772ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 23551830 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [===============================Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.200; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.166; free(): corrupted unsorted chunks; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/searc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:21470,wrap,wrapped-scoring,21470,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['wrap'],['wrapped-scoring']
Integrability,"t=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.9; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	false; Exact k-mer matching 	1; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterat",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:2460,wrap,wrapped,2460,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['wrap'],['wrapped']
Integrability,tering.sh.h; [ 17%] Generating ../generated/cascaded_clustering.sh.h; [ 18%] Generating ../generated/update_clustering.sh.h; [ 18%] Generating ../generated/searchtargetprofile.sh.h; [ 18%] Generating ../generated/createindex.sh.h; [ 19%] Generating ../generated/createtaxdb.sh.h; [ 19%] Generating ../generated/translated_search.sh.h; [ 20%] Generating ../generated/taxpercontig.sh.h; [ 20%] Generating ../generated/multihitdb.sh.h; [ 20%] Generating ../generated/multihitsearch.sh.h; [ 21%] Generating ../generated/enrich.sh.h; [ 21%] Generating ../generated/blastn.sh.h; [ 21%] Generating ../generated/searchslicedtargetprofile.sh.h; [ 22%] Generating ../generated/taxonomy.sh.h; [ 22%] Generating ../generated/linsearch.sh.h; [ 23%] Generating ../generated/databases.sh.h; [ 23%] Generating ../generated/nucleotide_clustering.sh.h; [ 23%] Generating ../generated/iterativepp.sh.h; [ 24%] Generating ../generated/tsv2exprofiledb.sh.h; [ 24%] Built target generated; Scanning dependencies of target version; [ 25%] Building CXX object src/version/CMakeFiles/version.dir/Version.cpp.o; Linking CXX static library libversion.a; [ 25%] Built target version; Scanning dependencies of target libzstd_static; [ 25%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/entropy_common.c.o; [ 25%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/fse_decompress.c.o; [ 26%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/threading.c.o; [ 26%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/pool.c.o; [ 26%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/zstd_common.c.o; [ 27%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/common/error_private.c.o; [ 27%] Building C object lib/zstd/build/cmake/lib/CMakeFiles/libzstd_static.dir/__/__/__/lib/com,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:7497,depend,dependencies,7497,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,1,['depend'],['dependencies']
Integrability,"th 40 cores and 156G RAM.; I use **--force-reuse 1** because I had to run my script multiple time (due to error and for resource saving) .; At first I'd a memory error with kmermatcher, which was fixe with **--split-memory-limit**.; The generation of k-mer list took 17 split and I did it in two steps because of time limit on my server. After that I'd two different error.; Just after last split for k-mer list : ; ```; linclust /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB_clu /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp --min-seq-id 0.75 --threads 40 -v 3 --force-reuse 1 --split-memory-limit 92G . MMseqs Version: 	f5f780acd64482cd59b46eae0a107f763cd17b4d; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	40; Compressed 	0; Verbosity 	3; Weight file name 	; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.75; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	92G; Include only extendab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:1769,wrap,wrapped,1769,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['wrap'],['wrapped']
Integrability,"the indexing dies after the step ""counting k-mers"" with the message ""no k-mers extracted"" (or something to that effect, I'm not at the terminal now). So the second command above dies.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604515938:60,message,message,60,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604515938,1,['message'],['message']
Integrability,"the protocol is ok. The error is caused by the incomplete completion of the previous step, because the computer crashed. a seqTaxDB from an existing BLAST database following the protocol:; https://github.com/soedinglab/mmseqs2/wiki#create-a-seqtaxdb-from-an-existing-blast-database",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/566#issuecomment-1140146484:4,protocol,protocol,4,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/566#issuecomment-1140146484,2,['protocol'],['protocol']
Integrability,"the whole log overwhelms my system, but I captured most of the information that occurs before this bug:. ```; clusterer:/mnt/cluster/filt_80_2020-04-19/combined12$ time /custom_install/installations/mmseqs-nonmpi/MMseqs2/build/bin/mmseqs linclust inDB linClu90DB tmp --min-seq-id 0.90 --kme; r-per-seq 40 -c 0.9; Tmp tmp folder does not exist or is not a directory.; Create dir tmp; linclust inDB linClu90DB tmp --min-seq-id 0.90 --kmer-per-seq 40 -c 0.9. MMseqs Version: 290668474611312a94a868bf041b38c8618f5ef6; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 160; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:727,wrap,wrapped,727,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311,1,['wrap'],['wrapped']
Integrability,"tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 8ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms ] 16.00% 45 eta 0s; Time for processing: 0h 0m 0s 37ms; align tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore2 tmp//10798751672030653963/linclust/5052420726377277994/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 64ms; Time for merging to aln: 0h 0m 0s 5ms; 276 alignments calculated; 276 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 80ms; clust tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/l",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:8329,wrap,wrapped-scoring,8329,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['wrap'],['wrapped-scoring']
Integrability,"tmp/13016959338117486175/linclust/12836794075397166753/pref_filter1 tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_filter2 --filter-file tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/order_redundancy --threads 24 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 10.91K 0s 66ms ; Time for merging to pref_filter2: 0h 0m 0s 170ms; Time for processing: 0h 0m 0s 603ms; align tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_filter2 tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 5 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 24 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 10913 type: Nucleotide; Target database size: 10913 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 10.91K 0s 56ms ; Time for merging to aln: 0h 0m 0s 218ms; 15033 alignments calculated; 12475 sequence pairs passed the thresholds (0.829841 of overall calculated); 1.143132 hits per query sequence; Time for",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:10750,wrap,wrapped-scoring,10750,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['wrap'],['wrapped-scoring']
Integrability,"tmp; cluster ../so245_combined_assembly_mmseqDB so245_combined_assembly_mmseq_clustered cluster_tmp --cluster-mode 2 --alignment-mode 3 --cov-mode 1 -c 0.99 --min-seq-id 0.99 --max-seq-len 10000000 --cluster-reassign 1 --threads 40 . MMseqs Version: 	61ca48883b50714be51fc35fc9b77325ffde53fb; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.99; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.99; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	1; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:1703,wrap,wrapped,1703,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['wrap'],['wrapped']
Integrability,"ucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1831648 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 1.83M 2m 36s 559ms. Adjusted k-mer length 17; Sort kmer 0h 0m 33s 753ms; Sort by rep. sequence 0h 0m 2s 503ms; Time for fill: 0h 0m 4s 992ms; Time for merging to pref: 0h 0m 0s 10ms; Time for processing: 0h 4m 21s 927ms; rescorediagonal 1831648_seqs.mmseqs2db 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref tmp/16479300059278292880/linclust/10067396915876818640/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.85 -a 0 --cov-mode 0 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 112 --compressed 0 -v 3 . [=================================================================] 1.83M 10s 370ms; Time for merging to pref_rescore1: 0h 0m 0s 781ms; Time for processing: 0h 0m 21s 118ms; clust 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref_rescore1 tmp/16479300059278292880/linclust/10067396915876818640/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Set Cover; [=================================================================] 1.83M 0s 184ms; Sort entries; Find missing connections; Found 1239487 new connections.; Reconstruct initial order; [=================================================================] 1.83M 0s 214ms; Add missing connections; [==============",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:5324,wrap,wrapped-scoring,5324,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['wrap'],['wrapped-scoring']
Integrability,"ulti-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=================================================================] 140.20K 2m 37s 793ms; Time for merging to pref_rescore1: 0h 0m 0s 35ms; Time for processing: 0h 2m 48s 60ms; clust db/dbclust tmp/16437734971973434362/pref_rescore1 tmp/16437734971973434362/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 36 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 140.20K 0s 7ms; Sort entries; Find missing connections; Found 44 new connections.; Reconstruct initial order; [=================================================================] 140.20K 0s 7ms; Add missing connections; [=================================================================] 140.20K 0s 3ms. Time for read in: 0h 0m 0s 42ms; Total tim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:1757,wrap,wrapped-scoring,1757,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['wrap'],['wrapped-scoring']
Integrability,"use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement for FreeBSD, but I think SSE2 is safe to assume for amd64, but I also added a pkg-message suggesting an optimized build from source. How much performance gain do you typically see from SSE4 or AVX?. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:2082,message,message,2082,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555,1,['message'],['message']
Integrability,"usters DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/clu_step0 tmpfiles//13298481167543164943/clu_step1 tmpfiles//13298481167543164943/clu_step2. Clustering step 1; [=================================================================] 276 0s 7ms; Clustering step 2; [=================================================================] 237 0s 23ms; Clustering step 3; [=================================================================] 218 0s 41ms; Clustering step 4; [=================================================================] 200 0s 62ms; Write merged clustering; [=================================================================] 303 0s 66ms; Time for merging to clu: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 112ms; align DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu tmpfiles//13298481167543164943/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 303 type: Aminoacid; Target database size: 303 type: Aminoacid; Calculation of alignments; [=================================================================] 200 0s 16ms; Time for merging to aln: 0h 0m 0s 3ms. 303 alignments calculated.; 293 sequence pairs passed the thresholds (0.966997 of overall calculated).; 1.465000 hits per query sequence.; Time for processing: 0h 0m 0s 71ms; subtractdbs tmpfiles//13298481167543164943/clu tmpfiles//13298481167543164943/aln tmpfiles//13298481167543164943/clu_not_accepted --e-profile 100000000 -e 100000000 --thre",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:24019,wrap,wrapped-scoring,24019,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['wrap'],['wrapped-scoring']
Integrability,"v-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.31B 2h 34m 42s 85ms; Sort kmer 0h 0m 52s 653ms; Sort by rep. sequence 0h 0m 31s 645ms; Generate k-mers list for 2 split; [=================================================================] 1.31B 2h 36m 22s 543ms; Sort kmer 0h 0m 44s 690ms; Sort by rep. sequence 0h 0m 26s 121ms; Merge splits ... Time for fill: 1h 31m 44s 960ms; Time for merging to pref: 0h 0m 0s 6ms; Time for processing: 10h 13m 54s 576ms; rescorediagonal JGI JGI tmp/14756877054557405347/pref tmp/14756877054557405347/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 . Can not touch 407600133816 into main memory. ## Your Environment; Latest precompiled AVX2 version Release 15-6f452",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:4120,wrap,wrapped-scoring,4120,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['wrap'],['wrapped-scoring']
Integrability,"when i Create a seqTaxDB from an existing BLAST database following the protocol:; https://github.com/soedinglab/mmseqs2/wiki#create-a-seqtaxdb-from-an-existing-blast-database. mmseqs createtaxdb nt.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nt.fna.taxidmapping. createtaxdb nt.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nt.fna.taxidmapping . MMseqs Version: ce7bf53b8241f7ced20f5a75bab052da98e5ca79; NCBI tax dump directory taxonomy/; Taxonomy mapping file nt.fna.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 56; Verbosity 3. **Input database ""nt.fnaDB"" has the wrong type (Generic); Allowed input: ; - Index ; - Nucleotide ; - Profile ; - Aminoacid**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/566:71,protocol,protocol,71,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/566,1,['protocol'],['protocol']
Integrability,"with 0 size result lists; Time for merging to orfs_pref_tmp_7: 0h 3m 12s 265ms; Time for merging to orfs_pref_tmp_7_tmp: 0h 1m 51s 505ms; Merging 8 target splits to orfs_pref; Preparing offsets for merging: 0h 4m 24s 509ms; [=================================================================] 100.00% 310.10M 1m 43s 629ms; Time for merging to orfs_pref: 0h 2m 28s 649ms; Time for merging target splits: 0h 8m 46s 959ms; Time for merging to orfs_pref_tmp: 0h 1m 57s 44ms; Time for processing: 10h 1m 11s 163ms; rescorediagonal /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_pref /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0 -e 100 -c 0 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 310.10M 1m 26s 457ms; Time for merging to orfs_aln: 0h 2m 24s 668ms; Time for processing: 0h 4m 43s 316ms; createsubdb /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aln.list /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter --subdb-mode 1 -v 3. Time for merging to orfs_filter: 0h 0m 0s 6ms; Time for processing: 0h 0m 41s 304ms; rmdb /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter_h -v 3. Time for processing: 0h 0m 0s 5ms; createsubdb /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aln.list /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:18287,wrap,wrapped-scoring,18287,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['wrap'],['wrapped-scoring']
Integrability,"x accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-patter",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:18658,wrap,wrapped-scoring,18658,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['wrap'],['wrapped-scoring']
Integrability,"x seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster iterations to 3; linclust shrimpDB tmp97/17949317426677965256/clu_redundancy tmp97/17949317426677965256/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:3351,wrap,wrapped-scoring,3351,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['wrap'],['wrapped-scoring']
Integrability,"x table init: 0h 0m 0s 730ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 5991; Target db start 1 to 5991; [=================================================================] 100.00% 5.99K 4s 202ms . 403.312621 k-mers per position; 5696 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 16 sequences passed prefiltering per query sequence; 20 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 1ms; Time for processing: 0h 0m 5s 300ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 5991 type: Aminoacid; Target database size: 5991 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 5.99K 0s 226ms ; Time for merging to aln_step2: 0h 0m 0s 1ms; 21329 alignments calculated; 6429 sequence pairs passed the thresholds (0.301421 of overall calculated); 1.073110 hits per query sequence; Time for p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:28206,wrap,wrapped-scoring,28206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['wrap'],['wrapped-scoring']
Integrability,"xtension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust 1831648_seqs.mmseqs2db tmp/16479300059278292880/clu_redundancy tmp/16479300059278292880/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nuc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:2778,wrap,wrapped-scoring,2778,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['wrap'],['wrapped-scoring']
Integrability,"y db start 1 to 9; Target db start 1 to 713072; [=================================================================] 100.00% 9 0s 6ms. 10.636821 k-mers per position; 10265 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 66 sequences passed prefiltering per query sequence; 36 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 38ms; Time for processing: 0h 0m 0s 251ms; lcaalign tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/first --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Compute score only; Query database size: 9 type: Aminoacid; Target database size: 713072 type: Aminoacid; [=================================================================] 100.00% 9 0s 44ms; Time for merging to first: 0h 0m 0s 37ms; 128 alignments calculated; 88 sequence pairs passed the thresholds (0.687500 of overall calculated); 9.777778 hits per query sequence; Time for processing: 0h 0m 0s 189ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/115501",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:10975,wrap,wrapped-scoring,10975,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,1,['wrap'],['wrapped-scoring']
Integrability,"y-limit 60G; mmseqs createsubdb viral_clu viral_db viral_rep; ```; Then I merged 2 fastq files with _plass_; `plass mergereads ./OUT/8813_paired_1.fastq ./OUT/8813_paired_2.fastq ./OUT/8813_db --threads 10; `; I thought [this was the way](https://github.com/soedinglab/MMseqs2/issues/436) to feed the next steps, 8813_db would be the query in this case. I reasoned since the database of nonredundant proteins is in nucleotide format and the reads created a nucleotide database the search would be between nucleotide. . **I run** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --search-type 3; `. I got this error ; ```; Unrecognized parameter --search-type; Did you mean ""--seed-sub-mat""?; ```. **Or** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --seed-sub-mat nucl`. and I got this message error; ```; It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. Using 8813_FA as a query which -a simple database created from a fasta, part of the assembly of that sample, the search works. `mmseqs search 8813_FA ../DATABASE/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:1472,message,message,1472,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,1,['message'],['message']
Integrability,"yes,i use a none slurm 64core machine to run all mmseqs and foldseek procudure later ,by the way,foldseek get same issue for me. 获取 Outlook for iOS<https://aka.ms/o0ukef>; ________________________________; 发件人: Shuxian Zou ***@***.***>; 发送时间: Tuesday, December 19, 2023 7:35:35 PM; 收件人: soedinglab/MMseqs2 ***@***.***>; 抄送: Wangchentong ***@***.***>; Author ***@***.***>; 主题: Re: [soedinglab/MMseqs2] process stuck at rescorediagonal when do cluster (Issue #602). By ""another device"", do you mean a non slurm cluster?. ―; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/602#issuecomment-1862597691>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AV22KHFBXRJPMVAYRGW3FP3YKF3YPAVCNFSM6AAAAAAQFZF5I2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQNRSGU4TONRZGE>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602#issuecomment-1862905903:875,Message,Message,875,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602#issuecomment-1862905903,1,['Message'],['Message']
Integrability,"zcat the gzipped fq file before execute mmseqs easy-search change nothing, the error remains the same. ```; easy-search B5177-2-N919D_T1_interleaved.fq pfama_20230914/pfam-a-full B5177-2-N919D_T1.tsv tmp1 --threads 12 --compressed 1 . MMseqs Version: 13.45111; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 12; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:381,wrap,wrapped,381,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947,1,['wrap'],['wrapped']
Integrability,"ze: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 985ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 221; Target db start 1 to 221; [=================================================================] 100.00% 221 0s 31ms. 190.836300 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 644ms; align tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//538598962955004214/pref_step2 tmp//538598962955004214/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 221 type: Aminoacid; Target database size: 221 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 221 0s 47ms; Time for merging to aln_step2: 0h 0m 0s 5ms; 364 alignments calculated; 254 sequence pairs passed the thresholds (0.697802 of overall calculated); 1.149321 hits per query sequence; Time for processing: 0h 0m 0s 94ms; clust tmp//538598962955004214/input_step2 tmp//538598962955004214/aln_step2 tmp//538598962955004214/clu_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:21272,wrap,wrapped-scoring,21272,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['wrap'],['wrapped-scoring']
Integrability,"|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:1707,protocol,protocol,1707,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['protocol'],['protocol']
Integrability,"﻿Hello,. I am working with mmseqs2, I was asking myself about the order of fasta files when I use the command mmseqs _createdb / cluster_. I observed some little differences if I change the order of fasta sequences on the command _createdb_. Command line :. I used these commands :; ; - _mmseqs createdb --dont-shuffle (true/false) file.faa panproteome.db_. - _export TMP_DIR=$(mktemp -d ) && mmseqs cluster panproteome.db families.db ${TMP_DIR} --min-seq-id 0.8 -c 0.8 --threads 2 --kmer-per-seq 80 --max-seqs 300 && rm -rf ${TMP_DIR}_. - _mmseqs createtsv panproteome.db panproteome.db families.db families.tsv --first-seq-as-repr true_. I use : _MMseqs2 Version: 5.9375b_. I took a dataset (available in the attachment) for an example and I have this result :. results :; 		; 	order 1 :; 		dont-shuffle : false  -> cluster numbers :4296; 		dont-shuffle : true  -> cluster numbers : 4290. 	order 2 :; 		dont-shuffle : false -> cluster numbers : 4297; 		dont-shuffle : true -> cluster numbers : 4298. Is it an expected result to obtain different number of cluster depending on fasta sequence order ?. Attachment : fasta sequences ( 2 different order) and clustering files (families.tsv) for each condition.; [results.tar.gz](https://github.com/soedinglab/MMseqs2/files/2379387/results.tar.gz)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/115:1065,depend,depending,1065,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/115,1,['depend'],['depending']
Modifiability,"	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.95; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.99; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:1947,extend,extendable,1947,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['extend'],['extendable']
Modifiability,"	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:4640,extend,extendable,4640,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['extend'],['extendable']
Modifiability," 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.75; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	62G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; Error: Pre-clustering step died; ```; I also have an error log : . ```; + mmseqs linclust /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB_clu /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp --min-seq-id 0.75 --threads 20 -v 3 --force-reuse 1 --split-memory-limit 62G; /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/linclust.sh: line 37: 1000278 Killed ""$MMSEQS"" clust ""$INPUT"" ""${TMP_PATH}/pref_rescore1"" ""${TMP_PATH}/pre_clust"" ${CLUSTER_PAR}. real	8m30.284s; user	12m57.207s; sys	2m3.531s; slurmstepd: error: Detected 1 oom_kill event in StepId=1504095.batch. Some of the step tasks have been OOM Killed.; ```. I see that it's a memory issue but I don't know what to do to solve this.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:9275,extend,extendable,9275,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['extend'],['extendable']
Modifiability," 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.75; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	92G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:2748,extend,extendable,2748,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['extend'],['extendable']
Modifiability," '10000']' returned non-zero exit status 1.; ```. ## Steps to Reproduce (for bugs). Put in `input_sequences.fasta` anywhere (it affects single entry fasta and also miltientry fasta) one of those examples:; * `SEGGQDFWL`; * `GSSGLISMPRV`. Setup ColabFold databases from https://github.com/sokrypton/ColabFold/blob/main/setup_databases.sh; Run `colabfold_search input_sequences.fasta /path/to/db_folder search_results`; you will see above crash. **OR**. Go to https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb and try to fold one of the examples, you will see:; > Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; Segmentation fault (core dumped); Error: Alignment died; ```. ## Context. If you will extend crashing examples to 12aa then mmseqs will work correctly. Is seems that 12 is some kind of magic barrier in examples I found. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `fcf52600801a73e95fd74068e1bb1afb437d719d` and `edb8223d1ea07385ffe63d4f103af0eb12b2058e`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * `fcf52600801a73e95fd74068e1bb1afb437d719d` compiled from source; * `edb8223d1ea07385ffe63d4f103af0eb12b2058e` downloaded from `https://mmseqs.com/archive/edb8223d1ea07385ffe63d4f103af0eb12b2058e/mmseqs-linux-avx2.tar.gz`; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.16.3; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD Ryzen 9 3950X 16-Core, 64GB RAM; * Operating system and version: Ubuntu 20.0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/538:3960,extend,extend,3960,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538,1,['extend'],['extend']
Modifiability," --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 149ms; rescorediagonal artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:4049,extend,extendable,4049,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['extend'],['extendable']
Modifiability," --remove-tmp-files 1. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time for processing: 4h 41m 10s 259ms; rescorediagonal /export/scratch/SRC-50/8871099322051866948/input /export/scra",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:4129,extend,extendable,4129,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['extend'],['extendable']
Modifiability," --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:5198,extend,extendable,5198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['extend'],['extendable']
Modifiability," --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Database size: 51992 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 51.99K 0s 346ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 62ms; Sort by rep. sequence 0h 0m 0s 19ms; Time for fill: 0h 0m 0s 27ms; Time for merging to pref: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 567ms; rescorediagonal shrimpDB shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref tmp97/17949317426677965256/linclust/6279588666755106708/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 51.99K 0s 101ms; Time for merging",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:5143,extend,extendable,5143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['extend'],['extendable']
Modifiability," --threads 56 --compressed 0 -v 3 . [=================================================================] 35.67M 9s 733ms; Time for merging to pref_rescore2: 0h 0m 12s 355ms; Time for processing: 0h 0m 38s 935ms; align All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore2 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 56 --compressed 0 -v 3 . Compute score and coverage; Query database size: 35665237 type: Aminoacid; Target database size: 35665237 type: Aminoacid; Calculation of alignments; [=================================================================] 35.67M 7m 56s 191ms; Time for merging to aln: 0h 0m 12s 23ms; 118495359 alignments calculated; 45078108 sequence pairs passed the thresholds (0.380421 of overall calculated); 1.263923 hits per query sequence; Time for processing: 0h 8m 32s 609ms; clust All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/aln All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 56 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 0m 1s 843ms. Size of the sequence database: 35665237; Size of the alignment database: 35665237; Number of c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:9382,extend,extend,9382,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['extend'],['extend']
Modifiability," --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 280.71K 0s 74ms; Time for merging to pref_count.tsv: 0h 0m 0s 77ms; Time for processing: 0h 0m 0s 753ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 280714 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 280.71K 3m 53s 720ms; Time for merging to aln: 0h 0m 0s 84ms; 356937745 alignments calculated; 350790208 sequence pairs passed the thresholds (0.982777 of overall calculated); 1249.635620 hits per query sequence; Time for processing: 0h 3m 57s 914ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref -v 3 . Time for processing: 0h 0m 0s 432ms; swapresults /tmp/tmp_MMSeq2/17595625152138277869/search_tmp/17414849138893322762/target_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/1741",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:9491,extend,extend,9491,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['extend'],['extend']
Modifiability," 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================================] 417 0s 10ms; ==Time for merging to pref_rescore2: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 52ms; align DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore2 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 417 type: Aminoacid; Target database size: 417 type: Aminoacid; Calculation of alignments; [=================================================================] 417 0s 37ms; Time for merging to aln: 0h 0m 0s 2ms. 615 alignments calculated.; 418 sequence pairs passed the thresholds (0.679675 of overall calculated).; 1.002398 hits per query sequence.; Time for processing: 0h 0m 0s 81ms; clust DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/aln DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 417 0s 4ms; Sort entries; Find missing connections; Found 1 ne",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:8481,extend,extend,8481,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['extend'],['extend']
Modifiability," 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 182ms; rescorediagonal DB_in/fa",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:3295,extend,extendable,3295,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['extend'],['extendable']
Modifiability," 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_0 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. rmdb result_20230419_115721/tmp/16464230693756166324/aln_0; rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. result2profile result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/1646423069375616632",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:5879,extend,extend,5879,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['extend'],['extend']
Modifiability, 0 size result lists. Time for prefiltering scores calculation: 0h 0m 1s 147ms; Time for merging files: 0h 0m 0s 359ms; Sorting the results... tmpC/10139724895635470572/pref_0_tmp_2_tmp .. Done; Time for merging files: 0h 0m 0s 13ms; Merge file tmpC/10139724895635470572/pref_0_tmp_0 and tmpC/10139724895635470572/pref_0.index_tmp_0; Time for merging files: 0h 0m 0s 8ms; tmpC/10139724895635470572/pref_0_merged tmpC/10139724895635470572/pref_0.index_merged; Time for merging files: 0h 0m 0s 295ms. Time for merging results: 0h 0m 0s 908ms; Time for processing: 8h 48m 29s 581ms; Program call:; align geneC.db genes.db tmpC/10139724895635470572/pref_0 tmpC/10139724895635470572/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --max-seqs 1000 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 1 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.1; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	1000; Compositional bias 	1; Realign hit 	true; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id.	false; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3. Init data structures...; Compute score only.; Using 1 threads.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; Time for merging files: 0h 0m 0s 14ms. All sequences processed. 1218 alignments calculated.; 266 sequence pairs passed the thresholds (0.218391 of overall calculated).; 266 hits per query sequence.; Time for processing: 0h 0m 15s 821ms; P,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:42647,extend,extend,42647,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['extend'],['extend']
Modifiability," 0m 1s 151ms; [=================================================================] 1.30M 14s 938ms; Time for merging to pref_0: 0h 0m 0s 523ms; Time for merging target splits: 0h 0m 18s 286ms; Time for merging to pref_0_tmp: 0h 0m 6s 63ms; Time for processing: 11h 52m 0s 943ms; align /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 /tmp//2989869989197200687/search_tmp/6775691152365959592/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1298472 type: Nucleotide; Target database size: 90056195 type: Nucleotide; Calculation of alignments; [=================================================================] 1.30M 1h 24m 48s 423ms; Time for merging to aln: 0h 0m 0s 504ms; 662682155 alignments calculated; 492943101 sequence pairs passed the thresholds (0.743861 of overall calculated); 379.633209 hits per query sequence; Time for processing: 1h 27m 9s 264ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 746ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/input_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/aln_merge -v 3 . Tim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:23511,extend,extend,23511,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['extend'],['extend']
Modifiability," 0s 42ms; Time for merging to pref_rescore2: 0h 0m 0s 90ms; Time for processing: 0h 0m 0s 772ms; align ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore2 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 31321 type: Aminoacid; Target database size: 31321 type: Aminoacid; Calculation of alignments; [=================================================================] 31.32K 3s 713ms; Time for merging to aln: 0h 0m 0s 107ms; 53166 alignments calculated; 45707 sequence pairs passed the thresholds (0.859704 of overall calculated); 1.459308 hits per query sequence; Time for processing: 0h 0m 4s 203ms; clust ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/aln ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Connected Component; [=================================================================] 31.32K 0s 215ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:16474,extend,extend,16474,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extend']
Modifiability," 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; --------------------------------------------------------------------------; mpirun was unable to launch the specified application as it could not find an executable:; Executable: mmseqs; Node: slave; while attempting to start process rank 1.; --------------------------------------------------------------------------; 2 total processes failed to start; Error: Alignment step died; Error: linclust died; ```. I performed identical installations of mmseqs on both machines. If I just run `mmseqs cluster /mnt/DB mnt/clu /mnt/tmp` on either machine, then it is able to work, but I would like to get the MPI functionality up if possible! Thank you. . ## Your Environment; I am working in Debian 8 (Jesse),",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:3328,extend,extendable,3328,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['extend'],['extendable']
Modifiability," 3 -e 0.001 --remove-tmp-files 1 . Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:4716,extend,extend,4716,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['extend'],['extend']
Modifiability," 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms; rescorediagonal tmpDB tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref tmp/12397138995521121878/linclust/639052995728955397/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:4515,extend,extendable,4515,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['extend'],['extendable']
Modifiability," Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:2542,extend,extendable,2542,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['extend'],['extendable']
Modifiability," MPI runner; Remove Temporary Files 	false; LCA Ranks 	phylum:superphylum:subkingdom:kingdom:superkingdom; Blacklisted Taxa 	12908,28384; LCA Mode 	2; Remove Temporary Files 	false; Sets the MPI runner. Program call:; search /tmp/global2/nyoungblut/LLMGAG_27929269397/linclust/genes_db /ebio/abt3_projects/databases_no-backup/uniclust/uniclust90_2018_08_db /tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/tmp//15538800487586745695/first /tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/tmp//15538800487586745695/tmp_hsp1 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 -v 3 -s 6 -k 0 --k-score 2147483647 --alph-size 21 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --mask-profile 1 --e-profile 0.001 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --omit-consensus 0 --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --num-iterations 1 --start-sens 1 --sens-steps 3 --slice-search 0 --strand 1 --disk-space-limit 0 --remove-tmp-files 0. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; M",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032:3037,extend,extend,3037,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032,1,['extend'],['extend']
Modifiability," Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (153016352 byte) of total memory (1886452531 byte); Process file into 1 parts; Generate k-mers list 0; ............; Time for fill: 0h 0m 1s 398ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 1s 345ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Program call:; rescorediagonal tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 0.001 -c 0.9 --cov-mode 1 --min-seq-id 0.9 --seq-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:6851,extend,extendable,6851,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['extend'],['extendable']
Modifiability," also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 of overall calculated).; 1.097190 hits per query sequence.; Time for merging to aln: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 84ms; clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 854 0s 5ms;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:11840,extend,extend,11840,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['extend'],['extend']
Modifiability," and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.31B 2h 34m 42s 85ms; Sort kmer 0h 0m 52s 653ms; Sort by rep. sequence 0h 0m 31s 645ms; Generate k-mers list for 2 split; [=================================================================] 1.31B 2h 36m 22s 543ms; Sort kmer 0h 0m 44s 690ms; Sort by rep. sequence 0h 0m 26s 121ms; Merge splits ... Time for fill: 1h 31m 44s 960ms; Time for merging to pref: 0h 0m 0s 6ms; Time for processing: 10h 13m 54s 576ms; rescorediagonal JGI JGI tmp/14756877054557405347/pref tmp/1475687705455740534",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:3028,extend,extendable,3028,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['extend'],['extendable']
Modifiability," blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/KmerGenerator.cpp.o; [ 3%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Main.cpp.o; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp: In function 'int prefilter(int, const char**, const Command&)':; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp:72:12: warning: unused variable 'splitMode' [-Wunused-variable]; size_t splitMode = pref->getSplitMode();; ^~~~~~~~~; [ 4%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Prefiltering.cpp.o; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:4152:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6032:suffix or ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:4230,Config,Configuring,4230,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Config'],['Configuring']
Modifiability, conda-forge; gawk 4.2.1 h14c3975_1001 conda-forge; krb5 1.16.3 h05b26f9_1001 conda-forge; libcurl 7.64.1 hda55be3_0 conda-forge; libdeflate 1.0 h14c3975_1 bioconda; libedit 3.1.20170329 hf8c457e_1001 conda-forge; libgcc-ng 8.2.0 hdf63c60_1; libssh2 1.8.2 h22169c7_2 conda-forge; libstdcxx-ng 8.2.0 hdf63c60_1; llvm-openmp 8.0.0 hc9558a2_0 conda-forge; mmseqs2 8.fac81 hf3e9acd_1 bioconda; ncurses 6.1 hf484d3e_1002 conda-forge; openmp 8.0.0 0 conda-forge; openssl 1.1.1b h14c3975_1 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h8571acd_11 bioconda; seqtk 1.3 h84994c4_1 bioconda; tk 8.6.9 h84994c4_1001 conda-forge; xz 5.2.4 h14c3975_1001 conda-forge; zlib 1.2.11 h14c3975_1004 conda-forge; ```. </p>; </details>. <details><summary>conda info</summary>; <p>. ```; active environment : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; active env location : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; shell level : 2; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.6.11; conda-build version : 3.11.0; python version : 3.6.7.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://conda.anaconda.org/leylabmpi/linux-64; https://conda.anaconda.org/leylabmpi/noarch; https://conda.anaconda.org/r/linux-64; https://conda.anaconda.org/r/noarch; https://conda.anaconda.org/qiime2/li,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188:1544,config,config,1544,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188,1,['config'],['config']
Modifiability," coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 127 0s 5ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms=====> ] 78.57% 100 eta 0s; Time for processing: 0h 0m 0s 27ms; align tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore2 tmp//7897776346521331899/linclust/17269245559208916342/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 127 type: Aminoacid; Target database size: 127 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 127 0s 17ms; Time for merging to aln: 0h 0m 0s 1ms; 130 alignments calculated; 130 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.023622 hits per query sequence; Time for processing: 0h 0m 0s 57ms; clust tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/aln tmp//7897776346521331899/linclust/17269245559208916342/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 127 0s 3ms; Sort entries; Find missing connections; Found 3 new connections.; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:8818,extend,extend,8818,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['extend'],['extend']
Modifiability," db start 1 to 13003941; [=================================================================] 2.27M 43m 26s 530ms. 3262.541404 k-mers per position; 476704 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 18145 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 779ms; Time for processing: 0h 46m 49s 482ms; align tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_2 tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 2271004 type: Aminoacid; Target database size: 13003941 type: Aminoacid; Calculation of alignments; [=================================================================] 2.27M 3s 348ms; Time for merging to aln_2: 0h 0m 0s 785ms. 2252859 alignments calculated.; 16146 sequence pairs passed the thresholds (0.007167 of overall calculated).; 0.007110 hits per query sequence.; Time for processing: 0h 0m 5s 939ms; mergedbs tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/aln tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_2 --compressed 0 -v 3 . Merging the results to tmp/9700814981231218113/search_tmp/10627605686170015473/aln; Time for merging to aln: 0h 0m 0s 302ms; Time for processing: 0h 0m 1s 611ms; Remove temporary file",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:13769,extend,extend,13769,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['extend'],['extend']
Modifiability," depth 	1000; Similarity type 	2; Threads 	56; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage mode 	1; Max sequence length 	10000; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Alphabet size 	nucl:5,aa:21; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Mask residues 	1; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort.faa All_cohort_tmp//9948387321092861199/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0. Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 4m 46s 360ms; Create directory All_cohort_tmp//9948387321092861199/clu_tmp; linclust All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu All_cohort_tmp//9948387321092861199/clu_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:2773,extend,extendable,2773,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['extend'],['extendable']
Modifiability," iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false; LCA ranks 	kingdom:phylum:class:order:family:genus:species; Blacklisted taxa 	12908,28384; Show taxon lineage 	false; LCA mode 	3; Taxonomy output mode 	0; Match sequences by their id. 	false; Remove temporary files 	false; MPI runner. search clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/first tmp_part-14/17957680840564044329/tmp_hsp1 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3 --seed-sub-mat VTML80.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --spaced-kmer-mode 1 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --mask-profile 1 --e-profile 0.001 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --omit-consensus 0 --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --chain-alignments 0 --merge-query 1 --search-type 0 --num-iterations 1 --start-sens 4 --sens-steps 1 --slice-search 0 --strand 1 --disk-space-limit 0 --force-reuse 0 --remove-tmp-files 0. prefilter clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:3339,extend,extend,3339,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,1,['extend'],['extend']
Modifiability, k-mer similarity threshold: 90; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1364570; Target db start 1 to 17772; ................................................................................................... 1 Mio. sequences processed; ....................................; 0 k-mers per position.; 49304 DB matches per sequence.; 1 Overflows.; 286 sequences passed prefiltering per query sequence.; Median result list size: 300; 11 sequences with 0 size result lists. Time for prefiltering scores calculation: 0h 3m 59s 38ms; Time for merging files: 0h 0m 1s 745ms; Time for processing: 0h 8m 22s 701ms; Program call:; swapresults pbps.neighbors.DB pfam_profile.idx tmp/6822607060114486044/pref tmp/6822607060114486044/pref_swapped --sub-mat blosum62.out -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 10 --compressed 0 --db-load-mode 0 -v 3 ; Index version: 15; Generated by: 8-fac81; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqType: Profile; Headers1: 1; Headers2: 0; ScoreMatrix: VTML80.out; Result database: tmp/6822607060114486044/pref; Computing offsets.; ................................................................................................... 1 Mio. sequences processed; ....................................; Reading results.; ................................................................................................... 1 Mio. sequences processed; ....................................; Output database: tmp/6822607060114486044/pref_swapped; .; Time for merging files: 0h 0m 0s 23ms; Time for processing: 0h 0m 46s 63ms; Program call:; align pfam_profile.idx pbps.neighbors.DB tmp/6822607060114486044/pref_swapped tmp/6822607060114486044/aln_swapped --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-se,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:4212,extend,extend,4212,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,1,['extend'],['extend']
Modifiability," only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:5054,extend,extendable,5054,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['extend'],['extendable']
Modifiability," path; Threads 	16; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb /Users/s/Documents/protein/true_plus300_proteins-13-strains_shortname-group.fa /Volumes/s/tmp/3581369344000996149/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [1718] 0s 24ms; Time for merging to input_h: 0h 0m 0s 10ms; Time for merging to input: 0h 0m 0s 10ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 81ms; Create directory /Volumes/s/tmp/3581369344000996149/clu_tmp; cluster /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu /Volumes/s/tmp/3581369344000996149/clu_tmp --max-seqs 20 -c 0.8 --cov-mode 1 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --min-seq-id 0.5 --remove-tmp-files 1. Set cluster sensitivity to -s 3.000000; Set cluster mode GREEDY MEM; Set c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:2389,extend,extendable,2389,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['extend'],['extendable']
Modifiability," previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 22 --compressed 0 -v 3 . Compute score and coverage; Query database size: 77815083 type: Aminoacid; Target database size: 77815083 type: Aminoacid; Calculation of alignments; [Error: Alignment step died; Error: Search died. The command is the same as used for previous clustering, the file is not bigger, I have no idea what is the issue. Any help is appreciated, thanks,; G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/265:2119,extend,extend,2119,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265,1,['extend'],['extend']
Modifiability," reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redundancy tmp//538598962955004214/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kme",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:2569,extend,extend,2569,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['extend'],['extend']
Modifiability," results.; [=================================================================] 100.00% 9 0s 4ms. Output database: tmp//538598962955004214/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00% 297 0s 6ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 85ms; align tmp//538598962955004214/seq_seeds.merged tmp//538598962955004214/seq_wrong_assigned tmp//538598962955004214/seq_wrong_assigned_pref_swaped tmp//538598962955004214/seq_wrong_assigned_pref_swaped_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 210 type: Aminoacid; Target database size: 9 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 18 0s 12ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 0ms; 24 alignments calculated; 18 sequence pairs passed the thresholds (0.750000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 63ms; filterdb tmp//538598962955004214/seq_wrong_assigned_pref_swaped_aln tmp//538598962955004214/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 16 --compressed 0 -v 3. Filtering using regular expression; [=================================================================] 100.00% 18 0s 13ms; Time for merging to seq_wrong_assigned_pref_swaped_aln_ocol: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 61ms; mergedbs tmp//5385989629550042",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:30489,extend,extend,30489,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['extend'],['extend']
Modifiability," sizeof *state - 1];; ; }; void Random::seed (long x); @@ -73,7 +73,7 @@ void Random::seed (long x); ; // linear congruential initializer; 	for (i = 1; i < sizeof state / sizeof *state; ++i) {; -		state [i] = 1103515245 * state [i - 1] + 12345;; +		state [i] = 1103515245ul * state [i - 1] + 12345ul;; 	}; ; 	rJ = &state [r_off];; @@ -85,7 +85,7 @@ void Random::seed (long x); long Random::number () // uniform random x : 0 <= x <= exp2 (31) - 1; ; {; -	long r;; +	unsigned long r;; ; 	r = *rK;; 	r += *rJ--;; @@ -97,6 +97,6 @@ long Random::number () // uniform random; 			rJ = &state [sizeof state / sizeof *state - 1];; }; 	; - return (r >> 1) &0x7fffffff; // discard the least-random bit; + return (r >> 1) &0x7ffffffful; // discard the least-random bit; }; ```. 3. Instead of [running plain xxd](https://github.com/soedinglab/MMseqs2/blob/master/cmake/MMseqsResourceCompiler.cmake#L35), we generate header files for resource files with the following pattern:; ```; """"""; #ifndef MMSEQS2_XXD_{1}_H_; #define MMSEQS2_XXD_{1}_H_; #include ""mmseqs2/{0}_data.h"". // Use casters to make values act as properties. This is to prevent static variables causing; // ""initialization order fiasco"".; struct {0}_CharCaster {{; operator const unsigned char*() const {{; return reinterpret_cast<const unsigned char*>({0}_data_create()->data);; }}; operator const char*() const {{; return reinterpret_cast<const char*>({0}_data_create()->data);; }}; operator const void*() const {{; return reinterpret_cast<const void*>({0}_data_create()->data);; }}; }};. struct {0}_LenCaster {{; operator unsigned int() const {{; return static_cast<unsigned int>({0}_data_create()->size);; }}; }};. inline constexpr {0}_CharCaster {0};; inline constexpr {0}_LenCaster {0}_len;; ```. where `{0}` is the filename of the respective file. 4. Changing `\n` to `\0` in [this line](https://github.com/soedinglab/MMseqs2/blob/a5d49655330d144788c6e1bf8551d7cc1d356b0c/src/test/TestTranslate.cpp#L15). We hope this is helpful.; Best wishes",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/661:3909,variab,variables,3909,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661,1,['variab'],['variables']
Modifiability," start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. align /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /scratch/jobs/56067190/14902988131097346952/pref_0 /tmp/56067190/queryT.fa.mmsq.outDB --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 100000 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score and coverage; Query database size: 10000 type: Aminoacid; Target database size: 10000 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 130 0s 27ms ; Time for merging to queryT.fa.mmsq.outDB: 0h 0m 0s 0ms. 1711 alignments calculated.; 1711 sequence pairs passed the thresholds (1.000000 of overall calculated).; 13.161538 hits per query sequence.; Time for processing: 0h 0m 0s 119ms; convertalis /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /tmp/56067190/queryT.fa.mmsq.m8 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Translation table 	1; Gap open cost 	11; Gap extension cost 	1; Database output 	false; Preload mode 	0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:5082,extend,extend,5082,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276,1,['extend'],['extend']
Modifiability,"## Current Behavior; Hello, thanks for developing this very useful tool! I have used mmseqs via conda installation without error on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:307,variab,variable,307,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['variab'],['variable']
Modifiability,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/541:1318,config,configuration,1318,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541,1,['config'],['configuration']
Modifiability,"## Expected Behavior. I'm trying to cluster my large protein sequence file (>45billion entries). I want to know how to set the parameters to cluster as soon as possible, and what kind of computer configuration is needed to run the data. And I also want to know, will the running time still be linear in the case of 30 times the test data set of paper ""Clustering huge protein sequence sets in linear time"". ## Current Behavior; mmseqs linclust $input tmp --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 1000G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/623:196,config,configuration,196,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/623,1,['config'],['configuration']
Modifiability,## Expected Behavior. Using the `--max-seq-length` parameter in `mmseqs linclust` will only return sequences with a length smaller than the setting. ## Current Behavior. Even with the default parameter linclust will return larger sequences (up to 600K nt in my case). Also choosing very large values triggers an integer overflow. ## Steps to Reproduce (for bugs). ```bash; mmseqs linclust foods foods_99 /tmp --cov-mode 0 -c 0.8 --min-seq-id 0.99 --threads 20 --split-memory-limit 250G --max-seq-len 3000000000; ```. ## MMseqs Output (for bugs). ```; ...; Seq. id. threshold 0.99 ; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length -1294967296; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; ...; ```. ## Context. mmseqs version 13.45111. `conda info`:. ```; active environment : metagenomics; active env location : /users/cdiener/miniconda3/envs/metagenomics; shell level : 3; user config file : /users/cdiener/.condarc; populated config files : ; conda version : 4.10.3; conda-build version : not installed; python version : 3.7.8.final.0; virtual packages : __linux=4.15.0=0; __glibc=2.27=0; __unix=0=0; __archspec=1=x86_64; base environment : /users/cdiener/miniconda3 (writable); conda av data dir : /users/cdiener/miniconda3/etc/conda; conda av metadata url : None; channel URLs : https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /users/cdiener/miniconda3/pkgs; /users/cdiener/.conda/pkgs; envs directories : /users/cdiener/miniconda3/envs; /users/cdiener/.conda/envs; platform : linux-64; user-agent : conda/4.10.3 requests/2.26.0 CPython/3.7.8 Linux/4.15.0-121-generic ubuntu/18.04.5 glibc/2.27; UID:GID : 52778:1127; netrc file : None; offline mode : False; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/499:982,config,config,982,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/499,2,['config'],['config']
Modifiability,"## Expected Behavior; Be able to specify the parameters gap open and extend costs; ## Current Behavior; Not able to use the two options. ## Steps to Reproduce (for bugs); I have 2 very simple test files, a.fasta and b.fasta: [a.txt](https://github.com/soedinglab/MMseqs2/files/3166780/a.txt), [b.txt](https://github.com/soedinglab/MMseqs2/files/3166779/b.txt) (here attached as txt). I run this command for each file:; `mmseqs.bat createdb <fastafile> <dbname> --dbtype 2 --max-seq-len 38 `. Then `search` as follows:; `mmseqs.bat search aDB bDB alignDB tmp --search-type 3 -k 3 -s 7.5 -e INF --min-ungapped-score 0 -a --gap-open N --gap-extend M `; (integers in place of N, M). The output is in [searchout.txt](https://github.com/soedinglab/MMseqs2/files/3166806/searchout.txt). I then run `convertalis` to summarize:; `mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln""`. Output: [convout.txt](https://github.com/soedinglab/MMseqs2/files/3166817/convout.txt); Note that in the `convertalis `output, the values for gap open and extension are:; ```; Gap open cost 11; Gap extension cost 1; ```. Is this a bug in the output or is it not taking the settings into account? I have tried many combinations of settings and the reported scores are always to same. ## MMseqs Output (for bugs); Output is included above for each command. ## Context; I am trying to get alignment scores for short DNA sequences. Gaps are important as I am looking for scores which are not heavily influenced by gaps and mismatches in general (little penalty). ## Your Environment; 09 May 2019, Windows version from https://mmseqs.com/latest/; Windows 10.0.17763 Build 17763; No issues running MMseqs2, other than errors such as ; ```; posix_madvise returned an error alignDB; posix_madvise returned an error tmp/3046893737278326904/aln; posix_madvise returned an error tmp/3046893737278326904/search/pref_0; ```; when running `search `and `convertalis`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201:69,extend,extend,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201,2,['extend'],['extend']
Modifiability,"## Expected Behavior; Hello, I am mapping a small database of peptide k-mers 8-15 AA length (8,408 sequences, summary length of 77,356) to a translated genome sequence database (756,891 sequences, summary length of 5,925,854,019). The goal is to find all possible 100% sequence matches regardless of the E-value. ; The peptides are known to occur at least once. Following the discussion at: https://github.com/soedinglab/MMseqs2/issues/373; I have tried the following workflow:. ## Steps to Reproduce; `mmseqs createdb IP.fasta IP_DB/IP_DB`; `mmseqs createdb cryptic_DB.fasta Cryptic_DB/Cryptic_DB`. `mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0`; `mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0`. `mmseqs search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf -s 2 --spaced-kmer-pattern 11011101 --gap-open 16 --gap-extend 2 -k 6 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. This didn't find all the peptides. I have experimented with increasing gap penalties, variying k-mer sizes (5-7), and sensitivity. I have also tried explicitly stating --spaced-kmer-pattern and k-mer length during createindex step. ; The best result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:874,extend,extend,874,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['extend'],['extend']
Modifiability,"## Expected Behavior; I am trying to run mmseqs cluster with the MPI runner option across two nodes (master, slave), but I am unable achieve this effect. I have configured passwordless ssh from master to slave through an ssh-key transfer. SSH can be accomplished through `ssh slave`. Moreover, there is a common NFS mounted to both nodes.; ; ## Steps to Reproduce (for bugs); First, I cd into the NFS directory (`'/mnt'`), then create the DB:. `mmseqs createdb /mnt/QUERY.fasta /mnt/DB`. which runs as expected. Then I run . `RUNNER=""mpirun -np 4 --host master,slave"" mmseqs cluster /mnt/DB /mnt/clu /mnt/tmp`. where /mnt is a NFS that is mounted to both the master and slave nodes. . ## MMseqs Output (for bugs); ```; Program call:; /mnt/DB /mnt/clu /mnt/tmp . MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 20; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0.8; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 2; Verbosity 3; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Single step clustering true; Cascaded clustering steps 3; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:161,config,configured,161,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['config'],['configured']
Modifiability,## Expected Behavior; Need to Install the mmseqs (MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1) this particular version ; ## Current Behavior; but I am seeing there is no bin directory so I cant specify the PATH; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; cd /home/username # Navigate to your home directory; unzip MMseqs2.zip # Extract the MMseqs2 ZIP file; cd MMseqs2 # Go into the MMseqs2 directory after extraction; mkdir build # Create a build directory; cd build; cmake .. # Configure the build with cmake; Setting the PATH; export PATH=$HOME/MMseqs2/build/bin:$PATH. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; I am unable find the bin directory in Build folder.; so it is not seetting PATH & MMseqs is not getting in my Terminal. ## Your Environment; Macbook Pro M3 Pro chip; Using SSH and installing in my Home directory of the Server,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/886:572,Config,Configure,572,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/886,1,['Config'],['Configure']
Modifiability,"## Expected Behavior; Run rbh using computer clusters.; ## Current Behavior; I am running 'mmseqs rbh' within 1000 jobs in parallel using High-performance computing. But there are always some jobs failed due to different error messages(`STDERR`). ## Steps to Reproduce (for bugs); this is my cmd to run rbh:; ```sh; $ mmseqs rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files; ```; so `$db_name` is a variable and for parallel jobs, it's the element of my name list. ; ## MMseqs Output (for bugs); there are several kinds of `STDERR` files:; ```sh; Could not delete /userfolder/rbh/result/tmp/latest!; ```; or; ```sh; Could not write file tmp/rbh.sh!; ```; and ; ```sh; Failed to execute tmp/rbh.sh with error 26.; ```; Even though the `STDERR` files are different, all `STDOUT` are quite similar: it seems that they all collapse in the middle of the process. The corresponding output is ; ```sh; rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files. MMseqs Version: f05f8c51d6e9c7c0b15fbd533e4b678303f50b3e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; E-value threshold 0.001; Seq. id. threshold 0; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 28; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Lo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/239:441,variab,variable,441,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/239,1,['variab'],['variable']
Modifiability,"## Expected Behavior; Set RAM to 1.4T as specified by `--split-memory-limit 1400G`; ## Current Behavior; MMseqs set the limit to only 1T RAM; ## Steps to Reproduce (for bugs); I set `--split-memory-limit` to 1400G using the following command; ```; mmseqs easy-linclust {uniprot_sprot,uniprot_trembl,metaclust_nr,MERC,SRC}.fasta \; linclust_results/universedb-100 \; tmp/universedb-100 \; -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 1 \; --split-memory-limit 1400G; ```. ## MMseqs Output (for bugs); In the parameter header printed by MMseqs at the begging, the `Split memory limit` shown as 1T.; ```; MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 1; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 1T # <================ Shown here; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/328:1650,extend,extendable,1650,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/328,1,['extend'],['extendable']
Modifiability,"## Expected Behavior; The search function should complete for any combination of amino acid gap open and gap extension parameters. ## Current Behavior; The search function fails for amino acid gap open penalties below 8 and/or a gap extension penalty of 0. ; It gives an error:; ```; terminate called after throwing an instance of 'Sls::error'; Aborted Error: ; Alignment died.; ```. It fails in the ""align"" step. ## Steps to Reproduce (for bugs). `mmseqs search {dataset} {dataset} {dataset_output} tmp --gap-open nucl:5,aa:2 --gap-extend nucl:5,aa:0`. Using the following dataset of 74 amino acid sequences:; CAAAPAVMTAGWFDPW; CAKDGSGSYYGWFDPW; CAREGEVEGYNDFWSGYSRDRYYFDYW; CATSFPIRGDPSYYYYYYGMDVW; CARDPRVVVTARMYNWFDPW; CARRSTSRWGYYYMDVW; CARRSYRSSWYYYYGMDVW; CARDPGSRYSGGWYDYYYAMDVW; CARDLERAGGMDVW; CARDWAPTYYDMPSAFDIW; CAHRRGILTEDAFDIW; CAREAYGMDVW; CAREARSRYFDWLPSYYFDYW; CAQGRGGYYSPFDDW; CARDLVWATVSGTMDVW; CARDQEWFRELFLFDYW; CAREGQGTYLDYW; CAKDTGYCGDDCYIKLIRGGPDYW; CARVNGNSNWNFGSYYYYYMDVW; CARRGEAAGIWYFDLW; CARPPRNYYDRSGYYQRAEYFQHW; CARWLQLRSDYYYFGMDVW; CARDGGNAYSSGWYRYYYHMDVW; CARVEWAAAGTFYW; CARAPRERLQWGEYYFDYW; CARRTYYDLWSAYSSTAYYCMDVW; CARGVEDPVVPAAIPWCWFDPW; CARPPQAARIHYYYYMDVW; CARGLISLFRGAIFHYYYGMDVW; CARDYTRGAWFGESLIGGFDNW; CAKNERITMLVVVTLFDYW; CARDRSNLERLVMTFGGIIAGAFDIW; CARHDGSGEMDTITWGPIYYYMDVW; CAIYGYYYYGLDVW; CARTTWGTWIQAWYFDIW; CARLTFGGSGSYYFYYNGMDVW; CAKLLGSGITLDNDAFDIW; CARSPPASYYNPSTGYFDYW; CARRGNYYDSKNWFDPW; CAHRAVILNFDHW; CARDPYDLYGDYGGTFDYW; CAKEGGSGSLRYYYYGMDVW; CAREDYYGSGSLVDPYYYYRMDVW; CATSTAVAGTPDLFDYYYGMDVW; CARGWGWGAVAGRAEYYFDYW; CARDWDYDILTGSWFGAFDIW; CARDQRQFQLLGRFGWFDPW; CARELFTAVAGKGGIDYW; CARGWYFDYW; CARSSSRGFDYW; CARIVLGASGTYPSPGFDPW; CARIPGWDRGTDRNWNDDW; CAKDSRSGIAGVDAFDIW; CARTYSFDSSGYYYDYW; CARDQDSGYPTYYYYYMDVW; CARAFYDSNWSVGSYFDSW; CARDSGGNYGDSYFDYW; CAKDVRYCSSTSCYFSAFDIW; CARDLAGVPAALGCWFDPW; CARGGGSYYYWFDPW; CVRDLALFEVVIQQGVW; CARVQRYYPDSSGFYGRRFDIW; CAHNRFQYCSSTTCYTLLPFDYW; CARSGGGSYRGPFDYW; CARRRSSSRYSSGWYMYYYYMDVW; CAKEGRPSDIVVVVAF",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:533,extend,extend,533,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,1,['extend'],['extend']
Modifiability,"## Suggestion of a feature. It would be extremely useful if mmseqs have native python bindings. Results from the search could be returned as pandas Dataframe (which is standard python tabular format). It would simplify the usage of mmseqs2 as a building block for bioinformatics aplications.; Such bindings could be implemented using pybind (https://github.com/pybind/pybind11). Currently we are interested in this feature as a [whole organisation](https://github.com/covid-genomics), however we don't have enough resources to create and maintain bindings by ourselves.; With little to no change mmseqs2 could be also used as a Python framework for biological sequences manipulation (similar to [Biopython](https://biopython.org/) of [Biotite](https://www.biotite-python.org/index.html), but faster and dedicated for large volumes of sequences). ## PoC. We created a very rough [PoC with bypind11](https://github.com/covid-genomics/biosnake) to examine how easy it is to create api wrappers.; The bindings are far from being production-ready and the project was just used as a proof that this is possible. ## Possible collaboration. We want to know if you are interested in helping us develop and maintain the bindings. If yes, then we would like to see tight future collaboration to make mmseqs2 more accessible. Bindings would make it easier to use in standard data science pipelines and much more flexible. [Covid Genomics](http://covidgenomics.com/) contact email: [contact@covidgenomics.com](mailto:contact@covidgenomics.com)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/450:1400,flexible,flexible,1400,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450,1,['flexible'],['flexible']
Modifiability,"### Summary. > This pull request introduces an algorithm that reduces the total number of clusters while maintaining linearity. The algorithm captures meaningful information from previously unadopted data in the 'assignGroup' function, allowing for more effective clustering. ### Details. **1 Extended Search Process :**. > For the same k-mer group, the process of combining the representative sequence with each sequence has been extended. The algorithm now calculates sequence dissimilarity using adjacent sequence information. The most dissimilar sequence is selected as the next representative sequence, and this exploration process is repeated. If there are multiple sequences with the same level of dissimilarity, the most recently explored sequence is chosen as the representative sequence. Additionally, the selection of the most dissimilar sequence is limited to sequences that follow the current representative sequence in the search order. **2. Data Structure Challenges**. > The implementation of this method introduced challenges in maintaining the original in-place data structure. To overcome these challenges, a new data structure has been introduced with an additional buffer (slack space) at the end. The new data structure includes a default buffer size of 5%. . **3. Dynamic Memory Allocation**. > If memory becomes insufficient during operation, the structure dynamically resizes by splitting and reallocating memory based on the progress of the previous process. This approach ensures efficient memory usage and prevents potential memory shortages. ### Benchmark Results. > I conducted benchmarking on datasets randomly selected from the UniParc dataset, with sizes of 1.3M, 2.7M, 5.3M, 11M, 21M, 42M, and 85M. The results confirmed that the new algorithm effectively reduces the number of clusters while maintaining linearity, showing no significant time difference compared to the existing Linclust method. Despite these improvements, the algorithm still lags behind the easy-c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/873:293,Extend,Extended,293,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873,2,"['Extend', 'extend']","['Extended', 'extended']"
Modifiability,"#6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 27 (Thread 0x7f6e757fd640 (LWP 135847) ""mmseqs""):; #0 0x00005f84645c3fe9 in PSSMCalculator::computeContextSpecificWeights(float*, float*, float*, unsigned long, unsigned long, char const**) (); #1 0x00005f84645c510c in PSSMCalculator::computePSSMFromMSA(unsigned long, unsigned long, char const**, bool) (); #2 0x00005f846452d03c in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #3 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #4 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #5 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 26 (Thread 0x7f6e75ffe640 (LWP 135846) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 25 (Thread 0x7f6e7cffc640 (LWP 135845) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:35442,config,config,35442,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,(step 1 of 1); Query db start 1 to 40624; Target db start 1 to 22555708; ....; 2740 k-mers per position.; 1152092 DB matches per sequence.; 0 Overflows.; 199 sequences passed prefiltering per query sequence.; Median result list size: 200; 1 sequences with 0 size result lists. Time for prefiltering scores calculation: 0h 3m 25s 795ms; Time for merging files: 0h 0m 0s 53ms; Time for processing: 0h 9m 40s 316ms; Program call:; align clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/tmp_hsp1/12507882511714639255/pref_0 tmp_part-14/8093924424180559474/first --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3. Init data structures...; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus ... Done.; Compute score and coverage.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; ....Time for merging files: 0h 0m 0s 44ms. All sequences processed. 8113542 alignments calculated.; 2760008 sequence pairs passed the thresholds (0.340173 of overall calculated).; 67.9403 hits per query sequence.; Time for processing: 0h 0m 25s 268ms; Program call:; filterdb tmp_part-14/8093924424180559474/first tmp_part-14/8093924424180559474/top1 --extract-lines 1. Filtering by extracting the first 1 lines.; ....Time for merging files: 0h 0m 0s 198ms; Time for processing: 0h 0m 1s 251ms; Program call:; extractalignedregion clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:13841,extend,extend,13841,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,1,['extend'],['extend']
Modifiability,"(step 1 of 1); Query db start 1 to 7780; Target db start 1 to 756891; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 10ms; Time for processing: 0h 0m 28s 690ms; align tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 tmp/16138406286044646862/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 7780 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 7.78K 0s 362ms ; Time for merging to aln_2: 0h 0m 0s 3ms. 30 alignments calculated.; 30 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.003856 hits per query sequence.; Time for processing: 0h 0m 3s 496ms; mergedbs IP_DB/IP_DB result_DB/result_DB tmp/16138406286044646862/aln_merge tmp/16138406286044646862/aln_2 --compressed 0 -v 3 . Merging the results to result_DB/result_DB; Time for merging to result_DB: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 11ms. ## Your Environment; MMseqs2 Version: 12.113e3; Installed from bioconda. Hardware:; Intel® Xeon(R) W-2175 CPU @ 2.50GHz × 28 CPU; 62.5 GiB RAM. System:; Release 18.04.5 LTS (Bionic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:12022,extend,extend,12022,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['extend'],['extend']
Modifiability,"(truncated result); 88 sequences passed prefiltering per query sequence; 76 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 36ms; Time for processing: 0h 0m 32s 520ms; align ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/pref_step2 ./mmseqs_output/tmp/5351426679731834765/aln_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 8338 type: Aminoacid; Target database size: 8338 type: Aminoacid; Calculation of alignments; [=================================================================] 8.34K 17s 958ms; Time for merging to aln_step2: 0h 0m 0s 88ms; 489475 alignments calculated; 8622 sequence pairs passed the thresholds (0.017615 of overall calculated); 1.034061 hits per query sequence; Time for processing: 0h 0m 18s 545ms; clust ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/aln_step2 ./mmseqs_output/tmp/5351426679731834765/clu_step2 --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Connected Component; [=================================================================] 8.34K 0s 2ms; Sort entries; Find missing connections; Found 28 new connections.; Reconstruct init",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:31056,extend,extend,31056,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extend']
Modifiability,"); 8 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 51ms; Time for processing: 0h 0m 6s 669ms; align ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/pref_step0 ./mmseqs_output/tmp/5351426679731834765/aln_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 20942 type: Aminoacid; Target database size: 20942 type: Aminoacid; Calculation of alignments; [=================================================================] 20.94K 15s 380ms; Time for merging to aln_step0: 0h 0m 0s 75ms; 172065 alignments calculated; 67554 sequence pairs passed the thresholds (0.392607 of overall calculated); 3.225766 hits per query sequence; Time for processing: 0h 0m 16s 166ms; clust ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/aln_step0 ./mmseqs_output/tmp/5351426679731834765/clu_step0 --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Connected Component; [=================================================================] 20.94K 0s 211ms; Sort entries; Find missing connections; Found 98 new connections.;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:21849,extend,extend,21849,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extend']
Modifiability,* Modified workflow source codes to assign `latest` symbolic link to variable `$LATEST`; * Modified workflow shell scripts to remove hash-named temporary directory ~and symbolic link~ (concurrent modification issue),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/551:69,variab,variable,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/551,1,['variab'],['variable']
Modifiability,", the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 1c7ad90e2a9a249cbe4858b5002dc052b3333475; * Which MMseqs version was used: AVX2 static; * Server specifications: 32GB RAM; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:1514,extend,extendable,1514,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['extend'],['extendable']
Modifiability,"- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.1 extensions, using flags: -march=native -msse4.1 -mfpmath=sse; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /galaxy/home/ksahlin/prefix/source/MMseqs2/build; [ksahlin@desmond build]$ make; Scanning dependencies of target cacode; make[2]: Warning: File 'lib/cacode/CMakeFiles/cacode.dir/depend.make' has modification time 0.00048 s in the future; [ 0%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; make[2]: warning: Clock skew detected. Your build may be incomplete.; [ 1%] Built target cacode; Scanning dependencies of target alp; [ 1%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 1%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 2%] Building CX",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:2361,Config,Configuring,2361,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,1,['Config'],['Configuring']
Modifiability,"- adds module taxonomyreport for Kraken-style taxonomy report; - add parameter --taxLineage to par.lca for lca, taxonomy and addtaxonomy. Currently this means there is a variable number of fields in the output, which isn't optimal; - refactored NcbiTaxonomy:; - does not load delnodes.dmp anymore. When a taxon that was seen in a report is not in the taxDB, it could be either through ; - get rid of two maps; instead D is vector mapping TaxID to internal ID; - use TaxID type to better distinguish interal IDs and taxIDs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/197:170,variab,variable,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/197,2,"['refactor', 'variab']","['refactored', 'variable']"
Modifiability,"----------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:4101,extend,extendable,4101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['extend'],['extendable']
Modifiability,"--alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescore-mode 0 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	10; Verbosity 	3. Database type: Aminoacid; V ->",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:3257,extend,extendable,3257,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['extend'],['extendable']
Modifiability,"--filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_rescore2: 0h 0m 0s 19ms=================>] 99.48% 24.47K eta 0s ; Time for processing: 0h 0m 0s 59ms; align experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_rescore2 experiments/tmp//6404161245249296443/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 12 --compressed 0 -v 3 . Compute score and coverage; Query database size: 24598 type: Aminoacid; Target database size: 24598 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 24.60K 0s 159ms ; Time for merging to aln: 0h 0m 0s 22ms. 25322 alignments calculated.; 24830 sequence pairs passed the thresholds (0.980570 of overall calculated).; 1.009432 hits per query sequence.; Time for processing: 0h 0m 0s 211ms; clust experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/aln experiments/tmp//6404161245249296443/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 24.60K 0s 10ms ; Sort entries; Find missing connections; Found 232 new connections.; Reconstruct initial order; [=========================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:9392,extend,extend,9392,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['extend'],['extend']
Modifiability,"--no-preload 0 --pca 1 --pcb 1.5 --score-bias 0 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:5892,extend,extendable,5892,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['extend'],['extendable']
Modifiability,"--pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.; 000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 -; -ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 76215872 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 76.22M 6m 32s 415ms; Sort kmer 0h 0m 14s 675ms; Sort by rep. sequence 0h 0m 0s 974ms; Time for fill: 0h 0m 13s 496ms; Time for merg",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:4828,extend,extendable,4828,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['extend'],['extendable']
Modifiability,"--tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 15.29M 1s 717ms; Time for merging to pref_count.tsv: 0h 0m 4s 684ms; Time for processing: 0h 0m 14s 46ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 15288254 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.29M 2h 10m 35s 557ms; Time for merging to aln: 0h 0m 13s 903ms; 12490036390 alignments calculated; 12287580750 sequence pairs passed the thresholds (0.983791 of overall calculated); 803.726868 hits per query sequence; Time for processing: 2h 10m 56s 695ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref -v 3 . Time for processing: 0h 0m 8s 279ms; swapresults /tmp/tmp_MMSeq2/17595625152138277869/search_tmp/17414849138893322762/target_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln /tmp/tmp_MMSeq2//17595625152138277869/sear",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:15178,extend,extend,15178,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['extend'],['extend']
Modifiability,"-compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 52ms; align tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore2 tmpfiles//13298481167543164943/linclust/10229649346622198404/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 276 0s 26ms; Time for merging to aln: 0h 0m 0s 1ms. 276 alignments calculated.; 276 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 82ms; clust tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/aln tmpfiles//13298481167543164943/linclust/10229649346622198404/clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================] 276 0s 0ms; Sort entries; Find missing connections; Found 0 new connec",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:8547,extend,extend,8547,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['extend'],['extend']
Modifiability,"-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/1646423069375616632",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:2905,extend,extend,2905,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['extend'],['extend']
Modifiability,"-db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 7ms; Time for merging to pref_rescore2: 0h 0m 0s 1ms ] 49.67% 77 eta 0s; Time for processing: 0h 0m 0s 37ms; align clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 42ms; Time for merging to aln: 0h 0m 0s 4ms; 154 alignments calculated; 154 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 74ms; clust clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 154 0s 12ms; Sort entries; Find missing connections; F",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:9504,extend,extend,9504,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extend']
Modifiability,"-ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 182ms; rescorediagonal DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:3777,extend,extendable,3777,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['extend'],['extendable']
Modifiability,"-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:3889,extend,extendable,3889,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['extend'],['extendable']
Modifiability,"-mode 0; We recompute with --createdb-mode 1; Time for merging to input_h: 0h 0m 0s 3ms; Time for merging to input: 0h 0m 0s 3ms; [=======; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 2ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 102ms; Create directory tmp/8115150149931881526/clu_tmp; linclust tmp/8115150149931881526/input tmp/8115150149931881526/clu tmp/8115150149931881526/clu_tmp -e 0.001 --min-seq-id 0.4 -c 0.8 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1 . Set cluster mode GREEDY MEM.; kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 77298 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 77.30K 0s 41ms; Sort kmer 0h 0m 0s 46ms; Sort by rep. sequence 0h 0m 0s 22ms; Time for fill: 0h 0m 0s 11ms; Time for merging to pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:3252,extend,extendable,3252,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['extend'],['extendable']
Modifiability,"-remove-tmp-files 1. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when y",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:4782,extend,extend,4782,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['extend'],['extend']
Modifiability,"-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_1 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:4054,extend,extend,4054,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['extend'],['extend']
Modifiability,"-threads 8 /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/ccs/ENSEMBL/1000000/ccs.fasta /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_out /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 8; Verbosity 3; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Alphabet size 21; Kmer per sequence 21; Mask Residues 1; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner. Program call:; /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/ccs/ENSEMBL/1000000/ccs.fasta /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input --max-seq-len 65535 --dont-split-seq-by-len --dont-shuffle --id-offset 0 -v 3. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Max. sequence length 65535; Split Seq. by len false; Do not shuffle input database false; Offset of numeric ids 0; Verbosity 3. ...................................................................................................Time for merging files: 0h 0m 1s 611ms; Time for merging files: 0h 0m 1s 458ms; Time for processing: 0h 1m 30s ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120:1373,extend,extendable,1373,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120,1,['extend'],['extendable']
Modifiability,". Time for merging results: 0h 0m 1s 496ms; Time for processing: 7h 38m 5s 42ms; Program call:; subtractdbs tmpC/10139724895635470572/pref_1 tmpC/10139724895635470572/aln_0 tmpC/10139724895635470572/pref_next_1 --threads 48 --e-profile 0.1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Threads 	48; Profile e-value threshold	0.1; Verbosity 	3. Remove tmpC/10139724895635470572/aln_0 ids from tmpC/10139724895635470572/pref_1; Output databse: tmpC/10139724895635470572/pref_next_1; Time for merging files: 0h 0m 0s 250ms; Time for processing: 0h 0m 0s 861ms; Program call:; align tmpC/10139724895635470572/profile_0 genes.db tmpC/10139724895635470572/pref_1 tmpC/10139724895635470572/aln_1 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --max-seqs 1000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 1 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.1; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	1000; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id.	false; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3. Init data structures...; Compute score, coverage and sequence id.; Using 1 threads.; Query database type: Profile; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; Time for merging files: 0h 0m 0s 8ms. All sequences processed. 952 alignments calculated.; 258 sequence pairs passed the thresholds (0.271008 of overall calculated).; 258 hits per query sequence.; Time for processing: ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:85972,extend,extend,85972,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['extend'],['extend']
Modifiability,".5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	36; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; .............; Time for fill: 0 h 0 m 2s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 3s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 2s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 9s; Rescore diagonals.; Program call:; panproteome.db panproteome.db /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mod",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:23628,extend,extendable,23628,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['extend'],['extendable']
Modifiability,".h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 28 (Thread 0x7f6e74ffc640 (LWP 135848) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 27 (Thread 0x7f6e757fd640 (LWP 135847) ""mmseqs""):; #0 0x00005f84645c3fe9 in PSSMCalculator::computeContextSpecificWeights(float*, float*, float*, unsigned long, unsigned long, char const**) (); #1 0x00005f84645c510c in PSSMCalculator::computePSSMFromMSA(unsigned long, unsigned long, char const**, bool) (); #2 0x00005f846452d03c in result2profile(int, char const**, Command const&, bool)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:34016,config,config,34016,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:4975,extend,extendable,4975,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['extend'],['extendable']
Modifiability,"/Temp/CLUSTER_REASSIGN; 57135 0 I+ 0:00.01 /bin/sh -e /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/CLUSTER_REASSIGN; 57200 0 S+ 0:00.62 /usr/local/bin/mmseqs swapdb /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Tem; ```. lldb:; ```; (lldb) process attach --pid 57200; Process 57200 stopped. Executable module set to ""/usr/local/bin/mmseqs"".; Architecture set to: x86_64--freebsd13.0.; (lldb) bt; * thread #1, name = 'mmseqs'; * frame #0: 0x0000000800bea528 libc.so.7`__sys__umtx_op + 8; frame #1: 0x0000000000803044 mmseqs`__atomic_fetch_sub_16 [inlined] lock(l=0x000000000080c2e0) at atomic.c:72:5; frame #2: 0x000000000080301e mmseqs`__atomic_fetch_sub_16(ptr=0x00000008013723b0, val=1180591620717411303424, model=<unavailable>) at atomic.c:342; frame #3: 0x0000000000449273 mmseqs`std::__1::pair<long, long> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00000008013723b0)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::BucketPointers::decRead<true>() at bucket_pointers.hpp:106:28; frame #4: 0x0000000000449482 mmseqs`int ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:13",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:1229,Extend,ExtendedConfig,1229,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758,2,"['Config', 'Extend']","['Config', 'ExtendedConfig']"
Modifiability,"/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/team.c:124; #5 0x00002aefd1060dc5 in start_thread (arg=0x2aefd1c45700) at pthread_create.c:308; #6 0x00002aefd136bced in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:113; ```. ### Last files to be created in temp directory:; ```; ls -lh /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/810",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:35656,config,config,35656,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['config'],['config']
Modifiability,"/sysv/linux/x86_64/clone3.S:81. Thread 10 (Thread 0x7f6ed8df0640 (LWP 135830) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 9 (Thread 0x7f6ed95f1640 (LWP 135829) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 8 (Thread 0x7f6e92249640 (LWP 135828) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_tea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:49738,config,config,49738,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"/uptime: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/usleep: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uudecode: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uuencode: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/vi: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/volname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/watch: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/wc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/wget: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/which: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/whoami: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/whois: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xargs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xz: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/yes: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/zcat: Permission denied; ```. In addition ""mmseqs.bat search ..."" crashes with an error:. `Failed to execute tmp/14080462685954546121/translated_search.sh with error 2.`. Hence, I don't receive any results from mmseqs on the windows platform. ## Context; The environment variable path includes the main path and the directory ""bin/"":. ```; echo %PATH%; ...;c:\Program Files (x86)\mmseqs\;c:\Program Files (x86)\mmseqs\bin\;...; ```. Using ""mmseqs.exe"" from the directory ""bin/"" does not show the warnings, but leads to the same error. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; * Statically-compiled; * Operating system and version: Microsoft Windows [Version 10.0.14393]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:16060,variab,variable,16060,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['variab'],['variable']
Modifiability,"/usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>); at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578); at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```. This is the for clu90 machine running 15.6f452; ```; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0); at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0); at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]; (); #5 0x00007f706904f583 in GOMP_parallel (; fn=0x5f846452bc00 <result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]>,; data=0x7ffd18983490, num_threads=32, flags=0) at ../../../libgomp/parallel.c:178; #6 0x00005f8464531107 in result2profile(int, char const**, Command const&, bool) (); #7 0x00005f846423f8ba in runCommand(Command*, int, char const**) (); #8 0x00005f846422928f in main (); ```. I mixed up the timestamps, and it's the clu90 one that's been running since the 16th, and the clu70 has been running since the 20th.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988:1407,config,config,1407,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988,6,['config'],['config']
Modifiability,"0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/temp_linclust/352147678829955415/linclust/9188580091420820903/linclust.sh: line 26: 24508 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}. Do you know what is wrong? Thank you very much. Best,; Sam",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/238:1353,extend,extendab,1353,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238,1,['extend'],['extendab']
Modifiability,"0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescore-mode 0 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	36; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	36; Verbosity 	3. Database type: Aminoacid; V -> I",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:22763,extend,extendable,22763,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['extend'],['extendable']
Modifiability,"0 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1831648 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 1.83M 2m 36s 559ms. Adjusted k-mer length 17; Sort kmer 0h 0m 33s 753ms; Sort by rep. sequence 0h 0m 2s 503ms; Time for fill: 0h 0m 4s 992ms; Time for merging to pref: 0h 0m 0s 10ms; Time for processing: 0h 4m 21s 927ms; rescorediago",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:4067,extend,extendable,4067,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['extend'],['extendable']
Modifiability,"0.00% 4.00K 0s 74ms ; [================================================================>] 99.72% 3.99K eta 0s ; 0.926667 k-mers per position; 434 DB matches per sequence; 0 overflows; 4 sequences passed prefiltering per query sequence; 1 median result list length; 1762 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 5ms; Time for processing: 0h 0m 40s 369ms; align tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 tmp/7935334228278574252/search/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 2 --max-seq-len 10000 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Compute score only; Query database size: 4000 type: Nucleotide; Target database size: 365688 type: Nucleotide; Calculation of alignments; Query sequence 236 has a result with no diagonal information. Please check your database.; Error: Alignment died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used:`df77d9e6cf640fe8990f247441ab44d4f4ad9cdc`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):**_Statically-compiled_**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; _**CPU12 vCPU Intel(R) Xeon(R) Platinum 8255C CPU @ 2.50GHz; memory 43G**_; * Operating system and version:**`Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-121-generic x86_64)`**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:7165,extend,extend,7165,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,1,['extend'],['extend']
Modifiability,"00,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Database size: 51992 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 51.99K 0s 346ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 62ms; Sort by rep. sequence 0h 0m 0s 19ms; Time for fill: 0h 0m 0s 27ms; Time for merging to pref: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 567ms; rescorediagonal shrimpDB shrimpDB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:4626,extend,extendable,4626,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['extend'],['extendable']
Modifiability,"000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:5753,extend,extendable,5753,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['extend'],['extendable']
Modifiability,"005a1f2e mmseqs`swapdb(argc=8, argv=0x00007fffffffd2c8, command=0x0000000801269b00) at swapresults.cpp:353:12; frame #23: 0x000000000038a19f mmseqs`runCommand(p=0x0000000801269b00, argc=8, argv=0x00007fffffffd2c8) at Application.cpp:38:18; frame #24: 0x000000000038b416 mmseqs`main(argc=10, argv=0x00007fffffffd2b8) at Application.cpp:196:9; frame #25: 0x0000000000389280 mmseqs`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7; (lldb) ; * thread #1, name = 'mmseqs'; * frame #0: 0x0000000800bea528 libc.so.7`__sys__umtx_op + 8; frame #1: 0x0000000000803044 mmseqs`__atomic_fetch_sub_16 [inlined] lock(l=0x000000000080c2e0) at atomic.c:72:5; frame #2: 0x000000000080301e mmseqs`__atomic_fetch_sub_16(ptr=0x00000008013723b0, val=1180591620717411303424, model=<unavailable>) at atomic.c:342; frame #3: 0x0000000000449273 mmseqs`std::__1::pair<long, long> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00000008013723b0)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::BucketPointers::decRead<true>() at bucket_pointers.hpp:106:28; frame #4: 0x0000000000449482 mmseqs`int ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:13",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:9059,Extend,ExtendedConfig,9059,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758,2,"['Config', 'Extend']","['Config', 'ExtendedConfig']"
Modifiability,"00; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 40; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.4; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterlinclust ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/clu_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:9157,extend,extendable,9157,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extendable']
Modifiability,"0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --sp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:3267,extend,extendable,3267,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['extend'],['extendable']
Modifiability,"0; Spaced k-mer pattern ; Local temporary path ; Threads 64; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name ; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 1; linclust uniref90-DB-wwmj tmp//16518381706844811497/clu_redundancy tmp//16518381706844811497/linclust --cluster-mode 3 --max-iterations 1000 --similarity; -type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignme; nt-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp; -bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,co; ntext:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:3062,extend,extendable,3062,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['extend'],['extendable']
Modifiability,"0m 0s 27ms; prefilter tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 1 -v 3 . Query database size: 0 type: Aminoacid; Estimated memory consumption: 557M; Target database size: 19482 type: Profile; Index table k-mer threshold: 90 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 100.00% 19.48K 4s 492ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 19.48K 11s 88ms ; Index statistics; Entries: 454766207; DB size: 2633 MB; Avg k-mer size: 111.350382; Top 10 k-mers; RRRRR 1414; QQQQQ 1135; RRRRQ 985; SPPPP 965; QRRRR 962; PPPPS 953; RQRRR 940; RRRQR 927; RHRRR 914; RKRRR 902; Time for index table init: 0h 0m 16s 838ms; Time for processing: 0h 0m 17s 228ms; swapresults tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref_swapped --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 12 --compressed 1 --db-load-mode 0 -v 3 . Input tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref does not exist; Error: Swapresults pref died; Error: Search step died; Error: Search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:5654,extend,extend,5654,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947,1,['extend'],['extend']
Modifiability,"1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	214748",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:2613,extend,extendable,2613,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,1,['extend'],['extendable']
Modifiability,"147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 10 --compressed 0 -v 3 . Init data structures...; Touch data file pbps.neighbors.DB ... Done.; Use index pfam_profile.idx; Index version: 15; Generated by: 8-fac81; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqType: Profile; Headers1: 1; Headers2: 0; ScoreMatrix: VTML80.out; Compute score and coverage.; Query database type: Profile; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; .Time for merging files: 0h 0m 0s 23ms. All sequences processed. 390452377 alignments calculated.; 1899900 sequence pairs passed the thresholds (0.00486589 of overall calculated).; 106.904 hits per query sequence.; Time for processing: 0h 32m 50s 752ms; Program call:; swapresults pfam_profile.idx pbps.neighbors.DB tmp/6822607060114486044/aln_swapped result --sub-mat blosum62.out -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 10 --compressed 0 --db-load-mode 0 -v 3 . Query database: pfam_profile.idx; Use index pfam_profile.idx; Index version: 15; Generated by: 8-fac81; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqType: Profile; Headers1: 1; Headers2: 0; ScoreMatrix: VTML80.out; Target database: pbps.neighbors.DB; Result database: tmp/6822607060114486044/aln_swapped; Computing offsets.; .; Reading results.; .; Output database: result; ................................................................................................... 1 Mio. sequences processed; ....................................; Time for merging files: 0h 0m 0s 545ms; Time for processing: 0h 0m 1s 451ms; ```. It ran really fast but even with k-mar 6, I don't know about the sensitivity if it is equivalent. . The ScoreMatrix reported is VTML80.out, this should be the Blosum62?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:6479,extend,extend,6479,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,1,['extend'],['extend']
Modifiability,"16m 22s 538ms; lcaalign /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Input /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 does not exist; Error: Alignment died; Error: First search died; Error: taxonomy died; Error: Search died; ```. Many thanks; Antonio. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 5daca424b162cc5fdf0b9cd151aebed86975cbf6; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GCC 7.5.0 cmake 3.10.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2/SSE supported, 256G ; * Operating sy",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/433:2089,extend,extend,2089,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433,1,['extend'],['extend']
Modifiability,"1789027801475/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 278.90K 0s 59ms; Time for merging to pref_count.tsv: 0h 0m 0s 61ms; Time for processing: 0h 0m 0s 594ms; align /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 278905 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 278.90K 3m 30s 81ms; Time for merging to aln: 0h 0m 0s 79ms. 356498221 alignments calculated.; 350372623 sequence pairs passed the thresholds (0.982817 of overall calculated).; 1256.243652 hits per query sequence.; Time for processing: 0h 3m 35s 108ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 0s 344ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/1025387178902",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:5986,extend,extend,5986,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['extend'],['extend']
Modifiability,"1878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extend",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:3500,extend,extendable,3500,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['extend'],['extendable']
Modifiability,"18; Target db start 1 to 218; [=================================================================] 218 0s 55ms. 193.314206 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 763ms; align tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/pref_step2 tmpfiles//13298481167543164943/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 218 type: Aminoacid; Target database size: 218 type: Aminoacid; Calculation of alignments; [=================================================================] 218 0s 82ms; Time for merging to aln_step2: 0h 0m 0s 2ms. 358 alignments calculated.; 247 sequence pairs passed the thresholds (0.689944 of overall calculated).; 1.133028 hits per query sequence.; Time for processing: 0h 0m 0s 123ms; clust tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/aln_step2 tmpfiles//13298481167543164943/clu_step2 --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================] 218 0s 9ms; Sort entries; Find missing connections; Found 7 new connections.; Reconstruct initial order; [===============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:21566,extend,extend,21566,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['extend'],['extend']
Modifiability,"193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) &) at thread_pool.hpp:95:13; frame #12: 0x00000000003edd75 mmseqs`::.omp_outlined..122(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) at thread_pool.hpp:95:13; frame #13: 0x0000000800984653 libomp.so`__kmp_invoke_microtask + 147; frame #14: 0x0000000800963c82 libomp.so`___lldb_unnamed_symbol362$$libomp.so + 370; frame #15: 0x000000080095f4af libomp.so`__kmp_fork_call + 7423; frame #16: 0x0000000800965c96 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, func=0x00007fffffffba98, num_threads=32)<ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)>(ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:3878,Extend,ExtendedConfig,3878,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769,8,"['Config', 'Extend']","['Config', 'ExtendedConfig']"
Modifiability,19988216; [=================================================================] 100.00% 40.62K 15m 11s 627ms. 2741.257489 k-mers per position; 7347947 DB matches per sequence; 0 overflows; 199 sequences passed prefiltering per query sequence; 200 median result list length; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0h 15m 16s 157ms; Time for merging files: 0h 0m 0s 63ms; Time for processing: 0h 53m 6s 0ms; align clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/tmp_hsp1/2842639954524457022/pref_0 tmp_part-14/17957680840564044329/first --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3. Compute score and coverage; Query database size: 40624 type: Aminoacid; Target database size: 119988216 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 40.62K 1m 1s 328ms; Time for merging files: 0h 0m 0s 46ms. 8122882 alignments calculated.; 4578438 sequence pairs passed the thresholds (0.563647 of overall calculated).; 112.702789 hits per query sequence.; Time for processing: 0h 1m 18s 442ms; filterdb tmp_part-14/17957680840564044329/first tmp_part-14/17957680840564044329/top1 --extract-lines 1. Filtering by extracting the first 1 lines.; [=================================================================] 100.00% 40.62K 0s 978ms; Time for merging files: 0h 0m 0s 210ms; Time for processing: 0h 0m 1s 489ms; extractalignedregion clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/top,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:6840,extend,extend,6840,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,1,['extend'],['extend']
Modifiability,"1aa1153fe; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 32000; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 32; Verbosity 3; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 98202; Max orf gaps 2147483647; Skip incomplete orfs false; Find longest orf true; Extend short orfs false; Forward Frames 1,2,3; Reverse Frames 1,2,3; Offset of numeric ids 0; Translation Table 1; Number search iterations 1; Start sensitivity 4; Search steps 1; Sets the MPI runner; Remove Temporary Files false. Tmp tmp folder does not exist or is not a directory.; Created dir tmp; Program call:; /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/QUERY /home/banaeiak/thesis/L aing/MMseqs2ResultsCelegans/DB /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegan s/tmp/5905259317257326532/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483 647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 -- min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 32 -v 3 - s 5.7. MMseqs Version: 2c5dcabb805a4bd6d2db64095782a211aa1153fe; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. resu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/55:2670,Extend,Extend,2670,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/55,1,['Extend'],['Extend']
Modifiability,"20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_1. align result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_0 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. rmdb result_20230419_115721/tmp/16464230693756166324/aln_0; rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. result2profile result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:4830,extend,extend,4830,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['extend'],['extend']
Modifiability,"20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_2. align result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_2 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_1 result_20230419_115721/res result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. expandaln result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/res /home/user/project/target_DB/target_DB.idx result_20230419_115721/res_exp --db-load-mode 2 --threads 96 --expansion-mode 0 -e 1.7976931348623157e+308 --expand-filter-clusters 1 --max-seq-id 0.95. Invalid database read for database data file=/home/user/project/target_DB/target_DB.idx, database index=/home/user/project/target_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. ## MMseqs Output (for bugs); [MMseqs output](https://gist.github.com/bchodkowski-vir/a144575014463748bfed089df6a8c03a). ## Context; I wish to run",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:7804,extend,extend,7804,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['extend'],['extend']
Modifiability,"21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster iterations to 3; linclust shrimpDB tmp97/17949317426677965256/clu_redundancy tmp97/17949317426677965256/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucle",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:3827,extend,extend,3827,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['extend'],['extend']
Modifiability,"237; Target db start 1 to 237; [=================================================================] 237 0s 19ms. 20.483280 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 707ms; align tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/pref_step1 tmpfiles//13298481167543164943/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 237 type: Aminoacid; Target database size: 237 type: Aminoacid; Calculation of alignments; [=================================================================] 237 0s 50ms; Time for merging to aln_step1: 0h 0m 0s 3ms. 306 alignments calculated.; 271 sequence pairs passed the thresholds (0.885621 of overall calculated).; 1.143460 hits per query sequence.; Time for processing: 0h 0m 0s 99ms; clust tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/aln_step1 tmpfiles//13298481167543164943/clu_step1 --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================] 237 0s 4ms; Sort entries; Find missing connections; Found 10 new connections.; Reconstruct initial order; [===============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:17487,extend,extend,17487,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['extend'],['extend']
Modifiability,"259d8f2b659162236 ; 2- Compile as [described here](https://github.com/soedinglab/MMseqs2/#compile-from-source) but changing `cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..` by `cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=. ..` ; 3- Run all steps below:; > mmseqs createdb tcdb_query.nr.fa tcdb_query.nr.db 2>&1 >> log ; > mmseqs createdb all.fa all.db 2>&1 >> log; ; > mmseqs search tcdb_query.nr.db all.db tcdb_result.db tmp --threads 40 -s 7.5 --num-iterations 3 -a --max-seqs 17702628 -c 0.8 --add-self-matches 2>&1 >> log . 4- After crash:; > gdb --args mmseqs align tcdb_query.nr.db all.db tmp/1072319213335698383/pref_0 tmp/1072319213335698383/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 17702628 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 -v 3 . return:; ```; GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-114.el7; Copyright (C) 2013 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /home/acpguedes/source/MMseqs2/build/bin/mmseqs...done.; (gdb) bt; No stack.; ```. Important note:; I send the STDOUT and STDERR to log file but there are one message that was printed on the screen and not on log file: ; `scoreIdentical has different length L: scoreIdentical has different length L: 604154 query_length: 126; query_length: 626`. I can send you the entire directory but it is too large to upload on github.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-455599510:1138,extend,extend,1138,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-455599510,2,"['config', 'extend']","['configured', 'extend']"
Modifiability,"276 0s 7ms; Clustering step 2; [=================================================================] 237 0s 23ms; Clustering step 3; [=================================================================] 218 0s 41ms; Clustering step 4; [=================================================================] 200 0s 62ms; Write merged clustering; [=================================================================] 303 0s 66ms; Time for merging to clu: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 112ms; align DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu tmpfiles//13298481167543164943/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 303 type: Aminoacid; Target database size: 303 type: Aminoacid; Calculation of alignments; [=================================================================] 200 0s 16ms; Time for merging to aln: 0h 0m 0s 3ms. 303 alignments calculated.; 293 sequence pairs passed the thresholds (0.966997 of overall calculated).; 1.465000 hits per query sequence.; Time for processing: 0h 0m 0s 71ms; subtractdbs tmpfiles//13298481167543164943/clu tmpfiles//13298481167543164943/aln tmpfiles//13298481167543164943/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. subtractdbs tmpfiles//13298481167543164943/clu tmpfiles//13298481167543164943/aln tmpfiles//13298481167543164943/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. Remove tmpfiles//13298481167543164943/aln ids from tmpfiles//13298481167543164943/clu; [====",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:24327,extend,extend,24327,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['extend'],['extend']
Modifiability,"34761310910/profile_0 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_0. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. result2profile result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_202",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:6549,extend,extend,6549,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['extend'],['extend']
Modifiability,"3734096903/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/input_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; summarizeresult tmp/15248047069833069253/result tmp/15248047069833069253/result_best -a 1 --overlap 0 -c 1 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to result_best: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 17ms; convertalis tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/result_best result.tsv --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to result.tsv: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 11ms; rmdb tmp/15248047069833069253/result_best -v 3 . Time for processing: 0h 0m 0s 2ms; rmdb tmp/15248047069833069253/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/target -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/target_h -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/query -v 3 . Time for processing: 0h 0m 0s 2ms; rmdb tmp/15248047069833069253/query_h -v 3 ; ```. </details>. ## Context; See above. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Wh",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:9210,extend,extend,9210,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,1,['extend'],['extend']
Modifiability,"4.94M 2m 3s 835ms; Time for merging to pref_filter2: 0h 26m 51s 419ms; Time for processing: 0h 44m 18s 340ms; align /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref_filter2 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 50 --compressed 0 -v 3 . Compute score and coverage; Query database size: 764944220 type: Nucleotide; Target database size: 764944220 type: Nucleotide; Calculation of alignments; [=================================================================] 764.94M 23m 36s 275ms; Time for merging to aln: 0h 32m 14s 887ms. 781315288 alignments calculated.; 765501793 sequence pairs passed the thresholds (0.979760 of overall calculated).; 1.000729 hits per query sequence.; Time for processing: 1h 9m 13s 720ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/aln /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 50 --compressed 0 -v 3 . Clustering ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:15140,extend,extend,15140,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['extend'],['extend']
Modifiability,"410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 ; [=================================================================] 292.14M 2m 8s 8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:2251,extend,extendable,2251,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,1,['extend'],['extendable']
Modifiability,"426677965256/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:4086,extend,extendable,4086,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['extend'],['extendable']
Modifiability,"42; frame #3: 0x0000000000449273 mmseqs`std::__1::pair<long, long> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00000008013723b0)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::BucketPointers::decRead<true>() at bucket_pointers.hpp:106:28; frame #4: 0x0000000000449482 mmseqs`int ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:2022,Extend,ExtendedConfig,2022,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758,4,"['Config', 'Extend']","['Config', 'ExtendedConfig']"
Modifiability,"47483647 --max-accept 2; 147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Compute score and coverage; Query database size: 561568 type: Aminoacid; Target database size: 14926 type: Aminoacid; Calculation of alignments; [=================================================================] 323 0s 62ms; Time for merging into tmp/2730103712073724212/search/reverse_aln by mergeResults: 0h 0m 0s 109ms. 335 alignments calculated.; 323 sequence pairs passed the thresholds (0.964179 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 427ms; swapresults /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/reverse_aln tmp/2730103712073724212/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out ; -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing offsets.; [=================================================================] 323 0s 3ms. Reading results.; [=================================================================] 323 0s 0ms. Output database: tmp/2730103712073724212/aln; [=================================================================] 14.93K 0s 154ms. Time for merging into tmp/2730103712073724212/aln by mergeResults: 0h 0m 0s 147ms; Time for processing: 0h 0m 0s 394ms; offsetalignment queryDB tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/aln resultDB --chain-alignments 0; --merge-query 1 --search-type 0 --threads 64 --compressed 0 --db-load-mode 0 -v 3 ; Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:5829,extend,extend,5829,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,1,['extend'],['extend']
Modifiability,"4761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_1 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_query_20230412_142303/tmp/18292001434761310910/profile_0 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_0. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. result2profile result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:5440,extend,extend,5440,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['extend'],['extend']
Modifiability,"4761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_2 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_query_20230412_142303/tmp/18292001434761310910/profile_1 result_query_20230412_142303/res result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2. expandaln result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/res /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/res_exp --db-load-mode 2 --threads 96 --expansion-mode 0 -e 1.7976931348623157e+308 --expand-filter-clusters 1 --max-seq-id 0.95. MMseqs Version: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Expansion mode 0; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Max sequence length 65535; Score ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:8724,extend,extend,8724,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['extend'],['extend']
Modifiability,"526903138997/aln tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 0ms; align /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/aln_merged tmp/5233442526903138997/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score and coverage; Query database size: 75233 type: Aminoacid; Target database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 9m 57s 768ms ; Time for merging to aln: 0h 0m 0s 17ms; 672599536 alignments calculated; 672599536 sequence pairs passed the thresholds (1.000000 of overall calculated); 8940.219727 hits per query sequence; Time for processing: 1h 9m 58s 713ms; rmdb tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 73ms; swapresults /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/aln alnment/alignment --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 1.79769e+308 --split-memory-limit 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --threads 16 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 100.00% 75.23K 8s 163ms . Reading results.; Killed============================> ] 51.07% 38.42K eta 6s ; Error: swapresults died",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:8660,extend,extend,8660,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['extend'],['extend']
Modifiability,"531551203/linclust/8761493678692146066/order_redundancy --threads 40 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 119.25M 2m 56s 532ms ; Time for merging to pref_filter2: 0h 1m 34s 791ms; Time for processing: 0h 5m 27s 349ms; align cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_filter2 cluster_tmp/1127447206531551203/linclust/8761493678692146066/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 119253279 type: Nucleotide; Target database size: 119253279 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 119.25M 1h 5m 19s 819ms ; Time for merging to aln: 0h 1m 24s 501ms. 1903287037 alignments calculated.; 119437486 sequence pairs passed the thresholds (0.062753 of overall calculated).; 1.001545 hits per query sequence.; Time for processing: 1h 7m 38s 628ms; clust cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/aln cluster_tmp/1127447206531551203/linclust/8761493678692146066/clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 0m 49s 674ms. Size of the sequence database: 119253279; Size of the alignment database: 1192",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:7936,extend,extend,7936,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['extend'],['extend']
Modifiability,"5406232727/order_redundancy --threads 128 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 8.79M 22s 293ms; Time for merging to pref_filter2: 0h 0m 4s 651ms; Time for processing: 0h 0m 33s 252ms; align tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/pref_filter2 tmp/576731152808920235/linclust/1790908825406232727/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 128 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 8785102 type: Nucleotide; Target database size: 8785102 type: Nucleotide; Calculation of alignments; [=================================================================] 8.79M 11m 6s 373ms; Time for merging to aln: 0h 0m 5s 49ms; 1248621641 alignments calculated; 12850181 sequence pairs passed the thresholds (0.010291 of overall calculated); 1.462724 hits per query sequence; Time for processing: 0h 11m 16s 565ms; clust tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/aln tmp/576731152808920235/linclust/1790908825406232727/clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 1s 100ms. Size of the sequence database: 8785102; Size of the alignment database: 8785102; Number of clusters: 6",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:8577,extend,extend,8577,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['extend'],['extend']
Modifiability,"548633; Target db start 1 to 13003941; [=================================================================] 2.55M 23s 498ms. 7.258993 k-mers per position; 1015 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 1142796 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 915ms; Time for processing: 0h 3m 3s 800ms; align tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_0 tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 2548633 type: Aminoacid; Target database size: 13003941 type: Aminoacid; Calculation of alignments; [=================================================================] 2.55M 2s 531ms; Time for merging to aln_0: 0h 0m 0s 899ms. 1405837 alignments calculated.; 219658 sequence pairs passed the thresholds (0.156247 of overall calculated).; 0.086187 hits per query sequence.; Time for processing: 0h 0m 5s 264ms; createsubdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/order_0 tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 273ms; Time for processing: 0h 0m 0s 816ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/106276",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:6168,extend,extend,6168,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['extend'],['extend']
Modifiability,564044329/top1 tmp_part-14/17957680840564044329/aligned --extract-mode 2. [=================================================================] 100.00% 40.62K 0s 140ms; Time for merging files: 0h 0m 0s 205ms; Time for processing: 0h 0m 16s 657ms; createsubdb tmp_part-14/17957680840564044329/aligned tmp_part-14/17957680840564044329/first tmp_part-14/17957680840564044329/first_sub. Time for merging files: 0h 0m 0s 8ms; Time for processing: 0h 0m 0s 477ms; align tmp_part-14/17957680840564044329/aligned /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/first_sub tmp_part-14/17957680840564044329/round2 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3. Compute score and coverage; Query database size: 31979 type: Aminoacid; Target database size: 119988216 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 31.98K 20s 768ms; Time for merging files: 0h 0m 0s 85ms. 4578438 alignments calculated.; 4551951 sequence pairs passed the thresholds (0.994215 of overall calculated).; 142.341873 hits per query sequence.; Time for processing: 0h 0m 36s 82ms; mergedbs tmp_part-14/17957680840564044329/top1 tmp_part-14/17957680840564044329/merged tmp_part-14/17957680840564044329/top1 tmp_part-14/17957680840564044329/round2. Merging the results to tmp_part-14/17957680840564044329/merged; Time for merging files: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 699ms; filterdb tmp_part-14/17957680840564044329/merged tmp_part-14/17957680840564044329/2b_ali --beats-first --filter-column 4 --comparison-operator le. Filter by numerical comparison to first ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:8828,extend,extend,8828,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,1,['extend'],['extend']
Modifiability,"59278292880/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:3512,extend,extendable,3512,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['extend'],['extendable']
Modifiability,"6 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, func=0x00007fffffffba98, num_threads=32)<ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)>(ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbbf0, num_threads=32) at ips4o.hpp:128:9; frame #20: 0x00000000003ee74f mmseqs`void ips4o::parallel::sort<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbc40) at ips4o.hpp:137:5; frame #21: 0x00000000003eaab7 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffd2b0, isSortedById=true) at DBReade",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:4513,Extend,ExtendedConfig,4513,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769,4,"['Config', 'Extend']","['Config', 'ExtendedConfig']"
Modifiability,"6542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:4234,extend,extendable,4234,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['extend'],['extendable']
Modifiability,"67038 k-mers per position; 19293 DB matches per sequence; 0 overflows; 137 sequences passed prefiltering per query sequence; 113 median result list length; 1 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 162ms; Time for processing: 0h 0m 11s 426ms; align tmp/18110643841744502873/query tmp/18110643841744502873/target tmp/18110643841744502873/search_tmp/5440497380282616509/pref_0 tmp/18110643841744502873/result --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-cor r-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realig n-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 500 type: Aminoacid; Target database size: 20000 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 500 23s 390ms; Time for merging to result: 0h 0m 0s 44ms; 68875 alignments calculated; 12897 sequence pairs passed the thresholds (0.187252 of overall calculated); 25.794001 hits per query sequence; Time for processing: 0h 0m 24s 118ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/pref_0 -v 3. Time for processing: 0h 0m 0s 12ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/aln_0 -v 3. Time for processing: 0h 0m 0s 0ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/input_0 -v 3. Time for processing: 0h 0m 0s 0ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/aln_merge -v 3. Time for processing: 0h 0m 0s 0ms; convertalis ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:6926,extend,extend,6926,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['extend'],['extend']
Modifiability,"67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-k",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:2996,extend,extendable,2996,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['extend'],['extendable']
Modifiability,"6959338117486175/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 5 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mas",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:5462,extend,extendable,5462,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['extend'],['extendable']
Modifiability,"69750715556969/result; [=================================================================] 2 0s 0ms. Time for merging to result: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; test.fa.easy-search.tsv exists and will be overwritten; convertalis tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result test.fa.easy-search.tsv --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . [=================================================================] 2 0s 0ms; Time for merging to test.fa.easy-search.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/target -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/target_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/query -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/query_h -v 3 . Time for processing: 0h 0m 0s 0ms. ```; ## Context; I'm trying to match sequences to each other and not count regions with degenerate bases as mismatches. Basically, I'd like the 2 example sequences to match each other with 0 mismatches. The current command produces an output with 13 mismatches (see output section). I'm mostly concern",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:11911,extend,extend,11911,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['extend'],['extend']
Modifiability,"6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Program call:; createdb final_complete_sequences.fa.gz tmp/3578692915323364718/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. ............Time for merging files: 0h 0m 0s 87ms; Time for merging files: 0h 0m 0s 98ms; Time for merging files: 0h 0m 0s 136ms; Time for merging files: 0h 0m 0s 91ms; Time for processing: 0h 0m 2s 526ms; Program call:; cluster tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_tmp -c 0.9 --cov-mode 1 --threads 2 --min-seq-id 0.9 --kmer-per-seq 80. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:2066,extend,extendable,2066,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['extend'],['extendable']
Modifiability,"6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set cluster settings automatically to s=1; Set cluster mode GREEDY MEM.; Set cluster iterations to 1; Program call:; linclust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3 --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 0 --pca 1 --pcb 1.5 --score-bias ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:4063,extend,extendable,4063,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['extend'],['extendable']
Modifiability,"79/result /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best -a 1 --overlap 0 -e 0.001 -c 0 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | [=================================================================] 100.00% 0.01 eta -; mmseqs-web-worker_1 | Can not map any alingment results for entry 0!; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 1ms; mmseqs-web-worker_1 | terminate called after throwing an instance of 'std::logic_error'; mmseqs-web-worker_1 | what(): basic_string::_M_construct null not valid; mmseqs-web-worker_1 | convertalis /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/query /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/alis --sub-mat blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Error: Convert Alignments died; mmseqs-web-worker_1 | Aborted (core dumped); mmseqs-web-worker_1 | 2019/07/02 08:52:20 Execution Error: exit status 1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:13601,extend,extend,13601,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['extend'],['extend']
Modifiability,"81369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:4589,extend,extendable,4589,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['extend'],['extendable']
Modifiability,"83647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:4250,extend,extendable,4250,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extendable']
Modifiability,"83647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:19853,extend,extendable,19853,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extendable']
Modifiability,"85237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:1350,extend,extendable,1350,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,1,['extend'],['extendable']
Modifiability,"875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	3.40282e+38; Split memory limit 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	256; Compressed 	0; Preload mode 	0; Verbosity 	3. [New Thread 0x7fac59656700 (LWP 38112)]; [New Thread 0x7fac58e55700 (LWP 38113)]; [New Thread 0x7fac58654700 (LWP 38114)]; [New Thread 0x7face657f700 (LWP 38639)]; [New Thread 0x7face5d7e700 (LWP 38640)]; [New Thread 0x7face557d700 (LWP 38641)]; [New Thread 0x7face4d7c700 (LWP 38642)]; [New Thread 0x7face457b700 (LWP 38643)]; [New Thread 0x7face3d7a700 (LWP 38644)]; [New Thread 0x7face3579700 (LWP 38645)]; [New Thread 0x7face2d78700 (LWP 38646)]; [New Thread 0x7face2577700 (LWP 38647)]; [New Thread 0x7face1d76700 (LWP 38648)]; [New Thread 0x7face1575700 (LWP 38649)]; [New Thread 0x7face0d74700 (LWP 38650)]; [New Thread 0x7face05737",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:2564,extend,extend,2564,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473,1,['extend'],['extend']
Modifiability,"875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . MMseqs Version: 	12.113e3; Substitution matrix	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	3.40282e+38; Split memory limit 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	256; Compressed 	0; Preload mode 	0; Verbosity 	3. [New Thread 0x7fac58648700 (LWP 183880)]; [New Thread 0x7fac57e47700 (LWP 183881)]; [New Thread 0x7fac57646700 (LWP 183882)]; [New Thread 0x7face5571700 (LWP 184398)]; [New Thread 0x7face4d70700 (LWP 184399)]; [New Thread 0x7face456f700 (LWP 184400)]; [New Thread 0x7face3d6e700 (LWP 184401)]; [New Thread 0x7face356d700 (LWP 184402)]; [New Thread 0x7face2d6c700 (LWP 184403)]; [New Thread 0x7face256b700 (LWP 184404)]; [New Thread 0x7face1d6a700 (LWP 184405)]; [New Thread 0x7face1569700 (LWP 184406)]; [New Thread 0x7face0d68700 (LWP 184407)]; [New Thread 0x7face0567700 (LWP 184408)]; [New Thread 0x7facdfd66700 (LWP 184409)]; [New Thread 0x7facdf565700 (LWP 184410)];",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:2655,extend,extend,2655,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840,1,['extend'],['extend']
Modifiability,"89027801475/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 15.11M 1s 487ms; Time for merging to pref_count.tsv: 0h 0m 4s 788ms; Time for processing: 0h 0m 11s 535ms; align /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 15106287 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.11M 1h 57m 11s 538ms; Time for merging to aln: 0h 0m 19s 511ms. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:11594,extend,extend,11594,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['extend'],['extend']
Modifiability,"893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 23.55M 2s 494ms; Time for merging to pref_count.tsv: 0h 0m 8s 27ms; Time for processing: 0h 0m 21s 772ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 23551830 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [===============================Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.200; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.166; free(): corrupted unsorted chunks; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.241; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.167; Can not write to data file ?; Segmentation fault; Error: align died; Error: Search step died; Error: Search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:21838,extend,extend,21838,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['extend'],['extend']
Modifiability,"9056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 28 (Thread 0x7f6e74ffc640 (LWP 135848) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 27 (Thread 0x7f6e757fd640 (LWP 135847) ""mmseqs""):; #0 0x00005f84645c3fe9 in PSSMCalculator::computeContextSpecificWeights(float*, float*, float*, unsigned long, unsigned long, char const**) (); #1 0x00005f84645c510c in PSSMCalculator::computePSSMFromMSA(unsigned long, unsigned long, char const**, bool) (); #2 0x00005f846452d03c in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #3 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:34142,config,config,34142,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"94185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 6b9388469a41935813f5d207d6d149767feb4c42-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:5041,extend,extendable,5041,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['extend'],['extendable']
Modifiability,"94M 1m 44s 691ms; Time for merging to pref_filter2: 0h 20m 18s 697ms; Time for processing: 0h 33m 25s 677ms; align /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref_filter2 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 100 --compressed 0 -v 3 . Compute score and coverage; Query database size: 764944038 type: Nucleotide; Target database size: 764944038 type: Nucleotide; Calculation of alignments; [=================================================================] 764.94M 11m 10s 977ms; Time for merging to aln: 0h 22m 11s 346ms. 781259144 alignments calculated.; 765501715 sequence pairs passed the thresholds (0.979831 of overall calculated).; 1.000729 hits per query sequence.; Time for processing: 0h 49m 18s 712ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/aln /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 100 --compressed 0 -v 3 . Clusteri",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:5985,extend,extend,5985,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['extend'],['extend']
Modifiability,"966434 libomp.so`__kmpc_barrier + 308; frame #7: 0x0000000000408496 mmseqs`ips4o::OpenMPThreadPool::Sync::barrier(this=0x0000000802849038) const at thread_pool.hpp:63:1; frame #8: 0x0000000000436525 mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, bucket_start=0x0000000802842000, shared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffba98, my_id=0, num_threads=32)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:1956,Extend,ExtendedConfig,1956,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769,8,"['Config', 'Extend']","['Config', 'ExtendedConfig']"
Modifiability,"97/linclust --cluster-mode 3 --max-iterations 1000 --similarity; -type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignme; nt-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp; -bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,co; ntext:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.; 000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 -; -ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:4275,extend,extendable,4275,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['extend'],['extendable']
Modifiability,"9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/t_orfs ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/t_orfs_aa ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | convertalis /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/alis_pdb_rna_sequence --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | [=================================================================] 1 0s 0ms; mmseqs-web-worker_1 | Time for merging to alis_pdb_rna_sequence: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 33ms; mmseqs-web-worker_1 | Removing temporary files; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result ; mmseqs-web-worker_1 | ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:30540,extend,extend,30540,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['extend'],['extend']
Modifiability,": /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:1961,Config,Configuring,1961,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,1,['Config'],['Configuring']
Modifiability,"::computeContextScore(float ** context_weights,; ^; /galaxy/home/ksahlin/prefix/source/MMseqs2/src/commons/CSProfile.cpp:304:118: warning: called from here [-Winline]; float contextScore = computeContextScore(ctxLib->context_weights[k], seq->int_sequence, seq->L, i, center);; ^; [ 39%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/LibraryReader.cpp.o; [ 39%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Sequence.cpp.o; [ 40%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/SubstitutionMatrix.cpp.o; [ 40%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/tantan.cpp.o; [ 40%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/UniprotKB.cpp.o; [ 41%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o; [ 41%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/CacheFriendlyOperations.cpp.o; [ 42%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ExtendedSubstitutionMatrix.cpp.o; [ 42%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Indexer.cpp.o; [ 42%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/IndexBuilder.cpp.o; [ 43%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/KmerGenerator.cpp.o; [ 43%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Main.cpp.o; [ 44%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Prefiltering.cpp.o; [ 44%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/PrefilteringIndexReader.cpp.o; [ 45%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/QueryMatcher.cpp.o; [ 45%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ReducedMatrix.cpp.o; [ 45%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/SequenceLookup.cpp.o; [ 46%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/UngappedAlignment.cpp.o; [ 46",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:11802,Extend,ExtendedSubstitutionMatrix,11802,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,1,['Extend'],['ExtendedSubstitutionMatrix']
Modifiability,"; #0 0x00005f84645c3fe9 in PSSMCalculator::computeContextSpecificWeights(float*, float*, float*, unsigned long, unsigned long, char const**) (); #1 0x00005f84645c510c in PSSMCalculator::computePSSMFromMSA(unsigned long, unsigned long, char const**, bool) (); #2 0x00005f846452d03c in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #3 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #4 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #5 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 26 (Thread 0x7f6e75ffe640 (LWP 135846) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 25 (Thread 0x7f6e7cffc640 (LWP 135845) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:35678,config,config,35678,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"; 20 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 1ms; Time for processing: 0h 0m 5s 300ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 5991 type: Aminoacid; Target database size: 5991 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 5.99K 0s 226ms ; Time for merging to aln_step2: 0h 0m 0s 1ms; 21329 alignments calculated; 6429 sequence pairs passed the thresholds (0.301421 of overall calculated); 1.073110 hits per query sequence; Time for processing: 0h 0m 0s 232ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step2 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 5.99K 0s 4ms ; Sort entries; Find missi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:28677,extend,extend,28677,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['extend'],['extend']
Modifiability,"; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb exp.fa tmp2/6664721939282577716/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [19999] 0s 24ms; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 1ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 33ms; Create directory tmp2/6664721939282577716/clu_tmp; cluster tmp2/6664721939282577716/input tmp2/6664721939282577716/clu tmp2/6664721939282577716/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/66647219392825777",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:2998,extend,extendable,2998,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['extend'],['extendable']
Modifiability,"; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	10; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; .............; Time for fill: 0 h 0 m 2s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 7s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 4s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 14s; Rescore diagonals.; Program call:; panproteome.db panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:4124,extend,extendable,4124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['extend'],['extendable']
Modifiability,"; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust 1831648_seqs.mmseqs2db tmp/16479300059278292880/clu_redundancy tmp/16479300059278292880/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:3253,extend,extend,3253,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['extend'],['extend']
Modifiability,"; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files true; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb /opt/mmseqs/examples/DB.fasta /tmp/mydir/7574787915800795625/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [19999] 0s 15ms; Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 16ms; Create directory /tmp/mydir/7574787915800795625/clu_tmp; cluster /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1 . Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:2898,extend,extendable,2898,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['extend'],['extendable']
Modifiability,"; [=================================================================] 100.00% 221 0s 31ms. 190.836300 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 644ms; align tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//538598962955004214/pref_step2 tmp//538598962955004214/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 221 type: Aminoacid; Target database size: 221 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 221 0s 47ms; Time for merging to aln_step2: 0h 0m 0s 5ms; 364 alignments calculated; 254 sequence pairs passed the thresholds (0.697802 of overall calculated); 1.149321 hits per query sequence; Time for processing: 0h 0m 0s 94ms; clust tmp//538598962955004214/input_step2 tmp//538598962955004214/aln_step2 tmp//538598962955004214/clu_step2 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 221 0s 11ms; Sort entries; Find missing connections; Found 7 new connections.; Reconstruct initial order; [==========================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:21636,extend,extend,21636,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['extend'],['extend']
Modifiability,"<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #9: 0x00000000003ef65f mmseqs`::.omp_outlined._debug__.54(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) &) at thread_pool.hpp:95:13; frame #10: 0x00000000003ef695 mmseqs`::.omp_outlined..55(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) at thread_pool.hpp:94:1; frame #11: 0x000000080098d523 libomp.so`__kmp_invoke_microtask + 147; frame #12: 0x0000000800968332 libomp.so`___lldb_unnamed_symbol498$$libomp.so + 370; frame #13: 0x0000000800963b3f libomp.so`__kmp_fork_call + 7551; frame #14: 0x000000080093cfb6 libomp.so`__kmpc_fork_call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:4407,Extend,ExtendedConfig,4407,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758,4,"['Config', 'Extend']","['Config', 'ExtendedConfig']"
Modifiability,"<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>) at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578) at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```; For the clu90 job:; ```; (gdb) thread apply all bt. Thread 32 (Thread 0x7f6e65ffe640 (LWP 135852) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 31 (Thread 0x7f6e6cffc640 (LWP 135851) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:30475,config,config,30475,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"<unsigned int>::Index*)::'lambda'(int, int)>(ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #16: 0x000000000043e399 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffaea8, begin=0x00000008012ffc40, end=0x00000008013647d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84), num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), int) at ips4o.hpp:128:9; frame #18: 0x000000000040d66a mmseqs`void ips4o::parallel::sort<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84))(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)) at ips4o.hpp:137:5; frame #19: 0x00000000003ef124 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffc718, isSortedById=true) at DBReader.cpp:403:9; frame #20: 0x00000000004",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:6773,Config,Config,6773,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758,2,['Config'],['Config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 10 (Thread 0x7f6ed8df0640 (LWP 135830) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 9 (Thread 0x7f6ed95f1640 (LWP 135829) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:49008,config,config,49008,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 11 (Thread 0x7f6ed85ef640 (LWP 135831) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 10 (Thread 0x7f6ed8df0640 (LWP 135830) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:48167,config,config,48167,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 12 (Thread 0x7f6ecbfa4640 (LWP 135832) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 11 (Thread 0x7f6ed85ef640 (LWP 135831) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:47326,config,config,47326,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 13 (Thread 0x7f6ecb7a3640 (LWP 135833) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 12 (Thread 0x7f6ecbfa4640 (LWP 135832) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:46485,config,config,46485,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 14 (Thread 0x7f6ecafa2640 (LWP 135834) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 13 (Thread 0x7f6ecb7a3640 (LWP 135833) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:45644,config,config,45644,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 15 (Thread 0x7f6e9424d640 (LWP 135835) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 14 (Thread 0x7f6ecafa2640 (LWP 135834) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:44803,config,config,44803,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 16 (Thread 0x7f6e9324b640 (LWP 135836) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 15 (Thread 0x7f6e9424d640 (LWP 135835) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:43962,config,config,43962,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 17 (Thread 0x7f6e92a4a640 (LWP 135837) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 16 (Thread 0x7f6e9324b640 (LWP 135836) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:43121,config,config,43121,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 18 (Thread 0x7f6e91a48640 (LWP 135838) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 17 (Thread 0x7f6e92a4a640 (LWP 135837) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:42280,config,config,42280,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 19 (Thread 0x7f6e8ca44640 (LWP 135839) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 18 (Thread 0x7f6e91a48640 (LWP 135838) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:41439,config,config,41439,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 20 (Thread 0x7f6e8c243640 (LWP 135840) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 19 (Thread 0x7f6e8ca44640 (LWP 135839) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:40598,config,config,40598,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 21 (Thread 0x7f6e8ba42640 (LWP 135841) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 20 (Thread 0x7f6e8c243640 (LWP 135840) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:39757,config,config,39757,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 22 (Thread 0x7f6e84a37640 (LWP 135842) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 21 (Thread 0x7f6e8ba42640 (LWP 135841) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:38916,config,config,38916,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 23 (Thread 0x7f6e7dffe640 (LWP 135843) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 22 (Thread 0x7f6e84a37640 (LWP 135842) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:38075,config,config,38075,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 24 (Thread 0x7f6e7d7fd640 (LWP 135844) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 23 (Thread 0x7f6e7dffe640 (LWP 135843) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:37234,config,config,37234,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 25 (Thread 0x7f6e7cffc640 (LWP 135845) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 24 (Thread 0x7f6e7d7fd640 (LWP 135844) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:36393,config,config,36393,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 29 (Thread 0x7f6e6dffe640 (LWP 135849) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 28 (Thread 0x7f6e74ffc640 (LWP 135848) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:33108,config,config,33108,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 30 (Thread 0x7f6e6d7fd640 (LWP 135850) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 29 (Thread 0x7f6e6dffe640 (LWP 135849) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:32267,config,config,32267,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 31 (Thread 0x7f6e6cffc640 (LWP 135851) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 30 (Thread 0x7f6e6d7fd640 (LWP 135850) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:31426,config,config,31426,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"=================================================================] 100.00% 124 0s 24ms. 15.668402 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 591ms; align tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/pref_step1 tmp//7897776346521331899/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 124 type: Aminoacid; Target database size: 124 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 26ms; Time for merging to aln_step1: 0h 0m 0s 3ms=================> ] 91.87% 114 eta 0s; 124 alignments calculated; 124 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 62ms; clust tmp//7897776346521331899/input_step1 tmp//7897776346521331899/aln_step1 tmp//7897776346521331899/clu_step1 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 124 0s 5ms; Sort entries; Find missing connections; Found 0 new connections.; Reconstruct initial order; [==================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:17769,extend,extend,17769,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['extend'],['extend']
Modifiability,"================================================================] 1.08K 0s 508ms; Time for merging to aln_0: 0h 0m 0s 8ms; 19048 alignments calculated; 15817 sequence pairs passed the thresholds (0.830376 of overall calculated); 14.713489 hits per query sequence; Time for processing: 0h 0m 54s 194ms; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . Maybe I'm missing a ""hidden"" input file (ie., one of the files associated with the main input files, which are generally no mentioned in any of the docs). The input files that are present:. * /ebio/abt3_scr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:17399,extend,extend,17399,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,1,['extend'],['extend']
Modifiability,"================================================================] 100.00% 124 0s 35ms. 125.182478 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 657ms; align tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776346521331899/pref_step2 tmp//7897776346521331899/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 124 type: Aminoacid; Target database size: 124 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 37ms; Time for merging to aln_step2: 0h 0m 0s 8ms; 124 alignments calculated; 124 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 80ms; clust tmp//7897776346521331899/input_step2 tmp//7897776346521331899/aln_step2 tmp//7897776346521331899/clu_step2 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 124 0s 13ms; Sort entries; Find missing connections; Found 0 new connections.; Reconstruct initial order; [=======================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:21882,extend,extend,21882,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['extend'],['extend']
Modifiability,"==============================================================>] 99.58% 238 eta 0s; 20.876247 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 824ms; align tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/pref_step1 tmp//10798751672030653963/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 239 type: Aminoacid; Target database size: 239 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 239 0s 46ms; Time for merging to aln_step1: 0h 0m 0s 11ms; 308 alignments calculated; 270 sequence pairs passed the thresholds (0.876623 of overall calculated); 1.129707 hits per query sequence; Time for processing: 0h 0m 0s 78ms; clust tmp//10798751672030653963/input_step1 tmp//10798751672030653963/aln_step1 tmp//10798751672030653963/clu_step1 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 239 0s 12ms; Sort entries; Find missing connections; Found 7 new connections.; Reconstruct initial order; [===================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:17720,extend,extend,17720,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['extend'],['extend']
Modifiability,"===========================================================] 100.00% 222 0s 52ms. 196.811469 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 11ms; Time for processing: 0h 0m 1s 704ms; align tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//10798751672030653963/pref_step2 tmp//10798751672030653963/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 222 type: Aminoacid; Target database size: 222 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 222 0s 80ms; Time for merging to aln_step2: 0h 0m 0s 11ms; 388 alignments calculated; 266 sequence pairs passed the thresholds (0.685567 of overall calculated); 1.198198 hits per query sequence; Time for processing: 0h 0m 0s 106ms; clust tmp//10798751672030653963/input_step2 tmp//10798751672030653963/aln_step2 tmp//10798751672030653963/clu_step2 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 222 0s 2ms; Sort entries; Find missing connections; Found 6 new connections.; Reconstruct initial order; [===================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:21809,extend,extend,21809,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['extend'],['extend']
Modifiability,"=========================================================] 100.00% 239 0s 25ms; Clustering step 3; [=================================================================] 100.00% 222 0s 44ms; Clustering step 4; [=================================================================] 100.00% 200 0s 61ms; Write merged clustering; [=================================================================] 100.00% 303 0s 73ms; Time for merging to clu: 0h 0m 0s 10ms; Time for processing: 0h 0m 0s 88ms; align DB_in DB_in tmp//10798751672030653963/clu tmp//10798751672030653963/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 303 type: Aminoacid; Target database size: 303 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 200 0s 20ms; Time for merging to aln: 0h 0m 0s 1ms; 303 alignments calculated; 289 sequence pairs passed the thresholds (0.953795 of overall calculated); 1.445000 hits per query sequence; Time for processing: 0h 0m 0s 47ms; subtractdbs tmp//10798751672030653963/clu tmp//10798751672030653963/aln tmp//10798751672030653963/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. subtractdbs tmp//10798751672030653963/clu tmp//10798751672030653963/aln tmp//10798751672030653963/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. Remove tmp//10798751672030653963/aln ids from tmp//10798751672030653963/clu; [================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:24564,extend,extend,24564,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['extend'],['extend']
Modifiability,"==================================================] 100.00% 276 0s 31ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 665ms; align tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/pref_step0 tmp//538598962955004214/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 77ms; Time for merging to aln_step0: 0h 0m 0s 9ms; 413 alignments calculated; 406 sequence pairs passed the thresholds (0.983051 of overall calculated); 1.471014 hits per query sequence; Time for processing: 0h 0m 0s 121ms; clust tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/aln_step0 tmp//538598962955004214/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 276 0s 12ms; Sort entries; Find missing connections; Found 0 new connections.; Reconstruct initial order; [===============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:13408,extend,extend,13408,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['extend'],['extend']
Modifiability,"==============================================] 100.00% 124 0s 29ms. 0.916862 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 849ms; align tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/pref_step0 tmp//7897776346521331899/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 124 type: Aminoacid; Target database size: 124 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 23ms; Time for merging to aln_step0: 0h 0m 0s 1ms; 124 alignments calculated; 124 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 72ms; clust tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/aln_step0 tmp//7897776346521331899/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 124 0s 3ms; Sort entries; Find missing connections; Found 0 new connections.; Reconstruct initial order; [==============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:13676,extend,extend,13676,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['extend'],['extend']
Modifiability,"=============================================] 100.00K 0s 144ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 19ms; Time for processing: 0h 0m 2s 119ms; align ./mmseqs_output/tmp/5351426679731834765/seq_seeds.merged ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped_aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 34414 type: Aminoacid; Target database size: 26229 type: Aminoacid; Calculation of alignments; [=================================================================] 34.29K 6m 32s 543ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 85ms; 4335308 alignments calculated; 2294027 sequence pairs passed the thresholds (0.529150 of overall calculated); 66.900757 hits per query sequence; Time for processing: 0h 6m 33s 544ms; filterdb ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped_aln ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 40 --compressed 0 -v 3 . Filtering using regular expression; [=================================================================] 34.29K 1s 15ms; Time for merging to seq_wrong_assigned_pref_swaped_aln_ocol: 0h 0m 0s 70ms; Tim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:40992,extend,extend,40992,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extend']
Modifiability,"==========================================] 100.00% 276 0s 19ms. 1.394095 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 477ms; align tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/pref_step0 tmp//10798751672030653963/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 44ms; Time for merging to aln_step0: 0h 0m 0s 7ms; 415 alignments calculated; 408 sequence pairs passed the thresholds (0.983133 of overall calculated); 1.478261 hits per query sequence; Time for processing: 0h 0m 0s 89ms; clust tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/aln_step0 tmp//10798751672030653963/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 276 0s 11ms; Sort entries; Find missing connections; Found 0 new connections.; Reconstruct initial order; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:13523,extend,extend,13523,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['extend'],['extend']
Modifiability,"=========================================] 855.53K 0s 584ms; Time for merging to pref_filter2: 0h 0m 1s 180ms; Time for processing: 0h 0m 3s 237ms; align tmp/16479300059278292880/linclust/10067396915876818640/input_step_redundancy tmp/16479300059278292880/linclust/10067396915876818640/input_step_redundancy tmp/16479300059278292880/linclust/10067396915876818640/pref_filter2 tmp/16479300059278292880/linclust/10067396915876818640/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 112 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 855530 type: Nucleotide; Target database size: 855530 type: Nucleotide; Calculation of alignments; [=================================================================] 855.53K 2m 53s 344ms; Time for merging to aln: 0h 0m 0s 811ms; 12214778 alignments calculated; 932129 sequence pairs passed the thresholds (0.076312 of overall calculated); 1.089534 hits per query sequence; Time for processing: 0h 3m 4s 809ms; clust tmp/16479300059278292880/linclust/10067396915876818640/input_step_redundancy tmp/16479300059278292880/linclust/10067396915876818640/aln tmp/16479300059278292880/linclust/10067396915876818640/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Set Cover; [=================================================================] 855.53K 0s 54ms; Sort",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:8631,extend,extend,8631,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['extend'],['extend']
Modifiability,"==================================] 100.00% 1 eta -. 602.620000 k-mers per position; 41 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 740ms; align tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 tmp/15248047069833069253/result --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 1 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 1 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Time for merging to result: 0h 0m 0s 0ms; 1 alignments calculated; 1 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 28ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/input_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; summarizeresult tmp/15248047069833069253/res",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:7611,extend,extend,7611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,1,['extend'],['extend']
Modifiability,"==============================] 100.00% 25.63K 0s 61ms; Time for merging to pref_filter2: 0h 0m 0s 138ms; Time for processing: 0h 1m 40s 346ms; align tmp97/17949317426677965256/linclust/6279588666755106708/input_step_redundancy tmp97/17949317426677965256/linclust/6279588666755106708/input_step_redundancy tmp97/17949317426677965256/linclust/6279588666755106708/pref_filter2 tmp97/17949317426677965256/linclust/6279588666755106708/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 20 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 25629 type: Nucleotide; Target database size: 25629 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 25.63K 1s 731ms; Time for merging to aln: 0h 0m 0s 152ms; 209782 alignments calculated; 32736 sequence pairs passed the thresholds (0.156048 of overall calculated); 1.277303 hits per query sequence; Time for processing: 0h 3m 22s 221ms; clust tmp97/17949317426677965256/linclust/6279588666755106708/input_step_redundancy tmp97/17949317426677965256/linclust/6279588666755106708/aln tmp97/17949317426677965256/linclust/6279588666755106708/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Clustering mode: Set Cover; [=================================================================] 100.00% 25.63K 0s 25ms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:9191,extend,extend,9191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['extend'],['extend']
Modifiability,"========================] 100.00% 239 0s 23ms; Clustering step 3; [=================================================================] 100.00% 221 0s 37ms; Clustering step 4; [=================================================================] 100.00% 201 0s 68ms; Write merged clustering; [=================================================================] 100.00% 303 0s 91ms; Time for merging to clu: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 109ms; align ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu tmp//538598962955004214/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 303 type: Aminoacid; Target database size: 303 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 201 0s 52ms; Time for merging to aln: 0h 0m 0s 1ms; 303 alignments calculated; 294 sequence pairs passed the thresholds (0.970297 of overall calculated); 1.462687 hits per query sequence; Time for processing: 0h 0m 0s 122ms; subtractdbs tmp//538598962955004214/clu tmp//538598962955004214/aln tmp//538598962955004214/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. subtractdbs tmp//538598962955004214/clu tmp//538598962955004214/aln tmp//538598962955004214/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. Remove tmp//538598962955004214/aln ids from tmp//538598962955004214/clu; [===============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:24424,extend,extend,24424,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['extend'],['extend']
Modifiability,"=======================] =74.93M 28m 19s 496ms; Time for merging to pref_rescore2: 0h 0m 51s 111ms; Time for processing: 0h 29m 44s 106ms; align tmp//16518381706844811497/linclust/1189823685496030198/input_step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/input_step_redu; ndancy tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore2 tmp//16518381706844811497/linclust/1189823685496030198/aln --sub-mat 'aa:blos; um62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mo; de 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --; add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-sc; ore-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0; -v 3 . Compute score, coverage and sequence identity; Query database size: 74926526 type: Aminoacid; Target database size: 74926526 type: Aminoacid; Calculation of alignments; [=================================================================] 74.93M 3m 46s 500ms; Time for merging to aln: 0h 0m 54s 46ms; 92521862 alignments calculated; 75488967 sequence pairs passed the thresholds (0.815904 of overall calculated); 1.007507 hits per query sequence; Time for processing: 0h 5m 20s 32ms; clust tmp//16518381706844811497/linclust/1189823685496030198/input_step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/aln tmp//165183; 81706844811497/linclust/1189823685496030198/clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 64 --compressed 0 -v 3 --cluster-w; eight-threshold 0.9 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 10s 117ms. Size of the sequence database: 74926526; Size of ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:9840,extend,extend,9840,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['extend'],['extend']
Modifiability,"====================] 100.00% 124 0s 27ms; Clustering step 3; [=================================================================] 100.00% 124 0s 45ms; Clustering step 4; [=================================================================] 100.00% 124 0s 64ms; Write merged clustering; [=================================================================] 100.00% 136 0s 79ms; Time for merging to clu: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 99ms; align artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/clu tmp//7897776346521331899/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 136 type: Aminoacid; Target database size: 136 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 17ms; Time for merging to aln: 0h 0m 0s 2ms; 136 alignments calculated; 134 sequence pairs passed the thresholds (0.985294 of overall calculated); 1.080645 hits per query sequence; Time for processing: 0h 0m 0s 43ms; subtractdbs tmp//7897776346521331899/clu tmp//7897776346521331899/aln tmp//7897776346521331899/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. subtractdbs tmp//7897776346521331899/clu tmp//7897776346521331899/aln tmp//7897776346521331899/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. Remove tmp//7897776346521331899/aln ids from tmp//7897776346521331899/clu; [========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:24686,extend,extend,24686,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['extend'],['extend']
Modifiability,"===============] 100.00% 500 23s 390ms; Time for merging to result: 0h 0m 0s 44ms; 68875 alignments calculated; 12897 sequence pairs passed the thresholds (0.187252 of overall calculated); 25.794001 hits per query sequence; Time for processing: 0h 0m 24s 118ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/pref_0 -v 3. Time for processing: 0h 0m 0s 12ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/aln_0 -v 3. Time for processing: 0h 0m 0s 0ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/input_0 -v 3. Time for processing: 0h 0m 0s 0ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/aln_merge -v 3. Time for processing: 0h 0m 0s 0ms; convertalis tmp/18110643841744502873/query tmp/18110643841744502873/target tmp/18110643841744502873/result alnResult.m8 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --format-mode 0 --format-output query,targe t,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --db-output 0 --db-load-mode 0 --search-type 0 --threads 40 --compresse d 0 -v 3. [=================================================================] 100.00% 500 0s 376ms; Time for merging to alnResult.m8: 0h 0m 0s 57ms; Time for processing: 0h 0m 1s 129ms; rmdb tmp/18110643841744502873/result -v 3. Time for processing: 0h 0m 0s 10ms; rmdb tmp/18110643841744502873/target -v 3. Time for processing: 0h 0m 0s 4ms; rmdb tmp/18110643841744502873/target_h -v 3. Time for processing: 0h 0m 0s 2ms; rmdb tmp/18110643841744502873/query -v 3. Time for processing: 0h 0m 0s 1ms; rmdb tmp/18110643841744502873/query_h -v 3. Time for processing: 0h 0m 0s 1ms; [lihuilin@login01 MMseqs2]$ ls; alnResult.m8 azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile examples lib LICENSE.md README.md src tmp util; [lihuilin@login01 MMseqs2]$; [lihuilin@login01 MMseqs2]$ ls; alnResult.m8 azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile ex",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:8237,extend,extend,8237,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['extend'],['extend']
Modifiability,"============] 100.00% 154 0s 46ms. 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 845ms; align clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 clu/sim1_tmp/7842071913732967198/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 55ms; Time for merging to aln_step0: 0h 0m 0s 5ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 106ms; clust clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/aln_step0 clu/sim1_tmp/7842071913732967198/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 154 0s 11ms; Sort entries; Find missing connections; Found 1 new connections.; Reconstruct initial order; [====================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:14472,extend,extend,14472,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extend']
Modifiability,"========> ] 89.54% 138 eta 0s; 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 795ms; align clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/pref_step0 clu/sim2_tmp/12164117771218227067/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 46ms; Time for merging to aln_step0: 0h 0m 0s 4ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 72ms; clust clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/aln_step0 clu/sim2_tmp/12164117771218227067/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 154 0s 8ms; Sort entries; Find missing connections; Found 1 new connections.; Reconstruct initial order; [===================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:30184,extend,extend,30184,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extend']
Modifiability,"========] 10 0s 2ms. Reading results.; [=================================================================] 10 0s 5ms. Output database: tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped; [=================================================================] 297 0s 5ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 73ms; align tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/seq_wrong_assigned tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 210 type: Aminoacid; Target database size: 10 type: Aminoacid; Calculation of alignments; [=================================================================] 22 0s 31ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 0ms. 29 alignments calculated.; 21 sequence pairs passed the thresholds (0.724138 of overall calculated).; 0.954545 hits per query sequence.; Time for processing: 0h 0m 0s 80ms; filterdb tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 16 --compressed 0 -v 3. Filtering using regular expression; [=================================================================] 22 0s 20ms; Time for merging to seq_wrong_assigned_pref_swaped_aln_ocol: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 57ms; mergedbs tmpfiles//1329848116754316",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:30453,extend,extend,30453,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['extend'],['extend']
Modifiability,"========] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 219ms; Time for processing: 0h 0m 6s 996ms; align /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 /scratch/orakov/tmp/queryT.mmsq.outDB --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 100000 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score and coverage; Query database size: 313 type: Aminoacid; Target database size: 313 type: Aminoacid; Calculation of alignments; [=================================================================] 313 0s 75ms; Time for merging to queryT.mmsq.outDB: 0h 0m 0s 320ms. 408 alignments calculated.; 408 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.303514 hits per query sequence.; Time for processing: 0h 0m 0s 966ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:2671,extend,extend,2671,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497,1,['extend'],['extend']
Modifiability,"=====] 8.34K 0s 657ms; Clustering step 4; [=================================================================] 8.19K 0s 758ms; Write merged clustering; [=================================================================] 100.00K 0s 956ms; Time for merging to clu: 0h 0m 0s 164ms; Time for processing: 0h 0m 1s 268ms; align ./mms_smallDB ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/clu ./mmseqs_output/tmp/5351426679731834765/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 100000 type: Aminoacid; Target database size: 100000 type: Aminoacid; Calculation of alignments; [=================================================================] 8.19K 8s 160ms; Time for merging to aln: 0h 0m 0s 15ms; 99829 alignments calculated; 73771 sequence pairs passed the thresholds (0.738974 of overall calculated); 9.012951 hits per query sequence; Time for processing: 0h 0m 8s 437ms; subtractdbs ./mmseqs_output/tmp/5351426679731834765/clu ./mmseqs_output/tmp/5351426679731834765/aln ./mmseqs_output/tmp/5351426679731834765/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 40 --compressed 0 -v 3 . subtractdbs ./mmseqs_output/tmp/5351426679731834765/clu ./mmseqs_output/tmp/5351426679731834765/aln ./mmseqs_output/tmp/5351426679731834765/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 40 --compressed 0 -v 3 . Remov",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:34125,extend,extend,34125,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extend']
Modifiability,> The output is kind of mangled. Could you execute both runs with empty `tmp` directories and redirect the whole output to a file please? You might also want to set the `TTY=0` environment variable to disable the progress bar (not sure why it broke so badly in your output.; > See: https://github.com/soedinglab/MMseqs2/wiki#environment-variables-used-by-mmseqs2. Thank you very much!; Thank you for your help. Our problem has been resolved. The order of memory insertion has been changed.; Dankschön!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824574374:189,variab,variable,189,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824574374,4,['variab'],"['variable', 'variables-used-by-']"
Modifiability,"> We also use an SSSE3 instruction in some important place (iirc), so should we also enable that explicitly?. Yes we should probably have a `HAVE_SSE3` option for that as well. > I don't really like it a lot that with this change -DHAVE_AVX2 -DHAVE_ARM8 would be a possible but nonsensical combination. Well yes, but if the user sets nonsensical flags it is not that big of a problem if the outcome is (expected) nonsense. Is there an easy way we can avoid this?. > BTW Debian uses -DNATIVE_ARCH=0 (https://salsa.debian.org/med-team/mmseqs2/-/blob/master/debian/rules) and compiles multiple SIMD levels and adds a SIMD dispatcher (https://salsa.debian.org/med-team/mmseqs2/-/blob/master/debian/bin/simd-dispatch), if that is in any way useful for you. In Gentoo this is controlled by `CPU_FLAGS_X86` variable at build time. In general we don't use dispatchers for this because there isn't really a point if things are built exactly according to the users set preference. The problem here is that the user preference is not respected because the flags are treated as mutually exclusive.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/533#issuecomment-1038288605:800,variab,variable,800,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/533#issuecomment-1038288605,1,['variab'],['variable']
Modifiability,"> You can use https://gist.github.com to post the log.; > ; > Alternatively, the call to MMseqs2 alone would already help with diagnosing the issue.; ============================================================; Thank you very much for your reply.; I just solved the bug very fortunatelly; The method is to install mpich ; ============================; Download hydra-3.3.1(https://www.mpich.org/downloads/); ./configure --prefix=$DIR/mpich; make; make install; add the mpirun in the end of your .bashrc; =============================; Best wishes",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/213#issuecomment-506283448:411,config,configure,411,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/213#issuecomment-506283448,1,['config'],['configure']
Modifiability,">@colinbrislawn I have tested linclust with ONT reads. It should be possible to cluster them. However, we needed to tweak the parameters used for the banded alignment to account for the high error rate. Awesome!. >How do you want to use MMseqs2?. Existing Qiime 2 plugins offer several options for clustering and classifying short RNA sequences... but no plugins support clustering or classifying long, noisy sequences, or proteins of any kind. I think an MMseqs2 plugin could bring a ton of functionality to Qiime 2. A method for taxonomic classification of ONT reads would help @splaisan and others.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579894942:264,plugin,plugins,264,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579894942,3,['plugin'],"['plugin', 'plugins']"
Modifiability,@acpguedes we support gap open and extend now as parameters. Could you resolve the iteration issue?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/106#issuecomment-437216588:35,extend,extend,35,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/106#issuecomment-437216588,1,['extend'],['extend']
Modifiability,"@davidbuterez I check your search log and the alignment steps used the gap open and extend parameters. So the alignment should be computerd with gap open 3 and gap extend 0 (see `searchout.txt`). I am not sure if -e inf actually works, I never used this. align ... \ --gap-open 3 --gap-extend 0 ... However the computation of the raw score in convertalis uses the gap open 11 and gap extend 1 to recompute the raw score from the bit score. . mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln"" --gap-open 3 --gap-extend 0 . Just a warning. You use two quite experimental features of mmseqs2, (1) Windows and (2) nucleotide searches.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491342159:84,extend,extend,84,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491342159,5,['extend'],['extend']
Modifiability,@davidbuterez the convertalis module needs gap-open and gap-extend only to compute the raw score from the bit score. So if you use `--format-output raw`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491319719:60,extend,extend,60,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491319719,1,['extend'],['extend']
Modifiability,"@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 2 (Thread 0x7f6ec9fff640 (LWP 135794) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7f706900f200 (LWP 135793) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:55854,config,config,55854,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 3 (Thread 0x7f6ec97fe640 (LWP 135795) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 2 (Thread 0x7f6ec9fff640 (LWP 135794) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:55014,config,config,55014,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 4 (Thread 0x7f6ec8ffd640 (LWP 135796) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 3 (Thread 0x7f6ec97fe640 (LWP 135795) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:54174,config,config,54174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 5 (Thread 0x7f6e8b23b640 (LWP 135825) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 4 (Thread 0x7f6ec8ffd640 (LWP 135796) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:53334,config,config,53334,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 6 (Thread 0x7f6e93a4c640 (LWP 135826) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 5 (Thread 0x7f6e8b23b640 (LWP 135825) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:52494,config,config,52494,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 7 (Thread 0x7f6e91247640 (LWP 135827) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 6 (Thread 0x7f6e93a4c640 (LWP 135826) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:51654,config,config,51654,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 8 (Thread 0x7f6e92249640 (LWP 135828) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 7 (Thread 0x7f6e91247640 (LWP 135827) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:50814,config,config,50814,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 9 (Thread 0x7f6ed95f1640 (LWP 135829) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 8 (Thread 0x7f6e92249640 (LWP 135828) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:49974,config,config,49974,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"@martin-steinegger ; ```; * thread #5, stop reason = EXC_BAD_ACCESS (code=1, address=0x5a7684002); frame #0: 0x0000000100169b58 mmseqs`CacheFriendlyOperations<2u>::findDuplicates(this=0x0000600000c08090, output=0x00000005a72a2336, outputSize=580749, computeTotalScore=true) at CacheFriendlyOperations.cpp:229:50; 226 	 const unsigned int element = tmpElementBuffer[n].id;; 227 	 const unsigned int hashBinElement = element >> (MASK_0_5_BIT);; 228 	 output[doubleElementCount].id = element;; -> 229 	 output[doubleElementCount].count = duplicateBitArray[hashBinElement];; 230 	 output[doubleElementCount].diagonal = tmpElementBuffer[n].diagonal;; 231. (lldb) p hashBinElement; (const unsigned int) 742456; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p doubleElementCount; (size_t) 581514; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p output[doubleElementCount]; error: Couldn't apply expression side effects : Couldn't dematerialize a result variable: couldn't read its memory; (lldb) p output; (CounterResult *) 0x00000005a72a2336; (lldb) p duplicateBitArray[hashBinElement]; (unsigned char) '\x01'; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060:1006,variab,variable,1006,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060,1,['variab'],['variable']
Modifiability,"@martin-steinegger I can confirm that on Windows I get the same result you.; However, on Linux I get -36 and convertalis takes a suspiciously long time:. ```; mmseqs convertalis a b aln2 aln2.tsv --format-output ""query,target,raw"" --gap-open 3 --gap-extend 2 --search-type 3; convertalis a b aln2 aln2.tsv --format-output query,target,raw --gap-open 3 --gap-extend 2 --search-type 3 . MMseqs Version: 	0e3fbac011481fd6291b92a0b48adce98fc0f007; Substitution matrix 	blosum62.out; Alignment format 	0; Format alignment output	query,target,raw; Translation table 	1; Gap open cost 	3; Gap extension cost 	2; Database output 	false; Preload mode 	0; Search type 	3; Threads 	12; Compressed 	0; Verbosity 	3. [=================================================================] 100.00% 0.01 eta -; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 36s 386ms; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491440328:250,extend,extend,250,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491440328,2,['extend'],['extend']
Modifiability,"@martin-steinegger Thanks for the answer!; Intuitively, I've already tried running your latest suggested command:; `mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln"" --gap-open 3 --gap-extend 0`. However, no output file is generated (in this case, `alnRes.txt`) when the gap options are passed to convertalis. As for the warning, I am quickly testing things on my PC, but the usually I will run this for bigger datasets on a Linux machine. I will test on Linux as well to see if there is any difference. EDIT - On Linux:; `5316 Aborted (core dumped) mmseqs convertalis seqsDB revDB alignDB alnRes.txt --search-type 3 --format-output ""query,target,raw"" --gap-open 3 --gap-extend 1`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491344481:257,extend,extend,257,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491344481,2,['extend'],['extend']
Modifiability,"@martin-steinegger Thanks, I appreciate how quickly this was solved!; Just a quick question, with options such as `--gap-open 3 --gap-extend 2`, I am getting negative scores. What does this mean? I don't think that it's mentioned in the documentation. Since these are lower than the defaults shouldn't the scores be higher (also it's the first time I'm seeing negative scores)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491379386:134,extend,extend,134,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491379386,1,['extend'],['extend']
Modifiability,@matgachet Clustering algorithms have an exponential number of possibilities to cluster the connectivity graph. Therefore a change of variables (i.e. input order) affects the outcome of the clustering. We can only guarantee that the clustering is consistent between multiple runs of MMseqs2 with the same parameters (including input).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/115#issuecomment-423111623:134,variab,variables,134,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/115#issuecomment-423111623,1,['variab'],['variables']
Modifiability,"@milot-mirdita noticed that the interactive progress bar could be a problem, in your case it produced at 13GB output. You can turn of the interactive progress bar by setting the environment variable to TTY=0.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-510545621:190,variab,variable,190,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-510545621,2,['variab'],['variable']
Modifiability,"@milot-mirdita — Thank you for the reply. . > The --global-alignment parameter is really badly named and does something unrelated for normal searches. We really should remove it. Ah ok, that's good to know. > Either opal or parasail might serve as the base for the implementation. If you are interested in contributing this feature we could help guide you through. Thank you for the references and the offer to assist me in contributing. Currently my language comfortability extends only to Python and Rust, so it'd be a stretch for me at the moment. I don't want to close this issue in the case you want to keep it open to consider down the line, but I consider it addressed. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518761178:475,extend,extends,475,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518761178,2,['extend'],['extends']
Modifiability,"A quick comment, in case it should help other users in a similar situation: it took me a while to understand why the performance of mmseqs2 search speed was at least an order of magnitude slower on our compute cluster than it was on a single server. It turns out the UniRef90 target DB index file with sufficient split (16) to accommodate the modest node RAM (32GB) was over 200GB in size and therefore too large to fit on the limited node local disks, so it stayed on the network shared disk bay (nonetheless with reasonable Infiniband 40Gb/s connection to the nodes). With such a configuration the mmseqs2 search jobs on the nodes were endlessly I/O bound, using a ~20% fraction of a core instead of the 16 cores available. As soon as I deleted the target DB index files (_sk7_), the mmseqs2 search jobs distributed on the cluster nodes performed again really well!; So in a nutshell, I would recommend not using pre-indexed DB files on a compute cluster when these large files can't reside on a local disk, and instead use on the fly indexing which of course induces a significant overhead, but orders of magnitude less significant than the actual index file access on shared network storage. And of course this on the fly indexing overhead becomes less important as the query DB gets larger :) With large query DBs, I'm very impressed by the speed of (non MPI) distributed mmeseqs on our modest cluster (whilst providing excellent sensitivity of course)!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252239392:582,config,configuration,582,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252239392,1,['config'],['configuration']
Modifiability,"BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 2204542403 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 2.20B 2h 9m 12s 463ms; Process file into 17 parts; Generate k-mers list for 1 split; Generate k-mers list for 2 split; Generate k-mers list for 3 split; Generate k-mers list for 4 split; Generate k-mers list for 5 split; Generate k-mers list for 6 split; Generate k-mers list for 7 split; [=================================================================] 2.20B 32m 39s 205ms; Sort kmer 0h 0m 26s 313ms; Sort by rep. sequence 0h 0m 4s 966ms; Generate k-mers list for 8 split; [=================================================================] 2.20B 33m 28s 924ms; Sort kmer 0h 0m 26s 546ms; Sort by rep. sequence 0h 0m 5s 354ms; Generate k",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:4033,extend,extendable,4033,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['extend'],['extendable']
Modifiability,Can you try to remove the precomputed index? It seems to have been generated by a different version than the one you use to run. You can also set the MMSEQS_IGNORE_INDEX environment variable to ignore the precomputed index during the run. Would it be possible to upload the query/target set that is crashing?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1218765170:182,variab,variable,182,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1218765170,1,['variab'],['variable']
Modifiability,Could you please update your version and recreate the index there was a bug in this version. ; If the bug still persists please could you please send us the debug backtrace? ; To debug first compile MMseqs2 in debug mode. cmake -DCMAKE_BUILD_TYPE=Debug .. ; make . And then run the alignment with gdb . gdb --args mmseqs align tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 tmp/18071041534032520912/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 17702628 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 15 -v 3. After the crash just type . bt,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-437061143:770,extend,extend,770,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-437061143,1,['extend'],['extend']
Modifiability,"Could you run only the last module call in a debugger?; ```; gdb --args mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 32 --compressed 0 -v 3; ```. Then wait for a prompt and type `r` for run and then once it crashes type `bt` or backtrace and copy the output here. Using a newer version might also help, though I don't see any relevant changes in `convertalis` since the commit you used.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878294704:444,extend,extend,444,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878294704,1,['extend'],['extend']
Modifiability,"Currently still no, however I just added an environment variable to prohibit MMseqs2 to create split databases. ; If you `export MMSEQS_FORCE_MERGE=1` split databases will not be produced anymore. This might slow down some intermediate steps somewhat though. I might also build a module to merge databases when I have time.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/362#issuecomment-734828336:56,variab,variable,56,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/362#issuecomment-734828336,1,['variab'],['variable']
Modifiability,"Dear author,; I am working a NR annotation for a large number of samples, and I find MMseq2 is a better software. So I would like to ask whether I can run faster together or one by one, My server configuration: CPU 144 and memory 500G.; All cat together: 48 G; One is ~200 M",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/523:196,config,configuration,196,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/523,1,['config'],['configuration']
Modifiability,"Disregarding how much biological sense it makes, would you mind rerunning the `clusthash` workflow above with the latest commit? I refactored some code and want to know if it improved the performance. Also the crash in `result2flat` was probably because of the wrong input database (clusterDB instead of DB_clu_rep). It should be:; ```; mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 clusterDB scafs_reps.fasta --use-fasta-header; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570632233:131,refactor,refactored,131,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570632233,1,['refactor'],['refactored']
Modifiability,"Do you have a receipt for running MMseqs2 using MPI and slurm? I'm trying various strategies but some return errors, some spawn much too many threads on nodes (probably to my lack of expertise here). Did you run the program on cluster?. I have, let's suppose, 2 nodes, 24 threads each (not counting masternode of course). I'd like to use both nodes for clustering. I run the following on masternode:. ```; RUNNER=""mpirun -np 1""; salloc -N 2 mpirun mmseqs cluster nr70_rep nr60 tmp --min-seq-id 0.6 --threads 24; ```; What is the meaning of RUNNER variable here? Where should it be set? On master? On each node? I guess MMseqs2 itself manages further the sub-tasks so I have no intuition how to make it work with slurm. Thank you for any advice here.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/70:547,variab,variable,547,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/70,1,['variab'],['variable']
Modifiability,"Do you have the tmp directory still? If you could run `swapdb` in a debugger that would be very helpful:. ```; gdb --args mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; ```. Then once you get a prompt enter `r` (for run) and press enter. Once it crashes enter `bt` (for backtrace) and press enter. ; Please copy the output and paste it here.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762278641:593,extend,extend,593,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762278641,1,['extend'],['extend']
Modifiability,"E_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salvocos/tmp/test_sonicpara/mmseqs2_src/build; ```; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 40 CPUs 500Gbytes of shared memory; ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fpu_exception	: yes; cpuid level	: 15; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer xsave avx f16c rdrand lahf_lm abm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:13115,Config,Configuring,13115,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,1,['Config'],['Configuring']
Modifiability,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460:373,portab,portable,373,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460,2,['portab'],['portable']
Modifiability,"For MPI you have to compile MMseq2 yourself with MPI development headers/libraries installed and `cmake -DHAVE_MPI=1 ...`. The `-MPI` version suffix on any MMseqs2 module call will show up if you compiled it correctly. Then you have to define one environment variable `RUNNER` that contains your MPI runner call. E.g.:; ```; export RUNNER=""mpirun --pernode; ```; Make sure to start only one MPI process per compute node (`--pernode` parameter in this case). The parallelization within a node still happens over OpenMP. . MMseqs2 workflows (search, cluster, ...) will automatically use the `$RUNNER` environment variable to parallelize modules that support it (e.g. `prefilter`, `align`, ...). . If you call MMseqs2 modules directly (e.g. again `prefilter`) you have to do a normal MPI call:; ```; mpirun --pernode mmseqs prefilter ...; ```. We don't really have a list of MPI enabled MMseqs2 modules, except for looking in the code for modules that call `MMseqsMPI::init`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/163#issuecomment-462771446:259,variab,variable,259,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/163#issuecomment-462771446,2,['variab'],['variable']
Modifiability,"GAFDIW; CARHDGSGEMDTITWGPIYYYMDVW; CAIYGYYYYGLDVW; CARTTWGTWIQAWYFDIW; CARLTFGGSGSYYFYYNGMDVW; CAKLLGSGITLDNDAFDIW; CARSPPASYYNPSTGYFDYW; CARRGNYYDSKNWFDPW; CAHRAVILNFDHW; CARDPYDLYGDYGGTFDYW; CAKEGGSGSLRYYYYGMDVW; CAREDYYGSGSLVDPYYYYRMDVW; CATSTAVAGTPDLFDYYYGMDVW; CARGWGWGAVAGRAEYYFDYW; CARDWDYDILTGSWFGAFDIW; CARDQRQFQLLGRFGWFDPW; CARELFTAVAGKGGIDYW; CARGWYFDYW; CARSSSRGFDYW; CARIVLGASGTYPSPGFDPW; CARIPGWDRGTDRNWNDDW; CAKDSRSGIAGVDAFDIW; CARTYSFDSSGYYYDYW; CARDQDSGYPTYYYYYMDVW; CARAFYDSNWSVGSYFDSW; CARDSGGNYGDSYFDYW; CAKDVRYCSSTSCYFSAFDIW; CARDLAGVPAALGCWFDPW; CARGGGSYYYWFDPW; CVRDLALFEVVIQQGVW; CARVQRYYPDSSGFYGRRFDIW; CAHNRFQYCSSTTCYTLLPFDYW; CARSGGGSYRGPFDYW; CARRRSSSRYSSGWYMYYYYMDVW; CAKEGRPSDIVVVVAFDYW; CARSTSGSYYYGMDVW; CARDSPFSALGASNDYW; CAKDFGGDNTAMVEYFFDFW; CVRDYGDFYFDYW; CARADPYQLLGQHYYYGMDVW; CARAPLFPTGVLAGDYYYYGMDVW; CAKDRTAVFLFFGLGDAFDIW; CASSSGYLFHSDYW. ## MMseqs Output (for bugs). ```; search //app/database/sequences/sequences //app/database/sequences/sequences; DB //app/clustering/sequences/sequences_output /tmp --gap-open nucl:5,aa:2 --gap-extend nucl:5,aa:0. MMseqs Version: ad5837b3444728411e6c90f8c6ba9370f665c443; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:2; Gap extension cost nucl:5,aa:0; Zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:2361,extend,extend,2361,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,1,['extend'],['extend']
Modifiability,"GCC should not be necessary. Clang works fully in all kinds of configurations.; We introduced our own env variable `MMSEQS_NUM_THREADS` to limit threads globally if `--threads` cannot be (conveniently) set. I limited my VM to 2GB and couldn't get it to crash in the same way during `SLICEPROFILE` (the OOM killer always killed it, it didn't crash in posix_memalign). How exactly did you compile it when it hang with SSE?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868879967:63,config,configurations,63,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868879967,2,"['config', 'variab']","['configurations', 'variable']"
Modifiability,"HI, I am getting some memory errors when running the cluster module. The amount of memory I have on my cluster is 100GB and the number of threads is 8. When I run the cluster command as below. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/238:837,extend,extendab,837,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238,1,['extend'],['extendab']
Modifiability,"Having multiple cpu flags enabled is valid, so we should use if instead of elsif. Otherwise only the first `HAVE_*` variable is actually respected. e.g. before this change we get this on Gentoo:; ```; /usr/bin/x86_64-pc-linux-gnu-g++ -march=native -O2 -pipe -frecord-gcc-switches -Wl,-O1 -Wl,--as-needed -Wl,--defsym=__gentoo_check_ldflags__=0 -rdynamic -fsigned-char -mavx2 -mcx16 -Wa,-q -mcx16 -std=c++1y -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm -Wl,-Bstatic -lzstd lib/microtar/libmicrotar.a -Wl,-Bdynamic -lz -lbz2 && :; ```. i.e. only avx2 is respected, sse2/4 is ignored. After change we get:; ```; /usr/bin/x86_64-pc-linux-gnu-g++ -march=native -O2 -pipe -frecord-gcc-switches -Wl,-O1 -Wl,--as-needed -Wl,--defsym=__gentoo_check_ldflags__=0 -rdynamic -fsigned-char -mavx2 -mcx16 -Wa,-q -msse4.1 -mcx16 -msse2 -std=c++1y -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm -Wl,-Bstatic -lzstd lib/microtar/libmicrotar.a -Wl,-Bdynamic -lz -lbz2 && :; ```. https://github.com/gentoo/sci/pull/1143. Signed-off-by: Andrew Ammerlaan <andrewammerlaan@gentoo.org>",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/533:116,variab,variable,116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/533,1,['variab'],['variable']
Modifiability,"Having problems with this currently. Normal output from mmseqs cluster is. > MMseqs Version: 	8c0c7fb86ce154b236d6fe294811de3b09850fba; > Sub Matrix 	blosum62.out; > Alphabet size 	13; > Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (4160 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > Time for fill: 0 h 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Time for processing: 0 h 0 m 0s; > Rescore diagonals. However, I get the following error when there are some identical sequences:. > MMseqs Version: 	8c0c7fb86ce154b236d6fe294811de3b09850fba; > Sub Matrix 	blosum62.out; > Alphabet size 	13; > Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (3200 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > ~/tmp/2230240821590219627/linclust/109119296912",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282:409,extend,extendable,409,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282,1,['extend'],['extendable']
Modifiability,"Hello! ; I am trying to understand how exactly are bit scores and E-values calculated. I found the formula in [The Statistics of Sequence Similarity Scores](https://www.ncbi.nlm.nih.gov/BLAST/tutorial/Altschul-1.html) and noticed that besides query and target lengths (n, m), it depends on Lambda and K constants, which are tied to the used substitution scores and gap penalties. I found the function `computeEvalue()` https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/src/util/extractdomains.cpp#L46-L50. I can see those constants are hardcoded, which stands in contradiction to what is described in the document above. Where are those values coming from? I found they are present in Table 1 in [Altschul, S. F., & Gish, W. (1996). [27] Local alignment statistics. Computer Methods for Macromolecular Sequence Analysis, 460–480. doi:10.1016/s0076-6879(96)66029-7 ](https://doi.org/10.1016/S0076-6879(96)66029-7), but not in the same row.; ; For bit score calculation https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/lib/alp/sls_alignment_evaluer.hpp#L159-L162; those are variables indeed, but I had trouble determining how are they set are how they are changing. It it happening here?; https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/src/alignment/EvalueComputation.h#L48. Thanks in advance for the help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/731:1141,variab,variables,1141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/731,1,['variab'],['variables']
Modifiability,"Hello,. ## Expected Behavior; Output clustering results.; ## Current Behavior; Segmentation in linclust.sh; ## Steps to Reproduce (for bugs); ```; mmseqs createdb seq.fa db/dbclust; mmseqs linclust db/dbclust clust_result tmp --max-seq-len 30000000; ``` ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=====================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:742,extend,extendable,742,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['extend'],['extendable']
Modifiability,"Hello,. I'm trying to run the search algorithm on a database comprised of over 20k sequences against the uniref100 db. This is the command I'm using and the version, followed by the error after approx. 18 minutes in the run. ##. search ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --split-memory-limit 150G. MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b. mem_align could not allocate memory.; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/3121500954244133633/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; Error: Alignment died. ##. I've tried increasing the memory, thinking this could be the issue, but so far the problem persists. Any help is appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/510:1112,extend,extend,1112,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/510,1,['extend'],['extend']
Modifiability,"Hello,. My conda environment is as follows. active environment : ClusterEnv; active env location : /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv; shell level : 2; user config file : /home/sanyalab/.condarc; populated config files : /home/sanyalab/.condarc; conda version : 4.10.1; conda-build version : 3.18.9; python version : 3.7.4.final.0; virtual packages : __linux=2.6.32=0; __glibc=2.12=0; __unix=0=0; __archspec=1=x86_64; base environment : /mnt/common/rh6/annotate/Anaconda3 (writable); conda av data dir : /mnt/common/rh6/annotate/Anaconda3/etc/conda; conda av metadata url : https://repo.anaconda.com/pkgs/main; channel URLs : https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /mnt/common/rh6/annotate/Anaconda3/pkgs; /home/sanyalab/.conda/pkgs; envs directories : /mnt/common/rh6/annotate/Anaconda3/envs; /home/sanyalab/.conda/envs; platform : linux-64; user-agent : conda/4.10.1 requests/2.22.0 CPython/3.7.4 Linux/2.6.32-696.30.1.el6.x86_64 rhel/6.9 glibc/2.12; UID:GID : 101430:237; netrc file : None; offline mode : False. MMseqs installs ok (I think). However, I get a GLIBC error when running `mmseqs --help` like below. `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`. Please advice what to do. Thanks; Ab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/461:173,config,config,173,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461,2,['config'],['config']
Modifiability,"Here is the gdb outputs:. $ gdb --args mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...(no debugging symbols found)...done.; (gdb) r; Starting program: /ebio/abt6_projects8/1001g_plus/code/Programs/miniconda3/envs/MMseqs2/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --com",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:1021,config,configuration,1021,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840,2,['config'],['configuration']
Modifiability,"Here it is. I hope it is more informative:. gdb --args mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs/bin/mmseqs...done.; (gdb) r; Starting program: mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:537,extend,extend,537,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473,2,"['config', 'extend']","['configured', 'extend']"
Modifiability,"Here's the output from that search job:. ```; align /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search/seqs17_db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/pref_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 1 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score only; Query database size: 6526 type: Aminoacid; Target database size: 41195879 type: Aminoacid; Calculation of alignments; [=================================================================] 7.00K 0s 8ms; Time for merging to aln_0: 0h 0m 0s 9ms. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 3s 593ms; align /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/profile_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/pref_1 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 1 --add-self-ma",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203:807,extend,extend,807,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203,1,['extend'],['extend']
Modifiability,"Here's the output from the ASan run:. ```; ./build/src/mmseqs result2profile \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 \; > --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 \; > --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 \; > --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. MMseqs Version: 	a6cab565c98376623e82c3a04d186219d4c2f10c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	1e-05; Mask profile 	1; Profile E-value threshold 	1e-05; Compositional bias 	1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:786,extend,extend,786,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245,1,['extend'],['extend']
Modifiability,"Hi @milot-mirdita ,. I found this 1046081 in our targetDB.lookup file, which looks like this:. ```; >grep 1046081 targetDB.lookup; 1046081	A0A0U2C0X9	0; ```. I wondered if the new version of mmseqs expects this file to be in a different configuration? Like maybe no row number, but directly ""A0A0U2C0X9""? Or what format of the ""legal taxonomy node"" it looks for?. Thank you!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759696735:237,config,configuration,237,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759696735,1,['config'],['configuration']
Modifiability,"Hi @milot-mirdita, @sanyalab,. > Maybe it works if you explicitly also add the conda-forge channel:; > ; > ```; > conda install -c conda-forge -c bioconda mmseqs2; > ```. Yes, this is exactly what is needed. Ideally, one would have the channel configuration set as described in https://bioconda.github.io/user/install.html#set-up-channels. > Your kernel/libc versions are very old. I am surprised that conda runs at all. We (Bioconda and conda-forge) currently support CentOS 6 (i.e., glibc 2.12, Linux 2.6.32 (w/ RHEL patches)) as the oldest supported system. We'll move to CentOS 7 in the future, but had/needed to delay that move because some of our users still use CentOS/RHEL 6. Due to the CentOS 8 Linux <> CentOS 8 Stream debacle this move has been delayed further.; (Read: At some point, maybe in half a year or so (no date set yet), Bioconda/conda-forge may build packages that would require you, @sanyalab, to run on an updated system.). > These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. The libstdc++/libgomp didn't come from `conda-forge` but most likely from `defaults`/`pkgs/main` which have packages provided by Anaconda. Anaconda started to compile against CentOS 7 (i.e., glibc 2.17) at some point (but in the meantime they also noticed customers still rely on CentOS 6). In any case, using `-c conda-forge -c bioconda` (or having those two in the Conda configuration beforehand) will yield glibc 2.12 compatible libstdc++/libgomp from `conda-forge`. ----; Overall, this isn't and upstream MMseqs2 issue but purely downstream and can be remedied by using the Conda channel order recommended in the Bioconda docs. Cheers,; Marcel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999:244,config,configuration,244,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999,2,['config'],['configuration']
Modifiability,"Hi! I also have this problem with slow searches after loading the DB to memory. I have 135,301,051 sequences in the targetDB (uniref90) and so far only trying to use one search sequence. I am using 40 threads and have more memory than the estimated memory consumption. I am using -s 1 and --db-load-mode 3, after doing touchdb. The database was automatically divided 17 splits. In 10 mins, the prefiltering step did not even finish with the first split. Is this the expected behavior? Is it only for the 1st sequence that takes too long? Do you have any suggestion to speed up the search?. The extended prefilter command:; `prefilter targetDB /vol/ek/share/alphafold/databases/uniref90/uniref90.idx /dev/shm//6569854898554735840/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 3 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 1.0`. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-896539468:594,extend,extended,594,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-896539468,1,['extend'],['extended']
Modifiability,"Hi!. I copied the tutorial from the wiki into a Jupyter notebook, and configured binder to be able to run it. Here is an example: [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/luizirber/MMseqs2/tutorial_in_binder?filepath=tutorial%2Ftutorial.ipynb). ## Notes. - I'm building MMseqs2 from master, but you can also pick a specific tag to put in the binder link. ## TODO. - [ ] Link in README.md? (or at least back in the wiki?); - [ ] Tutorial from wiki failed for me because `--report-mode` is missing in the bioconda package?; - [ ] Preload data during the `postBuild` step in binder? Not sure about this one, since it changes the tutorial a bit, but avoids redownloading everything during runtime.; * Need to at least preload the taxdump, I think binder is blocking the download (is it an FTP link? [binder](https://github.com/binder-examples/getting-data/blob/4c9deceab9e4fbe095e704a3aa11671321e0584f/README.md#large-public-files) blocks FTP downloads...); - [ ] Clean up outputs (don't want to spoil what is the mystery pathogen!); - [ ] Fix path to logo in the intro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/250:70,config,configured,70,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/250,1,['config'],['configured']
Modifiability,"Hi,. I'm looking to use the UniRef90 sequences as representatives of gene clusters and then extend these clusters with additional sequences. Is it possible to take the set of ~153 million UniRef90 sequences and indicate that each one should be used as a cluster representative (i.e. if there are X input sequences, I want exactly X clusters)? Ideally, I'd avoid doing any actual clustering here since I've pre-selected the representatives. Thanks for any suggestions or insights you can provide. Cheers,; Donovan",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/671:92,extend,extend,92,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/671,1,['extend'],['extend']
Modifiability,"Hi,. I'm using MMseqs2 for all-vs-all alignments. As indicated in the user guide pdf, I'm using the bash script to perform a fake prefiltering step before aligning. That seems to work, as all alignments are computed, but the results are a bit unexpected:; ```; >Q8CD91; EERVVHWYFKLLDKNSSGDIGKKEIKPFKRFLRKKSKPKKCVKKFVEYCDMNNDKSITVQELMGCLGVTREEGKANTRKRHTPRGNAESSSSNRQPRKQG; >Q95JC9; GPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPPPGPSPPRPPPGPPPQ; ```; I didn't change much of the defaults; ```; mmseqs createdb --dbtype 1 dummyfasta.fasta seq_db; mmseqs_fake_prefilter.sh seq_db seq_db pref; mmseqs align seq_db seq_db pref align_db --alignment-mode 3 -e inf --min-seq-id 0.3; mmseqs convertalis seq_db seq_db align_db check_alignments.tab; ```. ```; query target fident alnlen mismatch gapopen qstart qend tstart tend evalue bits; Q8CD91 Q8CD91 1.000 100 0 0 1 100 1 100 1.707E-71 202; Q8CD91 Q95JC9 1.000 2 0 0 83 84 91 92 4.610E+01 9; Q95JC9 Q95JC9 1.000 100 0 0 1 100 1 100 7.088E-35 108; Q95JC9 Q8CD91 0.333 3 1 0 11 13 21 23 1.508E+02 7; ```; The second alignment's `fident` makes no sense to me. I understand that the e-value is high too, but I really want all pairwise % identities returned so I don't use it for filtering. Do I need to use a different configuration to make this work, or is mmseqs2 just not suitable for this all-vs-all identity task?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/498:1297,config,configuration,1297,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/498,1,['config'],['configuration']
Modifiability,"Hi,. This is more of an enhancement rather than an issue needing fixing, but it would be very helpful for newer users. ## Expected Behavior; I am using mmseq to search for short sequences against some reference database; In Blast, I just need to use -task ""blastn-short"", and it sets default params for me, and I can go explore from there.; I would like there to be a single flag like that in mmseqs, so that quick short sequence searches are possible. ## Current Behavior; Currently I need to set several options that I needed to discover manually, experimentally, because I could not find an easy pattern in docs. If I run mmseqs with default params, I get no results at all. It required me to set up a small project just to discover params that work for my sequence lengths, just to set up a baseline I can then work my way from. For example one of params setups I use: --spaced-kmer-mode 0 -k 8 -e 10. But this is for my case, the flag should probably check several things about input variables before deciding how to run the search. ## Environment; * MMseqs Version: fa4cd2a7ab15a2636b5c1615859a2491d6888300; * CPU: i7; * Operating system and version: Ubuntu 20.04.2 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/451:24,enhance,enhancement,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/451,2,"['enhance', 'variab']","['enhancement', 'variables']"
Modifiability,"Hi,; I was trying to generate the index files of a huge database. To be precise the nr database from blast. It creates the database without problems but when I run the createindex module mmseqs2, it stops with the error. Could not allocate entries memory in IndexTable::initMemory. I'm aware that this is not a bug but the computer I'm trying to run it on runs out of memory. It processes all sequences though and stops right at the end when the index files should have been written. . I still can search the resulting database, its just indexing the database on the fly. The computer has 64 Gb of memory, which is used in the process to 94% before swap is used. Now my question. ; Is there anything I can do, except of extending the hardware to make this work? ; In future I would set the -s parameter to 8 as this gives about the same sensitivity as blast?; Would this further increase the memory usage?. Thank you in advance. Christoph. ## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Could not allocate entries memory in IndexTable::initMemory. ## Context; createindex module fails . ## Your Environment; 64 bit latest debian linux ; 24 cpus; 64 gb of RAM; latest git hub version self compiled with cmake.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/49:720,extend,extending,720,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/49,1,['extend'],['extending']
Modifiability,"Hi. I have a question on outputting custom column headers. This [wiki page](https://github.com/soedinglab/mmseqs2/wiki#custom-alignment-format-with-convertalis) states: ; `Column headers can be added to the output with --format-mode 4`. I am using MMseqs2 Version: 13.45111 - when looking at the help text on command line, there does not seem to be a `--format-mode 4` available. Am I missing something?. More importantly: how can I generate column headers?. Thanks in advance. ```; mmseqs convertalis -h; usage: mmseqs convertalis <i:queryDb> <i:targetDb> <i:alignmentDB> <o:alignmentFile> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: align:; --gap-open TWIN Gap open cost [nucl:5,aa:11]; --gap-extend TWIN Gap extension cost [nucl:2,aa:1]; misc:; --format-mode INT Output format: 0: BLAST-TAB, 1: SAM, 2: BLAST-TAB + query/db length, 3: Pretty HTML [0]; --format-output STR Choose comma separated list of output columns from: query,target,evalue,gapopen,pident,fident,nident,qstart,qend,qlen; tstart,tend,tlen,alnlen,raw,bits,cigar,qseq,tseq,qheader,theader,qaln,taln,qframe,tframe,mismatch,qcov,tcov; qset,qsetid,tset,tsetid,taxid,taxname,taxlineage,qorfstart,qorfend,torfstart,torfend [query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits]. ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/572:723,extend,extend,723,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/572,1,['extend'],['extend']
Modifiability,"Hi; this is not an issue but a potential enhancement we discussed with @martin-steinegger.; We have a seed clustering database that is continuously updated with new sequences. The size of the DB is growing quite fast, and eventually, we will have problems storing and distributing it. As we have many redundant sequences in each cluster. We thought that having a module that takes a DB and then filters it based on a criterion similar to `--diff` from `result2msa` or `result2profile` would be very useful to keep only informative sequences in the clusters. Thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/316:41,enhance,enhancement,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316,1,['enhance'],['enhancement']
Modifiability,"I am trying to rewrite github.com/oxpig/anarci to use mmseqs and rust, but I am having some trouble with the converting HMM to mmseqs2 db part. I tried to generate the profile using ffindex_build and from the raw stockholm file, but using both paths at convertprofiledb I get a segmentation fault. ## Expected. Given this alpaca_H.stockholm file: ; ```stockholm; # STOCKHOLM 1.0; #=GF ID alpaca_H; Vicugna_pacos_IGHV3-1*01_IGHJ4*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------YDYWGQGTQVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ7*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------MDYWGKGTLVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ3*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------LDAWGQGTLVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ2*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------LEVWGQGTLVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ6*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------FGSWGQGTQVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ5*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------FEYWGQGTLVTVS-; Vicugna_pacos_IGHV3-3*01_IGHJ4*01 QVQLVESGG-GLVQAGGSLRLSCAASGRTF----SSYAMGWFRQAPGKEREFVAAISWS--GGSTYYADSVK-GRFTISRDNAKNTVYLQMNSLKPEDTAVYYCAA--------YDYWGQGTQVTVSS; Vicugna_pacos_IGHV3-3*01_IGHJ7*01 QVQLVESGG-GLVQAGGSLRLSCAASGRTF----SSYAMGWFRQAPGKEREFVAAISWS--GGSTYYADSVK-GRFTISRDNAKNTVYLQMNSLKPEDTAVYYCAA--------MDYWGKGTLVTVSS; Vicugna_pacos_IGHV3-3*01_IGHJ3*01 QVQLVESGG-GLVQAGGSLRLSCAASGRTF----SSYAMGWFRQAPGKEREFVAAISWS--GGSTYYADSVK-GRFTISRDNAKNTVYLQMNSLKPEDTAVYYCAA--------LDAWGQGTLVTVSS; Vicugna_pacos_IGHV3-3*01_IGHJ2*01 QVQLVESGG-GLVQAGGSLRLSCAASGRTF----SSYAMGWFRQAPGKEREFVAAISWS--GGSTYYADSVK-GRFTISRDNAKNTVYLQMNS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/741:15,rewrite,rewrite,15,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/741,1,['rewrite'],['rewrite']
Modifiability,"I get the same type of error when using the parallel MPI version with ""RUNNER=mpirun -np 8"" . I only encountered this error while testing. I ideally would like to use a cluster configuration but will not be able to if this error persists.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367:177,config,configuration,177,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367,1,['config'],['configuration']
Modifiability,I have fixed an issues with gap open and extend in nucl/nucl searches. However gap open and gap extend need to be greater 1.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491364222:41,extend,extend,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491364222,2,['extend'],['extend']
Modifiability,"I introduced the two additional splits because of https://github.com/soedinglab/MMseqs2/issues/338. Though that wasn't very effective to reduce peak memory use. . The error looks like a memory corruption though. I am not really sure how to reproduce the issue locally. ; Do you still have the tmp files? Could you try rerunning only the last step without the index:. ```; mmseqs result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; ```. The only change was to remove the `.idx` suffix after `mmseqs_tax.db`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814300855:1072,extend,extend,1072,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814300855,1,['extend'],['extend']
Modifiability,"I ran the final command (result2profile) in gdb with. ```; gdb --args /mnt/disks/kc-ssd/MMseqs2/build/bin/mmseqs result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3; ```. and got the following backtrace via `bt`. ```; (gdb) #0 0x0000555555a8d42b in tantan::Tantan::calcForwardTransitionAndEmissionProbs() (); #1 0x0000555555a8d865 in tantan::Tantan::calcRepeatProbs(float*) (); #2 0x0000555555a8bf8b in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (); #3 0x0000555555a8be7f in tantan::maskSequences(char*, char*, int, double const* const*, double, double, double, double, double, double, char const*) (); #4 0x000055555597de9b in PSSMMasker::mask(Sequence&, float, PSSMCalculator::Profile&) (); #5 0x00005555559f918b in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86_64-linux-gnu/libgomp.so.1; #7 0x00005555559f86d7 in result2profile(int, char const**, Command const&, bool) (); #8 0x00005555559f887c in result2profile(int, char const**, Command const&) (); #9 0x00005555557ea0d5 in runCommand(Command*, int, char const**) (); #10 0x00005555557eb00a in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214483106:680,extend,extend,680,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214483106,1,['extend'],['extend']
Modifiability,I reviewed the code and found multiple possible issues with the module for smaller datasets. I'll try to finish up the refactoring either later today or tomorrow. Thanks for the bug report. We are still doing the free sticker thing (see https://twitter.com/thesteinegger/status/1201076220957315074). If you want a set send me your address at milot at mirdita dot de.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570246191:119,refactor,refactoring,119,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570246191,1,['refactor'],['refactoring']
Modifiability,"I still can't manage to compile the code on our servers. I get many instances of this error (or similar):; ```; lib/simde/simde/x86/avx2.h:718:62: error: cannot convert ‘simd_int {aka __vector(4) long long int}’ to ‘__vector(4) long int’ for argument ‘1’ to ‘__vector(4) long int simde_mm256_cmpeq_epi8(__vector(4) long int, __vector(4) long int)’; ```. Any idea what's happening?. ```; $ gcc -v; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/5/lto-wrapper; Target: x86_64-linux-gnu; Configured with: ../src/configure -v --with-pkgversion='Ubuntu 5.4.0-6ubuntu1~16.04.12' --with-bugurl=file:///usr/share/doc/gcc-5/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-5 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-5-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-5-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-5-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu; Thread model: posix; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495:528,Config,Configured,528,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495,4,"['Config', 'config', 'plugin']","['Configured', 'configure', 'plugin']"
Modifiability,"I still get a positive score. mmseqs search a b aln2 tmp2 --search-type 3 -k 3 -s 7.5 -e INF --min-ungapped-score 0 -a --gap-open 3 --gap-extend 2; mmseqs convertalis a b aln2 aln2.tsv --format-output ""query,target,raw"" --gap-open 3 --gap-extend 2 --search-type 3. aln2.tsv. a0 b0 5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491436640:138,extend,extend,138,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491436640,2,['extend'],['extend']
Modifiability,"I think it would make sense to either write a separate MMseqs2 module (`mapkeys`, `rekey`, ... ?) ; or extend `concatdbs` to read in a mapping and reassign keys.; That way we could remove the `joinAndReplace` hack completely. Would you be interested to write that? I think extending `concatdbs` makes most sense.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/269#issuecomment-581452746:103,extend,extend,103,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/269#issuecomment-581452746,2,['extend'],"['extend', 'extending']"
Modifiability,"I think the issue might be with my OpenMPI installation more generally, as I cannot get their hello_c program to function properly. Do you suggest locally installing a separate local OpenMPI installation? I am having trouble figuring out how to configure everything so as to work properly. Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101#issuecomment-401577332:245,config,configure,245,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101#issuecomment-401577332,1,['config'],['configure']
Modifiability,"I was trying to use clusterupdate to update a clustering (DB_trimmed_clu) build from DB_trimmed (a library of proteins) to DB_clusterupdate from a extended version of the library (DB_new) with 2 sequences overlap. However, the program is not able to finish and I get the error:. mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; mv: rename tmp/input_* to tmp/search/input_*: No such file or directory. Although the program is able to continue until the merging of the updated clusterings (see log below). I also get a random number of warnings (depending on the execution) pointing out that I am using DNA, but I am not. For instance:. WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence. I attach the log of the cluster update call:. `mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp &> update_log.txt`. > Program call:; > DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:147,extend,extended,147,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['extend'],['extended']
Modifiability,I would love to know what is the substitution matrix configuration for nucleotides too. Which one is correct?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-2034719433:53,config,configuration,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-2034719433,1,['config'],['configuration']
Modifiability,I'll try to dig out the refactoring I had begun before the general chaos. I think I dealt with that and should be able to isolate the changes from the unfinished deleted sequences updating. Not quite sure on which computer it was though.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665659529:24,refactor,refactoring,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665659529,1,['refactor'],['refactoring']
Modifiability,"I'm examining the efficiency of template retrieval using different MMseqs2 configurations for MSA generation, which is crucial for identifying templates via hhsearch. Notably, the **ColabFold MMseqs2 detailed version** involves complex steps like search, expansion, alignment, and filtering, offering high accuracy but with significant time investment. On the other hand, the **MMseqs2 easy search version** simplifies the process, potentially reducing time but at a possible cost to accuracy. Given that my project processes a large volume of PDB chains (around 400k), understanding the trade-offs between these methods is essential. Key inquiries:; **Does the difference in MSA quality between the two MMseqs2 versions significantly affect template identification accuracy?; How can I optimize the MMseqs2 template search to balance efficiency and precision effectively?**; I appreciate any insights or experiences with these tools. <Colabfold mmseqs2>; `def mmseqs_search_monomer(; dbbase: Path,; base: Path,; uniref_db: Path = Path(""uniref30_2202_db""),; template_db: Path = Path(""""), # Unused by default; metagenomic_db: Path = Path(""colabfold_envdb_202108_db""),; mmseqs: Path = Path(""mmseqs""),; use_env: bool = True,; use_templates: bool = False,; filter: bool = True,; expand_eval: float = math.inf,; align_eval: int = 10,; diff: int = 3000,; qsc: float = -20.0,; max_accept: int = 1000000,; prefilter_mode: int = 0,; s: float = 8,; db_load_mode: int = 2,; threads: int = 32,; ):; #Run mmseqs with a local colabfold database set; #; #db1: uniprot db (UniRef30); #db2: Template (unused by default); #db3: metagenomic db (colabfold_envdb_202108 or bfd_mgy_colabfold, the former is preferred); ; uniref_db = Path(""/store/colabfold/db/uniref30_2202_db""); template_db = Path(""/store/colabfold/db/pdb70_220313""); if filter:; # 0.1 was not used in benchmarks due to POSIX shell bug in line above; # EXPAND_EVAL=0.1; align_eval = 10; qsc = 0.8; max_accept = 100000. used_dbs = [uniref_db]; if use_templa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:75,config,configurations,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['config'],['configurations']
Modifiability,"I'm not able to recreate this error with other data sets with the same configuration (i.e. adding the same data set + a completely separate outgroup). I was able to get concatdbs to run properly, so other runs have worked without issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-405613850:71,config,configuration,71,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-405613850,1,['config'],['configuration']
Modifiability,"I'm optimistic that this PR, a couple of typo fixes in the `README.md`, hasn't actually broken the build. I think the failed check is just due to an error in the package configuration of the Travis-CI instance in one of the Clang builds. I think that restarting that build will probably do the trick.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/44#issuecomment-326970054:170,config,configuration,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/44#issuecomment-326970054,1,['config'],['configuration']
Modifiability,"I've been using KOFAMSCAN but it takes forever because it writes a LOT of intermediate files. . I tried making a custom version but the cutoff logic was confusing and it's in a language I'm not familiar with. If you're taking requests, would you consider configuring a KOFAM database?. Also, unrelated question but is there a guide to tuning the MMSEQS parameters for Pfam that most similarly match the Hmmer results? I'd like to replace hmmer with mmseqs in my workflows.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/771:255,config,configuring,255,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/771,1,['config'],['configuring']
Modifiability,"I've been using the convertalis command this way:. `convertalis //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self_converted.tsv --format-output query,target,raw --gap-open 11 --gap-extend 1 --sub-mat /app/matrices/blosum62-parasail.out `. I've used convertalis with both the ""raw"" and ""bits"" fields. I've found that, using the approach above, the raw scores are approximately 13% higher on average than Parasail scores. However, by using the bits score and doubling it, I've found that the MMseqs2 score varies only from -3% to +3% of the parasail score. For some amino acids (D, F, G, N, P, Y) it gave the same value as Parasail did. So it seems like twice the bits score is close to parasail, but not quite identical. Below is the comparison between parasail scores, MMseqs2 2*bits, and MMseqs2 raw:. <html xmlns:v=""urn:schemas-microsoft-com:vml""; xmlns:o=""urn:schemas-microsoft-com:office:office""; xmlns:x=""urn:schemas-microsoft-com:office:excel""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=Excel.Sheet>; <meta name=Generator content=""Microsoft Excel 15"">; <link id=Main-File rel=Main-File; href=""file:///C:/Users/hr/AppData/Local/Temp/msohtmlclip1/01/clip.htm"">; <link rel=File-List; href=""file:///C:/Users/hr/AppData/Local/Temp/msohtmlclip1/01/clip_filelist.xml"">; <style>; <!--table; 	{mso-displayed-decimal-separator:""\."";; 	mso-displayed-thousand-separator:""\,"";}; @page; 	{margin:.75in .7in .75in .7in;; 	mso-header-margin:.3in;; 	mso-footer-margin:.3in;}; tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; br; 	{mso-data-placement:same-cell;}; td; 	{padding-top:1px;; 	padding-right:1px;; 	padding-left:1px;; 	mso-ignore:padding;; 	color:black;; 	font-size:11.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Calibri, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920204445:373,extend,extend,373,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920204445,1,['extend'],['extend']
Modifiability,"I've found out that we are not dealing well with deleted sequences.; Their presence in the clustering is resulting in the error you are seeing. I am refactoring some code, but it turns out to be a bit more work.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-587062019:149,refactor,refactoring,149,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-587062019,1,['refactor'],['refactoring']
Modifiability,"I've tried this:; ```; gdb --args ~/git/MMseqs2/build/bin/mmseqs kmermatcher tmp/14020823439690622662/input tmp/14020823439690622662/clu_tmp/13817195423418140833/linclust/5869534598694216613/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3; ```; and this is what I'm getting:; ```; Thread 1 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff68c1c01 in __GI___libc_free (mem=0x7ffff3152010) at malloc.c:3123; 3123	malloc.c: No such file or directory.; (gdb) bt; #0 0x00007ffff68c1c01 in __GI___libc_free (mem=0x7ffff3152010) at malloc.c:3123; #1 0x000055555569ea2c in DBReader<unsigned int>::close (this=0x7fffffffdd90) at /home/jose/git/MMseqs2/src/commons/DBReader.cpp:353; #2 0x000055555572f571 in kmermatcher (argc=32, argv=0x7fffffffe1b8, command=...) at /home/jose/git/MMseqs2/src/linclust/kmermatcher.cpp:479; #3 0x0000555555692a63 in runCommand (p=..., argc=32, argv=0x7fffffffe1b8) at /home/jose/git/MMseqs2/src/commons/Application.cpp:62; #4 0x000055555569328d in main (argc=34, argv=0x7fffffffe1a8) at /home/jose/git/MMseqs2/src/commons/Application.cpp:135; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136#issuecomment-441416213:374,extend,extendable,374,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136#issuecomment-441416213,1,['extend'],['extendable']
Modifiability,"Is there a way of merging them after the run is done? It’s not a big deal; it’s just a little less cluttered. I really appreciate the software. I’ve been using the taxonomy module extensively with impressive results. Thank you!. > On Dec 3, 2022, at 20:39, Milot Mirdita ***@***.***> wrote:; > ; > ; > You can set the MMSEQS_FORCE_MERGE environment variable (e.g. export MMSEQS_FORCE_MERGE=1). The split databases are, however, an IO optimization and not related to memory. Merging after every module invocation can slow MMseqs2 down considerably.; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABMXPRTD22DUCKCKPGRBEPLWLQOAZANCNFSM6AAAAAASRJ3OC4>.; > You are receiving this because you authored the thread.; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336345981:349,variab,variable,349,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336345981,1,['variab'],['variable']
Modifiability,"Is there documentation of the spec for SAM format used by `mmseqs`? I have aligned a bunch of protein sequences (both query and target are proteins) that resulted in >7.5M alignments and ; * all of them have 16 in column 2. What does this mean? ; * what is the sequence shown in column 10? Is it that of the target or the query? ; * given the target and query sequences, and the SAM file, is there a way to produce the alignment? I see the start coordinate for the target in column 4, and using the information in the CIGAR string it is feasible to come up with the aligned region of the target sequence (or query, based on the answer to the previous question) but what about the query (or target)? ; * is it possible to include the `MD:Z:` tag and/or the extended CIGAR format to include exact mismatch information? . I am using MMseqs2 Version: 14.7e284 and would be happy to provide example alignments, if needed.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/711:756,extend,extended,756,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/711,1,['extend'],['extended']
Modifiability,"Just got a hang here:; ...; [===============================================================> ] 98.28% 35.40[===============================================================> ] 98.28% 35.41[================================================================>] 99.28% 35.77[=================================================================] 100.00% 36.03K 3s 736ms; Time for merging to aln_swapped: 0h 0m 0s 23ms; 103611 alignments calculated; 72095 sequence pairs passed the thresholds (0.695824 of overall calculated); 2.001194 hits per query sequence; Time for processing: 0h 0m 3s 787ms; swapresults /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/DBPROFILE/targetannotation_profile /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/DBPROFILE/query /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/DBPROFILE/tmp/7458066464536510288/aln_swapped /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/DBPROFILE/results_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 10000 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 16 --compressed 0 --db-load-mode 0 -v 3",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869012776:1134,extend,extend,1134,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869012776,1,['extend'],['extend']
Modifiability,"Listing the gtdb.tar.gz It seems that removing the $ will not affect the number of files used in the tardb because all files are .faa, so I have edited the download.sh script and I am building the database in this way while a fix is released:. ```; /localscratch/users/latest # diff download.sh ../*bkp/download.sh; 6c6; < MMSEQS=mmseqs # add this or define it as an ENV variable.; ---; > ; 374,376c374; < #""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR} \; < ; < ""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa' ${THREADS_PAR} \; ---; > ""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR} \; ```. Also it seems to fail in servers with 512 GB of RAM due a some mapping of the files into memory, so I have used one with 2TB, it seems that the program is using. Using MMseqs2 Version: 92deb92fb46583b4c68932111303d12dfa121364",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120795799:371,variab,variable,371,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120795799,1,['variab'],['variable']
Modifiability,"MMseqs2 Version: GITDIR-NOTFOUND; © Martin Steinegger (martin.steinegger@snu.ac.kr). usage: mmseqs <command> [<args>]. Easy workflows for plain text input/output; easy-search 	Sensitive homology search; easy-cluster 	Slower, sensitive clustering; easy-linclust 	Fast linear time cluster, less sensitive clustering; easy-taxonomy 	Taxonomic classification; easy-rbh 	Find reciprocal best hit. Main workflows for database input/output; search 	Sensitive homology search; map 	Map nearly identical sequences; rbh 	Reciprocal best hit search; linclust 	Fast, less sensitive clustering; cluster 	Slower, sensitive clustering; clusterupdate 	Update previous clustering with new sequences; taxonomy 	Taxonomic classification. Input database creation; databases 	List and download databases; createdb 	Convert FASTA/Q file(s) to a sequence DB; createindex 	Store precomputed index on disk to reduce search overhead; convertmsa 	Convert Stockholm/PFAM MSA file to a MSA DB; msa2profile 	Convert a MSA DB to a profile DB. Format conversion for downstream processing; convertalis 	Convert alignment DB to BLAST-tab, SAM or custom format; createtsv 	Convert result DB to tab-separated flat file; convert2fasta 	Convert sequence DB to FASTA format; taxonomyreport 	Create a taxonomy report in Kraken or Krona format. An extended list of all modules can be obtained by calling 'mmseqs -h'. Bash completion for modules and parameters can be installed by adding ""source MMSEQS_HOME/util/bash-completion.sh"" to your ""$HOME/.bash_profile"".; Include the location of the MMseqs2 binary in your ""$PATH"" environment variable.; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; $ which mmseqs; ~/MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1/build/bin/mmseqs; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; MACOS 15",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:5897,extend,extended,5897,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,2,"['extend', 'variab']","['extended', 'variable']"
Modifiability,"MMseqs2 workflows (such as `cluster` or `search`) internally run scripts that call the mmseqs modules. `cluster` is a workflow that will execute `mmseqs prefilter` (among others).; If you set the `RUNNER` environment variable, it will call `$RUNNER mmseqs prefilter` instead. Only the prefilter (alignment, and some others) are actually MPI parallelized. It will not use `RUNNER` for non-MPI modules, these get executed only on the head node, while the other nodes remain idle (but pretty much all heavy tools are parallelized). I am not sure how SLURM works, but in our LSF (with openmpi), the call would look like this:; ```; RUNNER=""mpirun --npernode 1""; mmseqs cluster nr70_rep nr60 tmp --min-seq-id 0.6 --threads 24; ```. Also please double check, that the MMseqs2 version string contains a `-MPI` suffix. (I added that feature a few weeks ago.)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/70#issuecomment-369924377:217,variab,variable,217,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/70#issuecomment-369924377,1,['variab'],['variable']
Modifiability,"Martin did some refactoring to speed up slice search (now called exhaustive search) and get it to use less space during the run last week. However, in the end it will still need quite a lot of space. A more general question: Are you sure you need the slice/exhaustive search? A normal nucl-nucl search will be much much faster and use less disk space. If you want to keep using the exhaustive search:; You could use the `--compressed` parameter to get it to write zstd compressed output databases, that would help get the output down to a more manageable size. `--max-accept` kind of defeats the purpose of the exhaustive search, `--max-rejected` however could be very valuable to save time and disk space.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782444789:16,refactor,refactoring,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782444789,1,['refactor'],['refactoring']
Modifiability,NEWMAPDB variable missing in updatecluster,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103:9,variab,variable,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103,1,['variab'],['variable']
Modifiability,"No, I just saw an ad on Stack Overflow and was randomly looking for something I could improve. It’s not my project, so it’s not for me to judge, but just out of curiosity: why not use unique_ptr instead of manual memory management whenever ownership is clear? It’s safer, shorter (no delete) and has zero overhead. I get that you don’t want to use more questionable C++ features like inheritance, RTTI or exceptions, but zero-cost static GC is the most useful thing you can pick up in C++ coming from C. And range-based for just makes code more readable and thus easier to support. Iterators are out of place there, they’re from a [lower abstraction level](https://www.fluentcpp.com/2016/12/15/respect-levels-of-abstraction/) than the surrounding code. I’ll pass, but thanks :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/255#issuecomment-563504356:384,inherit,inheritance,384,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/255#issuecomment-563504356,2,['inherit'],['inheritance']
Modifiability,"Not personally. But we have used the server on two completely differently spec-ed servers and the performance is okay both time:. * 1x AMD Epyc 7713P / 2TB RAM / Debian 11 / AVX2 build (occasional fallback server); * 8x Intel Xeon E7-8891 v2 / 4TB RAM / CentOS / SSE41 build (main server). As you can see the two systems are very different. However, we never tried to run on top of any virtualization. That seems to be the only really different variable. (The RAM on both systems is overkill, but these are the servers we have). Could you try to run a SSE41 build and not an AVX2 build? I wonder if the virtualization is intercepting some AVX2 instruction and making everything slow. You can compile MMseqs2 with:; ```; cmake -DHAVE_SSE4_1=1 .......; make ......; ````",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1510719536:445,variab,variable,445,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1510719536,1,['variab'],['variable']
Modifiability,"Oh I am happy that you use `apply`. Please let us know if you have any problems.; Just for the record, if some other user have a similar problem. ; `Apply` can be used using MPI with the `RUNNER` variable but can also use all threads on single machine.; Information how to use `apply` can be found here https://github.com/soedinglab/mmseqs2/wiki#how-to-run-external-tools-for-each-database-entry",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/113#issuecomment-419046641:196,variab,variable,196,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/113#issuecomment-419046641,1,['variab'],['variable']
Modifiability,"Oh, great to hear that you could find parameters! I would be interested how you benchmark and what kind of parameters you used in the end. What do you mean by controls? It would be easy to include gap open and extend costs to MMseqs2. But I think it would make more sense if the gap costs depends on the diversity of the profiles. More diverse profiles need lower gap open and extend costs compared to less divers once. So one global parameters might not fit all profiles equally. This is still an open point. We do not explicitly encode the iterations in the results. But we append hits after each iteration to the previous results. So you could recognize iteration changes by comparing the e-value to previous hits. A lower e-values compared to the previous hits indicates a new iteration.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/106#issuecomment-407427261:210,extend,extend,210,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/106#issuecomment-407427261,2,['extend'],['extend']
Modifiability,"Okay I am not sure how to reproduce the issue. It doesn't crash here. ; Does it crash consistently? . Can you please repeat only the linclust call with the same tmp files:; ```; mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707:1049,extend,extend,1049,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707,2,['extend'],"['extend', 'extendable']"
