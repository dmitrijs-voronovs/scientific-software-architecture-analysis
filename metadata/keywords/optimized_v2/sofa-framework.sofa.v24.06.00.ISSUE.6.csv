quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Testability,"""Solve"" the discrepancy of the regression test of MeshSpringForceField.; Sorting the bboxes of the different levels needs a predicate (a boolean function) to compare two bboxes; https://github.com/fredroy/sofa/blob/master/Sofa/Component/Collision/Geometry/src/sofa/component/collision/geometry/CubeModel.h#L72. But it can happen that v1 == v2 ; and std::sort does not guarantee stability in these cases.; I suppose the result will depend of the implementation of the STL so it would explain the difference between msvc, gcc, clang/lin and clang/mac. By using stable_sort, we can get stability and thus the same results between the different platforms.; Questions are:; - stable_sort is a bit slower than sort https://stackoverflow.com/a/34668459 so set the stability as an option?; - the stability itself seems only relevant is some cases (scenes using penalities?). And this will certainly need to regenerate some regression files... (at least MeshSpringForceField). EDIT:; [ci-depends-on https://github.com/sofa-framework/Regression/pull/39]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3687:42,test,test,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687,3,['test'],['test']
Testability,"""real"" is replaced with its only possible type: float. float is assumed; by SparseGridTopology.cpp. Removing ""real"" avoids issues when some; templated functions have a template parameter named ""real"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1955:740,test,test,740,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1955,2,['test'],['test']
Testability,"""wire optimization"" and gives a big speed-up when used with the partial_solve of BTDLinearSolver (and not building matrices). This optimization was already in the LCPConstraintSolver and explain (but not totally) the big difference of speed for the scenes with LinearCC/BTD and unbuilt gaussseidel. Numbers from `BeamAdapter/examples/3instruments_collis.scn -g batch -n 5000` , all constraint solvers use unbuilt GS.; ```; (mu=0.1); LCP = [INFO] [BatchGUI] 5000 iterations done in 61.9292 s ( 80.7373 FPS).; GCS before = [INFO] [BatchGUI] 5000 iterations done in 261.396 s ( 19.1281 FPS); GCS after = [INFO] [BatchGUI] 5000 iterations done in 85.083 s ( 58.7661 FPS); ```; ```; (mu=0.0); LCP = [INFO] [BatchGUI] 5000 iterations done in 43.2622 s ( 115.574 FPS).; GCS before = [INFO] [BatchGUI] 5000 iterations done in 230.029 s ( 21.7364 FPS); GCS after = [INFO] [BatchGUI] 5000 iterations done in 68.9986 s ( 72.4652 FPS); ```. As for the simulation itself, the results are not exactly the same (even if visually, looks the same) between LCPCS or GCS; `regression step-by-step, 2000 steps`; ```; (mu=0.1); TOTALERROR: 3.18005; ERRORBYDOF: 0.00310931; ```; ```; (mu=0.0); TOTALERROR: 1.55088; ERRORBYDOF: 0.00154138; ```. But I cannot tell which one of the two (LCPCS or GCS) is the most ""precise"" 🤷. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4132:2014,test,test,2014,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4132,2,['test'],['test']
Testability,# CHANGELOG ; - [SofaDefaulttype] Add MapMapSparseMatrix multTranspose method with BaseVector. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/456:348,test,test,348,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/456,2,['test'],['test']
Testability,"# Problem; The configure step (and the generating step as well) became awfully slow on Windows.; After finding how to profile with CMake, we can find 3 slowing down parts with the vanilla set-up:. ![cmake0](https://user-images.githubusercontent.com/11028016/108479329-e30e7080-7295-11eb-9440-4571b63c3341.PNG); (trace after running the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Revie",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1837:769,test,test,769,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837,1,['test'],['test']
Testability,"# Purpose; For some reason, I stumbled upon a strange error where `EulerImplicitSolver` is no longer registered in the factory. It turns out that some `init...()` methods call are missing in `SofaComponentCommon`; Maybe this error arised on master because some includes directive have been cleaned, or some ; dependencies have been removed which were hiding this problem before. . # CHANGELOG; FIX; [SofaComponentCommon]; - Make sure `initComponentCommon()` method calls the init method of all the libraries that compose the package so that we are sure the `ObjectFactory` is well populated. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/488:845,test,test,845,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/488,2,['test'],['test']
Testability,"## ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True` compared to `MatrixProjectionMethod + areJacobiansConstant=True` before this PR. It's a speed up of x1.8. For the records, at the beginning of this series of enhancement (https://github.com/sofa-framework/sofa/pull/4443), the reduced diamond run at 44 FPS. Now it is 222 FPS = speed up x5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4552:2861,test,test,2861,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552,2,['test'],['test']
Testability,"## What; cxxopts is a header-only command-line parser library : https://github.com/jarro2783/cxxopts; Boost's program_options is bothersome and a bit overkill for what we do with it.; (and we want to go towards being able to compile SOFA without Boost one day). The API between them is quite similar but still different:; - value when adding parameter are std::string (instead of the type of the parameter); - implemented a callback system in ArgumentParser because cxxopts does not offer it (boost's name is ""notifier""); - when adding a new parameter boost is ""long_name,short_name"" whereas cxxopts is ""short_name,long_name"". More generally, I tried to hide most of the cxxopts use in ArgumentParser (previously there was a weird mix-up with boost), the only inconvenient place is when adding a new parameter. ## Notes; - Gui (and use of argumentparser) is really.... messy with static functions/variables and unsafe pointer uses here and there. This should be cleanup in the future.; - make SofaGUIGlut compile again even if not supported anymore (it was using boost program_options and I wanted to make it compile for the fun). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2263:1670,test,test,1670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2263,2,['test'],['test']
Testability,"## issofa attachconstraint. ### New features. ### Improvements; - AttachConstraint: add a position, velocity and response factor in order to correct the constraint. ; - AttachConstraint: Add constraint factor per pair of constraint points to release progressively the attach.; - AttachConstraint: needs an initialization of the data constraintFactor, size of this factor should be at least as important as the minimum of the indices. ; - Scenes: parameter constraintFactor is needed for the component in the scene. ### Cleans. ### Bugfixes. ### Moved files. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/501:809,test,test,809,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/501,2,['test'],['test']
Testability,## issofa_meshspringff. ### New features. ### Improvements; - MeshSpringForceField: add drawing of springs elongation . ### Cleans. ### Bugfixes. ### Moved files. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/497:414,test,test,414,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/497,2,['test'],['test']
Testability,## issofa_springff. ### New features. ### Improvements; - SpringForceField: enabled flag in SpringForceField::Spring ; - SpringForceField: make all Data public to be able to edit the springs info from other components ; - SpringForceField: fix duplicated member . ### Cleans. ### Bugfixes. ### Moved files . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/498:559,test,test,559,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/498,2,['test'],['test']
Testability,"### Description; This PR removes option to apply projective constraints during velocity and/or position propagation visitors, as it makes it unreliable to put projective constraints in child nodes (required when they apply on the DOFs but with a different/subset topology). All codes (solvers and animationloop) must now explicitly call projection operations/visitors before propagations when required (mostly after `OdeSolver::solve())`. This PR is changing the behavior as projective constraints because they are no longer applied at the end of Simulation::init(). To clearly make that visible to calling's code the propagate visitor was renamed to make sure existing codes fail at compilation time. ; To fix that in private/external repos should be easy:; - if projective constraints should not be applied, simply apply the rename to the visitor class; - if projective constraints should be applied, add a MechanicalProject???Visitor first, then rename the existing one. CHANGELOG for @guparan and @hugtalbot ; - [SofaKernel] Change the way all MechanicaVisitor apply projective constraints. This change is breaking the API aand external solver's code need to be updated (see #PR26). ; - ...to finish ....; ___________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [ ] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216:1408,test,test,1408,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216,1,['test'],['test']
Testability,"### New features; - UncoupledConstraintCorrection : add option to disable handling of topological changes for compliance vector; - Container : add accessor to the topology type; - SubsetMapping : add resizeToModel flag in SubsetMapping to enable resizing of the destination MechanicalState to the size of indices; - BaseContext : add new method getActiveMeshTopology to get relevant topology, taking `BaseMaping::sameTopology()` into account; - PointSetTopology : add some unit tests. ### Improvements; - each time a topological change sequence is detected in BarycentricMapperTriangleSetTopology the mapping is initialized; - PointSetTopologyContainer maintains a list of point indices, accessible through the data points; - Topology : Factorize the last method specific to each topological elements in data containers. ### Cleans; - MechanicalObject size and link to topology is now exposed as Data and Link, using the new getActiveMeshTopology() method. Set the link manually and/or set useTopology=""false"" to override. ### Bugfixes; - apply data container updates before mapping updates; - use existing parameter handleTopologyChange in SubsetMapping; - slightly cleanup topology change handling method for triangle mappers; - check of upper topology based on the emptiness of the upper container; - crash in `MeshTopology::init()` for non manifold meshes; - re-enable Propagate of topological changes inbetween triangle creation and removal in `TriangleSetTopologyModifier::addRemoveTriangles(),` as it is required in cases involving chains of topology mapping and topology data containers depending on each other . This is the re-opening of [previous issofa_topology pull-request](https://github.com/sofa-framework/sofa/pull/217). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break ex",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243:478,test,tests,478,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243,1,['test'],['tests']
Testability,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4462:689,test,tested,689,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462,2,['test'],"['test', 'tested']"
Testability,"### Problem. **Description**; Good morning,; I have a problem with @ScheiklP's sofa_env test code. When I try to run; `python3 sofa_env/scenes/controllable_object_example/controllable_env.py`; I get. Traceback (most recent call last):; File ""C:\SOFA\Lib\site-packages\numpy\core\__init__.py"", line 24, in <module>; from . import multiarray; File ""C:\SOFA\Lib\site-packages\numpy\core\multiarray.py"", line 10, in <module>; from . import overrides; File ""C:\SOFA\Lib\site-packages\numpy\core\overrides.py"", line 8, in <module>; from numpy.core._multiarray_umath import (; ModuleNotFoundError: No module named 'numpy.core._multiarray_umath'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\SOFA\Lib\site-packages\numpy\__init__.py"", line 144, in <module>; from numpy.__config__ import show as show_config; File ""C:\SOFA\Lib\site-packages\numpy\__config__.py"", line 4, in <module>; from numpy.core._multiarray_umath import (; File ""C:\SOFA\Lib\site-packages\numpy\core\__init__.py"", line 50, in <module>; raise ImportError(msg); ImportError:. IMPORTANT: PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE!. Importing the numpy C-extensions failed. This error can happen for; many reasons, often due to issues with your setup or how NumPy was; installed. We have compiled some common reasons and troubleshooting tips at:. https://numpy.org/devdocs/user/troubleshooting-importerror.html. Please note and check the following:. * The Python version is: Python3.10 from ""C:\Users\JetsLab\.pyenv\pyenv-win\versions\3.10.11\python3.exe""; * The NumPy version is: ""1.26.4"". and make sure that they are the versions you expect.; Please carefully study the documentation linked above for further help. Original error was: No module named 'numpy.core._multiarray_umath'. The above exception was the direct cause of the following exception:. Traceback (most recent call last):; File ""C:\sofa_env\sofa_env\scenes\controllable_object_example\controll",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5088:88,test,test,88,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5088,1,['test'],['test']
Testability,"### Problem. **Description**; I configure the sofa-cuda successfully, but when I generating it I get the error like this. ""CUDA_STANDARD is set to invalid value '17'"". **Steps to reproduce**; < LIST THE STEPS TO REPRODUCE YOUR PROBLEM HERE >. **Expected behavior**; < DESCRIBE WHAT YOU THINK SHOULD HAVE HAPPEN INSTEAD >. ---------------------------------------------. ### Environment. **Context**. - System: < ""Ubuntu 20.04"">; - CUDA 12.0; - Version of SOFA: stable branch; - State: < Build>. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3808:1205,Log,Logs,1205,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3808,1,['Log'],['Logs']
Testability,"### Problem. **Description**; I used to use the following node in my xml file but could not feel any forcefeedback on the haptic device when upgraded to sofa v21.06. The collision detection and collision response still works when haptic devices tools collide with other models in the scene.; And the same xml file worked well in sofa v19.12. _""LCPForceFeedback activate=""1"" forceCoef=""0.25"" tags=""PHANToM 2__omni""_. **Steps to reproduce**; An example scene file can be found here:. [TIPS_haptictool_gallbladder_v2106.txt](https://github.com/sofa-framework/sofa/files/7558079/TIPS_haptictool_gallbladder_v2106.txt). **Expected behavior**; The forcefeedback used to work well in sofa v19.12. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: v21.06.00 binaries; - State: Build directory. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. No Error outputs or suspicious outputs has been found. ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2487:1565,Log,Logs,1565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2487,1,['Log'],['Logs']
Testability,### Problem. **Description**; I've just tried to install last SOFA version with binaries. **Steps to reproduce**; Install SOFA with the .run files and add SofaPython3 plugin. **Expected behavior**; There is an error when I tried to add the plugin. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 22.04.1 LTS; - Version of SOFA: 23.06.00. ### Logs. ```txt. Plugin loading failed (/home/pchaillo/SOFA/v23.06.00/plugins/SofaPython3/lib/libSofaPython3.so): libpython3.8.so.1.0: cannot open shared object file: No such file or directory. ```; **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4159:388,Log,Logs,388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4159,1,['Log'],['Logs']
Testability,### Problem. **Description**; The MeshGmshLoader does not seem to handle latest gmsh format. Associated Forum post: https://www.sofa-framework.org/community/forum/topic/unable-to-load-mesh/. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10 + Ubuntu 18.04; - Version of SOFA: master branch + v21.06.00 binaries. **Command called**. ```txt. runSofa examples/Components/loader/MeshGmshLoader.scn. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [ERROR] [MeshGmshLoader(GmshLoader)] File 'sq.msh' finally appears not to be a Gmsh file. ```. File to test:; [sq.zip](https://github.com/sofa-framework/sofa/files/7372243/sq.zip),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2433:499,Log,Logs,499,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2433,2,"['Log', 'test']","['Logs', 'test']"
Testability,### Problem. **Description**; The same simulation scene can lead to significative differences when executed on different OS. **Steps to reproduce**; The regression tests currently show that `examples/Components/forcefield/MeshSpringForceField.scn` is such a scene.; The PR https://github.com/sofa-framework/sofa/pull/3035 introduces another scene. **Expected behavior**; The same result on all OS,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3036:164,test,tests,164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3036,1,['test'],['tests']
Testability,"### Problem. **Description**; This bug was first reported by @AlbanOdot in https://github.com/jnbrunet/caribou/issues/104. We have a component that opens a `ReadAccessor<Data<VecCoord>>` on a Mechanical Object position vector during the **init** stage of the scene. In the same callstack, the component will open another `ReadAccessor<Data<VecCoord>>` on the same MO position vector. The following small object can be taken as an example:. _Edit: I found out that the recursive ReadAccessor isn't even needed to reproduce the issue, simply having a component opening during init a read accessor on its own data, which parent is the MO vector, is enough._. ```c++; class TestComponent : public BaseObject {; public:; SOFA_CLASS(TestComponent, BaseObject);; using DataTypes = sofa::defaulttype::Vec3Types;; using VecCoord = DataTypes::VecCoord;; TestComponent() : d_position(initData(&d_position, ""position"", ""Position vector"")){}. void init() override {; Inherit1::init();; auto positions = ReadAccessor<Data<VecCoord>>(d_position);; test(positions.size());; }; void test(const sofa::Size & nb_of_nodes) {; auto positions = ReadAccessor<Data<VecCoord>>(d_position);; if (positions.size() != nb_of_nodes) {; std::cout << ""Just something to make sure the compiler compile this"" << std::endl;; }; }; private:; Data<VecCoord> d_position;; };; ```. The consequence will be that the MO object position vector won't be updated later on during time steps. However, if the same scene is run with a GUI, the problem disappears. The following scene can be taken as an example where a random displacement is imposed on a node before the time step, and the node position is printed afterwards. ```python; class Controller(Sofa.Core.Controller):; def __init__(self, MO):; super().__init__(); self.MO = MO. def onAnimateBeginEvent(self, _):; print(""\n\nonAnimateBeginEvent""); random_disp = np.random.normal(0, 1e-2, self.MO.position.value.shape); self.MO.position.value = self.MO.rest_position.value + random_disp; pr",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2761:670,Test,TestComponent,670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2761,4,"['Test', 'test']","['TestComponent', 'test']"
Testability,"### Problem. **Description**; Trying to build with SOFA_TRACY enabled on Ubuntu 23.04/gcc, got some errors when linking LinearSolver.Direct.; No such error with MSVC2022. Could be a bug from Tracy ? 🤔. **Steps to reproduce**; Enable SOFA_TRACY and TRACY_ENABLE on Ubuntu23.04 and gcc,. **Expected behavior**; Linking correctly 😅. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 23.04, gcc version 12.3.0 (Ubuntu 12.3.0-1ubuntu1~23.04); - Version of SOFA: master (https://github.com/sofa-framework/sofa/commit/22d783bb366fae979b31df6b22de60dde5a19d76). ### Logs. ```c++; /usr/bin/ld: Sofa/Component/LinearSolver/Direct/CMakeFiles/Sofa.Component.LinearSolver.Direct.dir/src/sofa/component/linearsolver/direct/SparseLDLSolver.cpp.o:(.data.rel.ro.local._ZZZN4sofa9component12linearsolver6direct15SparseLDLSolverINS_13linearalgebra35CompressedRowSparseMatrixMechanicalINS_4type3MatILj3ELj3EdEENS4_19CRSMechanicalPolicyEEENS4_10FullVectorIdEENS1_15NoThreadManagerEE17doAddJMInvJtLocalEPNS4_10BaseMatrixEPKNS4_12SparseMatrixIdEEdPNS2_23SparseLDLImplInvertDataINS6_6vectorIiNS6_16CPUMemoryManagerIiEEEENSM_IdNSN_IdEEEEEEENKUlRKT_E_clINS_10simulation5RangeIjEEEEDaSW_E26__tracy_source_location204[_ZZZN4sofa9component12linearsolver6direct15SparseLDLSolverINS_13linearalgebra35CompressedRowSparseMatrixMechanicalINS_4type3MatILj3ELj3EdEENS4_19CRSMechanicalPolicyEEENS4_10FullVectorIdEENS1_15NoThreadManagerEE17doAddJMInvJtLocalEPNS4_10BaseMatrixEPKNS4_12SparseMatrixIdEEdPNS2_23SparseLDLImplInvertDataINS6_6vectorIiNS6_16CPUMemoryManagerIiEEEENSM_IdNSN_IdEEEEEEENKUlRKT_E_clINS_10simulation5RangeIjEEEEDaSW_E26__tracy_source_location204]+0x8): undefined reference to `sofa::component::linearsolver::direct::SparseLDLSolver<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<sofa::type::Mat<3u, 3u, double>, sofa::linearalgebra::CRSMechanicalPolicy>, sofa::linearalgebra::FullVector<double>, sofa::component::linearsolver::NoThreadManager>::doAddJMInvJtLocal(s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4283:602,Log,Logs,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4283,1,['Log'],['Logs']
Testability,"### Problem. **Description**; runSofa does not propagate correctly the key pressed & release event because of the weird use of the the CTRL combination. . **Steps to reproduce**; ```python; import Sofa. class Test(Sofa.Core.Controller):; 	def __init__(self, *args, **kwargs):; 		Sofa.Core.Controller.__init__(self,*args, **kwargs). 	def onKeypressedEvent(self, event):; 		print(""KEY PRESSED"", event). 	def onKeyreleasedEvent(self, event):; 		print(""KEY RELEASED"", event). def createScene(root):; 	root.addObject(Test(name=""Hello"")); ```; Start a simulation and keep pressing CTRL+A key. It will print!; ```console; KEY PRESSED: {...}; KEY RELEASED: {...}; ... /// lot of repetition; KEY PRESSED: {...}; KEY RELEASED: {...}; ```. **Expected behavior**; It should print a single KEY PRESSED & KEY RELEASED.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3384:209,Test,Test,209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3384,2,['Test'],['Test']
Testability,"### Problem: Sofa crash when an Unicode string is used.; Here an example scene:. ``` python; # coding=utf-8; import Sofa. def createScene(node):; node.createObject('MechanicalObject', name=u""Éœùæ""); ```; With the current behavior, an Unicode string used as data is interpreted as a sequence. This causes some problems with path to files for example. ### Changelog. * In `Binding_BaseContext::pythonToSofaDataString:`, add unicode to string convertion and a warning message when PySequence_Check is true but the given PyObject is not a list.; * In `Binding_BaseData::SetDataValuePython` an unicode to string convertion too.; * And add a test. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/313:636,test,test,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/313,3,['test'],['test']
Testability,"### Problem; Hi,; I discovered a memory leak that seems to be connected to the collision detection pipeline / models. The scene contains 2 nodes with `MechanicalObject` and `PointCollisionModel`.; I repeatedly load and unload the scene, first with no collision models, then one collision model, and then two collision models.; -> each graph has 3 segments. ```python; import Sofa; import Sofa.Core; import Sofa.Simulation; from enum import Enum. class TestCase(Enum):; ONE_MODEL = 0; TWO_MODELS = 1; NONE = 2. class SimulationHandler:; def __init__(self):. self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, TestCase.NONE); Sofa.Simulation.init(self.root_node). def step(self):; Sofa.Simulation.animate(self.root_node, self.root_node.getDt()). def reload(self, case: TestCase = TestCase.NONE):. Sofa.Simulation.unload(self.root_node); self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, case); Sofa.Simulation.init(self.root_node). def createScene(root, case: TestCase):; plugins = [; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ]; for plugin in plugins:; root.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root.addObject(""DefaultAnimationLoop""); root.addObject(""DefaultPipeline""); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""DefaultContactManager""); root.addObject(; ""LocalMinDistance"",; alarmDistance=5.0,; contactDistance=0.5,; ). node_1 = root.addChild(""child_1""); node_1.addObject(""MechanicalObject"", position=[0, 0, 0] * 5). node_2 = root.addChild(""child_2""); node_2.addObject(""MechanicalObject"", position=[1, 1, 1] * 5). if case == TestCase.ONE_MODEL:; node_1.addObject(""PointCollisionModel""); elif case == TestCase.TWO_MODELS:; node_1.addObject(""PointCollisionModel""); node_2.addObject(""PointCollisionModel""); elif case == TestCase.NONE:; pass. return node_1, node_2. if __name__ == ""__main__"":; simulation = Simul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318:452,Test,TestCase,452,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318,4,['Test'],['TestCase']
Testability,"### Problem; I want to use SofaPython3, and refer to the [page](https://sofapython3.readthedocs.io/en/latest/content/Installation.html) to install. However, I have met some problems:; **Description**; < DESCRIBE YOUR PROBLEM HERE >. **Steps to reproduce**; < LIST THE STEPS TO REPRODUCE YOUR PROBLEM HERE >. **Expected behavior**; < DESCRIBE WHAT YOU THINK SHOULD HAVE HAPPEN INSTEAD >. ---------------------------------------------. ### Environment. **Context**. - System: < NAME AND VERSION - e.g: ""Windows 10"", ""Ubuntu 20.04"", ... >; - Version of SOFA: < INFOS ABOUT THE BRANCH OR BINARIES - e.g: ""master branch at commit 70bb123"", ""v21.06.00 binaries"", ... >; - State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4913:1462,Log,Logs,1462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4913,1,['Log'],['Logs']
Testability,"### Problem; running failing due to loading of plugins ; **Description**; Hi, tried both SOFA v22.06.00 and v23.06.00 versions, but not able to load Sofa.Component.UserInterface.ConfigurationSetting plugin, which is causing failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Can also track the conversation in original repo : https://github.com/ScheiklP/sofa_env/issues/31; **Steps to reproduce**; Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. **Expected behavior**. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: v23.06.00 binaries"". **Command called**. ```txt; python3 /home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py. ```. **Env vars**. ```bash; #################; --- sys.version ---; 3.8.10 (default, Jul 29 2024, 17:02:10) ; [GCC 9.4.0]; --- PATH ---; /home/sofa/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:288,log,log,288,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['log'],['log']
Testability,"### _or how to avoid calling applyJ/applyJT on non-mechanical-purposed mappings (mainly for visual mapping)_. A mapping is considered mechanical from a MechanicalVisitor POV if:. 1. isMechanical is true (i.e mapForces, mapConstraints and mapMasses is true). It looks logical but certain Visitors, especially MechanicalPropagateDxVisitor, just ignore this trait and just calls go through all the mappings anyway; https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/framework/Simulation/Core/src/sofa/simulation/mechanicalvisitor/MechanicalPropagateDxVisitor.cpp#L48-L54. 2. MechanicalPropagateDxVisitor is still called on (supposedly) non-mechanical mapping but applyJ() (more especially the implementation in Mappings), wont be called if the State does not store velocities. https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/framework/Core/src/sofa/core/Mapping.inl#L150-L163. _**In a nutshell, ultimately avoiding calling applyJ/applyJT means that the output of a mapping should not be a **MechanicalObject** (the only implementation of State that store velocities, AFAIK)**_. ---. It should be more clearer on why there are MechanicalVisitors which still calls mechanical functions on flagged non-mechanical mappings, i.e why the ignore flag is true for MechanicalPropagateDxVisitor in FreeMotionAnimationLoop for example. https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/Component/AnimationLoop/src/sofa/component/animationloop/FreeMotionAnimationLoop.cpp#L392",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4399:267,log,logical,267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4399,1,['log'],['logical']
Testability,"### runSofa crash . **Description**; runSofa crash when a texture file is not found by OglModel. **Steps to reproduce**; put a wrong filename or path into a textureName:; `<OglModel name=""VisualBody"" src=""@loader"" texturename=""../Material/textures/colorTest.jpg"" />`. **Expected behavior**; Error message and do not use the texture but normal default material rendering. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: master; - State: build version. ### Logs. ```; [ERROR] [OglModel(VisualBody)] Texture ""C:\projects\UnrealEngine\SOFA_test2\Plugins\SofaUE5\Content/Material/textures/colorTest.jpg"" not found; [ERROR] [Image] File C:\projects\UnrealEngine\SOFA_test2\Plugins\SofaUE5\Content/Material/textures/colorTest.jpg not found. ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::dump; sofa::helper::BackTrace::sig; seh_filter_exe; seh_filter_exe; _C_specific_handler; _chkstk; RtlRaiseException; KiUserExceptionDispatcher; sofa::gl::Texture::update; sofa::gl::Texture::init; sofa::gl::component::rendering3d::OglModel::initVisual; sofa::component::visual::VisualModelImpl::drawVisual; sofa::simulation::VisualDrawVisitor::processVisualModel; sofa::simulation::VisualVisitor::processNodeTopDown; sofa::simulation::VisualDrawVisitor::processNodeTopDown; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal; sofa::simulation::graph::DAGNode::doExecuteVisitor; sofa::simulation::DefaultVisualManagerLoop::drawStep; sofa::simulation::Simulation::draw; sofa::gui::qt::viewer::qgl::QtGLViewer::DisplayOBJs; sofa::gui::qt::viewer::qgl::QtGLViewer::drawScene; sofa::gui::qt::viewer::qgl::QtGLViewer::draw. ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3567:525,Log,Logs,525,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3567,1,['Log'],['Logs']
Testability,"############')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.8.10 (default, May 26 2023, 14:05:08) ; [GCC 9.4.0]; --- PATH ---; /opt/Qt/Tools/QtInstallerFramework/4.5/bin:/opt/Qt/5.12.8/gcc_64/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin; --- SOFA_ROOT ---; --- PYTHONPATH ---; --- sys.path ---; ['', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt; [INFO] [runSofa] PluginRepository paths = /builds/sofa/build/plugins:/builds/sofa/build/collections:/builds/sofa/build/lib; [INFO] [runSofa] DataRepository paths = /builds/sofa/src/share:/builds/sofa/src/examples:/builds/sofa/build:/builds/sofa/build; [INFO] [runSofa] GuiDataRepository paths = /builds/sofa/src/applications/projects/runSofa/resources:/builds/sofa/build; [INFO] [BaseGUI] Created directory: /builds/sofa/build/config; [INFO] [BaseGUI] Created directory: /builds/sofa/build/screenshots. ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); std::vector<std::filesystem::__cxx11::path::_Cmpt, std::allocator<std::filesystem::__cxx11::path::_Cmpt> >::~vector(); std::vector<std::filesystem::__cxx11::path::_Cmpt, std::allocator<std::filesystem::__cxx11::path::_Cmpt> >::~vector(); sofa::helper::system::FileRepository::findFileIn(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3943:2531,Log,Logs,2531,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3943,1,['Log'],['Logs']
Testability,#1294 wrongfully introduced a test generated file in the commit. This PR removes it and hopefully remove any further chance of this happening again. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1320:30,test,test,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1320,3,['test'],['test']
Testability,"#1300 . (+Cleaning, +Fix in SofaGuiQt); Add header config file to runSofa. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1302:326,test,test,326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1302,2,['test'],['test']
Testability,#1306 . - Modularize all SofaMisc*; - Rename SofaMisc (module) to SofaMiscOther (!= SofaMisc the project/package); - Clean using pragma once/nested namespace; - Use SofaComponentMisc instead of SofaMisc (the project/package). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1307:477,test,test,477,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1307,2,['test'],['test']
Testability,"#1453 ; #1514; #1515 . We are trying to define a same type for index and size in all SOFA (like e.g Eigen::Index); It will allow us to a have more consistent, less confusing and potentially less error-prone code.; It has been decided that the common underlying type will be unsigned int.; Those core types are located in the sofa namespace (defined in sofa/config.h ); In the future all the typedefs concerning indices will be removed. a depreciation message for sofa::defaulttype::index_type has been done (as well as BaseMeshTopology::index_type typedef). BREAKING: ; - sofa::defaulttype::index_type moved and renamed to sofa::Index. sofa_index is deprecated but I suppose it can be breaking anyway, if index type used before was signed,; - newly introduced type for Size is sofa::Size; - all templates based on int/size_t/ etc will break.; - test with ""incorrect"" indices using -1 ; now that indices are unsigned, test for ""incorrect"" indices should be tested against InvalidID (already introduced some time ago), InvalidID is now sofa::InvalidID instead of sofa::defaulttype::InvalidID",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1539:845,test,test,845,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1539,3,['test'],"['test', 'tested']"
Testability,"#1453 was about to make uniform the type representing indices. But this ""universal"" index_type was a std::size_t which is a bit too much for our simulations (and breaks a lot of memory-dependent code such as CUDA things); This PR change this type to unsigned int; and fixes some forgotten index_type mistakes by the way. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1514:572,test,test,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1514,2,['test'],['test']
Testability,"#1527 . Based on master. Deprecates partially SofaSimpleFem. Isolate the diffusion into its own module, especially to highlight that SOFA can do more than solid mechanics. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2753:711,test,test,711,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2753,2,['test'],['test']
Testability,"#1527 . based on:; - #2717 (for one file moved in core). Deprecates partially _SofaBoundaryCondition_. Gathers all other forcefields which applies **external** force on mechanical objects. (torsion, compression, etc). https://mechanicalengineering.blog/types-of-loads/. I chose `MechanicalLoad` because of (https://en.wikipedia.org/wiki/Mechanical_load) and it seems an official term but I was hesitating also with `ExternalForce` (because these components set external forces on objects) ; Could have been simply `Load` as well, but there are other type of Load: electrical load for example. EDIT: create a new sub module for FEM, called **FEM.Damping**, which gathers DampingFF; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2783:1220,test,test,1220,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2783,2,['test'],['test']
Testability,"#1527 . based on:; - #2717 . contains:; - #2752 (UncoupledConstraintCorrection needs UniformMass). Deprecates partially SofaGeneralObjectInteraction, SofaConstraint and SofaBoundaryCondition. Module containing two types of Constraint in SOFA:; - **Projective** constraint; - **Lagrangian** constraint ; this submodule is itself subdived in three (four?) categories: **Model**, **Correction**, and **Solver**. (still debate on a fourth one with lagrangian-related constraint animation loop). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2790:1030,test,test,1030,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2790,2,['test'],['test']
Testability,"#1527 . based on:; - #2790. Deprecates partially **SofaConstraint**; Deprecates **SofaGeneralAnimationLoop**. Module with all the non-default animation loop.; DefaultAL stays in Core to allow scene to run even if one did not build this module (and its deps). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2797:798,test,test,798,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2797,2,['test'],['test']
Testability,"#1527 . based on:; - #2805 (for TriangleOctree in helper). Deprecates _**SofaEngine**_, **_SofaGeneralEngine_** and **_SofaMiscEngine_**. Create various submodules according to their nature (way of sorting is mine, matter of discussion); ~~- **Data**: manipulating Data (aka core::objectmodel::Data<>)~~; ~~- **Geometry**: various algo on geometry ops~~; ~~- **Math**: apply math functions~~; ~~- **Mesh**: generate or modify meshes~~; ~~- **Rigid**: rigid utilities (i.e vec+quat types)~~; ~~- **ROI**: select Region Of Interest~~; ~~- **Transform**: transformations ops (matrices)~~. - **Analyze** : inputs contains some kind of measurement/value; - **Generate** : create data from inputs; - **Select** : filter inputs; - **Transform**: apply some function on inputs. https://github.com/sofa-framework/sofa/issues/2906. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2812:1361,test,test,1361,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2812,2,['test'],['test']
Testability,"#1527 . based on:; - #2843 . Deprecates the rest of **SofaGraphComponent** and **SofaUserInteraction**. Create a GUI (out of Sofa.Component) module, with:; - **Common** (definition of GUIs); - GUIs themselves: **Batch**, **Qt** and **Headlessrecorder**; - **Component**, with components only used for GUI (settings linked to performers). Metamodule SofaGui is still used for runSofa (so with a kind of conditional factory, depending of the compilation option at cmake) but I think we should move this ""conditional"" compilation directly in runSofa. [~~ci-depends-on https://github.com/sofa-framework/SofaGLFW/pull/31~~]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895:1159,test,test,1159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895,2,['test'],['test']
Testability,"#1527. After putting away OBB/Capsule components, SofaMiscCollision is still laying with some useful components for Collision. The only ones still inside were deemed non-supported (even bogus) in the few past months so they should die when SofaMiscCollision will be removed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2896:814,test,test,814,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2896,2,['test'],['test']
Testability,"#1527. Based on master. Deprecates partially SofaBaseMechanics and SofaMiscForceField. Nothing fancy. just gathers the 3 only masses present in SOFA.; I did not even need to change the namespace. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2752:735,test,test,735,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2752,2,['test'],['test']
Testability,"#1527. Based on master. Deprecates partially _SofaBaseMechanics_. It contains components used as a ""State"" in mapping, forcefield, etc. ; In reality, it is merely a module for MechanicalObject for the moment, as MappedObject is not really used anywhere; In the future, it could contain TemperatureContainer, etc. ~~namespaces are not changed, which is nice.~~. Collegial decision to rename it to **StateContainer**. EDIT:; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/239]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766:1034,test,test,1034,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766,2,['test'],['test']
Testability,"#1527. In this case, ODESolver being gathered in Sofa.Component.ODESolver.*. This PR is mainly focused to be compatible with the current code base of SOFA so a full build/test is expected (or at least desired...). DO NOT MERGE.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2455:171,test,test,171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2455,3,['test'],['test']
Testability,"#1527. based on ; - #2612 . Deprecates SofaGeneralVisual; Partially deprecates SofaBaseVisual. Nothing special in that module, except that it contains all visual stuff not related to OpenGL.; OpenGL related code will have its own plugin.; EDIT: #2709 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2679:792,test,test,792,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2679,2,['test'],['test']
Testability,"#1527; Based on ; - #2571 . Creating the module **Sofa.Component.IO**, where all the components linked to loading or exporting a mesh(.Mesh)~~/stuff(.Misc)~~ are contained.; Read/Writing stuff to repeat identical simulations (ReadState/Topology,etc) has been moved to a new category, namely **Sofa.Component.Playback**; Deprecates **SofaLoader**, **SofaGeneralLoader** and **SofaExporter**. Good module to test the compatibility of installation process, as the plugin Python3 has a dependency on the former SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2582:406,test,test,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2582,3,['test'],['test']
Testability,"#1527; based on ; - #2582. ~~It was supposed to be called Utils, but I did not really like this name (plural+shorten name) and Utility was more appealing...~~; EDIT: called `SceneUtility` now. Deprecates partially *SofaBaseUtils* and *SofaGraphComponent*. Questions:; ### RequiredPlugin; is needed to be implcitely loaded somewhere if a scene wants to load stuff.; Should it be moved in SofaCore (thus always available) or force load Sofa.Component.Utility somewhere; ### SceneChecker; SceneChecker stuff is in SofaBaseUtils but they are not component tho so it does not make sense to move them into Sofa.Component. Should they move somewhere (in the framework like SimulationCore) ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2605:1224,test,test,1224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2605,2,['test'],['test']
Testability,"#1529 . A priori not breaking. And usual cleaning (namespaces, pragma). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - builds with SUCCESS for all platforms on the CI.; - does not generate new warnings.; - does not generate new unit test failures.; - does not generate new scene test failures.; - does not break API compatibility.; - is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1530:311,test,test,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1530,2,['test'],['test']
Testability,"#1529. A good ol' fat module.; A priori not breaking. And usual cleaning (namespaces, pragma), . ~~This PR includes #1570 so this one must wait until it is merged~~ ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - builds with SUCCESS for all platforms on the CI.; - does not generate new warnings.; - does not generate new unit test failures.; - does not generate new scene test failures.; - does not break API compatibility.; - is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1556:406,test,test,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1556,2,['test'],['test']
Testability,"#1529. A priori not breaking. And usual cleaning (namespaces, pragma), remove sofa_no_opengl, and some includes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - builds with SUCCESS for all platforms on the CI.; - does not generate new warnings.; - does not generate new unit test failures.; - does not generate new scene test failures.; - does not break API compatibility.; - is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1540:352,test,test,352,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1540,2,['test'],['test']
Testability,"#1529. A priori not breaking. And usual cleaning (namespaces, pragma),. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1575:611,test,test,611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1575,4,['test'],['test']
Testability,"#1529. A priori not breaking. And usual cleaning (namespaces, pragma),; Add dep to SofaCuda. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1580:632,test,test,632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1580,2,['test'],['test']
Testability,"#1529. A priori not breaking. And usual cleaning (namespaces, pragma). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1565:610,test,test,610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1565,4,['test'],['test']
Testability,"#1529. A priori not breaking. And usual cleaning (namespaces, pragma). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - builds with SUCCESS for all platforms on the CI.; - does not generate new warnings.; - does not generate new unit test failures.; - does not generate new scene test failures.; - does not break API compatibility.; - is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1531:310,test,test,310,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1531,6,['test'],['test']
Testability,"#1529. A priori not breaking. Usual cleaning (namespaces, pragma),. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1583:607,test,test,607,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1583,6,['test'],['test']
Testability,"#1529. A priori not breaking. Usual cleaning (namespaces, pragma),; Move non units test to SofaTests; Add dependency to SofaTopologyMapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1582:83,test,test,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1582,3,['test'],['test']
Testability,"#1529; Big (and important) one. A priori not breaking. Usual cleaning (namespaces, pragma),; Add forgotten license notices in some files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1592:677,test,test,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1592,2,['test'],['test']
Testability,"#1597 . - Set-up CMake for SofaCommon modularization.; - Usual cleaning (pragma, namespaces); - warnings removal; - useless headers/includes removal; - index/size uniformization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1598:718,test,test,718,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1598,2,['test'],['test']
Testability,"#1597. - Usual cleaning (pragma, namespaces); - cmake dep polish; - remove useless includes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1607:632,test,test,632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1607,2,['test'],['test']
Testability,"#1597. - Usual cleaning (pragma, namespaces); - warnings removal; - cmake dep polish. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1603:625,test,test,625,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1603,2,['test'],['test']
Testability,"#1597. - Usual cleaning (pragma, namespaces); - warnings removal; - cmake dep polish; - remove useless includes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1606:652,test,test,652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1606,2,['test'],['test']
Testability,"#1597. - Usual cleaning (pragma, namespaces); - warnings removal; - index/size uniformization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1601:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1601,2,['test'],['test']
Testability,"#1597. - Usual cleaning (pragma, namespaces); - warnings removal; - useless headers/includes removal; - index/size uniformization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1599:670,test,test,670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1599,4,['test'],['test']
Testability,"#1597; Big one!. - Usual cleaning (pragma, namespaces, etc.); - warnings removal; - index/size uniformization; - deprecation for point/line/triangle headers; - redispatch includes and remove useless ones. Still convinced that there are too many useless files inside but wont touch it in order to not break too much (for now). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1602:865,test,test,865,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1602,2,['test'],['test']
Testability,"#1597; Last one!. - Usual cleaning (pragma, namespaces); - cmake dep polish; - remove useless includes; - remove warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1608:662,test,test,662,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1608,2,['test'],['test']
Testability,"#1626 generalized the use of RGBAColor instead of Vec4f to select a color.; And all the functions were deprecated (but still usable) until the v21.06. For the upcoming release of v21.06, those functions have been deleted, but their definitions are still there, to inform the user how to fix the compilation error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2197:853,test,test,853,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2197,2,['test'],['test']
Testability,"#1633. - Usual cleaning (pragma, namespaces); - cmake dep polish; - remove useless includes; - remove warnings. Remove a dependency in SofaGeneralSimpleFem as well (using a EigenMatrix for nothing apparently). EDIT: if error with SOFA_SOFAEIGEN2SOLVER_API -> #1670; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1635:805,test,test,805,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1635,2,['test'],['test']
Testability,"#1633. - Usual cleaning (pragma, namespaces); - remove useless includes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1640:612,test,test,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1640,2,['test'],['test']
Testability,"#1633. - Usual cleaning (pragma, namespaces); - remove/reorganize useless includes; - change dependency (SofaSimulationCommon (SofaSimulation) -> SofaSimulationCore (SofaFramework)). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1655:722,test,test,722,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1655,2,['test'],['test']
Testability,"#1633. - Usual cleaning (pragma, namespaces); - remove/reorganize useless includes; - fix some dependencies; - use only RGBAColor; - remove warnings; - use sofa::Size/sofa::Index (including missed functions, which makes this PR breaking for those inheriting for these components). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1676:820,test,test,820,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1676,2,['test'],['test']
Testability,"#1633. - Usual cleaning (pragma, namespaces); - remove/reorganize useless includes; - remove MechanicalObject header-dependency (not reflecting with library linking); - use only RGBAColor; - remove warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1653:747,test,test,747,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1653,2,['test'],['test']
Testability,"#1633. - Usual cleaning (pragma, namespaces); - remove/reorganize useless includes; - remove warnings; - use sofa::Size/sofa::Index. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1677:672,test,test,672,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1677,2,['test'],['test']
Testability,"#1633. - Usual cleaning (pragma, namespaces); - remove/reorganize useless includes; - remove warnings; - use sofa::Size/sofa::Index; - fix dependencies; - use rgbacolor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1680:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1680,2,['test'],['test']
Testability,"#1885 . + some dispatch to SofaMeshCollision_test and SofaMiscCollision_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2146:617,test,test,617,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2146,2,['test'],['test']
Testability,"#1885 . Add some licences here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2154:581,test,test,581,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2154,2,['test'],['test']
Testability,"#1885. Converts all tests in the rest of the modules (i.e not the plugins) to Sofa.Testing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2188:20,test,tests,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2188,4,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,"#1885. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2153:546,test,test,546,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2153,2,['test'],['test']
Testability,"#1927 is suspected to causes crashes in multi-threaded scenes on Jenkins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2017:613,test,test,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2017,2,['test'],['test']
Testability,"#1968. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1986:546,test,test,546,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1986,2,['test'],['test']
Testability,"#2197 should be merged first. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/150]. Cleaning (removing or setting ""deleted"") things that have been deprecated for long enough (some of them since 2017...). Also ; - improved the SOFA_DEPRECATED_HEADER macro to be consistent with SOFA_ATTRIBUTE_DEPRECATED.; - added SOFA_DISABLED_HEADER and SOFA_DISABLED_HEADER_NOT_REPLACED macros; - expanded namespace deprecation in SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2198:987,test,test,987,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198,2,['test'],['test']
Testability,"#2883 was merged a little bit too fast, and some specializations were unfairly commented (well it was ugly in a way); this PR brings them back in the cpp (where it should have been) and the weird define/undef thingys removed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2885:765,test,test,765,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2885,2,['test'],['test']
Testability,#ifdef are error prone and not very friendly with CI. ; If you need barycentric info please make a PR to re-implement the behavior without #ifdef. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1046:398,test,test,398,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1046,2,['test'],['test']
Testability,"#include <sofa/simulation/simulation.h>; #include <sofa/simulation/Node.h>. This PR is based on #1735, #1749. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1750:649,test,test,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1750,2,['test'],['test']
Testability,"')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; --- PATH ---; /home/sergei/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl; --- SOFA_ROOT ---; /home/sergei/Source_code/Sofa_development/sofa/build_release/install; --- PYTHONPATH ---; /home/sergei/Source_code/Sofa_development/SofaPyhton3/build_release/lib/pyhton3/site-packages; --- sys.path ---; ['', '/home/sergei/Source_code/Sofa_development/SofaPyhton3/build_release/lib/pyhton3/site-packages', '/usr/lib/python310.zip', '/usr/lib/python3.10', '/usr/lib/python3.10/lib-dynload', '/home/sergei/.local/lib/python3.10/site-packages', '/usr/lib/python3.10/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [sergei@sergei-20hd0000fr sofa]$ /home/sergei/Source_code/Sofa_development/sofa/build_release/bin/runSofa -l /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/libSofaPython3.so /home/sergei/Optimus_test/test_scene.py ; [ERROR] [FileSystem::isDirectory()] /home/sergei/Source_code/Sofa_development/sofa/build_release/share/sofa/gui/runSofa: No such file or directory; [WARNING] [SofaEigen2Solver] SofaEigen2Solver is deprecated; Eigen classes are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = /home/sergei/Source_code/Sofa_development/Optimus/build_release:/home/sergei/Source_code/Sofa_development/SofaAuxiliaryComponents/build_release:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins:/home/sergei/Source_code/Sofa_development/sofa/b",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:7050,Log,Logs,7050,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Log'],['Logs']
Testability,"(EDIT: THIS PR WAS NOT CLEANED SO I MADE A VERSION 2 in PR #329). Currently in Sofa there is only rudimentary way to handle component evolution (change of implementation, change of parameters, deprecation) and report the change to our users. . In this PR I implemented a mecanism to do that. ; The basic idea is to have in scene a component that specify for which version of Sofa the scene have been tested. Here is how it looks in the scene:; ```xml; <APIVersion level='17.06'/>; ```; If the scene does not have this component the level is automatically set to 17.06 so existing scene will just work as they should. Now what happens if a scene with a given level is loaded in a sofa that have a different level (eg: '17.12'). In this case dedicated messages are printed to warn user things may go wrong. . Here is an example of what happen when loading a scene at level '17.06' on runSofa at level '17.12' (our master branch) with a BoxStiffSpringForceField (that could behave differently because of PR #290); ```; [INFO] [SceneChecker] The 'APIVersion' directive is missing in the current scene. ; Switching to the APIVersion level '17.06' ; [INFO] [SceneChecker] Validating a scene: ; - APIVersion checking: 1 ; - RequiredPlugin checking: 1; [WARNING] [BoxStiffSpringForceField(Spring)] BoxStiffSpringForceField have changed since 17.06. To use the old behavior you need to set parameter 'forceOldBehavior=true'; ```. The nice thing with the approach is that we can write custom condition to rise those messages. Here is a simple example (to handle PR315 & an imaginary deprecation of a component):; ```cpp; addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""RestShapeSpringsForceField"" && o->findData(""external_rest_shape"")->isSet()); msg_warning(o) << ""RestShapeSpringsForceField have changed since 17.06. The parameter 'external_rest_shape' is now a Link. To fix your scene you need to add and '@' in front of the provided path. See PR#315"" ;; }) ;. addHookInChangeSet(""17.06"", [",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/322:400,test,tested,400,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/322,1,['test'],['tested']
Testability,"(For Windows); - Specialized functions of BilateralInteractionConstraint on Rigids were declared in the header file (useless); - the definition of these specialized functions did not have the _API keyword (exporting these symbols in the dll). There is currently no problem because components using BilateralInteractionConstraint are all in the same module... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2031:898,test,test,898,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2031,2,['test'],['test']
Testability,"(THIS WAS PR 322). Currently in Sofa there is only rudimentary way to handle component evolution (change of implementation, change of parameters, deprecation) and report the change to our users. . In this PR I implemented a mecanism to do that. ; The basic idea is to have in scene a component that specify for which version of Sofa the scene have been tested. Here is how it looks in the scene:; ```xml; <APIVersion level='17.06'/>; ```; If the scene does not have this component the level is automatically set to 17.06 so existing scene will just work as they should. Now what happens if a scene with a given level is loaded in a sofa that have a different level (eg: '17.12'). In this case dedicated messages are printed to warn user things may go wrong. . Here is an example of what happen when loading a scene at level '17.06' on runSofa at level '17.12' (our master branch) with a BoxStiffSpringForceField (that could behave differently because of PR #290); ```; [INFO] [SceneChecker] The 'APIVersion' directive is missing in the current scene. ; Switching to the APIVersion level '17.06' ; [INFO] [SceneChecker] Validating a scene: ; - APIVersion checking: 1 ; - RequiredPlugin checking: 1; [WARNING] [BoxStiffSpringForceField(Spring)] BoxStiffSpringForceField have changed since 17.06. To use the old behavior you need to set parameter 'forceOldBehavior=true'; ```. The nice thing with the approach is that we can write custom condition to rise those messages. Here is a simple example (to handle PR315 & an imaginary deprecation of a component):; ```cpp; addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""RestShapeSpringsForceField"" && o->findData(""external_rest_shape"")->isSet()); msg_warning(o) << ""RestShapeSpringsForceField have changed since 17.06. The parameter 'external_rest_shape' is now a Link. To fix your scene you need to add and '@' in front of the provided path. See PR#315"" ;; }) ;. addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""TheCompon",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/329:353,test,tested,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/329,1,['test'],['tested']
Testability,"(and nodiscard keywords). \+ replace double with SReal; ~~\+ using forwarding header file for RGBAColor (removing a TODO from 4 years ago :p )~~ nope. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3270:690,test,test,690,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3270,2,['test'],['test']
Testability,"(based on #1790). ## Description:; Move some types from SofaHelper and SofaDefaulttype into Sofa.Type. - sofa::defaulttype::BoundingBox (and its variants) becomes sofa::type::BoundingBox (and co); - sofa::defaulttype::Frame becomes sofa::type::Frame; - Material (for rendering) becomes sofa::type::Material ; - PrimitiveGroup becomes sofa::type::PrimitiveGroup ; - Ray becomes sofa::type::Ray; - RGBAColor becomes sofa::type::RGBAColor . ## Breaking; A priori nothing is breaking with the compatibility layer. ## Talking; RGBAColor is introducing a static function with exception (was displaying an error in the Messaging system before); But this function is not used anywhere... and there is a version with a boolean actually (read()). ## Note; Quite straight-forward and not really prone to errors due to the fact those are much less ""important"" than Vector/Quat/Matrix, etc. Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1818:1446,test,test,1446,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1818,2,['test'],['test']
Testability,"(based on #2307 ). Pretty annoying to forget to enable diffusionsolver every time image is required.; And it appeared that in fact image does not even need this plugin... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2308:710,test,test,710,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2308,2,['test'],['test']
Testability,"(because otherwise it is copying the data and generate a compilation warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1879:618,test,test,618,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1879,2,['test'],['test']
Testability,(brutal) Rename TModels into CollisionModels and update all scenes:. - TPointModel becomes PointCollisionModel; - TLineModel becomes LineCollisionModel; - TTriangleModel becomes TriangleCollisionModel; - TSphereModel becomes SphereCollisionModel. and all examples are updated. Let's see the CI. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1034:546,test,test,546,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1034,2,['test'],['test']
Testability,"(cherry picked from commit f2f4f02fdedad69765b22b31af4a16840c854866). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2016:609,test,test,609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2016,2,['test'],['test']
Testability,"(just randomly enabled SOFA_GPU_CUBLAS 😅). Starting from CUDA12, you cannot include both cublas.h and cublas_v2.h (throw a compilation error). There is apparently no code using the functions enabled by SOFA_GPU_CUBLAS so nothing to test against... Reference:; https://docs.nvidia.com/cuda/cublas/index.html; ```; Starting with version 4.0, the cuBLAS Library provides a new API, in addition to the existing legacy API. This section discusses why a new API is provided, the advantages of using it, and the differences with the existing legacy API.; Warning; The legacy cuBLAS API is deprecated and will be removed in future release.; ```. and CUDA4 was released in early 2011, so I may think we could throw the legacy support away...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4274:232,test,test,232,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274,3,['test'],['test']
Testability,"(merely a refreshed version of #2455 ); Waiting for ; - ~~https://github.com/sofa-framework/sofa/pull/2565~~. Kickstart of the implementation of SOFA-NG, as in defined #1527 (https://annuel2.framapad.org/p/sofang-v8). - Move files into a new file hierarchy (Sofa.Component.Stuff.Foo.Bar); - Change the namespace according to the path (sofa::component::stuff::foo::Bar); - Add compatibility layer (header path + aliases); - Deprecated modules redirect/load the new ones (e.g SofaExplicitSolver loads explicitely Sofa.Component.ODE.Forward). Tests show that the compat layer is working well for the moment (no warning/error for regression/scene tests) and only one unit test was complaining, as it was explicitly testing on the old name). Deprecates **SofaExplicitSolver**, **SofaImplicitSolver**, **SofaGeneralExplicitSolver**, **SofaGeneralImplicitSolver** and **SofaMiscSolver**. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2571:540,Test,Tests,540,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2571,6,"['Test', 'test']","['Tests', 'test', 'testing', 'tests']"
Testability,"(not the topological ones 😏). {Length,Radius,Stiffness,Poisson}Container was created a **long time ago** to provide an ""external location"" where to set data per element, regardless of the component.; But: ; - the design was flawed (hard deps, not generic at all); - the remaining files are just interfaces (virtual ... =0) and there is no implementation at all in the whole codebase (deleted files in the past? forgotten plugins?), so the code itself at the moment is totally useless. Actually 3 of them was even not including the necessary headers... So the best course of action to do IMO is to delete them, and maybe find an other design later to provide means to get data per element (opposed to data for the whole set of elements). A nice side effect is that SofaTopologicalMapping just depends on SofaBaseTopology now.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2099:1365,test,test,1365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2099,2,['test'],['test']
Testability,"(should) Fix issue #2066. The GraphListener for the visual Graph is frozen when runSOFA is started (and never unfrozen); The temp fix to swap tabs was unfreezing it actually.; But I think letting it unfrozen is also a not-so-good idea as the listener will update a lot (how many? I dont know) the graph for nothing. Now this PR unfreeze/freeze the visual graph at each timestep of the simulation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2458:936,test,test,936,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2458,2,['test'],['test']
Testability,(was [SofaKernel] Create SofaTypes module (with Vec)). Issue #1521 . Description: <WIP>. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - builds with SUCCESS for all platforms on the CI.; - does not generate new warnings.; - does not generate new unit test failures.; - does not generate new scene test failures.; - does not break API compatibility.; - is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1553:328,test,test,328,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1553,2,['test'],['test']
Testability,(when no mstate is provided). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1480:281,test,test,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1480,2,['test'],['test']
Testability,"(without the tests....). Main problem is the linear solvers using CSPARSE, which only handles double.; Actually, SparseCholesky was using buffers of float with pointers of double (which obviously causes a crash).; SparseLU is more convenient, it tried to use SReal, and make the compilation failing directly. There were at least two way to solve this problem:; - disable in the CMakeLists directly (if floating_point is float); - do not compile the instance templated on float (effectivement does not compile the two solvers). I chose the latter to keep them visible in the base code, but I totally agree with the former solution (but requires to access to the Cmake variable SOFA_FLOATING_POINT from Sofa.Config in the CMakefile of S.C.LS.Direct). An other thing is that preconditionner wants to use SparseCholesky as well so there is a conditional compilation happening here unfortunately. I dont know if it is possible to just use an other direct solver (probably). This was needed to test the performance tests for ; - #2856. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2907:13,test,tests,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2907,5,['test'],"['test', 'tests']"
Testability,") ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/gtest to a fresh checkout. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2388,test,test,2388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['test'],['test']
Testability,"); MaterialDataWidget.cpp.o MaterialDataWidget.h DataWidget.h ModifyObject.h (1504 ms); moc_QDisplayDataWidget.cpp.o QDisplayDataWidget.h DataWidget.h ModifyObject.h (1473 ms); WDoubleLineEdit.cpp.o (1407 ms); DisplayFlagsDataWidget.cpp.o DisplayFlagsDataWidget.h DataWidget.h ModifyObject.h (1379 ms); QRGBAColorPicker.cpp.o QRGBAColorPicker.h DataWidget.h ModifyObject.h (1375 ms); ... 22925 ms: sofa/SofaKernel/modules/SofaCore/src/sofa/core/ObjectFactory.h (included 440 times, avg 52 ms), included via:; initOpenGLVisual.cpp.o (192 ms); PointSetTopologyAlgorithms.cpp.o (191 ms); initValidation.cpp.o (187 ms); DataDisplay.cpp.o (186 ms); DifferenceEngine.cpp.o (178 ms); MeshObjLoader.cpp.o (177 ms); ... 21119 ms: sofa/extlibs/gtest/include/gtest/internal/gtest-port.h (included 176 times, avg 119 ms), included via:; gtest-typed-test.cc.o gtest-typed-test.h (796 ms); gtest-port.cc.o (666 ms); gtest-death-test.cc.o gtest-death-test.h gtest-death-test-internal.h gtest-internal.h (650 ms); gtest-test-part.cc.o gtest-test-part.h gtest-internal.h (463 ms); gtest-filepath.cc.o gtest-filepath.h gtest-string.h (456 ms); gtest.cc.o gtest.h gtest-internal.h (246 ms); ... 20903 ms: sofa/SofaKernel/modules/SofaHelper/src/sofa/helper/vector.h (included 156 times, avg 133 ms), included via:; MeshGmsh.cpp.o MeshGmsh.h Mesh.h (492 ms); MeshTopologyLoader.cpp.o MeshTopologyLoader.h Mesh.h (402 ms); Image.cpp.o Factory.inl (384 ms); SVector.cpp.o SVector.h (379 ms); GenerateRigid.cpp.o GenerateRigid.h Mesh.h (373 ms); TestMessageHandler.cpp.o TestMessageHandler.h (346 ms); ... 19960 ms: /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/pstl/glue_algorithm_defs.h (included 157 times, avg 127 ms), included via:; qglviewer.h camera.h QMap qmap.h qiterator.h qglobal.h algorithm (348 ms); manipulatedCameraFrame.h manipulatedFrame.h frame.h QObject qobject.h qobjectdefs.h qnamespace.h qglobal.h algorithm (345 ms); gtest-typed-test.h gtest-port.h algorithm (299 ms); mouseGrabbe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:35367,test,test-part,35367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['test'],['test-part']
Testability,"* Add blending, therefore keeps background and other opaque models (but rendering is still better with a whitish background); * Add scene with collisions; * Add an example of the execution policy (std::execution::par) introduced by c++17 in the brute-force findNeighbors() in the forcefield (faster than the spatialgrid if nbParticles is approx less than 5K). Blending should be temporary, and having a multi pass would be better (refraction, etc); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1215:700,test,test,700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1215,2,['test'],['test']
Testability,"* Added getter for ContactsVector. Added a buffer variable that is overwritten before ContactsVector is cleared. Added functions to retrieve the number of contacts and their respective distance values in the buffer. * added a check before trying to access contact information. Added a function to also retrieve a list of collision point pairs. * Simplified code a bit, by moving the check up in the hierarchy. * Added a getter function to retrieve the element ids of the collision models. This can be used to lookup the ids in a MechanicalObject that are affected by a contact from a topology (get elements -> lookup MO ids in topology -> lookup points in MO). Also added some Docstrings. * Exchanged push_back with emplace_back and sped up code by reserving memory for vectors. * Replaced Vector3 from helper with Vector3 from defaulttypes. * Changed unsigned int to sofa::Size and placed curly brackets on new line. #1678 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1683:1465,test,test,1465,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1683,2,['test'],['test']
Testability,"* Code factorization; * Remove unnecessary C-style casts; * Remove unnecessary redirecting intermediate function; * Use class access specifiers (make members protected). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2881:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2881,2,['test'],['test']
Testability,"* Usual cleaning (pragma, namespaces); * Package SofaGuiCommon, SofaGuiQt, SofaHeadlessRecorder : cleaner deps handling. ⚠ SofaGuiMain has been removed as it was doing nothing except GUI registrations. ; So it was deemed more convenient to move those registrations into SofaGui itself.; And people was misusing SofaGuiMain as SofaGui anyway: lots of projects were linking with SofaGuiMain, where it would have been more correct to link with SofaGuiCommon or SofaGuiQt.; The only relevant case to link SofaGuiMain was for applications wishing to run GUIs. (i.e runSofa, Modeler). So now if you need to create a an application with a GUI using SofaGuiCommon/SofaGuiQt, you have to link with SofaGui instead of SofaGuiMain (and do initSofaGui() instead of initSofaMain() to register batch/qt/qglviewer/headlessrecorder modes). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1719:1363,test,test,1363,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1719,2,['test'],['test']
Testability,"**Description**. Performing mouse picking and removing element using mouse interactor make runSofa crash.; Same problem as the one identified in issue #3202 . **Steps to reproduce**; Very easy using scene examples/TriangleSurfaceCutting.scn ; 1. use pick handler (shift + mouse left); 2. remove element using shift + mouse right; 3. crash as soon as one vertex is removed, see movie . https://user-images.githubusercontent.com/21199245/194725514-40441983-5fdb-43f1-9bd2-054bdd9aaa5b.mp4. ### Environment. **Context**. - System: any, windows or linux; - Version of SOFA: master. ### Logs. ```; Sofa.Component.Topology.Container.Dynamic.dll!sofa::component::topology::container::dynamic::PointSetTopologyContainer::setPointTopologyToDirty() Line 177	C++; 	Sofa.Component.Topology.Container.Dynamic.dll!sofa::component::topology::container::dynamic::PointSetTopologyModifier::removePointsWarning(sofa::type::vector<unsigned int,sofa::type::CPUMemoryManager<unsigned int>> & indices, const bool removeDOF) Line 378	C++; 	Sofa.Component.Topology.Container.Dynamic.dll!sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::removeTrianglesProcess(const sofa::type::vector<unsigned int,sofa::type::CPUMemoryManager<unsigned int>> & indices, const bool removeIsolatedEdges, const bool removeIsolatedPoints) Line 471	C++; 	Sofa.Component.Topology.Container.Dynamic.dll!sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::removeTriangles(const sofa::type::vector<unsigned int,sofa::type::CPUMemoryManager<unsigned int>> & triangleIds, const bool removeIsolatedEdges, const bool removeIsolatedPoints) Line 332	C++; 	Sofa.GUI.Component.dll!sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromTriangleModel(sofa::component::collision::geometry::TriangleCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3,double>,sofa::type::Vec<3,double>,double>> * model, const sofa::type::vector<unsigned int,sofa::type::CPUMemoryManager<unsigned",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3370:582,Log,Logs,582,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3370,1,['Log'],['Logs']
Testability,"**Preliminary work before changing ""a little"" the TopologyChange API.**; Rename some classes to match their file names :; - TopologyDataImpl into TopologyData; - TopologySubsetDataImpl into TopologySubsetData; - TopologySparseDataImpl into TopologySparseData. Rename files:; - core/topology/BaseTopologyEngine into core/topology/TopologyEngine as the class was TopologyEngine ; - SofaBaseTopology/TopologyEngine into TopologyDataEngine. Use alias template to simplify code of TopologyData and change inheritence of TopologySubsetData and TopologySparseData to factorize some code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1872:1120,test,test,1120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1872,2,['test'],['test']
Testability,"**Steps to reproduce**; launch runSofa; right click on the sceneGraph; click on ""Add Node""; it crash. **Expected behavior**; not crashing. **Caused by**; In QSofaListView... the function ; ```cpp; void QSofaListView::RaiseAddObject(); {; emit Lock(true);; assert(AddObjectDialog_);. std::string path( (dynamic_cast<RealGUI*>(QApplication::topLevelWidgets()[0]))->windowFilePath().toStdString());; AddObjectDialog_->setPath ( path );; AddObjectDialog_->show();; AddObjectDialog_->raise();; emit Lock(false);; }; ```; The dynamic_cast<> not necessarily returns the expected RealGUI windows.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3024:256,assert,assert,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3024,1,['assert'],['assert']
Testability,"**WARNING: This PR will surely conflict with your dev branches**. Commands executed:; `run-clang-tidy.py -header-filter='.*' -checks='-*,modernize-use-override' -fix`; `run-clang-tidy.py -header-filter='.*' -checks='-*,modernize-use-nullptr' -fix`; `licenseUpdater.sh . auto 2019 ""development version""`. With the help of this blog article: https://www.kdab.com/clang-tidy-part-1-modernize-source-code-using-c11c14/. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899:667,test,test,667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899,2,['test'],['test']
Testability,"**[Only Windows/MSVC]**. I cannot explain at all 👺. On MSVC2022(17.7.4) and Release mode, a crash happens with `examples/Demos/fallingBeamLagrangianCollision.scn` when a collision occurs. It crashes when trying to insert values in the triplets vector (suspecting a memory error somewhere). Weirdly, it does not crash in RelWithDebug mode 🤐. ; *And* it does not crash as well on MSVC2019, as the CI (jenkins) uses it in release mode while testing the scene. At the code generation time (compiler?optimizer?) it does throw a warning like:; `1>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector(398): warning C4789: buffer 'triplets' of size 16 bytes will be overrun; 8 bytes will be written starting at offset 16`; only in Release mode. --. Two fixes possible (found by trial-and-error 🤡); - using std::vector instead of sofa::type::vector; - using a struct instead of the tuple; ; I used the std::vector one as it was the simplest. I suspect there is a bug(???)/issue with the optimizer/vectorizer of MSVC , or the allocator but i cannot prove anything 🙊. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4180:438,test,testing,438,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4180,3,['test'],"['test', 'testing']"
Testability,"**_TLDR_**; Sofa.Compat has a structure different than the other package/module, and there is a (not used) cmake option to define (to false). Sofa.Compat does not really fit the macro from SofaMacroInstalls, because this one supposed that a project composed like either:; - sofa/xxxxxx/yyyy.h; - SofaXXXX/yyy.h; and is doing different stuff for each case.; But Sofa.Compat is.. both as it is supposed to be a compatibility layer for either stuff from SofaFramework (with the first organization) or from modules (the other one); After some pain through the cmake macros, I found the option OPTIMIZE_BUILD_DIR for `sofa_create_package_with_targets`which, if defined AND false, will bypass the process of checking the file structure, and copy as it is (what we want). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2360:1304,test,test,1304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2360,2,['test'],['test']
Testability,*SpringForceField fixes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/290:276,test,test,276,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/290,2,['test'],['test']
Testability,"+ Added the submodules that enable the ROS Connector Plugin; - This includes the submodules for SoftRobot, STLLIB and SofaROSConnector from Fabian Aichele. + Added a bash script that automates the build with `CMakeLists.txt`. + Added a Dockerfile for automated debian builds. + Appended the path to the `FindROS` and `Log4CXX` modules to the root `CMakeLists.txt` file. + I will be leaving a customized docker build on my [docker repo](https://hub.docker.com/u/lakehanne/sofa). + Enough said :100: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1122:751,test,test,751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1122,2,['test'],['test']
Testability,"+ some cleaning and hard coded epsilon removals. Should not be breaking, EXCEPT: ; - for code using Vec/Mat without including them (👎); - rare code depending on Vec3 as parameters 🧨. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1518:434,test,test,434,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1518,2,['test'],['test']
Testability,"- #3931 . added a `enabled` data for all VisualModels. OglModel already had a data with the same feature (`isEnabled`) so this PR removes it.; Breaking because of the removal of the Data isEnabled (change of type) so the code using it as a Data will break,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4822:797,test,test,797,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4822,2,['test'],['test']
Testability,"- #4533. did not remove everything of Sofa.Component.Compat and was even throwing a (harmless) warning at the cmake configure stage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4596:672,test,test,672,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4596,2,['test'],['test']
Testability,"- **Rename** compute2PointsBarycoefs -> computeEdgeBarycentricCoordinates; - **Rename** computeRest2PointsBarycoefs -> computeEdgeBarycentricCoordinates with parameter useRestPosition to set at true; - **Add** deprecation mechanism and backward compatibility; - **Update** all methods to use sofa::geometry::Edge::getBarycentricCoordinates instead of their own wrong version. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4190:915,test,test,915,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4190,2,['test'],['test']
Testability,"- A specialization for Mat was not used. ; - Hard-coded doubles are replaced by the right type, which depends on the template; - Floating points are passed by value. ; - A description is added; - Rigid types specialization are factorized. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2755:778,test,test,778,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2755,2,['test'],['test']
Testability,- ADD function run-single-test-subtests executed if a test crashes to run each subtest and avoid results loss.; - EDIT function print-summary to count crashes as errors.; - EDIT XML report on crashed tests. Set duration to 1s to differentiate errors and failures. This should be done by Jenkins JUnit plugin... See https://issues.jenkins-ci.org/browse/JENKINS-4951; - FIX function print-summary on Windows (MinGW bash). See issue #149 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/200:26,test,test-subtests,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/200,4,['test'],"['test', 'test-subtests', 'tests']"
Testability,"- Add comments; - Fix doxygen; - Avoid duplicated code; - minor cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2243:613,test,test,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2243,2,['test'],['test']
Testability,- Add demo scene done for PR1000; - [share] Update square_2594_triangles mesh to have material and texcoords. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1112:361,test,test,361,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1112,2,['test'],['test']
Testability,"- Add getter; - Add tests; - Update init mechanism to match Triangular and Triangle FEM. Add a lot of comment to describe the optimization of this component and try to solve the small difference comprare to TriangleFEM but changing the code slow down its convergence for unknown reason... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2284:20,test,tests,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284,3,['test'],"['test', 'tests']"
Testability,"- Add method ```addTopologyEventCallBack``` in TopologyData to be able to register callback to the TopologyHandler without having to manually create and manipulate this handler class.; ```addTopologyEventCallBack``` redirect the registration to ```TopologyHandler->addCallBack```; - Various minor cleaning in code comments. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2375:863,test,test,863,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2375,2,['test'],['test']
Testability,"- Add method to remove an interaction constraint given the dof index and the input mechanicalObject Id; - Add 2 Single Links to the topology containers to be set to activate topological changes support. ; - Convert constraint index lists from `type::vector<in>` to `TopologySubsetIndices`; - Add callback on the subsetIndices to track topologcial changes. The callback are added only if valid Topology are found using the SingleLinks; - Add a demo scene: examples/Components/topology/TopologicalModifiers/RemovingBilateralInteractionConstraint.scn. Video of the Result:; https://user-images.githubusercontent.com/21199245/191690072-003eb2c6-f0b9-458b-996b-6c37f3c3cac3.mp4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3329:1213,test,test,1213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3329,2,['test'],['test']
Testability,"- Add performances benchmarks for gpu vs cpu in SofaCUDA/scenes/benchmarks/; - TetrahedronFEMForceField_beam10x10x40_cpu.scn (~23.5 fps); - TetrahedronFEMForceField_beam10x10x40_gpu.scn (~158 fps); - TetrahedronFEMForceField_beam16x16x76_cpu.scn (~8 fps); - TetrahedronFEMForceField_beam16x16x76_gpu.scn (~148 fps). - HexahedronFEMForceField_beam10x10x40_cpu.scn (~30 fps); - HexahedronFEMForceField_beam10x10x40_gpu.scn (~102 fps); - HexahedronFEMForceField_beam16x16x76_cpu.scn (~9.5 fps); - HexahedronFEMForceField_beam16x16x76_gpu.scn (~42 fps). - Add cpu-gpu validations scenes in SofaCUDA/scenes/cpu-gpu_validation/ with green beam for gpu and red for cpu; - CudaTetrahedronFEMForceField_beam10x10x40_implicit.scn; - CudaTetrahedronFEMForceField_beam10x10x40_rk4.scn; ; - CudaHexahedronFEMForceField_beam10x10x40_implicit.scn; - CudaHexahedronFEMForceField_beam10x10x40_rk4.scn. - Remove all old scenes for hexa and tetra fem in SofaCUDA/examples/; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2561:19,benchmark,benchmarks,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2561,4,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,- Add support to load VTK polylines in legacy formated files; - used the new astyle formating onto the three files. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/576:367,test,test,367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/576,2,['test'],['test']
Testability,"- Add tests on add/remove edges/vertices using EdgeSetTopologyModifier methods; - Update FakeTopology_Scene to add mechanical Components with TopologyData; - Add test to check TopologyData and TopologyHandler registration; - Some cleaning, factorization and documentation in EdgeSetTopology_test code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3245:6,test,tests,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3245,4,['test'],"['test', 'tests']"
Testability,- Add virtual function getHessian to ScalarField; - Add new implicit fields; - ~~Add PointSplatRenderer for implicit field display~~. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1510:385,test,test,385,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1510,2,['test'],['test']
Testability,"- Add: Display border of tetrahedra, ; - Update: draw methods to check the number of elements and reduce the number of indent in code.; - Add: handle wireframe for triangles and quads; - Fix: Bad lighting disable without corresponding enable in drawTools. ![simpletesselatedtetratopologicalmapping_00000001](https://user-images.githubusercontent.com/21199245/53704580-155f0300-3e1e-11e9-9e55-edd39145af29.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/952:662,test,test,662,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/952,2,['test'],['test']
Testability,- Add: script event listener; - Add: scene coupling Geomagic and SofaCarving ; - Update carving detection collision to use the existing pipeline instead of relaunching a narrowphase intersection computation. - Add method to remove topological element from PointModel collision.; - Fix sofaCarving tests. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/787:297,test,tests,297,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/787,3,['test'],"['test', 'tests']"
Testability,"- As announced in #2010, `BruteForceDetection` can inherit from `BruteForceBroadPhase`.; - The narrow phase code has been extracted into a new component: `BVHNarrowPhase`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2043:711,test,test,711,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2043,2,['test'],['test']
Testability,"- Axis : storing raw pointer in a static map, and there are never deleted afterwards (-> use shared_ptr) + removing the ugly pair of pair.; - MeshTopologyLoader : the io::Mesh used to read the mesh (from a file) is never deleted after filling the topology (its purpose). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3671:810,test,test,810,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3671,2,['test'],['test']
Testability,- Change CMakeLists; - move all files inside /src/CGALPlugin; - clean headers includes and \#ifdef; - remove some warnings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1308:375,test,test,375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1308,2,['test'],['test']
Testability,"- Change all the required SOFA_*_DEPRECATED to SOFA_*_DISABLED for things whose has been flagged to be disabled for v21.12. - Uncomment the actual things flagged to be deprecated starting from v21.12 (commented until now for the developers, because of the deprecation warnings flood). [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/219]; [ci-depends-on https://github.com/sofa-framework/Regression/pull/20]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2524:966,test,test,966,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2524,2,['test'],['test']
Testability,- Change the Task interface to support scheduled thread. . - Implement a CpuTask class a base class for all tasks executed in the CPU. - Implement a CpuTask::Status class to synchronise all tasks executed in the CPU. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/970:468,test,test,468,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/970,2,['test'],['test']
Testability,"- Changelog update; - CMake fix for Windows Dependency Pack; - CMake fixes for packaging (SofaMacros, GLU target missing); - New script + CMake rules to add MacOS post-install custom steps (for packaging); - CMake fixes for modularized projects (SofaExporter, SofaHaptics, SofaOpenglVisual, SofaPreconditioner, SofaSparseSolver); - CMake clean tests dispatch in build tree, e.g now SofaConstraint_test build files go to `<build-dir>/SofaGeneral/SofaConstraint/SofaConstraint_test`. These changes also permit to generate binaries for all platforms with our CI. Continuous Deployment is not far!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1088:344,test,tests,344,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1088,3,['test'],"['test', 'tests']"
Testability,"- Check that device ID is valid before making it current in destruction method.; - Small updates on warning messages. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3698:657,test,test,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3698,2,['test'],['test']
Testability,"- Clean Triangle2EdgeTopologicalMapping; - Fix TopologySparseDataHandler swap and remove methods; - Add new regression test, to test add/remove of triangle with and without Triangle2EdgeTopologicalMapping; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/875:119,test,test,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/875,4,['test'],['test']
Testability,"- Clean all Cuda/Cpu scene examples from aliases.; - Fix **DiagonalMass**, **MeshMatrixMass**, **IdentityMapping** and **BarycentricMapping** class template declaration.; - Fix several scenes behavior. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1000:453,test,test,453,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1000,2,['test'],['test']
Testability,"- Clean and doc current code; - Add test on manager init with Links; - Add test on wrong init; - Add test on manager with full set init. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3407:36,test,test,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3407,5,['test'],['test']
Testability,"- Clean the files; - Add simple tests; - Add constructor for initializer lists. Allow to write concise object creation; - Allow builder pattern through the `setSelectedItem` methods. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3737:32,test,tests,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737,3,['test'],"['test', 'tests']"
Testability,"- Description of the component was a bad copy/paste. Now, it describes how the linear system is solved; - Timers are added to measure the duration of each step of the `solve`; - I added support of any matrix derived from `BaseMatrix`. It is not very useful as it is converted in a dense matrix anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2336:841,test,test,841,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2336,2,['test'],['test']
Testability,"- Document the steps of the CGLinearSolver; - Remove the useless data verbose; - Use d_ for data name; - Propagate this joyeuserie. :man_dancing: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2098:687,test,test,687,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2098,2,['test'],['test']
Testability,"- Does not really make sense for point/line topologies (first intention); - even for 2d/3d, there are no normals given so the rendering is a bit weird IMO. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4887:695,test,test,695,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4887,2,['test'],['test']
Testability,"- Each accessor has its own file: 1 for the default class, 1 for the specialization for vector types. The specialization for Data is still in Data.h; - I added a compilation error in case the type is const while trying to create a `WriteAccessor` on it.; - I added unit tests for the default class, for the vector types specialization and for the Data specialization.; - I removed the deprecated `<<` and `>>` operators. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3234:270,test,tests,270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234,3,['test'],"['test', 'tests']"
Testability,"- FIX error [""cannot create directory: File name too long""](https://ci.inria.fr/sofa-ci/job/windows7_VS-2013_options_amd64/579/console) by improving subtests listing regex.; - FIX error [""tail: illegal option -- -""](https://ci.inria.fr/sofa-ci/job/centos_clang-3.4_options/387/console) by removing crash dump from log summary (dump can be found in test report and build log).; - ADD cosmetic changes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/205:314,log,log,314,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/205,4,"['log', 'test']","['log', 'test']"
Testability,- FIX unkown command sofa_add_subdirectory_external; - FIX EIGEN3_ROOT priority over system Eigen; - CLEAN naming (Eigen -> Eigen3). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1175:384,test,test,384,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1175,2,['test'],['test']
Testability,- Fix Attachconstraint for use with FreeMotionAnimationLoop - credit to @hugtalbot #940; - refactor of parameters to use `SOFA_UNUSED`; - fix dynamicConstraintFactor. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/949:418,test,test,418,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/949,2,['test'],['test']
Testability,"- Fix CMake to use new headers.; - Update namespace; - Fix some warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3076:613,test,test,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3076,2,['test'],['test']
Testability,- Fix and add more examples; - Add a carvingDistance parameter to be able to have real collision before carving.; - Add the possiblity to handle several collision models on the target object.; - Clean and Doc the code. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/712:470,test,test,470,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/712,2,['test'],['test']
Testability,"- Fix bad behavior of GridTopology. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1573:575,test,test,575,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1573,2,['test'],['test']
Testability,"- Fix cmake when building on a system with Qt6 and Qt5 are detected in the same time (qt5 is prioritized); - Fix cmake var for QGLViewer (not supported with Qt6); - Fix for Qt6 where its windeployqt utility does not support the parameter ""--no-angle"" anymore (leads to a build error); - Fix for Qt6.2 while doing the cmake configuration (I suppose the latest Qt6.2 did some changes for its cmake packages), ; tested on Windows 11 and Qt6.2 (and VS2022). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2490:409,test,tested,409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2490,3,['test'],"['test', 'tested']"
Testability,"- Fix compilation and CMakeLists of the plugin before moving it out from SOFA repository. OpenCTM seems not to be supported anymore but some project are still using it. ; I will move that plugin into my github repo embedding directly OpenCTM lib. ; Unless you think it is of any use on sofa-framework repository. FYI: OpenCTM — the Open Compressed Triangle Mesh file format — is a file format, a software library and a tool set for compression of 3D triangle meshes. The geometry is compressed to a fraction of comparable file formats (3DS, STL, VRML, COLLADA...), and the format is easily accessible through a simple, portable API. http://openctm.sourceforge.net/. I was using it for WebGL as this format is slim and quick to load.; See for example here:; https://alteredqualia.com/three/examples/webgl_loader_ctm_materials.html. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1359:1082,test,test,1082,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1359,2,['test'],['test']
Testability,"- Fix edges computation in GridTopology: It is now based either on triangles or on the quad grid, depending on what is asked. Option ```computeTriangleList``` has been added to GridTopology. True by default. If false, only quads will be computed and the corresponding list of edges; - Set TriangleSetTopologyContainer to invalid if EdgeInTriangle buffer creation failed. Check validity of the topology in TriangularBendingSprings. This will avoid the crash. fix #1243. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1323:720,test,test,720,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1323,2,['test'],['test']
Testability,"- Fix link issues because of missing *_API; - Follow naming guidelines + depreciation of old variables; - OglGrid uses a cached list of vertices; - Use of `saveLastState` and `restoreLastState`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3115:734,test,test,734,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3115,2,['test'],['test']
Testability,"- Fix memory problem of #1178; - Add mecanism to load Data vector only when clicking on ""show values"". Fix #1178. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1181:365,test,test,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1181,2,['test'],['test']
Testability,"- Fix some size_t to uint int conversion warnings; - Fix some double to float warnings. - When looping on topology buffer, use the typedef corresponding to id instead of using uint or int. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/755:442,test,test,442,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/755,2,['test'],['test']
Testability,"- Fix the Von Mises stress drawing and use ColorMap Blue to Red by default.; - Factorize code for plain and wireframe drawing; - Fix crash when trying to display Von Mises stress per point without computing it. . Fix #1852 . ![Tetra2TriangleTopologicalMapping_00000004](https://user-images.githubusercontent.com/21199245/108897384-5574ad00-7616-11eb-979a-55e90c60a768.png); ![Tetra2TriangleTopologicalMapping_00000005](https://user-images.githubusercontent.com/21199245/108897396-573e7080-7616-11eb-8b3f-f40f559b186c.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1854:1062,test,test,1062,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1854,2,['test'],['test']
Testability,"- Fix warnings in `UniformMass`; - Add `RequiredPlugin`; - Add `OglGrid` and `OglSceneFrame`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2055:633,test,test,633,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2055,2,['test'],['test']
Testability,"- Fix warnings in code due to pluginization; - Clean required plugins warnings + required Data warnings; - Add 2 new scenes to test geomagic against a rigid and a deformable sphere. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2846:127,test,test,127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2846,3,['test'],['test']
Testability,- Fix: init send error when good collision models are not found instead of randomly picking the first one found in the graph.; - Clean model check in doCarve and fix advancedTimer instruction; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1110:444,test,test,444,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1110,2,['test'],['test']
Testability,"- Fixed decoding of namespace, class, template and type names that have numbers.; - Added BaseClass test. Fixes #1216 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1222:100,test,test,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1222,3,['test'],['test']
Testability,"- Fixed the module name; - config.h is now config.h.in. A lot more work to do if we want to clean this plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4719:650,test,test,650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4719,2,['test'],['test']
Testability,"- Hiding local declaration ; - Parameter names do not match ; - Uninitialized class members ; - Lambda capture is never used ; - Local variable can be made const ; - Result of a postfix operator is discarded ; - add explicit specifier to make constructor non-converting ; - Member function can be made const ; - Variable can be moved to if-statement ; - Declaration and assignment can be joined ; - Return by const value. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2559:961,test,test,961,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2559,2,['test'],['test']
Testability,"- Implementation of applyConstraint (a task from https://github.com/sofa-framework/sofa/issues/3967); - some data cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4309:663,test,test,663,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4309,2,['test'],['test']
Testability,"- In `ScopedAdvancedTimer`, store the timer id as a real id rather than the `std::string` used to find the real id. This fixes a strange bug occurring with `ScopedAdvancedTimer` (which I am not able to explain).; - In `AdvancedTimer`, use a map for constant complexity when searching an id, instead of a `std::vector`. [ci-depends-on https://github.com/sofa-framework/Compliant/pull/2]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2349:926,test,test,926,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2349,2,['test'],['test']
Testability,"- IncompleteTypeInfo was defined with SOFA_DEFAULTTYPE_API but this is incorrect as IncompleteTypeInfo is inline only. It was apparently harmless in Release/RelWithDebug but was complaining in Debug config with an undefined reference in SofaBaseMechanics 🧙‍♂️; - Since a few version of MSVC2019, SofaCUDA could not compile and was complaining on a missing pow() function. Apparently, one has to use powf() instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1761:954,test,test,954,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1761,2,['test'],['test']
Testability,"- Introduce visitor to know the number of non-diagonal mass matrices; - Use this new visitor in EulerExplicitSolver to apply the optimization based on diagonal matrices, or not. This PR is based on #2163 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2165:745,test,test,745,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2165,2,['test'],['test']
Testability,"- Lots of comments; - Split into multiple functions (`solve` function easier to read). Next steps:. - Create a visitor to detect automatically if the mass matrix is trivially invertible (diagonal matrix), in order to replace `d_optimizedForDiagonalMatrix`.; - Benchmark with/without `SOFA_NO_VMULTIOP`; - More tests, in particular for the standard Euler method (not symplectic); - Update the doc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2163:260,Benchmark,Benchmark,260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163,4,"['Benchmark', 'test']","['Benchmark', 'test', 'tests']"
Testability,"- Make the assert static so the check is made at compile-time, independently of the compilation mode; - Make the check generic using constants that exist independently of the type of blocks. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2347:11,assert,assert,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2347,3,"['assert', 'test']","['assert', 'test']"
Testability,- Mass conponent in the scenes using ParticleSink or ParticleSource need to handleTopologyChange as the number of dof change. - Also fix warning in scenes due to use of alias. - Add non regression test for 4 scene in this plugin. . Is this plugin build on CI... will see... Fix #1276. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1278:197,test,test,197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1278,3,['test'],['test']
Testability,"- Massive cleaning; - Factorize duplicated code; - Fix storage of the local jacobian matrix. There was only one jacobian matrix for two springs, and the second spring always overwrote the values of the first jacobian matrix. There are now one jacobian matrix by spring.; - Implementation of `buildStiffnessMatrix` (a task from https://github.com/sofa-framework/sofa/issues/3967). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4304:919,test,test,919,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4304,2,['test'],['test']
Testability,"- Match variable names in declaration and definition; - Make some variable const; - Indentation consistency; - Namespace concatenation and pragma once. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3283:691,test,test,691,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3283,2,['test'],['test']
Testability,"- MinResLinearSolver scene follows the same pattern than the other solver scenes; - speed up CGLinearSolver scene using another template. The matrix is assembled: a bit faster than the matrix-free method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2494:744,test,test,744,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2494,2,['test'],['test']
Testability,- Mostly conversion from int/uint into size_t; - Also some conversion to match GL types. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1296:340,test,test,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1296,2,['test'],['test']
Testability,"- Move CpuTask class into its own file; - Remove ThreadSpecificTask class, as it was not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1993:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1993,2,['test'],['test']
Testability,"- Move both scenes as they are using several components from the plugin to illustrate SPH behavior and rendering.; - Add a simple rendering version of PointSplatModel scene in examples:. ![PointSplatModel_00000001](https://user-images.githubusercontent.com/21199245/162045768-58ee77d5-6127-4e6d-996f-8f4ffc5aba4c.png). ![PointSplatModel_00000002](https://user-images.githubusercontent.com/21199245/162045788-965a7e35-a306-4b52-82c8-e4ceeeb5a124.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2847:990,test,test,990,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2847,2,['test'],['test']
Testability,"- Move code to cpp; - Fix example scene; - Minor cleaning (constness, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2319:615,test,test,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2319,2,['test'],['test']
Testability,"- Move some code in cpp; - Add TopologyElementType to be set by child class. By default they are set to:; ```; TopologyElementType m_inputType = TopologyElementType::UNKNOWN;; TopologyElementType m_outputType = TopologyElementType::UNKNOWN;; ```; - Add method checkTopologyInputTypes to check m_inputType / m_outputType against input/output topology container type. - Add elementTypeToString method to be able to display error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3428:967,test,test,967,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3428,2,['test'],['test']
Testability,- Not sure this is the good way to do it with cmake findCGal but otherwise the dll are not linked (if not on env_path). - Add a quick scene test for cgal without image plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/958:140,test,test,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/958,3,['test'],['test']
Testability,"- On Windows, Cmake was not copying the debug version of the libpng/zlib/libtiff DLLs, but was still linking with the debug library (lib) files. So it was not loading the CImgPlugin when required while running runSofa_d. + change the libsuffix with a newer version of add_definition() in debug mode in multiconfig mode (ouf); (https://cmake.org/cmake/help/v3.17/policy/CMP0043.html#policy:CMP0043) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1328:651,test,test,651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1328,2,['test'],['test']
Testability,"- Option is set to true by default to not change the current behavior in SOFA; - also improve the EdgeInformation access in for loop in draw method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2297:688,test,test,688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2297,2,['test'],['test']
Testability,"- Pass done on the whole source folder; - Aliases replaced. Fixes https://github.com/sofa-framework/sofa/issues/3320https://github.com/sofa-framework/sofa/issues/3320. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3351:707,test,test,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3351,2,['test'],['test']
Testability,"- PrecomputedLinearSolver needed the ODESolver EulerImplicitSolver from SofaImplicitOdeSolver, for an information available in a higher level (OdeSolver directly); - useless inclusion of TetraFEM from SofaSimpleFEM; ▶ No dependencies on SofaImplicitOdeSolver and SofaSimpleFEM anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2012:825,test,test,825,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2012,2,['test'],['test']
Testability,- QDocBrowser will be build by default if Qt5WebEngine is found.; - Add option in cmake to enable the QDocBrowser (If I did it well) that will set Qt5WebEngine as required to warn user to install it if they want the browser. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1315:476,test,test,476,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1315,2,['test'],['test']
Testability,"- Quad spring sphere scene has been fixed; - The scene has been renamed to follow the same convention than the benchmark folder; - The scene has been duplicated and converted to cpu to compare performances; - The scene has been duplicated and both cpu and gpu are superimposed to compare. They are not matching perfectly. Not matching:; ![image](https://user-images.githubusercontent.com/10572752/149406468-a5eae1e9-0278-4a03-8c9a-1c611fbcb0df.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2598:111,benchmark,benchmark,111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2598,3,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"- Reformat based on the guidelines; - Fix memory leak (material not freed); - Use accessors instead of beginEdit/endEdit; - Use refs instead of copies; - Add component state support; - Compute bounding box from the mstate function; - Add const when possible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3141:798,test,test,798,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3141,2,['test'],['test']
Testability,"- Remove C timers and their log; - Replace some AdvancedTimer to ScopedAdvancedTimer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2769:28,log,log,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2769,3,"['log', 'test']","['log', 'test']"
Testability,"- Remove CudaExternalForceField as ExternalForceField was removed in 2008 and it was not referenced in CMakeLists.txt; - Add CudaTexture.h to the CMakeLists.txt file. It is used and must be part of the project. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3632:750,test,test,750,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3632,2,['test'],['test']
Testability,"- Remove CudaExtraMonitor as cpu version has been removed.; - Unactive BoxStiffSpringForceField with Cuda template. Should we remove it?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3077:677,test,test,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3077,2,['test'],['test']
Testability,"- Remove all Data and method related to triangle selection on a plan.; - Data: normal, dmin, dmax; - Methods: void selectTrianglesAlongPlane(), bool isPointInPlane(Coord p);; - Merge method selectTrianglesFromString() into initTriangleInformation(); - Add callback for Data pressure and triangleList; - Update the example scene to use a BoxROI instead of plan definition on a big yellow beam 😆 . ![image](https://github.com/sofa-framework/sofa/assets/21199245/d9ecff19-44df-4229-91e2-a2c30b267b81). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4743:1038,test,test,1038,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4743,2,['test'],['test']
Testability,"- Remove empty tests; - Remove ""tests"" directory at root; - Let CMake satisfy test dependencies at the right moment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1886:15,test,tests,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1886,5,['test'],"['test', 'tests']"
Testability,"- Remove reset method which was calling a second time init at start; - Replace activateAtIteration and all mechanism of iteration count by a single activate Data<bool>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3327:708,test,test,708,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3327,2,['test'],['test']
Testability,"- Remove some scenes in the module as their equivalent are in examples\Components\linearsolver; - Add example for PrecomputedLinearSolver; - Add example for SVDLinearSolver; - Minor cleaning; - Speed up an example using multithreading (from 74 fps to 131 fps in 1000 time steps on my computer). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2422:834,test,test,834,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2422,2,['test'],['test']
Testability,"- Remove unsued topologyData: d_vertexInfo, d_edgeInfo; - remove corresponding inner classes; - small cleanings in headers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2567:663,test,test,663,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2567,2,['test'],['test']
Testability,"- Remove unwanted second call to graph init in Triangle and Quad PressureFF; - Remove multiple call to Component init in LinearElasticity_test instead of using SetPressure method; - Remove some missing animationLoop warnings . Those wrong behaviors are failing in PR #3369 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3447:814,test,test,814,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3447,2,['test'],['test']
Testability,"- Rename ```TopologyObjectType``` into ```TopologyElementType``` (this enum is used to define the type of upper element contain in the current topology); - Factorize methods and member storing this information into ```BaseMeshTopology::m_upperElementType``` ; - Update ```DiagonalMass``` and ```MeshMatrixMass``` which were using their own enum to store the type of topology. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1593:917,test,test,917,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1593,2,['test'],['test']
Testability,"- Rename label checker with `pr-` prefix; - Remove useless code in github request api; - Add Yinoussa among core reviewers on GHD. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4444:670,test,test,670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4444,2,['test'],['test']
Testability,"- Rename method `initTopology `already present in **XXSetTopologyContainer** classes into `initContainers`; - Add virtual method in `BaseMeshTopology`; - Add Override method implementation in `MeshTopology`; - Fix use case in `ParallelBVHNarrowPhase`. This should fix #2063 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3368:815,test,test,815,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3368,2,['test'],['test']
Testability,"- Rename variable ```lastElementIndex``` into ```m_lastElementIndex```; - Add accessor; - Update this counter during add/remove operation. This counter is mandatory when multiple remove events are queued. ; - Init the counter during topologyData connection with its topology buffer. api is converging but this PR might have some side effects... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2359:884,test,test,884,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2359,2,['test'],['test']
Testability,"- Replace all VisualModel by OglModel; - Add `<RequiredPlugin name=""SofaOpenglVisual""/>` in all scene with an OglModel. To be merged after #1080 pluginisation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1081:411,test,test,411,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1081,2,['test'],['test']
Testability,"- Replace the use of phtread (on windows) or boost thread (on linux) by std::thread. Use an atomic bool to be able to stop the 'emulator/haptic' thread from the main thread before closing it. ; This shouldl fix possible segmention fault or lock/time out at scene test exit (cf dashboard); - Also fix the timeToSleep test inside the thread which was always failing due to bad conversion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1665:263,test,test,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1665,4,['test'],['test']
Testability,"- Restore QGraphStatWidget, QMomentumWidget and QEnergyWidget which have been removed by error in a PR #750 ; - Replace use of Qwt by QtCharts. ![graph_energy_new](https://user-images.githubusercontent.com/21199245/94669235-43197000-0311-11eb-89ed-4e763d29cf49.JPG); ![graph_momentum_new](https://user-images.githubusercontent.com/21199245/94669247-46acf700-0311-11eb-84e3-5e73650c3c58.JPG). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1508:643,test,test,643,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1508,2,['test'],['test']
Testability,"- Result for `RegularGridTopology_dimension.scn` -> showing how to create, 3D (Hexa), 2D (Quad) or 1D (Line) grid. . ![RegularGridTopology_dimension_00000001](https://user-images.githubusercontent.com/21199245/199712906-8bcfbfa0-e4d5-4109-90c8-d8c891c8b13c.png). - Result for `ProjectToPlaneConstraint.scn` -> not 100% sure about the expected behavior, but at least there is no error/warning and it is moving ! (constrained by the Plane on the left). ![ProjectToPlaneConstraint_00000001](https://user-images.githubusercontent.com/21199245/199713180-eed459e5-bd23-4e0e-8f08-2f43c2ba7c8c.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3453:1131,test,test,1131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3453,2,['test'],['test']
Testability,"- Set printLog to false in scenes creations in MeshExporter tests; - Also remove some warnings in scenes creations. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4148:60,test,tests,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4148,3,['test'],"['test', 'tests']"
Testability,"- Simplify instructions in ConstraintSolver; - Fix scene sofa_1000PR.scn (and make it multithreaded). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2138:641,test,test,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2138,2,['test'],['test']
Testability,- Some macro DLL missing and one not to be set in subsetContactMapper.; - Fix build of plugin SofadistanceGrid_test also: only build if SOFA_BUILD_TESTS and SofaTest_FOUND. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/966:424,test,test,424,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/966,2,['test'],['test']
Testability,"- Split init method in 3 depending if mesh, data or topology is used. also Avoid recomputing topology at updateVisual; - also remove not working topologyHandler. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2299:701,test,test,701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2299,2,['test'],['test']
Testability,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4429:384,test,tests,384,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429,3,['test'],"['test', 'tests']"
Testability,- Tetra2TriangleTopologicalMapping: Fix addTetrahedron case in tetra2TriangleTopologicalMapping for a tricky add + remove border triangles case.; - Update scene tests; - TriangleSetTopologyModifier: Add more check in AddTriangle methods. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/998:161,test,tests,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/998,3,['test'],"['test', 'tests']"
Testability,"- The function `addKToMatrix` in `SurfacePressureForceField` had a `return` statement before doing anything. I removed it. The reason of this statement is not known, but it has been identified here: https://github.com/sofa-framework/sofa/commit/2ad1468eea45325af9d727185fc5ba0c288b7608#r31731863; - Unit test is added for `SurfacePressureForceField`. It verifies the correctness of the function `addKToMatrix`. It would fail without the removal of the `return` statement.; - Template specializations have been moved from the inl to the cpp; - Cosmetic cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3935:304,test,test,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3935,3,['test'],['test']
Testability,"- The solver that is created if none is found is no longer always created. It is created only if need be.; - The type of the solver has changed from `LCPConstraintSolver` to `GenericConstraintSolver`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3994:740,test,test,740,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3994,2,['test'],['test']
Testability,"- The variables `SOFAGUI_HAVE_SOFAGUIQT` and `SOFAGUI_HAVE_SOFAHEADLESSRECORDER` were not defined whereas they are used in `SofaGui/SofaGuiConfig.cmake.in`.; - Modules in `SofaGui/SofaGuiConfig.cmake.in` have been updated. . I expect it will also fix the SofaPython3 GitHub actions (see for example https://github.com/sofa-framework/SofaPython3/runs/6592539251?check_suite_focus=true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3011:925,test,test,925,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3011,2,['test'],['test']
Testability,"- This PR should fix unload of LMConstraint's plugin (problem visible on the centos' CI machine with the 6xx failed scenes tests); + Fix LMconstraint itself (bogus semicolon); + Fix one scene to illustrate a working scene (from #1817). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1831:123,test,tests,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1831,3,['test'],"['test', 'tests']"
Testability,"- Update CarvingManager to use SingleLink instead of string path.; - Clean warnings in scenes; - Clean warnings in tests; - remove reset method; - use componentState value instead of bool m_carvingReady. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3332:115,test,tests,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3332,3,['test'],"['test', 'tests']"
Testability,"- Update EdgeSetTopologyContainer to use this new version. The old code was not working in several tricky cases.; - Add unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4028:125,test,tests,125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4028,3,['test'],"['test', 'tests']"
Testability,"- Update TopologyData to use rebind for vector_device; - Remove begin/endEdit; - Add extra Data for template specialisation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2569:664,test,test,664,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2569,2,['test'],['test']
Testability,- Update some demo scenes to have a better physics approach direct solvers.; - Add an example with several deformable cubes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1533:376,test,test,376,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1533,2,['test'],['test']
Testability,"- Update topology access to use full array; - move computation of min max mean stress value out from `draw `method and move them in `addForce` instead (only if show option is true). Quick test on the classic tissue scene give: ; - Visual model only: 260 fps ; - FEM before: 190 fps; - FEM with this PR: 220 fps. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3413:188,test,test,188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3413,3,['test'],['test']
Testability,- Update: Set drawColor as Data<RGBAColor> for topology debug drawing.; - Update: triangle and Quad drawing to display them a little smaller to better see the geometry structure.; - Fix: drawing scale indices could be Inf.; - Fix: normal color drawing and check buffer sizes in DrawTool; - Update: replace word colour by color to match openGL spelling in DrawTool. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/877:616,test,test,616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/877,2,['test'],['test']
Testability,"- Use BaseTest instead of Sofa_test; - Check more values in the different tests. ; - Check several values from analytic values; - Clean some space and indent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2191:74,test,tests,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2191,3,['test'],"['test', 'tests']"
Testability,"- Use `sofa_add_module` intensively for all new NG modules.; - Use `sofa_add_collection` for all old modules that are now simple collections.; - Make Sofa.GUI a real module.; - Fix disabled targets inclusion in SDK. :warning: This PR changes basically all CMake option names. E.g. `PLUGIN_SOFAGENERALLOADER` becomes `COLLECTION_SOFAGENERALLOADER`. The good thing is that it's way clearer. This PR also contains the same fix as #3103. EDIT ; New changes:; - Move Sofa.GL module under Sofa directory; - SofaKernel is gone.; - Everything was moved under applications/collections/deprecated; - New cosmetic feature in SofaMacros to hide sub-options when base-option is disabled (like cmake_dependent_option but simpler). E.g. when I disable SOFA_COMPONENT, all SOFA_COMPONENT_* are hidden.; - A bit of cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3120:1347,test,test,1347,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120,2,['test'],['test']
Testability,"- Use std::set instead of std::list in TopologyContainer to store TopologyHandler; - Use bool m_isRegistered to tack info if the topologyHandler is registed inside the TopologyContainer list. Catch return of std::insert to update this bool.; - Factorize method to link topologyHandler using sofa::geometry::ElementType. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3271:859,test,test,859,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3271,2,['test'],['test']
Testability,"- Using noexcept and constexpr keywords here and there.; - replace multiple versions of functions/ctors with conditional templated ones ; - cleaning (static_cast, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2282:708,test,test,708,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2282,2,['test'],['test']
Testability,"- Usual cleaning (pragma, namespaces); - Remove use of the deprecated SofaSimulation in the Sofa code base; - Fix dependencies with SofaSimulationCommon: . Almost all projects just needed SofaSimulationCore from SofaFramework, but were instead finding/linking SofaSimulationCommon. #1527 . After merging, you will mostly have a compilation error about not finding SOFA_SOFASIMULATIONCOMMON_API, or something similar. -> #1670. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1694:966,test,test,966,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1694,2,['test'],['test']
Testability,"- Various cleaning to remove SceneChecker warnings; - Fix some examples which should use `vertexMass ` and not `totalMass ` in `uniformMass ` as the number of particles evolve. ; - Fix SpatialGridPointModel scene which was timing out on CI. There was a problem of init with too many particles created compare to the collision and sphFF distances. ; - Update SPHParticleSink_obstacle.scn to wash the dragon; . **SpatialGridPointModel new behavior** ; <img src=""https://github.com/sofa-framework/sofa/assets/21199245/305fd2a4-c15b-4315-8278-509c3fef6204"" width=""75%"">. And working collisions:; <img src=""https://github.com/sofa-framework/sofa/assets/21199245/8a117063-4714-4e0c-8156-401dcba3fde0"" width=""75%"">. **New version of SPHParticleSink_obstacle**; <img src=""https://github.com/sofa-framework/sofa/assets/21199245/184dad41-bb91-45f1-9d38-b913610aec78"" width=""75%"">. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4149:1410,test,test,1410,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4149,2,['test'],['test']
Testability,- [DrawTool] Add drawSphere method taking a color as additional parameter. Improve warning message in DrawLines; - [SofaKernel] Replace Simulation serr by msg_error; - [SofaBaseTopology] Add a warning in edge creation if edgeId not found and remove unwanted warning in Tetra2TriangleTopologyMapping; - [SofaGeneralDeformable] Fix TriangularBendingSprings drawing method. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1111:622,test,test,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1111,2,['test'],['test']
Testability,"- [Geometry] Update method signature of intersectionWithEdge to pass barycentric coordinates instead of 3D coord.; - [Topology.Container] Update all method compute2EdgesIntersection to use the generic method in Edge class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4194:762,test,test,762,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4194,2,['test'],['test']
Testability,- [SofaKernel] Add option in stiffspringFF to add a list of springs given 2 lists of indices. To be merged after #1131 ; I tested the merge of both it works. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1093:123,test,tested,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1093,3,['test'],"['test', 'tested']"
Testability,- [SofaKernel] Update several AdvanceTimer msg and add more steps.; - [SofaKernel] Fix advancedTimer in BruteForceDetection pipeline. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1094:385,test,test,385,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1094,2,['test'],['test']
Testability,"- `BaseLinearElasticityFEMForceField::d_poissonRatio` is now a `VecReal` instead of a `Real`. ; - Introduction of 2 functions to compute Lamé coefficients; - Callbacks on the elasticity parameters to check their validity; - `BeamFEMForceField`, `TriangleFEMForceField`, `TriangularFEMForceField` and `TriangularFEMForceFieldOptim` now inherits from `BaseLinearElasticityFEMForceField`. They now support a vector of Young's modulus, compared to a single scalar. TODO: check that the default value changed in some force fields. [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/141]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852:1142,test,test,1142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852,2,['test'],['test']
Testability,"- `DiscreteIntersection::testIntersection` and `DiscreteIntersection::computeIntersection` are made virtual, so derived classes can override them; - Comments; - Simplification; - Removed unused code (draw, unused variables etc); - Fix `MinProximityIntersection::computeIntersection` and `NewProximityIntersection::computeIntersection` on cubes; - Fix compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2178:25,test,testIntersection,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2178,3,['test'],"['test', 'testIntersection']"
Testability,"- `ImageCImg_ReadBlackWhite` is split into 4 tests, each corresponding to an file extension. They were all tested inside the same test. It allows to debug a failing test more easily.; - Some memory leaks are fixed; - `ImageCImg_ReadBlackWhite_jpg` is fixed. The problem was due to a bad logic of conversion from `float` to `unsigned char`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2147:45,test,tests,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2147,7,"['log', 'test']","['logic', 'test', 'tested', 'tests']"
Testability,"- `InitTasks.h` was useful only because it includes `CpuTask.h`; - `TaskScheduler.h` is not necessary in the header file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2266:661,test,test,661,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2266,2,['test'],['test']
Testability,"- `LinearSolverConstraintCorrection::F` is deprecated because it is not used. I believe it stopped to be used here: https://github.com/sofa-framework/sofa/commit/50fe60f28306912e0e853c0a9493bccdd9735ff7#diff-b0264445a2a81f648e146f0b1d59d5d197cf3a935f3b7cbb24af11a38b8e6e68L433; - `override` keyword was missing in `~LinearSolverConstraintCorrection`; - `LinearSolverConstraintCorrection::J` is renamed to `m_constraintMatrix`. Its floating-type is no longer `SReal`, but `Real`. In theory, it's breaking.; - `computeJ` is no longer used. Instead, I introduce the method `convertConstraintMatrix`, which is IMO clearer. `computeJ` could be removed I think. But for some reasons it is virtual. Anyone overrides it?; - Added a timer in `convertConstraintMatrix`. This must be used for benchmark to evaluate the cost of the conversion. I believe that we can think of a way to avoid the conversions (only if it costs too much).; - `MatrixLinearSolverInternalData::copyJmatrix` is renamed to `convertMatrix` and it is now protected.; - Made `getLocalJ` clearer.; - Added details for `addJMInvJt`; - Introduced rebind types for `CompressedRowSparseMatrixConstraint`, `CompressedRowSparseMatrixGeneric` and `CompressedRowSparseMatrixMechanical`; - `CompressedRowSparseMatrixConstraint`: added test for the stream operator. The operator no longer adds trailing spaces on each line.; - Better iterators in `CompressedRowSparseMatrixConstraint`; - Missing header guard in `CompressedRowSparseMatrixConstraintEigenUtils.h`; - Fixed `operator()` in `CompressedRowSparseMatrixToEigenSparseVec`. Also added error message if out-of-bounds. Required for https://github.com/sofa-framework/SofaPython3/pull/459; - Introduction of `is_specialization_of`. Used in [a SofaPython3 PR](https://github.com/sofa-framework/SofaPython3/pull/459). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Orig",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5017:782,benchmark,benchmark,782,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5017,1,['benchmark'],['benchmark']
Testability,"- `TVecId` can be `constexpr`; - Enumerations are scoped (global variables are declared to keep compatibility with previous unscoped enumeration); - Indices are based on enumerations (no more hard coded indices); - Main states are defined as a global variable; - When main states are called, the global variable is read instead of the call of a static function (each time the static function is called, it instantiates a new variable instead of re-use the same). Main changes are in `VecId.h`. The rest is trivial changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5082:1062,test,test,1062,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5082,2,['test'],['test']
Testability,"- `TetrahedronFEMForceField` Add getter per tetrahedron for:; - Rotation matrix; - Initial rotation matrix; - Material stiffness matrix; - Strain Displacement; - Local coordinates (in rotated frame); ; - `TetrahedralCorotationalFEMForceField`; - Add warning at init if topology is empty; ; - `FastTetrahedralCorotationalForceField`; - Move Data scope as public; - Set poisson and young modulus as required Data. This PR integrate changes in component needed for tests introduced in #2842. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2845:462,test,tests,462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2845,3,['test'],"['test', 'tests']"
Testability,"- `loadPlugin` and `loadPluginByPath` return an enum: more detailed than a boolean; - `readFromIniFile` returns the list of plugins that have been loaded; - The plugin manager GUI highlights which plugins have been loaded in the GUI initialization (not the autoload file). Black text is for plugins that have been loaded prior the GUI initialization, or after. Blue for plugins loaded during init. See screenshot; - More log messages. ![image](https://user-images.githubusercontent.com/10572752/177587029-83209468-2213-4601-8e30-5b39bd331a2e.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3109:421,log,log,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3109,3,"['log', 'test']","['log', 'test']"
Testability,"- add CMakeLists.txt for anatomyModelling tutorial example (which was missing); - update anatomyModelling.cpp in order to build the anatomy example (in bin directory); The example compiles and runs fine on linux ubuntu, but I'm not sure that behaviour is as it should be! Please examine it before merging. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/287:557,test,test,557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/287,2,['test'],['test']
Testability,"- add computeBBox; - more expressive code; - formatting; - fix typos; - optimizations; - remove unused aliases; - better description. Based on #4776 to avoid conflicts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4777:708,test,test,708,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4777,2,['test'],['test']
Testability,"- chainHybrid and oneTetrahedron was compiling but not working (no GUI, nothing); - compositeObject, mixedPendulum and oneParticle were disabled (needless to say that they were not compiling and obsolete). This PR makes them compile and work as intended. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2024:794,test,test,794,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2024,2,['test'],['test']
Testability,- change old sout/serr logs into msg_ ; - replace some #ifndef NDEBUG by if (CHECK_TOPOLOGY); - Add AdvanceTimer logs during topology changes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/874:23,log,logs,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/874,4,"['log', 'test']","['logs', 'test']"
Testability,"- clean (const, foreach loop); - optimize a little bit when initializing the normals vector; - if there is not index, use memset to clear all vectors at once; - if there are indices, just dont clear the new vectors as there are supposed to be 0 already. On a big mesh (315k vertices and 620k triangles) and mapped (to force the call to computeNormals); - before `1000 iterations done in 14.95 s ( 66.8896 FPS).`; - after `1000 iterations done in 14.075 s ( 71.048 FPS)`. The case is not really usual as it needs huge meshes to see the difference ; and mappings will certainly takes much more time. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3805:1137,test,test,1137,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3805,2,['test'],['test']
Testability,"- clean and optimize `StiffSpringForceField::addKToMatrix`; - Introduce simpler scene showing StiffSpringForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2429:656,test,test,656,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2429,2,['test'],['test']
Testability,"- clean cuda classes and .cu code; - add cudaVec3d support using kernel template; - Add benchmark scene cpu vs gpu and performance scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2568:88,benchmark,benchmark,88,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2568,3,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"- deprecation messages (change macros...); - rename bloc for blocks; and other trivial ones. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3911:632,test,test,632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3911,2,['test'],['test']
Testability,"- factorize loops over elements; - add unit tests; - rename Data; - extend to tetrahedra and hexahedra. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4958:44,test,tests,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4958,3,['test'],"['test', 'tests']"
Testability,"- harmless cleaning in Edge2QuadTopologicalMapping; - Add example scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3408:612,test,test,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3408,2,['test'],['test']
Testability,"- image: fix unit test with MeshToImage; - SofaHelper: should fix test on Windows for 8b unitcode path (hopefully should not change Linux/Mac behavior ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1585:18,test,test,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1585,4,['test'],['test']
Testability,"- kdtree was using defaulttype::Vectypes only for the Vec2d/Vec3d...; - GenerateRigid (only used in generaterigid app and sofapython...) is using RigidMass, I took the lazy solution and put the dependency through a template; - OwnershipPtr had a dependency on BaseMatrix for nothing. + fix in Frame (defaulttype/config.h, DEFAULTTYPE_API). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1915:879,test,test,879,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1915,2,['test'],['test']
Testability,"- move code from header to compilation unit; - remove the dependency to Data. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2236:619,test,test,619,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2236,2,['test'],['test']
Testability,"- moves code from header to .inl; - use typedef to express the inner types instead of specifying them all the time; The inner types are: Quat, Vec3, Mat3x3, Real; - add Quaternion to forward declaration file.; - remove the use of the implicit automatically converting functions(BREAKING) ; eg: template<Real2> void toMatrix(Matrix<3,3,Real2>){}; As there is no more hidden type conversion the caller's have to handle themselves; the type conversion before calling instead of relying on the inner-conversion. This is; good as it propagate to the user-level that there is type conversion involved instead of; hidden that fact. The consequence is that it is not possible to do stuff like that anymore; Quat<float>::toMatrix(Mat<3,3,double)>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1878:1278,test,test,1278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1878,2,['test'],['test']
Testability,"- moves the definition from .h in a .cpp ; - moves RotationMatrix.h and RotationMatrix.cpp in SofaBaseLinearSolver (because this is where it should be according to its dependency to SparseMatrix). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1995:736,test,test,736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1995,2,['test'],['test']
Testability,"- namespace concatenation; - pragma once; - ScopedAdvancedTimer instead of StepBegin/StepEnd; - Allman style; - `Inherit1::init();` called in `ShewchukPCGLinearSolver::init()`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2493:716,test,test,716,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2493,2,['test'],['test']
Testability,"- redundant accessibility specifier; - constexpr variables; - make functions const; - type traits simplification; - explicit deleted functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2461:683,test,test,683,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2461,2,['test'],['test']
Testability,"- remove useless preprocessor definition; - remove useless typedef; - remove useless utility template function getData() and its unique usage, as the .data() function from type::vector does the same. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3417:739,test,test,739,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3417,2,['test'],['test']
Testability,- removing awful stuff regarding linearspring in Binding_Data; - adding specific Binding_VectorLinearSpringData; - possibility to directly copy a Data in another Data; - possibility to have specific setter for all Data in the factory. WARNING this PR depends on #165 . <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/166:438,test,test,438,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/166,1,['test'],['test']
Testability,"- simulationType is DAG in any case; ~~- interactive is not used~~; - testMode is... not useful ? (mileage can vary though). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4925:70,test,testMode,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4925,3,['test'],"['test', 'testMode']"
Testability,"- std::abs is constexpr only in c++23 ; -> as stated in the standard... But gcc flagged it constexpr 🤫. - std::sqrt is not constexpr at all. Implementations exists though. For now, all functions relying on sqrt is not constexpr (norm methods). Allows to compile https://github.com/alxbilger/SofaBenchmark/pull/27 (for mac and msvc then). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3281:877,test,test,877,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3281,2,['test'],['test']
Testability,- use const & and better variable names ; - Test the edge's vertices as well. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1545:44,Test,Test,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1545,3,"['Test', 'test']","['Test', 'test']"
Testability,- use some size_t instead of int in the topology_test; - Change the update method from the mass to return the bool update as result.; - some small warning fix in other classes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/726:428,test,test,428,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/726,2,['test'],['test']
Testability,"- useless external instanciation of JointSpring in JointSpringFF (because already defined in JointSpring,h); - remove duplicate forward declaration; - use actual forward declaration and move JointSpring header. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2254:750,test,test,750,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2254,2,['test'],['test']
Testability,"--------------------------------------------------------------------------------------------; BM_TriangularFEMForceFieldOptim/32 190 ms 188 ms 4 FPS=170.667/s MBKBuild=561.555u MBKSolve=5.21104m frame=5.85938ms; BM_TriangularFEMForceFieldOptim/64 368 ms 367 ms 2 FPS=174.298/s MBKBuild=526.034u MBKSolve=5.06889m frame=5.7373ms; BM_TriangularFEMForceFieldOptim/128 715 ms 719 ms 1 FPS=178.087/s MBKBuild=509.678u MBKSolve=4.93597m frame=5.61523ms; BM_TriangularFEMForceFieldOptim/256 1259 ms 1266 ms 1 FPS=202.272/s MBKBuild=500.564u MBKSolve=4.28127m frame=4.94385ms; ```; After. ```. ----------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; ----------------------------------------------------------------------------------------------; BM_TriangularFEMForceFieldOptim/32 196 ms 195 ms 4 FPS=163.84/s MBKBuild=590.4u MBKSolve=5.34807m frame=6.10352ms; BM_TriangularFEMForceFieldOptim/64 377 ms 375 ms 2 FPS=170.667/s MBKBuild=529.309u MBKSolve=5.19836m frame=5.85938ms; BM_TriangularFEMForceFieldOptim/128 720 ms 703 ms 1 FPS=182.044/s MBKBuild=497.814u MBKSolve=4.9813m frame=5.49316ms; BM_TriangularFEMForceFieldOptim/256 1270 ms 1266 ms 1 FPS=202.272/s MBKBuild=502.338u MBKSolve=4.3129m frame=4.94385ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2861:2519,test,test,2519,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2861,2,['test'],['test']
Testability,"----------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 75568 ns 75550 ns 9185; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 55533 ns 54699 ns 12798; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12930 ns 12785 ns 49662; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 67780 ns 66811 ns 10488; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 51334 ns 50603 ns 13884; ```. ## After. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 76223 ns 76266 ns 9132; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 13781 ns 13808 ns 51026; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12434 ns 12458 ns 56014; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 66579 ns 66637 ns 10530; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 49684 ns 49713 ns 14274; ```. # Conclusion. The benchmarks show that insertion of 3x3 blocs is faster in 3x3 bloc-based CRS matrices than before (the test `Add3x3Bloc_CRS3x3d`). It goes almost at the same speed than the bloc insertion specialized for 3x3 CRS matrices (benchmark BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d).; The speed remains the same for CRS made doubles, which is expected. TODO: explain the benchmarks and push them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-fram",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2281:2465,Benchmark,Benchmark,2465,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281,1,['Benchmark'],['Benchmark']
Testability,"---------------------------------------------------------; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/512 1339 ms 1344 ms 1 FPS=381.023/s frame=2.62451ms; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/1024 2662 ms 2656 ms 1 FPS=385.506/s frame=2.59399ms; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/2048 5259 ms 5266 ms 1 FPS=388.938/s frame=2.57111ms; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/4096 10451 ms 10453 ms 1 FPS=391.845/s frame=2.55203ms; ```. ```; -----------------------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; -----------------------------------------------------------------------------------------------------------------------------; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/512 982 ms 984 ms 1 FPS=520.127/s frame=1.92261ms; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/1024 1966 ms 1953 ms 1 FPS=524.288/s frame=1.90735ms; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/2048 3988 ms 3969 ms 1 FPS=516.031/s frame=1.93787ms; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/4096 7858 ms 7859 ms 1 FPS=521.161/s frame=1.91879ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2877:2283,test,test,2283,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2877,2,['test'],['test']
Testability,"--------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 18.4 us 18.4 us 36921; BM_NarrowPhaseDetection_getDetectionOutputs/16 54.1 us 54.1 us 12873; BM_NarrowPhaseDetection_getDetectionOutputs/32 177 us 177 us 3973; BM_NarrowPhaseDetection_getDetectionOutputs/64 631 us 631 us 1116; BM_NarrowPhaseDetection_getDetectionOutputs/128 2587 us 2587 us 268; BM_NarrowPhaseDetection_getDetectionOutputs/256 10649 us 10649 us 67; ```; ## `sofa::helper::map_ptr_stable_compare`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However, I don't know how crucial it is to have this kind of map with a dedicated comparator. Is this feature necessary? If not, I am in favour of using `std::unordered_map` wherever `sofa::helper::map_ptr_stable_compare` is used, for performances reasons. Overall, we won't get a huge gain of fps, but still it has an impact on the peformances of `NarrowPhaseDetection`. Initially, I wondered why `NarrowPhaseDetection` took so much time for so simple instructions. ______________________________________________________.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2047:2357,benchmark,benchmarks,2357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047,1,['benchmark'],['benchmarks']
Testability,"----------------------------------------; BM_StandardTetrahedralFEMForceField/32 333 ms 328 ms 2 FPS=97.5238/s MBKBuild=379.033u MBKSolve=6.66173m frame=0.0102539s; BM_StandardTetrahedralFEMForceField/64 664 ms 672 ms 1 FPS=95.2558/s MBKBuild=354.073u MBKSolve=6.62915m frame=0.010498s; BM_StandardTetrahedralFEMForceField/128 1319 ms 1328 ms 1 FPS=96.3765/s MBKBuild=347.671u MBKSolve=6.58216m frame=0.010376s; BM_StandardTetrahedralFEMForceField/256 2583 ms 2578 ms 1 FPS=99.297/s MBKBuild=330.558u MBKSolve=6.43889m frame=0.0100708s; ```. After. ```; --------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; --------------------------------------------------------------------------------------------------; BM_StandardTetrahedralFEMForceField/32 321 ms 320 ms 2 FPS=99.9024/s MBKBuild=379.211u MBKSolve=6.43458m frame=0.0100098s; BM_StandardTetrahedralFEMForceField/64 637 ms 641 ms 1 FPS=99.9024/s MBKBuild=361.311u MBKSolve=6.34991m frame=0.0100098s; BM_StandardTetrahedralFEMForceField/128 1287 ms 1281 ms 1 FPS=99.9024/s MBKBuild=349.305u MBKSolve=6.4886m frame=0.0100098s; BM_StandardTetrahedralFEMForceField/256 2548 ms 2547 ms 1 FPS=100.515/s MBKBuild=347.56u MBKSolve=6.35484m frame=9.94873ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2858:2480,test,test,2480,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2858,2,['test'],['test']
Testability,"--------------------; BM_Matrix_typemat3x3f_construct/128 1.09 us 1.10 us 640000; BM_Matrix_typemat3x3f_construct/256 2.20 us 2.20 us 320000; BM_Matrix_typemat3x3f_construct/512 4.40 us 4.39 us 160000; BM_Matrix_eigenmat33_construct/128 0.270 us 0.270 us 2488889; BM_Matrix_eigenmat33_construct/256 0.509 us 0.500 us 1000000; BM_Matrix_eigenmat33_construct/512 0.996 us 0.977 us 640000; ```. # After. ```; -------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -------------------------------------------------------------------------------------; BM_Matrix_typemat3x3f_construct/128 0.324 us 0.328 us 2240000; BM_Matrix_typemat3x3f_construct/256 0.627 us 0.628 us 1120000; BM_Matrix_typemat3x3f_construct/512 1.26 us 1.26 us 560000; BM_Matrix_typemat3x3f_construct_noinit/128 0.323 us 0.321 us 2240000; BM_Matrix_typemat3x3f_construct_noinit/256 0.638 us 0.628 us 1120000; BM_Matrix_typemat3x3f_construct_noinit/512 1.28 us 1.28 us 560000; BM_Matrix_eigenmat33_construct/128 0.255 us 0.256 us 2986667; BM_Matrix_eigenmat33_construct/256 0.502 us 0.500 us 1000000; BM_Matrix_eigenmat33_construct/512 0.993 us 1.00 us 746667; ```. Now the construction of a 3x3 matrix is 3x faster and close to the construction of a 3x3 matrix with Eigen. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2450:2235,test,test,2235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2450,2,['test'],['test']
Testability,"---; C:\Program Files\Eclipse Foundation\jdk-8.0.302.8-hotspot\bin;C:\Python27;C:\Users\Ruiliang\AppData\Local\Programs\Python\Python39\Scripts;C:\Users\Ruiliang\AppData\Local\Programs\Python\Python39;C:\SIMULIA\Commands;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Crucial\Crucial Storage Executive;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Users\Ruiliang\AppData\Local\Microsoft\WindowsApps;C:\Users\Ruiliang\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\CMake\bin;C:\Qt\5.15.2\msvc2019_64\bin;C:\Qt\5.15.2\msvc2019_64\lib;C:\local\boost_1_75_0\lib64-msvc-14.2;C:\local\boost_1_75_0;C:\Program Files\Git\cmd;;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Users\Ruiliang\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Ruiliang\AppData\Local\Programs\Python\Python39\;C:\Users\Ruiliang\AppData\Local\Microsoft\WindowsApps;C:\Users\Ruiliang\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ruiliang\.dotnet\tools; --- SOFA_ROOT ---; --- PYTHONPATH ---; --- sys.path ---; ['', 'C:\\WINDOWS\\SYSTEM32\\python27.zip', 'C:\\Python27\\DLLs', 'C:\\Python27\\lib', 'C:\\Python27\\lib\\plat-win', 'C:\\Python27\\lib\\lib-tk', 'C:\\Python27', 'C:\\Python27\\lib\\site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. No Error outputs or suspicious outputs has been found. ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486:4122,Log,Logs,4122,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486,1,['Log'],['Logs']
Testability,". 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1961:2180,test,test,2180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961,2,['test'],['test']
Testability,".. due to a missing header (defining SOFA_HELPER_API); I suppose this came from various merge before merging #1915 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1942:656,test,test,656,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1942,2,['test'],['test']
Testability,"... And fix various crashes of unit tests when they quit. Some unit tests are crashing when quitting (maybe random) since #1883 , with a call to an invalid MessageDispatcher (GtestMessageDispatcher) .; After some investigations, it appears that some init()/cleanup() in simulation do not respect the chain of dependency : ; - SofaSimulationGraph was calling the ones fromSofaSimulationCore instead of the one of SofaSimulationCommon; ; - SofaSimulationCommon was init/cleanup of SofaCore instead of SofaSimulationCore. I suppose #1883 exposed the problem by removing **seemingly** useless init().; But it seems they were patching the issue raised in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1987:36,test,tests,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1987,4,['test'],"['test', 'tests']"
Testability,"... and DualQuat. ## Description:; Move all Quaternion-related classes (and DualQuat) to the new Sofa.Type module.; Like #1734 There is a compatibility layer for transition, so it should be as least breaking as possible.; Remove helper::Quater/defaulttype::Quat thingy, really confusing (name ""Quater"" does not make any sense). - sofa::helper::Quater<T> becomes sofa::type::Quat<T>; - sofa::defaulttype::Quat (typedef) becomes ... ?; - sofa::helper::DualQuat becomes sofa::type::DualQuat. ## Breaking; - Remove a constructor with RigidType for DualQuat.; As DualQuat is only used in Flexible, not a big deal.... ## Talking; - Previous point: DualQuat is only used in Flexible, should it be simply moved there ?; - fact that Quat is now a template (was a typedef without template before) could be confusing ?. ## Note; Forgot wrapping redirection from MatSym, the fact that there was no error before means that it is not used at all... Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1790:1503,test,test,1503,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1790,2,['test'],['test']
Testability,"... and add VisualParameters as a parameter to their signature. Based on ; - #4822 . Continue on what has been introduced by:; - #3931 . Little difference, this PR does not only do the NVI thing but it adds the visualparameters as input.; This seems consistent (to me) with the fact that init/update visual as supposed to be called when there is a draw context (like drawVisual). ; The nice side effect (and it was the intent at the beginning) is that updatevisual wont be called anymore if the component state is wrong, showVisualModels flag is not set or not enabled. \+ cleanings here and there in the visual/gl components. Unfortunately, breaking ⚠️. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/423]; [ci-depends-on https://github.com/sofa-framework/SofaSphFluid/pull/1]. TEMP: ; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/153]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827:1417,test,test,1417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827,2,['test'],['test']
Testability,"... and also reduce complexity of the search of common groups. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3264:602,test,test,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3264,2,['test'],['test']
Testability,"... and not only mechanical ones. removing some unncessary includes too. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4362:612,test,test,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4362,2,['test'],['test']
Testability,"... because the CI cannot load SofaCUDA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2893:580,test,test,580,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2893,2,['test'],['test']
Testability,"... because this is not relevant anymore as we compile SReal either with float XOR double.; And ""dual"" templates have been removed some releases ago. Effectively, `both` was equivalent as ` double` , hence the removal. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3436:758,test,test,758,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3436,2,['test'],['test']
Testability,"... before putting it out on an external repo. - Update file structure; - Refresh cmake; - fix dependencies; - fix bullet dep; - compilation; - full xml examples (seems) to work. I did not really clean the code itself, I dont know if this plugin is viable or not. Some files depends on removed plugins (LMConstraints and Compliant) so it has not been tested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3800:351,test,tested,351,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3800,3,['test'],"['test', 'tested']"
Testability,"... by making optional SofaValidation (as its remaining components are deprecated). The ifdef is a bit ugly but some refactoring are needed to add futures features like this (instead of adding getXXX and getNbXXX for each type of component in the API). Some cleanups for the cmake file itself (more up-to-date Sofa cmake syntax) and the dependencies. small user experience question:; - Should Sofa.component be forcefully linked with it? so the user knows that all components are available from the start; - or should the actual dependencies be managed by the user afterwards in its application?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3091:1136,test,test,1136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3091,2,['test'],['test']
Testability,"... by removing a useless (and from the compatibility layer) in SofaMeshCollsion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2227:621,test,test,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2227,2,['test'],['test']
Testability,"... or so it seems. There is not CI process for the install process and I could compile BeamAdapter_test target out of tree, but I would prefer if other people could test it 🧐. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4489:166,test,test,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4489,3,['test'],['test']
Testability,"... or we change the comment 🤐. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4129:571,test,test,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4129,2,['test'],['test']
Testability,"... unless there is a good reason to keep built even if tests are not built ?; In the case we have to keep it built, we will have to handle the embedded dependency google test (linked dynamically), probably in a similar manner than other libs such as metis (find package or fetch code and link dynamically). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4459:56,test,tests,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4459,4,['test'],"['test', 'tests']"
Testability,"... when AUTO_SET_TARGET_PROPERTIES is set. (useful for external header-only targets). EDIT: a lot of cases will be handled in cmake >3.24 a(avoiding lots of tests). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4356:158,test,tests,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4356,3,['test'],"['test', 'tests']"
Testability,"... with the current standard set of modules/plugins.; ## About; Since MSVC2019, VS proposes the choice to use the clang-cl toolchain (clang with msvc tools). Not possible to enable it with the latest(?) cmake-gui but possible to generate a solution with the commandline version: `cmake -G""Visual Studio 2019"" -T ClangCL ..`; ## This PR; - add necessary cmake config to allow compilation (and avoid 1e999 warnings); - fix few problems detected with clang (rightly so); - change the FixParticlePerformerFactory shenanigan to be cleaner. ## Results; It appears that clang is somewhat more clever than cl.exe and seems to produces more optimized binaries.; Results are not always good, and really depends on the situation/scene. Few cases where cl is slightly faster than clang-cl; Some bench:; - `caduceus.scn -g batch -n 10000`; - cl: `21.2541 s ( 470.498 FPS)`; - clang-cl: `19.6914 s ( 507.836 FPS)`; - MeshMatrixMass.scn with 4096 steps (from SofaBenchmark); - cl: `25504 ms`; - clang-cl: `18161 ms`; - `examples/Benchmark/Performance/benchmark_cubes.scn -g batch -n 1000`; - cl: `36.7404 s ( 27.218 FPS`; - clang-cl: ` 37.8146 s ( 26.4448 FPS)`; - `examples/Benchmark/Performance/TorusFall.scn -g batch -n 1000`; - cl: `8.63699 s ( 115.781 FPS)`; - clang-cl: ` 7.72771 s ( 129.404 FPS)`; - `applications/plugins/SofaCUDA/examples/beam16x16x76-fem-implicit-CPU.scn -g batch -n 1000`; - cl: ` 113.022 s ( 8.8478 FPS))`; - clang-cl: ` 100.645 s ( 9.93587 FPS)`; - SofaBenchmark, a lot shows only improvement around 10-15% but some are interesting:; - `BM_FixedArray_construct<sofa::type::Vec3f>/8192`; - cl: ` 10.5 us`; - clang-cl: ` 6.42 us`; - `BM_Matrix_typemat3x3f_assign/512` this one is weird (the same bench with eigenmat is much closer); - cl: ` 3.44 us`; - clang-cl: ` 1.18 us`. ## Warning; pybind is not compatible with clang-cl (and I am sure a lot of other libraries), even gtest as it is was not compatible. ______________________________________________________. By submitting this pull ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2563:1015,Benchmark,Benchmark,1015,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2563,1,['Benchmark'],['Benchmark']
Testability,".... Removing all the warnings set by #2524. (mainly coming from the creation of Sofa.LinearAlgebra and the move of topologychange things into sofa/core/topology). This PR is quite huge but it should be merged quite as soon as possible after #2524 as it will throw a lot of warnings in the meantime. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/219]; [ci-depends-on https://github.com/sofa-framework/Regression/pull/20]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2525:981,test,test,981,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2525,2,['test'],['test']
Testability,"...instead of assign operator + defaultconstructor (which in fine do the same clear() function). Micro optimization but still 😗; (nice french idiom for that: ""ça ne mange pas de pain""). (on examples/Components/DiagonalMass.scn); Before:; ![Capture1](https://user-images.githubusercontent.com/11028016/144096997-260f4c68-2784-4b9a-a71b-869ad5536567.PNG); After:; ![Capture2](https://user-images.githubusercontent.com/11028016/144097259-7a1640be-2697-47d3-a94a-2fa73b84a002.PNG). _______________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2518:1002,test,test,1002,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2518,2,['test'],['test']
Testability,".com/sofa-framework/sofa/commit/54f49d039aadaffd57a1d7f8ebab3af82e407674); I see no reason not to do that. Dependencies to DiffusionSolver are simpler this way. ### [[CImgPlugin] CLEAN include directory](https://github.com/sofa-framework/sofa/commit/1a617d5350f74ac4a816255960d92638a26cba1b); Sources moved to `src`. No more `../` horror in CImgPlugin include directories. ## Other changes. - [SofaHelper] FIX DynamicLibrary altered search path (Windows only) ; Needed to prefer `bin` libraries over neighboor libraries; - [SofaFramework] FIX typo in config.h.in; - [runSofa] Check if plugins dir exists before adding to PluginRepository; - [SofaTest] FIX SofaPython finding in *Config.cmake.in; - [plugins] ADD missing *Config.cmake.in files; Needed to use them as real plugins; - [All] Improve sofa_copy_libraries and sofa_install_libraries macros; Make them easier to use; - [CMake] Rename sofa_set_python_directory into sofa_install_pythonscripts; Clearer name in my opinion + using CMake multiValueArgs; - [CMake] Update package.cmake to enable plugins; Prepare package.cmake to produce binaries with all plugins from ""options"" configuration.; - [SofaImplicitField] FIX tests enabling; - [CMake] CLEAN package.cmake; - [SofaSimulationCore] Handle reload differently in SceneLoader::Listener; Needed to disable scene checks on reload.; - [SofaGraphComponent] Disable scene checks on reload; Needed by live editor (which reloads the scene every time the file is changed).; - [plugins] Remove commented lines in CMakeFiles. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:4497,test,tests,4497,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,3,['test'],"['test', 'tests']"
Testability,".cpp.o (192 ms); PointSetTopologyAlgorithms.cpp.o (191 ms); initValidation.cpp.o (187 ms); DataDisplay.cpp.o (186 ms); DifferenceEngine.cpp.o (178 ms); MeshObjLoader.cpp.o (177 ms); ... 21119 ms: sofa/extlibs/gtest/include/gtest/internal/gtest-port.h (included 176 times, avg 119 ms), included via:; gtest-typed-test.cc.o gtest-typed-test.h (796 ms); gtest-port.cc.o (666 ms); gtest-death-test.cc.o gtest-death-test.h gtest-death-test-internal.h gtest-internal.h (650 ms); gtest-test-part.cc.o gtest-test-part.h gtest-internal.h (463 ms); gtest-filepath.cc.o gtest-filepath.h gtest-string.h (456 ms); gtest.cc.o gtest.h gtest-internal.h (246 ms); ... 20903 ms: sofa/SofaKernel/modules/SofaHelper/src/sofa/helper/vector.h (included 156 times, avg 133 ms), included via:; MeshGmsh.cpp.o MeshGmsh.h Mesh.h (492 ms); MeshTopologyLoader.cpp.o MeshTopologyLoader.h Mesh.h (402 ms); Image.cpp.o Factory.inl (384 ms); SVector.cpp.o SVector.h (379 ms); GenerateRigid.cpp.o GenerateRigid.h Mesh.h (373 ms); TestMessageHandler.cpp.o TestMessageHandler.h (346 ms); ... 19960 ms: /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/pstl/glue_algorithm_defs.h (included 157 times, avg 127 ms), included via:; qglviewer.h camera.h QMap qmap.h qiterator.h qglobal.h algorithm (348 ms); manipulatedCameraFrame.h manipulatedFrame.h frame.h QObject qobject.h qobjectdefs.h qnamespace.h qglobal.h algorithm (345 ms); gtest-typed-test.h gtest-port.h algorithm (299 ms); mouseGrabber.h config.h qglobal.h algorithm (299 ms); VRender.h config.h qglobal.h algorithm (296 ms); cmake_pch.hxx Base.h BoundingBox.h Vec.h fixed_array.h algorithm (271 ms); ... 19494 ms: sofa/applications/plugins/SofaTest/../SofaTest/Mapping_test.h (included 6 times, avg 3249 ms), included via:; DistanceMapping_test.cpp.o (3500 ms); QuaternionIntegration_test.cpp.o (3407 ms); RigidRigidMapping_test.cpp.o (3280 ms); SquareMapping_test.cpp.o (3239 ms); RigidMapping_test.cpp.o (3089 ms); SquareDistanceMapping_test.cpp.o (2976 ms)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:35885,Test,TestMessageHandler,35885,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['Test'],['TestMessageHandler']
Testability,"//github.com/SofaDefrost/sofa/commits/deprecating_components beheaded until 456d88343e210ce89d9f7436c290be92fe438313 and merged it with master.; ________________________________________________________________. It does:; - split the CMakeFile.txt in three sets to allow component deprecation/stabilization.; - implement a light C++ api in sofa::simpleapi::* to create component with a pythonic look & feel; - use the simpleapi to change the code of SceneCreator to cut the dependencies and to simplify the plugizniation of modules. ; - in SceneCreator, create SceneUtil.h where some function from SceneCreator are now. ; - remove the module/sofa/component/typedef/* (which seems to cause no real problem); - mute the SOFA_DECL_CLASS/SOFA_LINK_CLASS so maybe...as everything works in the CI we ca n probably remove those lines and stop using them in .cpp ; - remove c++ tutorials from CMakeList before real removal they are slow to compile, and induce big dependencies so it will slow down the deprecation. ; - add an InfoComponent in the loaded scene to indicate when an object failed to be created. . To avoid post-cleaning workload I merged:; - PR#422 Fix for SofaImplicitField and SofaVolumetricData plugin; - PR#407 [SofaSphFluid & SofaMiscCollision] Pluginizing the two modules; For the same reasons we may also merge #414 #424 and #425. Notes: ; - the SceneCreator refactoring is not fully working and generates few test failures but this can be fix easily. ; - removing the typedef & SOFA_DECl/SOFA_LINK seems to ok. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/453:1636,test,test,1636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/453,3,['test'],['test']
Testability,/A/RemoteServiceDiscovery; 0x7fff331e7000 - 0x7fff331fefff com.apple.xpc.RemoteXPC (1.0 - 2038.80.3) <C4BFF5FC-FC9C-3161-9612-7070EDAE9989> /System/Library/PrivateFrameworks/RemoteXPC.framework/Versions/A/RemoteXPC; 0x7fff33246000 - 0x7fff33249fff com.apple.help (1.3.8 - 71) <6074D81C-4507-35A6-88D7-D82309F81587> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help; 0x7fff3324a000 - 0x7fff33251fff com.apple.EFILogin (2.0 - 2) <B06CCD1C-A4D1-34D2-89C5-0DB69FE65234> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin; 0x7fff33252000 - 0x7fff3325dfff libcsfde.dylib (554) <9CDB9580-DD1C-347E-91C5-6D92D96F52F5> /usr/lib/libcsfde.dylib; 0x7fff3325e000 - 0x7fff332c3fff libcurl.4.dylib (121.40.2) <77010EA9-4AD1-3F4A-B3EF-2FFE739FB349> /usr/lib/libcurl.4.dylib; 0x7fff332c4000 - 0x7fff332cbfff com.apple.LoginUICore (4.0 - 4.0) <7225326A-7704-362D-B64E-4ABF4A221F88> /System/Library/PrivateFrameworks/LoginUIKit.framework/Versions/A/Frameworks/LoginUICore.framework/Versions/A/LoginUICore; 0x7fff332cc000 - 0x7fff3332ffff com.apple.AppSupport (1.0.0 - 29) <21E116C6-C770-3024-98EB-51D1166AACD2> /System/Library/PrivateFrameworks/AppSupport.framework/Versions/A/AppSupport; 0x7fff333d0000 - 0x7fff33482fff com.apple.GameController (1.0 - 1) <E2778524-D805-3EF4-A147-DECE5315D77F> /System/Library/Frameworks/GameController.framework/Versions/A/GameController; 0x7fff3348b000 - 0x7fff3348bfff com.apple.ApplicationServices (48 - 50) <42B48E32-1918-3178-8DE0-E8126B9EC088> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices; 0x7fff33648000 - 0x7fff33687fff com.apple.AppleIDSSOAuthentication (1.0 - 1) <687FC889-44F5-3FA9-A93B-D2D65B16B6B0> /System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/Versions/A/AppleIDSSOAuthentication; 0x7fff3378c000 - 0x7fff3378cfff libHeimdalProxy.dylib (79) <85526E13-1E48-377A-A700-EE3F5648A6E3> /System/Library/Frameworks/Kerberos.framework/Versions/A,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:73170,Log,LoginUICore,73170,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['Log'],['LoginUICore']
Testability,"/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```; <img width=""686"" alt=""截屏2022-10-25 下午11 56 58"" src=""https://user-images.githubusercontent.com/56861752/197808646-732fe9ee-f7db-49b0-8aea-3de77834ed11.png"">. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:10302,Log,Logs,10302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Log'],['Logs']
Testability,"/sofa/v16.08/src/examples/Components/forcefield/TetrahedralCorotationalFEMForceField.scn. Before the MechanicalObject definition should; be added geometryAlgorithm; <TetrahedronSetGeometryAlgorithms template=""Vec3d"" name=""GeomAlgo"" />; If it does not exist it produces a warning. best. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/182:511,test,test,511,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/182,1,['test'],['test']
Testability,"0 or 1 is assigned to a `bool`. It is implicitly converted to `bool`, so it can be replaced directly with a `bool` for more clarity. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2464:672,test,test,672,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2464,2,['test'],['test']
Testability,"05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField::addDForce`. This is the method to accelerate. The downside is that it has to be done for every force field... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2177:2652,test,test,2652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177,2,['test'],['test']
Testability,"0a9493bccdd9735ff7#diff-b0264445a2a81f648e146f0b1d59d5d197cf3a935f3b7cbb24af11a38b8e6e68L433; - `override` keyword was missing in `~LinearSolverConstraintCorrection`; - `LinearSolverConstraintCorrection::J` is renamed to `m_constraintMatrix`. Its floating-type is no longer `SReal`, but `Real`. In theory, it's breaking.; - `computeJ` is no longer used. Instead, I introduce the method `convertConstraintMatrix`, which is IMO clearer. `computeJ` could be removed I think. But for some reasons it is virtual. Anyone overrides it?; - Added a timer in `convertConstraintMatrix`. This must be used for benchmark to evaluate the cost of the conversion. I believe that we can think of a way to avoid the conversions (only if it costs too much).; - `MatrixLinearSolverInternalData::copyJmatrix` is renamed to `convertMatrix` and it is now protected.; - Made `getLocalJ` clearer.; - Added details for `addJMInvJt`; - Introduced rebind types for `CompressedRowSparseMatrixConstraint`, `CompressedRowSparseMatrixGeneric` and `CompressedRowSparseMatrixMechanical`; - `CompressedRowSparseMatrixConstraint`: added test for the stream operator. The operator no longer adds trailing spaces on each line.; - Better iterators in `CompressedRowSparseMatrixConstraint`; - Missing header guard in `CompressedRowSparseMatrixConstraintEigenUtils.h`; - Fixed `operator()` in `CompressedRowSparseMatrixToEigenSparseVec`. Also added error message if out-of-bounds. Required for https://github.com/sofa-framework/SofaPython3/pull/459; - Introduction of `is_specialization_of`. Used in [a SofaPython3 PR](https://github.com/sofa-framework/SofaPython3/pull/459). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Rev",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5017:1285,test,test,1285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5017,1,['test'],['test']
Testability,"1) Instead of hardcoding a custom behavior in every subclass of a loop, the common behavir is factorizer in the corresponding base class (BaseAnimationLoop). 2) The member ""gnode"" of type ""Node *"" is now a link named l_node factorizer in the base class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3945:793,test,test,793,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3945,2,['test'],['test']
Testability,"1- In SceneCheckerVisitor: ; Fixed segfault. Please review, I'm not sure about the fix. 2- In RestShapeSpringForceField:; Fixed segfault when using the component without external_rest_shape, by removing a ""return"" that was unintentionally introduced in #315. (line 95); And the error message should be print only if external_rest_shape is set by user. (line 93). And minor cleaning.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/367:635,test,test,635,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/367,2,['test'],['test']
Testability,"1- MSVC was never throwing deprecation warnings because ... it was disabled with the compiler flags. A bit hard to inform the user that one feature or file is deprecated if he is not warned. ; So this PR re-enables 4996 (deprecation) warnings but still disable some msvc-specific deprecation notices (with some preprocessor defines). 2- A contrario, deprecation warnings in extlibs are quite annoying so they should be disabled IMO. 3- enabling deprecation warnings led to two types of deprecation in the SOFA code base:; - _sleep() is deprecated (used for WIN32 only); - unique() of shared_ptr is deprecated in c++17 : https://en.cppreference.com/w/cpp/memory/shared_ptr/unique ; Replaced with use_count() == 1 but this does not really address the issue of approximation in a multithreaded context. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2217:1339,test,test,1339,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2217,2,['test'],['test']
Testability,"1- SofaGeneralEngine wanted TextureInterpolation which is compiled only if Sofa.GL is activated (i.e SOFA_NO_OPENGL false); Weird thing is that those tests were in SofaEngine, I dont even know how it could compile before ⁉⁉; So I moved the EngineTest from SofaEngine to SofaGeneralEngine, as it is only compiling SofaGeneralEngine things anyway. 2- replace the use of the macro SOFA_NO_OPENGL with find_package(Sofa.GL) + Sofa.GL_FOUND in the modules cmake (clearer). 3- fix the compilation error with runSofa (which wanted the gl header even it is not using any opengl...). **Allow the compilation of sofa-minimal on the CI.**. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1743:150,test,tests,150,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1743,3,['test'],"['test', 'tests']"
Testability,1- Tests were not testing ( :octocat: ) if OpenGL was allowed.; 2- VideoRecorderFFMPEG.h is using OpenGL so it cannot be enabled with this flag. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1032:3,Test,Tests,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1032,4,"['Test', 'test']","['Tests', 'test', 'testing']"
Testability,1- last (?) override warnings; 2- add a preprocessor define to remove OpenGL deprecated message on MacOS; 3- various other warnings. I would appreciate if @epernod could check how the warnings from TopologyHandler has been managed ;) (commit https://github.com/sofa-framework/sofa/commit/a85cdae3eb3635efe9bef2c326354aac40c73153 ). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1065:583,test,test,583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1065,2,['test'],['test']
Testability,"1. Add CUDA support for ConstantForceField, MultiMapping and SubsetMultiMapping. The components are not accelerated by CUDA. Only compatibility with CUDA types is added.; 2. Each section of the CMakeLists is sorted alphabetically.; 3. An example scene is introduced for SubsetMultiMapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2557:829,test,test,829,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2557,2,['test'],['test']
Testability,"1. All types of Eigen::SparseMatrix are now supported. For that, the implementation relies completely on the Eigen matrix product to compute the intersection. The trick is to flag the non-zero values with its index position in the array. The matrix product will implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4547:463,test,tests,463,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547,4,"['Benchmark', 'benchmark', 'test']","['Benchmarks', 'benchmarks', 'test', 'tests']"
Testability,"1. Make CudaConstantForceField compatible with CudaRigid types CudaRigid3Types and CudaRigid2Types. fix #2575 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3164:651,test,test,651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3164,2,['test'],['test']
Testability,"1. Remove trivial headers (unused); 2. move vectorLinks and vectorData where they should have belong from the start, alongside Data and Link in SofaCore.; Add compatibility files as usual. Only dependency left in SofaHelper from SofaCore is io/Mesh.h including core/Topology.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1810:817,test,test,817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1810,2,['test'],['test']
Testability,"1. The CMake option to enable/disable OpenGL is now `SOFA_WITH_OPENGL`.; 2. SOFA_NO_OPENGL is completely removed from SOFA sources (only the CMake variable persists).; 3. Sofa.GL is added by SofaKernel/modules/CMakeLists.txt (not by SofaFramework/CMakeLists.txt anymore).; 4. sofa_add_* macros are now capable of creating dependent options. ; Example: ; ```cmake; sofa_add_module(Sofa.GL Sofa.GL ON # the 3 usual sofa_add_* arguments; WHEN_TO_SHOW ""SOFA_WITH_OPENGL"" # [new arg] if SOFA_WITH_OPENGL is true, then the option is showed in CMake-GUI; VALUE_IF_HIDDEN OFF # [new arg] if SOFA_WITH_OPENGL is false, then the option is hidden and set to OFF; ); ```; 5. SofaComponentAll does not fail anymore at configure time if some modules are not found. It will cover as many modules as possible. **This will fix our nightly minimal builds.**; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1913:1380,test,test,1380,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1913,2,['test'],['test']
Testability,"1. `NonBuiltConstraintCorrection.scn` is fixed to really not build the lcp; 2. 2 scenes are added for performances benchmark; 3. Cubes scene does not build lcp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2110:115,benchmark,benchmark,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2110,3,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"1. a clean of the `NearestPointROI` class.; 2. More features are added to NearestPointROI:; - Generates more output format so they can be used in other components accepting only those formats. Now, it can be used with SubsetMultiMapping and EdgeSetTopologyContainer.; - Add a filter on the input dofs. The example scene has been reworked. It now uses constraints. And springs have been added to show how to use the new features from this PR. This PR replaces https://github.com/sofa-framework/sofa/pull/2562. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2595:1048,test,test,1048,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2595,2,['test'],['test']
Testability,"1st big guy. #1527; based on ; - #2605. Deprecates **SofaBaseTopology**, **SofaGeneralTopology**, **SofaMiscTopology**;; Partially deprecates **SofaNonUniformFem** and **SofaTopologicalMapping**. Dispatches the topology-related stuff between:; - **container** : storing topology information, and itself split in 3 parts:; - **~~static~~constant container:** static topologies with containers, does not handle topological change; - **dynamic container**: topologies with containers and handle topological change (topoalgo, geoalgo, container and modifier); - **grid**: topologies based on grid (and no containers like the other ones) ; - **mapping**: topological mappings; - **utility**: components making topological operations on other components for example . This compat layer on this one is less efficient, as people is more relying on this one than the others.; Reminder: the compat layer does not really work well if:; - using forward declarations (but it means that the fwd declaration itself was useless in the first place),; - using explicit instanciations somewhere else (as you cannot use explicit instanciations on templated aliases); - you did not include previously the good header for what you are using (e.g some code are using MeshtTopology but does not include MeshTopology.h). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2612:1835,test,test,1835,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2612,2,['test'],['test']
Testability,2 breaking things:; - Uncomment [deprecated] m_componentstate to redirect to d_componentState (in Base.h); - rename d_componentstate into d_componentState (S upper case). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1358:422,test,test,422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1358,2,['test'],['test']
Testability,2 methods that allows retrieval of a graph object's instantiation and definition line & file from python. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1170:357,test,test,357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1170,2,['test'],['test']
Testability,2 more tests :wink: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/711:7,test,tests,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/711,3,['test'],"['test', 'tests']"
Testability,2 small fixes to allow usage of SofaPython by a third-party software. ; 1. Tests all known data path from SOFA to look for /etc/sofa/python.d (not only SOFA_ROOT or current exec dir); 2. Give a more specific name to the static bool at plugin init. It was messing up with another variable. . + Clean some example scenes warnings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1466:75,Test,Tests,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1466,3,"['Test', 'test']","['Tests', 'test']"
Testability,"2- ADD tests; 3- CLEAN member variables name (BREAKING); 4- ADD an example of orientedBox dataField use; 5- Changed a bit the implementation from PlaneROI, for computation optimization purpose. Question:; I would like to reimplement PlaneROI so that it does what we expect from its name, and also print a ""deprecated message"" for those who still use PlaneROI as an OrientedBoxROI. Those users will be detected if they use a deprecated data field. What do you think?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/108:7,test,tests,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/108,1,['test'],['tests']
Testability,"23 ....MBKBuild; 5 1.15 1 23.15 35.72 24.86 1.32 24.86 41.73 .....MMM-addKToMatrix; 6 1.15 1 1.67 4.50 1.83 0.18 1.83 3.06 ......jacobian; 6 2.98 1 6.67 12.18 7.13 0.38 7.13 11.97 ......stiffness; 6 10.11 1 2.48 5.59 2.69 0.22 2.69 4.51 ......copyKToEigen; 7 10.11 1 2.48 5.59 2.68 0.22 2.68 4.50 .......KfromTriplets; 6 12.80 1 0.24 0.59 0.28 0.04 0.28 0.46 ......copyJ1J2ToEigen; 7 13.01 1 0.05 0.28 0.06 0.01 0.06 0.10 .......copyJ2ToEigen; 6 13.07 1 8.17 14.53 9.14 0.76 9.14 15.33 ......Multiplication; 7 13.07 1 4.64 10.75 5.20 0.48 5.20 8.73 .......J1tKJ1; 7 18.28 1 0.39 1.26 0.43 0.06 0.43 0.72 .......J2tKJ2; 7 18.71 1 2.69 6.72 3.08 0.34 3.08 5.17 .......J1tKJ2; 7 21.79 1 0.39 1.20 0.42 0.06 0.42 0.71 .......J2tKJ1; 6 22.21 1 2.29 4.73 2.67 0.16 2.67 4.48 ......J1tKJ1-copy; 6 24.88 1 0 0.02 0 0 0 0 ......J2tKJ2-copy; 6 24.88 1 0.01 0.04 0.01 0 0.01 0.02 ......J1tKJ2-copy; 6 24.90 1 0.01 0.07 0.02 0 0.02 0.04 ......J2tKJ1-copy; ```. The speed up is quite disappointing. But the benchmarks explain it. The speed up depends on the size of the matrix, the sparsity and overall on the size of the intersection.; Yet, there is a speedup. And compared to the reference timings before the series of optimizations (https://github.com/sofa-framework/sofa/pull/2362), `MechanicalMatrixMapper` is about twice faster (in the example). Some notes:. - I added a skeleton to also support product of `CompressedRowSparseMatrix`, but it is not implemented yet. In `MechanicalMatrixMapper`, a `CompressedRowSparseMatrix` is converted to Eigen to do the product. It is not clear yet if the copy to Eigen is required if we are able to perform the fast product on a `CompressedRowSparseMatrix`. So, an implementation of the fast product of `CompressedRowSparseMatrix` may be introduced in the future. Otherwise, I'll remove the files.; - This work has been started by @Esther-R during her internship; - Contrary to the regular product, the product using the intersection can be parallelized for more speed ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2394:3381,benchmark,benchmarks,3381,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2394,1,['benchmark'],['benchmarks']
Testability,"2nd big guy. #1527; based on ; - ~~#2612 ~~; - #2717 (for a moved file in core). Deprecates **SofaMiscMapping**; Partially deprecates **SofaBaseMechanics**, **SofaRigid**, **SofaGeneralRigid**. This module gathers all ""mechanical"" mappings (inhering BaseMapping) and __not__ topological mapping.; ~~I am a bit concerned by the size of this module but I cannot really find any good sub-modules to sort these components into ?~~. Following a discussion with @ChristianDuriez @Younesssss @alxbilger , Mappings are organized between:; - NonLinear: mappings implementing getK() and applyDJT(); - Linear: the rest of mappings; - MappedMatrix: components which are not mapping? but helps to map matrices (stiffness and stuff) ; -> Ad-hoc module which is only used to patch up matrices in SOFA, will disappear once matrix assembly will be pushed. ~~TODO (in an other PR), set Articulated-related things into a dedicated plugin.~~ Done in #2684 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2635:1477,test,test,1477,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2635,2,['test'],['test']
Testability,"3 changes here:; - ~~FIX Debug build --> force all Zlib links to use the Release version~~; - CLEAN SOFA_HAVE_SOFA.YYY macro for consistency --> use SOFA_HAVE_SOFA_YYY everywhere; - FIX Boost::program_option copy --> `sofa_install_libraries` was missing. **IMPORTANT:** Windows users must update the `lib` directory in SOFA sources with https://www.sofa-framework.org/download/WinDepPack/latest/. Fixes #1851. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1891:949,test,test,949,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1891,2,['test'],['test']
Testability,"3 different components for linear elasticity on tetrahedra:. - `FastTetrahedralCorotationalForceField`; - `TetrahedralCorotationalFEMForceField`; - `TetrahedronFEMForceField`. The 3 components have similarities (even duplicated code), but don't share anything. It's time for refactoring!. My focus was the refactoring of the unit tests. Before the PR, a unique class tested the 3 components using a series of `if`. I refactored the 3 classes in order to reduce the specific processing in the unit test, i.e. reduce the number of `if`. - The 3 classes now inherit from a common base class `BaseLinearElasticityFEMForceField`. I moved everything that was common (only regarding the unit test. More common code is remaining) in this class. It includes:; - A common `Data` for Young's modulus and Poisson's ratio. This way, they share type, the same default value, and the same description. Note that Young's modulus in `FastTetrahedralCorotationalForceField` and `TetrahedralCorotationalFEMForceField` was a scalar, and now it's a vector of scalars. This requires to add a common way to access the Young's modulus of the i-th element. This is also a breaking change. This allows to define a typed unit test for all 3 classes. The particularities of the classes are defined in a derived class of the unit test. To me, a great advantage, is that we identify clearly that there are unit tests for the 3 components, because there a file for each class. It was not obvious before. [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/133]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all plat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778:330,test,tests,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778,4,['test'],"['test', 'tested', 'tests']"
Testability,"3 scenes were displaying an error following the PR #2465 . After some investigations, it appeared that those 3 scenes were not working for a while (and the PR merely showed that statement), and the culprit was that GridMeshCreator was not calling its doLoad() method.; doLoad() in MeshLoader components is triggered when d_filename is set.; But GridMeshCreator is procedural and does not any filename at all. Therefore doLoad() was never called.; This PR forcefully set the data d_filename to dirty to force-trigger the callback. Moreover, insertTriangle and insertQuad were using beginEdit()/endEdit() which were triggering also a doLoad() (resulting in a lot of useless edges/triangles); This PR uses WriteOnlyAccessor to avoid this problem. Now ProjectToLineConstraint.scn renders like this:; ![ProjectToLineConstraint_00000001](https://user-images.githubusercontent.com/11028016/140957340-12e18507-532b-4076-bd71-6cab73fab547.png). instead of nothing... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2473:1497,test,test,1497,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2473,2,['test'],['test']
Testability,"378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). Reconnect SofaVisualModel: Visual; UnityEngine.Debug:Log (object); SofaUnity.SofaUnityRenderer:Reconnect () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaUnityRenderer.cs:118); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:495); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). Start: 'Visual'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). KeyNotFoundException: The given key '4' was not present in the dictionary.; System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item (TKey key) (at <eef08f56e2e042f1b3027eca477293d9>:0); SofaUnityAPI.SofaContextAPI.loadScene (System.String filename) (at Assets/SofaUnity/Plugins/SofaUnityAPI/SofaContextAPI.cs:189); SofaUnity.SofaContext.ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:486); SofaUnity.SofaContext.Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext.StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaConte",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:6035,Log,Log,6035,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['Log'],['Log']
Testability,38.80.3) <78AF1606-37D8-3424-92AE-071A9F43AA0F> /System/Library/PrivateFrameworks/RemoteServiceDiscovery.framework/Versions/A/RemoteServiceDiscovery; 0x7fff331e7000 - 0x7fff331fefff com.apple.xpc.RemoteXPC (1.0 - 2038.80.3) <C4BFF5FC-FC9C-3161-9612-7070EDAE9989> /System/Library/PrivateFrameworks/RemoteXPC.framework/Versions/A/RemoteXPC; 0x7fff33246000 - 0x7fff33249fff com.apple.help (1.3.8 - 71) <6074D81C-4507-35A6-88D7-D82309F81587> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help; 0x7fff3324a000 - 0x7fff33251fff com.apple.EFILogin (2.0 - 2) <B06CCD1C-A4D1-34D2-89C5-0DB69FE65234> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin; 0x7fff33252000 - 0x7fff3325dfff libcsfde.dylib (554) <9CDB9580-DD1C-347E-91C5-6D92D96F52F5> /usr/lib/libcsfde.dylib; 0x7fff3325e000 - 0x7fff332c3fff libcurl.4.dylib (121.40.2) <77010EA9-4AD1-3F4A-B3EF-2FFE739FB349> /usr/lib/libcurl.4.dylib; 0x7fff332c4000 - 0x7fff332cbfff com.apple.LoginUICore (4.0 - 4.0) <7225326A-7704-362D-B64E-4ABF4A221F88> /System/Library/PrivateFrameworks/LoginUIKit.framework/Versions/A/Frameworks/LoginUICore.framework/Versions/A/LoginUICore; 0x7fff332cc000 - 0x7fff3332ffff com.apple.AppSupport (1.0.0 - 29) <21E116C6-C770-3024-98EB-51D1166AACD2> /System/Library/PrivateFrameworks/AppSupport.framework/Versions/A/AppSupport; 0x7fff333d0000 - 0x7fff33482fff com.apple.GameController (1.0 - 1) <E2778524-D805-3EF4-A147-DECE5315D77F> /System/Library/Frameworks/GameController.framework/Versions/A/GameController; 0x7fff3348b000 - 0x7fff3348bfff com.apple.ApplicationServices (48 - 50) <42B48E32-1918-3178-8DE0-E8126B9EC088> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices; 0x7fff33648000 - 0x7fff33687fff com.apple.AppleIDSSOAuthentication (1.0 - 1) <687FC889-44F5-3FA9-A93B-D2D65B16B6B0> /System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/Versions/A/AppleIDSSOAuthentication; 0x7fff3378c000 - 0x7fff3378cfff ,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:73030,Log,LoginUICore,73030,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['Log'],['LoginUICore']
Testability,"3C3,float\u003E,float\u003E\u003E""; },; ""object"": {; ""data"": [; {; ""defaultValue"": ""unnamed"",; ""group"": """",; ""help"": ""object name"",; ""name"": ""name"",; ""type"": ""string""; },; {; ""defaultValue"": ""0"",; ""group"": """",; ""help"": ""if true, emits extra messages at runtime."",; ""name"": ""printLog"",; ""type"": ""bool""; },; {; ""defaultValue"": """",; ""group"": """",; ""help"": ""list of the subsets the objet belongs to"",; ""name"": ""tags"",; ""type"": ""TagSet""; },; {; ""defaultValue"": """",; ""group"": """",; ""help"": ""this object bounding box"",; ""name"": ""bbox"",; ""type"": ""BoundingBox""; },; {; ""defaultValue"": ""Undefined"",; ""group"": """",; ""help"": ""The state of the component among (Dirty, Valid, Undefined, Loading, Invalid)."",; ""name"": ""componentState"",; ""type"": ""ComponentState""; },; {; ""defaultValue"": ""0"",; ""group"": """",; ""help"": ""if true, handle the events, otherwise ignore the events"",; ""name"": ""listening"",; ""type"": ""bool""; }; ],; ""link"": [; {; ""help"": ""Graph Node containing this object (or BaseContext::getDefault() if no graph is used)"",; ""name"": ""context""; },; {; ""help"": ""Sub-objects used internally by this object"",; ""name"": ""slaves""; },; {; ""help"": ""nullptr for regular objects, or master object for which this object is one sub-objects"",; ""name"": ""master""; }; ]; },; ""target"": """"; }; },; ""description"": ""foo\n""; }; ]; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4775:3878,test,test,3878,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4775,2,['test'],['test']
Testability,3F3FFA-6692-3D56-ACBA-DDA40C566DDE> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji; 0x7fff29c04000 - 0x7fff29c0efff com.apple.IOMobileFramebuffer (343.0.0 - 343.0.0) <B15E9DA1-1C81-3ECF-94C7-FD137AD6C5E2> /System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer; 0x7fff29c0f000 - 0x7fff29ce1fff com.apple.framework.CoreWLAN (16.0 - 1657) <35927D28-3324-3CAB-9255-276A7022EADC> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN; 0x7fff29ce2000 - 0x7fff29ee1fff com.apple.CoreUtils (6.5 - 650.6) <184C48A4-7F66-395B-81DB-DAA1641383CF> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils; 0x7fff29ee2000 - 0x7fff29f04fff com.apple.MobileKeyBag (2.0 - 1.0) <0F83FED4-709A-37A0-9E04-EFFD71CB1272> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag; 0x7fff29f05000 - 0x7fff29f15fff com.apple.AssertionServices (1.0 - 505.80.1) <A00B802D-7BB8-3F6B-A79D-E9697F7D0ABB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices; 0x7fff29f16000 - 0x7fff29fa2fff com.apple.securityfoundation (6.0 - 55240.40.4) <72AC63B1-0B72-394F-97E8-BA9B114DD0A9> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation; 0x7fff29fa3000 - 0x7fff29facfff com.apple.coreservices.BackgroundTaskManagement (1.0 - 104) <EC15118E-62BD-3C24-A880-3B9B74318B0B> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement; 0x7fff29fad000 - 0x7fff29fb1fff com.apple.xpc.ServiceManagement (1.0 - 1) <FD031028-B702-3909-B2AF-3916404DD4A8> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement; 0x7fff29fb2000 - 0x7fff29fb4fff libquarantine.dylib (119.40.2) <40D35D75-524B-3DA6-8159-E7E0FA66F5BC> /usr/lib/system/libquarantine.dylib; 0x7fff29fb5000 - 0x7fff29fc0fff libCheckFix.dylib (31) <74E17BB2-1A3C-3574-92DD-63ABE39E3FF9> /usr/lib/libCheckFix.dylib; 0x7fff29fc1,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:37277,Assert,AssertionServices,37277,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['Assert'],['AssertionServices']
Testability,4521C54> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore; 0x7fff2b8e0000 - 0x7fff2b92afff com.apple.OTSVG (1.0 - 677.3.0.4) <827396F3-F3A7-3A4F-BE7F-171077501137> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG; 0x7fff2b92b000 - 0x7fff2b931fff com.apple.xpc.AppServerSupport (1.0 - 2038.80.3) <C78E9D22-5110-349B-AF8E-6BA893A20214> /System/Library/PrivateFrameworks/AppServerSupport.framework/Versions/A/AppServerSupport; 0x7fff2b932000 - 0x7fff2b943fff libhvf.dylib (1.0 - $[CURRENT_PROJECT_VERSION]) <F0974976-30C0-35EB-92F1-B4CF1E974F11> /System/Library/PrivateFrameworks/FontServices.framework/libhvf.dylib; 0x7fff2b944000 - 0x7fff2b946fff libspindump.dylib (295.1) <3B4701CB-8F66-3E50-A38A-BEEC992AAC31> /usr/lib/libspindump.dylib; 0x7fff2b947000 - 0x7fff2ba07fff com.apple.Heimdal (4.0 - 2.0) <69768234-4F4F-3AB6-B116-4AE249E6417A> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal; 0x7fff2ba08000 - 0x7fff2ba22fff com.apple.login (3.0 - 3.0) <B9BEC3A1-688C-3999-B705-2D50B8756E62> /System/Library/PrivateFrameworks/login.framework/Versions/A/login; 0x7fff2ba23000 - 0x7fff2baf5fff com.apple.corebrightness (1.0 - 1) <F55C2F51-DC45-3D79-A3A2-8EC8CA6B0E30> /System/Library/PrivateFrameworks/CoreBrightness.framework/Versions/A/CoreBrightness; 0x7fff2bba2000 - 0x7fff2bba5fff libodfde.dylib (26) <47160F56-2A36-3147-B721-279BE2F8B4A6> /usr/lib/libodfde.dylib; 0x7fff2bba6000 - 0x7fff2bc10fff com.apple.bom (14.0 - 233) <F4B7C353-8A65-3B54-9E01-2C93CB3F55A3> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom; 0x7fff2bc11000 - 0x7fff2bc5bfff com.apple.AppleJPEG (1.0 - 1) <7F3819DE-BCE7-32B7-BB33-10C1DB2BA512> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG; 0x7fff2bc5c000 - 0x7fff2bd3afff libJP2.dylib (2130.3.5) <2DFE6642-4309-30BD-A402-F93E28F1F065> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib; 0x7fff2bd3b000 - 0x7fff2bd3efff com.apple.WatchdogClient.f,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:51335,log,login,51335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['log'],['login']
Testability,"6572 warnings about these missing `override` on MacOS are making the build logs explode :sweat_smile: ; This PR fixes that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1634:75,log,logs,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1634,3,"['log', 'test']","['logs', 'test']"
Testability,7201A7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList; 0x7fff27439000 - 0x7fff2743bfff libapp_launch_measurement.dylib (14.1) <2BBB708C-4D91-364E-ABD0-39BF198688A6> /usr/lib/libapp_launch_measurement.dylib; 0x7fff2743c000 - 0x7fff27484fff com.apple.CoreAutoLayout (1.0 - 21.10.1) <7A2E42E6-3AF2-3ECB-8A16-5C4AC41206EE> /System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout; 0x7fff27485000 - 0x7fff27567fff libxml2.2.dylib (34.9) <E0BF29C7-869B-3DD5-82AE-F36E6398091A> /usr/lib/libxml2.2.dylib; 0x7fff27568000 - 0x7fff275b4fff com.apple.CoreVideo (1.8 - 408.4) <50857F8D-C7CC-3609-B0DB-FC3C7382243B> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo; 0x7fff275b5000 - 0x7fff275b7fff com.apple.loginsupport (1.0 - 1) <B149BCAF-854C-3820-809D-15C6077FFB8B> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport; 0x7fff275b8000 - 0x7fff275e0fff com.apple.aps.framework (4.0 - 4.0) <D86ED827-F22D-3A52-B055-251478B29AE1> /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService; 0x7fff275e1000 - 0x7fff275fefff com.apple.UserManagement (1.0 - 1) <B6B35079-3860-384F-B7A2-584192BAAE70> /System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement; 0x7fff275ff000 - 0x7fff2779efff com.apple.cloudkit.CloudKit (970 - 970) <58BD254C-AAF1-3CC5-AAB7-2EF0A70BA033> /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit; 0x7fff27822000 - 0x7fff27bc7fff com.apple.CoreML (1.0 - 1) <21D89ABE-2DEC-3099-81CC-78D9ADB9D12B> /System/Library/Frameworks/CoreML.framework/Versions/A/CoreML; 0x7fff2851b000 - 0x7fff28598fff com.apple.corelocation (2420.12.16 - 2420.12.16) <8BD49018-78D4-3A81-88AD-47DE1A8E3BFE> /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation; 0x7fff28599000 - 0x7fff285a9fff libsystem_containermanager.dylib (318.80.2) <6,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:30986,log,loginsupport,30986,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['log'],['loginsupport']
Testability,"99% of the modules/plugins implements getModuleComponentList() with; ```; const char* getModuleComponentList(); {; /// string containing the names of the classes provided by the plugin; static std::string classes = core::ObjectFactory::getInstance()->listClassesFromTarget(MODULE_NAME);; return classes.c_str();; }; ```; And the rest either omitted to implement it, or just forgot to update the list. (e.g MultiThreading). IMO getModuleComponentList() does not have really a meaning anymore and one should just use `ObjectFactory::listClassesFromTarget()` directly.; AFAIK, the only piece of code in the SOFA codebase using this entrypoint is Gui.Qt widget, displaying the component list for each loaded plugin. This PR:; - removes all the entrypoints from Sofa.Component.* (+MultiThreading); - deprecates getModuleComponentList() calls; - Sofa.Gui.Qt: calls directly listClassesFromTarget(), but still tests if getModuleComponentList() needs to be called; - warns at runtime if one plugin do implement getModuleComponentList(); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4795:903,test,tests,903,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4795,3,['test'],"['test', 'tests']"
Testability,":+1: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1833:546,test,test,546,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1833,2,['test'],['test']
Testability,"::make_pair(vel.id(),1.0)); // <-- What does a pair represent? What does this list represent?; ops[0].second.push_back(std::make_pair(dx.id(),dt));; // pos += vel * dt; ops[1].first = pos2;; ops[1].second.push_back(std::make_pair(pos.id(),1.0));; ops[1].second.push_back(std::make_pair(vel2.id(),dt));; ```. to . ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2,; ScaledConstMultiVecId{vel.id(), 1._sreal} + ScaledConstMultiVecId{dx.id(), dt}};; // ok, now we know that the scalar and the MultiVecId are multiplied together.; // there is also an operator +, suggesting that the whole operation is a linear combination. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```. Note that in C++20, we can write something like:; ```C++; ops[1] = VMultiOpEntry{ .outputId = pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```; which is IMO clearer. **NOT IMPLEMENTED**:; I wanted to go even further (but there are problems of type conversion, so it's not yet ready):. ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2, vel.id() + dx.id() * dt};. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2, pos.id() + vel2.id() * dt};; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4333:2052,test,test,2052,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4333,2,['test'],['test']
Testability,":arrow_down_small: 161 → 86 warnings! (fedora); :arrow_down_small: 312 → 182 warnings! (ubuntu gcc). :fire: :fire: :fire: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4291:663,test,test,663,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4291,2,['test'],['test']
Testability,:dove: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1333:260,test,test,260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1333,2,['test'],['test']
Testability,":warning: depends on #1488. This refactoring guarantees size consistency between `position / forces / velocity / external_forces` buffers when resized. Since those fields are coupled, changing the size of one should change the size of the others. except it's not the case.; plus, there's a ""size"" datafield that is supposed to determine the size of the buffers. Thus it is now impossible to edit the size of those buffers directly. any insertion / removal of a line in the buffers must be preceded with a change of size, which in turn will redimension the buffers. Also: When creating the scene (before executing the simulation) init_size and init_position should be used.; The idea behind that last change is that we should have separate datafields for inputs and outputs, instead of mixing both concepts together. :warning: **THIS IS BREAKING** because there are probably tons of codes out there that resize position manually and then call` init / reinit / bwdInit` on MOs, hoping for them to update the component (I should know I've been doing it for 6years :D). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1489:1317,test,test,1317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1489,2,['test'],['test']
Testability,; 0x7fff29bf1000 - 0x7fff29c03fff com.apple.CoreEmoji (1.0 - 128) <D43F3FFA-6692-3D56-ACBA-DDA40C566DDE> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji; 0x7fff29c04000 - 0x7fff29c0efff com.apple.IOMobileFramebuffer (343.0.0 - 343.0.0) <B15E9DA1-1C81-3ECF-94C7-FD137AD6C5E2> /System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer; 0x7fff29c0f000 - 0x7fff29ce1fff com.apple.framework.CoreWLAN (16.0 - 1657) <35927D28-3324-3CAB-9255-276A7022EADC> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN; 0x7fff29ce2000 - 0x7fff29ee1fff com.apple.CoreUtils (6.5 - 650.6) <184C48A4-7F66-395B-81DB-DAA1641383CF> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils; 0x7fff29ee2000 - 0x7fff29f04fff com.apple.MobileKeyBag (2.0 - 1.0) <0F83FED4-709A-37A0-9E04-EFFD71CB1272> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag; 0x7fff29f05000 - 0x7fff29f15fff com.apple.AssertionServices (1.0 - 505.80.1) <A00B802D-7BB8-3F6B-A79D-E9697F7D0ABB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices; 0x7fff29f16000 - 0x7fff29fa2fff com.apple.securityfoundation (6.0 - 55240.40.4) <72AC63B1-0B72-394F-97E8-BA9B114DD0A9> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation; 0x7fff29fa3000 - 0x7fff29facfff com.apple.coreservices.BackgroundTaskManagement (1.0 - 104) <EC15118E-62BD-3C24-A880-3B9B74318B0B> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement; 0x7fff29fad000 - 0x7fff29fb1fff com.apple.xpc.ServiceManagement (1.0 - 1) <FD031028-B702-3909-B2AF-3916404DD4A8> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement; 0x7fff29fb2000 - 0x7fff29fb4fff libquarantine.dylib (119.40.2) <40D35D75-524B-3DA6-8159-E7E0FA66F5BC> /usr/lib/system/libquarantine.dylib; 0x7fff29fb5000 - 0x7fff29fc0fff libCheckFix.dylib (31) <74E17BB2-,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:37169,Assert,AssertionServices,37169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['Assert'],['AssertionServices']
Testability,"; SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'VisualBody'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'OglModel'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). SofaContextAPI::loadScene method returns: success (bool) for scene: C:/Users/dhananjay/unity_projects/testSofa/Assets/SofaUnity/Scenes/SofaScenes/tissue.scn; UnityEngine.Debug:LogError (object); SofaUnityAPI.SofaContextAPI:loadScene (string) (at Assets/SofaUnity/Plugins/SofaUnityAPI/SofaContextAPI.cs:189); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:486); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:3583,Log,Log,3583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['Log'],['Log']
Testability,"; }; ```. To avoid breaking (a lot of) code, a compatibility layer has been implemented, so the existing code still works:; ```; #include <sofa/helper/gl/Texture.h; ...; sofa::helper::gl::Texture = ....;; ```; and will either:; - **create an error** if you did not link against Sofa.GL; - **generate a deprecation warning** if you did link but still using old paths.; So for 99.999% of code, all you have to do is to link against Sofa.GL (or even nothing if you code is already linking against modules linking now against Sofa.GL like SofaOpenGlVisual); ; ## Real breaking code; ONE function has been removed from core::visual::VisualParam :; helper::gl::Framebuffer getFramebuffer(); which was used to get the current bound framebuffer in OpenGL (getting a Sofa utility class Framebuffer).; Two reasons why it has been removed:; - nobody uses it in all the repository; - one can just use a real OpenGL function to get the bound framebuffer, with ; ```; glGetIntegerv(GL_FRAMEBUFFER_BINDING, &result);; ```; for example. # Notes; The compilation of Sofa.GL is itself enabled with the CMake variable SOFA_NO_OPENGL (weird name but I wanted to keep the same ""reasoning"" for now); Use of SOFA_NO_OPENGL macro in the code has been removed from the Sofa codebase only, not the plugins (in a future PR). 😅. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1649:4364,test,test,4364,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1649,2,['test'],['test']
Testability,"='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [LineCollisionModel, PointCollisionModel, TriangleCollisionModel]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, OglModel, SpotLight]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField]--> ; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2111:3089,test,test,3089,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111,2,['test'],['test']
Testability,@courtecuisse removed some compilation warnings from sofa . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/361:311,test,test,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/361,2,['test'],['test']
Testability,"@fredroy Could you check from https://github.com/sofa-framework/sofa/pull/2551 that this file should not be on git?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3285:656,test,test,656,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3285,2,['test'],['test']
Testability,"@hugtalbot ; Copied search for correct Direct Linear Solver from GenericConstraintCorrection. As mentioned in https://github.com/sofa-framework/sofa/discussions/3046 the object did not check the correct type of the solver during init. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3055:774,test,test,774,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3055,2,['test'],['test']
Testability,@thomas-lemaire pointed that in several place there is mis-usages of printLog. ; We should clean that by clearly defining what is the correct behavior. . We can clean the printLog stuff independently but this is in fact connected to the msg_* API (https://www.sofa-framework.org/community/doc/programming-with-sofa/logger/) as well as this PR(https://github.com/sofa-framework/sofa/pull/106) which are attempts to lay down the foundations for a general handling of all the messages in Sofa.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/160:315,log,logger,315,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/160,1,['log'],['logger']
Testability,"A CompressedRowSparseMatrix is compressed if the temporary vector of triplets has been converted into the compressed format. Therefore, the boolean `compressed` must be set depending on the size of the temporary vector, not the size of the compressed values. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2894:798,test,test,798,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2894,2,['test'],['test']
Testability,"A PR to feed the discussion : the data link `l_topology` is emitting a warning when empty ONLY in the two masses DiagonalMass and MeshMatrixMass which is inconsistent to all other components having such a data (with the exact same behavior). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3116:781,test,test,781,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3116,2,['test'],['test']
Testability,"A PR with a high _NumberOfWarnings/NumberOfModifiedFiles_ ratio 😗. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2046:606,test,test,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2046,2,['test'],['test']
Testability,"A Quick and dirty attempt to replace the call super anti-pattern for the ""parse"" method. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3904:630,test,test,630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3904,2,['test'],['test']
Testability,"A Test and some examples depends on SofaPython.; As SofaPython will become deprecated, those files must move into it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1887:2,Test,Test,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1887,3,"['Test', 'test']","['Test', 'test']"
Testability,"A `ConstraintCorrection` stores the list of constraint solvers using it. This is mainly to notice them to stop using them when they are destroyed (in the cleanup method).; This list was a `std::list`. I suggest a `MultiLink` instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2364:773,test,test,773,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2364,2,['test'],['test']
Testability,A binding for an often used Node method. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1171:292,test,test,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1171,2,['test'],['test']
Testability,"A bit of cleaning (formatting, removal of commented code, use of our friend `std::enable_if_t` etc) for `sofa::type::MatSym`. I added the `operator*` on matrices (symmetric and non-symmetric). I also added simple unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4600:218,test,tests,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4600,3,['test'],"['test', 'tests']"
Testability,A break is present in the ```doUpdate``` function making the detection of all hexahedra fail. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1417:345,test,test,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1417,2,['test'],['test']
Testability,A bunch of CMake changes I made for v18.06 construction. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/789:308,test,test,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/789,2,['test'],['test']
Testability,"A component can be included in multiple maps (`uncreatableComponents`, `dealiasedComponents`, ` movedComponents`). If it is the case, only one was picked and the others were ignored. This PR processes all the maps to inform the user. Example of output:. ```; The component 'DefaultPipeline' cannot be found in the factory. ; Several reasons are possible:; 1) This component has been MOVED from SofaBaseCollision to Sofa.Component.Collision.Detection.Algorithm since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Collision.Detection.Algorithm'/> ; 2) This alias for the component CollisionPipeline was removed in SOFA v24.12.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5074:1253,test,test,1253,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5074,2,['test'],['test']
Testability,"A constructor and a method are deprecated. It is error-prone. It is very easy to make a mistake. For example, the following constructions were possible:. ```cpp; OptionsGroup(2, ""optionA""); OptionsGroup(10); OptionsGroup(1, ""optionA"", ""optionB""); ```. Based on #3737 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3741:808,test,test,808,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3741,2,['test'],['test']
Testability,"A continuation of ; - #4812 . but much bigger and less trivial. This PR removes SOFA_ENABLE_LEGACY_HEADERS, implying:; - no more collections/deprecated projects which was to ensure the continuity of Sofa.NG; - some renaming in MultiThreading and SofaCUDA. The deletion of the layer compat between old and new modules was acted for 23.06 so not a big deal by itself (only 1.5 year late🤷‍♂️ ).; But some olden modules still have some code/components:; - SofaGraphComponent: with a `Gravity` component; - SofaMiscCollision: with `DefaultCollisionGroupManager, SolverMerger` components and `RayTriangleVisitor` visitor; - SleepController: with a `SleepController`component; - SofaValidation: with various measuring stuff components.; There is also SofaExporter which had some forgotten(?) examples of components which were moved. So the examples have been just moved as well. So what should be done for these components?; IMO (not done yet); - `Gravity` seems useless/not usable.; - `SleepController` might maybe probably be interesting; - `DefaultCollisionGroupManager, SolverMerger` were bogus and RayTriangleVisitor not used at all; - SofaValidation may be totally transformed as a plugin (as in `applications/plugins`). To be discussed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4813:1776,test,test,1776,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4813,2,['test'],['test']
Testability,"A cosmetic helper function to concatenate paths ensuring exactly one directory separator between each part. I happen to see paths such as `C:/Users/Temp//filename.ext`, and it hurt my cornea. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3961:731,test,test,731,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3961,2,['test'],['test']
Testability,"A detailed description of the component is provided in the code; Unit tests are added. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3162:70,test,tests,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3162,3,['test'],"['test', 'tests']"
Testability,"A directory that was recently removed is still mentioned in the cmake build files, so installation fails (compilation is fine). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/470:379,test,test,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/470,2,['test'],['test']
Testability,"A doxygen comment referred a variable name that does not exist. It was probably renamed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2467:628,test,test,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2467,2,['test'],['test']
Testability,"A fast sparse matrix product, based on the pre-computation of two input matrices intersection, is introduced. It is supported by tests (in this PR) and benchmarks (https://github.com/alxbilger/SofaBenchmark/pull/1). The method is based on :; 1) Saupin, G., Duriez, C. and Grisoni, L., 2007, November. Embedded multigrid approach for real-time volumetric deformation. In International Symposium on Visual Computing (pp. 149-159). Springer, Berlin, Heidelberg.; 2) Saupin, G., 2008. Vers la simulation interactive réaliste de corps déformables virtuels (Doctoral dissertation, Lille 1). The method is used in `MechanicalMatrixMapper`. There are 4*2 sparse matrix products in `MechanicalMatrixMapper`. The user of `MechanicalMatrixMapper` has the choice to use the fast product or not. If any topology changes, it is probably faster to use the regular product as any topology change triggers the time-consuming re-computation of the intersection. The new timings of the example scene are (to compare to https://github.com/sofa-framework/sofa/pull/2367):. Using the fast product:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 53.37 552.66 55.85 15.82 55846.3 100 TOTAL; ...; 4 0.96 1 21.14 504.13 22.56 15.26 22.56 40.40 ....MBKBuild; 5 1.15 1 20.28 495.02 21.66 15 21.66 38.78 .....MMM-addKToMatrix; 6 1.15 1 1.67 3.78 1.77 0.12 1.77 3.17 ......jacobian; 6 2.92 1 6.60 12.14 7.08 0.46 7.08 12.67 ......stiffness; 6 10 1 2.47 5.98 2.65 0.20 2.65 4.74 ......copyKToEigen; 7 10 1 2.47 5.97 2.64 0.20 2.64 4.73 .......KfromTriplets; 6 12.65 1 0.22 0.54 0.26 0.02 0.26 0.46 ......copyJ1J2ToEigen; 7 12.84 1 0.05 0.19 0.06 0.01 0.06 0.11 .......copyJ2ToEigen; 6 12.90 1 5.31 479.58 6.13 14.98 6.13 10.98 ......Multiplication; 7 12.90 1 3.08 469.90 3.68 14.75 3.68 6.60 .......J1tKJ1; 7 16.59 1 0.36 4.89 0.38 0.15 0.38 0.68 .......J2tKJ2; 7 16.97 1 1.52 4.10 1.71 0.13 1.71 3.06 .......J1tKJ2; 7 18.68 1 0.32 0.83 0.35 0.03 0.35 0.63 .......J2tKJ1; 6 19.04 1 2.50 5.50 2.66 0.20 2.66 4.77 .",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2394:129,test,tests,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2394,2,"['benchmark', 'test']","['benchmarks', 'tests']"
Testability,"A few Config.cmake.in need more find_package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2891:585,test,test,585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2891,2,['test'],['test']
Testability,A few fixes I had to do for v18.06.01 (picked from v18.06 branch). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/791:318,test,test,318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/791,2,['test'],['test']
Testability,A few minor change in matrix class to improve performance . FullMatrix: Restore fast matrix clear function; MatExpr: Remove console output in addTo function. Clear function in visual studio profiler. current: 0.51% inclusive samples; ![doubleForLoopClear](https://user-images.githubusercontent.com/3921764/63861622-85081200-c9ab-11e9-8192-e536e4c5b4eb.jpg). std::fill: 0.18% inclusive samples ; ![stdfillClear](https://user-images.githubusercontent.com/3921764/63861635-89ccc600-c9ab-11e9-9e87-2cac821888cf.jpg). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1128:764,test,test,764,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1128,2,['test'],['test']
Testability,"A few people in the Mimesis team have made comments about errors that occur when the USE_MASK option is enabled. This PR simply sets the option as disabled by default, so that users will not unknowingly use it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/532:462,test,test,462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/532,2,['test'],['test']
Testability,"A file in SofaCore wants to include something in SofaBaseMechanics (further in the dependency graph).; This was not throwing any error as only stuff from SofaBaseMechanics (and its siblings/children) was including this file, and this file contains only templated functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2632:813,test,test,813,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2632,2,['test'],['test']
Testability,"A first round of renaming from 'bloc' to 'block'. Issue https://github.com/sofa-framework/sofa/issues/2329. [ci-depends-on https://github.com/sofa-framework/Flexible/pull/2]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2404:714,test,test,714,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2404,2,['test'],['test']
Testability,A fix for compilation errors when working with operator '*=' from Transform class. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/506:334,test,test,334,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/506,2,['test'],['test']
Testability,"A list of components is being defined, see issue #226 ; The idea is to present shortly a first prototype of SOFA NG to involve more and more people in the cleaning, testing of SOFA. This 1st SOFA NG version focuses on : . - very few classes (~20); - simple implementation of the base classes. This would allow to have a first set of simple components allowing for:; - new users to understand SOFA easier; - advanced developers and companies using SOFA for its core features (scene graph, DAG, visitors etc.) but without interests for all other codes. Example of these 20 components: DefaultAnimationLoop, UniformMass, ConstantForceField, EulerExplicit, Cholesky (see #244 ), IdentityMapping, FixedConstraint (see #246 ), ValuesFromIndices, MeshObjLoader (and others), RequiredPlugin. Any feedback is more than welcome : @ChristianDuriez @damienmarchal @StephaneCotin @JeremieA @matthieu-nesme",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/247:165,test,testing,165,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/247,1,['test'],['testing']
Testability,"A little misleading typo. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4908:565,test,test,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4908,2,['test'],['test']
Testability,"A long PR but it is actually divided in 3 parts. A link is provided for each part pointing to a comparison with the previous part. # 1. Introduction of the plugin. A new plugin is introduced to welcome new components. It is enabled by default.; https://github.com/sofa-framework/sofa/compare/master...alxbilger:sofamatrix?expand=1. The plugin may deserve a better name. # 2. Move CImgPlugin features on matrices. I introduced features related to matrices in CImgPlugin in a previous PR. It did not make sense. It is preferable to have them in a higher-level plugin, so I moved them in SofaMatrix.; https://github.com/alxbilger/sofa/compare/sofamatrix...sofamatrix_cimg. # 3. Introduction of a component to visualize the matrix. A component is introduced. It gets the matrix from the linear system and convert it to an bitmap to visualize it directly in the GUI.; https://github.com/alxbilger/sofa/compare/sofamatrix_cimg...sofamatrix_gui. ![image](https://user-images.githubusercontent.com/10572752/144421772-5676f6e8-12af-4468-8bec-24ea7856b00f.png). # To do:. - [x] Expand the bitmap in height; - [ ] Update the bitmap when the image changes during the simulation; - [ ] Do we move `GlobalSystemMatrixExporter` into SofaMatrix?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2517:1770,test,test,1770,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2517,2,['test'],['test']
Testability,"A lot of code was duplicated to apply the same algorithm on both Coord and Deriv types. I factorized those pieces of code. Most of the new code relies of generic lambdas (since C++14). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3541:724,test,test,724,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3541,2,['test'],['test']
Testability,A lot of cosmetic changes and removes some compilation warning related to unsigned int/int conversion. <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/169:272,test,test,272,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/169,1,['test'],['test']
Testability,"A lot of indentation problems and override attribute was not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3792:606,test,test,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3792,2,['test'],['test']
Testability,"A mapping-based scene design is introduced in `examples/Components/forcefield/StiffSpringForceField_simple.scn`. The force field is defined on a mechanical state which is the fusion of two independent sets of points. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2462:756,test,test,756,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2462,2,['test'],['test']
Testability,A method to return all categories (those defined in CategoryLibrary at least...). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1085:333,test,test,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1085,2,['test'],['test']
Testability,A micro PR to add a method that allows me to retrieve the count of all SOFA Events.; I need this to manipulate the Event UIDs as enum values & initialize a vector of Event bindings in SofaPython3 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1084:449,test,test,449,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1084,2,['test'],['test']
Testability,"A mirroring data as in the GenericConstraintSolver; Since it looks like a copy pasting this could be brought in the `ConstraintSolverImpl` ... but well. Let me know!. Further to discussion with @oystebje. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3796:744,test,test,744,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3796,2,['test'],['test']
Testability,A modification of BoxROI object that could be rotated using given angle values and a test for it. The values of angles are defined like in applyRotation method where Euler Angle values in degrees are used. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/560:85,test,test,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/560,3,['test'],['test']
Testability,"A mutex is added when trying to access a tag ID. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2942:588,test,test,588,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2942,2,['test'],['test']
Testability,"A new DataEngine is introduced: `FillReducingOrdering`. A DataEngine to reorder the degrees of freedom in a mesh in order to reduce fill-in in sparse matrix factorization. In other terms, the algorithm minimizes the number of non-zeros entries in the factorization of the sparse matrix of a FEM problem by reordering the degrees of freedom. The implementation is based on METIS. Note: some of the direct linear solvers embed such a reordering internally (e.g. SparseLDLSolver), but not all of them (e.g SparseLUSolver, SparseCholeskySolver etc). An example is also introduced (`examples/Components/engine/FillReducingOrdering.scn`).; Here is the comparison of the two system matrices:. Initial matrix:; ![initial_matrix00001](https://user-images.githubusercontent.com/10572752/143068764-2cbd09b4-906b-4bc1-b3c6-03cd3034a1ab.jpg). Reordered matrix:; ![reorder_matrix00001](https://user-images.githubusercontent.com/10572752/143068809-80a5172a-ce39-4c53-bbfb-e8ec12066cf8.jpg). It improves a lot the performances when the linear solver does not embed a fill-in reducing reordering. This is the case of the `SparseLUSolver` in the example scene.; Rough framerate without reordering: **2.5 FPS**; Rough framerate with reordering: **25 FPS**; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2501:1777,test,test,1777,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2501,2,['test'],['test']
Testability,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2280:31,Test,Testing,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280,6,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,"A parallel equivalent of `CGLinearSolver` on assembled matrices. Benchmark on the introduced example `applications/plugins/MultiThreading/examples/ParallelCGLinearSolver.scn`:. - CG is not multithreaded. ```; [INFO] [BatchGUI] 1000 iterations done in 43.1158 s ( 23.1933 FPS). LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 4 7.28 1 30.20 67.39 35.64 5.53 35.64 82.80 ....MBKSolve; ```. - CG is multithreaded. ```; [INFO] [BatchGUI] 1000 iterations done in 32.1941 s ( 31.0615 FPS). LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 4 19.30 1 10.88 138.69 12.71 6.27 12.71 39.57 ....MBKSolve; ```. The counter of interest is `MBKSolve`. We notice that it is about 2.8x faster on average. ![peek](https://github.com/sofa-framework/sofa/assets/10572752/6dd55e76-16b8-4961-a9aa-77111793048d). [ci-depends-on https://github.com/sofa-framework/Regression/pull/50]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138:65,Benchmark,Benchmark,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138,3,"['Benchmark', 'test']","['Benchmark', 'test']"
Testability,"A relief to me, I never liked this name!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3590:581,test,test,581,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3590,2,['test'],['test']
Testability,"A scene is added in the MultiThreading plugin. Its goal is to show the difference between the parallel collision detection algorithms and the single threaded equivalents, in terms of performances. My results after 1000 time steps:. # Single thread; 43.6893 s ( 22.8889 FPS). ; `doCollisionDetection` runs in ~28.99 ms (mean). # Multi thread; 22.9585 s ( 43.5568 FPS). ; `doCollisionDetection` runs in ~7.81 ms (mean). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2112:957,test,test,957,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2112,2,['test'],['test']
Testability,"A small PR to remove unncessary includes, either because they are useless or classes can be forwarded.; Some _API keyword were incorrect as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2064:685,test,test,685,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2064,2,['test'],['test']
Testability,A small utility object to add a repo at runtime.; Check the example for getting an idea on how to use. I guess it would be mainly useful for people still using XML scene... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/402:424,test,test,424,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/402,2,['test'],['test']
Testability,"A task from #3967 + minor cleaning. I suspect there is also a damping term, which was not taken into account in the derivative before. It needs a deeper investigation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4005:707,test,test,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4005,2,['test'],['test']
Testability,"A task from #3967 + minor cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4004:575,test,test,575,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4004,2,['test'],['test']
Testability,"A task from #3967 . I took the opportunity to convert `double` to `Real`, that is why this PR is breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4009:646,test,test,646,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4009,2,['test'],['test']
Testability,"A task from #3967 . This force field did not implement `addDForce` and `addKToMatrix`, therefore `buildStiffnessMatrix` is empty. However, I suspect that those function must be implemented. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4007:729,test,test,729,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4007,2,['test'],['test']
Testability,"A task from #3967 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4006:559,test,test,559,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4006,2,['test'],['test']
Testability,"A task from #3967. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3993:558,test,test,558,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3993,8,['test'],['test']
Testability,"A task from #3967; Note that `addKToMatrix` was not implemented. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3997:604,test,test,604,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3997,2,['test'],['test']
Testability,"A task from #3967; Note that `addKToMatrix` was not implemented.; I took the opportunity to remove the `float`s. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4015:652,test,test,652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4015,2,['test'],['test']
Testability,"A task from https://github.com/sofa-framework/sofa/issues/3967. A scene example is introduced because there wasn't one before. It is a simple beam under gravity. Usually, scene examples work with a CG. Here I use a direct solver. `addKToMatrix` was not implemented for this force field. So `buildStiffnessMatrix` has been written without a ""model"". I changed a type and remove a struct. It is therefore breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4127:952,test,test,952,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4127,2,['test'],['test']
Testability,"A task from https://github.com/sofa-framework/sofa/issues/3967. I also believe that it is more efficient than `addKToMatrix`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3981:665,test,test,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3981,2,['test'],['test']
Testability,"A task from https://github.com/sofa-framework/sofa/issues/3967. Tested in `examples/Component/MechanicalLoad/SurfacePressureForceField.scn` that the behavior is consistent between CGLinearSolver, EigenSimplicialLDLT and EigenSparseLU. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4097:64,Test,Tested,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4097,3,"['Test', 'test']","['Tested', 'test']"
Testability,"A task from https://github.com/sofa-framework/sofa/issues/3967. Tested with `examples/Component/SolidMechanics/FEM/TriangularFEMForceFieldOptim.scn`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4105:64,Test,Tested,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4105,3,"['Test', 'test']","['Tested', 'test']"
Testability,"A task from https://github.com/sofa-framework/sofa/issues/3967. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3969:603,test,test,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3969,16,['test'],['test']
Testability,"A task from https://github.com/sofa-framework/sofa/issues/3967. `addKToMatrix` was not implemented before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4295:646,test,test,646,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4295,2,['test'],['test']
Testability,"A task from https://github.com/sofa-framework/sofa/issues/3967. ⚠️ No example for this force field, therefore it has not been tested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4115:126,test,tested,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4115,3,['test'],"['test', 'tested']"
Testability,"A test is run with UncoupledCC alone without ODE solvers so no solver found, error, bad.; This fixes it!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1386:2,test,test,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1386,3,['test'],['test']
Testability,"A tool to visualize the trajectory of a particle. ![particles](https://user-images.githubusercontent.com/10572752/200847912-ba668723-13b0-4a17-8ad3-88a08b684ce4.gif). ![pendulum](https://user-images.githubusercontent.com/10572752/200847794-fa8e63f9-e999-483a-9573-ceefad2522db.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3471:822,test,test,822,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3471,2,['test'],['test']
Testability,"A unit test crashed (only in Debug mode). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3976:7,test,test,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3976,3,['test'],['test']
Testability,"A user can chose in the scene to update the bounding box or not. It is no longer a compile-time selection. In InextensiblePendulum.scn, the second pendulum explodes. An update of the bbox would adapt to the exploded object. The bbox is so large that the first pendulum is no longer visible. It may lead the user to think that the scene is not working properly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3080:900,test,test,900,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3080,2,['test'],['test']
Testability,A warning as been introduce in PR #2131 ; ```; EdgeSetGeometryAlgorithms.inl:935:9: warning: logical not is only applied to the left hand side of this comparison [-Wlogical-not-parentheses]; if (!abs(deno) <= EPS); ```. This is a potential source of error.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2182:93,log,logical,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2182,1,['log'],['logical']
Testability,"ADD : use a string instead of an enum to specify an integration method as it easier for user to add new ones. This slightly changes the API of numerical integration.; ADD : add the possibility to add a function to create on the fly the required integration points (when an analytical formula is available).; UPDATE : modified the name of the integration methods for edges, triangles, tetrahedra and hexahedra.; UPDATE : use of numerical integration in Flexible; FIX : bug corrected when using of BezierShapeFunction with plugin HighOrderMeshes . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936:797,test,test,797,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936,2,['test'],['test']
Testability,"ADD Hadrien's collisionAlgorithm and ContraintGeometry to external plugins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3890:615,test,test,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3890,2,['test'],['test']
Testability,ADD some AdvanceTimer macro missing to understand the collision pipeline; FIX some end macro missing. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1158:353,test,test,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1158,2,['test'],['test']
Testability,ADD tests.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/67:4,test,tests,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/67,1,['test'],['tests']
Testability,ADD: constructor and method in Quater to compute quaternion so it represents the rotation required to rotate from one direction vector to a second one. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/640:403,test,test,403,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/640,2,['test'],['test']
Testability,"ADD: new functionality for mesh generation from image: allows for explicit definition of features, i.e., set of positions which will be maintained as sub-set of the mesh nodes. The code was added to the MeshGenerationFromImage components, an example scene was added together with a test that verifies that all features (specified in a VTK file) become nodes of the new mesh. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/294:282,test,test,282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/294,3,['test'],['test']
Testability,"API used only by the [Compliant plugin](https://github.com/sofa-framework/Compliant/), which is deprecated and archived. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4776:660,test,test,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4776,2,['test'],['test']
Testability,"According to the guidelines. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4664:568,test,test,568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4664,30,['test'],['test']
Testability,"According to the guidelines; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4771:568,test,test,568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4771,2,['test'],['test']
Testability,"According to the help in runSofa, the option `--computationTimeOutputType` gives the choice to output computation time stats as a json file. I was not able to export any json file, so I tried to fix it. This is my proposition. It works only for `BatchGUI`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2018:796,test,test,796,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2018,2,['test'],['test']
Testability,"According to this [PR on Caribou's repo](https://github.com/jnbrunet/caribou/pull/60), the MeshMatrixMass::addForce isn't giving the same result either your are using a lumped scheme or not, and I'm not talking about a small difference. You can test it against SOFA v20.12, which works correctly. This may be a critical issue.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2301:245,test,test,245,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2301,1,['test'],['test']
Testability,"According to web, this was useful only on architecture prior to fermi (cuda capabilities < 2.0). useful link from 2011: https://stackoverflow.com/questions/5544355/cuda-umul24-function-useful-or-not. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2715:739,test,test,739,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2715,2,['test'],['test']
Testability,"Actually it works even when SReal=float, but it throws a weird message; ` [DEPRECATED] [MechanicalObject()] The deprecated template 'Vec3d' has been replaced by Vec3f` . And it looks better in the scenes IMO. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3635:748,test,test,748,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3635,2,['test'],['test']
Testability,"Actually what we called ""delegate"" pattern (the one we used to think about to fix the ""call-super"" anti-pattern) is often refereed on intenret as Non Virtual Interface (a pattern very similar to the Template Method Pattern). . Here is a attempt to see it in use on VisualModel::drawVisual; . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3931:831,test,test,831,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3931,2,['test'],['test']
Testability,"Add 2 functions void enablePolygonOffset(float factor, float units); and l void disablePolygonOffset();; to handle the depth offset to draw lines on surfaces. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/937:410,test,test,410,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/937,2,['test'],['test']
Testability,Add Binding to python getCategories in SofaModule. A binding already exist in BaseObject but with this one you will be able to get the categories of an object with only its className; __________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/868:423,test,test,423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/868,2,['test'],['test']
Testability,Add CUDA support on Continuous Integration (CI) to test SofaCUDA,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/665:51,test,test,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/665,1,['test'],['test']
Testability,"Add ConstraintAttachButtonSetting to allow configuration of Lagrangian based mouse interaction directly in the scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4601:657,test,test,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4601,2,['test'],['test']
Testability,Add Data bool d_checkTopology in PointSetTopologyContainer. By default to false. - Methods CheckTopology always return true if this option is not activated.; - Update some topology modifiers methods to check this option instead of CHECK_TOPOLOGY macro. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1351:504,test,test,504,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1351,2,['test'],['test']
Testability,"Add DataEigen.h file to SOFA, in order to be able to add eigen::MatrixXd and Eigen::VectorXd to the to sofa Data (for instance Data<Eigen::MatrixXd>). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1499:402,test,test,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1499,2,['test'],['test']
Testability,Add TaskAllocator interface to customize the task dynamic allocations and its standard implementation using operator new. The PR also include a change of return type of Task::run() function from bool to enum MemoryAlloc to let the scheduler know if the task must be deallocated or not just after it has been executed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/906:569,test,test,569,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/906,2,['test'],['test']
Testability,Add `hasViewer()` function to `Sofa` namespace.; This allow checking the graphical context without outputting errors to stderr. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/964:379,test,test,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/964,2,['test'],['test']
Testability,"Add a Data<bool> maxIteration in LCPForceFeedBack to set a number max of iteration for the gauss seidel used to solve the constraint problem. ADD LCPForceFeedback_test using a simple scene of a tool falling on a floor, checking constraint problem and request some force computation from LCPForceFeedback. Will see in a next PR how to add a test on concurrent threads asking for LCP computeForce . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1576:340,test,test,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1576,3,['test'],['test']
Testability,"Add a `FixedWeakConstraint`. It is really a simplified version of `RestShapeSpringForcefield` that only fixes points with respect to their rest_shape given one single value of stiffness. I didn't use an inheritance because `RestShapeSpringForcefield` does too much and the two set of features aren't really compatible. Keep it simple... . This completes the holy trinity of fixed constraints, now we will have Weak, Projective and Langrangian fixed constraints. It unifies the mechanism. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4750:1029,test,test,1029,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4750,2,['test'],['test']
Testability,Add a boolean data (d_propagatetoDOF) to allow or not the propagation of the topological changes to the mechanical state immediately as soon as they occure. Default value (d_propagateToDOF=true) the topological changes are propagated immediately following the SOFA regular behavior and it should not affect all the Sofa current scenes. If the boolean is set to false the topological state changes update are not propagated immediately and they can executed in another step of the simulaiton loop. This modification should make the concurrent execution of the topological changes and the simulation safe. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/838:855,test,test,855,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/838,2,['test'],['test']
Testability,"Add a csv file in /doc folder to store current benchmark performances. Tests were done using scenes stored in benchmarks folder, in cpu and gpu using CudaVec3f in batch mode.; Each scene has been run 10 times over 1000 steps. Computer specifications are inside the file. Here is a quick histogram of the results:; ![image](https://user-images.githubusercontent.com/21199245/148964875-99c21320-384f-40c9-9dc6-a5e77a8dca82.png). Also move some pictures from SofaCUDA/examples/ to SofaCUDA/doc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2588:47,benchmark,benchmark,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2588,5,"['Test', 'benchmark', 'test']","['Tests', 'benchmark', 'benchmarks', 'test']"
Testability,"Add a generic method for drawing detection outputs following issue #4008 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4048:614,test,test,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4048,2,['test'],['test']
Testability,"Add a lagrangian constraint working the same way as FixedProjectiveConstraint. ; Added Vec3 and Rigid3 specialization. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4646:660,test,test,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4646,2,['test'],['test']
Testability,"Add a method to draw a single tetra scaled; Replace parameter name ```colour``` by ```color``` in sofa/gl/DrawToolGL.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2586:659,test,test,659,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2586,2,['test'],['test']
Testability,Add a new force field for angular springs; Add an example scene. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/334:316,test,test,316,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/334,2,['test'],['test']
Testability,"Add a new method to compute vertexMass using an input density and rework the different init to avoid calling several time the method computeMass which should not be used outside from the class. Fix test UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra; which is failling since PR #2183 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2186:198,test,test,198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2186,3,['test'],['test']
Testability,"Add a new update mechanism for components which need to update / recompute internal variables when one or several data are modified. A visitor has been created for this, called at each begin of time step to refresh if necessary the internal variables. All feedback welcome. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1131:525,test,test,525,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1131,2,['test'],['test']
Testability,Add a new video recorder class VideoRecorderFFMPEG to capture videos of simulated scenes. . This new video recorder has two differences from the old recorder. ; 1) It depends only on ffmpeg executable and not on any ffmpeg libs. ; 2) It is much faster. (only ~20% slowdown when capturing video). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/883:547,test,test,547,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/883,2,['test'],['test']
Testability,"Add a parameter ""drag"" to the collision response. When two objects slip past each other, a force of magnitude `-drag*relative_velocity` is applied to the contact points. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4991:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4991,2,['test'],['test']
Testability,Add a reset to the mappingJacobian in machanicalObject. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/438:307,test,test,307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/438,2,['test'],['test']
Testability,Add a variable to count the number of primitve tests performed during the narrow phase of the collision detection.; This variable is only for statistics purpose. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/930:47,test,tests,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/930,3,['test'],"['test', 'tests']"
Testability,"Add abstract method in ForceFeedBack and override in LCPForceFeedback which will lock/unlock a mutex used in doComputeForce. This allow to lock the ForceFeedback computation, done in a dedicated working thread, from another component which is changing the mechanical system in the main thread of SOFA. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1157:553,test,test,553,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1157,2,['test'],['test']
Testability,"Add different collision models and highlight more the beam model as shown below:. ![](https://i.ibb.co/StrTkW2/snapshot.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2092:665,test,test,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2092,2,['test'],['test']
Testability,"Add file `SofaPhysicsBinding` to provide C functions to access the SofaPhysicsAPI methods; Add bindings for:; - SofaPhysicsAPI instance creation/destruction; - creating/loading/unloading SOFA scene (only .scn); - Simulation control: start/stop/step/reset, time stepping, gravity; - Access to SofaPhysicsOutputMesh (aka VisualModel) topology and positions/normals/texcoords. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3539:913,test,test,913,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3539,2,['test'],['test']
Testability,"Add find_package for Sofa.Component.LinearSolver.Ordering. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4999:598,test,test,598,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4999,2,['test'],['test']
Testability,"Add first version of the code compatible with CudaVec3f and CudaVec3d.; Performances are lower than CUDATetrahedronFEMForceField for the moment. Some profiling work will be done in future work. . Add cpu-gpu comparison scene and benchmarks scenes on a beam. this PR depends on changes done in FastTetrahedralCorotationalForceField suggested in PR #2569 (will need to rebase). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2585:229,benchmark,benchmarks,229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2585,3,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,"Add instantiation in CudaVec3f/CudaVec3f1 for; - LinearSolverConstraintCorrection; - PrecomputedConstraintCorrection; - UncoupledConstraintCorrection. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3004:690,test,test,690,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3004,2,['test'],['test']
Testability,Add just a collision model (Sphere to have collision in the default fontain.scn example of the SofaPython example. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/612:366,test,test,366,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/612,2,['test'],['test']
Testability,"Add method to compute the good element density using ancestors and coefs values.; Update all toplogy addElement to take into account ancestors indices and coefficients. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2257:708,test,test,708,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2257,2,['test'],['test']
Testability,"Add method:; - pointBaryCoefs to Compute the barycentric coefficients of input point in the current Triangle; - method isPointInTriangle using the barycentric coefficients; - Add unit tests with positive and negative cases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4053:184,test,tests,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4053,3,['test'],"['test', 'tests']"
Testability,"Add more scenes to be tested for regression; [ci-depends-on https://github.com/sofa-framework/Regression/pull/17]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2237:22,test,tested,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2237,3,['test'],"['test', 'tested']"
Testability,"Add new directories (Let me know now if you want other names):; - **SofaCUDA/scenes/benchmarks/** _(to put cpu and similar gpu scenes to check performances)_; - **SofaCUDA/scenes/cpu-gpu_validation/** _(to put scenes within cpu and gpu Nodes)_. All scenes within actual SofaCUDA/examples will be progressively (after check and refresh) moved either to benchmarks or cpu-gpu_validation or a third directory: **SofaCUDA/scenes/demos** _(for more advanced gpu scenes)_. - Here is an example of cpu-gpu_validation scene for MeshSpringForceField. Cpu version in red and GPU version in green.; ![image](https://user-images.githubusercontent.com/21199245/147080986-1f138589-6fc4-4b28-8020-14095fb3775c.png). - For the benchmarks: ; - MeshSpringForceField_beam10x10x50_cpu.scn (~40 fps) ; - MeshSpringForceField_beam10x10x50_gpu.scn (~75 fps) . - Add Quick safeguard in CudaSpringforceField.cu to avoid 0 division. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2556:84,benchmark,benchmarks,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2556,5,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,"Add option in ParticleSource to add random values in the particles generation.; Remove this option in the default scenes for the CI. [ci-depends-on https://github.com/https://github.com/sofa-framework/Regression/pull/58]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4316:761,test,test,761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4316,2,['test'],['test']
Testability,"Add option to choose between restPosition and position. Also update the init method to better check the inputs. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1978:653,test,test,653,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1978,2,['test'],['test']
Testability,"Add option to transform (rotation, translation scale) in SphereLoader to match other loaders api. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1495:349,test,test,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1495,2,['test'],['test']
Testability,"Add scenes to test for regression. The scenes are about linear solvers.; The async solvers are not added due to the unpredicted nature of the solvers (cannot be tested for regression). [ci-depends-on https://github.com/sofa-framework/Regression/pull/23]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2776:14,test,test,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2776,4,['test'],"['test', 'tested']"
Testability,Add some comments to help newcomer starting with the basic CGLinearSolver. I also set by default the option _warmStart_ to true in [CGLinearSolver.inl](https://github.com/sofa-framework/sofa/blob/124c52ad384ab8a2d33cfd5d8915054fd1128e2b/SofaKernel/modules/SofaBaseLinearSolver/CGLinearSolver.inl#L116). Is this ok @matthieu-nesme ? I did not get why it's not the default behavior? performances ?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/365:648,test,test,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/365,2,['test'],['test']
Testability,Add tests on analytical deflection with BeamFEMForceField and topological changes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2410:4,test,tests,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2410,1,['test'],['tests']
Testability,"Add the `SOFA_SCOPED_ADVANCED_TIMER` cmake option to add the contruction of a `sofa::helper::ScopedAdvancedTimer` in the macro `SCOPED_TIMER` and `SCOPED_TIMER_VARNAME` along or in the place of the Tracy timer. . This allows to also compile no timer at all.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4259:798,test,test,798,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4259,2,['test'],['test']
Testability,"Add the `computeBBox` method to `SpringForceField`, so all spring force fields having `SpringForceField` as the base class can update their bounding box. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2599:693,test,test,693,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2599,2,['test'],['test']
Testability,"Add the element type to SparseGrid to be able o use it with HexaToTetrahedraTopologicalMApping again. ; The Sparsgrid component only produces Hexa component, so this can be explicitly defined at the end of the init. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3475:757,test,test,757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3475,2,['test'],['test']
Testability,"Add the graph illustrating the workflow of a PR review in the SOFA community. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3051:617,test,test,617,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3051,2,['test'],['test']
Testability,"Add timers to match what is present in the FreeMotionAnimationLoop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5043:607,test,test,607,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5043,2,['test'],['test']
Testability,"Add tooltips to describe columns in the `SofaWindowProfiler`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2139:601,test,test,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2139,2,['test'],['test']
Testability,"Add topology EndingEvent to the queue of event each time before propagating. This event can be catch by callback if needed.; See next PR with uniformMass. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2376:694,test,test,694,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2376,2,['test'],['test']
Testability,"Add unit test for:; Hexahedron, tetrahedron, quad, triangle et edge removal. ; Edge is not supported for the moment. To be rebased on master when PR #2191, #2192 and #2193 are merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2215:9,test,test,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2215,3,['test'],['test']
Testability,"Add unit tests on HexahedralFEMForceField, based on HexahedronFEMForceField. Unfortunately, it fails. For now, this PR is just a warning to notice that both force fields don't match. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3968:9,test,tests,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3968,3,['test'],"['test', 'tests']"
Testability,"Add utility class for `TriangleSetTopologyModifier` component.; The class TriangleSubdivider is derived in 5 specializations to reflect the 5 possible scenario to subdivide a triangle. Those subdividers will be used in the new version of Triangle incision in `TriangleSetGeometryAlgorithms`. Todo, finish the tests:; - [x] testSubdivider_1Node();; - [ ] testSubdivider_1Edge();; - [ ] testSubdivider_2Edge();; - [ ] testSubdivider_3Edge();; - [ ] testSubdivider_2Node();. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4747:309,test,tests,309,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4747,3,['test'],"['test', 'tests']"
Testability,"Add virtualization layer to attachment performers. There exists two of them, either using lagrangian based constraints or springs. A common method `start_partial` already existed that was supposed to add required components and parametrize them to either add bilateral constraint or a spring, but this common mechanism was not link with any virtual inheritance. I need to handle both performers blindly using this method (`start_partial`) so I added a virtualization layer that makes more sens than what currently exists. I use it in this PR -> ([Sofa.IGTLink PR](https://github.com/sofa-framework/Sofa.IGTLink/pull/5)). I've also took advantage of this refactoring to rename some attributes that where not following the naming policy, because why not. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4638:1294,test,test,1294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4638,2,['test'],['test']
Testability,"Add virtuals functions in image API. Problem : the virtual class ImageTransform doesn't have transformations functions (translation, rotation, scale). These functions are only available for ImageLPTransform type. (fix needed for an incoming feature in sofaqtquick). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/208:491,test,test,491,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/208,1,['test'],['test']
Testability,Add voluntary errors to test CI.; This PR will be deleted after testing. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/857:24,test,test,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/857,4,['test'],"['test', 'testing']"
Testability,"Add warning when file given has not been found and remove some flooding logs . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4026:72,log,logs,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4026,3,"['log', 'test']","['logs', 'test']"
Testability,"Added constraint tag to be able to classify them and treat them differently in the solvers.; Example of use : Being able to filter the bilateral constraint to solve them directly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3888:719,test,test,719,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3888,2,['test'],['test']
Testability,Added function:; 	drawInifiniteLine; 	drawDisk; 	drawCircle; 	drawArrow. Every drawtool implementation will need to be updated. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1252:379,test,test,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1252,2,['test'],['test']
Testability,"Added some dependency to the fixup list; Maybe soon we'll have every dependency in this file... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4749:637,test,test,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4749,2,['test'],['test']
Testability,Added update of ROI indices at the beginning of each time step using the listening option. todo:; - drawing selected points and ROI radius; - define number of indices of object 1 to consider; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1066:443,test,test,443,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1066,2,['test'],['test']
Testability,Adding Edge case should be done using the proper lower topology addEdge mechanisme. Should fix the scene test error on AddingTetra2TriangleProcess.scn. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1319:105,test,test,105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1319,3,['test'],['test']
Testability,"Adding a few utility functionalities to simplify Data tracking. - Data tracking system is now using Data's counter (lighter and simpler).; - externalizing Data tracking system outside of DataEngine so it can be use elsewhere (including other kinds of components).; - adding DataTrackerEngine that is a kind of DataEngine but that is not a component (not a BaseObject). It can easily be added anywhere and can link any Data, such as inside a Component, or even between components.; - adding DataTrackerFunctor to call a functor as soon as a Data is modified. What you can do: (have a look at the tests). - check if a Data changed on a regular rhythm. e.g check at each time step if a stiffness parameters changed to update a Matrix.; - automatically update a Data if its dependencies changed. e.g. young modulus can be set as a dependency of stiffness matrix, so each time you ask for the matrix, if the modulus changed, the matrix will be updated (behavior similar to DataEngine); - do an action as soon as a Data is modified. E.g. updating the gui scene graph as soon as a Node is (de)activated (by tracking the Data Node::activated).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/80:595,test,tests,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/80,1,['test'],['tests']
Testability,"Adding a few utility functionalities to simplify Data tracking. - externalizing Data tracking system outside of DataEngine so it can be use everywhere.; - Data tracking system is now using Data's counter (lighter and more simple).; - adding DataTrackerEngine that is a kind of DataEngine but that is not a component (not a BaseObject). It can easily be added anywhere and can link any Data, such as inside a Component, or even between components. What you can do: (have a look at the tests); - check if a Data changed on a regular rhythm. e.g check at each time step if a stiffness parameters changed to update a Matrix.; - automatically update a Data if its dependencies changed. e.g. young modulus can be set as a dependency of stiffness matrix, so each time you ask for the matrix, if the modulus changed, the matrix will be updated (behavior similar to DataEngine)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/60:484,test,tests,484,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/60,1,['test'],['tests']
Testability,Adding a general test to computeBBox,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/412:17,test,test,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/412,1,['test'],['test']
Testability,"Adding check on pointers and type of input/output topology (mostly input) before using them in TopologicalMapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3339:654,test,test,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3339,2,['test'],['test']
Testability,"Adding mostly missing RequiredPlugin and some cosmetic changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1802:603,test,test,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1802,2,['test'],['test']
Testability,Adds a helper function to the FileRepository class that returns a platform-specific path to a temporary directory.; Windows and Linux platforms supported. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1382:408,test,test,408,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1382,4,['test'],['test']
Testability,Adds a stop when the visitor encounters a mapping. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/439:302,test,test,302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/439,2,['test'],['test']
Testability,"Adds an example to the plugin ArticulatedSystemPlugin. . ![image](https://user-images.githubusercontent.com/12150715/159580224-bb724ee4-f469-4697-b373-e6e22c0b4a86.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2804:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2804,2,['test'],['test']
Testability,"Adds export from Rigid to Euler angles. One of the use case scenarios is attachment of a spotlight to a rigid body, described in [this thread](https://www.sofa-framework.org/community/forum/topic/attach-a-spotlight-to-a-rigid-body/). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1141:485,test,test,485,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1141,2,['test'],['test']
Testability,"Adds new features with examples:; - BooleanOperations; ![image](https://user-images.githubusercontent.com/12150715/121251475-e9d8e780-c874-11eb-8118-15d3dd24b54e.png); - UpsamplePointCloud; ![image](https://user-images.githubusercontent.com/12150715/121252236-c4001280-c875-11eb-8290-6c92b30fd82d.png); - PoissonSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251754-37edeb00-c875-11eb-99f0-a120bff4f2f1.png) ; - FrontSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251927-679cf300-c875-11eb-9114-9ebbd3d50789.png). Fixes compilation in CylinderMesh:; - **EDIT**: removed unused `#include <sofa/gl/template.h>`. Minor cleaning in DecimateMesh:; - Data member variables names with d_. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2124:1299,test,test,1299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2124,2,['test'],['test']
Testability,"Adds the ability to insert a BaseObject at front or at end in the node. ; Adds the corresponding tests; Adds one use case of the feature to handle the default loop added by a Simulation. ; Adds a root-less createNode in simpleapi (to implement the test in an easier way) . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2396:97,test,tests,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2396,4,['test'],"['test', 'tests']"
Testability,"AdvancedTimer has a function end(), which wants a Node just to get a time and a dt...; And add an ugly (implicit) dependency on SofaSimulationCore (header-wise). Consequently, this PR :; - adds a fonction end() which takes a time and a dt instead of a Node*; - deprecates the original function end(... , Node* node) but change its behavior (calling the standard end()). Maybe it would even better to just delete the end() taking a Node*, as only BatchGUI, runSofa and its own test are using it. (in the SOFA code base at least). And as a side commit, clean the includes (json double-quoted include 🥱 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1770:476,test,test,476,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1770,3,['test'],['test']
Testability,"After a session of peer-programming with @lamriaimen . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4793:594,test,test,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4793,2,['test'],['test']
Testability,After discussion in https://github.com/sofa-framework/sofa/pull/536. Let's use this to nicely format our PRs :-). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/550:365,test,test,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/550,2,['test'],['test']
Testability,"After downloading and installing the current release binary for macOS on macOS 11.2.3 (Big Sur) it fails with the error `Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent`. Here is the full error log:; ```; Process: runSofa-20.12.01 [50874]; Path: /Applications/runSofa.app/Contents/MacOS/bin/runSofa; Identifier: org.sofa-framework.runsofa; Version: 0; Code Type: X86-64 (Native); Parent Process: ??? [1]; Responsible: runSofa-20.12.01 [50874]; User ID: 501. Date/Time: 2021-03-13 15:57:28.167 +0100; OS Version: macOS 11.2.3 (20D91); Report Version: 12; Bridge OS Version: 5.2 (18P4347); Anonymous UUID: 5C06CC90-63AA-4BB4-D9A1-27A399A7A269. Sleep/Wake UUID: EDB34D1C-5F47-4D91-82BA-9C09AEC804F8. Time Awake Since Boot: 75000 seconds; Time Since Wake: 13000 seconds. System Integrity Protection: enabled. Crashed Thread: 0. Exception Type: EXC_CRASH (SIGABRT); Exception Codes: 0x0000000000000000, 0x0000000000000000; Exception Note: EXC_CORPSE_NOTIFY. Termination Reason: DYLD, [0x4] Symbol missing. Application Specific Information:; dyld: launch, loading dependent libraries. Dyld Error Message:; Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:211,log,log,211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['log'],['log']
Testability,"After the discussion on DataLink ( #1526 ) now the Link themselves:. Objectives:; - Avoid multiple instantiations (Node.h) - Link with forward declaration; - Avoid using Links for Sequence / Single when it is actually no real Link. Positive impact:; - clean, factorization and especially the tests; - compile time, perf, related problems: can not be evaluated; - code more readable, more accessible (new devs). Functionally:; - store list something with a name and a help string; - SingleLink vs MultiLink → Shared API; - MultiLink conversion does not exist; - MultiLinks have iterators; - SingleLink have the API for iterating over elements (even if single link). -------. Tasks; - Add test for CheckPath to validate its behavior: #1714 [Merged]; - Move CheckPath() & CheckPathes() from Link.h to BaseLink: #1717 [Merged]; - Add test to show broken behavior in SingleLink: #1749 [To review]; - Move updateLinks() from Link.h to BaseLink: #1735 [Waiting #1749]; - Move read() from Link.h to BaseLink: #1736 [Waiting 1735]; - Unify the notifcation mechanisme in SingleLink/MultiLink: #1706 [breaking]; - Unify the container part of the Link API for SingleLink/MultiLink/BaseLink: (TO COME, draft in:; https://github.com/CRIStAL-PADR/sofa/blob/xp-remove-node-deps/SofaKernel/modules/SofaCore/src/sofa/core/objectmodel/Link.h ); - Replace the use of SingleLink to implement the non sptr version of Node::Single: (TO COME, wip in #1737); - Replace the use of MultiLink to implement the non sptr version Node::Sequence: (TO COME as drafted in NodeContainerSequence https://github.com/CRIStAL-PADR/sofa/blob/xp-remove-node-deps/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/Node.h); - Unify at best the internal parts of SingleLink & MultiLink (TO COME)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1722:292,test,tests,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1722,3,['test'],"['test', 'tests']"
Testability,Again a case where a `std::unordered_map` is preferable over a `std::map`. It makes a difference in the benchmarks:. # Before. ```; -----------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------; BM_AdvancedTimer_begin_end 78.4 ns 78.1 ns 11200000; BM_AdvancedTimer_largeNumberTimers/128 0.012 ms 0.012 ms 64000; BM_AdvancedTimer_largeNumberTimers/512 0.073 ms 0.073 ms 8960; BM_AdvancedTimer_largeNumberTimers/4096 0.760 ms 0.767 ms 896; BM_AdvancedTimer_largeNumberTimers/16384 3.39 ms 3.37 ms 204; BM_AdvancedTimer_deepTreeEnabled/1/2 0.000 ms 0.000 ms 1659259 nbTimers=2; BM_AdvancedTimer_deepTreeEnabled/2/2 0.001 ms 0.001 ms 560000 nbTimers=6; BM_AdvancedTimer_deepTreeEnabled/4/2 0.004 ms 0.004 ms 165926 nbTimers=20; BM_AdvancedTimer_deepTreeEnabled/8/2 0.016 ms 0.016 ms 44800 nbTimers=72; BM_AdvancedTimer_deepTreeEnabled/16/2 0.072 ms 0.071 ms 8960 nbTimers=272; BM_AdvancedTimer_deepTreeEnabled/32/2 0.302 ms 0.298 ms 2358 nbTimers=1056; BM_AdvancedTimer_deepTreeEnabled/64/2 1.35 ms 1.35 ms 498 nbTimers=4.16k; BM_AdvancedTimer_deepTreeEnabled/1/3 0.001 ms 0.001 ms 1120000 nbTimers=3; BM_AdvancedTimer_deepTreeEnabled/2/3 0.003 ms 0.003 ms 248889 nbTimers=14; BM_AdvancedTimer_deepTreeEnabled/4/3 0.019 ms 0.019 ms 37333 nbTimers=84; BM_AdvancedTimer_deepTreeEnabled/8/3 0.153 ms 0.150 ms 4480 nbTimers=584; BM_AdvancedTimer_deepTreeEnabled/16/3 1.15 ms 1.15 ms 640 nbTimers=4.368k; BM_AdvancedTimer_deepTreeEnabled/32/3 9.69 ms 9.58 ms 75 nbTimers=33.824k; BM_AdvancedTimer_deepTreeEnabled/64/3 103 ms 103 ms 7 nbTimers=266.304k; BM_AdvancedTimer_deepTreeEnabled/1/4 0.001 ms 0.001 ms 640000 nbTimers=4; BM_AdvancedTimer_deepTreeEnabled/2/4 0.008 ms 0.008 ms 89600 nbTimers=30; BM_AdvancedTimer_deepTreeEnabled/4/4 0.115 ms 0.114 ms 5600 nbTimers=340; BM_AdvancedTimer_deepTreeEnabled/8/4 1.74 ms 1.77 ms 407 nbTimers=4.68k; BM_AdvancedTimer_deepTre,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2645:104,benchmark,benchmarks,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2645,2,"['Benchmark', 'benchmark']","['Benchmark', 'benchmarks']"
Testability,"Again with a naïve approach, but it's faster than the sequential algorithm. About twice faster on the example. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3668:650,test,test,650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3668,2,['test'],['test']
Testability,Aims to solve #914. Replace array of size 6 with vector of size `constraintsResolutions[j]->getNbLines();`. Fixes #914. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/920:371,test,test,371,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/920,2,['test'],['test']
Testability,All in the title as said in the dev meeting. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1291:296,test,test,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1291,2,['test'],['test']
Testability,"All in the title, files from the previous organization were not deleted; and some cmake.in was not correctly updated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2909:657,test,test,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2909,2,['test'],['test']
Testability,"All in the title. - fix markdown bullet points in CONTRIBUTING; - undeed include in LCPConstraintSolver.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2174:648,test,test,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2174,2,['test'],['test']
Testability,All in the title. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1239:269,test,test,269,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1239,2,['test'],['test']
Testability,"All in the title. ~~Sofa.Testing.Tools aims to regroup all the test templates/skeletons, etc, so the *_test could use it.; It should also a ""header-only"" (aka INTERFACE syntax in cmake) but for now it is treated like a (empty) shared lib.; By itself it does not manage any dependencies, it is the role of the *_test itself to handle its own dependencies.~~. Sofa.Component.ODESolver.Testing gathers all tools/test template for odesolver tests.; Next step should removing SofaCreator and use SimpleAPI instead (and thus removing all binaries dependencies). But the finalization of this should be reviewed/discussed. Mandatory ref #1527; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2650:25,Test,Testing,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2650,7,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,"All is in the title, scene originally from @virginiemarec; This new scene shows how to simply in XML define an heterogeneous object with different regions.; ![](https://i.ibb.co/WzqdPp8/snapshot.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2289:740,test,test,740,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2289,2,['test'],['test']
Testability,"All is in the title. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3570:560,test,test,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3570,2,['test'],['test']
Testability,All is in the title. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1016:272,test,test,272,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1016,2,['test'],['test']
Testability,"All is in the title; Unfortunately, closing did not work due to missing return string. Now this will work!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4560:647,test,test,647,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4560,2,['test'],['test']
Testability,"All loaders/exporters consider the file format in upper-case EXCEPT MeshObjLoader.; When you have stuff like MeshVTKLoader, MeshOBJ, OBJExporter, MeshSTLLoader, ImagePNG, etc; it looks not consistent. So this PR renames all occurrences of MeshObjLoader to MeshOBJLoader and add an alias with `MeshObjLoader` to keep the compatibility with the existing scenes. Otherwise, all the other upper-case should be converted to Xxx but will be much more bothersome that this PR.... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2428:1012,test,test,1012,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2428,2,['test'],['test']
Testability,"All pluginized modules were ignored in binaries due to postinstall-fixup scripts. :warning: **Do not hesitate to suggest other plugins/modules that should be DISABLED by default.**. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1725:721,test,test,721,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1725,2,['test'],['test']
Testability,"All scenes in the ""examples"" folder have the required RequiredPlugin corresponding to the components in the scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2836:654,test,test,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2836,2,['test'],['test']
Testability,All tests on the topology should be in a utility out from the container buffer.; This will remove the methods checkTopology() . See PR #1351 . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1367:4,test,tests,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1367,1,['test'],['tests']
Testability,All tests scenes are now failing because we cannot load the SofaSphFluid plugin. ; This fix should helps ;) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/467:4,test,tests,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/467,3,['test'],"['test', 'tests']"
Testability,"All the `op*` method in `BaseMatrix` seem either unused, or overloaded (by `RotationMatrix`). And they are called only knowing that `RotationMatrix` is used. It makes me think that this code is not used. This PR removes all the code in the cpp file, but it should be restored before merge for a proper deprecation mechanism. Let's first check that the CI does not fail without this code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3335:927,test,test,927,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3335,2,['test'],['test']
Testability,"Allow a 3-level organization: Package > Component > Target. ### Example with SofaPython3 (PR to come in SofaPython3 repo); You want to do:; ```cmake; find_package(SofaPython3 COMPONENTS Bindings); ```; To do that, you must use these macros in your project:; ```cmake; # In SofaPython3/CMakeLists.txt; # Create a Package without Target to contain the Components; sofa_create_package(; PACKAGE_NAME SofaPython3; PACKAGE_VERSION ${PROJECT_VERSION}; RELOCATABLE ""plugins""; ); ```; ```cmake; # In SofaPython3/Bindings/CMakeLists.txt; # Create a Component with Targets into that Package; sofa_create_component_in_package_with_targets(; COMPONENT_NAME Bindings; COMPONENT_VERSION ${SofaPython3_VERSION}; PACKAGE_NAME SofaPython3; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR "".""; RELOCATABLE ""..""; ); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1671:1391,test,test,1391,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1671,2,['test'],['test']
Testability,Allow all loaders (namely Gmsh and STL) to flipNormals (actually reorder the indices of vertices in a triangle).; Update associated scenes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1418:391,test,test,391,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1418,2,['test'],['test']
Testability,Allows for better interactions in UIs. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1471:290,test,test,290,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1471,2,['test'],['test']
Testability,"Already spotted in https://github.com/sofa-framework/sofa/pull/2560 but not propagated to other functions. Reminder: https://godbolt.org/z/no6hss6jr. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3636:689,test,test,689,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3636,2,['test'],['test']
Testability,"Also a demonstration on how to use Eigen::Map from a CRS matrix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2839:604,test,test,604,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2839,2,['test'],['test']
Testability,"Also add a tooltip. Note that the scene graph is unlocked by default. It gives the impression that the simulation is slowed down, compared to before the introduction of the feature. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3119:721,test,test,721,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3119,2,['test'],['test']
Testability,"Also avoid to call the method at ```init``` as input indices might probably not be updated yet. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1979:637,test,test,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1979,2,['test'],['test']
Testability,"Also clean and change code structure to reduce the number of access to element from index. ; Depends on PR #2275 and #2283. Average timing on a set of 6 executions of 10 successive runs of 1000 steps on a grid of 40x40 :. Before PR #2273 ; ```; TriangleFEMForceField:; timeMean: 1.83344; timeMin : 1.78238; timeMax : 1.89879. TriangularFEMForceField:; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. ### **Edit: new performances after several optimisations**; ```; TriangleFEMForceField ; timeMean: 1.43496; timeMin: 1.428055; timeMax: 1.45082. TriangularFEMForceField:; timeMean: 1.459322; timeMin: 1.45386; timeMax: 1.468145; ```. Simulation of 20sec for: ; - Green: TriangleFEMForceField; - Red: TriangularFEMForceField; - Blue: TriangularFEMForceFieldOptim. Before Before PR #2273 ; ![TriangleFEM_old](https://user-images.githubusercontent.com/21199245/128017042-dd476945-5248-457c-9739-108499eb3a0e.gif); After this PR; ![TriangleFEM_new](https://user-images.githubusercontent.com/21199245/128015719-4c90e7d7-4ee4-4525-ad5e-2a2c9d1bfa2f.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2287:1601,test,test,1601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2287,2,['test'],['test']
Testability,"Also clean compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2176:572,test,test,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2176,2,['test'],['test']
Testability,"Also clean the __declspec directives and the stream operator. This PR must be merged after https://github.com/sofa-framework/sofa/pull/3585, to make sure there is no regression in the introduced unit test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3586:200,test,test,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3586,3,['test'],['test']
Testability,"Also display them only if component printLog is set to true. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2152:600,test,test,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2152,2,['test'],['test']
Testability,"Also, I made `ExternalBehaviorModel` depends on `SOFA_ENABLE_LEGACY_HEADERS`, since it depends on `SofaGraphComponent` which also depends on `SOFA_ENABLE_LEGACY_HEADERS`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3302:710,test,test,710,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3302,2,['test'],['test']
Testability,"Also, the repository won't generate anymore the following error when it is created from another library/executable that is not placed directly in the SOFA installation directory:. ```; Error: [FileSystem::isDirectory()] /home/runner/work/my_program/share/sofa/examples: No such file or directory; Error: [FileSystem::isDirectory()] /home/runner/work/my_program/share/sofa: No such file or directory; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1656:945,test,test,945,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1656,2,['test'],['test']
Testability,"Although it is not required, I prefer to add headers to the project so that the IDE can index them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2581:639,test,test,639,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2581,2,['test'],['test']
Testability,"Among the remaining `bwdInit()` functions, this PR removes the one which were useless or rather related to the AnimateBeginEvent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2851:669,test,test,669,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2851,2,['test'],['test']
Testability,"An alternative to https://github.com/sofa-framework/sofa/pull/3687/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3703:608,test,test,608,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3703,2,['test'],['test']
Testability,"An error was introduced in #1793, reported in Issue #1865 and fixed in this PR/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1866:620,test,test,620,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1866,2,['test'],['test']
Testability,"An example is introduced for SquareMapping. In this scene, the goal was to verify that two methods are equivalent:; 1) A SquaredDistanceMapping is used to transform the DOFs from the 3d space to a 1d space (representing the squared distances between the DOFs). Then a spring acts in the 1d space; 2) A combination of two mappings: DistanceMapping and SquareMapping. It also transforms the 3d space to a 1d space where a spring is added. A unit test is added to check both methods are equivalent. However, we can observe that if the simulation runs long enough, both objects diverge. It will be a challenge to find the reasons. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3768:444,test,test,444,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3768,3,['test'],['test']
Testability,An inputForceFeedback data is added in Geomagic so that a force; can be specified as input of the driver.; This force is used only if no LCP is found. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/648:402,test,test,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/648,2,['test'],['test']
Testability,"An other batch of warnings fixes. Detected while using gcc13 from ubuntu2404. Fix some UB by fixing some dangling references warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4698:674,test,test,674,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4698,2,['test'],['test']
Testability,"An other method for better error handling. (the other one to be exception mechanism #1882 ). 'Expected' idiom : ; - [theory by Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C); - clear explanation and comparison with exception: https://bell0bytes.eu/expected/. I am using boost::outcome because we have already boost in SOFA, but this is just to show the concept (I dont want to introduce more boost in SOFA..): https://ned14.github.io/outcome/. (Issue #1924 ); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1925:1086,test,test,1086,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1925,2,['test'],['test']
Testability,"An other round of fixes to compile base SOFA with float (framework+GUI, no tests nor plugins). The CI itself will only check if nothing changed with double. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3435:75,test,tests,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3435,3,['test'],"['test', 'tests']"
Testability,"An other session of warnings removal. it *should* be harmless 🤫. Most important change: replace usage of enum {xxx = yyy} with constexpr keyword for compile-time constant expressions. This is clearer, was made for this, and you can specify the type, contrary to enum https://en.cppreference.com/w/cpp/language/enum :; ```; Values of unscoped enumeration type are [implicitly-convertible](https://en.cppreference.com/w/cpp/language/implicit_conversion#Integral_promotion) to integral types. ; If the underlying type is not fixed, the value is convertible to the first type from the following list able to hold their entire value range: int, unsigned int, long, unsigned long, long long, or unsigned long long, extended integer types with higher conversion rank (in rank order, signed given preference over unsigned) (since C++11).; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3118:1375,test,test,1375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3118,2,['test'],['test']
Testability,"Ancestors and coefficient parameters were lost during EdgeAdded and PointAdded methods coming from Tetrahedron to Triangle mesh. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2460:668,test,test,668,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2460,2,['test'],['test']
Testability,"And also clean DataFileName and DataFileNameVector. DataFileNameVector has been extracted in its own files. The extra copy came from the DataFileNameVector constructor which took a `sofa::type::vector<std::string>` but it should take a `sofa::type::SVector<std::string>`. Therefore, there was an implicit conversion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3188:856,test,test,856,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3188,2,['test'],['test']
Testability,"And remove dependency. If you need to link a background (image/pix) to a camera (for a gui), I dont think the camera itself should be aware of it, but the GUI itself. (and it should then bear the dependency with BackgroundSetting). (Could not find any use of it in the SOFA code base, or even in the plugins). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2637:849,test,test,849,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2637,2,['test'],['test']
Testability,And use them in the Simulation.cpp component. Follow the discussion in this PR: ; https://github.com/SofaDefrost/plugin.SofaPython3/pull/110. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1173:393,test,test,393,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1173,2,['test'],['test']
Testability,"Announcement messages on Discord showed some issues, this should fix them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4530:614,test,test,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4530,2,['test'],['test']
Testability,"Apparently GCC11, by default, treats the ""maybe uninitialized"" warning as an error. ; This occurs in our version of gtest.; ref: https://github.com/google/googletest/issues/3219. I did not consider updating gtest itself as it could be bothersome.; And I think the ""maybe uninitialized"" warning as an error itself is good ; (therefore no command line option fix to consider it only as a warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2181:935,test,test,935,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2181,2,['test'],['test']
Testability,"Apparently clang-mac is very picky about location of the symbols with LTO enabled, and this fact could expose some problem for explicit instanciations (typos, wrong location). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4293:715,test,test,715,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4293,2,['test'],['test']
Testability,"Apparently, I am unable to run runSofa when using something related to OpenGL with mesa graphics on linux. Here you can find a backtrace. ```; ########## SIG 6 - SIGABRT: usually caused by an abort() or assert() ##########; -> /opt/libs/sofa/build/lib/libSofaHelper.so.20.06.99(sofa::helper::BackTrace::dump()+0x23) [0x7fb9a8befb13]; -> /opt/libs/sofa/build/lib/libSofaHelper.so.20.06.99(sofa::helper::BackTrace::sig(int)+0x1df) [0x7fb9a8befeaf]; -> /usr/lib/libc.so.6(+0x3d6a0) [0x7fb9a83c56a0]; -> /usr/lib/libc.so.6(gsignal+0x145) [0x7fb9a83c5615]; -> /usr/lib/libc.so.6(abort+0x116) [0x7fb9a83ae862]; -> /usr/lib/libstdc++.so.6(+0x9686a) [0x7fb9a876986a]; -> /usr/lib/libstdc++.so.6(+0xa2d9a) [0x7fb9a8775d9a]; -> /usr/lib/libstdc++.so.6(+0xa2e07) [0x7fb9a8775e07]; -> /usr/lib/libstdc++.so.6(+0xa30ae) [0x7fb9a87760ae]; -> /usr/lib/libstdc++.so.6(std::__throw_logic_error(char const*)+0x45) [0x7fb9a876c445]; -> /opt/libs/sofa/build/lib/libSofaHelper.so.20.06.99(CanUseGlExtension(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x11c) [0x7fb9a8ce16ec]; -> /opt/libs/sofa/build/lib/libSofaHelper.so.20.06.99(sofa::helper::gl::GLSLShader::InitGLSL()+0x9e) [0x7fb9a8ce29ae]; -> /opt/libs/sofa/build/lib/libSofaOpenglVisual.so(sofa::component::visualmodel::OglShader::initVisual()+0x2c) [0x7fb99f31abfc]; -> /opt/libs/sofa/build/lib/libSofaOpenglVisual.so(sofa::component::visualmodel::Light::initVisual()+0x31d) [0x7fb99f2767bd]; -> /opt/libs/sofa/build/lib/libSofaOpenglVisual.so(sofa::component::visualmodel::LightManager::initVisual()+0x259) [0x7fb99f28c529]; -> /opt/libs/sofa/build/lib/libSofaSimulationCore.so.20.06.99(sofa::simulation::VisualInitVisitor::processNodeTopDown(sofa::simulation::Node*)+0x127) [0x7fb9a9d37407]; -> /opt/libs/sofa/build/lib/libSofaSimulationGraph.so.20.06.99(sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1567:203,assert,assert,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1567,1,['assert'],['assert']
Testability,Appeared after upgrading MacOS to 10.11:; using a relative filename in SceneLoaderXML::loadFromMemory raises ENOENT (No such file or directory) error during SetDirectory chdir.; Still don't know why though :-/. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/325:462,test,test,462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/325,2,['test'],['test']
Testability,"Appearing when other files includes BaseConstraintSet.h. It appeared because:; - the declaration itself was not guarded; - the constructor and the destructor body were in the h, triggering the warning. Actually the last cause is the reason why there are a lot of deprecation warnings due to the Data renaming, even if ""macro-guarded""; there are a lot of components where the body of the ctor and/or the dtor (even only with `=default`) are in the header file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4846:999,test,test,999,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4846,2,['test'],['test']
Testability,"Apply doUpdateInternal API to ConstantForceField; and also change the behavior: do not extrapolate any info when an mismatch of size is detected. - Finally, let's not wait the Data update discussion to integrate such an amazing change ; - And .. we could also think about renaming this class as UniformForceField to be consistent with Masses!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1145:595,test,test,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1145,2,['test'],['test']
Testability,"Apply modification to build and use modeler in sofa framework. ___________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4673:599,test,test,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4673,2,['test'],['test']
Testability,Apply the use of drawTool in the open-source core of SOFA. This now makes SOFA a priori independent from OpenGL using the drawTools.; Fix #653 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/704:396,test,test,396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/704,2,['test'],['test']
Testability,"ArticulatedSystem is a complex and not really maintained code, designed to create articulated things like articulated bodies, etc.; It was accepted that it should be isolated somewhere and maybe refactored/redesigned later (if someone is motivated). I took the liberty to retrieve the ArticulatedControllers (which were deprecated/removed some years ago) and put it back into it. Especially because I retrieved the ""man-walking"" example which is quite cool in my opinion.; But the code was created by DigitalTrainers, I dont know if it could be bothersome license-wise. <img src=""https://user-images.githubusercontent.com/11028016/153249327-37e2b9f2-8961-474f-b2cd-d3d8ce52d9fa.gif"" width=""400"" />. **EDIT: Let's vote between**; - ArticulatedSystem as an external repository which would be referenced in _applications/plugin_ (react with 🚀 ); - ArticulatedSystem in Sofa.Component because this is really important ( react with ❤️ ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2684:1472,test,test,1472,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2684,2,['test'],['test']
Testability,"As @epernod noticed, my PR #917 introduced a side effect in runSofa's scene graph UI.; This PR fixes it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1001:356,test,test,356,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1001,2,['test'],['test']
Testability,"As @fredroy would say, ""and why not!"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1422:290,test,test,290,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1422,2,['test'],['test']
Testability,"As CImgPlugin became almost useless for loading images (jpg, etc #2551 ), its only usage is to ship cimg. ; So it would make sense to put it back in image (which is the main user of the lib cimg). Fix #4299 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4303:748,test,test,748,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4303,2,['test'],['test']
Testability,"As CSparse and metis are only used by SofaSparseSolver module, it was deemed necessary to move these libs into it.; Fix issue #1309 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1357:385,test,test,385,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1357,2,['test'],['test']
Testability,"As SofaNonUniformFEM is the last module in it, SofaAdvanced is DOOMED!. What is this PR about:; - modularization of SofaNonUniform; - SofaAdvanced deps removed from all the Sofa source; - SofaAdvanced is still a collection for compatibility reason, and link with the module SofaNonUniformFEM ; - needed to have a macro to add a module not present in the same directory; - move dependencies in the CMakeFiles, and now modules are compiled before collections (SofaComponentAll/(deprecated) SofaAdvanced), thus I needed to change the tests for SofaExporter/SofaOpenGLVisual. But this is mandatory anyway.; - fix the failing tests brought by the modularization of SofaDenseSolver (which needed SofaNonUniformFem so it was unavoidable). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1344:531,test,tests,531,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1344,4,['test'],"['test', 'tests']"
Testability,"As a result, It is now no longer possible to instantiate `LinearSpring<double>` from `float` (without explicit casting). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/948:372,test,test,372,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/948,2,['test'],['test']
Testability,"As announced @nhnhan92 ;). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2100:566,test,test,566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2100,2,['test'],['test']
Testability,"As convened. To have more consistency with the other SofaMisc* modules.; It should also simplify things when using SofaComponentAll, as SofaMiscCollision was excluded. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2127:707,test,test,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2127,2,['test'],['test']
Testability,"As discussed during #2613 review. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2719:573,test,test,573,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2719,2,['test'],['test']
Testability,"As discussed in PR #3500; Should LinearSolver check at init if the mechanical system to solve is empty:; This can lead to error/skip at each step when inverting matrices are required. . Note from @alxbilger ; `Fair question. This check is performed at each time step. It visits the mechanical objects and compute the size of the system. I don't know if this can be done in the init method if the mechanical objects are not initialized yet.; Also, the API allows to use a Linear Solver on a matrix, without defining a scene (see the test TEST(SparseLDLSolver, MatrixFactorization)). Adding this check in the init method would not make sense in this case.; To be discussed`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3504:532,test,test,532,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3504,2,"['TEST', 'test']","['TEST', 'test']"
Testability,"As discussed in latest dev meeting, we need SceneChecker output even at first load. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/938:335,test,test,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/938,2,['test'],['test']
Testability,"As discussed in the SOFA dev meeting, prefer now using Qt6 over Qt5. Therefore, look firstly for Qt6 before Qt5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4686:652,test,test,652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4686,2,['test'],['test']
Testability,"As discussed on gitter, this one should be rebase and merge in branch v22.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3518:617,test,test,617,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3518,2,['test'],['test']
Testability,"As discussed previously, state in DrawTool can be managed by RAII. Note that this PR also highlights a few problems which have been fixed (saveLastState called but not restoreLastState, or saveLastState called twice). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3338:757,test,test,757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3338,2,['test'],['test']
Testability,"As discussed with @epernod and @hugtalbot ,; implemented method in `TopologicalChangeManager` to handle `LineCollisionModel` in `TopologicalChangeManager::removeItemsFromCollisionModel`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3239:726,test,test,726,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239,2,['test'],['test']
Testability,"As in SofaNG we are calling the activable/deactivable 'plugins' modules; I added a macro that have the right ""name"" instead of hijacking the; sofa_add_plugin's one. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/732:416,test,test,416,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/732,2,['test'],['test']
Testability,"As introduced in #2021 , a quick fix for a SofaCUDA cmake configuration file not found when requested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2022:642,test,test,642,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2022,2,['test'],['test']
Testability,"As it can be retrieved from the other parameters; Fix a bug when restoring the camera before everything is initialized. I guess this class would like a good refactoring in the future 🥸. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4888:725,test,test,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4888,2,['test'],['test']
Testability,"As pointed by @thomas-lemaire in #355 & #13 there are several issue on ObjExporter. ; In this PR I suggest to fix & unify the exporter (if you want to contribute...feel free to commit). . Currently it:; - factor & unify shared code between OBJExporter, STLExporter and MeshExporter by inheriting from ; BaseSimulationExporter; - adds a set of tests for OBJExporter, STLExporter and MeshExporter, the test coverage is not bad; - change of the API so that the ::write() function returns a boolean indicate the success or the failure; - add new possibility on the provided filename (to automatically create the missing path element)...; - report error & messages when the files cannot be created. ; - deprecation of the 'hard coded' interaction behavior... (I can explain if needed).; - fix crashes when missing topology. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/372:343,test,tests,343,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/372,4,['test'],"['test', 'tests']"
Testability,As promised !; Update of the ChangeLog.md. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/263:268,test,test,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/263,1,['test'],['test']
Testability,As requested by @matthieu-nesme in https://github.com/sofa-framework/sofa/issues/149; (but what is the xml ?) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/191:337,test,test,337,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/191,1,['test'],['test']
Testability,As requested in #799 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1045:274,test,test,274,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1045,2,['test'],['test']
Testability,"As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?). ; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4449:134,Test,Tests,134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4449,3,"['Test', 'test']","['Tests', 'test']"
Testability,As said in the title this PR puts SofaSparseSolver and SofaPreconditioner as a real module that can be activated/deactivated. . CHANGLELOG/; - move source files to src/SofaSparseSolver & src/SofaPreconditioner so the .h are not leaked anymore. ; - conditional code based on #define SOFA_HAVE_METIS/SOFA_HAVE_CSPARSE is now changed to favor the use of *find_package* to detect and activate conditional building depending on dependencies. ; - add a modules/CMakeLists.txt to integrate that; - add the touched component into the list of 'moved' component. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/668:804,test,test,804,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/668,2,['test'],['test']
Testability,"As said in the title this PR puts SofaSparseSolver and SofaPreconditioner in plugins. . There was #define SOFA_HAVE_METIS/SOFA_HAVE_CSPARSE in config.h instead of using ; find_package to detect and activate conditional building depending on dependencies. I replaced this mechanisme by using find_package(Metis) which I found more clear. . NB: the PR is in wip as I want to check it is going in the same direction as SofaNG ; NB2: it may also be a good idea to add some unittest as SparseLDLSolver seems to be used (So @olivier-goury, @IPeterlik , @marques-bruno, @EulalieCoevoet if you have 1 hour to give feel free ;)); ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/663:874,test,test,874,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/663,2,['test'],['test']
Testability,As said in the title this PR puts the forcefield and mapping of beams into components (following the draft of sofa ng organization). CHANGELOG; - cleaning of the forcefield; - creation of the beamMassMatrix; - move of all files. TODO; - add comments to the code; - clean the mapping; - add a test scene. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/707:292,test,test,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/707,3,['test'],['test']
Testability,As said in the title. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/925:273,test,test,273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/925,2,['test'],['test']
Testability,"As simple as it is!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1812:560,test,test,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1812,2,['test'],['test']
Testability,"As simple as that.; Mostly brackets ^^. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2097:579,test,test,579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2097,2,['test'],['test']
Testability,As simple as this.; Ciao for 2 regression errors theoretically!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1321:316,test,test,316,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1321,2,['test'],['test']
Testability,"As suggested by Alex Bilger in SOFA forum: https://www.sofa-framework.org/community/forum/topic/duplicated-components-in-xml-export/. > Hello guys,; > ; > I noticed a bad behavior when exporting a scene in xml. The components are duplicated within the same node. The node components are written, then the sub-nodes, and then the same node components again.; > You can get the same behavior by opening any sofa scene and exporting it (File -> Save As in runSofa), then open it in a text editor.; > I see that the xml export uses visitors. I found that the objects are processed twice: once in processNodeTopDown and once in processNodeBottomUp. So I removed the processing part in processNodeBottomUp, and kept only the node closure. I get the expected behavior. Could you guys confirm this is the right thing to do?; > I tested on Windows with a very recent commit.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4:821,test,tested,821,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4,1,['test'],['tested']
Testability,"As the continuation of the modularization of the collision components, `RayTraceDetection` can be split into two components: `BruteForceBroadPhase` and `RayTraceNarrowPhase`. The latest is introduced in this PR.; In a future PR, `RayTraceDetection` will be marked as deprecated (similarly to #2118). I did not change the code itself, just moving it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2145:889,test,test,889,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2145,2,['test'],['test']
Testability,"As the title says it.; Regarding @epernod remark about the 1 ms taken to trigger the sleep function ... this should be discussed, but I prepared this PR before !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1394:414,test,test,414,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1394,2,['test'],['test']
Testability,"As the title says, all the Name() for the DataTypes (aka VecTypes, RigidTypes and their Cuda versions) have been defined with the constexpr keyword.; \+ SolidTypes. \+ constexpr keywords for the size in CudaTypes (like ""normal"" versions); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3174:778,test,test,778,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3174,2,['test'],['test']
Testability,"As the title says. and Refactor as a majority of tests had the same scene structure. More dependencies could be removed (MechanicalObject in particular) but rewriting was very time-consuming and I was lazy 🤥. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2733:49,test,tests,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2733,3,['test'],"['test', 'tests']"
Testability,"As the title suggests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1907:562,test,test,562,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1907,4,['test'],['test']
Testability,"As this test needs LennardJonesFF, which is now deprecated, the test has been deprecated to fix this. It now runs smoothly in ""full"" component set and is removed from ""standard"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/478:8,test,test,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/478,4,['test'],['test']
Testability,"As usual the idea is to make the object more opaque so we can reduce the #include pressure. . - forward declared all the specific Matrix (RotationMatrix, SparseMatrix, ...) to avoid includes in MatrixLinearSolver; - Move GraphScattered specialization in a separated set of files. ; - Move MatrixLinearSolverInternalData in the .cpp in order to make a real ""internal"" data ; - Use std::unique_ptr<MatrixLinearSolverInternalData> so we can rely on forward declaration in class MatrixLinearSolver; - propagate the changes. . This PR contains #2236 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2238:1086,test,test,1086,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2238,2,['test'],['test']
Testability,"As we have DAGNode there is no need to keep something that do less :). This is connected discussion in PR #1642. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1664:652,test,test,652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1664,2,['test'],['test']
Testability,"At STC4 (3 years ago then) was decided to remove SMP code as it was not maintained anymore #457 ; (starting from [a69e632](https://github.com/sofa-framework/sofa/pull/457/commits/a69e63286838c8bb1c4bd1bf286367ebf2ced67d) ); This PR is removing the rest of SMP-related code in; - in the core; - in Flexible; - in SofaMiscCollision. Remove preprocessor flags and SMP related examples as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1613:930,test,test,930,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1613,2,['test'],['test']
Testability,"At the last stage of the loop, the iterator is already at end() value but it is still being incremented.; (throwing an assertion error in Debug mode). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3574:119,assert,assertion,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3574,3,"['assert', 'test']","['assertion', 'test']"
Testability,Auto tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/111:5,test,tests,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/111,1,['test'],['tests']
Testability,"Avoid ambiguity due to the fact that more than one function have the same name. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1958:619,test,test,619,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1958,2,['test'],['test']
Testability,"Avoiding doing unnecessary duplicate operations (norm and sin()); At first, I thought the compiler (msvc in my case) would be smart enough to do it by itself while optimizing, but apparently not:. before:; ```; BM_Quat_axisToQuat/8192 106 us 85.4 us 8960; BM_Quat_axisToQuat/16384 210 us 154 us 4978; BM_Quat_axisToQuat/32768 348 us 220 us 3200; ```. after:; ```; BM_Quat_axisToQuat/8192 74.5 us 60.9 us 10000; BM_Quat_axisToQuat/16384 150 us 97.7 us 6400; BM_Quat_axisToQuat/32768 255 us 167 us 4480; ```. ----. Note: if we knew before-hand that the vec was normalized/not-null, the perf would be:; ```; BM_Quat_axisToQuat/8192 69.0 us 52.7 us 16000; BM_Quat_axisToQuat/16384 138 us 103 us 7467; BM_Quat_axisToQuat/32768 239 us 171 us 4480; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3559:1286,test,test,1286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3559,2,['test'],['test']
Testability,"BOOST_ALL_DYN_LINK is necessary when using/compiling boost on Windows (weird boost linking stuff 😵); It was defined in the root CMakeLists of SOFA, therefore this macro was not propagated to other projects needing Boost (SofaPython3 👀); It is now linked with the target SofaHelper and is propagated to all projects using it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1578:864,test,test,864,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1578,2,['test'],['test']
Testability,"Back(forward?)-porting https://github.com/sofa-framework/sofa/pull/1721. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1729:612,test,test,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1729,2,['test'],['test']
Testability,"Backport #1732 from v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1741:567,test,test,567,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1741,2,['test'],['test']
Testability,Backport installation fix from master (#1154 ) to release v19.06. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1211:317,test,test,317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1211,2,['test'],['test']
Testability,"BaseMechanicalVisitor deserve its own file => now it has. ; There was a bunch of un-needed includes => now they are removed. . The includes removed (that you may needed to add in your files if need them):; ```cpp; #include <sofa/core/MechanicalParams.h>; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/behavior/ForceField.h>; #include <sofa/core/BaseMapping.h>; #include <sofa/core/behavior/BaseInteractionForceField.h>; #include <sofa/core/behavior/BaseProjectiveConstraintSet.h>; #include <sofa/core/behavior/BaseInteractionProjectiveConstraintSet.h>; #include <sofa/core/behavior/BaseConstraintSet.h>; #include <functional>; #include <sofa/helper/map.h>; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1989:1216,test,test,1216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1989,2,['test'],['test']
Testability,"BaseSimulationTest::importPlugin() and simpleapi::importPlugin() are exactly the same.; With SimpleApi, it does not really make sense to have this function anymore in BaseSimulationTest. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4467:726,test,test,726,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4467,2,['test'],['test']
Testability,"Based on #1558 ( but I could extract it if 1558 is cancelled); This PR adds a callback on the indices of FixedConstraint and PartialFixedConstraint to check the indices. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1806:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1806,2,['test'],['test']
Testability,"Based on #2043. A new component is introduced: `ParallelBVHNarrowPhase`. As the name suggests, it is the parallel implementation of `BVHNarrowPhase`. ## Details. The broad phase provides a list of pairs of collision models. In the initial `BVHNarrowPhase` component, the list was processed sequentially. In `ParallelBVHNarrowPhase` each pair is processed in a task, which is given to a thread pool. Note that the traversal of the bounding volume hierarchy is not parallel. It is still single threaded. Due to race conditions, some operations must be done prior to the parallel tasks: . 1. Detection output creation. This operation is very time consuming (see #2047). If #2047 is merged, we can expect better results.; 2. Topology initialization. ## Results. The tested scene is `applications/plugins/MultiThreading/examples/ParallelBruteForceBroadPhase.scn` during 500 time steps. The narrow phase duration has been measured with `ParallelBVHNarrowPhase` compared to `BVHNarrowPhase`. ```; BVHNarrowPhase 3.5 ms; BVHNarrowPhase + PR#2047 2.36 ms; ParallelBVHNarrowPhase 2.1 ms; ParallelBVHNarrowPhase + PR#2047 0.97 ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2053:762,test,tested,762,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2053,3,['test'],"['test', 'tested']"
Testability,"Based on #2442. Most of the example scenes in SofaCUDA show a broken visual. I fixed 2 of them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2447:635,test,test,635,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2447,2,['test'],['test']
Testability,"Based on #2522 this PR adds a sceneCheck to guide users when using collision responses.; For some, a specific animation loop / constraint solver is needed. This is added in the SceneCheckContactResponse !. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2523:745,test,test,745,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2523,2,['test'],['test']
Testability,"Based on #2813 . and sofang-ize paths/plugins/etc.; and creation of some *Testing framework (solidmechanics, topology, mapping...). and a loooots of clean as well. (not enough). Some tests were disabled, they are back again. ~~Will be updated when Collision/engine/etc will be merged.~~ done. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2873:74,Test,Testing,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2873,4,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,"Based on #2870 . The topological callback was actually not working for the UniformMass.; Now POINTSADDED and POINTSREMOVED are handled. in addition:; - add override to avoid massive warnings; - add box in scene to allow seeing the mesh. Thanks to @oparras for rising this in #2668; A regression could be added on this scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2853:864,test,test,864,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2853,2,['test'],['test']
Testability,"Based on #3019, we should incorporate tests assessing stability and associated regression references for SOFA.; Traction but also compression tests should be performed.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4543:38,test,tests,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4543,2,['test'],['tests']
Testability,"Based on #3480 . Task scheduler can accept a callable. It can avoids a lot of boilerplate code. It has been applied in `FreeMotionAnimationLoop` as an example, and unit tests are provided. In `FreeMotionAnimationLoop`, the class `FreeMotionTask` is no longer required. It is now possible to write:; ```cpp; unsigned int one = 0u;; simulation::CpuTaskStatus status;; scheduler->addTask(status, [&one]{ one = 1u; });; ```; and similarly for a functor, pointer to a function and pointer to a member function. The diff with the PR #3480 is: https://github.com/alxbilger/sofa/compare/taskscheduler...alxbilger:sofa:taskschedulerlambda. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3482:169,test,tests,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3482,3,['test'],"['test', 'tests']"
Testability,"Based on #3480 . The work threads were shared among all `DefaultTaskScheduler` instances through a static map. But it makes more sense to me that a `DefaultTaskScheduler` instance manages it's own pool of threads. . The diff with the #3480 PR: https://github.com/alxbilger/sofa/compare/taskscheduler...alxbilger:sofa:localthreads. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3491:870,test,test,870,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3491,2,['test'],['test']
Testability,"Based on #3526 @Ziemnono. Move all examples to follow the structure of *Sofa/Component/*; - [ ] check possible new scenes added since #3526 . [ci-depends-on https://github.com/sofa-framework/Regression/pull/38]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3588:751,test,test,751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588,2,['test'],['test']
Testability,"Based on #3534 ; Delete codes that were disabled in v22.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3535:599,test,test,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3535,2,['test'],['test']
Testability,"Based on #3548 . Similar to ParallelHexahedronFEMForceField. `addDForce` and `addKToMatrix` are the parallelized functions.; `addForce` is not parallelized. It would require to duplicate code from the base class. Hence a refactoring is needed for a proper implementation (in another PR). Note that `addForce` is usually not the bottleneck. Quick benchmarks show performances improvement on the provided example. I think there is still room for improvement in `addDForce`. But it would require a few changes in the base class. Instead of having a force vector for each task, I suggest to store only the force on the DoFs that have been visited during the task. I am not sure if it will bring more perfs improvements. In this PR, `addKToMatrix` is parallelized. It is not in `ParallelHexahedronFEMForceField`, but the same principle can be applied (in another PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3552:346,benchmark,benchmarks,346,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3552,3,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,"Based on #3598 . The diff with #3598: https://github.com/sofa-framework/sofa/commit/cd563658a23a70018e21984a9f3522f219a459e6. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3599:665,test,test,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3599,2,['test'],['test']
Testability,"Based on #3634. Mostly focusing on updating the compat :; - [x] SofaBaseCollision; - [x] SofaBaseLinearSolver; - [x] SofaBaseMechanics; - [x] SofaBaseTopology; - [x] SofaBaseUtils; - [x] SofaBaseVisual; - [x] SofaBoundaryCondition; - [x] SofaConstraint; - [x] SofaDeformable. The rest for a next one. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/3]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3649:912,test,test,912,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649,2,['test'],['test']
Testability,"Based on #3649, and following it : now all DEPRECATED ending at v23.06 are DISABLED!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3654:625,test,test,625,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3654,2,['test'],['test']
Testability,"Based on #3654 ; Removing all files DISABLED since v21.12 + v21.06 (and no compat layer before this!). So I think with this one, we should be good. At least for what I have in mind. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3655:721,test,test,721,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3655,2,['test'],['test']
Testability,"Based on #3737 . Almost all nonlinear mappings have a Data to select how to compute the geometric stiffness (none, exact, stabilized).; The Data was a `int`. It is now replaced by a ` OptionsGroup`. It is therefore breaking because of the change of type. Minor changes go along with this PR. Note: for some reasons, RigidMapping is the only mapping which default value for geometric stiffness is not 2 (stabilized). It is 0 (no geometric stiffness computed). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3740:998,test,test,998,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3740,2,['test'],['test']
Testability,"Based on #3815 and #3805 . ... instead of glBufferSubData() as it is a faster method to upload stuff on the GPU directly. Also:; - dont update indices (lines, triangles, quads) if there are not modified; - dont copy to temporary float if already in float. (same mesh as #3805); Before:; `1000 iterations done in 14.075 s ( 71.048 FPS)` . After:; `1000 iterations done in 9.597 s ( 104.199 FPS)`. After (float); ` 1000 iterations done in 7.618 s ( 131.268 FPS)`. Based on :; - #3815 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3822:1023,test,test,1023,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3822,2,['test'],['test']
Testability,"Based on #3918. The commit to review is: https://github.com/sofa-framework/sofa/commit/445da0f4fdf6f819f698192b81bbb1da5e4fa554. There was no example for this component. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3921:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3921,2,['test'],['test']
Testability,"Based on #3924 this PR :; - removes the data `force` and replaces it by the possibility to define the data `forces` with size 1; - proposes a solution to avoid circular dependency : when one of both data `forces` or `totalForce` is given at scene initialization, the other can not be used for update later. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4019:846,test,test,846,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4019,2,['test'],['test']
Testability,"Based on #3924. Answers to #2173 ! We finally have a nice internal udpate @damienmarchal ; The data used internally (`d_forces` and `d_totalForce`) are updated and synchronized through input data (`d_inputForce`, `d_inputForces` and `d_inputTotalForce`). I personnally like this but am open to discussion!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3936:846,test,test,846,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3936,2,['test'],['test']
Testability,"Based on #3927 ; Needs https://github.com/sofa-framework/sofa/pull/4917 to make all tests pass successfully. This PR aims at :; - Use enumeration to clarify the code for initialization methods in ConstantForceField and UniformMass; - some code cleanings : starting init as Valid, avoid calling isComponentValid while init(), check isComponentValid prior to run-time functions . Diff : https://github.com/hugtalbot/sofa/compare/b7c7293e7e5bd89700f3cf5171678a0b37b2c36c...hugtalbot:9371ffc1731840b2d100eb7deaa754775c98c6c7. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4918:84,test,tests,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4918,3,['test'],"['test', 'tests']"
Testability,"Based on #3938. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3987:555,test,test,555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3987,2,['test'],['test']
Testability,"Based on #3987 . In #3987 we remove the canCreated that was used to template deduction. In the current PR we are replacing the one that are also used to offer scenes guarantees. The guarantee are now enforced at runtime in init(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3990:770,test,test,770,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3990,2,['test'],['test']
Testability,"Based on #4034 Pursuing the cleaning for the SOFA lifecycle ahead of the v23.12. - start removing DEPRECATED codes, getting disabled in v23.12; - lifecycle Multithreading plugin; - lifecycle SofaCUDA plugin; - lifecycle SceneCheck plugin; - remove SofaGeneralObjectInteraction and SofaMeshCollision; - remove all v21.06, v21.12 and v22.06 deprecation references EXCEPT : Compat and Topology :japanese_ogre: @epernod :wink: . [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/101]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4040:1036,test,test,1036,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040,2,['test'],['test']
Testability,"Based on #4040 ; Cleaning of many remaining old codes. [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/101]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4056:666,test,test,666,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056,2,['test'],['test']
Testability,"Based on #4044 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4045:556,test,test,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4045,2,['test'],['test']
Testability,"Based on #4075 , this PR proposes to use the `SimulationInitDoneEvent` instead of `AnimateBeginEvent` when an export is desired at the beginning of the simulation. By ""beginning of the simulation"" we actually mean, once the `init()` and `bwdInit()` are completed which is exactly the purpose of `SimulationInitDoneEvent`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4160:861,test,test,861,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4160,2,['test'],['test']
Testability,"Based on #4158 . Non-mapped and mapped matrices can be assembled in parallel because the contributions are not accumulated in the same matrix data structure. https://github.com/alxbilger/sofa/compare/constantsparsitypattern...alxbilger:sofa:independantmatrices. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4172:801,test,test,801,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4172,2,['test'],['test']
Testability,"Based on #4533. - Clean the use of old lib names in `importPlugin()` and in `RequiredPlugin` (mostly tests); - Remove last uses of `setSimulation`. Commit of interest is : https://github.com/sofa-framework/sofa/commit/0d87075b5aa74a5e6471bd8f3f66d5706f93e2c0. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4540:101,test,tests,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4540,3,['test'],"['test', 'tests']"
Testability,"Based on #4554. Error raised when a find_package of cxxopt was not providing a version number because `cxxopts_FIND_VERSION` was not set. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4564:677,test,test,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4564,2,['test'],['test']
Testability,"Based on :; - #3805 . updateBuffer (which is updating all buffers, to the GPU with its implementation OglModel for example) ; was called before computeNormals, tangents, etc.; So there was a discrepancy of 1 frame between vertices and normals/tangents. Also, using ScopedTimer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3815:817,test,test,817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3815,2,['test'],['test']
Testability,"Based on ; - #2958 . Contains:; - #2960 . Allow compilation of the Sofa codebase without the cmake option SOFA_ENABLE_LEGACY_HEADERS, i.e the compatibility mode. (Sofa codebase = default cmake options, i.e framework, Component, tests and the few plugins ON by default). [NOTci-depends-on https://github.com/sofa-framework/Registration/pull/2]; [NOTci-depends-on https://github.com/sofa-framework/SofaPython3/pull/268]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2975:228,test,tests,228,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2975,3,['test'],"['test', 'tests']"
Testability,"Based on ; - #3102. The autoloading libraries (plugin/module/whatever) feature was not including the ""new"" libraries (i.e Sofa.Component* ) since the fact that are neither plugin nor module (but still loadable); This PR fixes it.; Autoloading is not really recommended but a lot of scenes outside this repo relies on it implicitely. TODO: decide if autoloading should off by default (and force the users to explicitly load their own necessary libs in their scenes). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3103:1005,test,test,1005,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3103,2,['test'],['test']
Testability,"Based on ; - #4362 ; (for the scene, not compilation). diff: https://github.com/fredroy/sofa/compare/geoalgo_states..edge2quad_state. No need to pass by a intermediary MechanicalObject anymore (+subsequent Mapping as well). Avoids:; - using mechanical mappings for visual mappings (no useless applyJ/applyJT calls); - to call an other mapping as well; - setting the (not doing its purpose) `isMechanical` flag. ---; - With the example (Edge2QuadTopologicalMapping.scn). with GUI (glfw); ```; master 10000 iterations done in 20.618 s ( 485.013 FPS); pr 10000 iterations done in 16.601 s ( 602.373 FPS); ```. no GUI (batch); ```; master 10000 iterations done in 17.3933 s ( 574.935 FPS); pr 10000 iterations done in 13.6906 s ( 730.43 FPS); ```. - With [modified] BeamAdapter's scene (with gui); ```; master 5000 iterations done in 35.184 s ( 142.11 FPS); pr 5000 iterations done in 29.48 s ( 169.607 FPS); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4388:1449,test,test,1449,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4388,2,['test'],['test']
Testability,"Based on ; - #4534 . Some race conditions arise in the DefautlTaskScheduler, main ones are; - usage of m_mainTaskStatus (solved with an atomic?); - start() and create_and_attach() are racing for m_taskScheduler (solved with a small change of place of affectation). Obviously, the opinion of @alxbilger about the fix in this PR would be greatly beneficial 😅 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4535:898,test,test,898,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4535,2,['test'],['test']
Testability,"Based on ; - #4909 . See #4802 and https://github.com/sofa-framework/sofa/pull/4583. Breaking if people did not do the change, or removal of deprecated protected members. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4916:710,test,test,710,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4916,2,['test'],['test']
Testability,"Based on ; - #4925 . This PR sets the `ConfigDirectoryPath` with the value of getSofaLocalUserDir (see https://github.com/sofa-framework/sofa/pull/4875) instead of the current directory (could be the binary dir, install dir, etc). This PR also adds the option to change this directory path to a custom path, set with a new cmd line option. ---; Note (not the object of the PR 🙂‍↕️); A bit weird that the config directory path getter is from the GUI, which means one needs a dep on Sofa.GUI to get the config dir path 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4926:1059,test,test,1059,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4926,2,['test'],['test']
Testability,"Based on @ziqiu-zeng implementation, this adds the Non-smooth Non-linear Conjugate Gradient (NNCG) as an alternative to the Projective Gauss Seidel (PGS) as NLCP solver in the GenericConstraintSolver. - an option ` resolutionMethod` is added with options: ""ProjectedGaussSeidel"", ""UnbuiltGaussSeidel"" or ""NonsmoothNonlinearConjugateGradient"" and 3 associated examples are provided for each option.; - a useless data `schemeCorrection` was also deprecated and removed. Documentation updated: https://github.com/sofa-framework/doc/pull/74. .. wonder if the PR name includes enough acronyms .. :thinking: . [ci-depends-on https://github.com/sofa-framework/Regression/pull/27]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053:1213,test,test,1213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053,2,['test'],['test']
Testability,"Based on https://github.com/sofa-framework/sofa/pull/2394. Previously, a `CompressedRowSparseMatrix` accumulated matrix entries and was then converted to Eigen. The conversion gets triplets and detects duplicates and does the compression. Therefore, all the work to build a matrix is done in the conversion. This work is not required during the accumulation as it is done later in any case. I propose to accumulate all the matrix entries in a simple list. This accumulation does nothing else than inserting a new element in the vector. This should be faster than using a `CompressedRowSparseMatrix`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2399:1139,test,test,1139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2399,2,['test'],['test']
Testability,"Based on https://github.com/sofa-framework/sofa/pull/2720. To support points removal in SubsetMultiMapping, `TopologySubsetIndices` have been added. To create them, I had to make available a constructor that does not take a `initData`, therefore I made available all the constructors of `Data`.; A `TopologySubsetIndices` is created for each input of the mapping. They subscribe to the corresponding topology changes.; When a topology change (point removal only) occurs, the mapping propagates the changes to the output Node of the mapping (and also renumbers internal indices). The application of the topology changes require a `BaseMeshTopology` and a topology modifier in both input and output of the mapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2729:1252,test,test,1252,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2729,2,['test'],['test']
Testability,"Based on https://github.com/sofa-framework/sofa/pull/2756. I added a boolean data, applyPermutation, to the SparseLDLSolver. It gives the choice to the user to apply or not a fill-in reducing permutation on the matrix of the system. By default the boolean is true in order to keep the previous behavior. FEMBAR-SparseLDLSolver.scn average computation time (to solve the system) with permutation : 3.31 ms; FEMBAR-SparseLDLSolver.scn average computation time (to solve the system) without permutation : 2.05 ms; Benchmarck MatrixAssembly_direct_blocs.scn (with permutation) : 7,45 ms; Benchmarck MatrixAssembly_direct_blocs.scn (without permutation) : 114,39 ms. As the fill-in reducing permutation is computed following heuristic instructions, there may be some situation where it is not worth applying this permutation. Asynchronous solver still works, not applying the permutation seems to slow it down.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2762:1446,test,test,1446,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2762,2,['test'],['test']
Testability,"Based on https://github.com/sofa-framework/sofa/pull/3548. In the `addDForce` method, the parallel algorithm consists in computing a thread-specific `dF` and then combine them all in the main `dF`. It requires a synchronisation mechanism as it may create race conditions. This PR introduce an alternative method which is lock-free. It divides the model into smaller subdomains that can be solved in parallel without synchronization. Since the domains are visited sequentially (it's the elements of each domain that are visited in parallel), it comes with an overhead. Therefore, this method is particularly suited for large models where the overhead can be amortized. I have the following results on the provided example:. ```; 1000 steps ; 17775 elements (hexa). domain decomposition:; 35.1703 s ( 28.4331 FPS). naive:; 76.5666 s ( 13.0605 FPS). sequential:; 192.688 s ( 5.18974 FPS).; ```. That's right: 17k elements simulated in real-time on a laptop CPU. As a comparison with the same scene where everything is on GPU, not only the `addDForce` method of `HexahedronFEMForceField`, but also the other components:; ```; 21.7437 s ( 45.9904 FPS).; ```; with a RTX A3000 Laptop GPU; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3566:1722,test,test,1722,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3566,2,['test'],['test']
Testability,"Based on https://github.com/sofa-framework/sofa/pull/3594. Introduce `ParallelStiffSpringForceField` and `ParallelMeshSpringForceField`. The base classes `SpringForceField` and `StiffSpringForceField` were also refactored to be able to reuse common code with their parallel implementations. Only the `addForce` method is implemented. The provided example has an explicit integration scheme where the force derivative is not required. `addDForce` and `addKToMatrix` may come later. Benchmark:. ```; Sequential; 1000 iterations done in 9.11327 s ( 109.73 FPS). Parallel; 1000 iterations done in 5.04016 s ( 198.406 FPS); ```. The implementation is naïve. We could probably do better. Note there are 11264 points and 62668 edges (springs) in the provided example. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3596:481,Benchmark,Benchmark,481,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3596,3,"['Benchmark', 'test']","['Benchmark', 'test']"
Testability,"Based on https://github.com/sofa-framework/sofa/pull/3961. Some exported files were not removed after executing unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3942:117,test,tests,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3942,3,['test'],"['test', 'tests']"
Testability,"Based on https://github.com/sofa-framework/sofa/pull/4046. This PR :; - sets DISABLED all codes planed disabled (for v23.12, v23.06); - removes all DISABLED attributes (since v22.12 and older) . This PR should also be the end of the lifecycle for v23.12 !!. [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/101]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4058:869,test,test,869,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058,2,['test'],['test']
Testability,"Based on https://github.com/sofa-framework/sofa/pull/4102. Fix warnings in oneTetrahedron tutorial. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4103:639,test,test,639,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4103,2,['test'],['test']
Testability,"Based on https://github.com/sofa-framework/sofa/pull/4442; Diff: https://github.com/alxbilger/sofa/compare/filtervalues...alxbilger:sofa:copymatrixderiv. The goal is to accelerate the computation of mappings jacobians when projecting the mapped stiffness matrices. In some cases, the conversion from the MatrixDeriv (stored in the mechanical objects) is really slow, even slower than the actual computation of the matrix. A special case is now added when the destination is a `CompressedRowSparseMatrixMechanical`. Unfortunately, this is detected with a `dynamic_cast`. To benchmark the changes, let's add the following timers in MatrixLinearSystem.inl (line 1076):; ```cpp; {; SCOPED_TIMER(""copyToBaseMatrix"");; input->copyToBaseMatrix(J.get(), mappingJacobianId, offset);; }; {; SCOPED_TIMER(""fullRows"");; J->fullRows();; }; ```. ### Reduced Diamond (1000 time steps). ModelOrderReduction relies heavily on mapped matrices (a huge matrix projected on a small matrix). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 22.5868 s ( 44.2737 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.06 1 14.53 33.47 16.75 2.42 16.75 90.54 ......projectMappedMatrices; 7 3.08 1 3.72 11.63 4.31 0.89 4.31 23.29 .......copyToBaseMatrix; 7 7.39 1 1.78 7.48 2.05 0.52 2.05 11.10 .......fullRows; ```. #### After; ```; [INFO] [BatchGUI] 1000 iterations done in 16.4596 s ( 60.7547 FPS).; ```; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 10.91 18.91 12.14 1.17 12.14 88.05 ......projectMappedMatrices; 7 2.95 1 2.09 4 2.38 0.26 2.38 17.25 .......copyToBaseMatrix; 7 5.33 1 0.01 0.04 0.01 0 0.01 0.09 .......fullRows. ```. #### Speedup. Speed up of x1.4 on the timer `projectMappedMatrices`. The bottleneck is now in the computation of `J^T * K * J`. # MatrixLinearSystem.scn (1000 time steps). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 17.5332 s ( 57.0347 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.28 2 0.06 13.43 2.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443:573,benchmark,benchmark,573,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443,1,['benchmark'],['benchmark']
Testability,Based on https://github.com/sofa-framework/sofa/pull/4547. The diff: https://github.com/alxbilger/sofa/compare/sparsematrixproduct...alxbilger:sofa:constantsparsityprojection. Matrix projection method taking advantage of the constant sparsity of the matrices in the computation of sparse matrix product. A boolean Data enables parallel computation. Benchmark on the reduced diamond for 1000 time steps (previous results in https://github.com/sofa-framework/sofa/pull/4490):. ### MatrixProjectionMethod + areJacobiansConstant=False. This is the most generic method. ```; [INFO] [BatchGUI] 1000 iterations done in 13.576 s ( 73.6594 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.84 1 9.59 24.93 11.24 2.22 11.24 88.66 ......projectMappedMatrices; ```. ### MatrixProjectionMethod + areJacobiansConstant=True. ```; [INFO] [BatchGUI] 1000 iterations done in 8.1806 s ( 122.24 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 5.53 17.84 6.32 0.88 6.32 83.28 ......projectMappedMatrices; ```. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstan,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4552:349,Benchmark,Benchmark,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552,1,['Benchmark'],['Benchmark']
Testability,"Based on https://github.com/sofa-framework/sofa/pull/4778. Removed unused methods. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4824:622,test,test,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4824,2,['test'],['test']
Testability,"Based on https://github.com/sofa-framework/sofa/pull/4935 . Try to fix the rotation of the inertia matrix. The only relevant commit is [e53483c](https://github.com/sofa-framework/sofa/commit/e53483ccb3178d3450f82ff3949f4f702cca17eb). Some regression tests might break because until now the inertia was wrongly taken into account for rigid with an inertia matrix which is not a homothety. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4939:250,test,tests,250,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4939,3,['test'],"['test', 'tests']"
Testability,"Based on previous PR #3539 . Add methods and binding for:; - loading sofa.ini file to set resources/example path; - loading SOFA plugin given the file path; - activate/deactivate SOFA messageHandler, get the number of queued message and get the message with its priority. edit:; - Avoid using string as it can produce memory bad access from other software integration. ; - Also remove use of config.h inside SofaPhysicsAPI .h to be able to easily include it in third library. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3540:1015,test,test,1015,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3540,2,['test'],['test']
Testability,"Based on the PR https://github.com/sofa-framework/sofa/pull/365, this work add comments ; Agreed that the default value of warmStart option should be false (see Maxime's comment in PR#335). However, the associated comments in the code would be very useful for beginners starting and understanding the conjugate gradient in SOFA. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/469:580,test,test,580,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/469,2,['test'],['test']
Testability,"Based on the discussion started in https://github.com/sofa-framework/sofa/pull/2631 and finished during a dev meeting, this PR restores the old behavior:; - Two different conventions based on whether the scene is in XML or Python; - XML suffixes start at 1. Nevertheless, the class that provides the names is still common. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/241]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2773:934,test,test,934,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2773,2,['test'],['test']
Testability,"Based on the following library: https://github.com/p-ranav/indicators. ![peek](https://github.com/sofa-framework/sofa/assets/10572752/22eb746a-3b10-4b13-94a2-eccce68f326d). Breaking because I updated the cxxopts library. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4168:760,test,test,760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4168,2,['test'],['test']
Testability,"Based on this thread: https://www.sofa-framework.org/community/forum/topic/collision-callback-function-in-python/. I wanted to create a SofaPython3 binding, that reads the number of contacts and their associated distances.; The variable in ContactListener that stores this information is private and cleared at every CollisionBeginEvent.; -> Added a getter function for ContactsVector.; -> Added a buffer variable that is over written before ContactsVector is cleared (storing a copy over different events).; -> Added functions to retrieve the number of contacts and their respective distance values and point pairs in the buffer. I will also create a pull request on SofaPython3 with the respective bindings, once this pull request is merged. Cheers,; Paul. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1678:1298,test,test,1298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1678,2,['test'],['test']
Testability,"Based on:; - #2991. Last tests from SofaTest are moved into Sofa.Component.SolidMechanics_simutest (testing some elasticity with various fem/tensormass methods). Related to #1885. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2996:25,test,tests,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2996,4,['test'],"['test', 'testing', 'tests']"
Testability,"Based on:; - #4356 . Remove the (really old) cimg version and fetch it from cimg git repository (or let the user set-up its own cimg version. ; Not a requirement for #4221 anyway (header-only are acceptable). - \+200k lines removed; - fix compilation for newer version of cimg; - learnt how to export a symbol without the `declspec` shenanigans on MSVC 🫠 As the current cimg.h file has been modified to add a export symbol macro...). (compiles with the cimg provided by Ubuntu v22.04 and latest cimg on Windows). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4357:1052,test,test,1052,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4357,2,['test'],['test']
Testability,"Based on; - #2650 . Generic tests on engine is messy, this PR; - add template test class in Sofa.Testing.Tool; - put back generic tests on engine in Sofa.Core (and remove deps on scenecreator); - clean sofageneralengine generic tests file; - clean deps here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2692:28,test,tests,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2692,7,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,"Based on; - #2996 . Remove last usages of SofaTest in plugins.; Now SofaTest needs to be enabled in cmake to be compiled (and not forcefully added). Fix #1885 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3000:700,test,test,700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3000,2,['test'],['test']
Testability,"Based on; - #3221. Still continuing the https://www.youtube.com/watch?v=PJwd4JLYJJY quest. \+ clean here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3237:655,test,test,655,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3237,2,['test'],['test']
Testability,"Based on; - #3627 . Restore the transparency feature when displaying the Bounding Collisions Models (displayflag ""Bounding Collision Models""); i.e more the cube model is precise/deep, more transparent it will be; Before:; <img src=""https://user-images.githubusercontent.com/11028016/219250761-388d081f-649d-42c3-9be0-1cb259fd7bce.png"" width=""400"" />. After:; <img src=""https://user-images.githubusercontent.com/11028016/219250786-2b6cf5b8-dad5-4a1f-bc8e-15631277e6c6.png"" width=""400"" />. Note that you need to do one step before being able to see the boxes (dont know if it is on purpose or not). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3658:1136,test,test,1136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3658,2,['test'],['test']
Testability,"Based on; - #4263 . Part of the task to use std container and also just it felt dumb that ColorMap was not using the standard RGBAColor class; Mostly breaking because people needed to convert the result of ColorMap::eval() to RGBAColor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4270:776,test,test,776,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4270,2,['test'],['test']
Testability,"Based on; - #4464. Fix ; - #4462 . This PR check the provenance of the loaded symbol, if it is consistent with the given filename of the plugin; Using the system function `dladdr()` https://man7.org/linux/man-pages/man3/dladdr.3.html. Fix the newly introduced (failing) test in #4464; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4466:270,test,test,270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466,3,['test'],['test']
Testability,"Basically just replace GLuint and some OpenGL lines of code inside of it. (related to #1645 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1646:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1646,2,['test'],['test']
Testability,"Batchgui and HeadlessRecorder were missing a `sofa::helper::AdvancedTimer::end(""Animate"");` instruction. Without it, Sofa can't output the profiling statistics. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/890:412,test,test,412,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/890,2,['test'],['test']
Testability,Because #ifdef based software architecture is just bad. If you don't understand why...please ask. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1077:349,test,test,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1077,2,['test'],['test']
Testability,"Because I can imagine I'm not the only one to copy/past scenes and I don't like warnings!. Removed alias in scenes for: ; - DefaultPipeline, DefaultContactMapper DefaultCollisionGroupManager; - EulerImplicitSolver; - Point/Line/Triangle CollisionModel. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1098:504,test,test,504,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1098,2,['test'],['test']
Testability,"Because I have so much branch with this change duplicated that it is worth having it in a PR and forget about that. . Of course, a real refactoring of the reading code would be better but until done let's just have this kind of cleaning . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1902:778,test,test,778,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1902,2,['test'],['test']
Testability,"Because `find_package(CUDA)` is deprecated. See https://cmake.org/cmake/help/latest/module/FindCUDA.html. Note that I had to re-install CUDA. It seems to be a common issue: https://stackoverflow.com/questions/56636714/cuda-compile-problems-on-windows-cmake-error-no-cuda-toolset-found. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2878:825,test,test,825,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2878,2,['test'],['test']
Testability,"Because having a single name for the same object makes things much clearer I remove the innter typedefs that are aliasing to common sofa::type. This includes Vector3, Vector2, Vec3, Vec2, Vec6, and Quat, sofa::Index and sofa::Size. . I didn't do Matrix3 and Matrix2 that deserve the same treatment. Follow-up on PR #3299 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3357:862,test,test,862,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3357,2,['test'],['test']
Testability,"Because it cannot be created since it requires a `MechanicalObject<Rigid3fTypes>` (`float`). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3684:632,test,test,632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3684,2,['test'],['test']
Testability,"Because it does not make sense to me to use tetra algos in 1D for example 🤥. Maybe should we remove the 2D template for 3D primitives as well ?; I was considering tetra/hexa could be projected in 2D but it seems a bit far streched to me. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2291:777,test,test,777,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2291,2,['test'],['test']
Testability,"Because it is not used and not useful. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3353:578,test,test,578,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3353,2,['test'],['test']
Testability,"Because it is useless and it generates a warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2202:589,test,test,589,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2202,2,['test'],['test']
Testability,"Because it make no sense to have 50 lines of code+ a dependency to iostream.h to save 4 chars. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1808:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1808,2,['test'],['test']
Testability,"Because it's better when your plugin build does not fail because of SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2453:613,test,test,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2453,2,['test'],['test']
Testability,Because most compiler handle it properly and we are in 2020. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1249:312,test,test,312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1249,2,['test'],['test']
Testability,Because no-one should be forced to compile opengl 1.x code...it is now a real plugin. . CHANGELOG:; - make plugin CMake package ; - move code to src/SofaOpenglVisual for better encapsulation; - rename all data field that are not conformant to sofa guidelines (so use the d_ prefix); - remove commented code all around; - move defintion from .h to .cpp; - remove the GLEW specific code all around. This PR is based on #1070 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1071:676,test,test,676,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1071,2,['test'],['test']
Testability,"Because of aliases. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2544:561,test,test,561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2544,2,['test'],['test']
Testability,"Because of confusion between `std::string` and `const char*`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5015:601,test,test,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5015,2,['test'],['test']
Testability,Because of missing _declspec_. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/516:282,test,test,282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/516,2,['test'],['test']
Testability,Because of the InfoComponent (that report in the GUI the fact that a component; was not created the complete error log from the factory where not reported. This commit fix that. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/476:115,log,log,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/476,3,"['log', 'test']","['log', 'test']"
Testability,"Because of the tricky mecanisme to inject SOFA_TARGET in the ObjectFactory, the config.h file must always be included before the ObjectFactory.h . Not doing that results in broken target. ; The PR fix the faulty components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2693:763,test,test,763,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2693,2,['test'],['test']
Testability,"Because this is an empty file. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1844:572,test,test,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1844,2,['test'],['test']
Testability,"Because why not. Doing the same as before but with proper guidelines and stuff.; Breaking ⛔ because of the change in the fields name, but this engine is not used anywhere 🙋‍♂️. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1404:428,test,test,428,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1404,2,['test'],['test']
Testability,"Because will give more details if the appropriate macro is used for comparison when a test fails. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4607:86,test,test,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4607,3,['test'],['test']
Testability,"Because... https://www.youtube.com/watch?v=PJwd4JLYJJY; (a little bad side-effect is that it is mandatory to inline those if we want to access it from an other TU [dcl.constexpr] §7.1.5/2 and [basic.def.odr] §3.2/4 ). \+ cleanups:; - factorize toOpenGlMatrix; - remove hard-coded usage of double/float instead of Real; - surely other things. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3221:881,test,test,881,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3221,2,['test'],['test']
Testability,"Been looking into github actions, trying to get it to do what I want... not yet really successfully, but I've got a proof of concept. Currently, I run the checks on a slave on ci.inria.fr, and the current POC does a minimalist build / install / run tests workflow. But I think it would be worth asking ourselves what the perfect CI/CD pipeline could be for SOFA & it's plugins. In my mind, I'd like this:. SOFA:; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent (consistent build environment); - generate standalone binaries, zip & upload on github pages / website (SOFA-latest / sofa-nightly build...). PLUGINS:; - load docker image, or wget binaries generated by SOFA; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent; - generate binaries, zip & upload on github pages / website; ; ADVANTAGES of github actions vs JK2:; - ALL CI/CD config centralized in a .github folder in the git repository; - NO separate tool but Github's interface; - SUPER DUPER KICKASS interface design from github, gives direct access to all logs, checks, status badges etc. for each workflow / job / step in the Github checks processes. ![plop2](https://user-images.githubusercontent.com/13734391/69730387-3e4fc280-1128-11ea-8f91-20eeb660d233.png). DISADVANTAGES:; - Still in beta (some bugs noticed, especially when running in self-hosted slaves...); - A lot to recode given what @guparan did in JK2; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatib",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1225:249,test,tests,249,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1225,3,['test'],['tests']
Testability,"Before 20.12 there was a lot of ""stowaway passenger"" includes. We are in the process of removing them which has the consequence that a lot of plugins relying on these ""stowaway passenger"" are not compiling anymore. ; Fixing that is relatively easy in most of the case, you need to find which type is missing and include the corresponding file in the most appropriate file of your project. It can in a .cpp, an .inl or a .h.; Most common missing includes ares:; ```cpp; sofa::simulation::Node => #include <sofa/simulation/Node.h>; msg_xxxx function => #include <sofa/helper/logging/Messaging.h>; system::thread ctime => #include <sofa/helper/system/thread/CTime.h>; fixed_array => #include <sofa/helper/fixed_array.h>; ```. In PR:; ```cpp; sofa::helper::AdvancedTimer => #include<sofa/helper/AdvancedTimer.h>; sofa::helper::ScopedAdvancedTimer => #include<sofa/helper/ScopedAdvancedTimer.h>; sofa::type::Mat => #include<sofa/type/Mat.h>; ```. In PR: #1794 ; ```cpp; #include <sofa/core/behavior/BaseMechanicalState.h>; #include <sofa/core/BaseMapping.h>; #include <sofa/core/behavior/MultiMatrixAccessor.h>; #include <sofa/defaulttype/typeinfo/TypeInfo_Mat.h>; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1757:573,log,logging,573,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1757,1,['log'],['logging']
Testability,"Before merging this one, regression-test has to be updated as well.; but only after PR #1052 has been merged. fixes #1051 #828 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1061:36,test,test,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1061,3,['test'],['test']
Testability,"Before:; <img src=""https://github.com/user-attachments/assets/0cc909bd-b823-4e28-b3d8-b7549e240e5e"" width=""300"" />. After:; <img src=""https://github.com/user-attachments/assets/1a96d6a5-c4f1-4a34-acff-46cc667fc0bd"" width=""300"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5048:770,test,test,770,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5048,2,['test'],['test']
Testability,"Better fix to handle texture coordinate update during topological changes. ; The problem was coming from updating the data from parent Data (from Loader/engine) during the changes. ; Instead of breaking the ""parentship"", the topology callback has been changed to avoid calling updateIfDirty during the changes. This PR combine with the #2414 will; fix #2392 ; Add safeguard in the scene to avoid topologicalChanges which are not handled by TextureInterpolation; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2415:1001,test,test,1001,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2415,2,['test'],['test']
Testability,"Big PR for:; - remove collections (SofaComponent*, except for SofaComponentAll); - now SofaBase/SofaCommon/SofaGeneral/SofaAdvanced/SofaMisc are packages (find_package SofaBase) and are modules as well (target_link_libraries SofaBase); - Add a new module in SofaBase, called SofaBaseUtils including all essential utilities for scenes (i.e RequiredPlugin, AddRepo, etc); - Change previous SofaMisc module to SofaMiscExtra (to avoid confusion with the metapackage SofaMisc). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1314:724,test,test,724,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1314,2,['test'],['test']
Testability,BilateralInteractionConstraint.scn regression test fails,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2128:46,test,test,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2128,1,['test'],['test']
Testability,"BlockDiagonalMatrix, BlockFullMatrix and BlockVector are now explicitly instantiated with extern template. This leads to compilation problems that have been fixed (missing includes, missing parameters in `asub` etc). BlocFullMatrix has been deprecated in order to rename it to BlockFullMatrix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3334:833,test,test,833,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3334,2,['test'],['test']
Testability,"Boost libs were not copied correctly in MinSizeRel and RelWithDebInfo configurations on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1711:636,test,test,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1711,2,['test'],['test']
Testability,"Both BaseObject and BaseNode have a getPathName function, but those can't be called from a Base ptr without dereferencing with toBaseNode / toBaseObject. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1455:405,test,test,405,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1455,2,['test'],['test']
Testability,"Both plugins are removed from sources and **NOT** fetchable since they are not of interest/use anymore:; - [ExternalBehaviorModel](https://github.com/sofa-framework/ExternalBehaviorModel); - [ManualMapping](https://github.com/sofa-framework/ManualMapping). I even hesitated to archive them directly. But let's be gentle. Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4565:923,test,test,923,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4565,2,['test'],['test']
Testability,"BoxROI couln't be used in 2d or 1d scenes.; Examples are also added.; Note that with this PR, BoxROI still require a 3d box and inclusion algorithms still work in 3d, which means the dimensions that are not used in the mechanics are still used in BoxROI. That is why I put big numbers in the `box` filed in the examples. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2600:860,test,test,860,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2600,2,['test'],['test']
Testability,"Broken after https://github.com/sofa-framework/sofa/pull/4827. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4879:602,test,test,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4879,2,['test'],['test']
Testability,"Broken by https://github.com/sofa-framework/sofa/pull/2790/files#diff-beb90dbb98788df220b4c6b4a57cac3d3a8eeb658515bfe80c3831cc5e94de06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2863:675,test,test,675,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2863,2,['test'],['test']
Testability,"BruteForceDetection is deprecated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2232:574,test,test,574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2232,2,['test'],['test']
Testability,"Bug introduced in #1487, with an infinite loop when calling parse(); (Fix timeout with MeshBarycentricMapperEngine.scn on the CI). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1516:382,test,test,382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1516,2,['test'],['test']
Testability,"Bug introduced in https://github.com/sofa-framework/sofa/pull/4838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4865:607,test,test,607,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4865,2,['test'],['test']
Testability,"Bugfix for problem discussed in https://github.com/sofa-framework/sofa/discussions/2691#discussioncomment-2183354 with @hugtalbot . When calling a scene with an `ArticulatedSystemMapping` through `runSofa`, everything works as expected.; When running the same scene through `SofaPython3` with `OpenGL` as rendering, the stack overflows.; Through some commenting out code, I found that saving the `saveLastState` without `restoreLastState` leads to the stack overflow.; Restoring was not done, because the function returned immediately after checking if mappings should be shown. Changes:; - Pulling `restoreLastState` and `saveLastState` into the `if`; - Modernized the loops for readability. Scene for testing:; test_articulation.py:. ```python; import Sofa; import Sofa.Core; import Sofa.SofaGL; import Sofa.Simulation; import os; import time. sofa_directory = os.environ[""SOFA_ROOT""]; import pygame; from OpenGL.GL import *; from OpenGL.GLU import *. display_size = (800, 600). def init_display(node):; pygame.display.init(); pygame.display.set_mode(display_size, pygame.DOUBLEBUF | pygame.OPENGL). glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); glEnable(GL_LIGHTING); glEnable(GL_DEPTH_TEST); Sofa.SofaGL.glewInit(); Sofa.Simulation.initVisual(node); Sofa.Simulation.initTextures(node); glMatrixMode(GL_PROJECTION); glLoadIdentity(); gluPerspective(45, (display_size[0] / display_size[1]), 0.1, 50.0). glMatrixMode(GL_MODELVIEW); glLoadIdentity(). def simple_render(rootNode):; """"""; Get the OpenGL Context to render an image (snapshot) of the simulation state; """"""; glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); glEnable(GL_LIGHTING); glEnable(GL_DEPTH_TEST); glMatrixMode(GL_PROJECTION); glLoadIdentity(); gluPerspective(45, (display_size[0] / display_size[1]), 0.1, 50.0); glMatrixMode(GL_MODELVIEW); glLoadIdentity(). cameraMVM = rootNode.camera.getOpenGLModelViewMatrix(); glMultMatrixd(cameraMVM); Sofa.SofaGL.draw(rootNode). pygame.display.get_surface().fill((0, 0, 0)); pygame.di",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3095:703,test,testing,703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3095,1,['test'],['testing']
Testability,"Build on top of #3309 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3311:563,test,test,563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3311,2,['test'],['test']
Testability,"Build process:. ```; cd ~/Apps/git-apps; git clone https://github.com/sofa-framework/sofa.git; cd sofa/src; git checkout master; mkdir build-master; cd build-master; cmake [options] ..; make; ```. To be clear, build directory is: `/home/emdash00/Apps/git-apps/sofa/src/build-master`. Edit: updated `cmake-log.txt`. Last one was the wrong configuration by accident. I tried remaking the config, though it might not be 100% accurate. I used cmake-gui for the options, so here's the [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/4777146/CMakeCache.txt).; Here's the configuration process log of the `cmake [options] ..` command: [cmake-log.txt](https://github.com/sofa-framework/sofa/files/4777183/cmake-log.txt). Output is very long so I've attached it in this text file [log.txt](https://github.com/sofa-framework/sofa/files/4777142/log.txt). Probably the most notably part is on log.txt:385, which I'll post here. Note: I spaced it to make it visually easier to read. The original is all on a single line of course.; ```; /home/emdash00/Apps/git-apps/sofa/src/applications/plugins/SofaOpenCL/OpenCLIdentityMapping.cpp:71:16: error: duplicate explicit instantiation of; ‘class sofa::component::mapping::IdentityMapping<sofa::gpu::opencl::OpenCLVectorTypes<sofa::defaulttype::Vec<3, float>, ; 													 	 sofa::defaulttype::Vec<3, float>, float>,; 									 				 sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, ; 													 	 sofa::defaulttype::Vec<3, float>, float> >’ [-fpermissive]; ```. I'm unsure of where the original instantiation is. I'm just trying to use the library since Ubuntu 19.10 doesn't have prebuilt packages yet. I don't think this is part of the issue; however, I'm using OpenCL for an Intel GPU. I wasn't sure how computationally intensive this library would be, but I thought might as well try to utilize my Intel HD Graphics Unit. . Here's an attachment of all relevant system specs using linux commands: [sysinfo.txt](https://github.com",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1419:305,log,log,305,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1419,7,['log'],['log']
Testability,"Build the mapping Jacobian using only the affected DoFs (the DoFs which contributes to the matrix), filtering the rest. This is particularly more efficient for PenalityForceField, when in general only a few DoFs are in contacts. On the caduceus, before:; ```; 10000 iterations done in 41.6872 s ( 239.882 FPS).; ```. after:; ```; 10000 iterations done in 16.8157 s ( 594.681 FPS).; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4001:926,test,test,926,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4001,2,['test'],['test']
Testability,But default google test prints raw values when the tests cases are provided by GetParams. ; By adding a PrintTo function this behavior can be changed so that custom types are easier ; to read. . In the PR i adds a PrintTo for the Python_test_data object. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/730:19,test,test,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/730,4,['test'],"['test', 'tests']"
Testability,"But needs to wait for; [ci-depends-on https://github.com/SofaDefrost/Cosserat/pull/119]. to be merged before enabling it on the CI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4859:671,test,test,671,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4859,2,['test'],['test']
Testability,"But scenes crash. Before going further with https://github.com/sofa-framework/sofa/pull/4395, it is wiser to first fix the compilation of the plugin. We can even wonder if we keep this plugin since it has not been maintained for a while. Note that this plugin is not compiled on the CI. See https://github.com/sofa-framework/ci/pull/32. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4398:876,test,test,876,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398,2,['test'],['test']
Testability,"By adding an optional geometrical template for mesh-based masses. Merely a refresh version of the previously closed PR ; - https://github.com/sofa-framework/sofa/pull/2476. In the end, it is just easier to add a template to manage geometrical data retrieval.; Also, some cleaning and easy optimizations in the diffusion to compute a little faster. Toward a green CI 🚀; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2798:908,test,test,908,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2798,2,['test'],['test']
Testability,"By doing that I believe that it also removes some memory leaks. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4838:603,test,test,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4838,2,['test'],['test']
Testability,"By using RAII, `ScopedAdvancedTimer` is less error-prone than `AdvancedTimer::stepBegin/stepEnd`. Let's use it more, in the goal of having only 1 way to define a timer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4177:708,test,test,708,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4177,2,['test'],['test']
Testability,ByStep\Visual\5_Visual.scn; examples\Tutorials\StepByStep\Visual\6_Visual.scn. [INFO] [PluginFinder] Found 132 files with warning:; examples\Benchmark\Analysis\constantMomentum.scn; examples\Benchmark\Performance\benchmark_cubes.scn; examples\Benchmark\Performance\BuildLCP\BuiltConstraintCorrection.scn; examples\Benchmark\Performance\BuildLCP\NonBuiltConstraintCorrection.scn; examples\Benchmark\TopologicalChanges\AffineMovementConstraint__RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\LinearMovementConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectDirectionConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToLineConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPointConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\TriangularBendingSprings_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\TriangularFEMForceField_RemovingMeshTest.scn; examples\Components\constraint\AffineMovementConstraint.scn; examples\Components\constraint\AffineMovementConstraint3D.scn; examples\Components\constraint\AttachConstraintMatrix.scn; examples\Components\constraint\BilateralInteractionConstraint_PGS.scn; examples\Components\constraint\BilinearConstraint.scn; examples\Components\constraint\BilinearConstraint3D.scn; examples\Components\constraint\HermiteSplineConstraint.scn; examples\Components\constraint\NonBuiltConstraintCorrection.scn; examples\Components\constraint\PatchTestConstraint.scn; examples\Components\constraint\ProjectToPlaneConstraint.scn; examples\Components\engine\DisplacementMatrixEngine.scn; examples\Components\engine\GenerateCylinder.scn; examples\Components\engine\GenerateGrid.scn; examples\Components\engin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3352:1983,Benchmark,Benchmark,1983,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3352,1,['Benchmark'],['Benchmark']
Testability,CG was emitting inappropriate warnings regarding threshold-tolerance. This PR fixes it by checking if this is the first time step and first iteration.; This PR also checks the cases with division by zero. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/658:456,test,test,456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/658,2,['test'],['test']
Testability,"CGAL 4.12+ now forward declares its package Polyhedron (see https://github.com/CGAL/cgal/commit/76ccc9a , hence the implicit; instantiation of undefined template compilation error. This PR fixes this. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/812:452,test,test,452,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/812,2,['test'],['test']
Testability,"CGAL plugin has some build issues in some circumstances, this PR aims to fix it:. - build error if ""image"" plugin is deactivated; - BOOST_PARAMETER_MAX_ARITY too low by default (5 by default, where CGAL needs 12 at least). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/351:474,test,test,474,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/351,2,['test'],['test']
Testability,CHANGE usage of d_totalMass in DiagonalMass and add tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/230:52,test,tests,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/230,1,['test'],['tests']
Testability,CHANGE: AdvanceTimer::Id::IdFactory is no more a singleton static class but a thread local class to prevent different threads to share the same instance of the class. FIX: DefaultTaskScheduler registration to TaskScheduler factory is forced to be executed after the TaskScheduler static initialization. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/792:554,test,test,554,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/792,2,['test'],['test']
Testability,"CHANGELOG:. - [cmake] rename FindThread.cmake into FindSofaThread.cmake because otherwise there is ""collision"" with the FindThreads.cmake provided by recent version of boost. ; - [all] My usuall cleaning PR (when I put my brain in automated mode to):; - move some code from .h to .cpp; - use msg_* API; - remove commented code; - group protected/public/ in .h; - add override on virtual constructor; - replace some NULL by nullptr (but I would like someone try clang-tidy to do that. Nothing should be broken with the change (expect your branches with a lot of divergence); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/884:825,test,test,825,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/884,2,['test'],['test']
Testability,CHANGELOG:; - COSMETIC fixes in Data.h; - BUGFIX in SceneCheckerListener; - CHANGE in Binding_Base.cpp. I think that the change in Binding_Base may requires a bit of discussion as it is breaking. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1003:449,test,test,449,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1003,2,['test'],['test']
Testability,CHANGELOG:; - FIX the wrong size computation of the ModifyData window.; - FIX the rendering of the help text tooltips associated with data; - FIX the mouse wheel scrolling that on vector widget was changing the spinbox value instead of scrolling the widget.; - COSMETIC removal of commented code. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1011:550,test,test,550,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1011,2,['test'],['test']
Testability,CHANGELOG:; - FIXES SofaGeneralEngines/CMakeLists.txt ; - CLEAN SofaGeneralEngines/ComplementaryROI (should not change anything); - CLEAN SofaSimpleFEM/HexahedronFEMForceField (should not change anything); - CLEAN SofaSimpleFEM/TetrahedronFEMForceField (should not change anything); - REMOVE SOFA_SUPPORT_MAPPED_MASS that was not used because of missing #define. In case you disagree on some action please provide feedback. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/831:677,test,test,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/831,2,['test'],['test']
Testability,CHANGELOG:; - Replace Vector3 alias by Vec3; - Set groups in MeshLoader. ; - The data field's name are now conformant with Sofa coding style in MeshObjLoader; - Add a light/dark gray in RGBAColor. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1025:450,test,test,450,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1025,2,['test'],['test']
Testability,CI info: I disabled Defrost MacOS builder to force this PR to build on sofa-ci-dev-macos. To be merged asap (if CI agrees). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/719:375,test,test,375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/719,2,['test'],['test']
Testability,"CImgData.h only contains classes and things related to the image plugin.; Thats why it seems more consistent to move this file directly into the image plugin. Moreover, it had a non-met (soft) dependency on SofaBaseVisual (as there is no cpp, and it is only used by the image plugin, this was not an issue before). IMO, CImgPlugin should be only a plugin:; - introducing the cimg library; - using cimg, allowing loading various picture file format (jpg/png, etc). I added some includes here and there as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2307:1049,test,test,1049,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2307,2,['test'],['test']
Testability,"CImgPlugin is no longer required since the only usage is to save an image, which can be done via STB. As a bonus, TGA format is now supported. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4112:682,test,test,682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4112,2,['test'],['test']
Testability,CMAKE_WARN_DEPRECATED sends warning when deprecated project is found.; This warning appears now for the Modeler and when the option; SOFA_WITH_DEPRECATED_COMPONENTS is activated. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/662:430,test,test,430,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/662,2,['test'],['test']
Testability,"CMake configuration of out-of-tree plugins using Sofa.Testing is broken after; - #3655 . The compat/ dir has been removed but not its reference for the target config. Error log: (from beamadapter CI):. ```; CMake Error in BeamAdapter_test/CMakeLists.txt:; Imported target ""Sofa.Testing"" includes non-existent path. ""/home/runner/work/BeamAdapter/BeamAdapter/sofa/include/Sofa.Testing/Sofa.Testing/compat"". in its INTERFACE_INCLUDE_DIRECTORIES. Possible reasons include:. * The path was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and references files it does not; provide.; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3694:54,Test,Testing,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3694,7,"['Test', 'log', 'test']","['Testing', 'log', 'test']"
Testability,"CMake now passes with SOFA-NG; Fixed some types and includes due to changes from SOFA-NG. The plugin still does not compile. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4338:664,test,test,664,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4338,2,['test'],['test']
Testability,"CRSMultiMatrixAccessor was isolated in #2220 and was make compilable by default.; The only case where it could be used is in MatrixLinearSolver by defining a macro (SOFA_SUPPORT_CRS_MATRIX), but this one was never defined so effectively the CRSMultiMatrixAccessor was never used (even if compiled). Thing is, CRSMultiMatrixAccessor takes a **loooong** time to compile (and takes heap of memory).; The reason is that it needs to compile ~~(6 * 6 * 6 * 2 * 2) * 2 = **1728**~~ functions because of chains of template. (EDIT actually it is even more than that: `(6 + (6*6) + (6*6*6) + (6*6*6*2) + (6*6*6*2*2)) * 2` = **3108**). So in the end, either you want to compile it and use it, or dont use it but dont compile it... ; A cmake (advanced) option is introduced for people who really wish to use it.; By the way CRSMultiMatrixAccessor code quality is very dubious (const_cast<> everywhere...), ; and the english comments are.... _special_. For the sake of it, std::cout calls have been replaced with msg_info() as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2372:1559,test,test,1559,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2372,2,['test'],['test']
Testability,"CUDA12 disabled the usage of a deprecated texture API, obviously used in our code 😅. Actually only TLED classes used necessarily texturing so no choice other than disable the compilation of these 2 classes if CUDA>=v12 at the cmake stage. Other files were including CudaTexture.h and were using the old API in code only activated with Macros (which I suspect, were never enabled anymore....) so I enclosed the include with the same `#ifdef` tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3640:441,test,tests,441,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3640,3,['test'],"['test', 'tests']"
Testability,"Caduceus scene must leave, we should create a new default demo scene. See: https://github.com/bakpaul/TestScenes/tree/main/Experimental",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4201:102,Test,TestScenes,102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4201,1,['Test'],['TestScenes']
Testability,"Call me weightwatcher!. Following the STC9, decision to remove the following plugins (unused/unknown):; - ARTrack: you confirm for you @omarboukhris ?; - SofaPML; - SofaStereo; - SofaVolumetricData. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1439:450,test,test,450,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1439,2,['test'],['test']
Testability,"Callback call in TopologySubsetData were missing:; - desctruction callback during Data remove method; - creation callback during Data add method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2374:685,test,test,685,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2374,2,['test'],['test']
Testability,"Calls to OpenGL primitives are reduced. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3420:579,test,test,579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3420,2,['test'],['test']
Testability,"Capture::saveScreenshot was not destroying the content of the Image pointer.; This solves this, plus adds one check on the pointer and add message output. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/533:406,test,test,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/533,2,['test'],['test']
Testability,Capture::screenshot() does not work with anti-aliased (MSAA) OpenGL rendering.; Using instead built-in Qt method. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/728:365,test,test,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/728,2,['test'],['test']
Testability,"Catch error if task could not be started, probably because Graphviz is not found.; Before, nothing mentioned that the feature required Graphviz. This feature allows to export a graph as an image like:. ![test](https://user-images.githubusercontent.com/10572752/157454936-6efab78a-295c-4631-b193-762a1084e878.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2771:204,test,test,204,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2771,3,['test'],['test']
Testability,Cf Issue #1043. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1054:267,test,test,267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1054,2,['test'],['test']
Testability,Chains are behaving normally now.; DefaultCollisionGroup seems to bring a different behavior by solving contact (with penalties) when the all objects are considered as one system. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/821:431,test,test,431,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/821,2,['test'],['test']
Testability,"Change CMake version in CMakePresets.json to make SOFA easier to compile with IDEs like CLion or VsCode. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4849:644,test,test,644,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4849,2,['test'],['test']
Testability,"Change Gitter to Discord. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4498:565,test,test,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4498,2,['test'],['test']
Testability,"Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa. ; This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1788:683,test,test,683,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1788,2,['test'],['test']
Testability,"Change `std::map` for `std::unordered_map` in `MapMapSparseMatrix`.; It means the data is no longer processed in a predictable order. In most cases, it does not change anything since the data structure is converted to another. This conversion does not depend on the order. Benchmarks from https://github.com/alxbilger/SofaBenchmark/pull/14 before:. ```; ---------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ---------------------------------------------------------------------------------; BM_MapMapSparseMatrix_writeLine/512 3.28 us 3.22 us 213333; BM_MapMapSparseMatrix_writeLine/1024 15.8 us 16.0 us 44800; BM_MapMapSparseMatrix_writeLine/2048 49.6 us 50.0 us 10000; BM_MapMapSparseMatrix_writeLine/4096 112 us 109 us 5600; BM_MapMapSparseMatrix_addCol/512/512 1.77 ms 1.80 ms 407; BM_MapMapSparseMatrix_addCol/1024/512 3.54 ms 3.53 ms 195; BM_MapMapSparseMatrix_addCol/2048/512 7.01 ms 7.11 ms 112; BM_MapMapSparseMatrix_addCol/4096/512 14.1 ms 14.1 ms 50; BM_MapMapSparseMatrix_addCol/512/1024 5.74 ms 5.72 ms 112; BM_MapMapSparseMatrix_addCol/1024/1024 11.8 ms 11.7 ms 56; BM_MapMapSparseMatrix_addCol/2048/1024 23.4 ms 23.4 ms 30; BM_MapMapSparseMatrix_addCol/4096/1024 46.1 ms 46.9 ms 14; BM_MapMapSparseMatrix_addCol/512/2048 23.5 ms 23.4 ms 28; BM_MapMapSparseMatrix_addCol/1024/2048 46.2 ms 45.8 ms 15; BM_MapMapSparseMatrix_addCol/2048/2048 92.6 ms 93.8 ms 9; BM_MapMapSparseMatrix_addCol/4096/2048 187 ms 188 ms 4; BM_MapMapSparseMatrix_addCol/512/4096 59.8 ms 59.7 ms 11; BM_MapMapSparseMatrix_addCol/1024/4096 119 ms 120 ms 6; BM_MapMapSparseMatrix_addCol/2048/4096 238 ms 240 ms 3; BM_MapMapSparseMatrix_addCol/4096/4096 480 ms 477 ms 2; ```. After:. ```; ---------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ---------------------------------------------------------------------------------; BM_MapMapSparseMatrix_writeLine/512 1.48 us 1.46 us 448000; BM_MapMapSp",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2641:273,Benchmark,Benchmarks,273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2641,2,['Benchmark'],"['Benchmark', 'Benchmarks']"
Testability,"Change access specifier for the method set. A public access is needed in SofaCUDASolver plugin. . Moreover, regardless of the reasons of this modification, the fact that this method is at the beginning of the class declaration without any access specifier before is not wanted. Even if it is a class which makes its access private by default, it lacks of readability. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3834:909,test,test,909,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3834,2,['test'],['test']
Testability,"Change an error message into a warning in MeshVTKLoader due to new metadata not handled, but files are well loaded; Fix #652 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1037:378,test,test,378,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1037,2,['test'],['test']
Testability,"Change operator*. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3333:557,test,test,557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3333,2,['test'],['test']
Testability,"Change the default plugins. Make multi-thread compiled by default, and removed cimg default. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4322:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4322,2,['test'],['test']
Testability,"Changed d_points from Indices to a TopologySubsetIndices so that the indices get updated on topology changes.; Discussed with @hugtalbot and @epernod in https://github.com/sofa-framework/sofa/discussions/3008. Is there a way to also do that for the external indices?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3037:807,test,test,807,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3037,2,['test'],['test']
Testability,"Changed input variable name ""InputMeshName"" of MeshbarycentricMapperEngine to ""topology"" for added clarity; Modified label descriptions of MeshbarycentricMapperEngine variables for added clarity; Added a parse function to warn about the name change of InputMeshName; Added an example scene for this component. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1487:561,test,test,561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1487,2,['test'],['test']
Testability,Changed the mixed-precision mappings for generic ones. This fixes issue #892 (and is related to #893). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/898:354,test,test,354,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/898,2,['test'],['test']
Testability,"Changelog: ; Batch replacement of std::cout to msg_* API, removal of commented code ; The inpacted files are in:; - SofaBoundaryCondition; - SofaConstraint; - SofaEulerianFluid; - SofaExporter; - SofaGeneralEngine; - SofaGeneralExplicitODESolver; - SofaGeneralLoader; - SofaGeneralMeshCOllision; - SofaGeneralObjectInteraction; - SofaGeneralRigid; - SofaGeneralSimpleFEM; - SofaGeneralVIsual; - SofaMiscFEM; - SofaMiscForceField; - SofaMiscMapping; - SofaMiscSolver. @hugtalbot done. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/275:735,test,test,735,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/275,2,['test'],['test']
Testability,Changelog:; - Remove the plugins in deprecated directory ; - Remove DETECTIONOUTPUT_BARYCENTRICINFO (https://github.com/sofa-framework/sofa/pull/1046); - Remove remaining SOFA_WITH_FLOAT (https://github.com/sofa-framework/sofa/pull/1047); - Replace 3.14 with M_PI (https://github.com/sofa-framework/sofa/pull/1045) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1048:568,test,test,568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1048,2,['test'],['test']
Testability,"Changelog:; - added a mechanism to obtain extra args from command-line (everything following `--argv`); - forwarded extra args to python in `SceneLoaderPy`. Example:; ```python; # test.py; def createScene(node):; import sys; print(sys.argv); ```. ```sh; runSofa -a test.py --argv --spam --bacon eggs; # ['test', '--spam', '--bacon', 'eggs']; ```; ___________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/368:180,test,test,180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/368,5,['test'],['test']
Testability,Changelog:; - remove SOFA_SUPPORT_MOVING_FRAME (because #ifdef is not the way to implement a feature); - remove SOFA_SUPPORT_MULTIRESOLUTION (because #ifdef is not the way to implement a feature); - move code from .h to .cpp in DefaultCollisionGroupManager. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/849:509,test,test,509,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/849,2,['test'],['test']
Testability,Changes:. - Removing deprecated datafields; - Use Accessors instead of beginEdits; - Remove aliases; - move addInputs / addOutputs from init() to ctor(); - Add alignedBoxes & orientedBoxes as inputs of the BoxROI engine; - Refactor init / reinit / doUpdate to guarantee full component update on data change. *BREAKING because of the removal of aliases & deprecated datafields*. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1482:629,test,test,629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1482,2,['test'],['test']
Testability,"Changes:; - changes the old fashion SOFA logo in background; - make it repeatable; - change ERROR msg into warning message when SOFA is launched for the first time and some folder are not existing (e.g. screenshots). ![](https://i.ibb.co/2nT5d2V/test.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1758:41,log,logo,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1758,4,"['log', 'test']","['logo', 'test']"
Testability,"Check more values in DiagonalMass_test to be sure TotalMass, Density and VertexMass are well init from inputs. This reveals one bug when init using vertexMass resulting in one failing test:; UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra. It will be fixed in next PR #2186 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2183:184,test,test,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2183,3,['test'],['test']
Testability,"Check that triangles index match the size of the triangleAroundVertexArray (Like it is done in EdgeSetTopologyContainer for EdgeAroundVertexArray). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4242:687,test,test,687,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4242,2,['test'],['test']
Testability,Cherry pick last useful changes from PR #788. All topologyData were set to dirty as soon as a topology modification was done. Check the Data link and set/clean dirty only topologyData link to the topology array modified. NB: factorisation will be done as soon as everything work fine. Having several methods per topology make my eyes cry but it helps to follow the data link for debug. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/889:637,test,test,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/889,2,['test'],['test']
Testability,Cherry-pick from master to v16.12.; Fix compilation (https://github.com/sofa-framework/sofa/pull/122) due to boost : FileRepository was not compiled if Boost_FILESYSTEM was not found.; Commits 586820f and 6454b77 fixing it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/188:449,test,test,449,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/188,1,['test'],['test']
Testability,"Child force id is given as a parameter of the function `applyDJT`, and instead of using it, the force vector id from `MechanicalParams` is used. I suggest to use the given parameter in this PR. Both force ids should be equal in most cases, so I don't expect breaking changes of behavior. I just find it weird to give a parameter and not using it in favor of a hard-coded id. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4798:914,test,test,914,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4798,2,['test'],['test']
Testability,"Clang still does not implement parallel execution (https://en.cppreference.com/w/cpp/compiler_support); It was guarded before with has_include<execution> (could be used with GCC and MSVC). BUT the new XCode seems to introduce the header without implementation 🤔.; (has_include<execution> is true, and the execution header exists). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1542:582,test,test,582,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1542,2,['test'],['test']
Testability,Clean Manifold Topologies plugin:; - Replace serr/sout by msg_; - Move all code inside cpp files; - Clean header inclusions; - Fix template declaration; - Clean warnings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1156:422,test,test,422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1156,2,['test'],['test']
Testability,Clean SofaBoundaryCondition during STC5; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/696:292,test,test,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/696,2,['test'],['test']
Testability,"Clean all cmake var/options/names to follow the new guidelines and the new SOFA-NG module names; (fulfill some TODO written long ago as well). + Fix #2972. Remark/question: should we keep compatibility with all the cmake variables/options and preproc defines?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2974:800,test,test,800,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2974,2,['test'],['test']
Testability,Clean code during STC5. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/699:275,test,test,275,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/699,2,['test'],['test']
Testability,Clean some warnings regarding:; - Double to float conversion. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1196:313,test,test,313,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1196,2,['test'],['test']
Testability,Clean the Messaging.h class by:. - removing commented/unused code; - removing the double parentheses used for the conditions of the **msg_*_when(cond)**. Compiles fine. This should also remove some warnings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/587:459,test,test,459,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/587,2,['test'],['test']
Testability,"Clean the inclusion graph using the combination of three technique. 1) do not rely on properties within class as this imply to have the full class definition to compile the code. ; Eg: `Node::SPtr` is strictly equivalent to `sofa::core::sptr<Node>` but the latter does not always requires the full class definition. ; 2) replacement of `dynamiac_cast<>()` with an opaque function that does not need the complete inheritance graph to be visible. ; 3) move definition of fonction from the .h to the .cpp . By applygin these refactoring step there is more opportunity to use forward declaration. . To handle the forward declaration it was decided during the reviewing of PR #1688 to use a dedicated file for that: ; Eg:; ```console; - sofa/core/fwd.h; - sofa/defaulttype/fwd.h; - sofa/helper/fwd.h ; ```; I also put in these files dynamic_cast replacement eg:; ```cpp; Node* getNodeFromBase(Base*);; ```. And there is also there is the definition of NodeSPtr as context free replacement for Node::SPtr. . The PR also contains: #1727 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1730:1571,test,test,1571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1730,2,['test'],['test']
Testability,"Clean the template instantiations. I take this opportunity to test a PR from the Regression repo: ; [ci-depends-on https://github.com/sofa-framework/Regression/pull/42]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3833:62,test,test,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3833,3,['test'],['test']
Testability,"Clean, Fix, Upgrade, Harder, Better, Stronger...; wip. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/876:306,test,test,306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/876,2,['test'],['test']
Testability,"Cleaning and refactoring in BarycentricMapping (only for topology container). _description from comment below:_. Sure, sorry. So I wanted to optimize the initialization of BarycentricMapping, see issue #784 for clear description of the problem. . To avoid more duplication of code, and to allow the optimization to be available for a maximum of topology types, I needed the code to be refactored. . So:. 1. I created an abstract class (BarycentricMapperTopologyContainer) that gather the shared implementations of BarycentricMapperEdgeSetTopology, BarycentricMapperTriangleSetTopology, BarycentricMapperQuadSetTopology, BarycentricMapperTetrahedronSetTopology, and BarycentricMapperHexahedronSetTopology. 2. Enabeling to refactor the apply(), applyJ(), applyJT(), getJ(), draw() functions and more importantly the function I want to optimize, init(). The PR also include some cleaning, in particular the renaming of variables. That could indeed break not updated code. . What I couldn't do, is to also refactor the code of BarycentricMapperMeshTopology... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/797:1307,test,test,1307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/797,2,['test'],['test']
Testability,"Cleaning continues, some files includes MechanicalObject either for no reason at all, or could use MechanicalState (from SofaCore) instead.; ▶ No more need for SofaBaseMechanics by SofaBoundaryCondition. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2015:743,test,test,743,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2015,2,['test'],['test']
Testability,Cleaning of JointSpringFF according to SOFA conventions ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/850:309,test,test,309,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/850,2,['test'],['test']
Testability,"Cleaning!!!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2577:552,test,test,552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2577,2,['test'],['test']
Testability,Cmake 3.13 does not seem to allow the inclusion of `CPackNSIS` anymore.; This add a simple check on cmake version to prevent cmake configure failure.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/897:402,test,test,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/897,2,['test'],['test']
Testability,"Code cleaning of multiple classes, by :; - removing commented code,; - replacing calls to serr/sout with msg_info()/msg_warning()/msg_error(); - moving code from headers to put them .inl or .cpp.; - updating to sofa coding style.; One commit for one or two clean classes.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1116:524,test,test,524,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1116,2,['test'],['test']
Testability,"Code duplicated from the base class constructor (```FixedConstraint```), therefore called twice. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2830:636,test,test,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2830,2,['test'],['test']
Testability,"Coming from [Mei remark on the forum](https://www.sofa-framework.org/community/forum/topic/image-viewer-in-image-plugin/). - Add the automatic loading of the image_gui library when the plugin image is loaded (if the library is well there); - Add formating in associated CMakeLists. With the correct loading of image_gui, now the ImagePlaneWidget will work fine when opening a ImageViewer component. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1015:650,test,test,650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1015,2,['test'],['test']
Testability,"Compared to other FEM force fields, `HexahedronFEMForceField` did not have the `addKToMatrix` optimization for bloc matrices. This PR adds it. It also changes the template type of the Conjugate Gradient in the following scenes:. - examples/Demos/caduceus.scn; - examples/Components/forcefield/HexahedronFEMForceField.scn. It changes from a matrix-free CG to an assembled bloc matrix CG, but it is faster in the case of the 2 scenes. About +50 FPS in the GUI for both scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2240:1014,test,test,1014,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2240,2,['test'],['test']
Testability,"Compilation error fix. When CMake variables PLUGIN_SOFACUDA and SOFACUDA_DOUBLE are enabled, CudaStandardTetrahedralFEMForceField.cu try to be compiled through NVCC (Nvidia compiler). It was leading to a compile error because of 2 missing function prototypes in the .cu file. This commit fixes the issue. Compilation was tested on my side on Fedora 29 with CUDA Toolkit v10.1. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991:321,test,tested,321,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991,3,['test'],"['test', 'tested']"
Testability,"Compilation was failing on clang{12,13} since ; - https://github.com/sofa-framework/sofa/pull/4835. I noticed that the `.array()` method was returning a const ref.; so I tried to structure binding to a const ref (instead of a const value) and... it worked on clang12,13 🫨 (while crashing if using values). I guess there is some bug around with clang12,13 around for this case, as clang14+ is working fine (and other compilers too). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4899:971,test,test,971,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4899,2,['test'],['test']
Testability,"Compiled modules before:. - tinyxml; - Sofa.Type; - Sofa.Helper; - Sofa.DefaultType; - Sofa.Core; - Sofa.SimulationCore; - Sofa.BaseTopology; - Sofa.BaseVisual. Compiled modules after:. - Sofa.Type; - Sofa.Helper; - Sofa.DefaultType. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2318:773,test,test,773,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2318,2,['test'],['test']
Testability,"Compiling sofa with SOFA_FLOATING_POINT_TYPE=double (no float) leads to a series of compile errors in Mapping and MultiMapping. I believe the bug has been introduced in PR #738. The reason for this crash is that some Mappings double->float are necessary for some applications (usually for visual models, CUDA, etc.).; Thus ExtVecXfTypes are always compiled, even when #ifndef SOFA_FLOAT. This PR fixes the bug, but also raises an important underlying point:; Having ifndefs everywhere in the code is very intrusive, source of errors, and most importantly, prevents having a full code coverage in the CI in a single build. Floats are slower, and much less precise than Doubles. We do not support XBox / PS3 code, thus we have one less reason to keep this code smell in the core of sofa.; If the only reason we still need floats is for Cuda compatibility and other visual rendering stuff, shouldn't the conversions be done in those components / plugins, instead of having this FLOAT things affecting the whole codebase of SOFA?. I dream of a sofa without all these ifdefs lying around polluting the code.; @courtecuisse @fredroy , you worked the most on CUDA stuff and visual rendering respectively, do you have an opinion on the subject?; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/827:1489,test,test,1489,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/827,2,['test'],['test']
Testability,"Complete documentation here: https://notes.inria.fr/sP50g-5eT7-T3aEXXYcf4g (changes are possible). Random things to have a look:. - `addKToMatrix` has been replaced by `buildStiffnessMatrix`; - `addBToMatrix` has been replaced by `buildDampingMatrix`; - `addMToMatrix` has been replaced by `buildMassMatrix`; - `buildGeometricStiffnessMatrix` has been added to mappings and works similar to `buildStiffnessMatrix` and `buildDampingMatrix`.; - A new module has been introduced: `Sofa.Component.LinearSystem`; - The class `LinearSystem` and its base classes (`TypedMatrixLinearSystem` and `BaseMatrixLinearSystem`); - Changes in `MatrixLinearSolver`, and how it interacts with a LinearSystem; - The class `MappingGraph`; - The component `MatrixLinearSystem`; - The file `MatrixAccumulator.h`; - How the matrices are mapped in `MatrixMapping.h`; - The compatibility layer in `MatrixAPICompatibility.h`. [ci-depends-on https://github.com/sofa-framework/Regression/pull/44]; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/343]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777:1581,test,test,1581,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777,2,['test'],['test']
Testability,"Complete https://github.com/sofa-framework/sofa/pull/3093 .; It parallelize the assembly of the compliance matrix in the same way of the previous PR.; I changed some misleading variable name and added comment for future maintenance. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3154:772,test,test,772,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3154,2,['test'],['test']
Testability,"CompressedRowSparseMatrix is emitting verbose information even if SPARSEMATRIX_VERBOSE is set to false.; The test is actually done with the definition of the preprocessor define, not its value itself.; This PR fixes it by testing its existence AND its value (true or false). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1715:109,test,test,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1715,4,['test'],"['test', 'testing']"
Testability,"Confusion with space and total size for VecTypes and RigidTypes, while trying to write generic code for both of them... Should fix #3246 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3249:678,test,test,678,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3249,2,['test'],['test']
Testability,"ConstantSparsityPatternSystem relies on the assumption that the sparsity pattern of the mechanical matrix is constant. If the pattern is not constant, the component crashes.; This PR introduces a verification that the pattern follows the initial pattern. In case of a mismatch, an error is emitted and the insertion is skipped. This allows the simulation not to crash and inform the user. However, this behavior is available only if `checkIndices` is enabled. It is disabled by default because the check is time consuming, and the goal of this component is performance-oriented. To illustrate the new behavior, one can test the following scene:. ```xml; <Node name=""root"" dt=""0.02"" gravity=""0 -10 0"">; <Node name=""plugins"">; <RequiredPlugin name=""Sofa.Component.Constraint.Projective""/> <!-- Needed to use components [FixedProjectiveConstraint] -->; <RequiredPlugin name=""Sofa.Component.Engine.Select""/> <!-- Needed to use components [BoxROI] -->; <RequiredPlugin name=""Sofa.Component.LinearSolver.Direct""/> <!-- Needed to use components [EigenSimplicialLDLT] -->; <RequiredPlugin name=""Sofa.Component.LinearSystem""/> <!-- Needed to use components [ConstantSparsityPatternSystem] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [UniformMass] -->; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/> <!-- Needed to use components [PlaneForceField] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.FEM.Elastic""/> <!-- Needed to use components [HexahedronFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->; </Node>. <VisualStyle displayFlags=""showBeha",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4428:619,test,test,619,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428,1,['test'],['test']
Testability,"ConstraintAL contains 3 visitors which seems to be duplicated with other in simulation::core and constraint.lagrangian.solver. - MechanicalGetConstraintResolutionVisitor; Almost similar class (with the same name) in Constraint.Lagrangian.Solver and AnimationLoop.; The one in AnimationLoop allows setting a custom offset with its ctor (whereas the one in C.L.S is 0) so I added the same feature with a default value.; Slightly breaking because `cparams` are named differently 😅. - MechanicalAccumulateConstraint2 -> MechanicalAccumulateMatrixDeriv; nice `2`at the end 😅; MechanicalAccumulateConstraint2 is less complete than the other one so there should be no compat problem. - MechanicalSetConstraint -> MechanicalAccumulateMatrixDeriv; MechanicalSetConstraint also set a constraintId (MechanicalAccumulateMatrixDeriv does not) but it seems that this id is actually never used in implemented constraints (m_cid). In any case I add the set in MechanicalAccumulateMatrixDeriv. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4715:1516,test,test,1516,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4715,2,['test'],['test']
Testability,"Contains PR #1705 . Wait for #1705 and #1697. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1706:585,test,test,585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1706,2,['test'],['test']
Testability,"Context: If creating a Rigid from a stream (typically deserializing a Rigid):; - it checks if the rotation is normalized; - if the case, warns the user that it is not; - normalize it. Several problems:; - even if the serialized rigid is perfectly normalized, there will be an unnecessary check (if you have a lots of it and you read it at each time step, it can be bothersome) ; - the normalization of the Quaternion is set with a fixed bound; - the most painful: it will write a warning for EVERY rigid not normalized, every time... Proposed solution:; - only check/print if you are debugging. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1229:846,test,test,846,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1229,2,['test'],['test']
Testability,"Continuation of #4266 . As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?).; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4450:158,Test,Tests,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450,3,"['Test', 'test']","['Tests', 'test']"
Testability,Continue to uniform index type by (trying to) remove warnings.; Follow-up of #1453 ; Use and abuse of auto keyword 🥰. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1504:369,test,test,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1504,2,['test'],['test']
Testability,"Continue with masses. ![image](https://user-images.githubusercontent.com/10572752/214549683-a2e64aa2-2b01-4333-b7e1-cbba9140385d.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3605:674,test,test,674,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3605,2,['test'],['test']
Testability,"Continuing #2150. BTDLinearsolver has some Matrix classes in its compilation files (namely BTDMatrix and BlocFullMatrix) and DiagonalMatrix had an other class as well (BlockDiagonalMatrix). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2334:729,test,test,729,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2334,2,['test'],['test']
Testability,"Continuing #2150. Implementation of BaseMatrix and BaseVector using Eigen library was contained in SofaEigen2Solver. Those EigenVector/EigenMatrix are almost only used for ad-hoc code in FEMs (getJs, geometricStiffness) related to Flexible or Compliant. I tried to make it as compatible as possible, so it should not be breaking. I have deleted also an accessor on a special ""Eigen-""MultiMatrixAccessor:; - it is not used; - it would have introduced a dependency on Sofa.Core... (not possible). Finally, I think this classes wont really be useful in the future, especially that BaseVector/BaseMatrix using Eigen are present in SofaCaribou (https://github.com/jnbrunet/caribou/blob/master/src/SofaCaribou/Algebra/EigenVector.h for example) and seems better overall. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2339:1304,test,test,1304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2339,2,['test'],['test']
Testability,"Continuing task #2402 (towards the huge task to remove *GeometryAlgoritms). - add geometry functions (will be called for DiagonalMass to replace GeometryAlgoritms, see #2436 ); - create the unit test module Sofa.Geometry_test and add some tests; - create the unit test module Sofa.Topology_test and add some tests for the getClosestHexahedron() function. I tried to make functions as generic as possible, so it could be used with different container (std::array, vec... could be std::list as well...) but I needed some functions from SOFA for dot/cross because I was a bit lazy 😗. Actually I dont know if we should be as generic as possible. Let discuss about that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2434:195,test,test,195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2434,6,['test'],"['test', 'tests']"
Testability,"Continuing task #2402 . ""Simple"" PR moving all code related to TopologyData/Handler from SofaBaseTopology to Sofa.Core, along the other core topology structure. A lot of modules wont need SofaBaseTopology anymore because it was including TopologyData.inl from it.... As usual, there is a compatibility layer which surprisingly works very well in this case (i did not touch any other file in other plugins/modules). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2423:954,test,test,954,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2423,2,['test'],['test']
Testability,"Continuing task #2402 . Some components were including SofaBaseTopology components for nothing.; Some other were using Container which could be easily changes for the abstract `BaseMeshTopology` ; this change has the nice side-effect to make components supporting other topologies other than *TopologyContainer. (needs #2434 for a function in edge). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2449:889,test,test,889,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2449,2,['test'],['test']
Testability,"Continuing task #2402. Contains #2434 . As the title says, this PR removes the dependency (useless IMO) to *GeometryAlgorithms,; If a user was not adding a geometryAlgorithms, it was not computing mass, which is weird to me.; In the end, we use the newly introduced functions from #2434 instead; This allow to reveal some inconsistencies:; - these 2 masses compute volume for 2d and area for 1d.....; - diffusion (from TetraFEMDiffusion) is really weird and is using a side-effect to compute effectively the diffusion (template on 1d but manages space in 3D thanks to the instanciation of the geometryalgo). This PR will break (almost intentionally) the Diffusion, thus forcing us to redesign this code to be more ""consistent"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2436:1267,test,test,1267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2436,2,['test'],['test']
Testability,"Continuing task #2402. Contains #2449. As usual, remove usage of GeometryAlgorithms with static functions from Sofa.Geometry and Sofa.Topology (and dont rely on the scene). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2465:712,test,test,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2465,2,['test'],['test']
Testability,"Convert double to SReal in NewmarkImplicitSolver. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4341:589,test,test,589,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4341,2,['test'],['test']
Testability,"Copy-pasting too fast I presume. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2903:572,test,test,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2903,2,['test'],['test']
Testability,Corrected the CMakeLists because the build of the tests is not always…,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1091:50,test,tests,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1091,1,['test'],['tests']
Testability,"Correction of the import of the queue library so that it can work with python3. The import and use of the queue library has changed between python2 and python3.; I updated it to use it in python3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2572:736,test,test,736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2572,2,['test'],['test']
Testability,"Cosmetic cleaning: alphabetical order, remove superfluous RequiredPlugin ... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4707:616,test,test,616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4707,2,['test'],['test']
Testability,Could not just reopen #1307 because of a force-push after closure 👎 . Issue #1306. - Modularize all SofaMisc*; - Clean using pragma once/nested namespace; - rename all macros/file (e.g SOFA_MISC_FEM_API into SOFA_SOFAMISCFEM_API ). Breaking for :; - code doing initMisc() ; - with scenes requiring components from it and missing the mandatory <RequiredPlugin />; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - builds with SUCCESS for all platforms on the CI.; - does not generate new warnings.; - does not generate new unit test failures.; - does not generate new scene test failures.; - does not break API compatibility.; - is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1520:602,test,test,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1520,2,['test'],['test']
Testability,Crash dump will now appear on Jenkins scene-test crash summary. TODO (after merge): change Jenkins detection regex to ; `([^:]*): (error:.*)(([\r\n].*?)*?)### END OF OUTPUT ###`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/644:44,test,test,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/644,3,['test'],['test']
Testability,Create a Camera component so that it become possible to render a scene. The difference with InteractionCamera is that the Camera component is not having any interaction so you can implement; your own 'application specific behavior' by using an external Controller (eg: PythonScriptController). Changes:; - the BaseCamera now has a link to a BackgroundSetting so multiple camera can have multiple background. ; - the BaseCamera now implement a draw() method. If you don't want to see what is drawn...then; restrict the rendering of your scene graph to only call drawVisuals() which is what it is supposed to do :) ; - the Camera alias is not anymore creating an InteractionCamera but a Camera object. Update the caduceus example. NB: I know there is much more to refactor but I have not time for that. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/674:1054,test,test,1054,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/674,2,['test'],['test']
Testability,Create a Sofa.Testing package,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1827:14,Test,Testing,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1827,1,['Test'],['Testing']
Testability,Create a page about verification / validation / regression / unit tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4207:66,test,tests,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4207,1,['test'],['tests']
Testability,Create github-test-action for scene testing in the plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4265:14,test,test-action,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4265,2,['test'],"['test-action', 'testing']"
Testability,Create proper stretch test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4543:22,test,test,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4543,1,['test'],['test']
Testability,Create the delegate functions that were supposed to be implemented in #1167 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1185:329,test,test,329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1185,2,['test'],['test']
Testability,Creating tests on Topological operations,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/43:9,test,tests,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/43,1,['test'],['tests']
Testability,"Current Headless Recorder does not generate files correctly; for that reason, media player can have trouble detecting the format of the file.; Vlc 3.0.2 cannot read the file, except if you specify manually that the file use h264 in advanced options. This PR solves this shortcomming, and also aims to separate this procedure from the rest of the headless recorder to improve readability. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/666:639,test,test,639,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/666,2,['test'],['test']
Testability,"Current implementation has weird behavior when more than one axis is locked. Current implementation may make the objects rotate 180° when they should not. Current PR aims to prevent this issue using swing-twist decomposition algorithm.; As a bonus, code is now shorter. Everything was done inside the class, but the swing twist decomposition could be move to the main quaternion class. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1119:637,test,test,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1119,2,['test'],['test']
Testability,"Currently There is two different class that seems to implement similar things.; BaseClass and ClassInfo. This PR is a WIP in which I will try to:; - merge BaseClass and ClassInfo. ; And use the same approach as for TypeInfoRegistry to hold a single version of a ClassInfo and being able to retrieve it in constant time. Compared to TypeInfoRegistry, where it was hard to locate a single point where to register a type, for ClassInfo this is much easier as there is a single registration point that is the registration of the object to the ObjectFactory. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1836:1095,test,test,1095,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1836,2,['test'],['test']
Testability,"Currently canCreate is used for several things, one of the most common use is to implement template type deduction. . On this PR we implement a mechanism that will allow to separate the type deduction to actual possibilities of creation of the component. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3938:796,test,test,796,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3938,2,['test'],['test']
Testability,"Currently config.h is a all-in-one configuration file that is generated by CMakeLists and included nearly everywhere. The problem is that it contains also very specific options that very few files are using. But, each time any of these specific option is changed sofa needs to be recompiled entirely. This PR is a implementing a more modular approach in which each .cpp that specifically requires a given define include a dedicated file.; Eg:; #include<config/build_option_opengl.h> // to do #if(SOFA_WITH_OPENGL==1); or; #include<config/build_option_experimental.h> // to do #if(SOFA_WITH_EXPERIMENTALFATURE==1); or; #include<config/sharedlibrary_defines.h>. It is still possible to use the old file but by being more specific we will reduce the amount of file to recompile when we will changed something. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/475:1058,test,test,1058,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/475,2,['test'],['test']
Testability,"Currently in Sofa the Link implementation is very hard to maintain because; in a single implementation based on type-traits we are trying to handle to object; of different nature that are BaseData and Base. Link between Base is used everywhere in Sofa but a Link between two data; is only to hold the parent of a Data. It is questionable if such complex; implementation for Link is needed for just this single use case ?. Not doing that have a lot of consequence:; - Data implementation is simpler (because it is no needed to have Class ); - Link implementation is much simpler (and Link is used everywhere); - The instanciation of Link is time consuming in the compilation process and; requieres a lot of #include<> making the dependency graph more dense and thus; slow to compile. So in this PR I introduce a new DataLink & AbstractDataLink that aims at replacing; SingleLink<BaseData*, BaseData*>. In this PR I also add PathResolver, as path link resolution is important an currently it is spread everywhere in the sofa codebase. The underlying idea; is to have all path related things in a single location so we can check there is no duplicated code. The implementation are provided with unittest. The PR does not touch other files.; A second PR will be in charge of refactoring Data.h. But to minimize deltas I prefer to have; this one merged first. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1485:1606,test,test,1606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1485,2,['test'],['test']
Testability,Currently in Sofa the attribute m_componentstate is not a data field. By transformating it into a data field allows different components to track each-other state (and changes) through the data tracker's mechanisms. . The implementation is focus on minimize the amount of change and is not breaking. ; There is a basic test for the feature.; There is a non-breaking deprecation mechanism implemented to ease the renaming of m_componentstate to d_componentstate.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1168:319,test,test,319,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1168,3,['test'],['test']
Testability,Currently in Sofa there is no real dedicated toolbox for geometrical operation. . So I made this (very) drafted module with an emphasize on having a simple API instead of performances. Ideally it should use algorithm that are already implemented in Sofa otherwise it fallback to third party library or custom implementation. ; ; There is tests on the c++ side.; There is a python binding (made with cython) as an independent module (not using the SofaPython). ; There is tests for this python binding. ; The python part is documented with docstrings. . Feedback & Contribution welcome. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/747:338,test,tests,338,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/747,4,['test'],"['test', 'tests']"
Testability,"Currently in Sofa we aren't catching any exceptions. . The consequence is that every exception propagates to the top level exception handler halting the application. ; Un-handled exception are useful to detect bugs but this is a non-sense to use such top level handler to process possible application errors like failure to load a plugin or a scene. . A good approach should be that any exception that can be fixed without editting the source code (ie. but by editting the scene or changing some system configuration and so on) should ends with a gracefull error message indicating to the user how to fix the error cause. To implement this I suggest to:; - add a close to top-level try/catch block around simulations/plugin actions; - add a SofaSimulationException that has an error message, the component that emitted it and can have a backtrace as well as a top level reactions to do (eg: set componentstate to invalid and stop simulation). We should also use this SofaSimulationException at any place we are using msg_error(). ; (Actually it could even make sense to replace the msg_error macro by throwing the exception). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2344:1665,test,test,1665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2344,2,['test'],['test']
Testability,"Currently it is still included in AdvancedTimer so this does not breaks too much external code. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1853:637,test,test,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1853,2,['test'],['test']
Testability,Currently only object are supported by this function which is not consistant; with the rest of Sofa. Eg of consequence you cannot make a PythonScriptDataEngine connecting; data field from nodes (as only object are possible). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/984:476,test,test,476,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/984,2,['test'],['test']
Testability,"Currently the NameDecoder is not using DataTypeInfo<>::name. Probably fix: https://github.com/sofa-framework/sofa/issues/3450. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3465:666,test,test,666,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465,2,['test'],['test']
Testability,"Currently the StackTraces are printed in std::cerr directly from the dump method(). Instead of doing that a new method is added to return the StackTrace as a vector; of strings allowing anyone to retrieve a StackTrace at any point; (including associating one with thrown exception). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2341:822,test,test,822,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2341,2,['test'],['test']
Testability,"Currently the icons in the scene graph are not reflecting the real state of the corresponding component's message log because the icons are set at scene loading and not updated after. This rise consistency issues for dynamic scene which adds at run-time new messages to component's log (see the example below where the messages is emitted on key pressed. . This is a follow up of PR #2398 . The PR produce the expected behavior with this kind of scene; ```python; import Sofa. class MyC(Sofa.Core.Controller):; def __init__(self, *argv, **kwargs):; Sofa.Core.Controller.__init__(self, *argv, **kwargs); self.node = kwargs.get(""target""); ; def onKeypressedEvent(self, event):; Sofa.msg_info(self, ""Info message in the component""); Sofa.msg_error(self.node, ""Error message in the target's node""). def createScene(root):; root.addChild(""Child1""); root.addObject(MyC(name=""Dmaien"", target=root.Child1)); ```. NB: I have considered having a Data<queue<Message>> but given how is implemented Data I need to provide << and >> operator which does not have real sense in this scenario. ; ______________________________________________________; By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3027:114,log,log,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3027,4,"['log', 'test']","['log', 'test']"
Testability,"Currently there is different ways to send messages in Sofa. Each way having its own 'side effects' leading to a different results exposed to the users. . This issues was already partially addressed in Issue https://github.com/sofa-framework/sofa/issues/160 or PR https://github.com/sofa-framework/sofa/pull/106 and others.... . The general goal of this Issue is to finally have only one system all around sofa to increase both code consistency and user interface behavior. ; ; Things to do to make that happen: ; - [x] implementing a per component logging system on top of the msg_api to prove we can replace the existing error logging system. (Done in PR https://github.com/sofa-framework/sofa/pull/106). - [x] replace the existing logging of error it should contains:; - removing the filling of the messages in sout.; - removing the old string based buffer (API BREAK).; - removing all the uses of the old message buffers and replace them with the new one (API BREAK).; - updating the gui to use the new msghandler buffers. - [ ] update sofaQtQuick (but there is no API break). - [x] update runSofa to the buffer API break, at least make it compile/run. - [x] clean the way we handle the printLog (see Issue https://github.com/sofa-framework/sofa/issues/160); - remove/rename the printLog data and implement backward compatibility ; - a replacement solution has to be implement to control the printing.; - a replacement solution has to be implement to control the messages based on a per-component selection of the printed messages. - [ ] extending/unifying the sout/serr with more sdebug/swarning. This must be discussed seriously during a meeting because I currently made a lot of attempts to this but didn't managed to implement a working solution without the sever flawn sout/serr have. If you have ideas on that please make a branch with working proposal so that we have sounded discussion (see Issue https://github.com/sofa-framework/sofa/issues/160). - [x] implementing the improvement of the",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/179:548,log,logging,548,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/179,3,['log'],['logging']
Testability,Currently there is the SOFA_EXTERNAL_DIRECTORY to add out-of-tree; directory in the compilation process. But when this directory contains; plugins those one are not handled the same way as are the one in; application/plugin. To unify that I added a SOFA_EXTERNAL_PLUGIN option and; did minimal change to the 'sofa_add_generic' macro to detect and; handle out of tree directory. So if you want to add external plugin you can use SOFA_EXTERNAL_PLUGIN; instead of SOFA_EXTERNAL_DIRECTORY. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/530:737,test,test,737,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/530,2,['test'],['test']
Testability,"Currently when object are unable to be created there is no filename/line information on where the problem come from. . In this PR I implemented the missing <<operator in messaging.h to report those line number. ; Now you can write: ; ```cpp; msg_info() << SOFA_FILE_INFO_COPIED_FROM(""myPythonFile.py"", 4) << ""blah balh"" ; ```; To have the file name & line number associated in the message emitting information. If you don't the emitting information will be the source code file&line location. . If updated the xml load to take this feature into account. ; The python loader is updated in the PR #304 . ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/314:855,test,test,855,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/314,2,['test'],['test']
Testability,"Currently, if you build Sofa with FFMPEG support, linking SofaFramework to an external project will require to find the FFMPEG_exec target, which will not be found: the cmake script to find the FFMPEG executable isn't installed by the Sofa install process. This FFMPEG executable path is never used in header files, only in cpp, I don't see any reason to force external projects to find it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1177:642,test,test,642,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1177,2,['test'],['test']
Testability,"Currently, passing a nullptr to setLinkedBase just does nothing.; With this PR it breaks the link, (as, IMHO, it should). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1479:373,test,test,373,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1479,2,['test'],['test']
Testability,"Currently, when running runSofa without using the -g option for specifying if we want the GUI or batch, SOFA picks the last used one. I would rather like it to be the GUI all the time, and if you want to run in batch, then you would have to specify it explicitly. The current behaviour is annoying when running SOFA in parallel for example with SOFA launcher, because it then saves the batch mode by default.; I am aware my fix is maybe not perfect, I want to start the debate!; Thank you!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2979:1030,test,test,1030,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2979,2,['test'],['test']
Testability,"Currently:; - there must be a single VisualLoop in the scene; - this single one must be at the root of the scene. ; - there is no way to specify or change what is the rendered node; ; This PR allows to:; - have multiple (possibly different) visual loop in the scene (by updating simulation::draw()). ; - let user select which node to render (by using a SingleLink instead of a c++ attribute to store the node).; ; This is useful as it allows to increase the separation of the different ""concerns"" of an object and it make explicit in the GUI the link between a node and the rendered. . Old scenes are still possible:; ```xml; <DefaultVisualManagerLoop""/>; <Node name=""modelling"">; <Node name=""Tripod"">; </Node>; </Node> ; ```. But now we can also do:; ```xml; <DefaultVisualManagerLoop targetNode=""@/modelling/Tripod""/>. <Node name=""modelling"">; <Node name=""Tripod"">; </Node>; <Node name=""Nothing-to-Display"">; </Node>; </Node> ; ```; Or even; ```xml; <Node name=""modelling"">; <Node name=""Tripod"">; </Node>; </Node>; ; <Node name=""Simulation"">; </Node>. <Node name=""Rendering"">; <DefaultVisualManagerLoop targetNode=""@/modelling/Tripod""/>; </Node> ; ```. Visual example:; ![screen](https://user-images.githubusercontent.com/12644882/146540665-19f952c3-4a9f-4add-af88-47ca9fe2c96b.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2549:1825,test,test,1825,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2549,2,['test'],['test']
Testability,Cython is a de-facto standard to make ease binding between C++ and python. I use it to make 'per plugin' binding and will probably submit some in future PR. ; To ease the writing of cmake of these binding it is nice to detect if cython is installed what this file is doing. . The file is taken from (all credit should go to them):; https://github.com/thewtex/cython-cmake-example. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/734:632,test,test,632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/734,2,['test'],['test']
Testability,DDGNode::addOutput fire assert(false),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1502:24,assert,assert,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1502,1,['assert'],['assert']
Testability,"Data `d_useSymbolicDecomposition` becomes `d_usePrecomputedSymbolicDecomposition` for a better understanding from users. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2904:660,test,test,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2904,2,['test'],['test']
Testability,"Data:; ```; Data< sofa::helper::vector< Real > > d_vertexMass;; Data< sofa::helper::vector< Real > > d_edgeMass;; ...; , d_vertexMass( initData(&d_vertexMass, ""vertexMass"", ""Specify a vector giving the mass of each vertex. If unspecified or wrongly set, another mass information is used."") ); , d_edgeMass( initData(&d_edgeMass, ""edgeMass"", ""values of the particles masses on edges"") ); ```; and topological Data with mechanism to update each other then they are changed or topological changes occurs.; ```; /// Values of the particles masses stored on vertices; topology::PointData<helper::vector<MassType> > d_vertexMass;; /// Values of the particles masses stored on edges; topology::EdgeData<helper::vector<MassType> > d_edgeMass;; ...; , d_vertexMassInfo( initData(&d_vertexMassInfo, ""vertexMassInfo"", ""internal values of the particles masses on vertices, supporting topological changes"") ); , d_edgeMassInfo( initData(&d_edgeMassInfo, ""edgeMassInfo"", ""internal values of the particles masses on edges, supporting topological changes"") ); ```. No need to have 2 sets of Data, topological Data can be used directly as PointData and EdgeData inherite from Data and support topological changes. -> Remove the normal Data but keep the names vertexMass and edgeMass which are used in code and scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2192:1864,test,test,1864,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2192,2,['test'],['test']
Testability,"Dear SOFA community and @sofa-framework/reviewers,. As you know, one of our main objectives is currently to propose a major evolution of SOFA: this is the project ""SOFA-NG"", standing for Next Gen. ; Let us give you some insight about the final plan and the steps to reach these objectives. Any feedback is welcome. ## Objectives. The final objective of SOFA-NG is to refactorize the current (non-core) modules and components by moving them into plugins. It will permit to:; - compile and load only the necessary modules; - clean all dependencies in SOFA; - help focusing the work of validation/verification/doc/test on specific codes; - improve the packaging of codes; - ease understanding the API of SOFA for new users. ## Steps of implementation. Our concerns; - Focus on non-core components only; - Make the transition as smooth as possible; - Keep the history. Steps to follow; - Propose an architecture and a folder structure; - Decide a place for each component (incrementally); - Create the folder structure in SOFA plugins directory; - Pluginize one by one the components towards their new place. Note that this project; - will be documented, scripts will be provided to help the transition in plugins; - is compatible (can be run in parallel) with the deprecation task. ## Proposed structure. ~~https://annuel2.framapad.org/p/sofang-v0~~; EDIT: latest proposal: https://annuel2.framapad.org/p/sofang-v3. As you can see the structure is quite similar to the old namespace structure of SOFA. ; Feel free to edit/comment this pad or to propose your own version.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543:611,test,test,611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543,1,['test'],['test']
Testability,"Debug compilation was failing due to the fact that the header is not supposed to know `vector_access_failure` , defined in the cpp file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1937:676,test,test,676,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1937,2,['test'],['test']
Testability,Define and create the test scenes for elasticity,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/233:22,test,test,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/233,1,['test'],['test']
Testability,Defrost Test week19,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/268:8,Test,Test,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/268,1,['Test'],['Test']
Testability,"Dependency on #760 . This PR mimics the behavior of the DataEngine, by binding the cleanDirty method in python, and not calling cleanDirty before calling update(); Furthermore, update() is not called from OnBeginAnimationStep events anymore, but only through the natural DDGNode update mechanism. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751:548,test,test,548,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751,2,['test'],['test']
Testability,Depends #814; This PR renames DataTrackerDDGNode's isDirty() method to hasChanged() to reduce confusion between hasChanged and BaseData::isDirty(). It depends on #814 because replacing update with doUpdate forces the replacement of calls to data.isDirty() with m_dataTracker.isDirty(data) which means some extra calls are added in #814. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/822:588,test,test,588,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/822,2,['test'],['test']
Testability,"Depends on #1226 . This PR provides a callback method in Base to easily connect DDGNodes (inputs & outputs) within a component, through the use of DataTrackerEngines. It is inspired by a POC from @damienmarchal in a branch we have in SofaDefrost/sofa.; The syntax to create a callback is the following:. ```cpp; addUpdateCallback(""dataTrackerEngineName"", {&inputs}, []()->ComponentState{; // Some code in a lambda setting the componentState by return value; }, {&outputs});; ```; This method will create a DataTrackerEngine in a map within Base, give it a name, set this as its owner, set the given list of inputs and outputs for the engine, and finally, use the given lambda as a delegate method for the update() function of the engine (delegate, because engine->updateAllInputsIfDirty() is called before the lambda, and engine->cleanDirty() is called after... just like a normal engine.). The test in SofaSimulationGraph_test/DDGLink_test.cpp has been updated to show how to use it in a simple class with 1 input / 1 output. Actually, the code doesn't work... I get an ugly exception when my engine tries to call the delegate lambda:; ```; unknown file: Failure; C++ exception with description ""bad_function_call"" thrown in the test body.; ```. No idea what this is, if you have suggestions, please don't hesitate to correct me or tell me what I did wrong... ;); Enjoy the WE =). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1227:895,test,test,895,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1227,4,['test'],['test']
Testability,"Depends on #3426 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3429:558,test,test,558,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3429,2,['test'],['test']
Testability,"Depends on #740 ; Part 2 of #629 This PR allows PSDEs to derive the type of their I/O datafields according the what they are linked to (position=""@../whatever""). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/742:413,test,test,413,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/742,2,['test'],['test']
Testability,"Depends on #740 and #742 ; Part 3 of #629 This PR allows you to create PSDE component in your scene the same way you do with Cpp engines, by calling createObject() and passing your Input/output datafields directly there. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/743:472,test,test,472,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/743,2,['test'],['test']
Testability,"Depends/include PR #2192 and PR #2191. [ci-depends-on https://github.com/sofa-framework/regression/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2193:648,test,test,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2193,2,['test'],['test']
Testability,"Deprecation messages popping while compiling the deprecated thing is a bit annoying so this PR disables the warnings while building the deprecated stuff. ~~\+ remove (real) deprecation warnings about the usage of rebind~~. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3236:762,test,test,762,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3236,2,['test'],['test']
Testability,"Deprecation warnings were displayed at every `#include <sofa/defaulttype/VecTypes.h>`; They are now emitted only when using the deprecated types ExtVec*. @fredroy Is there a reason you did not use inherited structs in the first place?. Also, could someone explain why putting the `[[deprecated]]` attribute on a `using` alias does not emit a warning only when the alias is used?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1139:631,test,test,631,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1139,2,['test'],['test']
Testability,"Deprecation/Removal macros (for TData,Link, etc) wants an argument (message) but they are called a lot of times without any.; On Windows/MSVC2019, this generates **A LOT** of warnings (>40k halfway of a standard build). ```; warning C4003: not enough arguments for function-like macro invocation 'SOFA_ATTRIBUTE_DEPRECATED__CLASSNAME_INTROSPECTION'; ```; for example.; The dashboard does not take them into the global number of warnings, but still appears in the log file.; And it seems only triggered with MSVC compilers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1876:463,log,log,463,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1876,3,"['log', 'test']","['log', 'test']"
Testability,"Description is in the code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3584:567,test,test,567,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3584,2,['test'],['test']
Testability,"Detected by the CI sporadically.; The crash is triggered ""correctly"" when executing in Debug mode. The problem comes from the fact that the stored Jacobian matrix is not updated when the model (i.e mechanicalObject) is modified topologically.; There are some problems still with topological changes (#2242 ) so I opted for a check every time projectResponse() is called.; Not ideal so would need to be changed once topological changes mechanism is finished. Also create a updateJacobian() method (instead of reinit()). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2241:1058,test,test,1058,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2241,2,['test'],['test']
Testability,"Detected from the task ""remove warnings"" #2378 , and decided to put them into a different PR.; It will easier to read or analyze the code (and to revert in case of...). Each commit should fix one class. One of the worst problem (mainly located in topology classes ) is that ""Coord"" was always supposed to be a Vec3, but could be a Vec2 (from the instanciation with Vec2Types), thus doing a out-of-bound access. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2379:950,test,test,950,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2379,2,['test'],['test']
Testability,"Did not follow the move in examples/Component; - #3588 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3674:596,test,test,596,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3674,2,['test'],['test']
Testability,"Do we allows data field's name with spaces ? . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5002:586,test,test,586,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5002,2,['test'],['test']
Testability,Done in :; - SofaBaseTopology; - SofaCore; - CGALPlugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1376:308,test,test,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1376,2,['test'],['test']
Testability,"Downcasting from a base class to a child would be much better handled with an explicit dynamic_cast or a static_cast (or a q_cast as pointed by @untereiner) than with an implicit C-cast.; ____________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1816:725,test,test,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1816,2,['test'],['test']
Testability,"Due to SofaGeneral' s modularization.; Stumbled on the issue while doing PR #1646... [SofaOpenCL is not enabled on the CI]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1647:663,test,test,663,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1647,2,['test'],['test']
Testability,"Due to multiple final definition error, the plugin was not compiling anymore. Virtual inheriting was necessary.; Fix warnings and templating due to last VecTypes change. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1019:421,test,test,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1019,2,['test'],['test']
Testability,"Due to the static nature of the ObjectFactory, the alias survived the destruction of a MakeDataAliasComponent. It is a problem if the program continues and still uses the ObjectFactory. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2832:725,test,test,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2832,2,['test'],['test']
Testability,"During a discussion with @olivier-goury, it appeared that the sofa-launcher script was needed to use the MOR plugin. So when using this plugin, the users needed to download the sofa sources to get access to it because it was not shipped in the binaries. . This pr adds this folder to the install/releases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4245:845,test,test,845,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4245,2,['test'],['test']
Testability,"During my Way of the Cross of fusing StiffSpring and its parent, I saw that the topological change of removing points didn't work as planned for topologySubsetIndices when there is multiple occurrence of the same element in the data. . I've fixed that and added tests. . One question is remaining though : here I kept the original mechanism using a swap of the deleted element and the last one. This is efficient in term of memory but it has the side effect of changing the indices order in the data. ; --> My question is, *is that what we want ?* Do we prefer memory/time efficiency over order coherency for this data ? Is it logical to get a random order of the vector out of a simple topological change ? This answer will change a bit the way I'll finish the refactoring in https://github.com/sofa-framework/sofa/pull/4649 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4738:262,test,tests,262,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4738,4,"['log', 'test']","['logical', 'test', 'tests']"
Testability,"During my peregrinations .. significant changes for the SOFA beauty :tulip: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3975:617,test,test,617,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3975,2,['test'],['test']
Testability,"During remove process inside `TopologySubsetData` the current Data was being modified but the method `TopologySubsetIndices::indexOfElement` was also called.; This method was using: ; `const container_type& data = this->getValue();` which call updateIfDirty messing WriteAccessor in the caller method.; Fix it by using directly: `const container_type& data = m_value.getValue();`. The others modifications are just better logs for debug. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3330:422,log,logs,422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3330,3,"['log', 'test']","['logs', 'test']"
Testability,"Dynamic data field added from the mechanical object are not using the ""addData"" method. The drawback is that they are not registered in the ""alias"" map which is used in getData/findData to query the data by name. . In addition the name added there are using a weird naming schema by post-fixing the type of the vector so to the name ""constraint_dx"" is associated the ""constraint_dx(V_DERIV)"" datafield which is and conflicting with python syntax. . I may be an option to fix the bug and deprecate that behavior... but it may be breaking (if two data have conflicting base names that was not conflicting before due to the postfixing of the typename).; ; This should solve the issue reported in discussion #3779. _____________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3783:1249,test,test,1249,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3783,2,['test'],['test']
Testability,"Each readXX method exists in two implementation. One that takes State* while the other is taking a SingleLink<State>. Given that from a SingleLink<State> one can get the corresponding State* using the get() method it is questionable why to maintain two set of methods for the same service. To mimimize the surface of the API I removed the link based version and update the code base accordingly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3304:935,test,test,935,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3304,2,['test'],['test']
Testability,"Easy quicky. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1614:552,test,test,552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1614,2,['test'],['test']
Testability,"Edge2QuadTopologicalMapping needs QuadSet container and modifier, and was merely just searching into its node for them, with no check whatsoever. So if one of the two was not present, a crash happened without any warning/error... So in this PR, links are added (so no need to search the context every time), warn the user if not set and let the component to Invalid. \+ some cleanups for good measure. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4361:941,test,test,941,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4361,2,['test'],['test']
Testability,"Embedded external libs (DiffLib, Json and STB) rely on cmake variables (resp. DIFFLIB_ROOT, JSON_ROOT and STB_ROOT) as HINTS / PATHS for find_path() in their respectives cmake find modules (FindDiffLib.cmake, FindJson.cmake and FindSTB.cmake). ; If CMAKE_FIND_ROOT_PATH is set (typically the case when cross-compiling and for my concerns when building a Conda package for Sofa), default behavior is to prepend all contained paths to the search performed by the find_path() calls. But as the *_ROOT variables are set with absolute paths, the search for these embedded libs will typically fail. ; This PR disables the use of CMAKE_FIND_ROOT_PATH for these libs. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3870:1199,test,test,1199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3870,2,['test'],['test']
Testability,Enforcing python module reload (to use their eventual modifications). Note it could easily be added manually to the scene we are working on rather than doing it automatically at each scene loading. Based on @damienmarchal code!!!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; - [x] #204 is merged. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/202:456,test,test,456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/202,1,['test'],['test']
Testability,"Ensure data_->getHelp() is not null.; If it's null an empty string will be used, instead of make runSofa crash. EDIT : fixes #381 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/382:383,test,test,383,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/382,2,['test'],['test']
Testability,"Entering into init() is only allowed if the component is in a non ready state. ; Implement basic checking on two problematic component that emits warning/error messages when emitted twice. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3054:728,test,test,728,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3054,2,['test'],['test']
Testability,Error at component creation not reported in the log,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/378:48,log,log,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/378,1,['log'],['log']
Testability,"Error due to passing const & to temporary vector created inside the method. Use ref to static vector instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2459:649,test,test,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2459,2,['test'],['test']
Testability,"Error message was already fired if mesh file is not found. This PR just avoid the crash at init.; Only add some check in the finest level and set it to invalid if topology is not loaded.; Then propagate the invalid status to the higher level. fix #4162 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4164:794,test,test,794,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4164,2,['test'],['test']
Testability,"Error message when the creation of an object fails are difficult to read and it isn't always obvious where the error is. With this PR, the message is a little bit more clear. Now we only need to add error message inside the components `canCreate` methods (see the changes I made in the `ForceField` class in this PR). Before:; ![image](https://user-images.githubusercontent.com/6951981/75893831-a9015000-5e33-11ea-8871-ae414f1f8208.png). After:; ![image](https://user-images.githubusercontent.com/6951981/75893859-b0285e00-5e33-11ea-8318-12c484a4852a.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1266:808,test,test,808,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1266,2,['test'],['test']
Testability,"Error where displayed when using generated binaries on another computer. I'm not sure why this didn't happend when it was launched on the computer that built the binaries... . The path comparison didn't work when they weren't in a canonical form. This method only appeared in c++17, but if I am right we only support the c++ version of the two last LTS, 22.04 distributing gcc11 which provides a full support of c++17. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4754:960,test,test,960,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4754,2,['test'],['test']
Testability,"Especially relevant for clang compilers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1630:580,test,test,580,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1630,2,['test'],['test']
Testability,"Even if it's not a good practice, it is possible to call `BaseObject::init()` several times.; In most cases, `DataEngine::init()` was the place where input and output Data were defined. Therefore, input and output could be defined several times, but it is not advisable.; This PR moves the input/output definition from the `init()` method to the constructor. Therefore, `init()` could be called multiple times safely (regarding only the input/output). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2825:991,test,test,991,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2825,2,['test'],['test']
Testability,"Even if this pattern is a code smell, this call was missing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4432:600,test,test,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4432,2,['test'],['test']
Testability,"Events were propagated to objects through a visitor, and applied on the list of objects contained in each Node. However, if an object is a child of another, it is not in the list of the Node. Therefore, the event is not propagated to this object. The event is also propagated to children in this PR. ; I also added a security in case the object appears multiple times in the graph.; Finally, I make a copy of the list before processing the list, so that the event can modify the graph during the iterations. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2348:1047,test,test,1047,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2348,2,['test'],['test']
Testability,Every plugin/module in SOFA should handle its dependencies and errors itself. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/608:329,test,test,329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/608,2,['test'],['test']
Testability,"Everything depending on Metis is now in moved in https://github.com/sofa-framework/Sofa.Metis. [ci-depends-on https://github.com/sofa-framework/CSparseSolvers/pull/3]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4588:707,test,test,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4588,2,['test'],['test']
Testability,"Everything in the title : data.setValue(XXX) does not take params as parameter anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1869:627,test,test,627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1869,2,['test'],['test']
Testability,Everything is in the name.; I checked compilation on Linux. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1427:311,test,test,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1427,2,['test'],['test']
Testability,Everything is in the title !; Towards a really clean and green dashboard !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/584:327,test,test,327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/584,2,['test'],['test']
Testability,"Everything is in the title!. Now we can go on holiday!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1976:595,test,test,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1976,2,['test'],['test']
Testability,"Everything is in the title.; Also update SOFA version in CMake to `18.06.dev`. From source dir: `./scripts/licenseUpdater/licenseUpdater.sh . auto 2018 ""development version""`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/585:427,test,test,427,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/585,2,['test'],['test']
Testability,Everything is is in the title. The test was wrong. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/405:35,test,test,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/405,3,['test'],['test']
Testability,Everything is the title; and replace it with AdvancedTimer! Cheers!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1267:320,test,test,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1267,2,['test'],['test']
Testability,"Example scenario [scene.txt](https://github.com/sofa-framework/sofa/files/2894540/scene.txt). Result is not physically plausible. Points of junction seem to be “heavier” than the others. They then gain speed, and the whole thing turn into a windmill. No crash.; You can compare the results using the commented section in the scenario of the initial post (section # This does not work / # Works). Log does not provide any useful information other than INFO messages (loaded plugins, etc). Problem exist both on master and 0057a0cfd3d3fb6b9b3cdb00ca22eae4c17ae384 (So before latest refactor of AttachConstraint).; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/940:396,Log,Log,396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/940,1,['Log'],['Log']
Testability,"Example scene files are in ""scenes"" directory and not in ""examples"" directory,; as expected by CMake install command. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/299:369,test,test,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/299,2,['test'],['test']
Testability,"Expanding Node (with the context menu) was leading to a stack overflow.; This PR corrects it. Fix #2057 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2069:645,test,test,645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2069,2,['test'],['test']
Testability,"Explicit and implicit conversion to scalar are introduced for matrices 1x1. Unit tests are added. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3498:81,test,tests,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3498,3,['test'],"['test', 'tests']"
Testability,"Explicit instanciation of FullMatrix and FullVector for float, double and bool; Move code definition from header (.h) to translation unit (.cpp or .inl).; Forward declare Mat<> in sofa/type/fwd.h; Replace AClass::Index with the generic sofa::Index; . If you were using AClass::Index, use sofa::Index instead; If you do your own template instanciation don't forget to include the corresponding .inl file instead of the .h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1792:961,test,test,961,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1792,2,['test'],['test']
Testability,"Explicit instanciation of `list<const sofa::core::topology::TopologyChange*>;` was moved to _TopologyChange_ files from _TopologyHandler_ in #1912; But it seems it was (wrongfully) introduced again in _TopologyHandler_ in #1898 (I suppose from a merge). This PR just remove the duplicated explicit instanciation. NB: Seems weird to me that the CI does not say anything? (maybe a compiler option avoids this); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1981:948,test,test,948,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1981,2,['test'],['test']
Testability,"Explicit instantiation of some common template for `CompressedRowSparseMatrix`.; This is to force the template specialization of some functions for specific templates (function `add` and `filterValues`). Before, template was specialized, but not in the right way. The specialization was not taken into account.; Also, `filterValues` has been factorized (1 function instead of 4 identical functions). Now, `add` uses the correct specialization when it is used in a force field (badly introduced in #2281). It comes with the expected speed up. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2306:1081,test,test,1081,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2306,2,['test'],['test']
Testability,ExplicitConversion<sofa::type::vector<sofa::type::Vec3>>/1000000 6556092 ns 6666667 ns 75; BM_Data_ReadAccessor_StarOperatorConversion<int> 2.61 ns 2.62 ns 280000000; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<int>>/10000 2.59 ns 2.55 ns 263529412; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<int>>/100000 2.58 ns 2.55 ns 263529412; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<int>>/1000000 2.60 ns 2.61 ns 263529412; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<sofa::type::Vec3>>/10000 2.80 ns 2.83 ns 248888889; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<sofa::type::Vec3>>/100000 2.76 ns 2.76 ns 248888889; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<sofa::type::Vec3>>/1000000 2.80 ns 2.76 ns 248888889; ```. After:. ```; ------------------------------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------------------------------------------------; BM_Data_GetValue<int> 2.26 ns 2.26 ns 248888889; BM_Data_GetValue<sofa::type::vector<int>>/10000 2.13 ns 2.15 ns 320000000; BM_Data_GetValue<sofa::type::vector<int>>/100000 2.14 ns 2.14 ns 298666667; BM_Data_GetValue<sofa::type::vector<int>>/1000000 2.14 ns 2.15 ns 320000000; BM_Data_GetValue<sofa::type::vector<sofa::type::Vec3>>/10000 2.00 ns 2.01 ns 373333333; BM_Data_GetValue<sofa::type::vector<sofa::type::Vec3>>/100000 1.94 ns 1.90 ns 344615385; BM_Data_GetValue<sofa::type::vector<sofa::type::Vec3>>/1000000 2.01 ns 2.01 ns 373333333; BM_Data_ReadAccessor_ImplicitConversion<int> 2.88 ns 2.85 ns 235789474; BM_Data_ReadAccessor_ImplicitConversion<sofa::type::vector<int>>/10000 2.81 ns 2.83 ns 248888889; BM_Data_ReadAccessor_ImplicitConversion<sofa::type::vector<int>>/100000 3.02 ns 3.01 ns 248888889; BM_Data_ReadAccessor_ImplicitConversion<sofa::t,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2583:3213,Benchmark,Benchmark,3213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2583,1,['Benchmark'],['Benchmark']
Testability,"Externalize the plugin SofaSphFluid and add the fetching mechanism. This aims at disabling the regression tests when it is not built (e.g. for default configurations on the CI). I've externalized the plugin here: https://github.com/sofa-framework/SofaSphFluid and kept the history of changes. [ci-depends-on https://github.com/sofa-framework/Regression/pull/61]; [ci-depends-on https://github.com/sofa-framework/ci/pull/46]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4526:106,test,tests,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526,3,['test'],"['test', 'tests']"
Testability,"Extract the LMConstraint-related codes from SOFA and store it into a plugin. Fix #976. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1659:626,test,test,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1659,2,['test'],['test']
Testability,"ExtrudeQuadsAndGenerateHexas does exactly what the name says. ; The point order used when generating the hexas was causing different issues:; - mapping fallure ; - inverted forces (e.g. gravity and mouse spring). This PR allows to change the point order and fixes the issues.; The PR also adds two examples, one for Edge2QuadTopologyMapping, and one for ExtrudeQuadsAndGenerateHexas. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1673:923,test,test,923,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1673,2,['test'],['test']
Testability,"FA_study/SOFA_v23.06.00_MacOS; --- PYTHONPATH ---; /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages:/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages:/path/to/SofaPython3/lib/python3/site-packages:; --- sys.path ---; ['', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/path/to/SofaPython3/lib/python3/site-packages', '/opt/anaconda3/envs/sofarl/lib/python38.zip', '/opt/anaconda3/envs/sofarl/lib/python3.8', '/opt/anaconda3/envs/sofarl/lib/python3.8/lib-dynload', '/opt/anaconda3/envs/sofarl/lib/python3.8/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import Sofa; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; ---------------------------------------; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; import Sofa.Helper; ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:4835,Log,Logs,4835,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,1,['Log'],['Logs']
Testability,FILE should stay a C keyword for managing FILE. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1465:299,test,test,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1465,2,['test'],['test']
Testability,FIX allows to extend VTKExporter in a plugin (for quadratic meshes for example). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/309:332,test,test,332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/309,2,['test'],['test']
Testability,FIX install path for headers in `unsupported/Eigen`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1240:304,test,test,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1240,2,['test'],['test']
Testability,FIX issue #757 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/813:268,test,test,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/813,2,['test'],['test']
Testability,"FIX qt target handling. ; The QT_TARGETS variable used to store qt targets that the project depends on, was overridden by the libQGLViewer CMakeLists. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4354:692,test,test,692,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4354,2,['test'],['test']
Testability,FIX scene: update GenerateGrid usage to match current component interface. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/303:326,test,test,326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/303,2,['test'],['test']
Testability,FIX some scene files using the mass and having issues with mass datanames (_totalmass_ instead of _totalMass_); FIX initialization in UniformMass.cpp due to wrong default filename in Rigid case. Fix #724. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/779:456,test,test,456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/779,2,['test'],['test']
Testability,"FIX this Regression_test error: ""Condition IsValidParamName(param_name) failed. Parameterized test name 'EulerExplicitSolver-diagonal' is invalid"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1881:94,test,test,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1881,3,['test'],['test']
Testability,"FIX: Name of a parameter (allowing to select incremental potential energy): before, the name contained spaces, was replaced by useIncrementalPotentialEnergy. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/624:409,test,test,409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/624,2,['test'],['test']
Testability,"FIX: a bug which appeared when the simulation is restarted without restarting SOFA. There is a map-vector (mapOrient) which was not cleared properly (unlike his friend ""map"") which was. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/710:439,test,test,439,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/710,2,['test'],['test']
Testability,FSEvents; 0x7fff27414000 - 0x7fff27438fff com.apple.coreservices.SharedFileList (144 - 144) <C861FAD6-D3A5-302C-88AE-B2813F7201A7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList; 0x7fff27439000 - 0x7fff2743bfff libapp_launch_measurement.dylib (14.1) <2BBB708C-4D91-364E-ABD0-39BF198688A6> /usr/lib/libapp_launch_measurement.dylib; 0x7fff2743c000 - 0x7fff27484fff com.apple.CoreAutoLayout (1.0 - 21.10.1) <7A2E42E6-3AF2-3ECB-8A16-5C4AC41206EE> /System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout; 0x7fff27485000 - 0x7fff27567fff libxml2.2.dylib (34.9) <E0BF29C7-869B-3DD5-82AE-F36E6398091A> /usr/lib/libxml2.2.dylib; 0x7fff27568000 - 0x7fff275b4fff com.apple.CoreVideo (1.8 - 408.4) <50857F8D-C7CC-3609-B0DB-FC3C7382243B> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo; 0x7fff275b5000 - 0x7fff275b7fff com.apple.loginsupport (1.0 - 1) <B149BCAF-854C-3820-809D-15C6077FFB8B> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport; 0x7fff275b8000 - 0x7fff275e0fff com.apple.aps.framework (4.0 - 4.0) <D86ED827-F22D-3A52-B055-251478B29AE1> /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService; 0x7fff275e1000 - 0x7fff275fefff com.apple.UserManagement (1.0 - 1) <B6B35079-3860-384F-B7A2-584192BAAE70> /System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement; 0x7fff275ff000 - 0x7fff2779efff com.apple.cloudkit.CloudKit (970 - 970) <58BD254C-AAF1-3CC5-AAB7-2EF0A70BA033> /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit; 0x7fff27822000 - 0x7fff27bc7fff com.apple.CoreML (1.0 - 1) <21D89ABE-2DEC-3099-81CC-78D9ADB9D12B> /System/Library/Frameworks/CoreML.framework/Versions/A/CoreML; 0x7fff2851b000 - 0x7fff28598fff com.apple.corelocation (2420.12.16 - 2420.12.16) <8BD49018-78D4-3A81-88AD-47DE1A8E3BFE> /System/Library/Frameworks/Co,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:30914,log,login,30914,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['log'],['login']
Testability,"Factories were used only with `std::string` as a key. That is why it was not noticeable that factories were not compatible with other types than `std::string` as the key.; The limitations come from:. - `logFactoryRegister` assumed `Key` is a string. It is now a template function.; - `Creator` inherits from `Key` and instances was used such as it was a string. Now, `Creator` no longer inherits from `Key` but just stores the key as a class member. A unit test is added for enum type as a key. Small downside: `std::string& getFactoryLog()` is now available outside the translation unit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2259:203,log,logFactoryRegister,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2259,4,"['log', 'test']","['logFactoryRegister', 'test']"
Testability,"Factorize all compatibility code in the SofaFramework (GL, Helper, Defaulttype, Core) into a common module, to simplify maintainability. For now, it is forcefully loaded for all the modules, as no code has been ported to the new architecture yet. In the future, this module should be optional (and its inclusion in an other cmake file in a module/ directory for example). (out-of-tree configuration tested with SofaPython3); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1944:399,test,tested,399,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1944,3,['test'],"['test', 'tested']"
Testability,"Factorize default plugin list filtering and review which plugin are removed from the default list. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4748:640,test,test,640,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4748,2,['test'],['test']
Testability,"Factorize:; - use updateIfDirty in BaseData.h; - in Data.h in the beginEdit function use: beginWriteOnly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1569:645,test,test,645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1569,2,['test'],['test']
Testability,Failing unit tests without compatibility layer,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3389:13,test,tests,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3389,1,['test'],['tests']
Testability,"FastTetrahedralCorotationalForceField initialized its Poisson's ratio and Young's modulus with different values than the other tet FEM force fields. TODO:. - [x] Update tests; - [x] Update doc: https://github.com/sofa-framework/doc/pull/83. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3563:169,test,tests,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3563,3,['test'],"['test', 'tests']"
Testability,"File `CudaTypes.cpp` is removed as it does not contain anything else than explicit template instantiations that are already instantiated in `CudaMultiMapping.cpp`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3807:703,test,test,703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3807,2,['test'],['test']
Testability,"FileRepository needs to be checked and fixed. It does not work for sure in some situations, e.g. if a sofa install is copied in a path containing accents on windows, FileRepository does not find the files. Note I have not go any further, and everything needs to be investigated.; I did not test with the distributed, precompiled package. I did not test on linux...",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/17:290,test,test,290,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/17,2,['test'],['test']
Testability,"Final PR for the modularization of SofaGeneral. #1529; SofaGeneral is going to be a collection (set of modules).; So for now, it wont be breaking to do ; `find_package(SofaGeneral)` ; and ; `target_link_library(blabla PUBLIC SofaGeneral)` . But now it is recommended to only find and link the module you need (like SofaMisc and SofaAdvanced actually). This PR is slightly breaking for applications calling initSofaGeneral(), as it should not be called anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1596:1000,test,test,1000,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1596,2,['test'],['test']
Testability,Finally apply the doUpdateInternal to MeshMatrixMass; This class should definitely be in SofaBaseMechanics ... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1151:362,test,test,362,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1151,2,['test'],['test']
Testability,"Finally decided to remove the warning; `The collection SofaSimulation (/home/fred/sofa/src/current/applications/collections/deprecated/SofaSimulation) does not exist and will be ignored.` at every cmake config step. I guess this collection thingy should be deleted in the future anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4320:826,test,test,826,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4320,2,['test'],['test']
Testability,"Finally, here it is! . Please edit this description to complete the changelog:; - Remove all SOFA_EXTERN_TEMPLATE; - Remove all #ifdef SOFA_DEV; - Remove PS3 and XBOX code; - Remove SOFA_SUPPORT_MAPPED_MASS; - Remove into weird #pragma once ; - Remove commented code.; - Replace conditionally compiled code.; Eg: ; ```cpp; #ifndef NDEBUG; serr << ""Loop for computing connexity has reach end."" << sendl;; #endif; ```; By a systematically compiled version; ```cpp; if (CHECK_TOPOLOGY); msg_error() << ""Loop for computing connexity has reach end."";; ```; - Remove all code using #define SOFA_NEW_HEXA; - Add macro CHECK_TOPOLOGY (see above) to turn all topology component in verbose mode; - FIX several dll macro missing in Base and Mesh collisions. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/834:998,test,test,998,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/834,2,['test'],['test']
Testability,"First plugin to be moved out, as detailed in issue #1442 ; Plugin is now located here: https://github.com/sofa-framework/InvertibleFVM. All feedback are more than welcome. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1443:423,test,test,423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1443,2,['test'],['test']
Testability,"First step in post-NG cleaning work :muscle: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2958:586,test,test,586,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2958,2,['test'],['test']
Testability,"First step of cleaning for the SOFA lifecycle ahead of the v23.12. [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/101]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4034:678,test,test,678,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4034,2,['test'],['test']
Testability,"First step to remove OBBMode/CapsuleModel from SofaBaseCollision, as those primitives are not really deemed as ""basic"".; They are instead displaced into SofaMiscCollision, with other custom primitives. The code in DiscreteIntersection, etc is much clearer in this way, and leads to less cluttering in dependencies. Next steps:; - refactor Intr* utilities classes; - refactor FixParticlePerformer; - finally move OBBModel and CapsuleModel (and their sidecar files) into SofaMiscCollision. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2073:1027,test,test,1027,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2073,2,['test'],['test']
Testability,"First steps for a consistent, uniformed and centralized configuration storage. This PR adds the ability to retrieve the current local config folder for the user. . These return respectively (local account is `fred`):; - Linux:; ```; getUserLocalDirectory(): /home/fred/.config; getSofaUserLocalDirectory(): /home/fred/.config/SOFA; ```. - macOS:; ```; getUserLocalDirectory(): /Users/fred/Library/Application Support; getSofaUserLocalDirectory(): /Users/fred/Library/Application Support/SOFA; ```; - Windows:; ```; getUserLocalDirectory(): C:/Users/Fred/AppData/Local; getSofaUserLocalDirectory(): C:/Users/Fred/AppData/Local/SOFA; ```. `getSofaUserLocalDirectory()` creates also the directory if it is not created yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4875:1259,test,test,1259,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4875,2,['test'],['test']
Testability,"First steps to move TopologyData/Change into Sofa.Core (see #2402). The goal of this PR is to remove *TopologyContainer dependencies in TopologyData mechanism.; TopologyHanderData has direct dependencies on *TopologyContainer because it wants to link their specific Data(d_edges, d_triangles, etc) into a list of engines handled by itself.; It should not know how a topology is managing its data IMO.; So this PR:; - is abstracting the function to add a Data to list of engines ; - change the way how the engine lists is managed: each Subclass was setting its engine list (edgeset and then triangleset and then....), now the base class is storing a vector of list of engines (indexed on the type of topology); - removes the direct dependency on TopologyContainer in TopologyHandlerData.inl. After this PR, all Topology*Data mechanism will be moved in to Sofa.Core, along Topology* class (sofa::core::topology). NB: I let the code building a dep graph which was done for debugging purpose, but it is matter of discussion to keep it or not); . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2387:1581,test,test,1581,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2387,2,['test'],['test']
Testability,"First task of https://github.com/sofa-framework/sofa/issues/2483. - Replace newmat with Eigen in TriangularFEMFF and PlasticMaterial (used only to do a JacobiSVD); - Remove the use of NewMatMatrix in HexahedronCompositeFEMForceFieldAndMass. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2531:780,test,test,780,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2531,2,['test'],['test']
Testability,"First task of removing(deprecating) the usage of nodeData (noticed in #4327). Those two visitors are using the pointer nodeData for local computations so It was changed to local (weak) stored pointers. ; Not fan of pointers but it does not break API. (a SReal to count is weird btw). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4328:823,test,test,823,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4328,2,['test'],['test']
Testability,"Fix #1166. @jnbrunet @marques-bruno Is this reasonable to definitely remove the DataTrackerEngine and its test although we did not end the work on DataUpdate?. For review, maybe pay a specific attention to Binding_base and generateTypedefs/Main.cpp. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1238:106,test,test,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1238,3,['test'],['test']
Testability,Fix #1209. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1221:262,test,test,262,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1221,2,['test'],['test']
Testability,"Fix #1507. ~~Breaking for code using vector of Vec4f with the drawtools~~. + with deprecation for methods using Vec4f; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1626:658,test,test,658,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1626,2,['test'],['test']
Testability,"Fix #1568 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1627:551,test,test,551,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1627,2,['test'],['test']
Testability,"Fix #1597; Final PR for the modularization of SofaCommon. . SofaCommon is going to be a collection (set of plugins).; So for now, it wont be breaking to do; find_package(SofaCommon); and; target_link_library(blabla PUBLIC SofaCommon). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1609:774,test,test,774,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1609,2,['test'],['test']
Testability,"Fix #1702. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1785:550,test,test,550,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1785,2,['test'],['test']
Testability,"Fix #1784. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1789:550,test,test,550,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1789,2,['test'],['test']
Testability,"Fix #1841 . + a little bit of cleaning. And Fix #1884 (not related but very small fix indeed); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1914:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1914,2,['test'],['test']
Testability,"Fix #1867. Follow the PR on Sofa.GL; Reminder: ; - do not use the **_cmake variable_** SOFA_NO_OPENGL in the cmake files. Instead, use `sofa_find_package(Sofa.GL)` and Sofa.GL_FOUND,; - neither the **_preprocessor macro_** SOFA_NO_OPENGL in your h/cpp files. Instead, use the preprocessor macro YOURPLUGINNAME_HAVE_SOFA_GL (generated from the previous `sofa_find_package(Sofa.GL)` ). What this PR does:; - Propagate the removal of the **_preprocessor macro_** SOFA_NO_OPENGL in almost all the plugins; - remove in Sofa.Config the file option build_option_opengl.h , which has the nice effect to not recompile ALL sofa if you enable/disable the **_cmake option__** SOFA_NO_OPENGL; - some cmake fixes, in sofacuda especially. Breaking because of the removal of build_option_opengl.h, thus SOFA_NO_OPENGL is not defined anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1888:1365,test,test,1365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1888,2,['test'],['test']
Testability,"Fix #1931. Still a question about the value to compare float/double against. numeric_limits<real>::epsilon()? min() or a fixed value like 1e-100 (previous value of MIN_DETERMINANT) ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1932:723,test,test,723,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1932,2,['test'],['test']
Testability,"Fix #2056 . May be fix rendering issues for people using VisualManagerSecondaryPass. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2068:624,test,test,624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2068,2,['test'],['test']
Testability,"Fix #2159. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2405:550,test,test,550,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2405,2,['test'],['test']
Testability,"Fix #2426. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2427:550,test,test,550,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2427,2,['test'],['test']
Testability,"Fix #2955 . \+. Some tests were missing from the sofang move (presently from SofaBoundaryCondition), so they have been ported to S.C.MechanicalLoad_test and S.C.Constraint.Projective_test (and are using the new paths, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2991:21,test,tests,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2991,3,['test'],"['test', 'tests']"
Testability,"Fix #3531 (see last comment). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3886:569,test,test,569,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3886,2,['test'],['test']
Testability,"Fix #3878. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3920:550,test,test,550,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3920,2,['test'],['test']
Testability,"Fix #4186 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4187:551,test,test,551,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4187,2,['test'],['test']
Testability,"Fix #4321 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4330:551,test,test,551,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4330,2,['test'],['test']
Testability,"Fix #4416. This PR should allow to merge #4410. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4425:587,test,test,587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4425,2,['test'],['test']
Testability,"Fix #528. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2121:549,test,test,549,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2121,2,['test'],['test']
Testability,"Fix #632 . The plugin list was never updated if we removed a plugin in the cmake configuration.; Plus, it was possible to append several identical targets. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/645:407,test,test,407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/645,2,['test'],['test']
Testability,Fix #795 hopefully .; Problem comes from the interpolation between starting and final position: was working well for vec3d but not well for Rigids by messing up the quaternion.; New implementation not optimum as some code bits are copy-pasted.; Please comment!; Olivier. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/824:522,test,test,522,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/824,2,['test'],['test']
Testability,"Fix #809; Following the STC decision to replace the DataEngine with the SimpleDataEngine, here's the PR that does just that. This replacement involves taking every engine in Sofa and:; - replacing its **update()** method with the new delegate **doUpdate()**.; - Remove the calls to **data.isDirty()** and (smartly) replacing them with **m_dataTracker.isDirty(data)**; - Remove the **cleanDirty()** calls while making sure we don't break the engine's behavior. Most engines present in SOFA are either in SofaGeneralEngine or SofaMiscEngine. ______________________________________________________ ; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/814:792,test,test,792,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/814,2,['test'],['test']
Testability,"Fix #957 . Breaks:. 1. as extvec3 and vec3 are synonyms, compilation will fail if templates are instanced on Vec3 and ExtVec3. Especially for mapping:; e.g: ; `SomeMapping<Vec3Types, ExtVec3Types>; SomeMapping<Vec3Types, Vec3Types>`. this will fail because the compiler will try to instanciate SomeMapping twice with the same types. 2. scenes where a mechanicalobject, an OglModel and a mapping are present in the same node:; e.g:; ` <Node>; 	 ....; <MechanicalObject name=""DOFs"" template=""Vec3d"" translation=""0 0 -4"" />; ...; <OglModel name=""Visual"" color=""red"" />; <IdentityMapping input=""@."" output=""@Visual"" />; </Node>`; ; will fail now because the mapping could think you are referring to the same input and output. (linking ¨@."" to the OglModel instead of the MechanicalObject); It was not failing previously because there is no mapping instanced on <ExtVec,Vec>, therefore the mapping was finding the MechanicalObject as its input. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1055:1191,test,test,1191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1055,2,['test'],['test']
Testability,Fix #989 . and fix compilation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1044:283,test,test,283,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1044,2,['test'],['test']
Testability,"Fix **one** of the bugs breaking the Geomagic behavior. When updating the position of the Omni visual node, visitor update was call on the Omni->getContext() which is usually the Root node, thus all node where updated outside of the normal mechanical step leading to bad physic behavior. ; Call the update on the Omni visual node only. + some small change and warning fix. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/761:626,test,test,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/761,2,['test'],['test']
Testability,"Fix 2 missing deps in Flexible due to pluginization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1590:592,test,test,592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1590,2,['test'],['test']
Testability,Fix 4 crashing (timeout) scenes on Windows CI:; - GenerateCylinder; - GenerateGrid; - Flexible: linearAffine_flex331.scn; - Compliant: FEM-donuts.scn. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/641:402,test,test,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/641,2,['test'],['test']
Testability,Fix LightManager test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/70:17,test,test,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/70,1,['test'],['test']
Testability,"Fix SofaPython3 advanced_timer.py test when launched from runSofa (and a gui). The draw() function was pushing_back() new points, making the loop slower and slower (and the memory exploding...); Rewrote in a cleaner and more readable way. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1766:34,test,test,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1766,3,['test'],['test']
Testability,Fix TetrahedronModel topology handling and remove the old mechanism. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1354:320,test,test,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1354,2,['test'],['test']
Testability,"Fix Zlib find errors by adding `<plugin>/lib `and `<plugin>/bin` in `CMAKE_LIBRARY_PATH` for each relocatable plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1708:657,test,test,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1708,2,['test'],['test']
Testability,"Fix ```MechanicalObject``` resize method to resize all its vectorsCoord only if the new size is different from the current one. . In a normal case, resizing a vector with it's current size won't have consequences but here as the VectorCoords are Data, they were all set to dirty each time a not needed resize was performed. And this on the position / rest_position/ freePosition and resetPosition. For example in ; ```; void BarycentricMapping<TIn, TOut>::apply(...; ...; d_mapper->resize(this->toModel);. ```; was always setting all MechanicalObject VectorCoords Data to dirty even if not needed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1977:1139,test,test,1139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1977,2,['test'],['test']
Testability,"Fix a crash at init of example `DistanceGridForceField-liver.scn`, when FlowVR library is not compiled. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3400:643,test,test,643,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3400,2,['test'],['test']
Testability,"Fix a peculiar bug where:; - one wants to compile a project out-of-tree,; - on WIndows,; - this project needs Sofa.GL; - Sofa.GL is find_package()'d first. As GLEW config on windows is special (windeppack stuff), its configuration is set-up in Sofa.Helper.; But the cmake config file for out-of-tree (Sofa.GLConfig.cmake.in) was trying to find GLEW before Sofa.Helper, hence cmake could not configure the projet and was yelling about not finding GLEW.; (got the case with registration plugin). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3098:1033,test,test,1033,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3098,2,['test'],['test']
Testability,Fix a typo and clean headlessRecorder_test. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1174:295,test,test,295,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1174,2,['test'],['test']
Testability,"Fix a typo pointed by Julien Ducrocq. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2324:577,test,test,577,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2324,2,['test'],['test']
Testability,"Fix all failing/crashing unit tests, scene tests, regression tests. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/978:30,test,tests,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/978,3,['test'],['tests']
Testability,"Fix an infinite loop. I just reverted without changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4902:594,test,test,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4902,2,['test'],['test']
Testability,Fix bug in collision visitor. ; Check if the narrow phase is null before calling getNarrowPhaseDetection. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/962:357,test,test,357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/962,2,['test'],['test']
Testability,"Fix bug introduced in #2193 and reported by @jnbunet in the Caribou CI! Thanks again @jnbrunet and @epernod for the discussions !. - Homogeneize the use of the massLumpingCoeff; - In the test, only cosmetic change; - homogeneize and add scenes in the regression. Fixes #2301. [ci-depends-on https://github.com/sofa-framework/Regression/pull/18]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2305:187,test,test,187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2305,3,['test'],['test']
Testability,"Fix bug introduced in #521 . If threshold is met at first step with den=0, break but info msg; about the status of the linear system. If threshold is met at first with den!=0, then continue one more iteration; and warning about threshold value too large. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/556:506,test,test,506,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/556,2,['test'],['test']
Testability,"Fix compilation error due to namespace change. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2543:586,test,test,586,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2543,2,['test'],['test']
Testability,"Fix compilation for Qt version< 5.11 or we decide to remove that and I update my computer:; ```if (QT_VERSION < QT_VERSION_CHECK(5, 11, 0))```. ```18>C:\projects\sofa-src\modules\SofaGuiQt\src\sofa\gui\qt\RealGUI.cpp(456,49): error C2027: use of undefined type 'QDesktopWidget'; 18>C:\Qt\5.10.1\msvc2017_64\include\QtWidgets\qapplication.h(57): message : see declaration of 'QDesktopWidget'```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1904:934,test,test,934,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1904,2,['test'],['test']
Testability,Fix compilation of cgal (include problem). Comment the part of the code that is not compiling with cgal 5. Fix #1474 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1522:370,test,test,370,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1522,2,['test'],['test']
Testability,"Fix compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2260:564,test,test,564,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2260,2,['test'],['test']
Testability,Fix compilation when using the option SOFA_DUMP_VISITOR_INFO; Thanks to Marco from UniLux. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1415:342,test,test,342,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1415,2,['test'],['test']
Testability,Fix compilation with flag NO_OPENGL and clean CMake. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1478:304,test,test,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1478,2,['test'],['test']
Testability,"Fix compilation without openHaptics to be able to activate it on the CI. ; Warning the GeomagicDriver will be invalid by default. include PR #2113 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2115:688,test,test,688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2115,2,['test'],['test']
Testability,"Fix crash on CI with scene _HexahedronForceFieldTopologyChangeHandling.scn_; Further to PR #1031 , the case where topo changes occur and X0 (points) size becomes zero (all points removed) the doUpdte() directly led to `return` without actually updating the output data field as being empty !; Now, all data are by default cleaned at the begin of the doUpdate() and filled only if X0.size is not zero and topology is not empty neither. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1056:686,test,test,686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1056,2,['test'],['test']
Testability,Fix crash when calling updateBBox w/o an mstate in TetrahedronFEMForceField. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1403:328,test,test,328,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1403,2,['test'],['test']
Testability,"Fix crash when removing triangles in scene using TriangleModel component. Clean and comment the class while undusting it (sorry hard to read the diff). - remove serr/sout; - change all protected members prefix; - rewritte init and updateFromTopology methods; - Remove the handleTopologyChange method. As this class use directly the topology buffers, no need neither for TopologyData. Just check the topology revision and update the component if topology has changed.; - Update RemovingTrianglesProcess and AddingTrianglesProcess tests scenes to test the TriangleModel; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/903:529,test,tests,529,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/903,4,['test'],"['test', 'tests']"
Testability,"Fix crash when solver was not in the same context (node); I am not really an expert of solvers and Vectors (VecId stuff) but the reference to the vector of position is changed everytime the odesolver solves if this one (and I guess the linearsolver) is not in the same context.; I roughly guess that it is because the system has not the same number of nodes and everything.; Anyway, reviews/comments from @ChristianDuriez would be most welcome 😺 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1230:699,test,test,699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1230,2,['test'],['test']
Testability,Fix cuda compilation (problems with float/double in cuda); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/912:310,test,test,310,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/912,2,['test'],['test']
Testability,Fix cuda compilation with new index types. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1551:294,test,test,294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1551,2,['test'],['test']
Testability,Fix cuda include compilation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1550:281,test,test,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1550,2,['test'],['test']
Testability,"Fix double compilation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3081:563,test,test,563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3081,2,['test'],['test']
Testability,"Fix error introduced in ; - https://github.com/sofa-framework/sofa/pull/3635. Mat4x4 did not have a ""SReal"" template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3675:657,test,test,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3675,2,['test'],['test']
Testability,Fix errors introduced in #1279 which I merged too quickly. Additional fixes:; - fix order warning; - fix unused warning; - fix hidden overload in clang; - fix two scenes of SOFA; - remove crashing (but working) scene due to use of shaders. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1289:491,test,test,491,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1289,2,['test'],['test']
Testability,"Fix failing test because the user is giving a focal radius of zero.; This became an error in #2099 . But it could happen that a user gives both a radius (non zero) and a focal radius (with zero).; This should not be really a fatal error (acting like the focal radius has not be given), ; but more a ""warning"" (a ""focal"" radius at 0 is still wrong after all). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2126:12,test,test,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2126,3,['test'],['test']
Testability,Fix following discussion on issue #871. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/924:291,test,test,291,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/924,2,['test'],['test']
Testability,"Fix following https://github.com/sofa-framework/sofa/pull/3550. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3591:603,test,test,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3591,2,['test'],['test']
Testability,"Fix for OOT compilation linking to Multithreading. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4619:592,test,test,592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4619,2,['test'],['test']
Testability,"Fix from @hugtalbot in #900 . Changes :; - decrease the damping,; - set a total mass to the rigid tori; - decrease the time step. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/987:381,test,test,381,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/987,2,['test'],['test']
Testability,"Fix https://github.com/sofa-framework/doc/issues/84. In the CI I trust. :warning: could not compile the PR right now (clang issue blocking me with latest master version). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4882:710,test,test,710,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4882,2,['test'],['test']
Testability,Fix image test [WIP],MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/460:10,test,test,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/460,1,['test'],['test']
Testability,Fix in DefaultCollisionGroupManager::createGroups the wrong search of deformable object nodes in collision group nodes already created. . The search was always failing and a new collision group was always created and added in the scene graph. This PR is supposed to explain the wrong behavior issue #994. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1060:556,test,test,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1060,2,['test'],['test']
Testability,"Fix install further to #4410 ; \+ minor warning fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4451:592,test,test,592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4451,2,['test'],['test']
Testability,"Fix issue #2070 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2072:557,test,test,557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2072,2,['test'],['test']
Testability,"Fix issue #2080. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2083:556,test,test,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2083,2,['test'],['test']
Testability,"Fix issue #7 . Summary: drawQuad needed a call to glBegin(GL_QUADS) to draw a quad, defeating the purpose to avoid to use explicitly OpenGL API. Same problem with drawTriangle and drawPoint,; I suppose that these functions, at the beginning, was just needed to factorize OpenGL code (but still you needed to use OpenGL with it). ; Now that we remove the explicit calls, those functions should not be accessible outside.; But a few code in Sofa (and maybe plugins?) are using those calls to draw one primitive. Finally, what have been done:; - remove public visibility to those functions and rename it to internalDrawXXXX (where XXXX is point, triangle, quad); - keep the old calls to keep compatibility; - add addLine to keep consistency with the other primitives. I am wondering if in the future (or just right now), the drawXXX (drawing ONE primitive) should be removed and force users to use the drawXXXXs with a vector (and oblige user to build a std::vector with ONE primitive. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/293:1234,test,test,1234,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/293,2,['test'],['test']
Testability,Fix issue #749; https://github.com/sofa-framework/sofa/issues/749. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1020:318,test,test,318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1020,2,['test'],['test']
Testability,"Fix issue https://github.com/sofa-framework/sofa/issues/2158. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2413:601,test,test,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2413,2,['test'],['test']
Testability,"Fix it also in FixedConstraint for Rigid3.; Also replace some push_back by emplace_back. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3143:628,test,test,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3143,2,['test'],['test']
Testability,"Fix libs copy on Windows with multi-config generator (Visual Studio). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2261:609,test,test,609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2261,2,['test'],['test']
Testability,"Fix memory leak in task scheduler:. - Add comments; - Add unit tests; - Use shared pointer instead of raw pointer: . The static raw pointer had two bad effects:; - Memory leak; - Task scheduler not being stopped. Note: The current API for the task scheduler is very confusing. I suggest to clarify the expected behavior. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1927:63,test,tests,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1927,3,['test'],"['test', 'tests']"
Testability,"Fix mess in *Config.cmake.in and some dependencies from modularization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1570:611,test,test,611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1570,2,['test'],['test']
Testability,Fix or approve new result of existing regression test.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/828:49,test,test,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/828,1,['test'],['test']
Testability,"Fix plugin CMakeLists; Add example; Improve README. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1830:591,test,test,591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1830,2,['test'],['test']
Testability,"Fix problem encountered in SPH scenes where the number of particles is 0 at start. ; Therefor the vertexMass was set to 0 during the first steps and all particles created during the next simulation steps were still having no mass. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4151:772,test,test,772,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4151,2,['test'],['test']
Testability,Fix quaternion test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/144:15,test,test,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/144,1,['test'],['test']
Testability,"Fix regression (appeared when boost was supposed to be removed from Sofa).; -> Plugins _not able to find Boost automatically_ failed to compile (because it needs boost to compile obviously); ; The problem was coming on Windows mainly, as boost are often installed in the system directories on Unix system. And few changes were added to make boost's CMake part more consistent. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/421:630,test,test,630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/421,2,['test'],['test']
Testability,Fix regression test on MeshSpringFF,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2983:15,test,test,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2983,1,['test'],['test']
Testability,"Fix scene crashing and regression tests; Still 3-4 voluntary failing unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1669:34,test,tests,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1669,4,['test'],"['test', 'tests']"
Testability,"Fix several bugs when having a metis package installed and its cmake config files are expected to be used by our Findmetis cmake module file:; - cmake config files provided by metis packages (at least conda, as APT do not provide such) are prefixed with an uppercase (e.g. MetisConfig.cmake instead of metisConfig.cmake), although all cmake variables and targets are then correctly set to lowercase. This will make the library not findable in config mode on case senstitive OS such linux. ; - do not fail if invalid version of metis is found on the system, instead allow fetching the right one (is SOFA_ALLOW_FETCH_DEPENDENCIES is ON). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4570:1175,test,test,1175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4570,2,['test'],['test']
Testability,"Fix similar problem encountered in #4142 where the global rendering stays red. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4150:620,test,test,620,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4150,2,['test'],['test']
Testability,"Fix sofa::type namespace variables in CGALPlugin for release v21.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2246:608,test,test,608,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2246,2,['test'],['test']
Testability,Fix some of the failing tests for a greener dashboard.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/279:24,test,tests,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/279,1,['test'],['tests']
Testability,Fix some the last SOFA-related warnings in option:. - fix hidden overload; - remove unused iterator; - Fix size_t int comparison; - add overrides; - fix CUDA collision models; - add override on getTemplateName function . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1316:472,test,test,472,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1316,2,['test'],['test']
Testability,Fix tests further to #1323 . - SofaExporter_test was expecting to export Hexa while option computeHexa was false in RGrid; - RegularGridTopology_test was expecting the wrong number of edges since the computation is now under the condition whether the triangles are used or not to compute the edges. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1335:4,test,tests,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1335,3,['test'],"['test', 'tests']"
Testability,Fix tests on CI: UtilsTest.string_to_widestring_to_string + Link_test.read_test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/978:4,test,tests,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/978,1,['test'],['tests']
Testability,"Fix the FindAssimp.cmake by changing variable set by assimp to new names. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4326:615,test,test,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4326,2,['test'],['test']
Testability,Fix the example scenes and fix #926 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1355:289,test,test,289,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1355,2,['test'],['test']
Testability,Fix the failing test in; - MeshROI_test ; - PluginManager_test; - in TestMessageHandler remove un-used attribute that was causing a compilation warning in clang; - in image_test do some cosmetic cleaning to find why it fails... but in fact the problem should be fixed on the CI by installing convert & gm.exe on the VM. (this is done since this morning); - Improve the tests in FixedConstraint_test.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/279:16,test,test,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/279,5,"['Test', 'test']","['TestMessageHandler', 'test', 'tests']"
Testability,Fix the scene as reported in issue #681. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/716:292,test,test,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/716,2,['test'],['test']
Testability,"Fix the script, now ready to in service :100: !. Examples:; - warning message, example in [Discussion #4076](https://github.com/sofa-framework/sofa/discussions/4076#discussioncomment-7819845); - soon closed message, example in [Discussion #4188](https://github.com/sofa-framework/sofa/discussions/4188#discussioncomment-7819844). To be discussed at the SOFA dev meeting; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4348:910,test,test,910,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4348,2,['test'],['test']
Testability,"Fix the unit tests introduced in #3500. Related to issue #3499.; Very similar to #3505. More details in #3511 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3512:13,test,tests,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3512,3,['test'],"['test', 'tests']"
Testability,Fix the values with which the quaternion is being compared after creation from euler angles. The quaternion is obtained from the euler rotation angles applied in the **zyx order**. The test fails because the previous values considered to be good for comparison are wrong. This PR modifies them.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/144:185,test,test,185,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/144,1,['test'],['test']
Testability,"Fix these errors: https://ci.inria.fr/sofa-ci-dev/job/sofa-custom/963/CI_CONFIG=ubuntu_gcc-7,CI_TYPE=release/console. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1724:657,test,test,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1724,2,['test'],['test']
Testability,"Fix tiny errors in linearsolvers and preconditioners. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2883:593,test,test,593,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2883,2,['test'],['test']
Testability,"Fix two issues, #1148 and #1213 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1217:285,test,test,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1217,2,['test'],['test']
Testability,"Fix various warnings:; - type comparison; - misleading indentation; - unused variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2196:626,test,test,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2196,2,['test'],['test']
Testability,Fix warning for ; - SphereCollisionModel ; - RegularGridTopology; - EulerExplicitSolver ; - RungeKutta4Solver . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1279:363,test,test,363,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1279,2,['test'],['test']
Testability,Fix warnings in Demos/ scenes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1021:282,test,test,282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1021,2,['test'],['test']
Testability,"Fix warnings in VisualModelImpl; Fix scene TetrahedronDiffusionFEMForceField due to wrong scale (canceled by the Mapping) disturbing the bbox for visualization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2412:700,test,test,700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2412,2,['test'],['test']
Testability,"Fix wrong string comparison that displayed a lot of warning at compilation. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4854:617,test,test,617,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4854,2,['test'],['test']
Testability,Fix: ; - Dll export + Add config file; - Stop scheduler only if thread has successfully started. Enhancements:; - Add: specific method to handle tool buttons; - Add: send script event when button are used.; - Add: option to not automatically start tool at init but manually start it through a method call. (start at init by default); - Update: m_errorDevice is not anymore a bool but store the HD_DEVICE_ERROR. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/786:662,test,test,662,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/786,2,['test'],['test']
Testability,Fix: inclusion test in MeshNewProximityIntersection,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/12:15,test,test,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/12,1,['test'],['test']
Testability,Fixed Vertex2Frame (deleted a _return_ which prevented the component to work properly). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/398:339,test,test,339,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/398,2,['test'],['test']
Testability,"Fixed false error detection in MeshGmsh.cpp file when reading .msh type files.; Without these lines, we have this kind of error `'$Elements' expected, found '$Elements`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3030:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3030,2,['test'],['test']
Testability,"Fixed the linking of libSofaCuda : missed the definition of the mapping destructor.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2708:624,test,test,624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2708,2,['test'],['test']
Testability,"Fixed this error while trying to configure a out-of-tree compilation of a plugin depending on SofaGuiQt. `CMake Error at sofa/install/lib/cmake/SofaGuiQt/SofaGuiQtConfig.cmake:49 (find_package):; Found package configuration file:. sofa/install/plugins/SofaMiscForceField/lib/cmake/SofaMiscForceField/SofaMiscForceFieldConfig.cmake. but it set SofaMiscForceField_FOUND to FALSE so package; ""SofaMiscForceField"" is considered to be NOT FOUND. Reason given by; package:. The following imported targets are referenced, but are missing:; SofaBaseMechanics`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2707:1092,test,test,1092,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2707,2,['test'],['test']
Testability,"Fixed two things : ; - Compilation error in CudaTriangular[..]; - Undefined symbol while loading the plugin in CudaConstant[..] . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2634:669,test,test,669,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2634,2,['test'],['test']
Testability,"FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - MechanicalMatrixVisitor and MechanicalOperations: fix if using a Linear Solver, projective constraints were wrongly applied when a force field is in a child node; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stiffness tunning was not working + optimisation and cleaning; - SkinningMapping: fix compilation of SofaRigid; - SofaViewer: fix crashes when current camera of pick-handler is NULL; - SurfacePressureForceField: fix volume computation formula; - TaitSurfacePressureForceField: fix contribution to the stiffness matrix for the second component df = P+dN in TaitSurfacePressureForceField; - TopologicalMapping: fix display error messages when a TopologicalMapping failed to be created; - TriangularFEMForceFieldOptim: fix principal values ordering with input matrix is diagonal + uninitialized value warning; - VisualModelImpl: fix wrong object (triangles) called when adding quads in handleTopologyChange(); - VoxelGridLoader: `std::unique` result was not used. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218:2983,test,test,2983,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218,1,['test'],['test']
Testability,"Fixes #1791 . Screenshot mechanism was broken and inconsistent between viewers. With this PR, using the screenshot button or pressing ""S"" will do the same thing, regardless of the viewer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2507:727,test,test,727,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2507,2,['test'],['test']
Testability,"Fixes #2133. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2151:552,test,test,552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2151,2,['test'],['test']
Testability,"Fixes #2321 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2312:553,test,test,553,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2312,2,['test'],['test']
Testability,"Fixes #2576. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2837:552,test,test,552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2837,2,['test'],['test']
Testability,"Fixes #308 with initialization of SparseGridTopology with a mesh. Before, a 1% scaling was automatically applied on the grid bounding an input mesh. Removing the scaling was leading a crash since vertices could be exactly on the boundary surface (surface of the BBox of the mesh).; Now a safety check is done and a final check is done to alert if a vertex is not found. Minor cleans of the msg API are also added. @epernod @fredroy your feedback using your own scenes involving the SparseGrid would be useful. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/670:761,test,test,761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/670,2,['test'],['test']
Testability,Fixes #33.; Remove deprecated miniBoost dependency. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/273:277,test,test,277,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/273,1,['test'],['test']
Testability,Fixes #464 . Changelog: http://libqglviewer.com/changeLog.html. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/545:315,test,test,315,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/545,2,['test'],['test']
Testability,"Fixes #4809. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4811:552,test,test,552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4811,2,['test'],['test']
Testability,Fixes #493 . Every Laparoscopic related code has been removed.; The ImageBMP dependency has been removed and replaced by the FactoryImage stuff. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/499:396,test,test,396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/499,2,['test'],['test']
Testability,Fixes #561 . This PR does the same work as #564 but using the existing `Utils::getSofaPathPrefix()` function and avoiding heavy macro creation in root CMakelists.; I also removed all the PluginRepository and DataRepository re-inits. Sorry @ErwanDouaille I did not know this function before :-/. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/568:546,test,test,546,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/568,2,['test'],['test']
Testability,Fixes #717 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/722:264,test,test,264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/722,2,['test'],['test']
Testability,Fixes #79 . Add a new test corresponding to this bug to avoid future regression.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/88:22,test,test,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/88,1,['test'],['test']
Testability,Fixes #992; Old version was just creating an object in the ctor... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1083:318,test,test,318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1083,2,['test'],['test']
Testability,Fixes `error: chosen constructor is explicit in copy-initialization`; see https://ci.inria.fr/sofa-ci/job/mac_clang-3.4_options/6311/console. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/483:393,test,test,393,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/483,2,['test'],['test']
Testability,"Fixes a bug in the component, that happens when using a child class that has its own implementation of _accumulateJacobiansOptimized_ and leads to an undefined J1 and J2 matrices after initialization, thus leading to a crash when setting J1eig to match its size. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1587:802,test,test,802,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1587,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/discussions/4100. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4102:602,test,test,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4102,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/discussions/4520. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4521:602,test,test,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4521,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/discussions/4701. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4724:602,test,test,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4724,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/issues/2366. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2998:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2998,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/issues/2937. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2938:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2938,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/issues/3006; Due to https://github.com/sofa-framework/sofa/pull/2974/files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3007:660,test,test,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3007,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/issues/3389. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3406:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3406,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/issues/3445. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3508:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3508,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/issues/3726. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3727:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3727,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/issues/3943. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3944:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3944,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/issues/4323. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4392:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4392,2,['test'],['test']
Testability,"Fixes the failing unit test introduced in https://github.com/sofa-framework/sofa/pull/2999; Fixes https://github.com/sofa-framework/sofa/issues/3043. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3084:23,test,test,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3084,3,['test'],['test']
Testability,"Fixes the verbosity introduced in #3053. ; These messages should be associated with the solver object, so that they are only printed if `printLog` is set to true. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3232:702,test,test,702,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3232,2,['test'],['test']
Testability,"Fixing all the example scenes as discussed in #3352 . Only the OldTutorial has still to be covered. fix #3352. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3526:650,test,test,650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3526,2,['test'],['test']
Testability,"Fixing build error on sofa-custom: https://ci.inria.fr/sofa-ci-dev/job/sofa-custom/683/CI_CONFIG=ubuntu_gcc-7,CI_TYPE=release/console. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1648:674,test,test,674,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1648,2,['test'],['test']
Testability,Fixing some components linkage on Windows; Needed for ModelOrderReduction plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/910:333,test,test,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/910,2,['test'],['test']
Testability,"Follow issue #495 , implements the removal. Changelog:; - Remove SOFA_FLOAT specific code everywhere.; - Remove all template instantiation based on double type.; - All types now have strict version eg: Vec3f, Vec3d and well as an un-defined precision one Vec3. This is implemented without #ifdef ; - All the component registred to the ObjectFactory are now only using the un-defined precision version of their template. ; - Add a mechanism to TemplateAlias.cpp so we can print a warning ; - In sofa scenes, both xxtypexxf and xxtypexxd are translated into xxtypexx using the TemplateAlias mechanisme. If the conversion involve a precision change a warning is emitted. ; - Clean a sources by removing commented code.; - Deprecate the use of #include <sofa/defaulttype/Vec3Types.h> and use #include <sofa/defaulttype/VecTypes.h> (because using two files pointing to the same thing is only adding noise). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/853:1153,test,test,1153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/853,2,['test'],['test']
Testability,"Follow up of https://github.com/sofa-framework/sofa/pull/1663; For comparison with #1797. In this PR we cut the coupling between vector and vector_device to make them really independant class. ; We then split the vector.h class in multiple separated parts for the differents specializations. . Because of unclear problems with windows explicit specialization interger, real and strings (extern template) have been removed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1799:964,test,test,964,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1799,2,['test'],['test']
Testability,"Follow-up #1767 . SofaBaseCollision just needs SofaSimulationCore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1768:606,test,test,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1768,2,['test'],['test']
Testability,"Follow-up of #1770 where it was decided to throw an error if calling the erroneous function but was merged before I could do it 😬; Using the =delete keyword is an elegant way to do this. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1774:726,test,test,726,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1774,2,['test'],['test']
Testability,"Follow-up of #2436 . The replacement of the usage of the GeometryAlgorithms had the unattended consequence that there was not information anymore about the geometry itself (it was hidden before by the geometryAlgorithms having a pointer on the topology before).; Now if one wants to define a geometry type different of the type of the associated state, it can be done by giving a third template (called GeometricalTypes). This template is equal to DataTypes by default if omitted (as it was before). It should fix the scene failing since #2436 (about the diffusion, which is having a geometrical type (Vec3d) different of its associated state (Vec1d). This PR cleans the DiffusionFEM as well (trivial optimizations, removal of one useless data which can be infered from the DataTypes). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2476:1325,test,test,1325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2476,2,['test'],['test']
Testability,"Follow-up on the quest to remove boost (at least the parts where the libraries are needed). ### 1; The only remaining part of SOFA using boost::thread is Sofa.Helper/Watchdog whose only purpose is to kill the current process if it exceeds a given time.; It is only used in the deprecated sofaInitTimer project, whose is litteraly a ""temporary"" project and was done to monitor the init() of the scenes... a kind of SofaVerification. Even the [commit ](https://github.com/sofa-framework/sofa/commit/0cbb991f6a7d6d1b1f32489d82c3267a6adc36a3) is saying ""ADD: temporary project to profile the initialization of some scenes"". Anyway, I decided to not delete the file by pity, and just moved the Watchdog class into this project.; Frankly, this class and the sofaInitTimer could be deleted in my opinion. ### 2; Sensable plugin is using optionnally `boost::thread::yield`, which:; 1. is deprecated; 2. can be replaced with std::this_thread::yield(). ### 3; CircularQueue had its tests disabled since... forever. I saw that because it was using boost::thread.; I made these tests compiled again but 2 are failing. I made them disabled, if somebody wants to fix them... ### 4; Sofa.Helper does not need boost::thread anymore and thus is removed from the CMake files.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2264:972,test,tests,972,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2264,4,['test'],"['test', 'tests']"
Testability,"Following #1237 , some error messages were not expected in some unit tests; triggering a FAILED status.; This PR fixes that, and add two more (real) unit tests for RandomPointDistributionInSurface and JoinPoints engines.; Moreover, it fixes also an example of the ExtrudeEngine scene and adds a example scene for RandomPointDistributionInSurface . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1280:69,test,tests,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1280,4,['test'],"['test', 'tests']"
Testability,"Following #1619. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1631:556,test,test,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1631,2,['test'],['test']
Testability,"Following #1720 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1721:557,test,test,557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1721,2,['test'],['test']
Testability,"Following #2251 (missed other duplicated scenes). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2252:589,test,test,589,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2252,2,['test'],['test']
Testability,"Following #2368 . Some projects (mainly tests) are using find_package(SofaBase) which still uses the project SofaEigen2Solver for compatibility purpose. This leads to a few prints in the cmake output about the SofaEigen2Solver being deprecated.; Of course this is a bit slightly annoying to read the cmake output. This PR limits the deprecation display to once a cmake configuration pass. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2386:40,test,tests,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2386,3,['test'],"['test', 'tests']"
Testability,"Following #2719, here is the version with forced comments. Command executed: ; ```bash; ./scripts/doxygenDataComments.sh --force .; ```. Happy reviewing :sweat_smile: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2751:708,test,test,708,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2751,2,['test'],['test']
Testability,"Following #2777, `buildStiffnessMatrix` and `buildDampingMatrix` are implemented for `FastTetrahedralCorotationalForceField`. I took the opportunity to simplify the code and clean it compared to `addKToMatrix`. I also changed the example scene, as it was not really functional. Now, the scene is the same than `TetrahedronFEMForceField`. I also added the possibility to define the method as `small`, for consistency with `TetrahedronFEMForceField`. At some point, this should be refactored with an OptionGroup. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3929:1050,test,test,1050,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3929,2,['test'],['test']
Testability,"Following #2940 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2953:557,test,test,557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2953,2,['test'],['test']
Testability,"Following #4876 (but not depending on it) this PR proposes to define a gravity-inheritance from the parent node when the data gravity is not set. A test is added but does not work due to SimpleAPI not taking into account data set in nodes.; Currently under investigation (this is why I draft this PR). ---. Suggestion : **TODO after this PR**; - Remove the class Gravity and use one single way to play with gravity : the associated data in the nodes; - Apply the change in all scenes using the Gravity component. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4910:148,test,test,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4910,3,['test'],['test']
Testability,"Following (and fixing) #1823 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1825:570,test,test,570,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1825,2,['test'],['test']
Testability,"Following code review in PR #4053 regarding Triangle version, propagate the same method name in Edge class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4165:647,test,test,647,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4165,2,['test'],['test']
Testability,Following discussions with @fjourdes in #502 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/518:298,test,test,298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/518,2,['test'],['test']
Testability,"Following https://github.com/sofa-framework/sofa/pull/2016. I thought SofaCUDA scenes were not tested at all on CI but actually they are (some of them at least).; A `.scene-test` file is used to ignore all the scenes that require SofaCUDA. Here are the scenes that are successfully tested (check them out [here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/2474/testReport/SceneTests/applications_plugins_SofaCUDA_examples/)):; - StandardTetrahedralFEMForceFieldCPU.scn; - TetrahedralTensorMassForceFieldCPU.scn; - beam10x10x46-fem-implicit-CPU.scn; - beam10x10x46-hexafem-implicit-CPU.scn; - beam10x10x46-hexafem-rk4-CPU.scn; - beam16x16x76-fem-implicit-CPU.scn; - beam16x16x76-hexafem-rk4-CPU.scn; - quadSpringSphere.scn. Does it makes sense to have non-CUDA scenes in SofaCUDA? ; Maybe should we ignore all the plugin scenes?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2042:95,test,tested,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2042,6,['test'],"['test', 'testReport', 'tested']"
Testability,Following https://github.com/sofa-framework/sofa/pull/4420. A good idea would be to centralize the regression-tests files in Regression plugin. . This would require multiple changes like being able to find the path of all compiled plugins to find the scenes and the regression references when they are inside of the plugin instead of Regression.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4424:110,test,tests,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4424,1,['test'],['tests']
Testability,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4542:324,Test,Testing,324,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542,5,"['Test', 'test']","['Testing', 'TestingConfig', 'test']"
Testability,"Following https://github.com/sofa-framework/sofa/pull/4764 . [ci-depends-on https://github.com/sofa-framework/Regression/pull/66]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4769:670,test,test,670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4769,2,['test'],['test']
Testability,"Following issue identified in PR #2026. Check that the topology pointer given is not null before registering it. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2027:654,test,test,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2027,2,['test'],['test']
Testability,"Following my [comment](https://github.com/sofa-framework/sofa/pull/2773#issuecomment-1075391909) on #2773.; This PR restores the default component naming for python. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2801:705,test,test,705,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2801,2,['test'],['test']
Testability,Following other components let's apply the updateInternal API to DiagonalMass. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1150:330,test,test,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1150,2,['test'],['test']
Testability,"Following recent changes, when compiled externally (out-of-tree), plugin libraries are not generated in the `plugin/` folder of SOFA build repository anymore, but in a dedicated `external_directories` folder. However this folder was not included in the reference folders (defined in `FileRepository.cpp`) in which the RequiredPlugin component searches for plugins at run time. This is not necessarily an issue when loading manually the plugins using the GUI's plugin manager, but it doesn't work when launching a scene which requires an external plugin in batch mode. The issue was pointed out recently by @VannesteFelix . This commit simply add `external_directories/` in the reference folders to search for plugins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2927:1257,test,test,1257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2927,2,['test'],['test']
Testability,Following the ConstantForceField let's apply the updateInternal API to UniformMass. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1149:335,test,test,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1149,2,['test'],['test']
Testability,"Following the PR #2300 here is a new version of the scene TriangleSurfaceCutting.scn with a texture. See picture in PR #2300. For the Regression program I had to add in the scene:; CImgPlugin as requiredPlugin to be able to use this line:; ```<OglModel name=""Visual"" texcoords=""@../meshLoader.texcoords"" texturename=""textures/colorMap.png"" />```. [ci-depends-on https://github.com/sofa-framework/Regression/pull/19]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2381:956,test,test,956,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2381,2,['test'],['test']
Testability,"Following the comments in https://github.com/sofa-framework/sofa/pull/2720, this PR replaces:. 1. https://github.com/sofa-framework/sofa/pull/2720; 2. https://github.com/sofa-framework/sofa/pull/2729. A base class for TopologicalMapping is introduced (BaseTopologicalMapping). It has no link to topologies. SubsetMultiMapping is now a BaseTopologicalMapping and has MultiLinks for input topologies and output topologies.; The consequence is that SubsetMultiMapping gets the propagation of the topological changes through the visitor `TopologyChangeVisitor`. It does not need any callback and subscribe to any topology. Note that `TopologyChangeVisitor` is now called on the root, rather than on the Node of the topology undergoing changes. It's a bit more expansive, but my SubsetMultiMapping is not in the same Node. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2744:1357,test,test,1357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2744,2,['test'],['test']
Testability,"Following the discussions about https://github.com/sofa-framework/sofa/pull/4943, the implementations of methods and composants must override the template-specific API instead of the generic one. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4982:735,test,test,735,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4982,2,['test'],['test']
Testability,"Following the issue #183 , this is a proposed solution since the issue is starting to date and is still present on OS X. Don't hesitate to refuse it if you prefer to go with another solution. At least now this fix will be publicly seen by people who wish to get a fast fix for the bug. This is a small change that forces the GUI to use the Qt menu instead of the native one for Mac OS X. This feature is available for other operating system by disabling a new cmake option named ""SOFAGUI_ENABLE_NATIVE_MENU"" (the name matches the other gui related cmake options). This cmake option is true by default on every OSes except Mac OS X (Darwin). . Since I think that many people execute runSofa directly in the build directory instead of a bundled mac application (.app), this should fix the unresponsive menu bug. Note that the menu will be displayed directly onto the GUI instead of the native menus of OS X GUI. Note also that I didn't test this feature on Windows since I don't own a license. It does work well on Gnome shell based linux distro last time I checked. But anyway, the feature is disabled on other OSes than OS X, so it shouldn't change anything for those who use Windows or Linux. If some people could help me by testing this feature on Windows and some Linux desktop environments, that would be great and bullet proofing the feature for people who wish to use the Qt menus even if they are not with OS X.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/366:934,test,test,934,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/366,4,['test'],"['test', 'testing']"
Testability,"Following the rise of discussions about further using Eigen inside SOFA, this PR aims at standardizing its inclusion in the framework. Right now, SOFA automatically pulls a fixed version of Eigen (3.2). It also install it along with SOFA, which is a big problem when an external program or library tries to compile with both SOFA and another version of Eigen. . This PR removes the automatic pull of Eigen, and instead rely on the standard find_package(Eigen3) which is available in almost all distributions via the system package manager (apt, dnf, pacman, etc), for instance:. <table>; <tr><td>Debian 9</td><td>Eigen 3.3.2</td></tr>; <tr><td>Debian 10</td><td>Eigen 3.3.7</td></tr>; <tr><td>Ubuntu 18.04</td><td>Eigen 3.3.4</td></tr>; <tr><td>Ubuntu 19.10</td><td>Eigen 3.3.7</td></tr>; <tr><td>Fedora 29</td><td>Eigen 3.3.5</td></tr>; <tr><td>Fedora 30-31</td><td>Eigen 3.3.7</td></tr>; </table>; ; Right now, this PR compiles with all of the previous distributions (I've tested it with Docker by simply installing eigen3-devel and compiling Sofa). ~~However, there is a faulty test with Eigen > 3.2: the **compliant_test** from the Compliant plugin. It seems to come from the Assembly visitor of the plugin, which relies a lot on Eigen to build the system matrices. I'll have a look at it in the next days, but if someone have an idea...~~ ; Found the nasty bug at 53dd4f5 - memcopy is _dangerous_ !. Everything ~~else~~ seems to be fine with recent versions of Eigen. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1281:975,test,tested,975,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1281,4,['test'],"['test', 'tested']"
Testability,"Following work with @ChristianDuriez at STC6, here is a way to fix the geomagic plugin scenes and recover behavior from before the PR on freeAnimationLoop and lambda function. . Also add:. - a second RigidSkull.scn example to show another way to map the haptic tool.; - A small bool to know if the haptic tool is in contact with an object. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/858:591,test,test,591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/858,2,['test'],['test']
Testability,"Following; - #4296 . (Part of the task #4217 ). Mat<> is now a composition of std::array of line (which is vec) instead of inhering fixed_array<Vec>. Note: The change in ParallelTetra is due to a static_assert triggered (N >0 in Vec) in the lambda in MSVC, I dont understand why 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4396:821,test,test,821,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4396,2,['test'],['test']
Testability,"Follows #2073 and then #2081. PickParticlePerformer has a hard dependency on OBBModel & CapsuleModel to compute where it sets its constraint with the mouse while picking.; So this forces the modules SofaUserInteraction to know those classes before hand. This design is not that good, as it is not possible for someone creating a new CollisionModel (in a plugin, etc) and use the PickParticlePerformer. This PR adds a (static) registration system, similar to the ObjectFactory and co., so if anybody wants to add a new collision model to pick on, it just has to register its model, along a callable (lambda, std::function, etc) on how to get the points on this model.; PickParticlePerformer registers by itself the triangle, sphere and rigidsphere models.; SofaMiscCollision (where OBB&Capsule are) registers the obb and capsule model functions. Fix #1624 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2084:1396,test,test,1396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2084,2,['test'],['test']
Testability,"For Regression-Test to be able to test scenes with name like: EulerExplicitSolver-diagonal.scn . Solves error:; ```; [ FATAL ] /data/Softwares/sofa/src/master/extlibs/gtest/include/gtest/internal/gtest-param-util.h:569:: Condition IsValidParamName(param_name) failed. Parameterized test name 'EulerExplicitSolver-diagonal' is invalid, in /data/Softwares/sofa/src/master/applications/projects/Regression/Regression_test/Regression_test.cpp line 224; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1265:15,Test,Test,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1265,5,"['Test', 'test']","['Test', 'test']"
Testability,"For a long time the ""Export Graph"" button causes runSofa to segfault. - What was the exact feature ?; - Since when is it crashing (obviously not tested) ?; - Is it worth keeping ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1702:145,test,tested,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1702,1,['test'],['tested']
Testability,"For better visibility and browsing into RigidTypes.h (which was a mess); and tried to reorganize a little bit their includes. I was wondering as well if Rigid{Coord, Deriv, Mass} should move to Sofa.Type... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3282:748,test,test,748,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3282,2,['test'],['test']
Testability,"For compilation without compat. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3223:571,test,test,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3223,2,['test'],['test']
Testability,"For consistency purpose, added a helper function to handle the file related errors for loaders and components. To use it: ; ```; FILE *f = fopen(filename.c_str(), ""r"");; msg_error_when(!f)<<sofa::helper::message::UnableToOpenFile(filename.c_str());; ```. Modified the usage in only ""MeshTrian.cpp"". With feedback, if I am in right direction, I will make changes to other loader and component accordingly.Solving issue #197 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/639:676,test,test,676,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/639,2,['test'],['test']
Testability,"For float compilation of course 😎. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3629:574,test,test,574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3629,2,['test'],['test']
Testability,"For information here is the current Topoogy classes architecture in sofa core.; ![Présentation sans titre](https://user-images.githubusercontent.com/21199245/111889075-75fc1100-89e2-11eb-9abc-ce8a4391ce7c.png). Here is the **current** architecture of TopologyData, TopologyHandler and TopologyEngine; ![Présentation sans titre(1)](https://user-images.githubusercontent.com/21199245/111889097-9f1ca180-89e2-11eb-9d80-ace8440c2887.png). With the **current** pipeline; ![Présentation sans titre(2)](https://user-images.githubusercontent.com/21199245/111889104-aa6fcd00-89e2-11eb-970d-050305cf0923.png). Here is the proposal of this PR. Basically all TopologyEngine have been removed and the code has been moved to TopologyData or TopologyHandler; ![Présentation sans titre(4)](https://user-images.githubusercontent.com/21199245/112510923-3773a700-8d92-11eb-9559-49d7c34c50b5.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1898:1417,test,test,1417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1898,2,['test'],['test']
Testability,"For non-time critical algorithm it is better to implements them in their base class (here BaseLink) instead of the in their concrete class (Link). In this PR we are moving the TLink::read() method to BaseLink::read().; To implement BaseLink::read() we added several methods in BaseLink:; - add and clear the internal container; We also added a new method in PathResolver::FindBaseFromClassAndPath. . This PR is based on #1735 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1736:967,test,test,967,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1736,2,['test'],['test']
Testability,"For now the performances are not better. It needs more work. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4140:600,test,test,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4140,2,['test'],['test']
Testability,"For now, VMs are used for CI and the test of the scenes using a GPU support can not be tested.; A dedicated machine (maybe using LinuxBuilder) should be set up for this purpose.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/665:37,test,test,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/665,2,['test'],"['test', 'tested']"
Testability,"For now, the serialization of a CSR cannot be used a deserialization as the format are different.; In a nutshell, it is not possible to do:; ```; std::ostringstream oss;; oss << outMatrix;. CSR inMatrix;; std::istringstream iss(oss.str());; iss >> inMatrix;; ```. So this PR tries to fix it by changing the output format of the serialization.; \+ more concise (faster to serialize, less space); \- much less human-readable. Other/complimentary solutions:; \- adding a nice printing (same as the deserialization now); \- dont change the serialization but the deserialization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5087:1114,test,test,1114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5087,2,['test'],['test']
Testability,"For old modules with no headers like SofaGTestMain, SofaHelper, SofaDefaultType, SofaCore, Sofa.SimulationCore, SofaGuiQt. Should fix this kind of error:; ```text; Imported target ""SofaCore"" includes non-existent path; ""/home/runner/work/BeamAdapter/BeamAdapter/sofa/include/SofaCore""; in its INTERFACE_INCLUDE_DIRECTORIES. Possible reasons include:; * The path was deleted, renamed, or moved to another location.; * An install or uninstall procedure did not complete successfully.; * The installation package was faulty and references files it does not; provide.; ```; taken from https://github.com/sofa-framework/BeamAdapter/runs/6790181313?check_suite_focus=true. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3023:1206,test,test,1206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3023,2,['test'],['test']
Testability,"For people including the inl to create their own instantiations (happening for gcc/clang). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3182:630,test,test,630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3182,2,['test'],['test']
Testability,"For scenes with `BTDLinearSolver`, as it is a linear solver only templated on `BTDMatrix<6,Sreal>`. MatrixLinearSystem<BTDMatrix6> is not present in the factory. Interestingly, it will still create a MatrixLinearSystem templated on BTDMatrix6 and set it as slave, so this PR is mainly to avoid the error/warning due to the object creation/factory. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4189:887,test,test,887,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4189,2,['test'],['test']
Testability,"For the CI:; - ignore scene using SofaCUDA plugin; - reduce the number of iterations for CPU version as they are all heavy simulations. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2616:675,test,test,675,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2616,2,['test'],['test']
Testability,"For the moment we cannot use the component MechanicalMatrixMapper if the force field and mass are in the same component (for example AdaptiveBeamForceFieldAndMass from the plugin BeamAdapter). This PR just adds the option. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3173:764,test,test,764,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3173,2,['test'],['test']
Testability,For those that are curious about the current status on this branch..you can see the inclusion dependencies in:; https://rawgit.com/SofaDefrost/sofa/reduceInclude2/include_2017_12_18.html. And the same for the current master; https://rawgit.com/SofaDefrost/sofa/reduceInclude2/include_master_2017_12_18.html. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/542:559,test,test,559,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/542,2,['test'],['test']
Testability,"For whatever reason, MSVC19 does not compile anymore because of streams in fixed_array (maybe an update in the stl code); And after further tries, it is not really possible to just deal with iosfwd.h and the implementation in a cpp file (because of templates). ; Anyway, everything is including iostream so it wont hurt more the compilation time.⏳. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1426:600,test,test,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1426,2,['test'],['test']
Testability,"For you @Camille-K and Antoine. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3087:571,test,test,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3087,2,['test'],['test']
Testability,"For you @guparan :heart: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2093:566,test,test,566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2093,2,['test'],['test']
Testability,"Force the constraint force to zero or restPosition. As @damienmarchal said, this is a new version of what Christian proposed in PR #1022 the only difference is that Damien propose to change all the for loops (inside the getConstraintViolation function) by one lambda function. And I will complete this PR next weeks by doing this in all constraints component. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1027:613,test,test,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1027,2,['test'],['test']
Testability,"Forgot to install libglew-dev on a new system, cmake is OK but when compiling, an error on the fact that gl/glew.h could not be found. Some time ago, it had been decided that the gl subsystem will always need glew (it was optional before); But the cmake did not reflect this choice. Now cmake will complain if glew is not found (if SOFA_WITH_OPENGL is enabled of course!). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2358:912,test,test,912,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2358,2,['test'],['test']
Testability,"Forward declare a class, so that avcodecs headers are only required when compiling the cpp.; That way, this header can be included even if FFmpeg headers are not in context (which lead to compilation failure). --> Can this change be also backported to 18.06 branch ?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/752:519,test,test,519,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/752,2,['test'],['test']
Testability,"Found out that Eigen3 in Fedora 29 installs a `FindEigen3.cmake` that do not set the imported target **Eigen3::Eigen**, resulting in CMake failure when compiling SOFA or linking against it. ```; $ dnf locates /usr/share/cmake/Modules/FindEigen3.cmake; eigen3-devel-3.3.5-2.fc29.noarch : A lightweight C++ template library for vector and matrix math; Repo : fedora; Matched from:; Filename : /usr/share/cmake/Modules/FindEigen3.cmake; ```. There is also third party software that install their own, such as CGAL:. ```; $ dnf locates /usr/lib64/cmake/CGAL/FindEigen3.cmake; CGAL-devel-4.13-0.2.beta1.fc29.x86_64 : Development files and tools for CGAL applications; Repo : fedora; Matched from:; Filename : /usr/lib64/cmake/CGAL/FindEigen3.cmake; ```. Hence to avoid any of those, it is safer to set the NO_MODULE options to `find_package(Eigen3)` to look for **Eigen3Config.cmake** instead, which always define the imported target. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1348:1181,test,test,1181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1348,2,['test'],['test']
Testability,"Found while investigating https://github.com/sofa-framework/sofa/discussions/2815. Tangents and bitangents were of type Vec3d but was set as float while setting the OpenGL buffer.; This rises the problem of data for visual things. This PR is only for fix, but it would make sense to template the VisualModelimpl to have either everything in float (for speed) or double (for precision). Not related, but I put references and some cleanings here and there in VisualModelimpl (while investigating the problem). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2855:1047,test,test,1047,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2855,2,['test'],['test']
Testability,"From Clang12 & gcc11. Mostly warnings about ; - signed int to unsigned int (and vice versa); - invertMatrix return value was not retrieved (replace with an assert for the moment but exceptions would be a better way); - deprecated things. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2378:156,assert,assert,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2378,3,"['assert', 'test']","['assert', 'test']"
Testability,"FromImage.cpp.o; ""_readImage(char const*)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""ImageIO_alloc(unsigned long)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""CGAL::Image_3::private_read(point_image*)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ld: symbol(s) not found for architecture x86_64; ```. This file is only included if the image plugin is activated, thus making this error appear only in specific cases. Moreover, since CGAL seems not tested on CI, this error might be quite old, as it has passed under the radar so far. It has been observed on OS X, and Linux. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/352:2348,test,tested,2348,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/352,1,['test'],['tested']
Testability,"Function is too long and complex. It needs to be divided. This is not finished, but it's better than before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5079:648,test,test,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5079,2,['test'],['test']
Testability,Further #1834 : . Tests: merge SofaTests with Sofa.Testing; Make sure that examples (see in Plugin Example : https://github.com/sofa-framework/sofa/blob/master/applications/plugins/PluginExample/PluginExample_test/MyBehaviorModel_test.cpp) and doc are up to date: https://www.sofa-framework.org/community/doc/contributing-to-sofa/writing-tests/. Connected to #417 #489. and PRs: #455 #471,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1885:18,Test,Tests,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1885,3,"['Test', 'test']","['Testing', 'Tests', 'tests']"
Testability,Further to #1397 fix compilation in :; - Geomagic; - VolumetricRendering. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1428:325,test,test,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1428,2,['test'],['test']
Testability,"Further to #2300 and issue was noticed in #2392 : texture coordinates of the OglModel were not updating anymore from parent (InterpolationEngine recomputing the tex coord) since the link was broken. It has been decided that if dynamic tex coordinates are managed by the parent component the option `handleDynamicTopology=""0""` could be used. The two corresponding scene are changed here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2445:926,test,test,926,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2445,2,['test'],['test']
Testability,"Further to #2719 I noticed missing description in HexahedronFEMForceField. I therefore merged the descriptions for both linear elastic codes on Hexa and Tetra. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2740:699,test,test,699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2740,2,['test'],['test']
Testability,"Further to #4603 ; It appears that several hyperelastic materials are not passing the tests:; - Ogden + Mooney-Rivlin for PK2; - Costa for the Hessian-ElasticityTensor. This has to be investigated.; Code initially written by Epione team, maybe contact Hervé.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4605:86,test,tests,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4605,1,['test'],['tests']
Testability,Further to PR #1269 warnings were added in the core of SOFA.; This PR fixes these warnings due to deprecated formats and unused variables. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1329:390,test,test,390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1329,2,['test'],['test']
Testability,Further to a discussion with @alxbilger and @ChristianDuriez ; Some check is performed in LocalMinDistance leading to possible null determinant. Case: two adjacent lines (with a common vertex) then of collide lines will coincide; However I do not see how to prevent / sort this before `LocalMinDistance::testIntersection()`. BruteForce::canIntersect → MemberElementIntersector::canIntersect() → LocalMinDistance::testIntersection(),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2077:304,test,testIntersection,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2077,2,['test'],['testIntersection']
Testability,"Further to discussions about #3999. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4046:575,test,test,575,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4046,2,['test'],['test']
Testability,"Further to discussions with @alxbilger and maybe in #3912. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4128:598,test,test,598,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4128,2,['test'],['test']
Testability,"Further to dummy question to @fredroy :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3172:581,test,test,581,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3172,2,['test'],['test']
Testability,"Further to https://github.com/sofa-framework/sofa/discussions/5030 I thought it would be good to have some regression on RK4. [ci-depends-on https://github.com/sofa-framework/Regression/pull/71]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5036:735,test,test,735,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5036,2,['test'],['test']
Testability,"Further to investigation for #1551 minor clean, but let's share them!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1571:610,test,test,610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1571,2,['test'],['test']
Testability,"Further to merge of both #4059 and #4019 . Can be fast merged @fredroy . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4094:612,test,test,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4094,2,['test'],['test']
Testability,"Further to renaming of FixedConstraint into FixedProjectiveConstraint ( https://github.com/sofa-framework/sofa/pull/4302 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4764:663,test,test,663,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4764,2,['test'],['test']
Testability,"GKRAND support allows the portability of random number generation across different architectures, hence a portable matrix factorization. It is supposed to fix the tests in https://github.com/sofa-framework/sofa/pull/3050. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3072:163,test,tests,163,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3072,3,['test'],"['test', 'tests']"
Testability,"GLDouble is defined in SolidTypes. ; I assume this is because of the writeOpenGLMatrix method. . But, such design is wrong because we don't want and shouldn't have a dependency to opengl.; So either we need to really know GLdouble to implement writeOpenGLMatrix... in that case writeOpenGLMatrix; should become a free function moved to some ogl packager which do the proper include to Opengl.h. . Or we don't care so much about GLdouble and in that case we juste use ""double"" instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3060:1024,test,test,1024,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3060,2,['test'],['test']
Testability,"GenerateRigidMass was marked to be moved from SofaGeneralEngine to Sofa.Component.Engine.Transform, but it is actually in Sofa.Component.Engine.Generate. Thanks to @EtienneMenager for reporting the issue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3560:744,test,test,744,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3560,2,['test'],['test']
Testability,"Generating a lot of warnings because those files are pretty much included by everybody. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1681:627,test,test,627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1681,2,['test'],['test']
Testability,"Given a link to the topology, link to the corresponding mechanicalObject and a boundingBox. The component will remove all elements (topology and dofs) going outside from this boundingbox. **-> Any better name suggestion is welcomed.; -> if this component is not useful in SOFA, abort the PR. otherwise I will add more comments in the header.**. Example of use:; ```; <MechanicalObject src=""@../grid_1"" name=""Volume"" />; <TetrahedronSetTopologyContainer name=""Tetra_con"" src=""@../Beam_generator_01/Container""/>; <TetrahedronSetTopologyModifier name=""Modifier"" />; <TetrahedronSetGeometryAlgorithms name=""GeomAlgo"" template=""Vec3d"" drawTetrahedra=""1"" drawScaleTetrahedra=""0.8""/>; ; <TopologyBoundingTrasher box=""-40 -40 -50 50 50 50"" topology=""@Tetra_con"" drawBox=""1"" position=""@Volume.position""/>; ```. Video of the result of a tissue falling in 3D:; **Right now in SOFA:**; ![ezgif com-gif-maker(1)](https://user-images.githubusercontent.com/21199245/129875985-79e1c469-46ae-459a-a6af-306be7effdf2.gif). **Using the trasher!**; ![ezgif com-gif-maker](https://user-images.githubusercontent.com/21199245/129875812-e2e6af18-bde2-4d76-89ac-3d4369bdc184.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2288:1694,test,test,1694,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2288,2,['test'],['test']
Testability,"Given that BaseClass is to describe Base* object and that Link can only hold Base* either it make sense to returns Base* from dynamicCast as well as from findLinkDest. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1700:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1700,2,['test'],['test']
Testability,"Given that the 20.12 release is on its way we can probably update the tests to the new value. Reminder of the convention:; TypeInfo::GetTypeName() => is a string representing the type as seen from c++, eg: vector<Vec<double, 3>>; TypeInfo::name() => is a string representing the type with as much as short cut, eg: vector<Vec3d>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1709:70,test,tests,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1709,3,['test'],"['test', 'tests']"
Testability,"Glut is a deprecated library and in my opinion, should be not used anymore. (not compatible with newer version of OpenGL, etc); It can be replaced with GLFW to create quick graphical applications. This first PR is moving the SofaGuiGlut to the applications directory, in case any people are still using it.; Actually, the code was not compatible with the current SofaGui API and was not compiling.; The code is now compilable and launchable anyway. Any reference to Glut are removed from the SofaFramework (header, CMake) and from runSofa. Lastly, a replacement using gflw will be pushed in the near future, for people wishing to have a simple GUI without the heavy-duty Qt Framework. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/598:936,test,test,936,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/598,2,['test'],['test']
Testability,"Gmsh seems to export an edge list along with the tetrahedron list. This list is not the list of all the edges contained in the tetrahedrons, but only a subset (the most important?). See in the 'before' video what edges are exported.; When the topology is computed, it sees that a list of edges is already there. At some point, it loops over the edges in the triangles and cannot find an edge in the edge list. Which makes sense because the edge list is only a subset.; Instead of stopping and returning an error. I suggest to add the missing edges in the list. Before:. https://user-images.githubusercontent.com/10572752/149795361-2bda98ea-3b3f-4ad0-bf72-eed7d3119360.mp4. After:. https://user-images.githubusercontent.com/10572752/149795490-b660cfea-ac5d-4804-b269-2eda829f6acf.mp4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2607:1323,test,test,1323,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2607,2,['test'],['test']
Testability,"Good afternoon!; This PR proposes a fix for a crash when loading a vtk file that was generated by Gmsh. `; myNode.createObject('MeshVTKLoader', name='loader', filename='gmshMesh.vtk'); myNode.createObject('TetrahedronSetTopologyContainer', src=""@loader""); `. The mesh generated by default with Gmsh gives a list of edges and triangles that is incomplete and contains only edges and triangles on the boundary of the mesh. However the list of Tetrahedra is complete. This leads to a crash when using a TetrahedronSetTopologyContainer.; This PR tries to address this problem. Cheers!; Olivier. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1008:842,test,test,842,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1008,2,['test'],['test']
Testability,"Got a GlError() somewhere else and finding where it came from was a pain...; It appears that drawLines (version with multiple colors) was incorrectly implemented, as it was calling setMaterial/resetMaterial between glBegin()/glEnd() and this is not possible apparently because those 2 functions call glDisable() and glDepthMask() and it is not possible to call them between glBegin/glEnd. (yes old OpenGL is... marvelous). Anyway this PR regroups the lines per color and call the drawLine() with one color. Implementation with map is not nice IMO but all the DrawTool implementation itself is, anyway. \+ UnilateralInteractionConstraint was calling twice saveLastState(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3260:1211,test,test,1211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3260,2,['test'],['test']
Testability,"Got a missing linker reference to pthread with my configuration.; I suppose this does not appear on the CI because of some differences in the cmake config (packages?). Related to the removal of boost::thread which was doing the job for everybody before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2302:793,test,test,793,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2302,2,['test'],['test']
Testability,"Got some crashes on some simulations, when trying to unload them.; Here's the fix. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1445:334,test,test,334,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1445,2,['test'],['test']
Testability,Happened after migration to Let's Encrypt SSL certificate on sofa-framework.org. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/236:306,test,test,306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/236,1,['test'],['test']
Testability,"Happening on **clang ONLY** (linux or mac, same) . Kind of 'mysterious' behavior happened here: https://github.com/sofa-framework/sofa/blob/65a54acb1d47c09acf294333ddfb5a5d57c1d0fe/SofaKernel/modules/SofaCore/src/sofa/core/topology/Topology.h#L86. core::topology::InvalidEdge was getting (0,0) instead of the expected (invalidID, invalidID). _Assumption (really just guessing)_; the inline static initialization (with clang) is done through a first stage compilation where the default constructor of Edge has not been generated yet, hence calling a (really) default constructor initializing array with a zero-initialization. ; One hint came from the fact that if I switched the inline static init in the h, with a ""classical"" static declaration in h + initialization in the cpp, it was correctly initializing InvalidEdge with (invalidID, invalidID)... Instead of just reverting to the classical static init, I have put all those inline static to constexpr members, leading to the fact that fixed_array's default constructor was not constexpr (forgotten 😗); Anyway, now everything is constexpr and the inline static initialization is correct now.... Bear in mind that it seems that GCC and MSVC are different than CLANG in that regard. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2357:1774,test,test,1774,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2357,2,['test'],['test']
Testability,Haptic scenes behavior has been changed by PR #1369 ; Modify them to match the old behavior. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1435:344,test,test,344,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1435,2,['test'],['test']
Testability,"Hard coding interaction in core component is not a good software design as it couple the behavior of a component and how it is used in the context of a specific interactive scene. . This PR remove this behavior and warns users. To avoid re-implementing things no one use, it is requested in the deprecation message that user need to report if they miss the feature so so we can restore it but with the proper software design. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4163:967,test,test,967,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4163,2,['test'],['test']
Testability,"Harmless (already tested) and needed for v21.06.01 :rocket: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2373:18,test,tested,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2373,3,['test'],"['test', 'tested']"
Testability,"Harmless PR to clean the logs when packaging on MacOS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2120:25,log,logs,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2120,3,"['log', 'test']","['logs', 'test']"
Testability,"HeadlessRecorder is, as its name suggest, a new gui plugin who allow users to records sofa visualisation without any windows (batch only). ⚠ Linux only ⚠. https://github.com/sofa-framework/sofa/issues/537. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/538:457,test,test,457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/538,2,['test'],['test']
Testability,"Hello @sofa-framework/reviewers . Yes, we are taking SOFA-NG project up again :tada: ; Thanks to @fredroy we now have at least 1 engineer working on this project every day :+1:; This issue is meant to be the main follow-up of the project, complementary to #543 (still a good read). ## Objectives. The final objective of SOFA-NG is to refactorize the current (non-core) modules and components by moving them into plugins. It will permit to:; - compile and load only the modules we want; - clean all dependencies in SOFA; - help focusing the work of validation/verification/doc/test on specific codes; - improve the packaging of codes; - ease understanding the API of SOFA for new users; - cleaning the applications/plugins repository. ## Tasks. Here are the main steps of the project.; Tasks NG1 and NG2 can be done in parallel if we work ""bottom->top"" in NG1 and ""top->bottom"" in NG2.; Task NG3 can also be started in parallel. We need to iterate on the architecture proposal to refine it as much as possible before steps NG1 and NG2 are over.; Task NG4 cleaning the applications/plugins repository in order to better handle code lifecycle. ### NG1: Simplify headers dependency graph by removing un-needed includes. 1. SofaKernel; - clean/rewrite/reorganize SofaHelper and SofaDefaulttype #1521 ; - remove completely useless files. <img src=""https://user-images.githubusercontent.com/11028016/106575747-b3910180-653c-11eb-8f43-6ec65390ce2f.png"" width=""350"" > &nbsp; <img src=""https://user-images.githubusercontent.com/11028016/106575725-ae33b700-653c-11eb-89e3-4bdeae912a94.png"" width=""350"" >. 2. Other modules (SofaGeneral, etc); - clean deps (useless includes, use lower level objects, etc), linked with the following NG2 actually. SOFA modules dependency (library link) graph: https://www.sofa-framework.org/graph/. *clang tools?*; *include-what-you-need?*. ### NG2: Pluginize all SOFA modules; Pluginizing a module = making it a [CMake Package](https://cmake.org/cmake/help/latest/manual/cmake-pac",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1527:576,test,test,576,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1527,1,['test'],['test']
Testability,"Hello Everyone,. @ziqiu-zeng noticed compilation errors in the CGALPlugin with the latest changes in SOFA. Here are the quick fixes we came up together. Please let us know if anything else should be needed. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2065:753,test,test,753,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2065,2,['test'],['test']
Testability,"Hello all,. This PR adds (hopefully) proper GIL handling to `SofaPython`, so that it is possible to run python threads concurrently with the main Sofa program. It enables the following scene to run concurrently with the main program: . ```python; def createScene(node):. from threading import Thread; import time; ; def target():; while True:; time.sleep(1); print(""it's aliiive!""); ; thread = Thread(target = target); thread.daemon = True; thread.start(). time.sleep(2); ```. This is achieved through the RAII class `PythonEnvironment::gil`, which is meant to protect the boundaries between c++ and python code as follows:. ```c++; // some function called from the c++ side; {; PythonEnvironment::gil lock;; // safely call python functions here: the GIL ; // is acquired and released automatically; }; ```. The trick is that the GIL should also be released prior to the first lock so that the last object to unlock the GIL gives an opportunity to python threads to run, if any. Otherwise, the main thread still holds the GIL after the last lock is destroyed, and python threads never get to run. This is a work in progress, but should be pretty harmless and easy to disable if something goes wrong. EDIT: it does not work on this branch :-/; ___________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/326:1491,test,test,1491,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/326,2,['test'],['test']
Testability,"Hello all,. While trying to disable some unused components/plugins from my setup in order to reduce compilation times, I discovered that SceneCreator depends on many base plugins, and that most test plugins depend on SceneCreator. This design makes it *really* hard to disable any plugin if somebody wants to compile tests for the remaining enabled plugins. I guess the ""correct"" way would be to split the SceneCreator features in each plugin so that you never pay for what you don't use (we're doing c++ after all :-). Any idea/feedback?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/417:194,test,test,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/417,2,['test'],"['test', 'tests']"
Testability,"Hello everyone,. I'm still not sure I fully understand the problem, but I'll describe it and PR a solution for discussion. When SofaCUDA is required as a dependency in an in-tree build, the CMake configure step is unable to locate `SofaCUDANvccFlags.cmake`. To reproduce the issue you may choose a dummy plugin (eg, [MyAwesomeComponents](https://github.com/sofa-framework/MyAwesomeComponents)), add to `CMakeLists.txt` and `*Config.cmake.in`:; ```; find_package(SofaCUDA REQUIRED); ```; And compile it in-tree.; I haven't tested how this goes in out-of-tree compilation. A really simple fix (PR ready) is to update the installation path SofaCUDANvccFlags.cmake to `build/lib/cmake` where it is surely found.; So in `SofaCUDA/CMakeLists.txt`:; ```; configure_file(SofaCUDANvccFlags.cmake ${CMAKE_BINARY_DIR}/lib/cmake/SofaCUDANvccFlags.cmake COPYONLY); ```. I understand though cmake config files should be placed and found on `build/cmake` and I do not know why it does not happen. Every insight will be much appreciated. Pedro",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2021:522,test,tested,522,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2021,1,['test'],['tested']
Testability,"Hello,. I was playing with SimpleGUI, and it did not compile with recent sofa::type changes.; Here are some fixes, so it can compile and run well with the latest release. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2274:726,test,test,726,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2274,2,['test'],['test']
Testability,"Hello,. PR of a small fix to #1731. I simply removed the debug message which seems to be left behind at the code. It should be compatible to both master branch and the latest release. Please let me know if I should create a PR to master instead. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1732:801,test,test,801,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1732,2,['test'],['test']
Testability,"Hello,. Since we talked about it during the SofaDev meeting,; Here's our QuickNDirty answer to the make install fail for CImgPlugin.; Of course as-is it is not acceptable or mergeable but it's here. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/609:450,test,test,450,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/609,2,['test'],['test']
Testability,"Hello,; A very small PR to perform a check at the start of the doUpdate function to make sure the rest-position is defined and avoid a crash when it is not the case. This typically happens when calling init() on a boxROI in the SOFA scene without calling init() on the associated mesh loader for example. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1031:556,test,test,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1031,2,['test'],['test']
Testability,"Hello,; For the case of Rigid Mechanical Object (thus with position marked by the combination of a Vec3D and a quaternion for rotations), this PR adds a check if the quaternion is of unit 1 and normalizes it, if it is not. ; This PR does not handle the case when the user changes the value of the quaternion in the GUI. Cheerio. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/790:580,test,test,580,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/790,2,['test'],['test']
Testability,Hello. ; Does anyone knows how to run python tests in SOFA framework?. @hugtalbot . Thank you for information. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/400:45,test,tests,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/400,1,['test'],['tests']
Testability,Hello. I made a test with the following scene. It actually pass in the current testing framework despite crashing upon loading in the GUI mode. ; ```; <?xml version='1.0'?>; <Node 	name='Root'>; <VisualStyle displayFlags='showForceFields'/>; <Node name='FEMnode'> ; <MechanicalObject/> ; <TetrahedronFEMForceField/> ; </Node>; </Node>; ```,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/79:16,test,test,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/79,2,['test'],"['test', 'testing']"
Testability,"Helper for the case where the user wants to use external cxxopts, as cmake does not provides a find module for cxxopts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4538:659,test,test,659,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4538,2,['test'],['test']
Testability,"Helping newcomers with up-to-date information. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2741:586,test,test,586,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2741,2,['test'],['test']
Testability,"Here are a few fixes needed for SofaPython2 -> SofaPython3 transition on CI :+1:. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1829:621,test,test,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1829,2,['test'],['test']
Testability,Here are a few tests about following components :; - IndicesFromValues; - MergePoints. They should not disturb any others functionality of SOFA.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/268:15,test,tests,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/268,2,['test'],"['test', 'tests']"
Testability,Here are all the changes made for v18.12 release.; Mostly CMake and CPack stuff. :warning: Notice the removal of all deprecated components [as planned in Changelog](https://github.com/sofa-framework/sofa/blob/master/CHANGELOG.md#deprecated). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/905:493,test,test,493,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/905,2,['test'],['test']
Testability,"Here are all the changes that were pushed directly to v20.12 to accelerate its delivery.; Mostly changes in packaging steps (CPack and postinstall scripts) for dependencies and RPATH management. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1804:734,test,test,734,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1804,2,['test'],['test']
Testability,"Here are the changes I made for v19.06, mostly cleans and fixes. Important changes:; - [[SofaMacros] ADD version to each target properties](https://github.com/sofa-framework/sofa/pull/1114/files#diff-c271701edce37b698b29020065753857) ; - [[CMake] ADD post-install script for Linux](https://github.com/sofa-framework/sofa/pull/1114/files#diff-16510636c780c3f88d6aaeb73dc3a80d). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1114:628,test,test,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1114,2,['test'],['test']
Testability,"Here are the latest changes done directly in v20.06 branch to finalize the release. Main changes:; - [CMake] ADD SOFA_ENABLE_SOFT_DEPS_TO_SOFAPYTHON option (default is ON); When OFF, SofaPython will be added later during CMake generate so that all soft dependencies to SofaPython will be unsatisfied.; This is useful to generate binaries with at least SofaPython dependencies as possible.; - [CMake] FIX postinstall-fixup scripts call order; postinstall-fixup scripts are now in tools/postinstall-fixup and are included after all other parts of SOFA (even external directories); - [SofaMacros] FIX install dir for plugins with no INCLUDE_SOURCE_DIR; There was an issue with installed include directories introduced by #1397 ; - Backport #1428 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1432:996,test,test,996,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1432,2,['test'],['test']
Testability,"Here is a fix for issue: https://github.com/sofa-framework/sofa/issues/512. # Objectives; - add optional short argument ☑; - add more flexibility. We don't want to edit the main.cpp each time we want to add new arguments ☑; - simplifcation of ArgumentParser. We will use the boost program option ☑. # Changelog. - `ArgumentParser` completely changed. It's now using boost program option. It's better using existing things rather than creating our own implementation and maintain it; - `SceneCreatorBenchmarks.cpp ` use the new ArgumentParser; - `runSofa/Main.cpp` use the new ArgumentParser; - `BaseGUI.h` use the new ArgumentParser, and changed the way we can parse arguments.; - `BatchGUI` use the new ArgumentParser, and add argument registration; - `GUIManager.cpp` changed the api, removed initGUI (useless most of the time); - `gui/Main.cpp` use the new GUIManager function (replace the GUIManager); - `MultithreadGUI` use the new ArgumentParser and GUIManager; - `SimpleGUI` use the new ArgumentParser and GUIManager; - `RealGUI` use the new ArgumentParser and GUIManager. ## API Breaking. - `ArgumentParser` everything changed; - `BaseGUI` use the new ArgumentParser, and changed the way we can parse arguments.; - `GUIManager` changed the api, removed initGUI (useless most of the time). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/513:1548,test,test,1548,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/513,2,['test'],['test']
Testability,Here is a fix for the VideoRecorder broken since #1121 due to change in API and in CMakeLists. - Add findPackagae for ffmpeg since add_definitions does not propagate SOFA_HAVE_FFMPEG_EXEC above the caller project; - Change function initRecorder including both code extension and code name. Here you are @fspadoni ;). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1138:568,test,test,568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1138,2,['test'],['test']
Testability,"Here is a new plugin which implements a beam force field component with plastic behaviour (to model nonlinear and permanent deformation). The general structure is inspired from the BeamFEMForceField component. At the moment, I kept the new component in a dedicated plugin (BeamPlastic), but I guess it could be moved to where the BeamFEMFF component already is (providing the PR is mergeable). Two pull-requested files (in applications/plugins/BeamPlastic/quadrature) were implemented by someone else and published under the open source Boost Software License 1.0 (BSL-1.0). I mentioned this in both files headers, but I don't know if the BSL-1.0 is compatible with the SOFA license. If not, these files can be removed and I can re-implement the corresponding methods (for reduced gaussian integration). The code compiles on my side, and the two provided example files work fine, but there are quiet a few things that could/should be improved (including unit tests). I have already noted some of them, but as this is my first PR I'm not familiar with how or where these should be discussed.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1618:959,test,tests,959,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1618,3,['test'],"['test', 'tests']"
Testability,"Here is a plugin communication ; The purpose of this plugin is to add ability to the users to simply send/receive data´s from sofa. Instead of creating many plugins for each implementation/hardware, we propose to regroup all of them in one communication plugin. . Actually there is two network protocol implemented : ; - OSC (has packet size limiations ...); - ZMQ. Improvements : ; - better thread safe implementation; - more types; - add others library implementation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534:722,test,test,722,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534,2,['test'],['test']
Testability,Here is a very simple implementation that enable extra printing to help in understanding why some scenes are failing/crashing. . I also add few scenes with single solvers because those components where not tested anywhere in our CI. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/667:206,test,tested,206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/667,3,['test'],"['test', 'tested']"
Testability,Here is an update of PluginExample to clarify how to create a deploy-and-share friendly plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1053:347,test,test,347,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1053,2,['test'],['test']
Testability,"Here is another proposal to fix ExtVec warnings issue. When building with GCC:; - Deprecation warnings were displayed at every #include<sofa/defaulttype/VecTypes.h>; - They are now emitted only when using the ExtVec* typedefs (ExtVec3dTypes, ExtVec3fTypes, ExtVec3Types, ...); - Using directly ExtVectorTypes will not trigger any warning. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1140:590,test,test,590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1140,2,['test'],['test']
Testability,"Here is the PR with the PSL plugin to simplify the writing of scene with SOFA. Video with examples:; https://www.youtube.com/watch?v=_lU6hJIXz1g&feature=youtu.be. The ""in-progress"" documentation: https://github.com/SofaDefrost/sofa/tree/PSL/applications/plugins/PSL/README.md. If you have idea of extension we have a ""pep"" directory with open-suggestion there:; https://github.com/SofaDefrost/sofa/tree/PSL/applications/plugins/PSL/pep. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/541:688,test,test,688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/541,2,['test'],['test']
Testability,"Here it is! This PR adds a new NG component: Sofa.Helper.Bvh. How to reproduce:; 1. Checkout [sofa2ng](https://github.com/guparan/sofa2ng) in the `tools` folder of your SOFA; 2. cd into sofa2ng and run `deploy.sh recipes/Sofa.Helper.Bvh.rcpy`; 3. Integrate your new NG module into SOFA by hand. How to integrate (things not done by sofa2ng):; - Create all NG structure if needed (here I created Sofa.Helper); - `add_subdirectory` your module at the right place (here I did it in SofaFramework/CMakeLists.txt); - Link your module to SOFA old modules when needed; - Remove old file inclusions in CMake (here it was in sofa/helper/CMakeLists.txt). ***************; **Summary:**; - The recipe I used with sofa2ng is here: [Sofa.Helper.Bvh.rcpy](https://github.com/guparan/sofa2ng/blob/master/recipes/Sofa.Helper.Bvh.rcpy); - The result of recipe application is here: https://github.com/sofa-framework/sofa/pull/741/commits/2c729aa646866c2b01792069e95d47cc450edcca; - The changes I did by hand are here: https://github.com/sofa-framework/sofa/pull/741/commits/6d6cd06fc34f6ae2ca53feed8af5b8a1cb452da6 (patch version [here](https://github.com/sofa-framework/sofa/commit/6d6cd06fc34f6ae2ca53feed8af5b8a1cb452da6.patch)); ***************. This is the right place to discuss about SOFA-NG, do not hesitate to comment!. I let this here and I go to vacation, see you in two weeks :wink: ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/741:1629,test,test,1629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/741,2,['test'],['test']
Testability,"Here we go as promised:. This PR stores within a SOFA Object (inheriting Base) links to the owners that given object in a vector, that can be accessed by calling getDDGLinkOwners(). Currently, pointers are stored within a vector of const Base*, but we could imagine using a map, that would store the link owners according to a CATEGORY, (ForceField, Mass, MO, Topo...), or having a multimap with the component names..? I don't know, I guess it depends on the use case.; @jnbrunet @epernod that PR is specifically for you, so you probably have a better idea of how you'd like to manipulate that list. let me know what you think!. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1228:882,test,test,882,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1228,2,['test'],['test']
Testability,"Here's a bunch of fixes for the HAPI plugin:. * `config.h` was not generated --> added automatic generation to the cmake and fix the template to use cmake variable replacement. * there is some broken code in CMakeLists, not sure what was used for but it's not even a valid cmake code (broken if clause). For the moment I just commented out, I'm open to advices... * updated the code with recent member renaming in main sofa code (`indice` --> `d_indice`). * fix for `findH3D.cmake` to find the module without relying on non-default installation path (i.e. if you install H3D into a given directory, that is the root path from which `include` and `lib` can be easily found ). * fixes for `findHAPI.cmake` --> using `hapi_ROOT` to easily find the module (instead of relying on the mutual position of HAPI and H3DUtils). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1189:1069,test,test,1069,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1189,2,['test'],['test']
Testability,Here's a simpler implementation of sofa::core::DataEngine. This implementation hides the code related to updating datafields and calling cleanDirty() in an attempt to reduce human errors. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/760:439,test,test,439,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/760,2,['test'],['test']
Testability,"Here, I propose a raw version of Force Field for solving FEM model of Reissner-Mindlin Flat Shell Element (quad element, 5 degrees of freedom). ; Note that, at this current stage, I assume that 2 degrees of freedom related to rotational displacements of a node in x and y-axis (z is the normal axis of the element) are ignored for the purpose of my project. However, I also want to include these components in the calculation but have no clue. Furthermore, only the small displacement method is considered, I just wonder whether we can apply the co-rotational method to this type of element. Since I am not an expert in FEM, the calculation process and coding flow are inspired by many online materials and the TriangularFEMForceField, respectively. I believe it still got a lot of problems that I have not known yet, and also, this is my first contribution and PR, thus any helps from SOFA community will be sincerely appreciated; PS: a scene that includes this FF is also provided and works perfectly (for me). Needs merge of : https://github.com/sofa-framework/regression/pull/10; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745:1623,test,test,1623,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745,2,['test'],['test']
Testability,"Here, I propose a raw version of Force Field for solving FEM model of Reissner-Mindlin Flat Shell Element (quad element, 5 degrees of freedom). I mainly attempt to exploit SOFA to . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1739:721,test,test,721,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1739,2,['test'],['test']
Testability,"Hey I hope I got this one right...:. To me the APIVersion component is used to specify the latest version of SOFA we can guarantee compatibility with. Thus when it is already present in an existing scene, the tag is set explicitely in the scene file.; When creating and saving a scene from a modeler for instance though, an APIVersion should be created, and the level should be the level of the version of SOFA the user is running. By default, an APIVersion without a version number was automatically setting the level to 17.12, which to me makes no sense, because we can't guarantee compatibility with 17.12 on a scene that doesn't have an APIVersion set.; Also, somewhere in SceneCheckAPIChange, a 20.06 was hardcoded in a variable `m_selectedApiLevel`. This PR takes the SOFA_VERSION_STR, set by CMake in <sofa/version.h>, and uses this value to replace the default level value in APIVersion, and the selectedAPILevel in SceneCheckAPIChange. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1473:1196,test,test,1196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1473,2,['test'],['test']
Testability,Hey dear reviewers... I'd like you to pay close attention to the `size()` and `size(const DataType & /*data*/)` functions... To me both the documentation in DataTypeInfo.h is incorrect. Depending on your answers correct the doc in DataTypeInfo.h in this PR. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1373:509,test,test,509,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1373,2,['test'],['test']
Testability,"Hey guys,. Sorry for the delay. This is a draft PR so that people can start reviewing/testing this feature if they want. There is still some things missing before merging. ### Needs to be addressed before merging. - MacOS and Windows compatibility: python import command only tries to load .so extension, so the cmake of the plugin should generate both SofaPython.dylib (.dll) and SofaPython.so for it to work.; - Handling the case of python script loading a python scene (the current GIL handling implementation will prevent the main python script to get back the interpreter after a python scene runs). ### What this PR brings. Right now, in order to use the SofaPython plugin, you need to create a python scene and run it through a C++ executable (such as runSofa). What I'm proposing here is to simply load the Sofa plugin inside a python script, that's it. A python script could then look like : . ```#!/usr/bin/python2.7; from libSofaPython import Sofa; import argparse. # Parse the arguments; parser = argparse.ArgumentParser(); parser.add_argument(""-n"", ""--number_of_steps"", type=int, help=""Number of steps until the final forces are reach"", default=10); o = parser.parse_args(). sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim); root = Sofa.createNode(""root""). # ...; # some code that creates the scene tree; # ... root.init(). for i in range(number_of_steps):; root.simulationStep(dt); updateConvergencePlot(root). analysis = complexCalculsOnMatrices(root); saveResults(root, analysis); ```. You could even make your own runSofa.py that launches the runSofa GUI (a more complete python runSofa script can be found in an example file provided by this PR) :. ```#!/usr/bin/python2.7. from libSofaPython import Sofa. sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim). root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(). sofa_prefix = ""/home/jnbrunet/sources/sofa/build""; Sofa.GUIManager.setSofaPrefix(sofa_prefix); Sofa.GUIManager.setConfigDirectoryPath(sofa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:86,test,testing,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['test'],['testing']
Testability,"Hey guys,. apparently, 30 tests out of 32 crash with exit code 53. (And bring some bad red color to the beautiful dashboard). This code is ""The network path was not found"". Is every binary/file where it's supposed to be ?. NB : Is this config worth the trouble ? Or should it be removed as VS2015 is freely available ? (I heard something about people **needing** it but...)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/155:26,test,tests,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/155,1,['test'],['tests']
Testability,"Hey, . Waiting for FOSDEM to start...so let's make a small cleaning PR. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/915:325,test,test,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/915,2,['test'],['test']
Testability,"Hey,. I am very new in sofa, and I am looking for a simple solution for the following :) :; I would like to simulate the cutting through of a 2-d mesh (surface) with a sharp tool.; My goal is to use this simulation to test the cutting of a soft tissue with a robot. For two reasons, I would not to use the cutting Plugin: I need it for a research project for which I do not have financial budget to buy the plugin (maybe in the future, I will). The second reason that I would like to keep the simulation very simple and operate with a low number of parameters. My question is: which examples should I take a look at? Is there anybody, how implemented such a scenario (maybe also with SofaPython3)?. Thank you very much in advance!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4071:218,test,test,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4071,1,['test'],['test']
Testability,"Hey,. I just tested differents gui arguments and encounter a weird argument name issue.; if you run : `runsofa -g qt` this will run the opengl view. Everything is working well, but the argument name is a bit ... confusing.; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/480:13,test,tested,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/480,1,['test'],['tested']
Testability,"Hi all, . BaseLoader was implemented in .h. ; This is bad so I splitted it into BaseLoader.cpp/h ; Then I removed the un-needed includes; Then I updated all the codebase that were missing specific includes. In case your code does not compile... after this PR then you need to add the include you are missing ; (probably fstream or sofa::helper::system::FileRepository) ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/393:622,test,test,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/393,2,['test'],['test']
Testability,"Hi all, . I'm not sure SOFA_SUPPORT_MAPPED_MATRIX is used anymore. ; It is based on defines and there is no way to activate it from CMakeLists.txt. ; I suspect it is connected to some SOFA_DEV repository. Anyhow, as it does not seems used anymore I remove it. In case this is important to you please; contact us so we can find a better design than using ifdef's. . This one is based on stc5 branch (not master). . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/819:665,test,test,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/819,2,['test'],['test']
Testability,"Hi all, . There has been quite a lot of discussion recently about how the to implement update mecanisms. ; There is of course the DataTracker, but we are quite a lot to implement complementary mecanism in our respectives plugins so it may be a good idea to see what can be factorized into SofaCore. To do that it would be nice to have examples / snippets / draft of the different approaches we have tested or in mind so that we can evaluate the code impact and interoperability. @bruno-marques, @hugtalbot, @epernod, @jnbrunet feel free to add your ideas. ______________________________________________________; Dedicated Gitter room : https://gitter.im/sofa-framework/data-update?utm_source=share-link&utm_medium=link&utm_campaign=share-link",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597:399,test,tested,399,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597,1,['test'],['tested']
Testability,"Hi all,. Here is a proposal PR to remove Aspects from the core of Sofa. ; The rational behind this PR is that:; - they are very rarely used, ; - they are often mis-understood by most developpers and thus are mis-used.; - they introduce a lot of noise at the core of our code base for near to zero benefit,. Removing them is in fact easy and should not be breaking as the code actually compile with 1 Aspect...so it should behave exactly the same with or without aspects. @JeremieA, @epernod, @fredroy . EDIT: this topic was discussed in https://github.com/sofa-framework/sofa/issues/1147; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1269:840,test,test,840,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1269,2,['test'],['test']
Testability,"Hi all,. I'm from elementary school doing an internship at DEFROST. ; I was asked to update the serr into msg_error(). ; And I was asked to update the sout into msg_info(). Here is the result of my work. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/916:455,test,test,455,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/916,2,['test'],['test']
Testability,"Hi all,. One test related to LightManager is failing only on windows eg:; https://github.com/sofa-framework/sofa/commit/6d3e1398363cc617124fd25522193ef20b1b7b1c. The failing scene is rather simple: ; ```xml; <Node name='Root' gravity='0 -9.81 0' time='0' animate='0' >; <Node name='Level 1'>; <MechanicalObject template='Vec3d'/>; <LightManager name='lightmanager'/>; </Node>; </Node>; ```; Any one know why the test on Windows behave differently to to other plateforms ? . DM.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/54:13,test,test,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/54,2,['test'],['test']
Testability,"Hi all,. This PR is implementing what was discussed in in #362 . CHANGELOG:; - refactor the SceneChecker object for more modularity. Adding new checks should be easier. ; - add a SceneCheckDuplicateName that warns user if the scene contains duplicated names. ; - add the corresponding tests. ; - use the new version in runSofa. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/392:285,test,tests,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/392,3,['test'],"['test', 'tests']"
Testability,"Hi all,. We are using bigger and bigger mesh at defrost and noticed that the init time of BarycentricMapping<Tetrahedron> is growing a lot. . Eulalie pointed out that this is because there is a imbricated for() loop to find closest tetrahedron for each of the points in the target geometry. . At line 865 in BarycentricMapping.inl in BarycentricMapperTetrahedronSetTopology; ```cpp; ....; for ( unsigned int i=0; i<out.size(); i++ ); {; sofa::defaulttype::Vec3d pos = Out::getCPos(out[i]);; sofa::defaulttype::Vector3 coefs;; int index = -1;; double distance = 1e10;; for ( unsigned int t = 0; t < tetrahedra.size(); t++ ); {; sofa::defaulttype::Vec3d v = bases[t] * ( pos - in[tetrahedra[t][0]] );; double d = std::max ( std::max ( -v[0],-v[1] ),std::max ( -v[2],v[0]+v[1]+v[2]-1 ) );; if ( d>0 ) d = ( pos-centers[t] ).norm2();; if ( d<distance ) { coefs = v; distance = d; index = t; }; }; if ( distance>0 ); {; ++outside;; }; addPointInTetra ( index, coefs.ptr() );; }; ```. Adding a geometric acceleration structure (aabb, sweep & prune, voxel or spatial hashing would help in keeping to a n.log.n complexity and reduce a lot the computation time. ; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/784:1097,log,log,1097,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/784,1,['log'],['log']
Testability,"Hi all,. as earlier, I'm making PR on several 'simple' behavior that I implemented a long time ago but could make user of runSofa happier. Here is one that allows to drag & drop data or scene from the gui into and external text editor to have the data serialized. This feature is very useful if you like editing your scene in runSofa and need to transfer the results into sofa. . As GUI stuff are nicer with image... I will make a small video to show it in use. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/373:715,test,test,715,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/373,2,['test'],['test']
Testability,"Hi all,; As discussed with @alxbilger in https://github.com/sofa-framework/sofa/issues/3499. Add a check that catches an empty system to solve. This might happen due to topological changes. Thanks again for the help, @alxbilger ! :). Cheers,; Paul; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3529:788,test,test,788,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3529,2,['test'],['test']
Testability,"Hi everyone,. I'm working right now on a small improvement that will allow people to directly import SofaPython plugin library (libSofaPython.so) inside their python script without the need for an external application (exemple runSofa). A python script could than looks something like:. ```; # scene.py; from libSofaPython import Sofa. root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(); for i in range(0,2):; ...; root.simulationStep(0.01); # Some data and timing analysis in python here...; ...; Sofa.cleanup(); ```; and could be called simply with; `python scene.py`. You can follow the development on the branch; https://github.com/jnbrunet/sofa/tree/sofa_python_without_executable. For now, the primary use for us is to create a batch application directly in python for our experiments (mainly time and precision benchmarks), but maybe some day we could also use this for a complete GUI experience. If you got any suggestion, please do not hesitate to write them here. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492:833,benchmark,benchmarks,833,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492,1,['benchmark'],['benchmarks']
Testability,"Hi guys,. This PR is a proof of concept to show an alternative implementation dynamic topologies and meshes using the CGOGN library. If you never heard about, CGOGN is a topological modeling kernel (see https://cgogn.github.io) implementing efficiently combinatorial maps to encode the topology and geometrical informations. . The current implementation is based on implementing new topology into new components. The PR introduce the following components: ; - VolumeTopologyContainer ; - CMTetrahedralCorotationalFEMForceField ; - MapTetrahedronSetTopologyContainer (wrapper that allows to use ""classical"" sofa components). The PR is not supposed to be merged in this state and we welcome any feedback on how to improve and generalize this work. EDIT: I (damien) changed the description of the PR trying to summary the discussion. . EDIT 2: ; Steps to compile:; - checkout the branch with a modularized version from [ (https://github.com/mimesis-inria/sofa/tree/cmtopology_module)](https://github.com/mimesis-inria/sofa/tree/cmtopology_module); - checkout CGoGN in a folder sofa/modules/SofaCombinatorialMaps/cgogn2; Compile and run the examples in sofa/modules/SofaCombinatorialMaps/examples. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/700:1445,test,test,1445,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/700,2,['test'],['test']
Testability,"Hi! :). The original issue and nice chronological story is described here; https://github.com/sofa-framework/sofa/issues/3318. TLDR:; 1. The destructor of `NarrowPhaseDetection` should clean up its map of `DetectionOutputVector`s; 2. `IntersectorFactory` should also keep track of already created `TIntersectorClass`s and release the old ones. Cheers,; Paul; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3337:898,test,test,898,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3337,2,['test'],['test']
Testability,"Hi!. When building plugins as standalone projects, the SofaFramework package doesn't expose the cmake config options used to build SOFA.; In the SoftRobots plugin (among others), tests are performed to know if SOFA has been built using the required options (such as SOFA_BUILD_METIS, MODULE_SOFASPARSESOLVER, PLUGIN_SOFAPYTHON, SOFA_BUILD_TESTS etc.) and out-of-tree configurations require to re-specify those options, even though they are only defined in the SOFA build. I've modified the SofaFrameworkConfig.cmake.in to expose those options to whoever does a find_package(SofaFramework), although that might not be the smartest way to do it (the list is non exhausive and it would be best if options were added in a smarter way.; I think that modules such as SOFASPARSESOLVER should export the MODULE_SOFASPARSESOLVER themselves for instance, and so should the plugins.; But then there's also a long list of options that would be worth exposing, such as:; - SOFA_BUILD_TESTS; - SOFA_BUILD_METIS; - SOFA_BUILD_TUTORIALS; - SOFA_WITH_DEPRECATED_COMPONENTS; - SOFA_WITH_THREADING; - SOFA_WITH_DEVTOOLS; - SOFA_USE_MASK; - .... And I don't know where those should be exposed.. So I'm looking fwd to your opinion on the question!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/927:179,test,tests,179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/927,3,['test'],"['test', 'tests']"
Testability,"Hi, . This PR follows the changes made in BarycentricMapping (i.e use of spatial hashing to find the nearest points instead of an exhaustive search). This new PR:. 1. Handle cases of several grid cells having the same h index. In such case, the distance between two points, that have the same h index, should be computed only if the points are in the same grid cell. This PR add this implementation. Each element is now stored in the hash table with its corresponding grid cell indices. 2. The nearest point, in a shared grid cell, may not be the global nearest point. To improve that, we detect when neighboring cells may contain a better solution, and do the check. These additional computations are still far better than the exhaustive search. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/896:1000,test,test,1000,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/896,2,['test'],['test']
Testability,"Hi, here is the content:. 1) [SofaKernel] FIX segfault in TetrahedronSetGeometryAlgorithms; The segfault happens when the component is located in a node without; a topology and a mechanical object. Then the 'draw' function is crashing. 2) [SofaKernel] ADD a link to manually set the topology in TetrahedronFEMForceField; The component was searching the topology in the context which was:; - implicit; - constraining the organization of components the scene graph. To solve this I added a SingleLink that allows to specify the topology.; If the link is not set then the existing behavior is used. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/973:847,test,test,847,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/973,2,['test'],['test']
Testability,"Hi, the createFromRotationVector was broken because of inverted inequation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2332:615,test,test,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2332,2,['test'],['test']
Testability,"Hi, tried both SOFA v22.06.00 and v23.06.00 versions, but not able to load Sofa.Component.UserInterface.ConfigurationSetting plugin, which is causing failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtili",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:214,log,log,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['log'],['log']
Testability,"Hi,. As discussed at Journées HPC INRIA in Lille, here is an initial nix package for sofa. It also include a flake (and its lock), which is not mandatory, but ease the use of the package, with commands like; - `nix build`, to compile the package in a sandbox; - `nix develop`, to provide a shell with an environment containing all required dependencies to build the project in the usual CMake way; - `nix run`, to start the software. All these commands take an optional path argument, defaulting to the current working directory, but we could also build / develop / run any commit / tag / branch / fork of the project with eg. `nix build github:sofa-framework/sofa`(for master) or `nix run github:nim65s/sofa/58ae0644d117aea880ed284f6cc0beb7e9802f96`. While here, this also setup some CI for this packaging, mostly to detect early:; - if anything new in the repo would break the nix packaging; - if any update from a dependency in upstream [nixpkgs](https://github.com/NixOS/nixpkgs/) would break sofa. But also, a nix binary cache can be set up with eg. https://www.cachix.org/, so that once a commit is build in CI, users & developers can directly use that cache instead of compiling themselves.; (it is also true in the other way: developers with write access to the cache can send their build result to it so that the CI will be instantaneous cache hit). Here is an example of CI build log: https://github.com/nim65s/sofa/actions/runs/11306279152/job/31446709649. PS: I did not test on macos yet, so this is probably a bit early to expect it work. It at least require darwin signatures I guess, I'll try to test that this week, when I can use an apple system. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059:251,sandbox,sandbox,251,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059,1,['sandbox'],['sandbox']
Testability,"Hi,. Here is our 'newtests' contributions for sofa this week. . It is very simple and consists in several new test for components:; - Light, LightManager, LocalMinDistance. One of them is tagged with OpenIssue because it shows a User Interface consistency problem; the ambient term of LightManager is a color but it does not accept string based color name as other sofa component do. To fix this we will need to unify the 'color' in all sofa. ; ; There is also a weird test called AllComponent that checks each sofa components if there is a corresponding example. Currently it fails because only 1/3 of them have one. . Finally Jérémie commited a script to convert the alias in a sofa scene to the real component name.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/69:110,test,test,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/69,2,['test'],['test']
Testability,"Hi,. I love @sescaida's PythonScriptDataEngine, I find it extremely useful when you don't want to implement a whole component to perform very basic actions. Though I find it cumbersome to have to manually specify the type of the input/output datafields.; While I have no idea (yet) how to fix this for the component's outputs, I implemented a small method to try to derive the input type from the linked value. We could also add scalar types to this method, to be able to handle passing scalar parameters directly from python.; Also, I think it would make more sense to use directly the output of ; ```; datafield->getValueTypeInfo()->name(); ``` ; instead of an arbitrary __char__ when expliciting the datafield type in the PSDE factory. If you have any idea how I could do something similar for output fields, I'm taking any advice :). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629:1089,test,test,1089,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629,2,['test'],['test']
Testability,"Hi,. In order to reduce compile time of sofa plugins, I decided to compile my plugins outside of Sofa (a build folder for each plugin, CMAKE_PREFIX_PATH and CMAKE_INSTALL_PREFIX to tell cmake where to find sofa); Compiling tests then doesn't work since the gtest headers, that are bundled in sofa, are not deployed on sofa's install dir. This PR rectifies that. @sofa-framework/consortium, I also believe that there should be clear guidelines in SOFA to determine what the ""normal"" way of compiling plugins should be.; I believe that outsourced builds should be the way to go, instead of adding plugins through ; `applications/plugins/CMakeLists.txt`; or cmake's; `EXTERNAL_DIRECTORIES`; since it allows people to isolate SOFA a bit more from their work. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/395:223,test,tests,223,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/395,3,['test'],"['test', 'tests']"
Testability,"Hi,. The current dash board does not allows to differentiate tests that fails because they are 'showing' a not yet fixed sofa defect to the one caused by regression (ie tests that were supposed to work but don't anymore). . This is a problem because while introducing new regression failure is a bad thing, introducing new tests that exhibit sofa defect is a positive thing. But they have the same results...turning the dashboard to orange. . I see two consequences:; - when there is test failures because of open-issues we will detect much less easily the regressions tests (that are 'more' important !) ; - people will prevent themselves to push open-issues test to avoid to turn the dash board to a not green status (because they are ashamed...or because they prefer to preserve the readability of the dash board to detect regression). So would it be possible to change that so that each tests with a pattern (lke ""OpenIssue"" in their name are counted separately ?. This would allow to reports two numbers instead of one eg:; regression test failure : 0 ; open issues tests failure: 123 ; And also to let the dashboard green for open issues tests failure. . DM.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/52:61,test,tests,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/52,10,['test'],"['test', 'tests']"
Testability,"Hi,. This PR fix the live coding of python component. I found two problems. . One is a bug in the FileMonitor which prevent to monitor several files located in the same directory but given in a different manner as in: ; ```; ""./examples/Afile.txt""; ""/this/is/absolute/examples/Afile2.txt""; ```. The second problem is a missing PythonEnvironement::gil before calling python code. This PR fix the two. ; @guparan and @hugtalbot Could this PR be treated in fast-path please ? . @maxime-tournier I took me a while to understand that ; ```cpp; PythonEnvironment::gil lock(); ; ```; Is not doing anything useful. The problem is well known but in general it is quickly catched but here, as lock is a RAII, everything compile but just crash when calling python code. I'm quite sure this will happen to a lot of people so I wonder if we can make something more elegant that removing the default constructor and forcing to provide the *trace pointer (possibly nullptr). Any idea ? . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/414:1224,test,test,1224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/414,2,['test'],['test']
Testability,"Hi,. While trying to compile SOFA(https://github.com/sofa-framework/sofa => branch ""v23.06"") with LLVM 16 , we are getting linker errors as below,. ld.lld: error: undefined symbol: vtable for sofa::linearalgebra::FullVector<double>; >>> referenced by ld-temp.o; >>> lto.tmp:(sofa::component::odesolver::testing::getVector(boost::intrusive_ptr<sofa::simulation::Node>, sofa::core::TVecId<(sofa::core::; VecType)0, (sofa::core::VecAccess)0>, bool)); >>> did you mean: typeinfo for sofa::linearalgebra::FullVector<double>; >>> defined in: ../../../../../lib/libSofa.LinearAlgebra.so.23.06.00; >>> the vtable symbol may be undefined because the class is missing its key function (see https://lld.llvm.org/missingkeyfunction); clang-16: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/build.make:212: bin/Sofa.Component.ODESolver; .Backward_test] Error 1; make[1]: *** [CMakeFiles/Makefile2:5981: Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs... To Resolve this, we have included definition of key function of FullVector calss in FullVector.cpp. The key function seems to be resize() - i.e the first non-pure, non-linear and virtual function in a polymorphic class. The actual definition of resize() is present in FullVector.inl file and we have commented it out. . Please let us know if the changes are good. . Thanks,; Sandeep.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4402:303,test,testing,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4402,3,['test'],"['testing', 'tests']"
Testability,"Hi,. it is logical that when using a RegularGrid, the discretization should be > 1 in each direction. But the constructor take ; `RegularGridTopology(int nx, int ny, int nz);`. And there is no check on those values. They could even be null or negative.; Then in some methods you have this code:; `i*2*r/(nx-1)`; which could lead to a division by 0 and crash Sofa. As there is not catch and try, how could I block the creation of a RegularGrid(1, 1, 1) ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/163:11,log,logical,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/163,1,['log'],['logical']
Testability,"Hi,. several tests were already done for topological modifier, they are tested through scenes in examples/Components/Topology/TopologicalModifiers. They test: add/remove of topological elements; - Is sofaVerification still used? ; - I can easily rewrite those tests in c++ using the ::Sofa_test api. Is it better? what is the politic between doing tests through scene or Sofa_test.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/43:13,test,tests,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/43,5,['test'],"['test', 'tested', 'tests']"
Testability,"Hi,; ; Here's my fix for issue #1534. The problem was the use of `beginEdit()`, `endEdit()`... I'm not sure what was happening exactly,; but it looked like it was triggering extra callback... - I've replaced all `beginEdit()` with `getWriteOnlyAccessor()` and removed the `endEdit()` when there was any. I'm pretty sure `MeshGmshLoader` is also broken. I was about to fix it, but I came across another problem.; `MeshGmshLoader` uses calls to `addTriangle(...)`, `addEdge(...)`, `addQuad(...)`, etc., which are implemented in `MeshLoader`.; For the moment, `addTriangle` is the only one which has been duplicated to work with data returned by `getWriteOnlyAccessor()`.; I think we all agree that duplication of code should be avoided. I'm not sure what we should do here. Should we generalize the use of `getWriteOnlyAccessor()` in all loaders, and change all `addEdge(...)`, `addQuad(...)`, etc., signature once and for all (no duplication)?; Or should it be fine to use `beginEdit()`, and my fix doesn't solve the real problem? . Fixes #1534; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1554:1296,test,test,1296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1554,2,['test'],['test']
Testability,"Hi,; Found during investigation of https://github.com/sofa-framework/SofaPython3/issues/306; Does not solve the issue, but might still be a good idea. :). Cheers,; Paul. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3365:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3365,2,['test'],['test']
Testability,"Hi,; `SpringForceField` currently only implements `applyRemovedPoints`.; If a point is removed from the topology, the springs are removed correctly.; If only an edge is removed, the springs are not changed. https://user-images.githubusercontent.com/29635054/188287191-cebd8b7d-b66d-4f25-90f7-e7b90efa2098.mp4. The PR is marked as WIP, because I need help on correctly registering the component to listen for `core::topology::TopologyChangeType::EDGESREMOVED`.; The current code compiles fine, but the code of `applyRemovedEdges` is never reached. Could someone give me a hint on what is missing? :). Cheers,; Paul; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3269:1154,test,test,1154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3269,2,['test'],['test']
Testability,"Hi,; at the moment, `springsIndices1` and `springsIndices2` are not updated, when calling `removeSpring` in `SpringForceField`. Added a call to `updateTopologyIndicesFromSprings` in `removeSpring`. Cheers,; Paul. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3268:752,test,test,752,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3268,2,['test'],['test']
Testability,"Hi,; removing `SphereCollisionModel` elements from a `EdgeSetTopologyContainer` currently does not work, because . `TopologicalChangeManager::removeItemsFromSphereModel` calls `getCollisionTopology`; https://github.com/sofa-framework/sofa/blob/d42e3547dffaf385448fb077d466fc0bebc39bc9/Sofa/GUI/Component/src/sofa/gui/component/performer/TopologicalChangeManager.cpp#L297; which is not implemented in `SphereCollisionModel`, and the default from `BaseMeshTopology` returns `nullptr`.; https://github.com/sofa-framework/sofa/blob/471a3df6a377f92155f34ab4a75e931ec9559f7f/Sofa/framework/Core/src/sofa/core/CollisionModel.h#L357. I tried porting over the topology linking from [TriangleModel](https://github.com/ScheiklP/sofa/blob/sphere_on_edge_topo_changes/Sofa/Component/Collision/Geometry/src/sofa/component/collision/geometry/TriangleModel.inl), but it seems I am missing something, because it does not work :D ; https://cloud.ipr.kit.edu/s/ZHW7Jkz5yE6wb42. Is anyone seeing something obvious?. Cheers,; Paul. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3203:1550,test,test,1550,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3203,2,['test'],['test']
Testability,"Hi,; with @IPeterlik we noticed not so long ago that the pointers to the velocity, forces and positions of the mechanical object linked to the Monitor were not pointing at the same place before and after the call to init().; To show the issue I made this test scene for the monitor, but now the problem doesn't show up anymore. So it either has been corrected or the problem came from somewhere else. Anyway the test is coded now, so here's a PR for it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312:255,test,test,255,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312,4,['test'],['test']
Testability,"Homogeneize the API for update.; A layer is added to avoid a direct access to the DataTracjer which is now private:; - in DataTrackerDDGNode: trackInputData, hasInputDataChanged, haveInputsDataChanged, cleanInputTracker; - in BaseObject: trackData, hasDataChanged. The name of the update function is:; - `doUpdate()` for Engines; - `doInternalUpdate()` for components inheriting from BaseObject. Update engines, and tests accordingly. Rename UpdateInternal(DataVisitor) into InternalUpdate(DataVisitor). Remove the DataTrackerFunctor and its test. TODO: update constantFF with new API. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1163:416,test,tests,416,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1163,4,['test'],"['test', 'tests']"
Testability,"Hopefully this will fix our CI restart problems. We are now clamping the scene-test warnings file to 5000 warnings max.; If clamping is done, an error is reported in output and in scene-test errors summary. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/559:79,test,test,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/559,4,['test'],['test']
Testability,"Hot fix ! :fire: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2408:558,test,test,558,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2408,2,['test'],['test']
Testability,"I added a boolean data, useSymbolicDecomposition, to the sparse solver LDL to enable the user to choose if they want to use a symbolic decomposition or if they want the solver to compute the decomposition at each step.; By default this boolean is true. It will follow the same behavior as previously, the solver will use a symbolic decomposition.; If this boolean is false then the solver will compute the decomposition at each step. I also fixed some spelling mistakes in the commentaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2756:1030,test,test,1030,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2756,2,['test'],['test']
Testability,"I am trying to compile SofaPython3/master with SOFA v20.06 and it doesnt compiles. This is one of the errors I have. The full log is 2k lines, I wont share if not needed. . ```FAILED: bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o; /usr/bin/c++ -DBOOST_ALL_NO_LIB -DBOOST_FILESYSTEM_DYN_LINK -DBOOST_PROGRAM_OPTIONS_DYN_LINK -DBOOST_SYSTEM_DYN_LINK -DBOOST_THREAD_DYN_LINK -DBindings_SofaRuntime_EXPORTS -DNDEBUG -DSOFA_HAVE_SOFAPYTHON3 -I/mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/SofaRuntime/src -I/mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/Plugin/src -I/mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/Sofa/src -isystem /usr/include/python3.8 -isystem /usr/local/include/SofaSimulation -isystem /usr/local/include/SofaFramework -isystem /usr/local/include/extlibs/json -isystem /usr/local/include/eigen3 -isystem /usr/local/include/SofaBase -fPIC -fvisibility=hidden -std=c++17 -flto -fno-fat-lto-objects -Dregister= -fvisibility=hidden -std=c++17 -MD -MT bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o -MF bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o.d -o bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o -c /mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/SofaRuntime/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp; In file included from /usr/local/include/SofaFramework/sofa/simulation/Node.h:59,; from /usr/local/include/SofaFramework/sofa/simulation/Simulation.h:25,; from /usr/local/include/SofaFramework/sofa/helper/AdvancedTimer.h:25,; from /mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/SofaRuntime/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp:28:; /usr/local/include/SofaFramework/sofa/simulation/MutationListener.h:37:32: error: variable ‘sofa::simulation::SOFA_SIMULATION_CORE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1429:126,log,log,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1429,1,['log'],['log']
Testability,"I am trying to create a MechanicalObject for a unit test. I have the following:. ```; namespace VNCS; {; namespace Sim2D; {; struct Kernel {; using Real = double;. using SimType = typename sofa::defaulttype::Vec2Types;; static constexpr int SimSize = 2;; using Coord = typename SimType::Coord;; using Deriv = typename SimType::Deriv;; using VecCoord = typename SimType::VecCoord;; using VecDeriv = typename SimType::VecDeriv;; using MatrixDeriv = typename SimType::MatrixDeriv;; using DataVecCoord = typename sofa::Data<VecCoord>;; using DataVecDeriv = typename sofa::Data<VecDeriv>;; using DataMatrixDeriv = typename sofa::Data<MatrixDeriv>;. using Point = Eigen::Vector2d;; };; } // namespace Sim2D. } // namespace VNCS; ```. ```; #include <SofaBaseMechanics/MechanicalObject.h>; #include <SofaBaseMechanics/MechanicalObject.inl>. namespace VNCS; {; namespace Sim2D; {; using MO = sofa::component::container::MechanicalObject<VNCS::Sim2D::Kernel::SimType>;. } // namespace Sim2D; } // namespace VNCS; ```. ```; #include <gtest/gtest.h>; #include <VNCS/2D/MechanicalObject.h>. TEST(MechanicalObject, 2D); {; // Create a Clustering matrix; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; // mo->resize(10);; // auto positions = mo->readPositions();. // EXPECT_EQ(positions.size(), 10);; }; ```; My linking line is the following:. ```; 2/2 0.4/sec] Linking CXX executable bin/tst_mechanicalobject; FAILED: bin/tst_mechanicalobject ; : && /usr/bin/c++ -O3 -DNDEBUG tests/MechanicalObject/CMakeFiles/tst_mechanicalobject.dir/tst_mechanicalobject.cpp.o -o bin/tst_mechanicalobject -Wl,-rpath,/opt/libs/sofa/build/install/lib /opt/libs/sofa/build/install/lib/libSofaBaseTopology.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCommon.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaDefaultType.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaHelper",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1752:52,test,test,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752,1,['test'],['test']
Testability,"I am unsure this PR is correct, so it really needs a green light from others before merge. When trying to call `std::exit` in some plugin, I had a segfault in cleanup code similar to this one:. ```c++; // Detect missing cleanup() call.; static const struct CleanupCheck; {; CleanupCheck() {; }; ; ~CleanupCheck() {; if (core::isInitialized() && !core::isCleanedUp()); helper::printLibraryNotCleanedUpWarning(""SofaCore"", ""sofa::core::cleanup()""); // segfault; }; } check;; ```. In fact, most `init.cpp` files in SOFA have code similar to this one. In my case, `MessageDispatcher::LoggerStream::~LoggerStream` caused a call to `MessageDispatcher::process` which would then cause a segfault. What I don't understand is *why* the above code snipped does not simply `cleanup()` the library in the destructor, since the latter is being called while the library unloads and this is the last chance to actually clean things up, instead of (trying to) emit a warning while the whole program is being terminated. So unless there is a compelling reason to leave it this way (and I would really like to know it), I suggest the above to be changed to:. ```c++; static const struct CleanupCheck; {; CleanupCheck() {; init();; }; ; ~CleanupCheck() {; cleanup();; // leaving the warning if for some reason cleanup failed; if (core::isInitialized() && !core::isCleanedUp()); helper::printLibraryNotCleanedUpWarning(""SofaCore"", ""sofa::core::cleanup()"");; }; } check;; ```. so that the library automatically `init()` and `cleanup()` upon `dlopen`/`exit`. <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168:579,Log,LoggerStream,579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168,3,"['Log', 'test']","['LoggerStream', 'test']"
Testability,I built Sofa with the registration plugin successfully. When I had a test with ICPRegistration_ShapeMatching.scn in .\applications\plugins\Registration\examples. It reminded these errors:. [INFO] [SofaPython] Added ‘F:/SOFA16.12/sofaproject/sofasrc/applications/plugins/image/python’ to sys.path; [INFO] [SofaPython] Added ‘F:/SOFA16.12/sofaproject/sofasrc/applications/plugins/Registration/python’ to sys.path; [INFO] [SofaPython] Added ‘F:/SOFA16.12/sofaproject/sofasrc/applications/plugins/SofaPython/python’ to sys.path; [INFO] [PluginManager] Loaded plugin: F:/SOFA16.12/sofaproject/sofabuild/bin/Release/SofaPython.dll. [INFO] [PluginManager] Loaded plugin: F:/SOFA16.12/sofaproject/sofabuild/bin/Release/Registration.dll; [ERROR] [RequiredPlugin] Plugin not found: “SofaMiscForceFieldDev”; [ERROR] [DAGNode “source”] Object type “RotationFinder” creation Failed; [ERROR] [DAGNode “source”] Object type “ShapeMatchingForceField” creation Failed; [ERROR] [SceneLoaderXML] Node initialization failed. I didn’t find any information about this SofaMiscForceFieldDev plugin. Can anyone give me some tips about that?. Thanks in advance!,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/307:69,test,test,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/307,1,['test'],['test']
Testability,"I call it stupid because I don't know how the discrepancy occurred.; Since I think that this component is not that important, I did not want to spend more time on it. At least, now it does not crash. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3692:739,test,test,739,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3692,2,['test'],['test']
Testability,"I can't add much more than this title. Fix #4202. [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/247]; [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/258]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205:725,test,test,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205,2,['test'],['test']
Testability,"I cannot really explain but MSVC was complaining about `warning C4723: potential divide by 0` even if there was a check on the denominator ; https://github.com/fredroy/sofa/blob/0748ab24dff55ebab5c6c339e1ade7ebbd24ddd0/Sofa/Component/MechanicalLoad/src/sofa/component/mechanicalload/PlaneForceField.inl#L376. I suspect the compiler gets a bit awkward because of the `type::Vec3d normal { d_planeNormal.getValue() };` which basically converts any vec/fixed_array of any size to Vec3d (this assumption comes especially from the fact that the warnings come only if the DataTypes is not 3 dimensions); So this PR explicitly converts to Vec3, and because all this stuff was done twice, factorize the code in an anonymous function (and change the check as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3315:1296,test,test,1296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3315,2,['test'],['test']
Testability,"I chose the library https://github.com/yhirose/cpp-httplib because it allows also to create a server (but not used in this PR). In any case, whatever the library we choose, we must use openSSL (we request a https). This is the main concern about this PR. In terms of installation, I think Ubuntu and macOS are straightforward because there are packages. But Windows is bit more tricky. The pre-built binaries are not available on the openSSL website. I found them here: https://slproweb.com/products/Win32OpenSSL.html. After installation, I had to define `OPENSSL_ROOT_DIR`, and add the `bin` folder to my path. In this PR, the newly introduced module is linked only in Sofa.GUI.Qt and the version checker is called at init (for test). A later contribution will use the introduced function to show the latest version in the GUI. Output example:; ```; [INFO] [VersionChecker] You are using the latest version (24.06.99). {272.525 ms}; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4702:729,test,test,729,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4702,3,['test'],['test']
Testability,"I converted the warning to an error in the following code of the ObjectFactor:; ```cpp; if (isUserTemplateNameInTemplateList); {; msg_warning(object.get()) << ""Requested template '"" << usertemplatename << ""' ""; << ""is not compatible with the current context. ""; << ""Falling back to the first compatible template: '""; << object->getTemplateName() << ""'."";; }; else; {; msg_warning(object.get()) << ""Requested template '"" << usertemplatename << ""' ""; << ""cannot be found in the list of available templates ["" << ss.str() << ""]. ""; << ""Falling back to default template: '""; << object->getTemplateName() << ""'."";; }; ```. To me, this situation is to be taken into account more seriously than a warning. As failing template deduction is now an error, it leads to a lot of failing tests. I fixed them as well. I added unit tests for `OglModel`. I factorize the parse code from the 3 masses. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404:775,test,tests,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404,4,['test'],"['test', 'tests']"
Testability,"I copied/pasted a path with backslashes in the env variable SOFA_ROOT, and a bad thing happened. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2970:636,test,test,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2970,2,['test'],['test']
Testability,"I did not bother to test/compile/configure, as it is based on Compliant which was deprecated (and abandoned I suppose) for quite a long time. for those who are curious -> https://github.com/sofa-framework/PreassembledMass. https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3802:20,test,test,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3802,3,['test'],['test']
Testability,"I did not find how the macro `SOFA_DDG_TRACE` was enabled. The code inside did not compile. The intended behavior can be obtained using a debugger. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4590:687,test,test,687,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4590,2,['test'],['test']
Testability,I didn't change anything else except in DataFilename the enum FILE is colliding with the FILE* defined in cstdio. ; So I used an enum class instead (which is a c++11 designed for that). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1460:437,test,test,437,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1460,2,['test'],['test']
Testability,"I dislike the current name of collision response method:; - ""default"" --> which I changed for ""penality""; - ""FrictionContact"" --> which I changed for ""LagrangeMultipliers"". It is definitely open to discussion but it would prevent from misleading users, what's your opinion?. ![](https://i.ibb.co/N76dF3C/Screenshot-from-2021-02-27-19-24-18.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1871:885,test,test,885,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1871,2,['test'],['test']
Testability,"I do not have cstringt.h on my system, and it does not seem to be a requirement to build; FileMonitor_windows.cpp ; Any thoughts about this ?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/448:394,test,test,394,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/448,2,['test'],['test']
Testability,"I do not know whether some of these `cmake_minimum_required` were set to another version than SOFA for a specific reason :thinking: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4886:673,test,test,673,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4886,2,['test'],['test']
Testability,"I don't believe there was a pull request already attached to issofa_plugins branch ? My apologies if that ; was the case. . # Purpose; Some basic plugin functionalities were silently changed for no good reasons other the past years, namely; - SOFA_LIBSUFFIX which should be set as ""_d"" during a debug build is broken under msvc since c89da68 which as the commit name says is indeed monstruous. It was ""fixed"" later by adding directly inside the PluginManager code a condition to add the ""_d"" suffix by checking the compiler. ; - The default behavior of the global `PluginRepository`, was changed by c5a19fe for absolutely no good reasons.; It breaks a very basic functionaliy ( you can always load a library that is in your working directory ), also this change had some **interesting** side effects when basically you write a unit test which relies on; a scene file that uses a `RequiredPlugin`... that shortcoming was somewhat hidden by having all tests relying on `SofaGTest`, whose sole reason of being is to actually amend c5a19fe by populating the PluginRepository with the current working dir. Some additional functionalities are added to `RequiredPlugin` by this PR, namely the ability to specify other suffixes ( or no suffix at all ) to prepend when attemtping to load a plugin with a name hint. . # CHANGELOG ; FIX; [SofaHelper]; - Restore the `SOFA_LIBSUFFIX` behavior with msvc; - `PluginRepository` is initialized to contain the current working directory. CHANGE; [SofaHelper] ; - `PluginManager` : keep only a single version of the `loadPlugin` method. Also the method returns true; even if the plugin is already loaded. Returning false is kept only for real failures, whereby the library could ; not be loaded. If it is important to check wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ;",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:832,test,test,832,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,2,['test'],"['test', 'tests']"
Testability,I don't know how it was working before but we need double antislash in; regex-string. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1161:339,test,test,339,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1161,2,['test'],['test']
Testability,"I don't know what exactly was TData for, but in years no-one ever use it so I merged Data & TData to make things more clear.; I also re-implemented the existing feature using the child-delegation pattern instead of relying on call super. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1753:779,test,test,779,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1753,2,['test'],['test']
Testability,"I don't know why this was not detected from a long time (compiler options for sure) but I stumbled on multiple definitions with MultiMapping with a custom compilation with gcc.; And these errors are perfectly fine as the header of MultiMapping is instancing directly various versions of MultiMapping (instead of only declaring them). This PR fixes it and the header only declares them now (and does not instantiate directly). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1982:965,test,test,965,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1982,2,['test'],['test']
Testability,"I don't know why this was not detected while doing the previous #1770 🤨; Or maybe it was not noticed... 😮. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1781:646,test,test,646,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1781,2,['test'],['test']
Testability,"I don't know why, but here it doesn't compile. ReadAccessor is not possible on: core::objectmodel::RenamedData<SeqPositions> inputPosition;. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5046:680,test,test,680,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5046,2,['test'],['test']
Testability,"I don't think that anything triggers when a non-existing file is trying to be load. So I added an error. I think it could have detected the error from https://github.com/sofa-framework/sofa/pull/3674. Unit tests are added. Changes in Node are just nullptr checks to prevent crashes when `getSimulation()` returns `nullptr`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3677:206,test,tests,206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3677,3,['test'],"['test', 'tests']"
Testability,"I don't understand how such a function could have worked given that; SparseGrid & MeshGrid are not equivalent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1843:650,test,test,650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1843,2,['test'],['test']
Testability,"I don't understand why this check was made:; Without invalidating the bbox, the node's bbox will only be sized up, and never down with this visitor, to my understanding.. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1268:422,test,test,422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1268,2,['test'],['test']
Testability,"I dont know why but the CI raises 3 new erroneous scenes (and rightfully so); This PR corrects them anyway (and removes the warnings in the meantime). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1798:690,test,test,690,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1798,2,['test'],['test']
Testability,"I dont see why `addComplianceInConstraintSpace` is called if printLog() is enabled 🤔. This block of code just appears from nowhere in the git history, and this part is not even in the frictionless version. and _W is normally not used in the unbuilt case anyway,,,,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4170:805,test,test,805,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4170,2,['test'],['test']
Testability,"I forgot one file in #586, leading to the disappearance of 14 tests. You didn't see it? Me neither. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/675:62,test,tests,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/675,3,['test'],"['test', 'tests']"
Testability,I forgot to include the version header ... :1st_place_medal: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1312:314,test,test,314,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1312,2,['test'],['test']
Testability,"I found the dependency between SofaFramework & gtest annoying so I moved the classes that rely on gtest from the framework to put them in two external packages:; - SofaFramework/SofaHelperTesting; - SofaSimulation/SofaSimulationHelperTesting . These two packages have dependencies on both gtest and SofaFramework or gtest and SofaSimulation. These packages should now be imported in subsequent tests. . I also moved framework_test and simulation_test which have non consistant naming and location to what, I hope, is more consistant.; So ; - SofaKernel/framework/sofa/framework_test is now SofaKernel/SofaFramework/tests/SofaFramework_test ; - SofaKernel/modules/sofa/simulation/frameworkextra_test is now SofaKernel/SofaFramework/tests/SofaFrameworkExtra_test ; - SofaKernel/modules/sofa/simulation/simulation_test is now SofaKernel/SofaSimulaton/tests/SofaSimulation_test . This PR rely on #604 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/605:394,test,tests,394,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/605,6,['test'],"['test', 'tests']"
Testability,"I found the graph difficult to read in the GUI. In particular, differentiating the name from the class name, and objects from nodes. Here is what I propose:. # BEFORE. https://user-images.githubusercontent.com/10572752/134344194-8be54612-178a-4c1b-9374-d18e57dcd2e3.mp4. # AFTER. https://user-images.githubusercontent.com/10572752/134344330-122dc953-fa71-494a-a678-e101f34b0e4a.mp4. - Nodes are in bold; - Graph is divided in two columns: 1) the name of the object, 2) its class name. It is inverted compared to the previous display. I think it's more logical with the name first if you think about a path. The path of an object is made from multiple names (nodes + objects), not class names. This way, it is easier to find an object from a path (in a link for example) in the displayed graph.; - The class name is in grey; - Both columns have a header; - Columns can be resized with the mouse using the headers; - There is a tooltip on each object, showing the name and the class name. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2356:552,log,logical,552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2356,3,"['log', 'test']","['logical', 'test']"
Testability,"I found those methods while digging into the code. I'm pretty sure no one is using it and not sure it even work. As mentioned in the disabled warning, the `MeshExporter `do that in a better way. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4192:736,test,test,736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4192,2,['test'],['test']
Testability,I had nothing to do in the past 10 minutes...so I did harmless cleaning to relax. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/733:333,test,test,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/733,2,['test'],['test']
Testability,"I had some runtime issues on Windows without the flag. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3543:594,test,test,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3543,2,['test'],['test']
Testability,"I have installed via the souce code method of SOFA; All the build and compile process has successed but I can not open the runsofa test binary file successfully.; It always says that: the runsofa can not find its entry to link to the libpng16.dll ; ![image](https://user-images.githubusercontent.com/27597690/81058246-e78ea780-8e82-11ea-8cfc-2d698a2637dd.png); That is very weird because I don't know how is this .exe related to my anaconda 3 which include a python 3.7 (I have python 2.7 installed and my sofapython is built successfully). And then I find that the ""sofa-windows-dependency-pack"" include this .dll file so I replace it in the anaconda directory and it can find its entry but gives me another error like this:; ![image](https://user-images.githubusercontent.com/27597690/81058659-ba8ec480-8e83-11ea-8069-504741e99e43.png); I really don't know why sofa go to my anaconda directory to find that .dll and I don't know where I was wrong, I use vs2019 to generate the runsofa binary successfully. Hope to be reply!. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1364:131,test,test,131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1364,1,['test'],['test']
Testability,"I have no idea what this code is supposed to do.; - it does not seems related to something that is in SimulationGraph (there is no #include). ; - it use a weird string comparison to detect parent-child relationship instead of the meta classe facilities (BaseClass) ; - it seems to be supposed to implement specific behavior for the XML loader ; - removing it does not change anything. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2694:924,test,test,924,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2694,2,['test'],['test']
Testability,"I have the feeling that this useful is not used and is dating from the pre-SofaPython area.; Tell me if I'm wrong. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1763:654,test,test,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1763,2,['test'],['test']
Testability,"I integrated the Tracy profiler (https://github.com/wolfpld/tracy). It adds a ton of new feature to our internal profiler. In particular, I like:; - Multithreaded timeline; - Statistics; - Messages; - Memory management (need more work, I could not test it); - See context switching; - Mutex profiling (not tested yet). I tried not to be invasive, but it will require a change on the way we define timers such as in https://github.com/sofa-framework/sofa/compare/master...alxbilger:sofa:scoped_timer (the demo runs with this branch). TODO: a dedicated MessageHandler. ![peek (1)](https://github.com/sofa-framework/sofa/assets/10572752/17714b7d-337e-43b2-9701-3ae20dd5f262). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4182:248,test,test,248,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4182,4,['test'],"['test', 'tested']"
Testability,I just drop that here to remove warnings... (every thing is in the title). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1096:326,test,test,326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1096,2,['test'],['test']
Testability,"I know the QtGui is going to be deprecated soon but I wanted/needed this feature since so long. Basically allow to see the animation step duration (ms) in a graphView, then allow to navigate on the graph or on the sliders and see the different substeps exectuted during this animation step.; Substeps are displayed in a Tree, in the right order and with their respective time and percentage resp. to the full step duration. All the mechanism to parse data could be kept for future runSofa2. The windows is a ""little"" inspired from Unity3D profiler. ![image](https://user-images.githubusercontent.com/21199245/57310905-ecdbd980-70ea-11e9-823d-56007e52fa8b.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1028:912,test,test,912,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1028,2,['test'],['test']
Testability,"I know we are planning to drop VS2015 support in a very near future (I'm actually working on it) but this ""unknown option"" warning bothers me at each compilation (yes, I'm still under VS2015 myself). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1192:451,test,test,451,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1192,2,['test'],['test']
Testability,I noticed several flaw (or hard to understand) with the way mass and totalMass interact in DiagonalMass compared to what is done in UniformMass. . eg: ; - totalMass is set as readOnly in DiagonalMass while it is not in UniformMass; - despite totalMass is readOnly the value can still be changed in the scene file (so I wonder that the readOnly flag should be renamed to something that reflect what is it used for :)); - despite totalMass is readOnly there is no error message indicating to the user that the value he gave in his scene is simply dropped and that he should not use this flag. ; - the totalMass parameter is re-computed in the un-specialized implementation of the reinit function... but the specialization for rigid/vec and so on are not forwarding to this un-specialized implementation but the to implementation in-herited from the parent. (Is this really what we want ? This look a very weird design to me and I suspect problems on this forwarding to the parent.). ; - f_mass data (mass) field also seems to be a readOnly component (it seems deduced from massDensity and volume of the elements) but it is not tagged in the same way as totalMass. Why ? . Any feedback or confirmation/or not on these topics would help me to write the correct test. . DM.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/36:1257,test,test,1257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/36,1,['test'],['test']
Testability,"I noticed that SingleStateAccessor was printing an error if mstate pointer is null which was not differentiating the following cases:; - mstate not linked but found in the context; - mstate not linked AND not found in the context. Commit of interest: https://github.com/sofa-framework/sofa/commit/172ec0028e0e1a25ff12a8eb5521499c9520afcc; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4917:878,test,test,878,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4917,2,['test'],['test']
Testability,"I noticed that installed headers for SofaBaseMechanics aren't where they're supposed to be because the header's directory structure is not properly respected in SOFA's sofa_install_targets macro. This commit fixes the issue for the specific case of SofaBaseMechanics/BarycentricMappers/*.{h,inl} but doesn't offer a definitive fix. Additionally, it duplicates headers in SofaBaseMechanics/ since the sofa_install_targets is still in use. A definitive solution would be to embed the fix in the sofa_install_targets macro, but I wanted your input first. @damienmarchal @guparan ; . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/887:831,test,test,831,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/887,2,['test'],['test']
Testability,"I noticed while trying to build SofaPython as out-of-tree that the build could not find <SofaExporter/OBJExporter.h>. It was because SofaExporter exposed its header files directly, instead of through a common folder named SofaExporter.; Thus this PR fixes the INCLUDE_INSTALL_DIR in SofaExporter/CMakeLists.txt. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1089:563,test,test,563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1089,2,['test'],['test']
Testability,"I propose a more readable code for the component BruteForceDetection. It is a crucial component, used in many Sofa scenes, and yet it is hard to understand what it does.; Among the changes I propose:; - Split giant functions into multiple smaller functions; - Give meaningful names to functions, variables and types; - Merge simple operations which was hard to read into simple expressions; - Add a lot of comments. The algorithm stays the same. Note the number of lines is larger than before. It is the price for readability. It is mainly due to the several functions I added. I did not notice any performances drop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1999:1157,test,test,1157,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1999,2,['test'],['test']
Testability,"I removed code that was unreachable. I am not sure that it is the intended behavior. I need advices (from @epernod ?). Fixes https://github.com/sofa-framework/sofa/issues/3739. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3771:716,test,test,716,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3771,2,['test'],['test']
Testability,"I removed some tests from the Data_test.cpp file and created a new files for these tests and i updated the Cmakelists.txt; __________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2573:15,test,tests,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2573,4,['test'],"['test', 'tests']"
Testability,"I removed the check for a present topological mapping.; With the check a simple setup like. ```; TriangleSetTopologyContainer; TriangleSetTopologyModifier; MechanicalObject; TriangleCollisionModel with tag CarvingSurface; ```. is not recognized as a valid model for carving. Cheers,; Paul. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3276:829,test,test,829,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3276,2,['test'],['test']
Testability,"I saw that `addSubMBKToMatrix` was not used in the SOFA code base, so I removed it savagely. I don't know the consequence of it. I would like feedback. Of course, if it is decided to remove it, I'll add the deprecated flags in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2244:775,test,test,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2244,2,['test'],['test']
Testability,"I start in advance the lifecycle process for v23.06; I am looking for feedback if anything is wrong in my first changes, once this is validated I will proceed to the entire code base. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3634:723,test,test,723,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634,2,['test'],['test']
Testability,"I suggest to add a message in GUI that a newer version of SOFA is available if an old version is used. I would look like:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/4aeaabcf-ec81-4585-b53c-9a8f24ac68f1). I chose to rely on Qt because otherwise it requires a new lib for the http request, and Qt is already here. But having Qt is not enough. I have an error related to ssl (similar error to https://stackoverflow.com/questions/53805704/tls-initialization-failed-on-get-request). It requires additional components in the Qt installation. I did not try it myself because it changes the installation process of SOFA. So before going further, we need to conclude that this feature is desirable (and is not a gadget). If it is, we can decide to rely on Qt and its additional component, or to go with a simpler C++ library (https://github.com/JosephP91/curlcpp for example). The second solution would open the version checker to ImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4648:1490,test,test,1490,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648,2,['test'],['test']
Testability,I suppose it is an old macro. Was not accesible from cmake config and always equal to true if compiled in debug mode. only a few code was using it and were already checking NDebug as well. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1232:440,test,test,440,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1232,2,['test'],['test']
Testability,"I suspect a copy/paste mistake when implementing this unit test in https://github.com/sofa-framework/sofa/pull/942. Note that the unit test succeeded despite the mistake. Perhaps the unit test is not enough strict?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3864:59,test,test,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3864,5,['test'],['test']
Testability,"I suspect that `m_cId` (introduced in https://github.com/sofa-framework/sofa/commit/142aa4ba1f5299301633600ba8031e8159b67d55) and `m_constraintIndex` mean the same thing. I suggest to remove `m_cId` and to keep the Data. Related to https://github.com/sofa-framework/sofa/pull/4763 and https://github.com/SofaDefrost/SoftRobots/pull/283. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4786:876,test,test,876,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4786,2,['test'],['test']
Testability,"I suspect that it is not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2313:570,test,test,570,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2313,2,['test'],['test']
Testability,"I suspect the tests are failing because of api inconsistancy. Signed-off-by: Damien Marchal <damien.marchal@univ-lille1.fr>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1697:14,test,tests,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1697,3,['test'],"['test', 'tests']"
Testability,"I switched to the dark side, running emacs as my IDE :smiling_imp:, and I was testing it on SOFA's codebase. (If you like coding & navigating through SOFA's codebase without having QtCreator transforming your laptop into an airplane, you should try it, it's great!) ; Anyway, I'd like to suggest adding some stuff to the .gitignore file:. * emacs auto-generates autosave files that have the following formats: `#*` and `~*` ; * When running emacs as an IDE, an emacs package called `projectile` creates a file called `.dir-locals.el`, containing project configuration, compilation, and running instructions for emacs in the project's root folder.; * Finally, Emacs uses `clangd` or `ccls` as its language servers. these programs store their index (LSP data for the project's codebase) in `.cache/` and `.ccls-cache/` respectively. clangd & ccls both require cmake to generate a `compile_commands.json` file, which we also don't want to be committed in the git repository. I also noticed that SOFA doesn't have a `.clang-format` file. A clang-format file gives great hints to contributors, regarding the formating guidelines for SOFA. This .clang-format file respects the [coding guidelines described here](https://www.sofa-framework.org/community/doc/programming-with-sofa/guidelines/); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2884:78,test,testing,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2884,3,['test'],"['test', 'testing']"
Testability,"I think ""_rotationIdx"" should have the size of the number of points.; The problem occured when using subtopology, i.e when the number of points is greater than nbElements*4... . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/341:429,test,test,429,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/341,2,['test'],['test']
Testability,"I think constructors in fixed_array, Vec and Mat passed their arguments by value. Perfect forwarding avoids this copy. Also, constructors of base classes are called instead of re-defining a similar constructor. # Before. ```; ------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------; BM_Matrix_typemat3x3f_construct/128 1.09 us 1.10 us 640000; BM_Matrix_typemat3x3f_construct/256 2.20 us 2.20 us 320000; BM_Matrix_typemat3x3f_construct/512 4.40 us 4.39 us 160000; BM_Matrix_eigenmat33_construct/128 0.270 us 0.270 us 2488889; BM_Matrix_eigenmat33_construct/256 0.509 us 0.500 us 1000000; BM_Matrix_eigenmat33_construct/512 0.996 us 0.977 us 640000; ```. # After. ```; -------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -------------------------------------------------------------------------------------; BM_Matrix_typemat3x3f_construct/128 0.324 us 0.328 us 2240000; BM_Matrix_typemat3x3f_construct/256 0.627 us 0.628 us 1120000; BM_Matrix_typemat3x3f_construct/512 1.26 us 1.26 us 560000; BM_Matrix_typemat3x3f_construct_noinit/128 0.323 us 0.321 us 2240000; BM_Matrix_typemat3x3f_construct_noinit/256 0.638 us 0.628 us 1120000; BM_Matrix_typemat3x3f_construct_noinit/512 1.28 us 1.28 us 560000; BM_Matrix_eigenmat33_construct/128 0.255 us 0.256 us 2986667; BM_Matrix_eigenmat33_construct/256 0.502 us 0.500 us 1000000; BM_Matrix_eigenmat33_construct/512 0.993 us 1.00 us 746667; ```. Now the construction of a 3x3 matrix is 3x faster and close to the construction of a 3x3 matrix with Eigen. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2450:306,Benchmark,Benchmark,306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2450,2,['Benchmark'],['Benchmark']
Testability,I think it's time to update our old icons for v18.12 :wink: . SOFA.png; ![SOFA](https://raw.githubusercontent.com/sofa-framework/sofa/43b71cf490996847a15f8fddf5e04db823b8d52d/share/icons/SOFA.png). MODELER.png; ![MODELER](https://raw.githubusercontent.com/sofa-framework/sofa/43b71cf490996847a15f8fddf5e04db823b8d52d/share/icons/MODELER.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/881:594,test,test,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/881,2,['test'],['test']
Testability,"I think skyboxes are a great tool for demos with better visual quality. That's why I wanted a demo showing how to make one.; I had more ambitions than that but it's rather difficult to work with OpenGL from the 90's in SOFA.; The limitation is that the skybox reacts to translations and zoom. A scene is introduced and here is a capture:. https://user-images.githubusercontent.com/10572752/153029239-2b5fd241-173d-4314-9ba8-a4870d21f31e.mp4. In this PR, I also added a build ""project"" containing all the shaders. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2678:1052,test,test,1052,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2678,2,['test'],['test']
Testability,"I thought dmsg_info was only display in debug but this line is trolling the whole CI.; Remove this debugging info from normal execution. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2401:678,test,test,678,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2401,2,['test'],['test']
Testability,"I thought it was done previously but no... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3755:582,test,test,582,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3755,2,['test'],['test']
Testability,"I understood the first time, so don't nag me at every step 👺; It is already quite bothersome to execute in debug 😅. And it alleviates a little bit the debug output on the CI (ubuntu-debug: 515,231 KB 🥴 on master). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5050:753,test,test,753,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5050,2,['test'],['test']
Testability,"I used the given CMakeList code in ""Create your scene in C++"" page to test the given source code in the same page. But when I run cmake to build, the error occured. I know where the SofaFrameworkConfig.cmake is and i had tied to change ""find_package(SofaFramework REQUIRED)"" to ""find_package(/home/user_name/sofa/src/sofabuild/install/lib/cmake/SofaFramework/SofaFramework REQUIRED)"", then other errors occured, which is still about some Config.cmake files not found. CMake Error at CMakeLists.txt:7 (find_package):; By not providing ""FindSofaFramework.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""SofaFramework"", but CMake did not find one. Could not find a package configuration file provided by ""SofaFramework""; with any of the following names:. SofaFrameworkConfig.cmake; sofaframework-config.cmake. Add the installation prefix of ""SofaFramework"" to CMAKE_PREFIX_PATH or set; ""SofaFramework_DIR"" to a directory containing one of the above files. If; ""SofaFramework"" provides a separate development package or SDK, be sure it; has been installed.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2784:70,test,test,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2784,1,['test'],['test']
Testability,"I was playing with clang-format in the goal of reformatting the whole code base and have a consistent code style. As a proof of concept, it was applied on Sofa.Type. Of course, such a change has high chances to create conflicts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3930:768,test,test,768,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3930,2,['test'],['test']
Testability,"I was trying to compile with CLang on Windows to see if it could increase the perfomance (spoiler: it does not).; Clang is really strict with the export/import symbol system so I got some errors I cannot get with MSVC. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1984:758,test,test,758,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1984,2,['test'],['test']
Testability,I wonder if it will compile and succeed on the tests .; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/885:47,test,tests,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/885,3,['test'],"['test', 'tests']"
Testability,"I wondered why it is necessary to pass the pointer to the Data to initialize it in the `initData` function.; I tried to remove it, and nothing bad seems to happen.; So, why?. Of course, the `initData` mechanism is questionable. But this is not the scope of this PR. If it appears that passing the pointer is not necessary, this PR will have to add a compatibility mechanism and perhaps a depreciation. The files to reviews are mainly:; * BaseClass; * BaseData; * Base. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3167:1008,test,test,1008,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167,2,['test'],['test']
Testability,"I worked with the scene `examples\Demos\fallingBeamLagrangianCollision.scn`. I noticed that the distribution of the work among threads is not uniform:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/9145a080-0a7a-4b22-b3dc-501d509aefcf). Here is the distribution after the changes:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/cd047f43-aa7c-49de-a303-7d1945d8dcbd). Benchmark on 500 time steps:; Before:; ```; [INFO] [BatchGUI] 500 iterations done in 22.9377 s ( 21.7982 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 14.42 1 0.01 30.28 19.39 6.24 19.39 42.69 .....Get Compliance; ```. After; ```; [INFO] [BatchGUI] 500 iterations done in 19.7138 s ( 25.363 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 13.77 1 0 22.02 15.31 5.07 15.31 39.29 .....Get Compliance; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4220:403,Benchmark,Benchmark,403,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4220,3,"['Benchmark', 'test']","['Benchmark', 'test']"
Testability,I've had a problem combining OglViewport (which is using old openGL) with another component using modern OpenGL.; Here's a fix I did with the help of @fredroy.; We just needed OglViewport to update the visualparams with the new matrices. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1500:491,test,test,491,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1500,2,['test'],['test']
Testability,"IMO it is dangerous to let UncoupledCC used without any compliance info given.; This PR adds a warning when it's the case. It's also slightly polishing all UCC messages in general. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3858:720,test,test,720,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3858,2,['test'],['test']
Testability,"IMO it's pain to see and consider WARNINGS when they do not burn my retina from the console :eyeglasses: ; Yellow color for warning messages (as for deprecation) will help me sleeping at night . ![Screenshot_2023-06-02_15-39-17](https://github.com/sofa-framework/sofa/assets/17544719/81ad75c4-a272-4378-a2c5-a6012d19ef99). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3914:862,test,test,862,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3914,2,['test'],['test']
Testability,"IPO option was already available for MSVC. This PR is the CMake way to enable it.; ~~However, it does not seem to apply on my setup with MSVC. That's why I kept the `/GL` and `/LTCG` compilation options.~~. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3345:746,test,test,746,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3345,2,['test'],['test']
Testability,"IPO state wont change anyway so it is useless to do the test every time. On Windows, this test takes 2sec (for a total of 7sec for a minimal SOFA configuration), so it is quite appreciable without it.; On linux (Ubuntu) it takes 200ms on my setup so barely perceptible... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4191:56,test,test,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4191,4,['test'],['test']
Testability,"IdentityMapping.h possesses some helper functions (eq & peq on float <-> double, and Coord <->OtherCoord); This should be moved in a later PR. This PR just removes the need of those utility functions in GenerateGrid (which has nothing to do with IdentityMapping obviously), thus removing the header inclusion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2090:849,test,test,849,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2090,2,['test'],['test']
Testability,"If I understand well how AdvanceTimer is working (which I'm still not sure), this Begin(""animate"") command should not be there. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1029:379,test,test,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1029,2,['test'],['test']
Testability,"If a class inherits from `Base` it already has 2 `initData` overloads available. So why redefining them in the `SOFA_CLASS` macro?; The third overload is not defined in `Base`, so I did it and remove the one in `SOFA_CLASS`.; In summary, the 3 `initData` overloads are only defined in `Base` and nowhere else. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3190:849,test,test,849,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3190,2,['test'],['test']
Testability,"If either `from` or `to` is not provided, the second argument is assigned to a `std::string`. It is an undefined behavior. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3686:662,test,test,662,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3686,2,['test'],['test']
Testability,"If it is in a plugin, you need to load this plugin to load an other plugin :yo_dawg:. <img src=""https://user-images.githubusercontent.com/11028016/162191671-72defde9-badc-4f99-b0a3-9ec70a40531e.jpg"" width=""300"" />. so `RequiredPlugin` should always be available, even if no plugin is loaded.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2849:832,test,test,832,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2849,2,['test'],['test']
Testability,"If multiple objects have their own ODE solver, they can be solved concurrently in the `FreeMotionAnimationLoop`. # Results. Scene: applications/plugins/MultiThreading/examples/5DeformableCubesConstraints.scn; Nb time steps: 1000. ```; Parallel ODE solving + parallel collision detection:; 22.9566 s ( 43.5605 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.37 1 0.38 7.85 2.88 0.92 2.88 12.69 ...FreeMotion; 3 3.42 1 0.72 6.29 2.32 0.66 2.32 10.22 ...CollisionDetection; . Sequential ODE solving + parallel collision detection:; 26.762 s ( 37.3664 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.35 1 1.23 10.94 7.05 1.98 7.05 26.62 ...FreeMotion; 3 7.57 1 0.74 7.04 2.33 0.64 2.33 8.81 ...CollisionDetection; . Sequential ODE solving + sequential collision detection:; 30.2183 s ( 33.0926 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.36 1 0.73 13.35 7.13 2 7.14 23.79 ...FreeMotion; 3 7.66 1 1.69 8.49 5.32 1.42 5.32 17.72 ...CollisionDetection; ```. The bottleneck is the constraint solving:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 5.89 1 0.38 75.75 15.49 11.98 15.49 68.37 ..ConstraintSolver; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2135:1706,test,test,1706,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2135,2,['test'],['test']
Testability,"If not virtual, it leads to multiple construction of `StateAccessor` in `PairInteractionProjectiveConstraintSet`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2594:653,test,test,653,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2594,2,['test'],['test']
Testability,"If savingMatrixToFile is set to true, the system matrix is saved during each time step with the name ""MatrixInLDL_%04d"", where %d is the value of the time.; I added two new input data:. - savingFilename; 	The filename where the matrix is stored can be changed using the input data d_filename. ; 	If it contains ""%d"", it will keep the previously described behavior, else it will always save in the same file overwriting it. - savingPrecision; 	The second new input is d_precision. It is the precision with which the matrix will be stored. These options are useful to save the system matrix from SOFA and read it from another software. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/845:887,test,test,887,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/845,2,['test'],['test']
Testability,"If testing is enabled, the list of projects(i.e targets) gets very long at the root of the SOFA project. This PR lists all targets which is suffixed with __test_ or __simutest_ and put them into the ""Testing"" folder (where gtest, Sofa.Testing are located as well). ![Capture](https://user-images.githubusercontent.com/11028016/122558586-8bfb8b00-d03e-11eb-9043-49d204482cd0.PNG). This is done with a new custom macro called _sofa_get_all_targets_ which gives all the targets enabled in the project. Here in this PR, it is located at the end of the global CMakeLists, so it will also get tests related to external plugins, etc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2190:3,test,testing,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2190,6,"['Test', 'test']","['Testing', 'test', 'testing', 'tests']"
Testability,"If the user did not specify any sampling number for MSAA (by default), `viewerMSAANbSampling` was not set in getValueFromKey(), and as it was not initialized, it had some random number (usually huge).; Consequently, MSAA was always activated with the highest number of samples even if the user did not specify it.; (and got some bogus message like `[INFO] [RealGUI] Set multisampling anti-aliasing (MSAA) with 1538452832 samples.` ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3220:973,test,test,973,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3220,2,['test'],['test']
Testability,"If we don't set a template to SparseLDLSolver we get a warning message saying that it might be insteresting to set it to speedup the calculations. ; In my opinion this is an information. A warning should mean ""be careful if you don't solve this warning bad things might happen"". . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2969:820,test,test,820,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2969,2,['test'],['test']
Testability,"Illustrating #4462 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4464:560,test,test,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4464,2,['test'],['test']
Testability,"Implement missing methods to work in FreeMotionAnimationLoop. --> simply took what was implemented in FixedProjectiveConstraint. Also add a new feature to keep the constraint applied after all the key event have passed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5025:759,test,test,759,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5025,2,['test'],['test']
Testability,"Implement the improvement discussed in; https://github.com/sofa-framework/sofa/issues/56. This request contains: ; A new message class have been added for logging (in addition to Dev & Runtime).; A new RoutingMessageHandler.; A new test to validate the basic behavior of RoutingMessageHandler. Eg of use... to install a filter that will only send the; Runtime message of type Warning to a File you can do something like:; ```cpp; RoutingMessageHandler* m = new RoutingMessageHandler();; FileMessageHandler* toAFile = new FileMessageHandler(""the file""). /// Yes this is using c++ lambda syntax; m->setAFilter( [](Message& m); {; if(m.context() == Message::Runtime && m.type() == Message::Warning); return true ;; return false ;; }, toAFile );; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/57:155,log,logging,155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/57,2,"['log', 'test']","['logging', 'test']"
Testability,"Implementation of http://developer.download.nvidia.com/presentations/2010/gdc/Direct3D_Effects.pdf. ![ezgif-6-9b93f0eae158](https://user-images.githubusercontent.com/11028016/67236511-afc19480-f449-11e9-9528-bf093f77e0d2.gif). Allows nice (?) renders without relying on surface reconstruction etc.; In this SPH simulation (10k particules) , the rendering takes <1% of the resources. Also tweak a bit the default Z planes with QGLViewer (it has a weird behavior with narrow BBox scenes). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1194:738,test,test,738,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1194,2,['test'],['test']
Testability,"Implementation of the (2nd part of) proposal #281 . Quick Reminder:; - CMake generates the list of compiled plugins in a file (`plugin_list.conf.default`) at the configuration stage.; - runSofa loads this list at startup; - if the user creates a custom `plugin_list.conf`, it will load this list instead.; - add an option to bypass the file (thus disable automatic loading) in runSofa. Everything is done in the runSofa application (+small patch in the macro sofa_add_generic() in SofaFramework CMake modules ; that allows us to have a list of all added targets which is not possible in CMake 3.1) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/301:851,test,test,851,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/301,2,['test'],['test']
Testability,"Imported targets can be aliased only if they are global. Otherwise, this error is raised:; ```; CMake Error at /data/Softwares/sofa/build/build-master/install/lib/cmake/SofaFramework/SofaFrameworkConfig.cmake:45 (add_library):; add_library cannot create ALIAS target ""SofaHelper"" because target; ""Sofa.Helper"" is imported but not globally visible.; Call Stack (most recent call first):; CMakeLists.txt:5 (find_package); ```. Thus, this PR adds the GLOBAL property to the imported targets we want to alias.; It also move all the alias definitions in their respective projects (not in SofaFramework anymore). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2175:1146,test,test,1146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2175,2,['test'],['test']
Testability,"Improve the message when a component is deprecated and removed, in order to mention GitHub issues :love_letter: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3913:653,test,test,653,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3913,2,['test'],['test']
Testability,"In #2076, a `vector` was replaced in favour of a `map`. It has a consequence on the order of traversal, therefore on the contact response creation. With a `map`, the order is based on the contact pointer address, which can be random. The vector is ordered by insertion.; This PR restores the `vector` for reproducible simulations. It should fix #2128. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2134:891,test,test,891,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2134,2,['test'],['test']
Testability,"In #2404 I rename types `Bloc` to `Block`. I forgot one that now triggers compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2441:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2441,2,['test'],['test']
Testability,"In #2777, a new API to assemble matrices was introduced. I used this new API to avoid the need to implement `addDForce` if `buildStiffnessMatrix` is already implemented. In other terms, it unifies the `addDForce` and `buildStiffnessMatrix` (previously it was `addKToMatrix`. Indeed, those two functions are very similar as they are related to the derivative of the force. This PR is a proof of concept that is not ready to be merged. Indeed, I noticed losses of performances. And I also would like to make sure with the CI that everything works perfectly. The concept is implemented only on force fields (not interactions), and only for stiffness (no damping), but I can be easily extended to damping and masses. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4010:1252,test,test,1252,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4010,2,['test'],['test']
Testability,"In #3838 we agreed on the misleading variable `symmetricMatrix` in the MechanicalParams.; I propose here a simple change using `m_supportOnlySymmetricMatrix` et associated read/write access function updates. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3861:747,test,test,747,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3861,2,['test'],['test']
Testability,"In BTDLinearSolver, a lot of functions needed ` Index bsize = Matrix::getSubMatrixDim(d_blockSize.getValue());` ; consequently, ` d_blockSize.getValue` was called a tremendous number of times (billions of time for 5000 steps in our case). It appeared that:; - getSubMatrixDim(Index) is only implemented by BTDMatrix and BlockFullMatrix; - it never really depended on its parameter (just returning BSIZE, which is a constant); - d_blockSize was never used in other cases. So this PR:; - reword getSubMatrixDim() without parameter, and make it compile-time constant; - replace its usage in BTDLinearSolver; - deprecate d_blockSize in BTDLinearSolver; - add the compat layer (macros & stuff). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3556:1229,test,test,1229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3556,2,['test'],['test']
Testability,In BaseData and BaseLink mainly. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1152:284,test,test,284,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1152,2,['test'],['test']
Testability,"In ConstantForcefield, ; if the showForceField flag was not set, the draw() function was not restoring the visual state.; Consequently, some weird visual bugs could happen with some other components. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1017:451,test,test,451,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1017,2,['test'],['test']
Testability,"In CudaVisualModel, it was not possible to define which `state` and `topology` to use. State and topology could only be found implicitly. I converted the raw pointers to links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2442:716,test,test,716,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2442,2,['test'],['test']
Testability,"In ImplicitSurfaceContainer:; Class name didn't match and also the namespace of DiscreteGridField. In applications/plugin/CMakeLists.txt:; SofaVolumetricData depends on SofaDistanceGrid and SofaImplicitField, so should be added first. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/422:486,test,test,486,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/422,2,['test'],['test']
Testability,In PR #1485 we introduce DataLink & AbstractDataLink; In PR #1490 we remove the duplicated SingleLink<> parentData in BaseData to ease further refactoring; In this PR we can now cleanly replace the use of the SingleLink<Data<T>> by a DataLink class in Data.h. Once that done:; - we will be able to finally remove from BaseData & Data the code that lay there just because of the use of SingleLink.; - then remove in Link & BaseLink all the code that lay there to support SingleLink<BaseData>. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1491:745,test,test,745,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1491,2,['test'],['test']
Testability,In PR https://github.com/sofa-framework/sofa/pull/217. ```cpp; #ifdef BARYCENTRIC_MAPPER_TOPOCHANGE_REINIT; // handle topology changes in the From topology; virtual void handleTopologyChange(core::topology::Topology* t);; #endif // BARYCENTRIC_MAPPER_TOPOCHANGE_REINIT; ```; Is coding to change to runtime condition instead of #IFDEF. . @JeremieA pointed that this rise consistency issues in how the topology changes are handled into the mapping. . Maybe we should keep that in mind and in some future do something (eg making a test that should be done all mapping to validate a consistent and clear behavior).,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/223:528,test,test,528,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/223,1,['test'],['test']
Testability,"In RestShapeSpringsForceField the rest_shape is currently provided using a raw pointer which is really Bad. ; In this PR is change that to use SingleLink instead. . The PR imply a change by which the syntax of the external_rest_shape is provided. Adding an ""@"" as in the test examples/Components/forcefield/RestShapeSpringsForceField2.scn make it work. Editting: Damien. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/315:271,test,test,271,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/315,3,['test'],['test']
Testability,"In SOFA not using an accessor is really bad (I mean really really bad), but the syntax is not really; friendly and thus discourage ppl to use it. . The PR adds few easing function smooth the syntax. ; So you can now type:; auto points = getReadAccessor(d_points);; in place of:; ReadAccessor<Data<Vec3> points = d_points;. In also make code update more manageable, as the whole code based does not need to be changed if the d_points type change. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1254:697,test,test,697,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1254,2,['test'],['test']
Testability,"In SimpleAPI and SofaPython3 (surely XML too), ; if a data link is set to a data of a not-yet created BaseObject, `isSet` is not true. In the newly created tests, the last one would be false without the fix in BaseData. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5081:156,test,tests,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5081,3,['test'],"['test', 'tests']"
Testability,"In TriangularFEMForceField, the strainDisplacementMatrix was not re-computed for a new simulation step in the computeForce-method. Because of that, the strain computation used an old version of the strainDisplacementMatrix. EDIT: this will fix issue: ; fix #2704. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2706:803,test,test,803,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2706,2,['test'],['test']
Testability,In UncoupledConstraintCorrection class:; - Use PointData instead of handleTopologyChange method; - Small cleaning; - Remove duplicated constructor. Fix one of the component in #810 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1115:434,test,test,434,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1115,2,['test'],['test']
Testability,"In `FreeMotionAnimationLoop`, the collision detection and the free motion can be computed concurrently. A Data<bool> allows to specify if both steps are executed in parallel or in sequence. By default, the algorithm is sequential. This parallel approach is the most useful when free motion and collision detection takes about the same time. An example scene is provided to validate the speed up. The details about the speed up are here: https://github.com/sofa-framework/sofa/commit/0f94b063ae3f3efbd2e0dc2f50d4bff706cd4734:. > On my computer, with the single threaded scene, FreeMotion+CollisionDetection runs in 24.92 ms in average. FreeMotion runs in 7.7 ms and CollisionDetection in 16.36 ms. If these two steps runs in parallel, we expect a gain of 7.7 ms (the minimum between 7.7 and 16.36).; On my computer, with the multi-threaded scene, FreeMotion+CollisionDetection runs in 16.93 ms in average. It is a gain of 7.99 ms (=24.92-16.93), which is about what we expected.; It validates the implementation of the parallelization of the collision detection and the free motion steps in the FreeMotionAnimationLoop. ![cubes](https://user-images.githubusercontent.com/10572752/115711281-9f0e1980-a373-11eb-9a69-aaece62f6cb9.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2040:1771,test,test,1771,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2040,2,['test'],['test']
Testability,"In `HexahedronFEMForceField<DataTypes>::draw`, the topology pointer is checked first before being used. It avoids a crash if the topology cannot be found in the initialization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2478:716,test,test,716,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2478,2,['test'],['test']
Testability,"In ```BeamFEMForceField```:; - Remove TopologyHandler to directly use TopologyData creation callback. Activate ```SofaGeneralSimpleFem_test``` by adding 8 tests in ```BeamFEMForceField_test.cpp``` to test:; - Component creation with given values or default values; - Error catching when creating without MechanicalObject; - Error catching when creating without topology or with empty topology; - value after init and after several simulation steps; - Check update of the FEM while removing edges. This last test on topological change is failing because of the bug in UniformMass fixed in PR #2377 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2382:155,test,tests,155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2382,5,['test'],"['test', 'tests']"
Testability,"In ```TriangularBendingSpring```:; - Remove all unused code; - Clean loops logic to exit/continue when possible. No major changes.; - Rename damping and stiffness Data to use prefix `d_`; - Add tests on Data setter to avoid negative values; - Document Header. Activate ```SofaGeneralDeformable_test``` by adding 8 tests in ```TriangularBendingSpring_test.cpp``` to test:; - Component creation with given values or default values; - Error catching if wrong Data values; - Error catching when creating without topology or with empty topology; - Init value on a single pair of triangles; - Simulated values on a grid scene; - Check update of the FEM while removing triangles. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2363:75,log,logic,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2363,6,"['log', 'test']","['logic', 'test', 'tests']"
Testability,"In `applyDJT`, the following product is computed:. $$; b \mathrel{{+}{=}} h^2 \frac{\partial \mathbf{J}}{\partial x_{\text{out}}} f_{\text{out}} v_\text{in}; $$. with `b` being the right side of the main equation, `h` the time step size ($h^2$ is the `kFactor`), `x` the position, `v` the velocity and `f` the force. Subscript `in` refers to the parent of the mapping, and `out` to the child. $J$ is the jacobian matrix of the mapping. The method in `SquareMapping` had two ways to compute this product:. 1) Using K which has been computed previsously. And multiply it by $v_\text{in}$; 2) Using $f_{\text{out}}$ and $v_\text{in}$ only, without using a cached matrix. Only the first method was tested in unit tests. I forced the second method in a unit test by introducing a Data `useGeometricStiffnessMatrix`. It could be observed that the second method failed. It needed a fix. The product with $v_\text{in}$ was forgotten. It is now added in this pull request. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3761:694,test,tested,694,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3761,5,['test'],"['test', 'tested', 'tests']"
Testability,"In `modules/SofaMiscForceField/SofaMiscForceField_test/MeshMatrixMass_test.cpp`, the tests used `EXPECT_FLOAT_EQ`. It supposed that both values are of type `float`. In these tests, they are actually of type `SReal`, which is `double` by default. Hence, a type conversion from `double` to `float`. A macro detecting the type is introduced, and replaces `EXPECT_FLOAT_EQ`. Note that, line 1372, I had to change the test. The test with `EXPECT_FLOATINGPOINT_EQ` failed due to the higher precision. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2714:85,test,tests,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2714,6,['test'],"['test', 'tests']"
Testability,"In a `Eigen::Matrix<U, 6, 6>`, it is not possible to call `rightCols<3>` with a `3x3` matrix. The dimensions don't match. The should have been a `6x3`. To provide a `3x3` matrix, we must explicitly define the row AND the column. In that case, we use `topRightCorner`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3978:807,test,test,807,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3978,2,['test'],['test']
Testability,"In a mapped state, force fields and masses contribute to the global system matrix via a projection provided by mappings. The term $m M+ k K$ is assembled locally (association with the mapped state), and then the product $J^T (m M+ k K) J$.; However, in most cases, $M$ is constant. In addition, in some cases $J$ is also constant. If we fulfill the conditions so that both $M$ and $J$ are constants, we can extract the product $J^T M J$ and pre-compute it once at the beginning of the simulation. This is what this PR does. In addition to the pre-computation, there is a cache invalidation mechanism on masses to track when $M$ is subject to changes. For example, changes in the mass parameter by the user. This pre-computation is the most efficient when there is a difference of sparsity between $M$ and $K$. And this is the case when hyper-reduction is involved. $K$ is super sparse (only a few elements are considered), while $M$ gets contributions from all the nodes of the detailed mesh. On a diamond robot with 70,334 tetrahedras and 15,553 vertices, I went from 79.8469 FPS to 177 FPS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4625:1632,test,test,1632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4625,2,['test'],['test']
Testability,"In addition to a simplification, it allows also to automatically use the newly introduced constructors from `vector_device`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4864:664,test,test,664,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4864,2,['test'],['test']
Testability,"In all CMakeLists, upgrade `cmake_minimum_required` from 3.12 to 3.22 in order to support the find or fetch mechanism. **TODO**; - update documentation; - update SP3 readme. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4586:713,test,test,713,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586,2,['test'],['test']
Testability,"In all SetGeometryAlgorithms, this PR ; - adds save and restore state (creating rendering bugs in EdgeSetGA); - fixes warning in mustComputeBbox function; - fix other warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3070:716,test,test,716,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3070,2,['test'],['test']
Testability,"In an IDE (Visual Studio at least), tidy cozily all *_relocatable_install projects into a folder.; Before:; ![Capture1](https://user-images.githubusercontent.com/11028016/83787044-787bbd00-a693-11ea-8949-55a86b91b779.PNG); After:; ![Capture2](https://user-images.githubusercontent.com/11028016/83787136-a103b700-a693-11ea-9a7f-d2652e039bbd.PNG). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1405:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1405,2,['test'],['test']
Testability,"In both `LCPConstraintSolver` and `GenericConstraintSolver`, there is a list of constraint corrections as a class member. Both class inherits from the same base class and the lists are used equivalently. Therefore, I move them into the base class. I changed them from a `vector<BaseConstraintCorrection*>` to a `MultiLink`. These changes allows to unify `init`, `cleanup` and `removeConstraintCorrection` methods. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4117:953,test,test,953,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4117,2,['test'],['test']
Testability,"In case the force field is not located in the same context than the MechanicalState it works on, `canCreate` denied the creation of the force field.; This PR makes sure it is possible to create the force field in the aforementioned condition. A new condition authorizes the creation of the force field: when the link to the mstate is valid (even if the mstate is not in the current context). This PR also check if mstate is null before using it in some functions (`addForce`, `addDForce` etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2553:1033,test,test,1033,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2553,2,['test'],['test']
Testability,In case these SOFA_DEV were usefull to you please make PR in which the removed; code is properly engineered (i.e no #ifdef). If you don't think using #ifdef is bad don't hesitate to tell it to sofa-dev. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/835:454,test,test,454,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/835,2,['test'],['test']
Testability,"In collisionModel createPrevious method, propagate value from parent; ```cpp; pmodel->f_listening.setValue(f_listening.getValue());; pmodel->f_printLog.setValue(f_printLog.getValue());; ```. Fix bad resize method in ```CubeModel::ddCube```. Buffers where resized using the member ```size``` instead of a fix variable, previous code behavior:; ```cpp; int i = size; // size == 0; this->core::CollisionModel::resize(size+1);	// resize(0+1) -> size == 1 ; elems.resize(size+1); // elems.resize (1+1) instead of 0+1; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1202:769,test,test,769,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1202,2,['test'],['test']
Testability,In component FixeConstraint in function projectVelocity use Data flag instead of #define Flag to set velocity and free velocity to zero. ; @digitaltrainers and @matthieu-nesme . Suggested label enhance. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/288:454,test,test,454,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/288,2,['test'],['test']
Testability,"In createObject... When you given an object as argument instead of a string the binding convert it (with str). This is problematic in many cases eg. with a list it is converted with the bracket (ie: '[' ) and comma as separator. To resolve that I add a method that, if a list is passed as an argument, convert it as a string following the sofa style (without comma and bracket). CHANGELOG for @hugtalbot & @guparan :; [SofaPython]: change the way createObject() handle its arguments to simplify scene writing + batch of tests.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286:520,test,tests,520,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286,3,['test'],"['test', 'tests']"
Testability,"In dynamic topology you need to add 4 components:. 1. TriangleSetTopologyContainer ///< contains all the buffers to define the topology structure; 2. TriangleSetTopologyModifier ///< friend class handling all low level operation on the topology container; 3. TriangleSetTopologyAlgorithms ///< class to store more complex algorithms base only on topology structure (will use Modifier and Container); 4. TriangleSetGeometryAlgorithms ///< class to store all complex algorithms involving topology and geometry (3D positions) structure (will use Modifier and Container). After quick investigation the 3rd one is often nearly empty or contains algorithms that in fact need geometry information such as edge length, direction, area, volume etc. So I propose to move all methods of xxxSetTopologyAlgorithms into the xxxSetTopologyModifier if it is really only topological operations or to xxxSetGeometryAlgorithms for better clarification of the code. This will concern:; - PointSetTopologyAlgorithms; - EdgeSetTopologyAlgorithms; - TriangleSetTopologyAlgorithms; - QuadSetTopologyAlgorithms; - TetrahedronSetTopologyAlgorithms; - HexahedronSetTopologyAlgorithms. Of curse I will add Deprecated component and I can also let the methods and forward to the new one with a deprecated message. ; And start to add tests on those methods...",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1538:1303,test,tests,1303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1538,1,['test'],['tests']
Testability,In favor of a new sofa_generate_package function (with named arguments). It's never clear what the arguments passed to this function are for. Now you have to know to use it :). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/909:428,test,test,428,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/909,2,['test'],['test']
Testability,"In file ```examples/Benchmark/Analysis/constantMomentum.scn```, we cannot observe what is written in ```examples/Benchmark/Analysis/constantMomentum.html```, namely ""A scene where the linear and angular momenta should be preserved."" Can anyone try it too?. Is it due to the absence of the plot or the imposed velocities wrong? They seem a bit extreme to me.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3531:20,Benchmark,Benchmark,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3531,2,['Benchmark'],['Benchmark']
Testability,"In https://github.com/sofa-framework/sofa/pull/1605, https://github.com/sofa-framework/sofa/pull/1611 and https://github.com/sofa-framework/sofa/pull/1632 were layed-out typeInfo subsystem refactoring. The general objective was to remove the ""magic"" and ODR violation of existing code.; The migration to the new system was postpone while NG refactoring & cleaning was progressing. ; Now it is done, let's go to deploy it. So in this step we are starting to use the new subsystem for ""selected"" type while printing a deprecation message for type that have not been migrated; . The PR shoul'nt break anything. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3288:1149,test,test,1149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3288,2,['test'],['test']
Testability,"In https://github.com/sofa-framework/sofa/pull/3986, I introduced the computation of `H A^-1 H^T` in SparseLDLSolver. In this PR, I do the same but in the base class of all linear solvers. All linear solvers inheriting from `MatrixLinearSolver` can now benefit from this parallelization (except the matrix-free conjugate gradient). I benchmarked `examples/Demos/fallingBeamLagrangianCollision.scn`:. ```; <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 46.8709 s ( 21.3352 FPS). <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 95.1848 s ( 10.5059 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 146.778 s ( 6.813 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 68.7089 s ( 14.5542 FPS). . <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 100 iterations done in 35.9595 s ( 2.7809 FPS). <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 100 iterations done in 51.4465 s ( 1.94377 FPS).; ```. It indicates that `EigenSimplicialLDLT ` is faster than `SparseLDLSolver`. At least in this scene. It's not the case in `TorusFall.scn`. Two reasons to avoid the parallelization in the matrix-free CG:; 1. `GraphScatteredVector` is not default constructible; 2. Would not be thread-safe. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4255:334,benchmark,benchmarked,334,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4255,1,['benchmark'],['benchmarked']
Testability,"In issue #746 is reported a bug when trying trying to simulate; scenes while the underlying topology is containing empty data set. I narrowed the problem to be in LocalMinDistance::computeIntersection.; In this function we access the trianglesAroundVertex from a MeshTopology. with code like that:; ```cpp; if (m_edgesInTetrahedron.empty() || i > m_edgesInTetrahedron.size()-1); createEdgesInTetrahedronArray();; return m_edgesInTetrahedron[i];; ```. While if there is not ""nothing"" to create because there is no edges/triangles; it access in there is still a return of m_edgesInTetrahedron[i] with indice = 0. To avoid that I change the code for:; ```cpp; const MeshTopology::EdgesInTetrahedron& MeshTopology::getEdgesInTetrahedron(TetraID i); {; if (m_edgesInTetrahedron.empty() || i > m_edgesInTetrahedron.size()-1); createEdgesInTetrahedronArray();. if (i < m_edgesInTetrahedron.size()); return m_edgesInTetrahedron[i];. return InvalidEdgesInTetrahedron;; }; ```. So if there is nothing created we returns a valid object indicating either an; empty or one filled with invalid values. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/977:1339,test,test,1339,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/977,2,['test'],['test']
Testability,"In my case, it helped me to understand that the file was corrupted, via the nonsensical number of triangles that was printed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3949:665,test,test,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3949,2,['test'],['test']
Testability,"In my plugin I have derived a new type from `BaseObject`. ```class BlendingField : public sofa::core::objectmodel::BaseObject; {; virtual double blending(const Eigen::Vector3d &p) const = 0;; }; ```. In order to implemente this, I tried to add python bindings. ```; class BlendingField : public VNCS::BlendingField; {; public:; SOFA_CLASS(VNCS::py::BlendingField, VNCS::BlendingField);; BlendingField();; ~BlendingField() override;. VNCS::Real blending(const VNCS::Point_3 &p) const final;; };; ...; VNCS::Real VNCS::py::BlendingField::blending(const VNCS::Point_3 &p) const; {; const std::array<double, 3> pyP{p[0], p[1], p[2]};; PYBIND11_OVERLOAD_PURE(VNCS::Real, /* Return type */; VNCS::BlendingField, /* Parent class */; blending, /* Name of function in C++ (must match Python name) */; pyP /* Argument(s) */; );; }. void VNCS::py::module::blendingField(pybind11::module &m); {; pybind11::class_<VNCS::BlendingField, VNCS::py::BlendingField>(m, ""BlendingField""); .def(pybind11::init([](pybind11::args &args, pybind11::kwargs &kwargs) {; return new VNCS::py::BlendingField();; })); .def(""blending"", &VNCS::BlendingField::blending);; }; ```. This works fine in the sense that I can derive from BlendingField in SOFA, but I can't add it to a SOFA node, with the following error:. ```; [ERROR] [SofaPython3::SceneLoader] TypeError: addObject(): incompatible function arguments. The following argument types are supported:; 1. (self: Sofa.Core.Node, arg0: str, **kwargs) -> object; 2. (self: Sofa.Core.Node, arg0: Sofa.Core.Object) -> object. Invoked with: <Sofa.Core.Node object at 0x7fffac34bef0>, <prepare_scene.TestBlendingField object at 0x7fffac34bea0>; ```. Somehow, it looks that SOFA can't see the my class derives from sofa::core::objectmodel::BaseObject. I have tried to find any example of any other plugin creating its own bindings but couldn't find any. ; Any help with this would be amazing.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1547:1615,Test,TestBlendingField,1615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1547,1,['Test'],['TestBlendingField']
Testability,"In my program, when running the scene, ""dataVecInForce[0] is nullptr"" appears in the function applyJT. Is it possible that the pointer is empty?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1450:397,test,test,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1450,2,['test'],['test']
Testability,"In my work I need to extract the dynamical model from SOFA, i.e. extracting mass and stiffness matrices from SOFA. I follow the SOFA instructions which use ""mass_matrix = root.mass.assembleMMatrix()"" & ""stiffness_matrix = root.force_field.assembleKMatrix()"" to obtain the mass and stiffness matrices. My test example is a cube with 8 Square unit, which results 27 nodes, i.e. 81dofs. see; ![mesh](https://github.com/user-attachments/assets/37529452-396a-48df-8a01-7c330d8297b3); The COMSOL result of mass matrix is below: ; ![Comsol_M](https://github.com/user-attachments/assets/ef3b9080-8bd6-44f3-9d17-da54f38b01b5); The SOFA result of mass matrix is below: ; ![SOFA_M](https://github.com/user-attachments/assets/a19ea4e4-f756-4b6a-badf-c1ec20719a59)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4954:304,test,test,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4954,1,['test'],['test']
Testability,"In order for SofaGuiQt to find NodeEditor a custom FindNodeEditorConfig.cmake was created in cmake/Modules but this file was obfuscating the real NodeEditorConfig.cmake that is packaged with the NodeEditor library when trying to find_package it in external plugins. I modified the CMakeLists.txt in sofa/gui/qt/ to use the proper find_package and link correctly to the NodeEditor::nodes target. This PR also fixes some unintentional renamings that were causing compile issue when SOFAGUIQT_ENABLE_NODEGRAPH is set to ON (it would be nice to be able to test this on the CI, or at least to build with SOFAGUIQT_ENABLE_NODEGRAPH=ON so that this doesn't happen again. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1424:552,test,test,552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1424,3,['test'],['test']
Testability,"In order to smooth the changelog generation .. a gentle GH action :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4081:609,test,test,609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4081,2,['test'],['test']
Testability,In past PR we have removed the use of a Link to store link between two data and we use DataLink instead. ; As Link cannot store anymore a link between Data the type traits code can be removed from Link.h and BaseLink.h. . This is what this PR does (removing the un-needed). . The next step will consist in refactoring the whole Link to separate SingleLink & MultiLink. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1503:622,test,test,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1503,2,['test'],['test']
Testability,"In some (very) rare cases, if the user links two libs (in which was included the header PythonScriptControllerHelper.h), compilation should throw an error of duplicate symbol for PythonScriptController_parametersToVector().; I got the problem while making static libraries. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1036:525,test,test,525,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1036,2,['test'],['test']
Testability,"In some cases (which ones?), gcc does not link against pthread which is necessary for the recently added AsyncSparseLDLSolver.; I got the case on the latest gcc on Manjaro (`gcc version 11.1.0`), and at least one other user is reported the same error #2736 . Same configuration with clang worked fine without so I suppose the added library comes from somewhere (but I dont where/what). ; This PR adds the necessary library in any case. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2739:975,test,test,975,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2739,2,['test'],['test']
Testability,"In some simulations relying on mappings, a computation intensive task is the product `J^T * K * J` (including the computation of `J`). To offer the user a choice of strategy regarding the way to compute this product, I introduce a component `MatrixMapping`. This component is optional in a scene. If not present, it will be created automatically with a generic-purpose strategy, i.e. the one already implemented. In order to illustrate the options given to the user, I already added a Data to consider the mapping Jacobians to be constant. For example, it is true for `ModelOrderReductionMapping`. In the future, maybe this property can be defined automatically. I benchmarked the reduced diamond robot over 1000 time steps (the previous benchmark is in https://github.com/sofa-framework/sofa/pull/4443):. Before; ```; [INFO] [BatchGUI] 1000 iterations done in 17.4661 s ( 57.2539 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.08 1 11.85 20.52 13 0.85 13 88.39 ......projectMappedMatrices; ```. After (with `areJacobiansConstant=True`); ```; [INFO] [BatchGUI] 1000 iterations done in 12.3888 s ( 80.7183 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 7.64 18.39 8.59 0.76 8.59 84.35 ......projectMappedMatrices; ```. Speed up x1.5 on the matrix mapping. Note that using a `ConstantSparsityPatternSystem` instead of a `MatrixLinearSystem` is slightly faster (but it is not in the scope of this PR):. ```; [INFO] [BatchGUI] 1000 iterations done in 11.7897 s ( 84.82 FPS).; ```. Plans for the future:. - Write a new MatrixMapping component taking advantage of the constant sparsity pattern to further improve the performances; - Write a new MatrixMapping component that would use multithreading, and maybe one using the GPU. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4490:665,benchmark,benchmarked,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4490,2,['benchmark'],"['benchmark', 'benchmarked']"
Testability,"In the DEFROST team we need our constraints to provide the computed forces as outputs. These forces are now provided to the constraints using the method `storeLambda()`. . Our constraints node usually looks like this: ; ```; cavity = accordion.createChild('cavity'); cavity.createObject('MechanicalObject'); cavity.createObject('SurfacePressureConstraint'); cavity.createObject('BarycentricMapping', name='mapping', mapForces=False, mapMasses=False); ``` ; As no forces have to be mapped, we set `mapForces=False` to avoid unnecessary computations. Yet in the current code, this disables the call to `storeLambda()`. . This PR changes this behavior by overriding the method `stopAtMechanicalMapping()` of `ConstraintStoreLambdaVisitor`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/854:988,test,test,988,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/854,2,['test'],['test']
Testability,"In the Gauss-Seidel implementation from the class GenericConstraintSolver, an array called 'errF' is used to store the error forces from ConstraintResolution objects:. https://github.com/sofa-framework/sofa/blob/v18.12/modules/SofaConstraint/GenericConstraintSolver.cpp#L870. This array have a static size of 6. Consequently, in the case the user uses a custom ConstraintResolution having more than 6 constraints to resolve (nbLines > 6), it results in a buffer overflow during the loop of the second phase of the Gauss-Seidel algorithm, and there is nothing to prevent it:. https://github.com/sofa-framework/sofa/blob/v18.12/modules/SofaConstraint/GenericConstraintSolver.cpp#L937. I am aware this is not really a bug but rather a limitation of the constraint resolutions and it is very specific. But maybe we should at least prevent it by adding a simple assertion `assert(nb <= 6);` at line 934 for example. I personnally encountered this issue and it cost me time to figure it out. By the way, I noticed there is the same kind of issue with the array called 'tempF':. https://github.com/sofa-framework/sofa/blob/v18.12/modules/SofaConstraint/GenericConstraintSolver.cpp#L997. ______________________________________________________. Suggested labels: bug (minor)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/914:857,assert,assertion,857,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/914,2,['assert'],"['assert', 'assertion']"
Testability,"In the PR #484, the way of searching the ODESolver in GenericConstraintCorrection changed from ; `c->get(odesolver, core::objectmodel::BaseContext::SearchRoot);`; to; `c->get(odesolver, core::objectmodel::BaseContext::Local);`; In some of our simulations, the GenericConstraintCorrection is located in the root node. And so no ODE solver can be found, and the user can not set it manually. . In this PR: . - Added data d_ODESolverName, to allow user to specify the ODE solver as it is actually done for the linear solvers; - If no ODE solver found using d_ODESolverName, search in ""Local"", then in ""SearchRoot"".; - Some cleaning (including renaming). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/567:902,test,test,902,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/567,2,['test'],['test']
Testability,"In the `getValuePtr` methods, a buffer on vector data is obtained by actually returning a reference to the vector first element. However the case where the method is called on an empty (but valid) vector is not handled. This may lead to an execution error, for instance when using SofaPython3 to assign values to a component's Data dynamically. This specific scenario is the object of a second PR in SofaPython3 [(link to the PR)](https://github.com/sofa-framework/SofaPython3/pull/318). To change this, we propose to use the `std::vector.data()` method, which handles the case when the vector is actually empty (however returning a pointer that may or may not be null). All unit tests work on my setup with this modification. However I don't fully understand the consequences of a change at this depth in SOFA's core, so additional opinions would be useful. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3505:680,test,tests,680,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3505,3,['test'],"['test', 'tests']"
Testability,"In the caduceus scene, the collision detection and the free motion can be computed in parallel. Here are the timings for 1000 time steps on my computer:. # Before. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 1.43 8.29 2.27 0.44 2266.53 100 TOTAL; 1 0 1 1.43 8.27 2.27 0.44 2.27 99.95 .Simulation::animate; 2 0.06 1 1.05 6.97 1.28 0.22 1.28 56.46 ..FreeMotion+CollisionDetection. ```; [INFO] [BatchGUI] 1000 iterations done in 2.57462 s ( 388.407 FPS). # After. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 1.21 7.79 1.95 0.39 1948.88 100 TOTAL; 1 0 1 1.21 7.78 1.95 0.39 1.95 99.95 .Simulation::animate; 2 0.06 1 0.80 6.66 0.99 0.21 0.99 50.72 ..FreeMotion+CollisionDetection. ```; [INFO] [BatchGUI] 1000 iterations done in 2.24415 s ( 445.602 FPS). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2471:1330,test,test,1330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2471,2,['test'],['test']
Testability,"In the case the template parameter is in the list of possible template, but is not compatible with the current context, the message said the template is not in the list.; A new message is introduced for this special case. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2262:761,test,test,761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2262,2,['test'],['test']
Testability,"In the context of the documentation improvement, and towards the automation of its generation, here is a first wide clean PR. Replace #2751 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4751:681,test,test,681,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4751,2,['test'],['test']
Testability,"In the continuity of #1442 . Now plugin is here: https://github.com/sofa-framework/PSL. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4047:627,test,test,627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4047,2,['test'],['test']
Testability,"In the current implementation of accessor.h we are using a type_trait to select between default accessor implementation or vector's one. . The traits we are using, called is_container, as its name suggest is returning true if the type parameter is a container.This means that std::set or map are also switching to the vector version of accessors. . This PR; - adds an is_vector type trait which check there is a operator[] in the type parameter ; - use the is_vector into accessor.h to fix the compilation problem. . @fredroy I hope you appreciate the ""quasi c++20 concepts"", when they will be available we will be ready; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1900:1161,test,test,1161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1900,2,['test'],['test']
Testability,"In the example of 72 falling cubes, mesh-based collision models are replaced by `OBBCollisionModel`, which is more suited for cubes.; I had to change from LocalMinDistance to NewProximityIntersection. It was the only intersection method supporting intersection between OBB and triangle. I tried adding it to LocalMinDistance, without success.; I also removed the visual models because we can see the cubes from the collision models.; The scene is at least twice faster. I also added security guards in ParallelBVHNarrowPhase because of a crash I experienced. I did not investigate why this crash happens. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2646:1144,test,test,1144,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2646,2,['test'],['test']
Testability,"In the launcher.py file line 12 correction of the way to import the Queue library. Write From queue import Queue rather than import Queue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2258:678,test,test,678,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2258,2,['test'],['test']
Testability,"In the process of building the performance regression scripts I needed a timer basis working for both FreeMotionAnimaitonLoop and DefaultAnimationLoop with Tracy. For this I needed to add timers around the mechanical mapping application in the FreeMotionAnimationLoop and scoped timers for RH side computation and MBKBuild in the EulerImplicit. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4957:886,test,test,886,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4957,2,['test'],['test']
Testability,"In the scene `examples/Benchmark/Performance/TorusFall.scn`, vectors are dynamically allocated by EulerImplicitSolver and GenericConstraintSolver. They now have a name instead of a meaning less number. ![image](https://user-images.githubusercontent.com/10572752/160145176-3fa3a101-5876-4c39-a0a5-8215d9d97be8.png). The names are not associated to the VecIds, but to the Data associated to the VecIds. Note: CGLinearSolver allocates dynamically temporary vectors. I did not add any complexity for having names for them, as they are ""freed"" after each solve. But they are actually not freed, just unset. I suspect its a source of the bug we already met when there are many vecids. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2811:23,Benchmark,Benchmark,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2811,3,"['Benchmark', 'test']","['Benchmark', 'test']"
Testability,"In the spirit of #3900 and following #3924, this PR applies the change on the UniformMass. To be noted, the `componentState` must be added to trigger the callback (done in `addMDx()`, `addMToMatrix`, `accFromF` and `buildMassMatrix`). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927:774,test,test,774,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927,2,['test'],['test']
Testability,"In the spirit of #3900 this PR applies the change on the ConstantForceField. To be noted:; - `return` have been added ; - the `componentState` must be added to trigger the callback; - use function isComponentStateValid(); - Create separate addUpdateCallback and created dedicated separate functions; - Remove call to trackData for doUpdateInternal; - Use Accessors (remove beginEdit). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3924:924,test,test,924,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3924,2,['test'],['test']
Testability,"In the spirit of #3983 (more readable, more efficient, more consistent). Also it fixes the function, by moving the `++i` inside the loop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3989:677,test,test,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3989,2,['test'],['test']
Testability,"In this PR I do only cleaning:; - replace a bunch of std::cerr, std::cout, prinf to use msg_* instead. ; - remove commented code. If I didn't made mistake nothing should break. CHANGELOG:; [all]:; - remove a lot of commented code. ; - replace std:cerr, std::cout and printf with msg_* . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/339:538,test,test,538,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/339,2,['test'],['test']
Testability,"In this PR I remove some of the un-needed create()/canCreate() function when they were simply forwarding to their parent creat()/canCreate() one.; ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1622:688,test,test,688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1622,2,['test'],['test']
Testability,"In this PR we deprecate for removal the set/getOwnerClass() method from BaseData because this methods duplicates what can be accessed through BaseData::getOwner(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1890:703,test,test,703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1890,2,['test'],['test']
Testability,"In this PR we:; - add difflib in extlibs, difflib is an header only library that allows to make approximated search for string. ; - add sofa::helper::DiffLib to wrap the header only into a sofa looking library. ; - use DiffLib to implement spelling suggestion when a component cannot be created by the ObjectFactory.; Example of output:; ```console; [ERROR] [SofaPython3::SceneLoader] Unable to completely load the scene from file 'toto.py'. ; Python exception: ValueError: Object type MechanicaObject<> was not created ; The object is not in the factory. ; But the following exits: ; : MechanicalObject (98% match); : MappedObject (54% match); : MechanicalStateController (53% match); ```; ; The DiffLib feature is extensively used to implement a much wider spelling suggestion mechanism in SofaPython3.; Have a look at all the examples and use cases in PR https://github.com/sofa-framework/SofaPython3/pull/314. . I'm not using xml scenes so I didn't implemented support for spelling suggestion there. If your are interested in doing such a thing, the SofaPython3 implementation is a good starting point for your PR. . ___________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3042:1657,test,test,1657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3042,2,['test'],['test']
Testability,"In this PR, `map_ptr_stable_compare` is preferred over `unordered_map`, as it allows reproducible contact response. However, `unordered_map` is still a lot faster. #2047 leads to a crash in `examples/Components/collision/RayTraceCollision.scn`. I suspect the cause of this crash existed before #2047, and that #2047 revealed the crash by processing the contacts in a non-deterministic order. With the non-deterministic order, I can see that the crash does not happen always at the same current time step. It even happened that there was no crash. Currently, I am not able to fix the crash. But I will continue investigating. As a workaround I restore the stable map to have deterministic contacts. IMO, it hides the cause of the crash. In the end, I think the stable map should be proposed to the user (as a parameter?) by default. Let's see if we can accelerate it (perhaps with [Insimo version](https://github.com/InSimo/ISSofa/commits/issofa/framework/sofa/helper/map_ptr_stable_compare.h)). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2067:1534,test,test,1534,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2067,2,['test'],['test']
Testability,"In this PR:. - Added static class member `Visitor::runVisitorTask`; - Used `Visitor::runVisitorTask` in BaseMechanicalVisitor to replace all the boilerplate code; - Simplify the logic in `BaseMechanicalVisitor::processNodeTopDown` even though I have some concerns; - `Visitor::for_each` is now static; - `Visitor::for_each` accepts an optional string parameter giving the type of visitor ""fwd"" or ""bwd""; - `Visitor::for_each_r` is removed in favour of an overload of `Visitor::for_each`; - SOFA_VERBOSE_TRAVERSAL surrounds the calls of `debug_write_state_before` and `debug_write_state_after`, instead of the functions themselves. Doing that, it allows to actually compile the debug content of both function. And I noticed that they had compilation errors (we could not detect it as SOFA_VERBOSE_TRAVERSAL is never defined). My concerns:. 1. I wanted to use `Visitor::runVisitorTask` in other visitors than BaseMechanicalVisitor. But the logic is not the same. BaseMechanialVisitor is the only visitor checking the tags. Should we always check the tags? Also, the debug boilerplate code is not consistent over all the visitors.; 2. `Visitor::for_each` returns only the result of the last call in the loop. In another loop on the solvers at the beginning of `BaseMechanicalVisitor::processNodeTopDown`, we check the intermediate values. It is not consistent. I suspect that `Visitor::for_each` must also check intermediate values.; 3. In `BaseMechanicalVisitor::processNodeTopDown`, between the process of `mechanicalMapping` and `mechanicalState`, we don't check if `res == RESULT_PRUNE`. It means we do the process of `mechanicalState` even if the process of `mechanicalMapping` returned `RESULT_PRUNE`. It's not consistent with the rest of the code.; 4. It is not possible to define SOFA_VERBOSE_TRAVERSAL through cmake. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2125:178,log,logic,178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2125,2,['log'],['logic']
Testability,"In this PR:; - add some pairwise algorithms on fixed_array<> instead of Vec<> so here is an implementation. To avoid adding to the fixed_array.h I use the stl approach of putting that in a separated ""algorithm.h"" file. ; - I then use these to implement an enlightening function in RGBAColor with its unittest. The uses of these will be done in a future PR. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1172:610,test,test,610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1172,2,['test'],['test']
Testability,"In this pull request I propose several improvements of the script scn2python.py: ; - Improved the structure of the output file, i.e. for both, the generation of .scn+.py and .py a class python script controller is introduced (before it was only the case for .scn+.py). For .py the function createScene then introduces an instance of the class. Moreover, the script now saves every node in self, s.t. it is not necessary to use getChild.; - In createScene, the command line arguments introduced in #356 are now forwarded to the class (not possible before); - If an xml scene includes another file, the script now locates this file and then introduces all its objects automatically; - In an insertion like the one mentioned in the last point, it can happen, that there are links like '@', are now dealt with the input of the user. I am open for any improvements!; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/387:1113,test,test,1113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/387,2,['test'],['test']
Testability,"Include PR #3519 . Add several methods similar to existing one but using output parameters. ; Done to access:; - gravity; - vertices / normals / texcoords; - edge / triangles / quads; Also add method to unload a scene. All methods return an int corresponding to a exit code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3520:814,test,test,814,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3520,2,['test'],['test']
Testability,"Include to Node.h was missing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1776:570,test,test,570,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1776,2,['test'],['test']
Testability,Including the Message API (Messaging.h) is needed in image so that the compilation can work independently from the activation of SofaPython. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1068:392,test,test,392,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1068,2,['test'],['test']
Testability,"Including the development cycle and associated events in the CONTRIBUTING.md. Feedback most welcome. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3774:640,test,test,640,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3774,2,['test'],['test']
Testability,Inconsistency in the tests on hyperelastic materials,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4605:21,test,tests,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4605,1,['test'],['tests']
Testability,"Indices were wrong in case of multiple objects under the same linear solver which uses an assembled 3x3 bloc-based matrix.; Bug introduced in https://github.com/sofa-framework/sofa/pull/2240. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2277:731,test,test,731,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2277,2,['test'],['test']
Testability,"InitPerThreadDataTask is not used. I suggest to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1991:598,test,test,598,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1991,2,['test'],['test']
Testability,"Initial test was very simple. This one exports at begin and every 5 steps, and the object it exports is deforming.; (and have all its _requiredplugin_ and should not show warnings). Illustrate than export every N steps works (issue #13). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1782:8,test,test,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1782,3,['test'],['test']
Testability,"Initially I wanted to fix issue #673 that prevents compilation with gcc > 8.1. But I was not able to prevent myself to refactore the class in the process. . CHANGELOG:; - Move the implementation from .h to .inl; - Move the definition of the inner class FCPHandler from the .h to .inl; - Group the class member according their visibility (public, protected, private) to avoid interleaving.; - Uniformize the source code comments; - Rename the class members (attributes) to make them consistent with the sofa coding style.; - Factorize the code that was ""duplicated"" in the .cpp between rigid3dtype, rigid3ftype, vec3d, vec3f (I welcome an alternative implementation). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/803:918,test,test,918,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/803,2,['test'],['test']
Testability,"Initially fixes the visualization in InextensiblePendulum.scn. The second pendulum was out of the frustrum because the bounding box was not computed. The indentation has been changed from tabs to spaces in HexahedronSetGeometryAlgorithms.inl. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3034:782,test,test,782,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3034,2,['test'],['test']
Testability,"Initially, I wanted to differentiate the functions from the broad phase, from the functions from the narrow phase, in the header file.; `void selfCollision (TriangleOctreeModel * cm1);` has been removed since it is not implemented. Other modifications are minor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2009:802,test,test,802,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2009,2,['test'],['test']
Testability,"Install FindTinyXML2 for OOT compilation using the binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4545:600,test,test,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4545,2,['test'],['test']
Testability,"Instead of accepting only one parameter applied on all springs, I propose to accept a list of lengths, so that each spring can have its own length. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2602:687,test,test,687,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2602,2,['test'],['test']
Testability,"Instead of suggesting to add the required plugins in the XML syntax, the goal is to use the scene loader to adapt the syntax to the type of file. For example, in Python, the message will be:. ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene: ; root.addObject('RequiredPlugin', name='Sofa.Component.AnimationLoop') # Needed to use components [FreeMotionAnimationLoop] ; root.addObject('RequiredPlugin', name='Sofa.Component.Collision.Detection.Algorithm') # Needed to use components [BVHNarrowPhase,BruteForceBroadPhase,BruteForceDetection,CollisionPipeline] ; root.addObject('RequiredPlugin', name='Sofa.Component.Collision.Detection.Intersection') # Needed to use components [LocalMinDistance] ; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3799:1540,test,test,1540,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3799,2,['test'],['test']
Testability,"Instead, I use raw gpu pointers. I measured the performances on the scene `applications\plugins\SofaCUDA\scenes\benchmarks\CudaTetrahedronTLEDForceField_beam10x10x40_gpu.scn` on 50k time steps:. ```; before; [INFO] [BatchGUI] 50000 iterations done in 11.9961 s ( 4168.04 FPS). after; [INFO] [BatchGUI] 50000 iterations done in 10.3888 s ( 4812.87 FPS).; ```. Note that I did not change anything in the algorithm, except the following check:. ```cpp; if (FCrds.y < 0 || FCrds.y >= nbElements); {; FCrds.y = 0;; }; ```. I had to add this check because `FCrds.y` was often equal to `-1`, which then leads to out-of-bounds vector access. This check was not required before, because out-of-bounds texture returns 0.; I don't know if this behavior is intended or not. TODO:. - [x] Test that `CudaTetrahedronTLEDForceField` now compiles with CUDA 12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3650:112,benchmark,benchmarks,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3650,4,"['Test', 'benchmark', 'test']","['Test', 'benchmarks', 'test']"
Testability,"Interestingly, `addKToMatrix` was not implemented for TriangularFEMForceField. It means, it was not possible to use this component with a linear solver which assembles its matrix.; The implementations are strongly based on the implementations in TriangleFEMForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3991:808,test,test,808,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3991,2,['test'],['test']
Testability,"Introduce a Mapping component, mapping each tetrahedron in a topology to a scalar value representing its volume. The structure of the `VolumeMapping` class is strongly inspired by `DistanceMapping` and `AreaMapping` (https://github.com/sofa-framework/sofa/pull/4898). Two types of unit tests are added:. - Unit test the derivative and the second derivative using central difference without using the Mapping API; - Generic unit test on a mapping, checking that all the major methods of a mapping are correctly implemented. Also checked by finite difference. Should also comply with https://github.com/sofa-framework/sofa/pull/4897. Lastly, an example is provided with a use case. It allows to constraint the volume of tetrahedra over time. In the example, I use springs to apply the constraints. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4906:286,test,tests,286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4906,5,['test'],"['test', 'tests']"
Testability,"Introduce a Mapping component, mapping each triangle in a topology to a scalar value representing its area. The structure of the `AreaMapping` class is strongly inspired by `DistanceMapping` (spoiler alert: soon `VolumeMapping`); The maths (derivative and second derivative) are done here: https://gist.github.com/alxbilger/668e775e52fa41626c54ffa33ef9bd57. Two types of unit tests are added:. - Unit test the derivative and the second derivative using central difference without using the Mapping API; - Generic unit test on a mapping, checking that all the major methods of a mapping are correctly implemented. Also checked by finite difference. Should also comply with https://github.com/sofa-framework/sofa/pull/4897. Lastly, an example is provided with a use case. It allows to constraint the area of triangle over time. In the example, I use springs to apply the constraints. ![image](https://github.com/user-attachments/assets/440004cc-eaa7-4803-9081-e05662954493). The red is the reference (no constraints), and the green is the constrained. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4898:376,test,tests,376,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4898,5,['test'],"['test', 'tests']"
Testability,"Introduce a free function doing a simple loop in the general case, and use memset in the vector<Vec> case. The operator = on the vector object is faster than the loop. Performance improvements validated by https://github.com/alxbilger/SofaBenchmark/pull/29. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3284:797,test,test,797,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3284,2,['test'],['test']
Testability,"Introduce a new component:; It exports the global system matrix of the current context into a file. The exporter allows to write the file under several formats. The class is designed so more file format can be supported. For example, image export is added in the CImg plugin. An example is provided. Example:. ![image](https://user-images.githubusercontent.com/10572752/130434673-82d50165-2cc6-49f5-9298-241be36490ad.png). ![image](https://user-images.githubusercontent.com/10572752/130598924-8a805845-bb95-407a-972f-d68e56c18fb2.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2303:1075,test,test,1075,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2303,2,['test'],['test']
Testability,"Introduce flags to know if STL parallelism is supported (see https://github.com/sofa-framework/BeamAdapter/pull/50), and an example on how to use it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3358:689,test,test,689,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3358,2,['test'],['test']
Testability,"Introduce the solvers from https://github.com/alxbilger/EigenLinearSolvers. Their description can be found in the readme. The readme mentions only speed ups, but I just found that `examples/Benchmark/Performance/TorusFall.scn` is slower with `EigenSimplicialLDLT` than `SparseLDLSolver`. Need more investigation. Questions for the review:. - Those components must be in Sofa or in a plugin?; - Do you like having Eigen as a prefix of the component? [I don't]. If no prefix, there is a conflict with the legacy solvers.; - What do we do with the csparse-based legacy solvers?; - If decided to remove them, how to deprecate? Do we rename EigenSimplicialLDLT to SparseLDLSolver?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2926:190,Benchmark,Benchmark,190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2926,3,"['Benchmark', 'test']","['Benchmark', 'test']"
Testability,"Introduced in https://github.com/sofa-framework/sofa/pull/3858. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3876:603,test,test,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3876,2,['test'],['test']
Testability,"Introduction (by Damien); Erwan is a new member of Defrost. He will work on sofa, cleaning the haptic plugins & finally make user interfaces. Here is his first PR (to practice writing tests and our workflow :)). This PR contains tests to validate the behavior of the IndexValueMapper engine which was not tested before. ; The component was selected as it is listed into the SofaNGExt list. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/319:184,test,tests,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/319,5,['test'],"['test', 'tested', 'tests']"
Testability,"Introduction of a new component in the MultiThreading plugin: `ParallelBruteForceBroadPhase`. As the name suggests, it is a parallel implementation of the algorithm in the component `BruteForceBroadPhase`.; An example scene is also added to illustrate the use of this component. This is a comment I wrote in the example scene:. > ParallelBruteForceBroadPhase is interesting when there are many objects potentially in collision.; This scene has 72 cubes and a floor.; Each cube has a TriangleCollisionModel, a LineCollisionModel and a PointCollisionModel.; The floor has only a TriangleCollisionModel.; It results in n = 72 * 3 + 1 = 217 collision models.; It makes n*(n-1)/2 = 23436 pairs of collision models to test.; On a CPU with 6 cores, each core tests 3906 pairs of collision models. I tested this scene with 6 threads:; - Broad phase runs in 4.09 ms with the sequential implementation: `BruteForceBroadPhase`; - Broad phase runs in 1.56 ms with the parallel implementation: `ParallelBruteForceBroadPhase`. ![cubes](https://user-images.githubusercontent.com/10572752/115710959-3fb00980-a373-11eb-92ee-d16df0c190d4.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2038:712,test,test,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2038,5,['test'],"['test', 'tested', 'tests']"
Testability,"Introduction of a scene checker SceneCheckDeprecatedComponents. Its job is to check for deprecated components in the scene, which was done previously by SceneCheckAPIChange. But SceneCheckAPIChange is no longer enabled. Note that SceneCheckAPIChange requires an APIVersion component in the scene, but does not use it to check for deprecated components. That is why I decided to move this check elsewhere. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2267:944,test,test,944,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2267,2,['test'],['test']
Testability,"Introduction of two scene files. This is actually the same scene, but one is with a `DefaultCollisionGroupManager` and the other is without.; The goal is to evaluate the effects of a group manager on the simulation and on the performances. # Performances. running CollisionGroupManager_with.scn for 1000 time steps: 8.2129 s ( 121.76 FPS); running CollisionGroupManager_without.scn for 1000 time steps: 4.82236 s ( 207.368 FPS). Similar results if run with #2076. # Behavior. The simulation seems to behave differently with or without the group manager:; ![groupmanager](https://user-images.githubusercontent.com/10572752/118451813-ea5ae400-b6f5-11eb-992f-65f047f1107c.gif). #2076 seems to have no effect on the behavior. # Benchmark Details. ## without. ```; Steps Duration Statistics (in ms) :; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 0 	 0 	1000 	 4.04	 9 	 4.79	 0.46	4786.01	 100 	TOTAL; 1 	 0 	 1 	 4.04	 8.98	 4.78	 0.46	 4.78	 99.98	.Simulation::animate; 2 	 0.01	 1 	 0 	 0.03	 0.01	 0 	 0.01	 0.12	..BehaviorUpdatePositionVisitor; 2 	 0.02	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.17	..UpdateInternalDataVisitor; 2 	 0.02	 1 	 3.87	 8.73	 4.57	 0.44	 4.57	 95.56	..AnimateVisitor; 3 	 0.04	 1 	 2.29	 7.10	 3.03	 0.36	 3.03	 63.35	...Collision; 4 	 0.04	 1 	 0 	 0.03	 0.01	 0 	 0.01	 0.17	....begin collision; 4 	 0.05	 1 	 0 	 0.04	 0.01	 0 	 0.01	 0.25	....CollisionReset; 4 	 0.08	 1 	 2.06	 4.76	 2.70	 0.31	 2.70	 56.49	....doCollisionDetection; 5 	 0.08	 1 	 0.07	 1.33	 0.08	 0.04	 0.08	 1.61	.....ComputeBoundingTree; 6 	 0.08	 1 	 0.01	 0.22	 0.01	 0.01	 0.01	 0.30	......Compute BoundingTree: triangleCollisionModel1; 6 	 0.10	 1 	 0.01	 0.20	 0.02	 0.01	 0.02	 0.33	......Compute BoundingTree: lineCollisionModel1; 6 	 0.11	 1 	 0 	 0.13	 0.01	 0 	 0.01	 0.12	......Compute BoundingTree: pointCollisionModel1; 6 	 0.12	 1 	 0.01	 0.16	 0.01	 0.01	 0.01	 0.26	......Compute BoundingTree: triangleCollisionModel2; 6 	 0.13	 1 	 0.01	 0.20	 0.01	 0.01	 0.01	 0.31	......",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:724,Benchmark,Benchmark,724,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,1,['Benchmark'],['Benchmark']
Testability,"Introduction of wrappers, derived from `BaseMatrix` and `BaseVector`, to Eigen matrices. The wrappers are courtesy of @jnbrunet, from https://github.com/jnbrunet/caribou, and have been adapted to SOFA + missing functions for CGLinearSolver. `eigen::EigenMatrix` has the interface of `BaseMatrix`, so it can be used as a matrix storing the linear system, in a linear solver.; An example is provided in `CGLinearSolver`. Performances:. Tested on a cantilever beam from `examples/Components/linearsolver/FEMBAR-CGLinearSolver.scn`. **CompressedRowSparseMatrixMat3x3d**; [INFO] [BatchGUI] 1000 iterations done in 2.62389 s ( 381.113 FPS).; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 2.23 5.32 2.59 0.21 2587.89 100 TOTAL; 1 0 1 2.23 5.31 2.59 0.21 2.59 99.97 .Simulation::animate; 2 0 1 0 0.02 0 0 0 0.04 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0.01 0 0 0 0.05 ..UpdateInternalDataVisitor; 2 0 1 2.21 5.24 2.56 0.21 2.56 99.03 ..AnimateVisitor; 3 0.01 1 2.20 5.24 2.56 0.21 2.56 98.94 ...Mechanical; 4 0.01 1 0.06 0.21 0.07 0.01 0.07 2.60 ....ComputeForce; 4 0.08 1 0.05 0.14 0.05 0 0.05 1.98 ....ComputeRHTerm; 4 0.13 1 0.49 1.58 0.52 0.04 0.52 20.27 ....MBKBuild; 5 0.13 1 0.49 1.56 0.52 0.04 0.52 20.19 .....CG-setSystemMBKMatrix; 4 0.66 1 1.58 4.57 1.90 0.20 1.90 73.45 ....MBKSolve; 5 0.67 1 1.56 4.54 1.88 0.20 1.88 72.80 .....CG-Solve; ```. **CompressedRowSparseMatrixd**; [INFO] [BatchGUI] 1000 iterations done in 4.19299 s ( 238.493 FPS).; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 3.74 8.41 4.16 0.27 4159.02 100 TOTAL; 1 0 1 3.74 8.40 4.16 0.27 4.16 99.98 .Simulation::animate; 2 0 1 0 0 0 0 0 0.02 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0 0 0 0 0.03 ..UpdateInternalDataVisitor; 2 0 1 3.72 8.36 4.13 0.27 4.13 99.39 ..AnimateVisitor; 3 0.01 1 3.72 8.35 4.13 0.27 4.13 99.33 ...Mechanical; 4 0.01 1 0.06 0.18 0.07 0.01 0.07 1.59 ....ComputeForce; 4 0.08 1 0.05 0.14 0.05 0 0.05 1.21 ....ComputeRHTerm; 4 0.13 1 1.66 5.86 1.72 0.14 1.72 41.42 ....",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2794:434,Test,Tested,434,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2794,1,['Test'],['Tested']
Testability,"Investigation from the problem I got with regression, which was that the sofa::component::init(); In GCC, it was crashing, whereas on clang/msvc it was not. After debugging, it appears that there was a infinite loop when calling all the init() of the submodules.; E.g Sofa.Component calls sofa::component::collision::init() which calls initExternalModule of Sofa.Component.Collision. ; But with gcc, it was not calling initExternalModule() of Sofa.Component.Collision but the one of Sofa.Component. and then tries to call again init() etc. I suspect problems with demangling the function name in the binary (extern ""C"") and stuff like that, but I did not go further.; The solution anyway is to put the call of the initialization in init() and not in initExternalModule() (and not vice versa). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3112:1332,test,test,1332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3112,2,['test'],['test']
Testability,"Isolate the piece of code from ; - #4787 . where the change of versions forces to use the new API for intersection, introduced in ; - #4583. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4802:680,test,test,680,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4802,2,['test'],['test']
Testability,Issue #1363. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1365:264,test,test,264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1365,2,['test'],['test']
Testability,"Issue #1521. ## Description:; This PR introduces two new modules in the framework:; - Sofa.Geometry: related to geometrical operations such as : area of a triangle, volume of a tetrahedra... Introduces to regroup all these operations instead of having *GeometricAlgorithms etc. **Not linked to any topology**. It is mostly empty for the moment.; - Sofa.Topology: defining how is define an Element (triangle, etc). ; Historically in SOFA, elements are defined as a vector of Indices. So this module regroups mainly what was in core/Topology.h and set each Element its own files (h/cpp). I suppose this is where *TopologyAlgorithms will lie in the future. ## Breaking; Nope, or nothing that I am aware of. ## Discussion; - Naming: both of those module (and namespace) has a Triangle/Edge/etc: e.g sofa::geometry::Triangle and sofa::topology::Triangle.; This may be confusing, especially without the namespace.; - See in the future how to link these modules with the much awaited [Caribou ](https://github.com/jnbrunet/caribou) plugin. ## Thanks; - @epernod ; - @jnbrunet ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1912:1610,test,test,1610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1912,2,['test'],['test']
Testability,"Issue #2402. BarycentricMapping instanciates ""mappers"" according to the topology it is mapping from.; There are direct dependencies on *SetTopologyContainer, and Grids. Morever, it is using as well a few functions from *SetGeometryAlgorithms.; This PR:; - replace the direct usage of *SetTopologyContainer, and uses instead the abstraction TopologyContainer (test if a certain kind of element is present) which should be the same effect;; - move (copy from now) methods from GeometryAlgorithms, into Sofa.Geometry and Sofa.Topology. Those functions are designed to be the most generic possible (but not too much to not have huge/complex template predicates). This ""step-by-step"" process should be the way to convert *GeometryAlgorithms. (and remove this family of component in the future). This PR does not address the issue on the RegularGrid/SparseGrid dependency for now 😥. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2403:359,test,test,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2403,3,['test'],['test']
Testability,"Issue #2954, reports a problem in how context are set. A failing test is introduced in the first commit to demonstrate what happens when an object belong to multiple Node. ; Then a fix is implemented in Node.cpp by forcing base object to be attached to a single context at a time. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2964:65,test,test,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2964,3,['test'],['test']
Testability,"Issue description copied from SOFA Forum; https://www.sofa-framework.org/community/forum/topic/using-navigation-recorded-camera/. I have been trying to use the following scene:; https://github.com/sofa-framework/sofa/blob/master/examples/Components/visualmodel/NavigationRecordedCamera.scn. But it does not appear to work. The recorded camera node in the application shows a warning icon, with the following log on the console:; `[WARNING] [RecordedCamera(recordedCamera0)] Too many missing parameters; taking default ...; `; SO, assuming the default parameters should work fine for the scene.; I referred to the documentation provided here: https://www.sofa-framework.org/community/doc/components/ui/recorded-camera/; Which says I need to record at least two viewpoints, and one can do that using Mouse Manager. I do that by assigning mouse controls to appropriate actions. Left: For viewpoint recording; Right: To start navigation. However, I don’t see anything happening, when I run the Animation and use the left mouse to record viewpoint, at least two orientations, and then right-click to run the navigation. Any input on how to use a navigated recorded camera will be of great help. @hugtalbot",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1934:408,log,log,408,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1934,1,['log'],['log']
Testability,"Issue detected by @quentinfrancois0. This comes from a change in the Python configuration since the last High Sierra.; The line #include <Python/Python.h> involved a link ""Python"" to the python include, but this is no longer valid in High Sierra. This was causing a fail in the compilation (include not found). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/614:562,test,test,562,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/614,2,['test'],['test']
Testability,"Issue introduced in https://github.com/sofa-framework/sofa/pull/1167. The static variables were no longer initialized. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3962:658,test,test,658,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3962,2,['test'],['test']
Testability,"It allows to differentiate C/C++/CUDA/(maybe other) flags which are passed through dependencies. Fix compilation problem with ; - https://github.com/sofa-framework/sofa/pull/4878; where specific msvc flags are passed to nvcc (and raise errors). This should be propagated in a potential cleaning of SofaCUDA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4990:847,test,test,847,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4990,2,['test'],['test']
Testability,"It allows to write something like:. ```cpp; static constexpr sofa::type::fixed_array<std::size_t, 4> sofaArray { 8, -7, 4, -1};; const auto& [a, b, c, d] = sofaArray;; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3753:712,test,test,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3753,2,['test'],['test']
Testability,"It avoids a crash if the matrix is not positive definite. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3706:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3706,2,['test'],['test']
Testability,"It avoids a crash in the destructor when `m_handler` has not been affected. And pointers must be initialized anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4712:656,test,test,656,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4712,2,['test'],['test']
Testability,"It avoids crashes when animate after initialization in a Node where no topology is found. See unit test that I also modified. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3690:99,test,test,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3690,3,['test'],['test']
Testability,"It basically removes the use of `MultiMatrix` which hides the use of a `LinearSolver`. Implicitly, the first linear solver found was used. Now, the `LinearSolver` can be defined directly in the ODE solver as a Link. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4628:755,test,test,755,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4628,2,['test'],['test']
Testability,"It could be confused with sofa::helper::read(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1953:587,test,test,587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1953,2,['test'],['test']
Testability,"It crashed if `context` was `nullptr`. Not sure what to return if `context` is `nullptr`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5075:629,test,test,629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5075,2,['test'],['test']
Testability,"It first started from fixing the issue raised by @damienmarchal in https://github.com/sofa-framework/sofa/pull/1657. But then, I just couldn't stop... Very nice activity to blow up some steam, I greatly recommend. Happy holidays !. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1682:771,test,test,771,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1682,2,['test'],['test']
Testability,"It happened to me in debug mode. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4307:572,test,test,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4307,2,['test'],['test']
Testability,"It has been noticed in https://github.com/sofa-framework/sofa/issues/4331. As it appears in the initialization, it won't affect the performances during the simulation. I took the opportunity to remove the useless collision pipeline in the example scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4332:793,test,test,793,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4332,2,['test'],['test']
Testability,"It has somehow been forgotten during a refactoring. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3775:591,test,test,591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3775,2,['test'],['test']
Testability,"It is also deprecated, and replaced by `EIGEN_MAX_ALIGN_BYTES` with value 0. See https://eigen.tuxfamily.org/dox/TopicPreprocessorDirectives.html. It has been introduced in https://github.com/sofa-framework/sofa/commit/a08e0d505cb68d0de73bf7126a1ff1c6f5cd68f0. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3780:800,test,test,800,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3780,2,['test'],['test']
Testability,"It is made common with TetrahedronHyperelasticityFEMForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2838:603,test,test,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2838,2,['test'],['test']
Testability,"It is needed to resolve dependencies when using binaries for dev on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1718:616,test,test,616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1718,2,['test'],['test']
Testability,It is not exporting the target properties and thus the include path. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1457:320,test,test,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1457,2,['test'],['test']
Testability,"It is not obvious they as the missing one as in fact already included from one of the base header (Data/BaseData). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3297:654,test,test,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3297,2,['test'],['test']
Testability,"It is not used, and its content is deprecated in Cuda 12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3869:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3869,2,['test'],['test']
Testability,"It is now possible to ON/OFF SofaPython3 since https://github.com/sofa-framework/SofaPython3/pull/62; So let's make it fetchable again in SOFA :+1:. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1574:688,test,test,688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1574,2,['test'],['test']
Testability,"It is possible to select multiple timers to be displayed in the chart through checkboxes. ![multipleSelection](https://user-images.githubusercontent.com/10572752/120432765-a9f89880-c37a-11eb-8605-2886ec7dd893.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2141:754,test,test,754,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2141,2,['test'],['test']
Testability,"It is preferable to force the `constexpr` context:. ```cpp; static constexpr ResolutionMethod NonsmoothNonlinearConjugateGradient(""NonsmoothNonlinearConjugateGradient"");; if (d_resolutionMethod.getValue() != NonsmoothNonlinearConjugateGradient); {; ```. The compiler may not choose to use `constexpr` in:. ```cpp; if (d_resolutionMethod.getValue() != ResolutionMethod(""NonsmoothNonlinearConjugateGradient"")); {; ```. Therefore, no `constexpr` check if `NonsmoothNonlinearConjugateGradient` is not in the list. There is a runtime check though. The type allows to deprecate a key if desired (I am thinking about the Data `method` in the FEM force fields). There is also a description of each key. And the whole list (key + description) can be added easily in the description of the Data, hence in the documentation. The major problem is about the GUI. More particularly, when a Data is read to be displayed in the GUI. Here, each of the `SelectableItem` is a new strong type. So there is no `DataTypeName`, `DataTypeInfo` etc for the new type. I tried to factorize with a common base class (`BaseSelectableItem`) but without success. I tried to define `DataTypeName`, `DataTypeInfo` etc for `SelectedItem` but without success. The consequence is that I cannot specialize a widget for this type of Data. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5062:3791,test,test,3791,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5062,2,['test'],['test']
Testability,"It is required in case of multiple inheritance of BaseObject in a BaseLinearSolver . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2799:624,test,test,624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2799,2,['test'],['test']
Testability,"It is useful to be able to load shaders directly from a std::string as it allows us to not need filesystem management. Consequently ""fixed"" shaders like shadows (or normal rendering when OpenGL Core profile will come) will be directly integrated into the libs (no more share/shaders directory to locate/find/read). [needed to solve #142 ]. Checklist to merge this PR: ; - [x] succeed on each compilation setup on the CI ; - [x] does not generates new warnings or test failure ; - [x] does not seems to break existing scenes.; - [x] does not seems to break API compatibility. ; - [x] cleans stuff; - [x] have tests on the introduced features. ; - [x] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/158:463,test,test,463,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/158,2,['test'],"['test', 'tests']"
Testability,"It is very useful to store and be able to retieve, for each object/node ; where it is implemented and where it was instanciated. This PR implements that. Having this allows to implement cool feature like in to jump from the selected object/node in scene graph straight in the scene file (python or xml) or to the implementation file (cpp or python). . We have such a feature in SofaQtQuick. We will backport this feature in a second PR soon. . The change in dmsg_* are a ""passager clandestin"" but a small one :). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1012:764,test,test,764,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1012,2,['test'],['test']
Testability,"It looks like this is the reason why SofaPython3 tests are failing.; I still have no idea why for now... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2059:49,test,tests,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2059,3,['test'],"['test', 'tests']"
Testability,"It makes no sense to have a drawSize set to zero by default given that the; drawing is activated by an additional drawPoints/drawBox boolean. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3045:681,test,test,681,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3045,2,['test'],['test']
Testability,"It might not break anything, except if SReal == float. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2808:594,test,test,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2808,2,['test'],['test']
Testability,"It results in this structure:. ![image](https://user-images.githubusercontent.com/10572752/213701188-d0b43e3a-7123-4de5-a92f-be2f6ff3c8ce.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3598:683,test,test,683,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3598,2,['test'],['test']
Testability,"It seems it introduced a big decrease in performance.; I suppose we should freeze/unfreeze periodically (every second or so) instead of doing it every time step. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2479:701,test,test,701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2479,2,['test'],['test']
Testability,"It seems msvc is quite (much!) less clever than gcc. 2 optimizations (only useful when not building in Release mode); - add and use a NOINIT RigidDeriv constructor (avoiding to init a deriv which is filled afterwards); - default ctor directly call the identity of its components (which is their default ctor by the way). and 1 ridiculous optimization; - avoid calling getPositionIntegrationFactor() in the nested loop; ; This optimization brings a whooping 30% speedup on my setup (VC2022, Release/LTO enabled); Test scene: 3instruments_collis.scn from BeamAdapter, 2000 iterations in batch mode; - before: 16.5669 s ( 120.723 FPS); - after: 12.829 s ( 155.897 FPS). GCC was doing the same by the way with or without these optims (and is faster than msvc, even in a VM 🤔). NOTE: do not forget to enable the LTO option for Windows when deploying, it brings full inlining & stuff and it is really useful for perf; (w/o LTO, before the optims it is 21.9883 s ( 90.9575 FPS) ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3135:512,Test,Test,512,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3135,3,"['Test', 'test']","['Test', 'test']"
Testability,"It seems that Color has been deprecated a long time ago (git blame shows 03/2017 for the message). And some stuff (ctor/dtor/set()) are even not defined in the cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4264:704,test,test,704,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4264,2,['test'],['test']
Testability,"It seems that there was an error in the code of the SparseLDLSolver in the assembling of the constraint matrix.; I tried to see the execution of this function in the scene InextensiblePendulum.scn and it produced a wrong result at the first step (with the current master branch).; After this fix, it starts with a coherent behaviour but then it still fails. By submitting this pull request, I acknowledge that; I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco). Reviewers will merge this pull-request only if. it builds with SUCCESS for all platforms on the CI.; it does not generate new warnings.; it does not generate new unit test failures.; it does not generate new scene test failures.; it does not break API compatibility.; it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3010:768,test,test,768,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3010,2,['test'],['test']
Testability,"It seems to come from some very old version of the STL from SGI (google is not very prolix on this); In any case, this is not defined by the STL of msvc, libc++ (llvm) and libstdc++ (gnu gcc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4251:732,test,test,732,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4251,2,['test'],['test']
Testability,"It started by removing the X versions of the constructor and the make_array functions (with X arguments); And afterwards, decided to come a bit closer to the std::array implementation. Mostly, using more std11-14-17 features (forwarding, fold expression, parameter pack, constexpr...) in fixed_array which is quite old (actually it seems that fixed_array comes from the time being a draft/proposal for the std::array class of the STL). In the future, it should be removed to use only std::array I think. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1985:1043,test,test,1043,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1985,2,['test'],['test']
Testability,"It started from the case where SparseGrid could not open .OBJ files (because it is upper case 🐶 ); Now SparseGrid relies on the FactoryMesh mechanism for its extension management. BUT MeshOBJ is super deprecated, and the legacy helper::io::MeshLoader (not the one in sofa::core::loader) should be not used anymore.; BUT SparseGrid does not really handle src=""@loader"" syntax very well now, and it will be upgraded in the future. . I added some tests anyway 💛 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1231:444,test,tests,444,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1231,3,['test'],"['test', 'tests']"
Testability,"It was agreed that runSofa is on its dying...but I see so much people that still use it so here is a set of patches to may make their live easier. I tried to spend as few time as possible so it is not super clean. . This PR contains: ; 1) Extend the live coding support. Before this PR only python script controller where concerned. Now any xml, pyscn and other is concerned when runSofa is started with the -i option. This is very usefull to make live demonstration, explaining scenes to an audiance or practice on small scene. It has no impact on user that don't start runSofa without -i. . 2) Currently Object that have messages in their logs exhibits small signs (green/yellow/red). This PR extends this behavior to the Node so it is more consistant and easy to locate the messages. . 3) Adds an openInEditor function in the pop menu in the scene graph to open the current scene in an external editor (It is nothing but I use that all the time in qtcreator and I wanted the same in sofa). Enjoy/. CHANGELOG for @hugtalbot & @guparan :; - [runSofa] ; - when using runSofa with the -i option adds live coding support for xml & pyscn scenes.; - adds icons (green, red, yellow) on nodes when their is message (before only the object have the icons). ; - in the scene graph pop-up menu adds an entry that open the current scene into an external editor. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/337:641,log,logs,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/337,3,"['log', 'test']","['logs', 'test']"
Testability,"It was already marked deprecated but only in the documentation (comment).; It must be deprecated because it duplicates the functionality of two other visitors. It is clearer to call the two other visitors. In GenericConstraintSolver, `buildSystem_matrixAssembly` is divided into `parallelBuildSystem_matrixAssembly` and `sequentialBuildSystem_matrixAssembly` depending on the value of `d_multithreading`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3393:944,test,test,944,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3393,2,['test'],['test']
Testability,"It was commented in CMakeLists.txt, so never compiled. * cylinder_TLEDTetraSolution.scn: must not be in SOFA examples because it contains CudaTetrahedronTLEDForceField. Deleted; * CudaTetrahedronTLEDForceField.scn: it mentioned meshes that are not in the repository. Therefore the content of cylinder_TLEDTetraSolution.scn has been taken instead. However, the simulation compared the TLED solution to a reference solution and they are not matching. The reference solution is removed. It may indicate a problem, or not... Note that there is no CPU version of this force field. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2865:1115,test,test,1115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2865,2,['test'],['test']
Testability,"It was deemed too bothersome to have a subdirectory for the types similar to the stl (aka ""stdtypes"").; This fact is already indicated with the lowercase classname (and filename) anyway. This PR just remove the subdirectory (and updates the corresponding namespaces and paths). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1946:817,test,test,817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1946,2,['test'],['test']
Testability,"It was initially defined in the same files than DistanceMapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3707:604,test,test,604,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3707,2,['test'],['test']
Testability,"It was not possible to compile runSofa without activating SofaGuiQt, because GuiDataRepository was instantiated in SofaGuiQt library.; As GuiDataRepository seems to be rather generic and not tied to Qt, GuiDataRepository has been moved to SofaGuiCommon ; and allows runSofa to be compiled without enabling SOFA_GUI_QT. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/599:570,test,test,570,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/599,2,['test'],['test']
Testability,"It was only used if a ""LocalStorage"" stack was provided but #4327 showed that it was not used actually.; (and #4328 showed it was used it in a wrong way). So this PR makes all the related stuff (nodedata member, readNodeData and writeNodeData) non-functional at all . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4350:807,test,test,807,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4350,2,['test'],['test']
Testability,"It was pointed by @EulalieCoevoet that the callbacks update are only called when the modified data is accessed for reading. This has a consequence in the UX, when a data field value is changed in the inspector, the callback is only executed when data is accessed... but not when we click on the ""update"" or ""ok"" button. . It was thus suggested to trigger the callback by accessing the component state.; All other change are just cleaning and refactoring of the function. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3713:1012,test,test,1012,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3713,2,['test'],['test']
Testability,"It was reported that include_guard(GLOBAL) is problematic with third-party plugins so let's go back to the ""normal"" version. Signed-off-by: Damien Marchal <damien.marchal@univ-lille1.fr>. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1467:439,test,test,439,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1467,2,['test'],['test']
Testability,"It would be better as unit test.. (when I have time), but until then, I put those scenes inside examples/benchmarks/TopologicalChanges. NB: some scenes are crashing. This reveals some component have been created with a copy past of the TopologyHandler but are not really handling topological changes. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2161:27,test,test,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2161,4,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,"It would be better to have gtest as an external lib... but in the meantime before such a PR arrive here is a gtest update to the latest official version (1.10). . It contains nice features to make abstract tests (to validate an abstract class properties on all its implementation). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1705:206,test,tests,206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1705,3,['test'],"['test', 'tests']"
Testability,It would be nice to have a test in SofaTest that validate that all the element in the scene ; are correctly computing their BBox. . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/412:27,test,test,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/412,1,['test'],['test']
Testability,"Just a PR to restore the SofaFramework folder for its modules (it was spread at the root of the project before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2061:652,test,test,652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2061,2,['test'],['test']
Testability,"Just a minor fix, as the `VecXTypes` are not visible without the explicit namespace. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1188:336,test,test,336,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1188,2,['test'],['test']
Testability,Just adding a small helper function I'm using in [PR #33](https://github.com/sofa-framework/SofaPython3/pull/33). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1436:365,test,test,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1436,2,['test'],['test']
Testability,Just backporting small changes made on our dev branch... Plz merge quickly :D. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1169:330,test,test,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1169,2,['test'],['test']
Testability,"Just call getValue once and use the const ref afterwards. This is particularly showing for the function getIndex() which is called a lot of times (really a lot). Release mode (full optim), MSVC and scene from Components/topology/RegularGridTopology.scn:; before: `5000 iterations done in 22.5747 s ( 221.487 FPS).`; after : `5000 iterations done in 20.7355 s ( 241.132 FPS).`; so 10% speedup. But the optimization is more effective the more complex the mesh is; (I changed the mesh in the previous scene with a liver with 500K triangles and the speed up was like around 30%). In any case, it shows that `getValue()` is not really ""free"" and must be called only once if the value is needed more than one time, especially in the ""hot"" functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3348:1283,test,test,1283,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3348,2,['test'],['test']
Testability,"Just changing launcher.py to use the library SofaPython3 instead of SofaPython. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2968:619,test,test,619,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2968,2,['test'],['test']
Testability,"Just curious to see any difference with this macro defined. FYI, I get the same perf for few scenes : caduceus, RungeKutta4 and EMBAR_CGLinearSolver.scn.; (SOFA_NO_VMULTIOP is also used for CGLinearSolver<GraphScattered>). Note: the CI is useless on this PR, as this macro as to be defined manually in CXX_FLAGS or added in sofa/config.h header); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4325:886,test,test,886,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4325,2,['test'],['test']
Testability,"Just for @fredroy :eyes:; .. We lack a ""pr: super fast merge"" :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4474:605,test,test,605,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4474,2,['test'],['test']
Testability,"Just happened to compile without the Compat option, and these 3 files were still using compat files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2574:640,test,test,640,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2574,2,['test'],['test']
Testability,Just not 100% sure for LCPcalc.h and OglModelPolicy.h ; Else we should get back to original warning number. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1421:359,test,test,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1421,2,['test'],['test']
Testability,Just removing unnecessary headers include inside header in sofa::core; No forward class or intelligent refactoring. any suggestion/remark is welcomed. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/638:404,test,test,404,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/638,2,['test'],['test']
Testability,"Just set all data defined by the loader as read-only since it makes no sense any user modifies them directly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1660:649,test,test,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1660,2,['test'],['test']
Testability,"Just some cleaning while debugging the gui. All code are under #ifdef never define. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4025:623,test,test,623,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4025,2,['test'],['test']
Testability,"Just to make things clean. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1835:566,test,test,566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1835,2,['test'],['test']
Testability,"Just to start identifying the first compilation errors on the CI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5056:605,test,test,605,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5056,2,['test'],['test']
Testability,"Just update the 3 examples for components: `WriteState`, `ReadState` and `CompareState` to be more useful. Here is the screenshot of CompareState.scn with in blue the simulated beam, in green the result of readState from a record of a heavier beam and in purple the drawing from `CompareState` showing distance between the simulated dof and the expected position from the state file. ![image](https://github.com/sofa-framework/sofa/assets/21199245/4164a242-4462-45fa-a366-e77ab11e0076). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4745:1026,test,test,1026,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4745,2,['test'],['test']
Testability,Just wanted to see how we could clean Quater. There is obviously a lot to do. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/842:331,test,test,331,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/842,2,['test'],['test']
Testability,Keep in mind and FIX tests that were disabled,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2296:21,test,tests,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2296,1,['test'],['tests']
Testability,LCPForceFeedback test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4671:17,test,test,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4671,1,['test'],['test']
Testability,"LCPSolver is a class performing LCP on a matrix (actually on a raw pointer, assuming you did allocate the memory beforehand), but the fact this is a class is irrelevant.; This is only used in proximity.cpp (in the repo), which used for some proximity detections. In the same way as other Matrix algo, I set this feature as a utility function in Mat_solve_LCP in Sofa.Type.; - use Sofa.Type types instead of pointer (less prone to error); - rewrote some preproc def into constexpr values.; - removed the print() function of the result, but you can just print the resulting type::matrix anyway. There are some comments in french but I did not bother translate them for now. There is a compat layer for this function in Sofa.Compat so this PR should not be breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2187:1303,test,test,1303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2187,2,['test'],['test']
Testability,"Last PR, moving finally all the code related to OBB and Capsule to SofaMiscCollision.; It should definitely cut some branches in the inclusion tree. Fix #1624 finally. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2168:707,test,test,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2168,2,['test'],['test']
Testability,"Last big one. #1527 . based on:; - #2790 . and needs :; - #2766 . Deprecates **_SofaBaseCollision_**, **_SofaMeshCollision_**, **_SofaGeneralMeshCollision_**, **_SofaObjectInteraction_**; Deprecates partially **_SofaConstraint_**, **_SofaUserInteraction_**. Split Collision-related components into 3 categories:; - ~~**Model**~~ **Geometry**: with all the collision models (sphere model, point model, triangle model....); - **Detection**: subdivided in 2 other categories: ; - **Algorithm**: narrow, broad phases implementation; - **Intersection**: how to compute intersections between models; - **Response**: subdivided in 2 other categories: ; - **Mapper**: how to map a contact between 2 objects (rigid, bary, etc); - **Contact**: how to handle a contact itself (create spring, constraint, etc). EDIT:; ~~[ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/239 ]~~. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2813:1422,test,test,1422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2813,2,['test'],['test']
Testability,Last but not least PR on SPH plugin to restore ParticleSink component.; - Move all code inside inl file; - Fix the extern template; - Add prefix d_ to data; - Fix global behavior; - Update the existing basic example scene ; - Add 2 others scenes using Topology changes and OglFluid rendering done in previous PR. ![ezgif com-crop](https://user-images.githubusercontent.com/21199245/67562701-8b063f00-f71f-11e9-9e0b-d72e2a0f347a.gif). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1195:685,test,test,685,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1195,2,['test'],['test']
Testability,"Last lifecycle before the release. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4760:576,test,test,576,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4760,2,['test'],['test']
Testability,"Last one in SofaGeneral !. A priori not breaking. Usual cleaning (namespaces, pragma),. Forgot the reference to the issue 😅 #1529 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1595:671,test,test,671,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1595,2,['test'],['test']
Testability,"Last soft dependencies (headers) in SofaCore:; - BaseContext just needs a forward declaration from Visitor (allowing removal of simulation/fwd.h); - ScriptEvent to use BaseNode from core instead of Node; - removing a large chunk of code in Pipeline (disabled with ```if 0``` since [a commit 14 (!) years ago](https://github.com/fredroy/sofa/commit/d29dc273dbf3c434a2de5434f39cfcee68ee8e24) whose goal was to do the same as this commit !); - some cleaning here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1928:1010,test,test,1010,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1928,2,['test'],['test']
Testability,"Last step to complete the task to unify the image importing process. Now that CImgPlugin is integrated, ImageBMP/ImagePNG and ImageQt can be removed from the trunk of Sofa. ; It lets all the responsibility of reading images to CImgPlugin (or any user custom plugin). (closes finally #9 and #51 ). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/424:548,test,test,548,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/424,2,['test'],['test']
Testability,Last uses of variable manually defined 3.14... ( for #799 ); Now uniformly using M_PI. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1264:338,test,test,338,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1264,2,['test'],['test']
Testability,"Launching any xml scene in Debug fire this assert multiples times:; ```; void DDGNode::addOutput(DDGNode* n); {; if(std::find(outputs.begin(), outputs.end(), n) != outputs.end()); {; assert(false && ""trying to add a DDGNode that is already in the output set."");; return;; }; ```. Here is the Call stack:; ```; 	SofaCore_d.dll!sofa::core::objectmodel::DDGNode::addOutput(sofa::core::objectmodel::DDGNode * n) Line 118	C++; >	SofaCore_d.dll!sofa::core::objectmodel::Base::addUpdateCallback(const std::basic_string<char,std::char_traits<char>,std::allocator<char> > & name, std::initializer_list<sofa::core::objectmodel::BaseData *> inputs, std::function<enum sofa::core::objectmodel::ComponentState __cdecl(sofa::core::DataTracker const &)> func, std::initializer_list<sofa::core::objectmodel::BaseData *> outputs) Line 119	C++; 	SofaCore_d.dll!sofa::core::objectmodel::Base::Base() Line 75	C++; ```. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1502:43,assert,assert,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1502,2,['assert'],['assert']
Testability,Let's fix them all !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/773:273,test,test,273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/773,2,['test'],['test']
Testability,"Let's make is sexier . Before: ; ![TetrahedronFEMForceField_00000000](https://github.com/user-attachments/assets/1a69a1f7-4799-4db0-8fe9-e6d4b4c4a7d8). After:; ![TetrahedronFEMForceField_00000001](https://github.com/user-attachments/assets/3b34d328-af75-41fa-8e26-c91fb8d309ce). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4922:818,test,test,818,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4922,2,['test'],['test']
Testability,"Let's not pollute the `plugins` directory of SOFA install with all the old modules like SofaBaseMechanics that are now collections.; I created a new `collections` directory for them, working the same way as `plugins`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3196:757,test,test,757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3196,2,['test'],['test']
Testability,"Let's start from the begining. . By default the msg_ api does not stores the messages because in some context of use it is not needed while in some other it is (in a non graphical sofa vs in a sofa GUI). . Thanks to the MessageHandler class it is easy to add custom message storage that fits the application's needs.; ; Currently the existing LoggingMessageHandler can be used to store in a single storage queue the messages. The queue can be queried to get the messages for whatever the application developer want to do with them (displaying them in GUI or showing a long history, ...). In serr/sout API a different scheme is used as the history is stored at the Base object level in a (size increasing) string. This behavior is now possible with the PerComponentLoggingMessageHandler.; This behavior is closer to the existing serr/sout but it also have several improved properties:; - the message are really stored (not just the 'text' description);; - no text concatenation (memory resize, memory copy) at each message, ; - the queue size of each component can be controlled with a data field as well as the message type to store or to ignore in the queue. ; - when the handler is not installed...there is not recording of the message...so there is a computation & memory zero cost. . NB: The d_msgLevel and d_logLevel in Base* are only there for discussion but they are currently unused now. . There PR also contains several new tests. . Checklist to be merge: ; - [x] succeed on each compilation setup on the CI.; - [x] does not generates new test failure. ; - [x] does not seems to break existing scenes. ; - [x] does not seems to break API compatibility. ; - [x] introduces new component with tests & documentation. ; - [ ] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106:343,Log,LoggingMessageHandler,343,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106,4,"['Log', 'test']","['LoggingMessageHandler', 'test', 'tests']"
Testability,"Let's try this small scene; ```xml; <?xml version=""1.0"" ?>; <Node name=""root"" >; <MergeVectors template=""tartempion"" name=""merge"" nbInputs=""2""/>; </Node>; ```; No error is triggered on the console, and obviously ""tartempion"" is not a valid template; However in debug, I can follow up to the line where a message is sent to object->serr in ObjectFactory.cpp around line 174; if (!usertemplatename.empty() && object->getTemplateName() != userresolved) {; object->serr << ""template <"" << usertemplatename << ""> incorrect, used <""; << object->getTemplateName() + "">"";; }. maybe s.t. related to logging not initialized in the object at that time ?. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/378:590,log,logging,590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/378,1,['log'],['logging']
Testability,"Libraries for debug configuration have suffix ""d"". For that reason release and; debug configurations must have different pragmas for linking libpng and zlib; under MSVS. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/297:421,test,test,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/297,2,['test'],['test']
Testability,"Libraries for debug configuration have suffix ""d"". For that reason release and; debug configurations must have different pragmas for linking libpng and zlib; under MSVS. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/298:421,test,test,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/298,2,['test'],['test']
Testability,LightManager test was failing on Windows.; Fixed using SofaTest API (inspired by SofaBaseCollision_test/Sphere_test).; Fixes #54,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/70:13,test,test,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/70,1,['test'],['test']
Testability,"Like the port salut, everything is in the title. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/764:302,test,test,302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/764,2,['test'],['test']
Testability,"Lines 97, 100 and 101 not compiling: https://github.com/sofa-framework/sofa/blob/cfda6846a2b3135ac88d6f7a0f363641a556cbf0/applications/plugins/Geomagic/src/Geomagic/GeomagicDriver.cpp#L97-L101. Errors not detected on the CI because inside #if GEOMAGIC_HAVE_OPENHAPTICS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2229:809,test,test,809,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2229,2,['test'],['test']
Testability,"Link with issue #2457. ~~The solution here is quite straight-forward (and a bit ugly IMO): encase 2d & 3d cases with `if constexpr (dimensions == X)`; Not ideal for the moment but hard to come by with the current design.~~ now the methods are not compiled if the dimension is wrong,; The merge of those two masses should this into account. (mentioned here #2452). Plus remove ""static_warning"" if the call was wrong and replace it with a real static_assert. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2514:996,test,test,996,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2514,2,['test'],['test']
Testability,"LocalMinDistance is printing a msg_warning when the lines are parallel.; This is a legitimate case that is properly handled in the rest of the code; so I and @EulalieCoevoet removed the message and document a bit the code while I was trying; to understand it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2976:799,test,test,799,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2976,2,['test'],['test']
Testability,"Located in ```examples/Components/mapping/DeformableOnRigidFrameMappingConstraints.scn```, the contact seems to be the reason of the crash, full log:. ```; ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::mapping::linear::BarycentricMapperMeshTopology<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double>, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::apply(sofa::type::vector<sofa::type::Vec<3u, double>, sofa::type::CPUMemoryManager<sofa::type::Vec<3u, double> > >&, sofa::type::vector<sofa::type::Vec<3u, double>, sofa::type::CPUMemoryManager<sofa::type::Vec<3u, double> > > const&); sofa::component::mapping::linear::BarycentricMapping<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double>, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::apply(sofa::core::MechanicalParams const*, sofa::core::objectmodel::Data<sofa::type::vector<sofa::type::Vec<3u, double>, sofa::type::CPUMemoryManager<sofa::type::Vec<3u, double> > > >&, sofa::core::objectmodel::Data<sofa::type::vector<sofa::type::Vec<3u, double>, sofa::type::CPUMemoryManager<sofa::type::Vec<3u, double> > > > const&); sofa::component::collision::response::mapper::BarycentricContactMapper<sofa::component::collision::geometry::LineCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::updateXfree(); sofa::component::collision::response::contact::FrictionContact<sofa::component::collision::geometry::LineCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3524:145,log,log,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3524,1,['log'],['log']
Testability,Log mutex locked twice (leading to crash),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3610:0,Log,Log,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3610,1,['Log'],['Log']
Testability,"Loop/>. <EulerImplicitSolver name=""odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <!-- A constant sparsity pattern is assumed, but the presence of PlaneForceField invalid this assumption; Indices checking is enabled in order to detect that the pattern is not constant.; As soon as the pattern is no longer constant, insertions in the matrix are ignored.; Since it happens for all forces from PlaneForceField, they can be considered semi-explicit.; -->; <ConstantSparsityPatternSystem template=""CompressedRowSparseMatrix"" name=""A"" printLog=""true"" checkIndices=""true""/>; <EigenSimplicialLDLT template=""CompressedRowSparseMatrix"" linearSystem=""@A""/>; <MechanicalObject name=""DoFs"" />; <UniformMass name=""mass"" totalMass=""320"" />; <RegularGridTopology name=""grid"" nx=""4"" ny=""4"" nz=""20"" xmin=""-9"" xmax=""-6"" ymin=""0"" ymax=""3"" zmin=""0"" zmax=""19"" />; <BoxROI name=""box"" box=""-10 -1 -0.0001 -5 4 0.0001""/>; <FixedProjectiveConstraint indices=""@box.indices"" />; <HexahedronFEMForceField name=""FEM"" youngModulus=""4000"" poissonRatio=""0.3"" method=""large"" />; <PlaneForceField name=""planeForce"" stiffness=""1000"" damping=""20"" normal=""0 1 0"" d=""-3"" showPlane=""true""/>. </Node>; ```. Note that a lot of changes was about fixing the index checking in ConstantSparsityPatternSystem. It was never implemented. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4428:3919,test,test,3919,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428,2,['test'],['test']
Testability,"MSVC got recently a flag ""/fpermissive-"" to have a strict conformance with C++ standard (and is enabled by default if c++20 is specified). -> https://docs.microsoft.com/en-us/cpp/build/reference/permissive-standards-conformance?view=msvc-170. It would force the code made with msvc to be more similar to the one made with gcc/clang. By curiosity, I tried to enable it on SOFA master and got some errors:; - some initData not recognized (and the SOFA_CLASS and its `using Base::initData` does not work ??); - a fwd declaration of a Link was not possible anymore (because Node is not known at that time); - lastly a symbol was made twice, due to both the specialization in cpp, and the {} in the header file. To discuss:; - should we add an option to make the compilation with MSVC on strict conformance (add the flag ""/fpermissive-"" to CXX_FLAGS); - should we even make it by default ? (this could be quite breaking). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3290:1456,test,test,1456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3290,2,['test'],['test']
Testability,M_MapMapSparseMatrix_addCol/1024/512 3.54 ms 3.53 ms 195; BM_MapMapSparseMatrix_addCol/2048/512 7.01 ms 7.11 ms 112; BM_MapMapSparseMatrix_addCol/4096/512 14.1 ms 14.1 ms 50; BM_MapMapSparseMatrix_addCol/512/1024 5.74 ms 5.72 ms 112; BM_MapMapSparseMatrix_addCol/1024/1024 11.8 ms 11.7 ms 56; BM_MapMapSparseMatrix_addCol/2048/1024 23.4 ms 23.4 ms 30; BM_MapMapSparseMatrix_addCol/4096/1024 46.1 ms 46.9 ms 14; BM_MapMapSparseMatrix_addCol/512/2048 23.5 ms 23.4 ms 28; BM_MapMapSparseMatrix_addCol/1024/2048 46.2 ms 45.8 ms 15; BM_MapMapSparseMatrix_addCol/2048/2048 92.6 ms 93.8 ms 9; BM_MapMapSparseMatrix_addCol/4096/2048 187 ms 188 ms 4; BM_MapMapSparseMatrix_addCol/512/4096 59.8 ms 59.7 ms 11; BM_MapMapSparseMatrix_addCol/1024/4096 119 ms 120 ms 6; BM_MapMapSparseMatrix_addCol/2048/4096 238 ms 240 ms 3; BM_MapMapSparseMatrix_addCol/4096/4096 480 ms 477 ms 2; ```. After:. ```; ---------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ---------------------------------------------------------------------------------; BM_MapMapSparseMatrix_writeLine/512 1.48 us 1.46 us 448000; BM_MapMapSparseMatrix_writeLine/1024 2.95 us 2.95 us 248889; BM_MapMapSparseMatrix_writeLine/2048 6.29 us 6.28 us 112000; BM_MapMapSparseMatrix_writeLine/4096 12.0 us 12.0 us 64000; BM_MapMapSparseMatrix_addCol/512/512 1.08 ms 1.07 ms 640; BM_MapMapSparseMatrix_addCol/1024/512 2.26 ms 2.26 ms 373; BM_MapMapSparseMatrix_addCol/2048/512 3.45 ms 3.45 ms 195; BM_MapMapSparseMatrix_addCol/4096/512 6.93 ms 6.94 ms 90; BM_MapMapSparseMatrix_addCol/512/1024 1.68 ms 1.71 ms 448; BM_MapMapSparseMatrix_addCol/1024/1024 3.43 ms 3.37 ms 213; BM_MapMapSparseMatrix_addCol/2048/1024 6.65 ms 6.70 ms 112; BM_MapMapSparseMatrix_addCol/4096/1024 13.2 ms 13.1 ms 50; BM_MapMapSparseMatrix_addCol/512/2048 3.36 ms 3.37 ms 218; BM_MapMapSparseMatrix_addCol/1024/2048 6.44 ms 6.60 ms 90; BM_MapMapSparseMatrix_addCol/2048/2048 13.5 ms 13.4 ms 50; BM_MapMapSparseMatrix_addCo,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2641:1816,Benchmark,Benchmark,1816,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2641,1,['Benchmark'],['Benchmark']
Testability,MacOS crashes in batch mode were due to FrameBufferObject constructor calls during simulation construction.; Fixed by moving those constructor calls to `initVisual()` using `std::unique_ptr`. WARNING: I changed VisualManagerPass::getFBO(). [See here](https://github.com/sofa-framework/sofa/commit/e910ec1e91e667ce213caeece639120598881940#diff-74e00cdcc25741750d2ed4f6b53398a7R93). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/646:632,test,test,632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/646,2,['test'],['test']
Testability,"Macro sofa_install_git_infos will install a file `git-infos.txt` in all modules that contain a `.git` in their sources.; This will help to keep track of versions within SOFA binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2309:723,test,test,723,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2309,2,['test'],['test']
Testability,"Magic numbers (200 and 50) were introduced when centering the window. This is to anticipate the change of viewer resolution that happens later. Instead, I suggest to remove the magic numbers to keep a nice regular formula of centering, and call the center function just after the viewer has been resized. This is compatible with #2416 without changing another value. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2466:906,test,test,906,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2466,2,['test'],['test']
Testability,"Mainly add error messages when calling currentGUI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4967:590,test,test,590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4967,2,['test'],['test']
Testability,"Mainly for:; - MechanicalObject::position; - SparseGridRamificationTopology::hexahedra; - SparseGridRamificationTopology::position. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3356:671,test,test,671,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356,2,['test'],['test']
Testability,"Mainly remove unused functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2194:571,test,test,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2194,2,['test'],['test']
Testability,"Make `RGBAColor` constexpr and turn all `RGBAColor` to constexpr when it's possible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2630:624,test,test,624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2630,2,['test'],['test']
Testability,"Make problemId counter id atomic for thread-safety. An other (better) solution could be to use local thread storage maybe ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4581:664,test,test,664,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4581,2,['test'],['test']
Testability,"Make sure the API `isComponentValid` is used instead of direct access to the data `d_componentState`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4921:641,test,test,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4921,2,['test'],['test']
Testability,"Makes more sense. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4837:557,test,test,557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4837,2,['test'],['test']
Testability,Many scenes were still using the deprecated: Rigid template/; Now use Rigid3d. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1295:330,test,test,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1295,2,['test'],['test']
Testability,"Master is failing on a missing header for std::swap_ranges (which is in `<algorithm>` ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2006:628,test,test,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2006,2,['test'],['test']
Testability,"Matrix assembly can be accelerated if CRS matrices are defined using blocks of 3x3.; This PR makes LU solver compatible with 3x3 blocks. Benchmark https://github.com/alxbilger/SofaBenchmark/pull/22:. Before. ```; ---------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; ---------------------------------------------------------------------------------------------------; BM_SparseLUSolver/50/iterations:10 368 ms 370 ms 10 FPS=135.021/s MBKBuild=1.82966m MBKSolve=5.34694m frame=7.40625ms; ```. After. ```; ---------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; ---------------------------------------------------------------------------------------------------; BM_SparseLUSolver/50/iterations:10 371 ms 367 ms 10 FPS=136.17/s MBKBuild=1.81682m MBKSolve=5.41681m frame=7.34375ms; BM_SparseLUSolverMat3x3/50/iterations:10 308 ms 311 ms 10 FPS=160.804/s MBKBuild=529.916u MBKSolve=5.4368m frame=6.21875ms; ```. We can observe that the time stays the same for `CompressedRowSparseMatrixd` (no performance loss), and it is faster (MBKBuild timer) for `CompressedRowSparseMatrixd`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2862:137,Benchmark,Benchmark,137,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2862,5,"['Benchmark', 'test']","['Benchmark', 'test']"
Testability,"Maybe breaking, if someone, somewhere, somehow stored `ComponentInfo::SPtr` or `FileInfo::SPtr` in its components using directly `boost::shared_ptr<T>`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1901:692,test,test,692,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1901,2,['test'],['test']
Testability,"MeshTetraStuffing was the only component in SofaMiscExtra, and was simply a BaseObject.; This PR converts it as an engine (which it was already by its behavior) and move it in S.C.Engine.Generate.; \+ compat. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2917:748,test,test,748,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2917,2,['test'],['test']
Testability,MeshTopology doesn't load the topology from the mesh loader implicitely anymore. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1273:332,test,test,332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1273,2,['test'],['test']
Testability,"Message before was:; ```[INFO]    [TopologyHandler] Topology: lines is not dynamic, topology engine on Data 'indices' won't be registered.```. Now looks like:; ```[INFO]    [TopologyHandler] The TopologyDataHandler( FixedConstraint ) managing the TopologyData 'indices' won't be registered because linked topology 'lines' is not dynamic. Topological changes won't be supported by this Data.```. Also this message only pop up if component owner is not muted (printLog == true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3142:1016,test,test,1016,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3142,2,['test'],['test']
Testability,"Message before:; ```; CMake Warning at C:/projects/sofa-src/Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:454 (message):; Deprecated macro. Use 'sofa_add_subdirectory(plugin ...)' instead.; Call Stack (most recent call first):; C:/projects/sofa_plugins/CMakeLists.txt:19 (sofa_add_plugin); ```. Message after:; ```; CMake Warning at C:/projects/sofa-src/Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:454 (message):; Deprecated macro 'sofa_add_plugin'. Use 'sofa_add_subdirectory(plugin caribou caribou)' instead.; Call Stack (most recent call first):; C:/projects/sofa_plugins/CMakeLists.txt:19 (sofa_add_plugin); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3611:1174,test,test,1174,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3611,2,['test'],['test']
Testability,"Message refers AsyncMatrixLinearSolver, but it's MatrixLinearSolver. And specifying the class name is not necessary with the msg_* API. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2781:675,test,test,675,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2781,2,['test'],['test']
Testability,"Message was always saying that Sofa.GL was not found as the find_package() was done later; Set a STATUS/WARNING level in the same time. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3549:675,test,test,675,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3549,2,['test'],['test']
Testability,"Method LoadFromMemory to load an XML as a string is taking a parameter size which is unused and generate conversion warnings in tests. - Add method depreciation; - Update all tests compiled in my setup. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3376:128,test,tests,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3376,4,['test'],"['test', 'tests']"
Testability,Method doCarve in CarcingManager should be called at AnimateEndEvent and not at CollisionEndEvent to avoid any topology synchronization error during step. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1532:406,test,test,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1532,2,['test'],['test']
Testability,"Method initTopology was not called if the topology is empty at start. For example if we start with a cloud of points. . And initTopology methods are chained called to initialize topology from lower level. For example Tetrahedron initTopology will call triangle version, then edge and finally pointTpology. Each initTopology is used to initialize buffers and cross buffer only if the topology is not empty. Therefore in this special case the number of points was not well init for an empty topology. This fix #3211 . [ci-depends-on https://github.com/sofa-framework/Regression/pull/34]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3216:1125,test,test,1125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216,2,['test'],['test']
Testability,"Method isQuadDeulaunayOriented was only handling some specific case. Use directly the computation of angles to check flipping Delaunay condition to triangulate a quad see [wikipedia page](https://en.wikipedia.org/wiki/Delaunay_triangulation#Visual_Delaunay_definition:_Flipping) . And in fact the method was not working well but the method splitAlongPath used for triangular incision was calling it with wrong quad structure. ; Luckily in this case we had error*error = good behavior... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4494:1028,test,test,1028,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4494,2,['test'],['test']
Testability,"Metis and CSparse are always required by SofaSparseSolver, no need have their find_package in if blocks. Thanks @AlbanOdot for spotting the issue :beers: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1437:407,test,test,407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1437,2,['test'],['test']
Testability,"Metis is an external library producing a few hundreds of compilation warnings (https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3459/FullBuildWarnings-MSBuild/). ![image](https://user-images.githubusercontent.com/10572752/163556296-5c153462-6e47-4e57-94c0-d06a36c6d299.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2874:887,test,test,887,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2874,2,['test'],['test']
Testability,"Metis is installed only in the folder of the first plugin fetching it. Making the other one fail to find it. Moving it into the main folder with CMake is not really meaningful. The plugin should not fix something that is at higher level in the CMake hierarchy as itself (aka, fix install issue when another target depends on one of its dependency)... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4767:892,test,test,892,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4767,2,['test'],['test']
Testability,Minor PR fixing some warnings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/739:282,test,test,282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/739,2,['test'],['test']
Testability,"Minor PR just allowing the messages (msg_info) of **VTKExporter** of being indeed outputed; To do this, I just activated the _printLog_ flag for msg_info. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/553:406,test,test,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/553,2,['test'],['test']
Testability,Minor changes in RestShapeSpringsForceField. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1431:296,test,test,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1431,2,['test'],['test']
Testability,"Minor cleaning. No change of behavior is expected. - Static member is accessed through an instance; - Unused using; - Duplicated branch content; - Rename local variable; - const; - comments; - No need to deal with a pointer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1899:764,test,test,764,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1899,2,['test'],['test']
Testability,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1926:1086,test,test,1086,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1926,4,['test'],['test']
Testability,"Minor commit to improve messaging when image cannot be loaded.; Before : no error, no message, no hints for available extensions to use. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/503:388,test,test,388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/503,2,['test'],['test']
Testability,"Minor fix of a line causing a double call to the keyPressEvent function. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1850:612,test,test,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1850,2,['test'],['test']
Testability,"Minor refactoring to simplify the reading (it avoids the call to many `for` loops), and to match https://github.com/sofa-framework/sofa/pull/3981. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3983:686,test,test,686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3983,2,['test'],['test']
Testability,Minor warning fixes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1388:272,test,test,272,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1388,2,['test'],['test']
Testability,"Missing minus signs. Introduced in #2777.; Problem identified thanks to #4010. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4012:618,test,test,618,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4012,2,['test'],['test']
Testability,Modify the mapper in tetra barycentric mapping in order to listen for topological changes and only compute the added points. Previously the behaviour was to call reinit and recompute all the barycentric coordinates for the entire mesh at each topological modification. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1203:520,test,test,520,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1203,2,['test'],['test']
Testability,Module are systematically compiled which have a sensible impact to Sofa. ; I'm moving that into plugin to allow dev to conditionnally activate/deactivate the plugin they ; don't need. In this PR I'm moving SofaMiscCollision & SofaSphFluid. ; I made the two because there is a dependency between them. ; There should be no big problem with this PR. ; But in the main CMakeList.txt I change the order of subdirectories so that plugins are before scenecreator. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/407:711,test,test,711,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/407,2,['test'],['test']
Testability,"Modules for pluginization contain a dot (Sofa.GL, Sofa.Types, etc),; and custom macro (sofa_create_package_with_targets) generates preprocessor definitions according to the name.; So with the new modules name, the macro creates a preprocessor definition with a dot '.' , but this is not permitted by the C preprocessor. So this PR replaces a '.' with a '_' for the generated definitions.; Fix #1695 (and seems to remove a warning generated by clang). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1701:990,test,test,990,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1701,2,['test'],['test']
Testability,"More or less trial-and-error works to make the SofaPython3 plugin compilable out-of-tree (and obviously others one too). Various stuff:; - out-of-date cmake vars; - need to reference old modules in the cmake.in (i dont really understand this issue); - remove completely SofaSimulationCore (was supposed to be deleted for v21.12) and add an error if used. I dont know if it is useful though. There were some f*ckey with the project/module called Sofa.SimulationCore but the folder SofaSimulationCore in any case. I put fast-merge because this is quite urging but some cmake-specialized eyes are needed 👀 . By the way, with this branch, I can compile SofaPython3 out-of-tree on Windows/MSCV2022. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3031:1233,test,test,1233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3031,2,['test'],['test']
Testability,"More post-NG cleaning.; Follows #2958. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2980:578,test,test,578,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2980,2,['test'],['test']
Testability,"Most likely a typo, as using ref to shared_ptr is weird. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3620:596,test,test,596,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3620,2,['test'],['test']
Testability,"Most technical PR EVER. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2547:563,test,test,563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2547,2,['test'],['test']
Testability,"Mostly because it bothered me when i was doing `git status`... But also because it does not really make sense that a file is created in the source directory. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2537:697,test,test,697,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2537,2,['test'],['test']
Testability,"Mostly cleaning of the GUI `HeadlessRecorder`, but it also adds support for background color. In the future, I suggest to move `GLBackend` out of the qt namespace/folder, so it can be used in `HeadlessRecorder`. A lot of code can be shared between both, and `GLBackend` is not dependant on Qt. I'll create an issue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2058:855,test,test,855,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2058,2,['test'],['test']
Testability,"Mostly in MeshSTEP plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4067:566,test,test,566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4067,2,['test'],['test']
Testability,"Move CGALPlugin and its history to its own repository : https://github.com/sofa-framework/CGALPlugin. CI is not building CGALPlugin by the way. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2500:700,test,test,700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2500,2,['test'],['test']
Testability,"Move FEM. Follows. - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. ![image](https://user-images.githubusercontent.com/10572752/219430901-2dfd90df-c077-4570-bb7a-6103cc148e47.png). I did not touch TLED files to avoid conflicts with another PR. They will be moved later.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3660:865,test,test,865,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3660,2,['test'],['test']
Testability,"Move Flexible code (and its history) to its own repository : https://github.com/sofa-framework/Flexible; And the same with Compliant: https://github.com/sofa-framework/Compliant. CI has been updated so it should fetch and enable those two plugins. EDIT: adding one more repo, RigidScale, as it is 100% depending on those two plugins. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1873:890,test,test,890,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873,2,['test'],['test']
Testability,"Move ManifoldTopologies and its history to its own repository : https://github.com/sofa-framework/ManifoldTopologies . the configure script on the CI has already been updated. It has its own CI too (and releases). (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2623:770,test,test,770,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2623,2,['test'],['test']
Testability,"Move Material.h and PrimitiveGroup from SofaCore to SofaHelper. ; This move was needed as it was causing a backward dependency (ie. SofaHelper depending on SofaCore) ; I also removed the SofaDefaultType/Vector3Types... which was flagged for deprecation after 2018 :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1686:807,test,test,807,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1686,2,['test'],['test']
Testability,"Move OpenCTMPlugin and its history to its own repository : https://github.com/sofa-framework/OpenCTMPlugin . Not compiled by the CI, and was even not present in the CMakelists of the plugins directory by the way. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2564:769,test,test,769,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2564,2,['test'],['test']
Testability,"Move OptitrackNatNet and its history to its own repository : https://github.com/sofa-framework/OptitrackNatNet. the configure script on the CI has already been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2548:725,test,test,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2548,2,['test'],['test']
Testability,"Move PluginExample and its history to its own repository : https://github.com/sofa-framework/PluginExample (with brand-new github actions 😎). the configure script on the CI has already been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2519:755,test,test,755,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2519,2,['test'],['test']
Testability,"Move Registration and its history to its own repository : https://github.com/sofa-framework/Registration. the configure script on the CI has already been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2552:719,test,test,719,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2552,2,['test'],['test']
Testability,"Move SofaCUDA and its history to its own repository : https://github.com/sofa-framework/SofaCUDA. CI is building SofaCUDA on Windows so the configure script has been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2502:731,test,test,731,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2502,2,['test'],['test']
Testability,"Move SofaPython code (using Python2) and its history to its own repository : https://github.com/sofa-framework/SofaPython. CI has been updated so it should fetch and enable SofaPython. (#1527 , #1442). TODO: convert MechanicalMatrixMapper.pyscn to a standard XML scene (in examples folder); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2224:830,test,test,830,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2224,2,['test'],['test']
Testability,"Move THMPGSpatialHashing and its history to its own repository : https://github.com/sofa-framework/THMPGSpatialHashing . the configure script on the CI has already been updated. It has its own CI too (and releaases). (#1527 , #1442). It just introduces one new component, THMPGSpatialHashing which is a colllision pipeline (i.e implements broad and narrow phases detection). ; After some tests it is slower than the standard bvh one, so it does not seem really important to maintain IMO. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2609:388,test,tests,388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2609,3,['test'],"['test', 'tests']"
Testability,Move TaskScheduler files from Multithreading plugin to Sofa Kernel. This change allows any plugins to use the TaskScheduler without adding the dependency on the MultiThreading plugin. The MultiThreading plugin will be a collection of components using the TaskScheduler to parallelize some computation. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/805:555,test,test,555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/805,2,['test'],['test']
Testability,"Move a few more components. Follows. - https://github.com/sofa-framework/sofa/pull/3760; - https://github.com/sofa-framework/sofa/pull/3758; - https://github.com/sofa-framework/sofa/pull/3701; - https://github.com/sofa-framework/sofa/pull/3660; - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3785:888,test,test,888,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3785,2,['test'],['test']
Testability,"Move collision components. Follows. - https://github.com/sofa-framework/sofa/pull/3758; - https://github.com/sofa-framework/sofa/pull/3701; - https://github.com/sofa-framework/sofa/pull/3660; - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3760:835,test,test,835,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3760,2,['test'],['test']
Testability,"Move components with only a cpp file. They don't need a compatibility layer. Follows. - https://github.com/sofa-framework/sofa/pull/3701; - https://github.com/sofa-framework/sofa/pull/3660; - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. ![image](https://user-images.githubusercontent.com/10572752/228577598-3ded4d63-eeed-4082-b5ee-716365c27988.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3758:946,test,test,946,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3758,2,['test'],['test']
Testability,"Move of CImgData was not done in CGAL plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2345:585,test,test,585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2345,2,['test'],['test']
Testability,"Move projective constraints. Follows. - https://github.com/sofa-framework/sofa/pull/3660; - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. ![image](https://user-images.githubusercontent.com/10572752/222710672-f34d0aba-75d4-4476-aad4-396543e08b54.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3701:846,test,test,846,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3701,2,['test'],['test']
Testability,"Move some force fields and MechanicalObject. Follows. - https://github.com/sofa-framework/sofa/pull/3785; - https://github.com/sofa-framework/sofa/pull/3760; - https://github.com/sofa-framework/sofa/pull/3758; - https://github.com/sofa-framework/sofa/pull/3701; - https://github.com/sofa-framework/sofa/pull/3660; - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. The last components are the TLED force fields. But they don't have a CPU equivalent. I suggest to move them into `solidmechanics/fem/elastic`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3795:1100,test,test,1100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3795,2,['test'],['test']
Testability,"Move some forward declaration in sofa/core/fwd.h; Use pragma once & one line namespace. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3303:629,test,test,629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3303,2,['test'],['test']
Testability,"Move there: https://github.com/sofa-framework/MeshSTEPLoader. Part of ; - https://github.com/sofa-framework/sofa/issues/1442. Need OpenCascade SDK, which needs an account to download 👺. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4504:725,test,test,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4504,2,['test'],['test']
Testability,Moved function definitions from .h to .inl. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/907:295,test,test,295,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/907,2,['test'],['test']
Testability,"Moved in https://github.com/sofa-framework/SofaValidation/pull/1. ![](https://i.giphy.com/media/v1.Y2lkPTc5MGI3NjExODV4ZTN0czYwbm02bXAycDYyc3lnY2x6MXE3MDA5NWZqYmd5ZDJ6ZiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/AhAysobj49aqQ/giphy.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4985:775,test,test,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4985,2,['test'],['test']
Testability,"Multiple errors with the out-of-tree process for SOFA, especially after the Sofa.Config merge.; This PR should fix this, plus some issues with Sofa.GL being a relocatable ""plugin"" 🤔. Tested with SofaPython3 out-of-tree. (no CI test for that yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1863:183,Test,Tested,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1863,4,"['Test', 'test']","['Tested', 'test']"
Testability,Multiple users complained about errors that actually are not errors. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/607:320,test,test,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/607,2,['test'],['test']
Testability,Multithread Unit test falling,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4323:17,test,test,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4323,1,['test'],['test']
Testability,"Multithread/image: *Config.cmake.in were still using deprecated packages; Sofacuda: add dep (missing from a deprecated package). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3209:668,test,test,668,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3209,2,['test'],['test']
Testability,"My IDE found that some variables could be made `constexpr`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2472:599,test,test,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2472,2,['test'],['test']
Testability,"My October fix-warning contribution :sweat_smile: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4238:591,test,test,591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4238,2,['test'],['test']
Testability,My biggest contrib' so far!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1475:280,test,test,280,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1475,2,['test'],['test']
Testability,My most important PR so-far. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1519:280,test,test,280,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1519,2,['test'],['test']
Testability,"NOTE: the **template=""NewMat""** for both CGLinearSolver CholeskyLinearSolver will now NEED the package SofaDenseSolver. #1298 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1299:379,test,test,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1299,2,['test'],['test']
Testability,Name / link change : ; - from https://github.com/sofa-framework/plugin.HighOrder; - to https://github.com/sofa-framework/SofaHighOrder. More info: https://github.com/sofa-framework/plugin.HighOrder/issues/5. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1430:459,test,test,459,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1430,2,['test'],['test']
Testability,"Namely BoxROI, SphereROI and MeshROI, sharing a common codebase (BaseROI). Massive refactoring. Lots of similar data, features, code across these components, lots of inconsistencies as well; - some filters quads, hexas, some not;; - some are doing the inverse selection, some not,; - some implements strict mode (aka the whole element is inside in the ROI, contrary to the normal mode where it is the center which is tested). Draw functions were copy-pasted ; lots of copy instead of reference as well.; The init procedure was very similar as well (if no one gives me X, I will search for mechanicalOjbect or a meshloader); Some classes use singular (quadIndices) some plural (quadsIndices)... ---; So this PR does gather everything with a common base with all the features (draw, strict mode, all the element types) and try to be quite generic.; Code could be even more generic and it could be very easy to add a new element type but it is not done for the moment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4839:417,test,tested,417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4839,3,['test'],"['test', 'tested']"
Testability,"Namespace was wrong. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2923:560,test,test,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2923,2,['test'],['test']
Testability,"Naming components was not consistent:. - XML used a 'load-time' helper to name the components: the class name of the component + a counter for a unique name; - Python used the class name only; - C++ instantiations: either the class name or a hard-coded value. This is now unified using the singleton `sofa::core::NameHelper`. It applies the XML method: the class name + a counter. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/228]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631:992,test,test,992,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631,2,['test'],['test']
Testability,"Necessary for compiling SofaPython3 out-of-tree (error with Gui bindings). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1892:614,test,test,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1892,2,['test'],['test']
Testability,"Necessitate to update the CI: see https://github.com/sofa-framework/ci/pull/19. [ci-depends-on https://github.com/SofaDefrost/STLIB/pull/106]; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/354]; [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/222]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882:822,test,test,822,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882,2,['test'],['test']
Testability,"Need deeper investigation to remove handleState visitor. SOFA is not ready for that!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2867:625,test,test,625,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2867,2,['test'],['test']
Testability,"Needed for binaries dependency management. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1720:582,test,test,582,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1720,2,['test'],['test']
Testability,"Needed for https://github.com/sofa-framework/BeamAdapter/pull/115. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4247:606,test,test,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4247,2,['test'],['test']
Testability,"Needed for the good compilation of SofaPython3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1760:587,test,test,587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1760,2,['test'],['test']
Testability,"Needed to build Flexible out-of-tree (yes, I tried to do that).; Surely needed to build other plugins too. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2444:646,test,test,646,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2444,2,['test'],['test']
Testability,"Needed to create a clean and functional v21.06 branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2226:594,test,test,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2226,2,['test'],['test']
Testability,"Needs #1408 ; OglModel recomputes its internal data on topology change. There's 2 things I need review for here:; 1. which initialization methods should be called to properly update an OglModel? Currently, I'm calling more or less the whole thing: delete buffers, then init / reinit / initVisual & updateBuffers. Not sure all of them are necessary; 2. Which datafields should be taken into consideration for a total reinit:; Ideally I'd like to trigger the full update of the OglModel only when a change in the loader triggers the recomputation: positions can vary during simulation and shouldn't trigger a reload of the component.; Edges / triangles & other topological info change when the loader changes geometry, but could also change during a topological change for instance, and in that 2nd case shouldn't trigger a reload from the loader, whose topology isn't up-to-date anymore. This component needs heavy restructuring I believe if we want to handle proper data update using callbacks, and might be a good example for other components if we do it right. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1423:1314,test,test,1314,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1423,2,['test'],['test']
Testability,"Needs https://github.com/sofa-framework/sofa/pull/4917 to make all tests pass successfully. In the spirit of #3900 and following #3924, this PR applies the change on the MeshMatrixMass. To be noted:; - the `componentState` must be added to trigger the callback (done in `addMDx()`, `addMToMatrix`, `accFromF` and `buildMassMatrix`); - this PR does not solve the problem of circular dependency referred in #2173. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3928:67,test,tests,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928,3,['test'],"['test', 'tests']"
Testability,"New action checking if a label is at least 7 days old OR if the label `pr: fast merge` is set. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4386:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4386,2,['test'],['test']
Testability,"New action implemented here: https://github.com/hugtalbot/close-old-discussion-topics; We use this action in this new script. Note the action is not yet active and only creates logs. Close and replace #4096 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4250:177,log,logs,177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4250,3,"['log', 'test']","['logs', 'test']"
Testability,"New batch of tests from DEFROST team. This branch only contains new tests, no new feature.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/97:13,test,tests,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/97,2,['test'],['tests']
Testability,"New methods:; - Edge: method ```pointBaryCoefs``` which, given a point, will return the 2 barycoefs of the edge describing the relative position.; - Edge: method ```intersectionWithPlane```, given and edge and a plan position + normal, return if there is an intersection and at which point.; - Triangle: method ```normal``` to compute the normal of the triangle. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2587:902,test,test,902,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2587,2,['test'],['test']
Testability,"Nice and easy. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2898:554,test,test,554,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2898,2,['test'],['test']
Testability,"No change of code. Just applying guidelines for a clean code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3476:601,test,test,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3476,2,['test'],['test']
Testability,No idea if this header is really needed with OCC < 7.4. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1310:307,test,test,307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1310,2,['test'],['test']
Testability,"No information is given when the initExternalModule entry point is called.; For 99.999% of the plugins, there is nothing special in it but some (SofaPython3, I am looking at you) is doing a lot of ""failable"" things when it is called.; This PR is a potential solution to this problem, by adding a (optional) entry point to check if the plugin reports by itself that it was loaded successfully. This allows SOFA to not crash if a problem arises in SofaPython3 when calling PythonEnvironment::Init() . It is not really necessary for the ""ci depends on"" as the two PR can compile without needing the other one; but it makes sense to merge them in the same time I think. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/210]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2425:1277,test,test,1277,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2425,2,['test'],['test']
Testability,"No more yellow background using this mapping :love_letter: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4881:600,test,test,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4881,2,['test'],['test']
Testability,"No need for SofaBaseLinearSolver if SofaCore is available. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2768:598,test,test,598,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2768,2,['test'],['test']
Testability,"No need for more than 1 iteration to test an export. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2328:37,test,test,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2328,3,['test'],['test']
Testability,No support of thread local vars in mac_Clang 3.5 compiler.; This looks like a mac_Clang 3.5 compiler limitation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/727:364,test,test,364,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/727,2,['test'],['test']
Testability,No tests is existing on MeshSTLLoader it should be added!,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2899:3,test,tests,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2899,1,['test'],['tests']
Testability,"None of these scenes are meaningful, they are deprecated and worse : they bother my dear #3927; Some .xs3 file is given as input for the UniformMass which does not support it.. :broom: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5035:726,test,test,726,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5035,2,['test'],['test']
Testability,"Not needed anymore as SofaPython has been discontinued. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2533:595,test,test,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2533,2,['test'],['test']
Testability,"Not possible to compile because I don't have opencascade, only rely on visual intellisense.... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/705:346,test,test,346,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/705,2,['test'],['test']
Testability,"Not significant, but towards a clean CI :). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1206:295,test,test,295,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1206,2,['test'],['test']
Testability,"Note that `Point` does not pass the test. The introduced tests don't pass on non-Windows OS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4732:36,test,test,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4732,4,['test'],"['test', 'tests']"
Testability,"Note that it confused Rider. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3140:568,test,test,568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3140,2,['test'],['test']
Testability,"Nothing else to say :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1638:563,test,test,563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1638,2,['test'],['test']
Testability,"Nothing important, just switch char* with std::string in the component BaseObjectDescription. @damienmarchal @guparan . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/980:371,test,test,371,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/980,2,['test'],['test']
Testability,Noticed those files hanging around after the merge of #834. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/851:311,test,test,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/851,2,['test'],['test']
Testability,Now 255 is merged I can write the CHANGELOG for @hugtalbot (thank for the reminder:)). CHANGELOG: ; Batch replacement of std::cout with msg_info or dmsg_info and some delete of commented lines in the following module:; [SofaBaseMechanic]; [SofaBaseTopology]; [SofaBoundaryCondition]; [SceneCreator] ; [SofaGeneralSimpleFEM]; [SofaConstraint]; [SofaGeneralVisual]; [SofaMisc]; [SofaMiscCollision]; [SofaMiscEngine]; [SofaMiscFEM]; [SofaMiscMapping]; [SofaMiscTopology]; [SofaOpenGLVisual] ; [SofaPrecontionner]; [SofaSparseSolver]; [SofaVolumetricData]; ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/261:780,test,test,780,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/261,1,['test'],['test']
Testability,"Now available here :arrow_right: [SofaDistanceGrid](https://github.com/sofa-framework/SofaDistanceGrid). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4573:707,test,test,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4573,2,['test'],['test']
Testability,"Now callback handles the check for the draw vonMises value. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2407:599,test,test,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2407,2,['test'],['test']
Testability,"Now checks in all Modifiers if the pointer towards the TopologyContainer is valid. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3434:622,test,test,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3434,2,['test'],['test']
Testability,"Now pretty much all overridden 'canCreate' found in the kernel or the modules behave as they should, which is, **always specify why a component with the given template cannot be created in the given context**. This is the continuation of the PR #1266. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1294:503,test,test,503,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1294,2,['test'],['test']
Testability,"Now that the v23.12 is getting stable, this PR applies the [lifecycle](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/) policy of SOFA for the v24.06 release. Note that :; - another PR follows this one removing the entire `Sofa/Component/Compat` layer #4533; - this PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4532:1073,test,test,1073,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4532,2,['test'],['test']
Testability,"Now the messaging when required data is not set by the user:. - either a warning is sent if a default value is available in the associated class constructor; - or an error is sent no a default value exists. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2527:746,test,test,746,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2527,2,['test'],['test']
Testability,"Now the only way to create a TopologyHandler is to create it internally through the TopologyData using the method createTopologyHandler.; The handler is created and handle only by the TopologyData as a unique_ptr. This PR need to be rebased after PR #2384 #2388 #2389 #2390 #2391 have been merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2393:837,test,test,837,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2393,2,['test'],['test']
Testability,"Now the user will be clearly warned :exclamation: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4059:591,test,test,591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4059,2,['test'],['test']
Testability,"Now we check that the time is indeed 8:30 to properly announce the meeting, to please our gentle(wo)men . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4877:645,test,test,645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4877,2,['test'],['test']
Testability,"Now we have a tool to list the deprecated components, we can build with `SOFA_WITH_DEPRECATED_COMPONENTS=OFF` + `APPLICATION_GETDEPRECATEDCOMPONENTS=ON` and ignore scenes using deprecated components during scene tests. I also added a function to ignore scenes using non-existent (because disabled) plugins. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/611:212,test,tests,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/611,3,['test'],"['test', 'tests']"
Testability,"Now we have an ""About"" section in the GUI:. ![](https://i.ibb.co/8bLzdKM/Screenshot-from-2021-02-10-00-10-38.png). Do you like what you see?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1801:681,test,test,681,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1801,2,['test'],['test']
Testability,"Now, each data field with a filename alias will show ""filename"" in the GUI.; The old names are now the aliases and are just keept for backward compatibility management. . I didn't do the change for data related to dumping/output filenames. Because I found that ambigious. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1024:525,test,test,525,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1024,2,['test'],['test']
Testability,"Now, this action checks and make sure that sufficiently descriptive labels are set.; Among the 8 possible labels:; - enhancement; - deprecated; - refactoring; - pr: breaking; - pr: clean; - pr: fix; - pr: new feature; - pr: test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4079:224,test,test,224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4079,3,['test'],['test']
Testability,"Number of tetra at beginning is 44; Previous file was attempting to remove 60 of them. Worked with warnings but made the understanding harder for newcomers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3121:696,test,test,696,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3121,2,['test'],['test']
Testability,OTSVG (1.0 - 677.3.0.4) <827396F3-F3A7-3A4F-BE7F-171077501137> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG; 0x7fff2b92b000 - 0x7fff2b931fff com.apple.xpc.AppServerSupport (1.0 - 2038.80.3) <C78E9D22-5110-349B-AF8E-6BA893A20214> /System/Library/PrivateFrameworks/AppServerSupport.framework/Versions/A/AppServerSupport; 0x7fff2b932000 - 0x7fff2b943fff libhvf.dylib (1.0 - $[CURRENT_PROJECT_VERSION]) <F0974976-30C0-35EB-92F1-B4CF1E974F11> /System/Library/PrivateFrameworks/FontServices.framework/libhvf.dylib; 0x7fff2b944000 - 0x7fff2b946fff libspindump.dylib (295.1) <3B4701CB-8F66-3E50-A38A-BEEC992AAC31> /usr/lib/libspindump.dylib; 0x7fff2b947000 - 0x7fff2ba07fff com.apple.Heimdal (4.0 - 2.0) <69768234-4F4F-3AB6-B116-4AE249E6417A> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal; 0x7fff2ba08000 - 0x7fff2ba22fff com.apple.login (3.0 - 3.0) <B9BEC3A1-688C-3999-B705-2D50B8756E62> /System/Library/PrivateFrameworks/login.framework/Versions/A/login; 0x7fff2ba23000 - 0x7fff2baf5fff com.apple.corebrightness (1.0 - 1) <F55C2F51-DC45-3D79-A3A2-8EC8CA6B0E30> /System/Library/PrivateFrameworks/CoreBrightness.framework/Versions/A/CoreBrightness; 0x7fff2bba2000 - 0x7fff2bba5fff libodfde.dylib (26) <47160F56-2A36-3147-B721-279BE2F8B4A6> /usr/lib/libodfde.dylib; 0x7fff2bba6000 - 0x7fff2bc10fff com.apple.bom (14.0 - 233) <F4B7C353-8A65-3B54-9E01-2C93CB3F55A3> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom; 0x7fff2bc11000 - 0x7fff2bc5bfff com.apple.AppleJPEG (1.0 - 1) <7F3819DE-BCE7-32B7-BB33-10C1DB2BA512> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG; 0x7fff2bc5c000 - 0x7fff2bd3afff libJP2.dylib (2130.3.5) <2DFE6642-4309-30BD-A402-F93E28F1F065> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib; 0x7fff2bd3b000 - 0x7fff2bd3efff com.apple.WatchdogClient.framework (1.0 - 98.80.2) <C257C950-F430-3762-BC72-15D314D99556> /System/Library/PrivateFrameworks/WatchdogClient.framework/V,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:51453,log,login,51453,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['log'],['login']
Testability,"ObjectFactory] Module name cannot be found when registering DeprecatedComponent<> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveBeamController<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering BeamAdapterActionController<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering InterventionalRadiologyController<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering SutureController<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveBeamForceFieldAndMass<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveInflatableBeamForceField<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveBeamMapping<Rigid3d,Vec3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveBeamMapping<Rigid3d,Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering BeamLengtthMapping<Rigid3d,Vec1d> into the object factory. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4725:2124,test,test,2124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4725,2,['test'],['test']
Testability,"OglModel was : ; - converting some data (vertices, normals) from (default) double to float, 'cause it was set to float for OpenGL; - textures was hard-set on float (and set as float for Ogl); - tangents on double (and set double for OGL). so a weird mix of conversion or not. So now everything is in `SReal` type (so double by default) and set as GL_DOUBLE for the GPU. This should not have any consequence for the performance, as OpenGL will still use single float-point for calculations _a priori_; And some cleanings here and there as usual. Based on; - #2855 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2856:1104,test,test,1104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2856,2,['test'],['test']
Testability,"Old version using a specific TopologyHandler overriding callbacks will be totally remove in future PR. ; Use specific callbacks inside the TopologySubsetData. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2868:698,test,test,698,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2868,2,['test'],['test']
Testability,"On clang/g++ the visibility is not set (left blank). . This means that a sofa code using SOFA_EXPORT_DYNAMIC_LIBRARY but compiled with a command line setting the unspecified visibility to ""hidden"" will have linkage problems. . This fix the issue so now public code...are really public in clang/g++ . I'm not sure if there is non win32 compiler that does not understand this attribute. If this is the case,it is possible to add extra #ifdef GCC & CLANG & xxx. DM. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1410:714,test,test,714,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1410,2,['test'],['test']
Testability,On desktop with multiple screen the existing code to dimmension the; windows is wrong as it report the largest size. This FIX the problem; by using the correct way to get he screen geometry associated with a; widget. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1010:468,test,test,468,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1010,2,['test'],['test']
Testability,"On my end, never used, because never really worked this BarycentricStickContact response!; Now it is, and an example scene is provided. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2509:675,test,test,675,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2509,2,['test'],['test']
Testability,On my way to fix this issue https://github.com/sofa-framework/sofa/issues/895; I found that the Xsp code was duplicated with a C and a C++ version. . So I refactored the two and I added some tests to the files. ; On of the added test in ReadState_loadFailure is currently failing...wich is expected as it shows an existing problem for which fixing is outside the scope of the PR. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/918:191,test,tests,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/918,4,['test'],"['test', 'tests']"
Testability,On running the command: bin/runSofa -g batch -n infinite; infinite iterations will start and time computed after every 1000 iterations will be echoed.; Solving the issue #552 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/613:428,test,test,428,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/613,2,['test'],['test']
Testability,"On top of the introduction of the stable Neo Hookean hyperelastic material (from Smith, Breannan, Fernando De Goes, and Theodore Kim. ""Stable neo-hookean flesh simulation."" ACM Transactions on Graphics (TOG) 37.2 (2018): 1-15.), I rewrote the St Venant-Kirchhoff and Neo Hookean materials to make it clearer to read. I also added unit tests, validating some material constitutive equations. I added an example having inverted tetrahedra:. ![invertedTets](https://github.com/sofa-framework/sofa/assets/10572752/3eea7447-dec2-4912-a4a4-f9d104f45630). Based on https://github.com/sofa-framework/sofa/pull/4600. $$; \alpha = 1 + \frac{\mu}{\lambda + \mu}; $$. ### Strain Energy Density Function. $$; \psi = \frac{1}{2} \left(\mu (I_C - 3) + (\lambda + \mu) (J - \alpha)^2 \right); $$. ### Second Piola-Kirchoff stress tensor. $$; S = \mu I_3 + \left((\lambda + \mu) J (J - \alpha)\right) C^{-1}; $$. ### Elasticity tensor. $$; \mathbb{C} = (\lambda + \mu); \left(-2 J (J - \alpha) C^{-1} \underline{\overline{\otimes}} C^{-1} + J (2 J-\alpha) C^{-1} \otimes C^{-1} \right); $$; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4603:335,test,tests,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603,3,['test'],"['test', 'tests']"
Testability,"On top of the many things that c89da68 does (wrong), see PR #487 for a glimpse, I noticed that the ; inclusion of unit tests executable related to a given library have been extracted outside from the CMakeLists.txt of the very library it is supposed to test. . What I initially did was to have ; ```; # MyLibrary/CMakelists.txt. addLibrary( MyLibrary SHARED ${HEADER_FILES} ${SOURCE_FILES} ). if(TARGET gtest) ; # there is a gtest TARGET, so we are interested in having unit tests built for sure ! ; # since we do not reditribute unit tests, doing the find_package() thing is probably ; # overkill... If the main CMakelists.txt adds gtest to the build, then the gtest TARGET ; # will be defined; add_subdirectory(MyLibrary_test); endif(); ```. All the information related to the library is visible from the library `CMakelists.txt` and not hidden from the developer in some remote unrelated file, which also implies that you must include all the Sofa modules in your build.; What if I decide not to include the whole library set of Sofa and still get my precious unit tests executed ? ; Hint : I do not use the main `CMakelists.txt` provided in the master branch, and probably never will. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/489:119,test,tests,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/489,5,['test'],"['test', 'tests']"
Testability,"One class, one file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1870:560,test,test,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1870,2,['test'],['test']
Testability,One good point about ignoring scenes with unmet `RequiredPlugin` dependencies is that we can see what scenes need some `RequiredPlugin`: they are the only left to crash trying to create unknown components. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/628:457,test,test,457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/628,2,['test'],['test']
Testability,"One memory leak was identified, use of size_t is added and fix in the init of cube; Fix #804 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/815:346,test,test,346,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/815,2,['test'],['test']
Testability,One more plugin in Sofa. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/477:278,test,test,278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/477,2,['test'],['test']
Testability,One more plugin in Sofa. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/486:276,test,test,276,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/486,2,['test'],['test']
Testability,"One of the constructor of type::Vec takes a raw pointer and fill itself from this pointer, using its **own size**.; But the ctor does not know the size of the given array so this can contribute to unsafe behavior.; E.g ; ```; SReal array[2] = {1.0, 1.0};; sofa::type::Vec<3, SReal> vec(array);; ```; is valid and will compile; but it will lead to unexpected result (in the best case, a crash); GCC detected this case while compiling SpringForcefield with the bbox function on 2d and 1d datatypes.; And this leads to an other problem, with the case of TBoundingBox, which relies fully on this mechanism.; This PR removes as much as possible the usage of the unsafe ctor (effectuvely removing TBoundingBox usage) but does not deprecate TBoundingBox by itself (I suppose it should be). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3124:1322,test,test,1322,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3124,2,['test'],['test']
Testability,"One package was missing in the SofaMeshCollisionConfig.cmake.in, so out-of-tree projects using sofameshcollision are throwing error while doing the cmake config. (allows to compile the plugin beamadapter out-of-tree). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2400:757,test,test,757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2400,2,['test'],['test']
Testability,"One step towards continuous delivery in SOFA :tada: . This PR reworks/cleans CPack usage for release packaging and adds a new generator : [Qt Installer Framework](http://doc.qt.io/qtinstallerframework/ifw-overview.html). Very useful to unify packaging methods, it will be at first used to generate nice installers for Linux. This means no more .zip package for Linux binaries, unless you want to keep them?. Note: This PR also adds the opening of an URL after installation to ask the user to consider donating to the SOFA project. Do not hesitate to comment if you disagree with this idea. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/796:841,test,test,841,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/796,2,['test'],['test']
Testability,"One type to rule them all... ©. Bigger than expected PR; made to harmonize index type for templated Vector/Mat type.; (some had int as index type, other unsigned int, or std::size_t, etc); ~Surprisingly not very breaking with MSVC, but GCC (and clang?) does break when templates declared as int.; (flexible/compliant was a PIA to fix)~ After a fuckton of commits, I regret this sentence 🙃. MAIN BREAKING POINT: VisualModelImpl needs indices to be int and not long (like std::size_t) so it cannot take directly the topology types (Triangle, Quad, etc) for its buffers. Thats why there are now VisualEdge, VisualTriangle, VisualQuad which still takes index as int.; (main reason is that graphical systems (OpenGL, etc) only can manage integers). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1453:995,test,test,995,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1453,2,['test'],['test']
Testability,"Only ArticulatedHierarchyContainer is using BVH (file format describing articulations system); + cleanup while moving. (And BVHContainer has OpenGL code, messing with a future PR moving all OpenGL-related code from Helper to an independent package #1645 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1644:796,test,test,796,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1644,2,['test'],['test']
Testability,Only an optimal version based on the initial values of the; stiffness vector was implemented. Need to have updated stiffnesses. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/579:379,test,test,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/579,2,['test'],['test']
Testability,Only did some base classes that were generating multiple warnings.; And also the topology containers. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/729:353,test,test,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/729,2,['test'],['test']
Testability,"Only implicit type conversions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3545:571,test,test,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3545,2,['test'],['test']
Testability,Only minor typos etc in investigating the collision of SOFA. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1411:312,test,test,312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1411,2,['test'],['test']
Testability,"Only one component inside ... #1529. A priori not breaking. And usual cleaning (namespaces, pragma). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1572:640,test,test,640,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1572,2,['test'],['test']
Testability,"Only relevant to Windows. TetrahedronSetTopologyContainer's stream operators and especially Factory::logFactoryRegister() were throwing `inconsistent dll linkage` warnings (confusion of dllimport/dllexport).; This PR removes them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2321:101,log,logFactoryRegister,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2321,3,"['log', 'test']","['logFactoryRegister', 'test']"
Testability,Only small bug fixes according to release notes so it should not be breaking.... source taken from: https://sourceforge.net/projects/qwt/files/qwt/6.1.4/; release notes: https://sourceforge.net/p/qwt/news/. Fix #1134; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1136:469,test,test,469,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1136,2,['test'],['test']
Testability,Only some cleaning in:; - Class define macro; - Data and member prefix; - Move code from header to inl or cpp files. Update several plugin demo scenes. ![SpatialGridContainer_00000001](https://user-images.githubusercontent.com/21199245/66745709-13632500-ee80-11e9-9cfe-94e1a9e4d27c.png); ![SPHFluidForceField_benchmarks_00000001](https://user-images.githubusercontent.com/21199245/66745711-13632500-ee80-11e9-8382-738a86b68c3c.png); ![SPHFluidSurfaceMapping_00000001](https://user-images.githubusercontent.com/21199245/66745713-13fbbb80-ee80-11e9-98a1-ea1386f91c19.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1186:822,test,test,822,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1186,2,['test'],['test']
Testability,"Only the method ```PointSetTopologyContainer::RenumberPoints``` should be used from outside.; This method makes sure to use the good mechanism of Warning, topology event propagation and process. ; Therefore, ```RenumberPointProcess``` and ```RenumberPointWarning``` **have been set to protected** and can only be overridden by child topology class. Remove redundant RenumberPoints in other topology classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1840:947,test,test,947,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1840,2,['test'],['test']
Testability,"Only the new callback mechanism should be used:. ```; TopologyData::setCreationCallback; TopologyData::setDestructionCallback; ```. PR #2867 and #2868 need to be merged first as they removed last uses of this old mechanism. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2869:763,test,test,763,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2869,2,['test'],['test']
Testability,"OpenCL's FixedConstraint was still using the deprecated/removed beginEdit()/endEdit() with ExecParams. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1795:642,test,test,642,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1795,2,['test'],['test']
Testability,"Operator= is deprecated because it hides operations. Readers might think that = is simply an assignment, but it is more than that. As a replacement, the method `setSystemMBKMatrix` is provided. Removing calls to operator= will be done in another PR, once this one is validated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2167:817,test,test,817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2167,2,['test'],['test']
Testability,"Option to add the SOFA scene as a project in the build solution. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2327:604,test,test,604,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2327,2,['test'],['test']
Testability,"Originally it was to get rid of the std::cout (and its associated tests) in the partial_solve functions, but I ended up renaming the Data because it was bothering me.; (and remove one because it is not used at all). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3226:66,test,tests,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3226,3,['test'],"['test', 'tests']"
Testability,"Originally, the goal was not really to go for ; - #4221. But more to upgrade the gtest version, as the one in SOFA is really old (1.7.0 , *Sep 19, 2013* :exclamation: ) and was throwing warnings for newer cmake.; So instead of simply update the source in extlibs, I took the liberty to go into the find/fetch mechanism. A bit difficult as the CMakefile in the embedded version was heavily customized, so I am not 100% sure the install/package process is working well. But it should 😅. Last note: it is adding a target `gtest_main` which is always activated in the gtest cmake file. It is not used by SOFA as we have our own main for gtest. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/5]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471:1251,test,test,1251,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471,2,['test'],['test']
Testability,"Otherwise the component cannot be drawn due to changes in https://github.com/sofa-framework/sofa/pull/2478. EDIT: about HexahedronFEMForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2499:684,test,test,684,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2499,2,['test'],['test']
Testability,"Otherwise the parsing is dependent on the locale in use on the system which; leads to problems with decimals numbers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2200:657,test,test,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2200,2,['test'],['test']
Testability,"PR #1028 added a getter for the records of the advanced timer that automatically assigns the string version of the record's **id** to a new field called **label**. There was a small problem with this, records can have different types of ids (IdTimer, IdStep, IdVal or IdObj). Casting a record id to a wrong type causes the wrong string version of the id to be assigned to the label. This PR fixes this. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1244:654,test,test,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1244,2,['test'],['test']
Testability,PR #139 moved licence.txt into license.LGPL.txt. This changed has not been propagated in the cpack config. I didn't create a branch as only one line is modified. Hope it doesn't break the CI... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/194:419,test,test,419,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/194,1,['test'],['test']
Testability,PR #158 broke livecoding of shader. This PR restore it. @guparan and @hugtalbot Could this PR be treated in fast-path please ? . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/415:380,test,test,380,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/415,2,['test'],['test']
Testability,"PR #1788 from @courtecuisse should address branch sofa/v20.12 instead of master. This PR is potentially breaking, since it replaces `getSizeX()` and `getSizeY()` which might be used in external CUDA plugins. I'll transform the other PR into a backport to master so we can discuss it on the next meeting. Original PR message:. > @courtecuisse:; > Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa.; > This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1805:1030,test,test,1030,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1805,2,['test'],['test']
Testability,"PR #2036 rebased and to be merge inside topologyChanges PoC branch. Add mechanism of callbacks inside ```TopologyHandler``` instead of inheriting from it and override methods. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ![image](https://user-images.githubusercontent.com/21199245/121326580-fa3f9f80-c912-11eb-9d89-0966330bbded.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2087:1302,test,test,1302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2087,2,['test'],['test']
Testability,PR #213 breaks api compatibility because it misspelled MessageAsTestFailure; by MesssageAsTestFailure (with three 's'). This commit fix that. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/269:367,test,test,367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/269,1,['test'],['test']
Testability,"PR #3821 introduce new rendering features which breaks the default rendering mode of TetrahedronFEMForceField (it is rendered pure white instead of our classical bluish tetra rendering). . In current PR I restore the default rendering to use the blueish mode still preserving the features added in 3821. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3971:843,test,test,843,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3971,2,['test'],['test']
Testability,"PR 2419 restores the correct behavior of CGLinearSolver regarding the call-super-init; https://github.com/sofa-framework/sofa/pull/2419. But as some of its data are tagged as Required, this rise an error message when the value; is not set by the user. I'm not sure it is wise to set the required flag when data provides meaningful and usable default values. I recommand removing it and more generally keep the isRequired only for data field that really have no possibility to have a default value (eg: the filename for a loader). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2498:1071,test,test,1071,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2498,2,['test'],['test']
Testability,"PR adds a first implementation of the augmented lagrangian collision (see [A Surface-to-Surface Finite Element Algorithm for Large Deformation Frictional Contact](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6056201/pdf/bio-17-1579_081013.pdf)). . To do so, because it is very close to the classical Unilateral constraint, I've tried to factorize code by adding a virtualization layer for both the constraints and the associated contact responses (see added class BaseContactLagrangianConstraint and BaseUnilateralContactResponse). It rely on a contact param template which is the only thing that differs in term of data and of course the type of ConstraintResolution used. . An example scene is introduced in the Demo folder, simply copying the falling beam example and replacing the response by the augmented lagrangian one. . There are still one todo for the future, even if this PR is already working on its own : adding the per-contact-point penalty modulation. This should be done by going back to the collision element using the DetectionOutput.elem attribute. This allows to go back to the topology. The only unknown is how to compute the element volume when the colliding topology is mapped to the simulated one. . [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/142]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5003:1845,test,test,1845,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5003,2,['test'],['test']
Testability,"PR based on #2280.; Template specialization for `void CompressedRowSparseMatrix<type::Mat<3,3,double> >::add(Index row, Index col, const type::Mat3x3d & _M)` in order to accelerate insertion.; This allows to avoid branching in force fields, based on the type of the system matrix (`dynamic_cast`). I removed it in `HexahedronFEMForceField`, but it could be removed in other places. It allows also to automatically optimize bloc insertion in force fields that did not have the branches. # Benchmarks. ## List of benchmarks. - `BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble`: insertion of 1000 3x3 blocs into a CRS made of double; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d`: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d`: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs, but insertion uses the fast function specialized for 3x3 CRS matrices. This is the fastest possible bloc insertion. It is actually used in the specialized function introduced by this PR, among other checks. Therefore, this speed is the goal to achieve for the specialized function.; - `BM_CRS_Fixture<double>/Add3x3BlocScalar_double`: insertion of 1000 3x3 blocs into a CRS made of double using 9 individual scalar insertion; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d `: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs, using 9 individual scalar insertion. This is equivalent to what happens in BaseMatrix' bloc insertion, therefore it corresponds to the previous behavior of bloc insertion (before this PR). ## Before. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 75568 ns 75550 ns 9185; BM_CRS_Fixture<sofa::",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2281:488,Benchmark,Benchmarks,488,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281,2,"['Benchmark', 'benchmark']","['Benchmarks', 'benchmarks']"
Testability,"PR on topologyGrid:. - Add new component: SphereGridTopology to create sphere topo. using grid (similar to CylinderGridTopology) with an example: SphereGridTopology.scn; - Clean the API GridTopology and its children: RegularGridTopology/SphereGridTopology/CylinderGridTopology, move several methods into mother class GridTopology.; - Add doxygen doc for the 4 classes; - Add tests for Cylinder and SphereGridTopology; - Add method addSphere/addRigidSphere in sceneCreator + tests + example. <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/164:375,test,tests,375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/164,3,['test'],"['test', 'tests']"
Testability,PR: first version of the integration of assimp Importer to Sofa loader structure. - Only support single mesh creation for the moment: see discussion: https://github.com/sofa-framework/sofa/issues/602; - Change all loader logs to use msg_error/warning/info; - Change in SofaKernel :; - loader that failed at init is now set to componentState Invalide.; - Add extension field in Datafilename. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603:221,log,logs,221,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603,3,"['log', 'test']","['logs', 'test']"
Testability,Paper submitted yesterday => perfect time to blow off some steam and kill some warnings. Before:; ![image](https://user-images.githubusercontent.com/6951981/75091097-02cb6580-556a-11ea-8e30-c2fe6ef641c4.png). After:; ![image](https://user-images.githubusercontent.com/6951981/75091104-0eb72780-556a-11ea-92df-437ec225f34b.png). P.S.: Let's wait for the CI before merging :-). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1258:627,test,test,627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1258,2,['test'],['test']
Testability,"Parent modules must always interface the same libraries.; e.g. Sofa.Component.dll must always be the same. Thus, if some of its child modules are disabled, parent module will not generate a library. This PR creates and uses a new macro `sofa_add_subdirectory_modules`.; This macro is meant for parent modules to easily add their child modules and sets a variable with all added targets.; If a child module is missing or disabled, a message will be shown (not an error) and the library will not be created. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3225:1045,test,test,1045,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3225,2,['test'],['test']
Testability,Part 1 of #629 This PR creates more Sofa Types in the PSDEFactory and uses a cpp-style typename convention . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/740:360,test,test,360,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/740,2,['test'],['test']
Testability,"Partial revert of #3822 where the usage of glBufferSubData is reinstated; because glMapBufferRange is a OpenGL3 function and it does not behave well with macos and ogl compat mode (reports of crashes). `1000 iterations done in 11.859 s ( 84.3241 FPS)`. A bit worse than with glMapBufferRange but still better than before #3822. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3841:867,test,test,867,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3841,2,['test'],['test']
Testability,"ParticleSink was not checking if the topology pointer used was valid before using it in the TopologyHandler.; Moreover init method was not checking if the topology is also dynamic which is a requirement to remove points. A second check more general in TopologyHandler will be done in a second PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2026:836,test,test,836,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2026,2,['test'],['test']
Testability,"Pass extra command-line arguments for python scenes loading in a more high-level function call. Knowing that SofaQtQuick uses a different argument parser, the underlying objective of this commit is to be able to pass command-line extra args using QCommandLineParser. This feature is ready on the side of SofaQtQuick and it works (i.e. attached patch). Note that the added input parameter 'sceneArgs' in the 'load' functions is an optional parameter. [patch_pyargs_support.txt](https://github.com/sofa-framework/sofa/files/3073394/patch_pyargs_support.txt). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/992:808,test,test,808,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/992,2,['test'],['test']
Testability,PhaseDetection_getDetectionOutputs/16 42.8 us 42.8 us 16528; BM_NarrowPhaseDetection_getDetectionOutputs/32 121 us 121 us 5764; BM_NarrowPhaseDetection_getDetectionOutputs/64 401 us 401 us 1750; BM_NarrowPhaseDetection_getDetectionOutputs/128 2228 us 2228 us 316; BM_NarrowPhaseDetection_getDetectionOutputs/256 9252 us 9253 us 75; ```; ## `std::map`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 18.4 us 18.4 us 36921; BM_NarrowPhaseDetection_getDetectionOutputs/16 54.1 us 54.1 us 12873; BM_NarrowPhaseDetection_getDetectionOutputs/32 177 us 177 us 3973; BM_NarrowPhaseDetection_getDetectionOutputs/64 631 us 631 us 1116; BM_NarrowPhaseDetection_getDetectionOutputs/128 2587 us 2587 us 268; BM_NarrowPhaseDetection_getDetectionOutputs/256 10649 us 10649 us 67; ```; ## `sofa::helper::map_ptr_stable_compare`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2047:1813,Benchmark,Benchmark,1813,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047,1,['Benchmark'],['Benchmark']
Testability,"Playing with ClangBuildAnalyzer, I noticed that BoundingBox was in the top ten of the most expensive include.; Indeed BBox was included in Base.h so everybody is including it. (and consequently Vec.h too). ```; 423823 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/Vec.h (included 828 times, avg 511 ms), ; 362330 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/BoundingBox.h (included 778 times, avg 465 ms),:; ```. Fortunately, It was painless to do a forward declaration with it.; After this update, BBox.h (and Vec.h) is much less expensive in the whole compilation process. ```; 84215 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/Vec.h (included 828 times, avg 101 ms),; 22233 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/BoundingBox.h (included 779 times, avg 28 ms)`; ```. Weirdly, it is still included a lot (because of DataTypeInfo_BoundingBox.h) but it is nevertheless much less expensive. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2728:1442,test,test,1442,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2728,2,['test'],['test']
Testability,"Playing with UndefinedBehaviorSanitizer and came across UBs at the very start... This first one is triggered because of misaligned adress when reinterpret_cast a a pointer of char to a a pointer of uintr32_t. ```; Sofa/framework/Core/src/sofa/core/objectmodel/Base.cpp:149:35: runtime error: load of misaligned address 0x7f5e01822917 for type 'const uint32_t', which requires 4 byte alignment; 0x7f5e01822917: note: pointer points here; 6c 2e 68 00 64 72 61 77 00 73 68 6f 77 00 56 69 73 75 61 6c 69 7a 61 74 69 6f 6e 00 22 20 00 4c; ```. This is easily fixed by removing this `questionnable` (sic 😅) ""optimized"" test for comparing strings, and convert to a more readable (and modern) code; I dont really see the need to optimize (and in this way...) this part . For those curious about the optimization, it comes from; https://github.com/sofa-framework/sofa/blame/b3fdf7e4619536941e9cfdd6d4bc6f3e7169af0b/framework/sofa/core/objectmodel/Base.cpp#L96; and; https://learn.microsoft.com/en-us/windows/win32/directshow/fourcc-codes; apparently. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3664:613,test,test,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3664,3,['test'],['test']
Testability,"Playing with [SofaBenchmarks](https://github.com/alxbilger/SofaBenchmark), stumbled on the constructor of sofa::type::vec:. ```; BM_FixedArray_construct<stdarray3f>/8192 14.6 us 13.2 us 74667; BM_FixedArray_construct<sofatypefixedarray3f>/8192 13.0 us 14.2 us 112000; BM_FixedArray_construct<sofa::type::Vec3f>/8192 26.7 us 24.2 us 21333; ```; (trying to construct 8192 std::array<float, 3> vs sofa::fixed_array<float,3> vs sofa::type::vec3f); Unexpectedly, the vec3f is almost twice slower that the other, which is weird as type::vec3f inherits fixed_array<float,3>; By using the constructor of fixed_array (instead of calling set()), we can achieve closer results:. ```; BM_FixedArray_construct<stdarray3f>/8192 14.9 us 12.2 us 64000; BM_FixedArray_construct<sofatypefixedarray3f>/8192 12.7 us 10.6 us 89600; BM_FixedArray_construct<sofa::type::Vec3f>/8192 15.0 us 17.4 us 42165; ```. I did my tests on Windows/MSVC2019 so maybe results are different with different compilers/systems though... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2439:896,test,tests,896,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2439,3,['test'],"['test', 'tests']"
Testability,"Please gently welcome this first NG pull-request :blush: . The base idea was to remove the SofaComponent* packages from modules and to put them in their own place instead.; Doing this, I realized that SofaComponentBase contains actual components (it's not only a basic package as it should be).; Thus, it permitted me to introduce the first NG module Sofa.Component.Utils and fill it with SofaComponentBase intruders (MakeAliasComponent, MakeDataAliasComponent, MessageHandlerComponent, InfoComponent). NG architecture is based on the discussions in #543.; Transition headers are also provided (in deprecated_layout folder) to ensure old includes. I am also working with @damienmarchal on a way to cleanly automatize this kind of NG refactoring with python: see https://github.com/guparan/sofa2ng. Feedback is more than welcome!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/620:1081,test,test,1081,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/620,2,['test'],['test']
Testability,"Please review carefully, this PR could be breaking (but should not). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/782:320,test,test,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/782,2,['test'],['test']
Testability,Please try it on the CI before merging ;) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/431:295,test,test,295,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/431,2,['test'],['test']
Testability,Plugin = to be loaded by PluginManager (via `<RequiredPlugin/>` or plugin_list.conf).; Classic library = does not contain any Component. sofa2ng has been modified accordingly. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/872:427,test,test,427,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/872,2,['test'],['test']
Testability,"Plugin `image` fails (`Error C2672 : 'std::max': no matching overloaded function found`) when compiling `ImageFilter` with the first template parameter being `long` or `unsigned long`. This happens when `PLUGIN_IMAGE_COMPILE_SET` is set to `full`. The compilation fails only with MSVC. The fix is not tested and may change the accuracy because of an additional conversion to `float`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4484:301,test,tested,301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4484,3,['test'],"['test', 'tested']"
Testability,"PluginFinder : https://github.com/alxbilger/PluginFinder. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2860:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2860,2,['test'],['test']
Testability,"PluginManager.cpp:403 `if (!FileSystem::isFile(plugin))` can mean 2 things:; - plugin is a path but is invalid (file does not exist or path is badly formed); - plugin is not a path (it's a name). The problem was that we assumed that `!FileSystem::isFile(plugin)` implied that plugin was a name. PluginManager::pluginIsLoaded should now correctly handle paths and names. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1823:909,test,test,909,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823,2,['test'],['test']
Testability,"PoC removing a piece of code which seems to be useless.. ; I guess it was aimed at supporting topo changes but in fact it isn't used!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3230:674,test,test,674,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3230,2,['test'],['test']
Testability,"PointConstraint is removed.; serr/sout/sendl are removed.; A lot of headers will now trigger the SOFA_DISABLED_HEADER error if included. Please review, I may have done bad/brutal things. [ci-depends-on https://github.com/sofa-framework/Registration/pull/3]; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/268]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090:869,test,test,869,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090,2,['test'],['test']
Testability,"PointConstraint was introduced in https://github.com/sofa-framework/sofa/commit/a30c68b77e3686fce3c4409b21600a3bc565f51e as a temporary component to be removed later.; It is redundant with FixedConstraint.; A problem with ""memory leak issue"" is mentioned. I don't know if it has been fixed.; Note that I did not find any use of this component in scene files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2268:898,test,test,898,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2268,2,['test'],['test']
Testability,"Poisson's ratio should be in [0,0.5[. This PR adds an error message if it's not the case. ; A value outside [0,0.5[ just leads to an odd behavior. . **EDIT**: a warning message (not error). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2908:729,test,test,729,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2908,2,['test'],['test']
Testability,Port the headless recoder to use helper/gl/VideoRecorderFFMPEG.h instead of its own implementation of it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/919:357,test,test,357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/919,2,['test'],['test']
Testability,"Preliminary step before removing fixed_array inheritance from Vec. Functions are using fixed_array but a Vec is given.; This works because vec inherits fixed_array. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4269:704,test,test,704,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4269,2,['test'],['test']
Testability,"Preliminary support with the new Qt6 library. - Some Qt code/UI files were dated from the Qt4 era, and were using deprecated functions in Qt5 (and removed in Qt6).; - Qt6 does not support WebEngine and Charts for the moment (?) -> no qdocbrowser, nor chart profiling; - QGLViewer has not been updated for Qt6 upstream either -> no qtglviewer. Qt5 is still the main version targeted for SOFA, so if CMake finds both Qt5 and Qt6, it will prioritize Qt5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1756:991,test,test,991,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1756,2,['test'],['test']
Testability,"Prelude to moving vector & co to Sofa.Type. helper::vector is a bit complicated (defined in vector_device.h but standard,main code is in vector.h with some trick on templates).; But vector_device, the ""main"" implementation of vector has a dependency on defaulttype/dataypeinfo.h (needs some flags from it). Some ways to remove it:; - change the whole mess of vector, vector_device (used only for SofaCUDA and SofaOpenCL) -> **breaking** -> _Nope_; - remove the use of those dataypeinfo flags -> **change in behavior** -> _Nope_; - move the dependency of datatypeinfo using the template mechanism. Purpose of the PR.; It adds a new template parameter to vector (but is set to an empty, unused class so hamrless) and is compatible with standard code.; And SofaCUDA and SofaOpenCL can pass dataypeinfo (along their own MemoryManager actually) so they can use the flags. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1797:1406,test,test,1406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1797,2,['test'],['test']
Testability,"Preparation for sofang. ComponentChange does not handle the case where a component is still creatable/invokable from a (deprecated) plugin but the ""real"" component has been moved into an other plugin (typically from a current Sofa Module to a planned new SofaNG module); This PR add this case into ComponentChange. The current ""Moved"" class handles the case where a component has been *really* moved from two plugins (i.e not creatable anymore if the original plugin is still used. + some cleanups coming from suggestions from SonarLint. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2565:1077,test,test,1077,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2565,2,['test'],['test']
Testability,"Prepare outsourcing of the LMConstraint plugin; New plugin is now available at :arrow_right: https://github.com/sofa-framework/LMConstraint. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2508:697,test,test,697,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2508,2,['test'],['test']
Testability,Previous PR #1034 deprecating the naming in scenes and in C++ of XxxxxModel into XxxxxCollisionModel for clarity. This PR fixes all generated warnings in the code related to this deprecation. All scenes in SOFA were already updated in #1292. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1301:493,test,test,493,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1301,2,['test'],['test']
Testability,"Previous version of libQGLViewer was not compatible with Qt6, but a recent update was released and should be OK. ; (at least it is with my setup, MSVC/Qt6.4.0); So I updated the version of libQGLViewer present in the source (good or bad, I dont know....); and restore the choice in the CMakeLists.txt of Sofa.Gui.Qt. I also removed the version in the folder name. Note that we cannot take the source as it is, as there is not CMakefile, and there were some errors with MSVC about std::min/std::max (need to remove std::, and seems it was already done with the source already in the repo). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3454:1128,test,test,1128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3454,2,['test'],['test']
Testability,"Previously, the default mode was NOTICE, which print the message in red. The doc says ""Important message printed to stderr to attract user's attention."". The consequence was that almost all the CMake log was written in red, and it was difficult to find the true important messages. This commit change the type of message so it is written in black. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3381:200,log,log,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3381,3,"['log', 'test']","['log', 'test']"
Testability,"Pro:; - type and signature consistancy at compile time.; - ease the refactoring as the signal/slots are noww real method; - make explicit the type conversion between different signature. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2943:726,test,test,726,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2943,2,['test'],['test']
Testability,"Problem detected while using the install distribution. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2705:594,test,test,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2705,2,['test'],['test']
Testability,Problem of convergence of the StandardTetrahedralFEMForceField. Quick solution = decrease force applied and highlight the data of the new version of StaticSolver; But we should check since when / due to which commit this error occured (check #950 ). NOT to merge before answering below points; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1207:545,test,test,545,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1207,2,['test'],['test']
Testability,"Problem statement:; Historically a lot of tests were implemented with the assumption that warning or error messages were tests failure. This assumption was problematic as it favor the testing of code paths that does not generate warning or errors instead of testing all the possible paths. To favor both valid and invalid paths this implicit behavior was remove and and made explicit using the ExpectMessage and MessageAsTestFailure raii's. In the process the old behavior of generating failure on errors was lost. . The PR mix the two and: ; - restores this old behavior by default so a test that specify nothing will fail on warning and error.; - but in addition, each tests class/function/bloc can now specify how a specific bloc can react to a message. This can be done using a new syntax taken inspired mimicking the one from gtest. ; - improve the way test failures about warning and error are reported:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5074/testReport/junit/(root)/RigidRigidMappingTest_0/test_translation/; . Example: ; ```cpp; class MyTest : public Sofa_test<>; ; /// This test will fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void c",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:42,test,tests,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,8,['test'],"['test', 'testReport', 'testing', 'tests']"
Testability,"Problem:; It is common that people write scene in which they used components from specific plugins but forgot the corresponding ; ```xml ; <RequiredPlugin name=''>; ```; because they, in a way or an other, preload the plugin. . This is problematic because, when the environment change (you compile sofa in a different way, your preload different plugin, it is a different person on a different computer,... ) and the preload is not done anymore it makes the component/plugin tracking very hard if it is not a trivial component in a trivial plugin. . To solve this problem, I implemented a SceneCheckerVistitor that scans the scene and detects which components are from a plugin and warn the user if there is no RequiredPlugin in there scene with this component and explaine how his scene should be fixed for the good of all. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/306:1078,test,test,1078,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/306,2,['test'],['test']
Testability,Problem:; MessageDispatcher is not thread safe as showned with the failing test named ; testThreading_OpenIssue. This PR:; - the MessageDispatcher is now thread safe so we can emit messages from different threads. ; - the test is not an OpenIssue anymore and its future failure should be considered as regression. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed ; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/257:75,test,test,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/257,3,['test'],['test']
Testability,Problem:; The implementation of getRelativePath is broken as it returns the current; value which can be either a relative or an absolute path. Solution:; The new implementation is building a real relative path against the path contained; in the DataRepository. I also added few test for DataFileName to valide the different behaviors. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/250:278,test,test,278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/250,2,['test'],['test']
Testability,"Propagation of positions through mappings is required in Newton loop, otherwise the initial position (the one before the Newton loop) is used when computing forces. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2584:704,test,test,704,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2584,2,['test'],['test']
Testability,"Proper use of `msg_info`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2102:565,test,test,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2102,2,['test'],['test']
Testability,Python 2.7 is not compatible with C++17 and later. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1284:302,test,test,302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1284,2,['test'],['test']
Testability,"Qt6 did not handle QtCharts and QtWebEngine until 6.2 (I think). This PR restores the two features, and fix the code : some deprecated/changed functions here and there and QtCharts code is no longer in its own namespace. This PR + #3454 allow us to have the same feature between Qt5 and Qt6 (and maybe giving up on Qt5 soon). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3456:865,test,test,865,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3456,2,['test'],['test']
Testability,Quick PR to fix the SofaPhysicsApi project; - Remove deprecated code regarding OpenGL tetrahedron. ; - FIX some bad path in cpack installation; - Change some class declaration to allow inheritance. . <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/167:369,test,test,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/167,1,['test'],['test']
Testability,"Quick and clean. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1707:556,test,test,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1707,2,['test'],['test']
Testability,Quick and simple!; Will fix Base_test.testComponentState. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1204:38,test,testComponentState,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1204,3,['test'],"['test', 'testComponentState']"
Testability,"Quick clean based on Boost+CMake `/include` error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3067:590,test,test,590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3067,2,['test'],['test']
Testability,"Quick clean before next work step. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3250:574,test,test,574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3250,2,['test'],['test']
Testability,Quick commit to fix [build error](https://ci.inria.fr/sofa-ci/job/ubuntu_clang-3.8_options-debug/325/console) after #370 merge. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/380:379,test,test,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/380,2,['test'],['test']
Testability,"Quick compilation fix for drawing variables and function calls of RGBAColor types. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2206:622,test,test,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2206,2,['test'],['test']
Testability,Quick fix as glut has been removed from Sofa.; remove the glutInit which has nothing to be there. Moreover I don't think someone is using this project with useGui ?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/659:417,test,test,417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/659,2,['test'],['test']
Testability,"Quick fix of compile error, quite self-explanatory I guess. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/680:311,test,test,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/680,2,['test'],['test']
Testability,"Quick fix: to allow Regression to dump only last step as before. Right now it will always dump all dofs at each timestep. WriteState init method check if d_period is set. ; Therfor If d_period is set to 0.0 it will activate a section of the code what will overwrite the period to the current timestep. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4919:843,test,test,843,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4919,2,['test'],['test']
Testability,"Quick test on what could be a direction to fix issue: https://github.com/sofa-framework/SofaPython3/issues/346. I'm now wonder:; - how to generalize that find more comprehensible names for all that. ; - is there room for small refactoring in TypeInfo related to the exisitng containers. . If some of you have suggestion, it is more than welcome. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3851:6,test,test,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3851,3,['test'],['test']
Testability,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1964:6,test,test,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964,3,['test'],['test']
Testability,"Quick update of the MechanicalMatrixMapper so that when the user interacts on the simulated object with the mouse, the StiffSpringForceField that is dynamically added to the scene graph gets included in the forcefield link list of the MMMApper. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/772:496,test,test,496,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/772,2,['test'],['test']
Testability,"Quite a large pull request. - Clean a few files related to the broad phase of the collision detection (unused includes, forward declaration, etc); - Large work on DirectSAP to clean it and speed it up. The algorithm stays the same but:; - Cost of data access has been reduced by caching it at the beginning of the algorithm; - Containers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1917:439,Test,Tests,439,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917,1,['Test'],['Tests']
Testability,"Quite intrusive in SOFA but I don't see another way to define it without an overwrite each time CMake runs. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3313:647,test,test,647,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3313,2,['test'],['test']
Testability,"Quite verbose indeed (100 steps generates around 800KB of logs). May generate timeouts as well. WIP for the moment to see the difference on the CI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4184:58,log,logs,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4184,3,"['log', 'test']","['logs', 'test']"
Testability,"R https://github.com/sofa-framework/sofa/pull/106 taking into account all the feedback and discussion in https://github.com/sofa-framework/sofa/issues/179. This PR contains: ; - a PerComponentLoggingMessageHandler to stores the messages in components in a much cleaner way compared to the existing code in Sofa.; - the old history code is removed but a compatibility layer on top of the new one is provided to ; provide backward compatibility (eg in third party code like qtSofaQuick). ; - the runSofa GUI is slighly updated and improved to make use of the new component. ; - the msg_api is extended to facilitate its use and coherency; - I fixed all around in the code base the mis-usages of printLog eg: if(f_printLog) cout << .... ; - I didn't replaced the f_printLog data field because it would have broken the API too much ; (maybe one day if someone care). Now a bried summary of the new functions in the msg_* API; ```cpp; msg_info() << ""This is a message sended by the this component"" ;; msg_info(other) << ""This is a message sended by the 'other' component"" ;; msg_info(""A String"") << ""This message is not sended by a component"";; ```; Each version also exist in a conditional form eg:; ```cpp ; msg_info_when(!file.valid()) << ""File is not valid"" ; ```. In the previous examples you can also replace 'info' with the type of message you want to emit among:; 'info', 'advice', 'deprecated', 'warning', 'error', 'fatal'. ; ; 'warning', 'error' and 'fatal' and 'deprecated' message cannot be muted with the printLog parameter while 'info','advice',' can. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/190:1811,test,test,1811,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/190,1,['test'],['test']
Testability,"RS_Fixture<double>/Add3x3BlocScalar_double 67780 ns 66811 ns 10488; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 51334 ns 50603 ns 13884; ```. ## After. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 76223 ns 76266 ns 9132; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 13781 ns 13808 ns 51026; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12434 ns 12458 ns 56014; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 66579 ns 66637 ns 10530; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 49684 ns 49713 ns 14274; ```. # Conclusion. The benchmarks show that insertion of 3x3 blocs is faster in 3x3 bloc-based CRS matrices than before (the test `Add3x3Bloc_CRS3x3d`). It goes almost at the same speed than the bloc insertion specialized for 3x3 CRS matrices (benchmark BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d).; The speed remains the same for CRS made doubles, which is expected. TODO: explain the benchmarks and push them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2281:3273,benchmark,benchmark,3273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281,4,"['benchmark', 'test']","['benchmark', 'benchmarks', 'test']"
Testability,"RayTraceDetection is deprecated. Use BruteForceBroadPhase and RayTraceNarrowPhase instead.; A message warns the user and it keeps compatibility with scenes using RayTraceDetection. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2212:720,test,test,720,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2212,2,['test'],['test']
Testability,"RayTriangleIntersection is a weird class, used to only compute the intersection of a ray and a triangle (with even a version with TriangleCollisionModel?).; So ;; - I moved the useful function directly in Sofa.Geometry::Triangle (+a version w/o barycoeff ); - replace the usage where RayTriangleIntersection was used; - inline it (no compilation unit anymore for it); - and deprecate it for people still using it ; - write a small unittest as well. I took the liberty to generalize the normal() function in geometry::Triangle, as it would provoke a compilation error if used with something else than Vec3 (and extend the unittest with array type as well). Diff: https://github.com/fredroy/sofa/compare/remove_triplane_intersection_file...move_triangleoctree. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2763:1298,test,test,1298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2763,2,['test'],['test']
Testability,Reactivate regression tests in CI,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/801:22,test,tests,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/801,1,['test'],['tests']
Testability,"ReadState was only reading the file and making the changes after the first time step (or later). ; This PR allows to load the state at init. . Edit: I forgot to mention that it shouldn't change the behavior of existing scenes. ; The file loaded by ReadState has time values that define at which time steps of the simulation each different state should be applied. Currently T=0 is not working, this PR simply allows that. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1654:963,test,test,963,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1654,2,['test'],['test']
Testability,"Reading a JPEG file is implemented by ImageQt, which obviously depends on Qt.; It means that Qt is needed to load any JPEG image (actually, also gif, and other exotic formats). 1) I think we should be able to read JPEG files without Qt ; perhaps using libjpeg ?; 2) Moreover, we need to have a Qt Gui to activate ImageQt ; then it could be an idea to move this class to a plugin ? Which will be able to read all image formats the Qt library can read ?; 3) (BUG) JPEG files read by ImageQt seem to be upside-down, if we compare it with the same image converted in the PNG format (I will write a test to confirm that)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/51:594,test,test,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/51,1,['test'],['test']
Testability,"Really just for logs to understand more what is pulled. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4507:16,log,logs,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4507,3,"['log', 'test']","['logs', 'test']"
Testability,Really not sure about the change in Distances. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1441:298,test,test,298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1441,2,['test'],['test']
Testability,"Recent PR #1756 is testing wheter Qt5_FOUND is true or not.; The optional search for QWebEngine, QtCharts, can set back this value to FALSE (even if Qt5 itself is there). This PR fixes this (thus fixes the further generation of ui_ headers) by using instead Qt5Core_FOUND (thanks to @guparan ). (This was not detected on the CI or my Windows System as the optional Qt5 components was present, thus Qt5_FOUND was always true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1889:19,test,testing,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1889,3,['test'],"['test', 'testing']"
Testability,"Recently pluginized modules do not have the relocatable property set.; Here is the fix 🤫. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1604:629,test,test,629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1604,2,['test'],['test']
Testability,"Recorder feature has been disabled for at least 10y (not even sure it would compile with the current state of Qt); and the feature itself seems to be broken anyway; Apparently it was supposed to allow a user to record and play back simulations . Commit to focus on:˙https://github.com/sofa-framework/sofa/pull/4041/commits/02f9cb7f14f72b7c71a8ec686ee47213c481f429. Based on ; - #4025. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4041:924,test,test,924,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4041,2,['test'],['test']
Testability,Recover a commit in is_sofa_multithreading branch (3da9e50752d6aead487f0b5f8897bfc4249f9404) to allow OdeSolver concurrent execution:. A new data<bool> is added (d_threadsafevisitor) to disable allocation and writing in the mechanical object component used by the OdeSolver ; The same change is applied to all the OdeSolver derived class and it doesn't affect the default behavior and the scenes.; EulerSolver; EulerImplicitSolver; StaticSolver; CentralDifferenceSolver; VariationalSymplecticSolver; NewmarkImplicitSolver. Task Scheduler refactoring;; - improve task stealing between worker threads.; - add worker thread name to make the debugging and profiling easier.; - group and move the initialization tasks in a dedicated file. New component and scene to show off the performance improvement of multithreading execution.; - MeanComputation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/745:1098,test,test,1098,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/745,2,['test'],['test']
Testability,"Recovering changes made by @olivier-roussel in his [patch](https://github.com/sofa-framework/conda-ci/blob/master/conda/recipes/sofa/patches/allow-compilation-out-of-SOFA.patch). To be noted @fredroy : in _Sofa/GUI/Qt/CMakeLists.txt_, Sofa.GL is only found in a QUIET way and it was not linked explicitely (no where `target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL)`). Could you let me know whether the proposed change seems reasonable to you. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4844:988,test,test,988,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4844,2,['test'],['test']
Testability,"Red alert on the CI ! Fix it now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2004:573,test,test,573,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004,2,['test'],['test']
Testability,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1990:512,log,logical,512,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990,3,"['log', 'test']","['logical', 'test']"
Testability,"Refactor CImg & CImgPlugin and fix the code that depend on it. . The general problem is that CImg is header only library thus the; multiple inclusion of the code in multiple dll seems to cause trouble; on the mutexes initialization causing the crash & failure when two plugins compile; with CImg & CImgPlugin are loaded (eg image, flexible). To avoid this scenario, CImg is moved into the CImgPlugin that; hold the mutex and other code needs to include #include<CImgPlugin/SOFACImg.h>; instead of the raw CImg. This PR is resulting from the split of #548 (for clearity and to ease reviewing). . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/562:846,test,test,846,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/562,2,['test'],['test']
Testability,Refactor of DetectionOutputVector interface and its implementation TDetectionOutputVector. . The goal is to force all components to use the only functions provided by the DetectionOutputVector interface to interact with the DetectionOutput data that stores the contacts. One advantage of accessing the DetectonOutput data through an interface is to make a concurrent modification of contacts easier. The current implementation allows direct access to the DetectionOutput vector by casting the TDetectionOutputVector class to the helper::vector<DetectionOutput> Vector due to a double inheritance. ; This makes the DetectionOutputVector interface useless because easy to bypass. Current implementation of the DetectionOutputVector interface. ```; class TDetectionOutputVector : public DetectionOutputVector : public helper::vector<DetectionOutput>; {; public:; override of DetectionOutputVector pure virtual functions to modify the helper::vector<DetectionOutput>. }; ```. New implementation of of the DetectionOutputVector interface. ```; class TDetectionOutputVector : public DetectionOutputVector; {; public:; override of DetectionOutputVector pure virtual functions to modify the helper::vector<DetectionOutput>. private:; 	helper::vector<DetectionOutput>; }. ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/965:1519,test,test,1519,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/965,2,['test'],['test']
Testability,Refactor regression test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4424:20,test,test,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4424,1,['test'],['test']
Testability,"Refactoring ObjectFactory without breaking to much SOFA is rather complex. ; To ease in the process I split the ObjectFactory class in three entity.; ; sofa::core::future::ObjectFactory and sofa::core::future::ObjectFactoryInstance are the new versions while sofa::core::ObjectFactory is a compatibility layer exposing the old API for transitionning. . For the moment, 100% of the old API is reproduced and emits deprecation warning. ; As the code change are rather important it is easier to read the source code instead of the diff. . sofa::core::future::ObjectFactory is implementing the factory mecanisme without any static in it. ; sofa::core::future::ObjectFactoryInstance is a single-instance factory accessible through static method. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2712:1282,test,test,1282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2712,2,['test'],['test']
Testability,"Referee: @IPeterlik . Members: @IPeterlik @remibessard @hdeling @damienmarchal @fredroy @epernod Jeremie . Main objective: provide a continuous support for validation of SOFA. Subtasks and estimated duration; - using python, based on Method for Manufactured Solutions (MMS), static linear elasticity with linear FEM in (compression and torsion with < 5% deformation); ex: TensorMassFEMForceField; - TensorMassFEMForceField : addKToMatrix, vector of E; - extend it to beams (BeamAdapter); - implement engine : plugged to compute stress data in all FEM in SOFA. Future; - write article; - contact Stefan Suwelack for integration into CAEML.org. ---. Validation solution:; - analytical; - software comparison (Abaqus); - tests; - experimental setup. cases:; - dynamic vs static; - linear elasticity with linear FEM; - metrics : displacement, stress+strain tensors",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/25:718,test,tests,718,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/25,1,['test'],['tests']
Testability,"References removed:; - THMPGSpatialHashing, ; - Flexible, ; - Compliant, ; - OptiTrackNatNet, ; - OpenCTMPlugin. In ref to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3960:714,test,test,714,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3960,2,['test'],['test']
Testability,"Reflect change in CMake which added a dependency on LinearSystem in #2777. It will fix out-of-tree builds based on the current master. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3840:674,test,test,674,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3840,2,['test'],['test']
Testability,"Regnerated using github template.; It should now properly label the repository on the top right corner and when appearing in research. ; Also it should be added as a second tab as the readme on the main page. PR Candidate for SOFA 2024 awards!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4410:784,test,test,784,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4410,2,['test'],['test']
Testability,"Regression results exported with Windows make the regression tests fail on Linux and inversely. It may come from a precision problem in one component, from the amount of exported data or from the regression mechanism itself. To be investigated at STC coding sprint. Note for the STC, we could also add to this the fix of the timeout of ArticulatedArm.header.py",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2983:61,test,tests,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2983,1,['test'],['tests']
Testability,"Related to #3967. I was not able to not unify a bit the behavior and clean some part of the code. . The non constant computation of the pressure is not valid as all the derivatives are zero in addDForce, addKtoMatrix... it is also not consistant with QuadPressureForceField. Moving to the situation with a valid non constant computation on both Triangle and Quad requires more work, so for the moment I prefer to just deprecate the non constant situation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4294:995,test,test,995,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4294,2,['test'],['test']
Testability,"Related to PR #1259 ; It appears that several ways (and API) exist to create a custom collision with discrete models (Point, Line, Sphere..). It should be restricted to one, consistent, clear, documented and logical way. This could definitely be addressed in the next STC# 9 in Lille. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1262:208,log,logical,208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1262,1,['log'],['logical']
Testability,"Related to https://github.com/sofa-framework/sofa/issues/3499. Unit tests are added on empty systems. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3500:68,test,tests,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3500,3,['test'],"['test', 'tests']"
Testability,"Related to: https://github.com/sofa-framework/sofa/issues/3013; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3015:603,test,test,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3015,2,['test'],['test']
Testability,"Relevant for those compiling out-of-tree (e.g SofaPython3 😙); Some dependencies were missing in the *cmake.in. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1679:650,test,test,650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1679,2,['test'],['test']
Testability,"Remove ColladaSceneLoader plugin and its embedded old version of assimp. ; - Move class, doc and examples inside SofaAssimp plugin.; - Merge the CMakeLists and update the findAssimp with a the version provided by Assimp 5.0.; - Ensure scenes of both plugins are working with up to date version of assimp. SofaAssimp plugin still need the pluginization refresh. To be done in another PR. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1360:638,test,test,638,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1360,2,['test'],['test']
Testability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375 ; Update FEM:; - FastTriangularBendingSprings; - TriangularBendingSprings; - TriangularTensorMassForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2388:762,test,test,762,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2388,2,['test'],['test']
Testability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375; Update FEM:. - FastTetrahedralCorotationalForceField; - QuadBendingFEMForceField; - StandardTetrahedralFEMForceField; - TetrahedralTensorMassForceField; - TetrahedronHyperelasticityFEMForceField; - TriangularAnisotropicFEMForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2390:888,test,test,888,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2390,2,['test'],['test']
Testability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375; Update FEM:. - HexahedralFEMForceField; - TetrahedralCorotationalFEMForceField; - TriangularFEMForceFieldOptim. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2384:766,test,test,766,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2384,2,['test'],['test']
Testability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375; Update FEM:. - QuadularBendingSprings; - TriangularBiquadraticSpringsForceField; - TriangularQuadraticSpringsForceField; - VectorSpringForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2389:801,test,test,801,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2389,2,['test'],['test']
Testability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375; Updated components:; - DiagonalMass; - MeshMatrixMass. Also fix DiagonalMass topological changes for Quad topology and update test which was wrong. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2391:241,test,test,241,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2391,3,['test'],['test']
Testability,"Remove a really annoying ""unused variable"" warning. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1325:303,test,test,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1325,2,['test'],['test']
Testability,"Remove all CUDA plugins from default plugin list for the release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5044:605,test,test,605,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5044,2,['test'],['test']
Testability,"Remove as much as possible the dependencies on SofaCommon, SofaSimulation, SofaGeneral, SofaAdvanced and SofaMisc to remove the warning ""You must now explicitely find (find_package) and link (target_link_library) the modules you need within: ..."". Fixes #1623. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1883:800,test,test,800,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1883,2,['test'],['test']
Testability,"Remove commented code & fix trivial issues (#1691 and #1662). EDIT: this pr is part of my good resolution for 2021...make at least 1 pr a day (whatever it is). ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1693:701,test,test,701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1693,2,['test'],['test']
Testability,"Remove damping correction to the RHS because it is already added in the computeForce. In a Euler implicit integration scheme, the right hand side expression only contains terms coming for the internal and external forces taken at the begining of the timestep, and an inertial term constituted of the stiffness matrix, but no term coming from the constitutive damping. (see [Christian Duriez HDR](https://theses.hal.science/tel-00785118) for ref). The contribution of the damping forcefield is already taken into account through the `computeForce` call line 126, so the `b` coefficient should be put to 0 here otherwise the behavior is not correct. . This can bee reproduced by launching the scene `examples/Component/SolidMechanics/FEM/DampingForceField.scn` and putting the data `implicit` of the damping forcefield to true. This data might have been introduced to fix this error, because here we are in an implicit scheme, and setting this parameter to true when the `b` coef is equal to 1 changes the behavior. . This was introduced here : https://github.com/sofa-framework/sofa/commit/fe0ee6248971383daa4e488e80f5fe480ee85988. [ci-depends-on https://github.com/sofa-framework/Regression/pull/67]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4848:1740,test,test,1740,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4848,2,['test'],['test']
Testability,Remove deprecated updateFlags method in TriangleModelCollision; Remove deprecated sort method in CubeModelcollision. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1201:368,test,test,368,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1201,2,['test'],['test']
Testability,Remove duplicated constructors and commented alias. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1250:303,test,test,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1250,2,['test'],['test']
Testability,"Remove error and send warning when cxxopt is found but version mismatch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4554:612,test,test,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4554,2,['test'],['test']
Testability,"Remove logs/warnings in SceneCreator_test by:; - inheriting from BaseSimulationTest instead of old api: sofa_test; - Remove sceneDump in AddCube method. Also update SofaCarving_test to use the correct header path. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2406:7,log,logs,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2406,3,"['log', 'test']","['logs', 'test']"
Testability,"Remove minor warnings in two files.; Fix #1754. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1787:587,test,test,587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1787,2,['test'],['test']
Testability,"Remove most of the checks: if(CHECK_TOPLOGY). This macro is automatically set to true if SOFA is compiled in debug mode. The macro has been either:; - Remove the test and the warning/info message if not relevant. For example many getter, were sending a warning message if requested element id was out of bound before returning an ```Topology::InvalidID```. For those cases, the return value should be checked and warning could be send depending on the use. But it is not the role of a getter to send the warning.; - Remove test and let warning/error message when it is useful also in release.; - Remove the tests and sometimes also some creation buffer and keep some warning message in tricky cases. . **Result: several errors and warnings hidden in scenes are going to be revealed!** . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1352:162,test,test,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1352,5,['test'],"['test', 'tests']"
Testability,Remove new warning in MapMapSparseMatrixEigenUtils.h. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/485:305,test,test,305,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/485,2,['test'],['test']
Testability,"Remove shadow variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4785:563,test,test,563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4785,2,['test'],['test']
Testability,"Remove some warning:; - by updating the code ; - by configure in CMakeLists.txt the library (gtest, libQGlViewer, csparse, CImg) as system library. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1343:399,test,test,399,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1343,2,['test'],['test']
Testability,Remove testmessagehandler,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/95:7,test,testmessagehandler,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/95,1,['test'],['testmessagehandler']
Testability,"Remove the find_package(tinyxml2 REQUIRED) because the link is private. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4555:611,test,test,611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4555,2,['test'],['test']
Testability,"Remove the mesh export to a hard-coded absolute path, which was probably used to debug the component. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2420:641,test,test,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2420,2,['test'],['test']
Testability,Remove the randomness of LCPForceFeedback test to avoid having random errors.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4671:42,test,test,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4671,1,['test'],['test']
Testability,"Remove thread specific declaration for ExecParams class. accessing thread local variables is slow and if the thread-local variable is accessed very frequently, the cost may become an issue. ; https://software.intel.com/en-us/blogs/2011/05/02/the-hidden-performance-cost-of-accessing-thread-local-variables. The ExecParams global pointer is declared thread specific but it is often passed in a function call as argument.; A function executed in a second thread can receive as argument the thread local variable of the first thread and it is allowed to use it.; In this situation there is no need of use the thread local variable. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1129:880,test,test,880,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1129,2,['test'],['test']
Testability,"Remove tinyXML find package in the common config file because the linkage is private and thus it is not required to find it for links against Sofa.Simulation.Common. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4506:707,test,test,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4506,2,['test'],['test']
Testability,Remove unjustified Assert in getSimulation(),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1082:19,Assert,Assert,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1082,1,['Assert'],['Assert']
Testability,"Remove unused Data buffer of point indices. quick way to fix #1591 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2993:608,test,test,608,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2993,2,['test'],['test']
Testability,"Remove unused Data:; - edgeInfo; - f_damping. Removes API proposing to implement damping inside the same class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2283:651,test,test,651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2283,2,['test'],['test']
Testability,"Remove unused _assembling data in BeamFEMForceField and HexahedronFEMForceField; Also clean warning. However, @alxbilger, `_assembling_ seems to be used for both TetrahedronFEMForceField and TetrahedralCorotationalFEMForceField.. (see [for instance](https://github.com/sofa-framework/sofa/blob/master/Component/SolidMechanics/FEM/Elastic/src/sofa/component/solidmechanics/fem/elastic/TetrahedralCorotationalFEMForceField.inl#L664)). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2901:972,test,test,972,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2901,2,['test'],['test']
Testability,Remove useless log files; Remove old example of MatrixMass (deprecated and soon removed class); Add MeshMatrixMass example. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1257:15,log,log,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1257,3,"['log', 'test']","['log', 'test']"
Testability,"Remove warnings, mostly from missing override keyword.; (+ some old style C cast). And fix a (potential) crash in MechanicalMatrixMapper (uninitialized pointer) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/968:414,test,test,414,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/968,2,['test'],['test']
Testability,"Removed unused variables; Removed MechanicalGetDimensionVisitor which was no longer used; Renamed variables (groupData is not clear). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2195:673,test,test,673,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2195,2,['test'],['test']
Testability,Removing all highorder classes from the base topological classes of SOFA.; Created a new open repository for those classes at sofa-framework/plugin.HighOrder 👍 ( https://github.com/sofa-framework/plugin.HighOrder.git ). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old.; - [ ] updated Flexible plugin to use the new plugin. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/220:445,test,test,445,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/220,1,['test'],['test']
Testability,"Removing element from TriangleModel (using the mouse) when an Hexa2TetraTopologicalmapping is in the scene was not possible because of a searchRoot even if the mapping has nothing to see with the current topology being manipulated. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1973:773,test,test,773,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1973,2,['test'],['test']
Testability,"Rename OBJExporter into VisualModelOBJExporter to express more clearly that it only exports the VisualModels; Compatibility layer added + Alias. Fix #1783. Q: does it make sense to keep examples in the module itself?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2505:757,test,test,757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2505,2,['test'],['test']
Testability,Rename the class and add the option to handle sparse mass matrix with Euler explicit scheme!; Useful for trainings and useful for anyone starting in SOFA. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1260:406,test,test,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1260,2,['test'],['test']
Testability,"Rendering using GL_DOUBLE has terrible performance on some hardware/os/drivers that are still commonly used. . Reverts #2856. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3073:665,test,test,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3073,2,['test'],['test']
Testability,"Reopening of #1274. > unload() function of PluginManager was just removing the entry of the plugin in its map, but this one was effectively still loaded in the process memory. (on Windows, you could still see it using ProcessExplorer); > This PR fixes it (i.e really unloads from memory). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1287:540,test,test,540,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1287,2,['test'],['test']
Testability,"Reorder / recolor / change badges. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4417:574,test,test,574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4417,2,['test'],['test']
Testability,"Replace SOFACUDA_ARCH containing arbitrary value with (CMake's) auto arch detection.; If needed, you can disable auto-detection with the desired arch value.; It should (not tested) also generate cuda code for multiple arch as well. Remove also warning when configuring with CMake. (about deprecated macro sofa_create_package). I guess it could break CMake CUDA config for people using the SOFACUDA_ARCH variable. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1336:173,test,tested,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1336,3,['test'],"['test', 'tested']"
Testability,"Replace some \#ifndef by pragma, update some namespace and remove some relatives header inclusions in:; - CudaCollision; - CudaContactMapper; - CudaIdentityMapping; - CudaSubsetMapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2674:725,test,test,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2674,2,['test'],['test']
Testability,"Replace the bash code block by a python one-liner. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2454:590,test,test,590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2454,2,['test'],['test']
Testability,"Replaces #3360 as the pull request is blocked. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3462:586,test,test,586,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3462,2,['test'],['test']
Testability,"Replaces https://github.com/sofa-framework/sofa/pull/3806 after discussion during the dev meeting.; Fixes https://github.com/sofa-framework/sofa/discussions/3773. The includes are not exhaustive. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3865:735,test,test,735,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3865,2,['test'],['test']
Testability,"Replacing ; `std::enable_if_t<TL == 1 && TC != 1 || TC == 1 && TL != 1> >`; by; `std::enable_if_t<(TL == 1 && TC != 1) || (TC == 1 && TL != 1)> >`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3633:687,test,test,687,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3633,2,['test'],['test']
Testability,"Replacing automatically the deprecated template at the begining of the createObject method of the factory doesn't work for CUDA implementation using Matrices when compiling sofa in Double and CUDA in Float. See #3644 for more context . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3646:775,test,test,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3646,2,['test'],['test']
Testability,Reproduce work similar to what has been done for OmniEmulator. This could be used to test the plugin on the CI. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1371:85,test,test,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1371,1,['test'],['test']
Testability,Requires #814 . Renaming DataTrackerDDGNode::isDirty() to DataTrackerDDGNode::hasChanged() to reduce confusion with DDGNode::isDirty(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/820:387,test,test,387,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/820,2,['test'],['test']
Testability,"Requires other PRs to avoid crashes during the dump. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4818:592,test,test,592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4818,2,['test'],['test']
Testability,RequriedPlugin does not updates when some of its data field are changed. ; This PR implement this behavior without breaking the existing one. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1458:395,test,test,395,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1458,2,['test'],['test']
Testability,"Reset button becomes Reload button (equivalent to CTRL+R); Reset remains available with ALT+R ; If this PR gets accepted I would propagate to ImGUI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3123:688,test,test,688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3123,2,['test'],['test']
Testability,"Resize the force vector even when no force Data has been set. This avoids a crash later. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3670:628,test,test,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3670,2,['test'],['test']
Testability,"RestSpringsForceField has almost two versions: one for Vec (default implementation), the other for Rigid (specialization in cpp); Problems are:; - ugly code duplication; - not possible to instantiate from somewhere else for other kind of RigidTypes (i.e for float version or CudaRigid...). so this PR unifies the code and does not rely on any specialization in the cpp. The main difference is that the ""Vector"" version was testing if the stiffness was global or for each spring (more or less), with again an other ugly code duplication.; I removed the particular case but it means there is a test of the size at each iteration (in addF(), addDF()) which I think is not very problematic but I did not do any bench to test that. 🙊; ~~I also test if the case is Rigid on the Name(), a bit ugly but does the trick for me....~~. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3175:423,test,testing,423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3175,6,['test'],"['test', 'testing']"
Testability,Restore regression test on the topology,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/829:19,test,test,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/829,1,['test'],['test']
Testability,"Return type of `getRotations()` should use the `typedef` type to respect the floating point precision of the template `DataTypes`. As it is now, it causes compilation errors when using template `defaulttype::Vec3fTypes`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2235:760,test,test,760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2235,2,['test'],['test']
Testability,"Revert ""[Benchmark] Introduce benchmark on matrix assembly""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2214:9,Benchmark,Benchmark,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2214,2,"['Benchmark', 'benchmark']","['Benchmark', 'benchmark']"
Testability,"Revert #3278 remove un-inded merge. Sorry for the mess. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4068:595,test,test,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4068,2,['test'],['test']
Testability,Reverts sofa-framework/sofa#219 because it introduce regression on the test scene.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/256:71,test,test,71,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/256,1,['test'],['test']
Testability,"Revival of #1553 ; could not re-opened it because of force push🕵️‍♀️. Based on #1555 . ## Description:; Move fixed_array types (helper::fixed_array and defaulttype::Vec) and their satellites file (algo...) to the new Sofa.Type module.; No dependency on anything, except the (future) Sofa.Config to avoid weird cyclic deps.; As a compatibility layer for transition, so it should be as least breaking as possible. - sofa::defaulttype::Vec becomes sofa::type::Vec; - sofa::helper::fixed_array becomes sofa::type::stdtype::fixed_array. ## Breaking; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions cross and dot() when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. More info with #1521 . Another PR will remove all defaulttype::Vec (and helper::fixed_array); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1734:1587,test,test,1587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1734,2,['test'],['test']
Testability,Rework the PR with clean history (see previous #1238); Fix #1166 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1241:318,test,test,318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1241,2,['test'],['test']
Testability,"Right now for a tetrahedron: [P0, P1, P2, P3] (see picture below); The 4 triangles saved in the tetrahedron are:; - T0: [P1, P3, P2]; - T1: [P2, P3, P0]; - T2: [P3, P1, P0]; - T3: [P0, P1, P2]. This means the 4 triangles are clockwised oriented and thus their normals are going inside the tetrahedron. If there is a special reason for that I couldn't find it in the doc. . ![image](https://user-images.githubusercontent.com/21199245/50616906-cf072980-0eea-11e9-8bf0-72a4d2d584d7.png). As Gmsh nice ascii picture (from gmsh full doc) and the 2nd picture suggest. I changed to have counter-clockwise orientation so triangles on borders are by default well oriented to have normals going out. Then, T0 being the 2D plan [u,v], T1 sharing vector u and then T2 and T3 to close the tetrahedron; So new triangles are:; - T0: [P0, P2, P1]; - T1: [P0, P1, P3]; - T2: [P1, P2, P3]; - T3: [P0, P3, P2]. ![image](https://user-images.githubusercontent.com/21199245/50616994-4937ae00-0eeb-11e9-9aca-87385530a7ea.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/878:1255,test,test,1255,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/878,2,['test'],['test']
Testability,"Right now in SOFA we have:; - TopologySubsetData: templated but working only with ```unsigned int``` to store a list of indices following the topology. For example the ```indices``` of a FixedConstraint.; - TopologySparseData: templated on any structure (like TopologyData) but on a smaller set. This Data works with a second vector of indices as a map between the Topology buffer and this Data. This PR merge both code inside TopologySubSetData. If the second vector is not set and the TopologySubSetData is templated on ; ```unsigned int``` it will work as before. ![image](https://user-images.githubusercontent.com/21199245/121327022-5d313680-c913-11eb-99b4-3d543893ae06.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2114:1219,test,test,1219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2114,2,['test'],['test']
Testability,"Right now, if you put a BoxROI in your scene to get the edges, triangles, etc. contained inside a box, the BoxROI will gets you every elements for which its center point is inside the box. An element partially inside the box can than be flagged as inside. This PR adds an option named ""strict"" to the BoxROI which will instead test that every nodes of the elements are contained inside the box. The option is false by default so that the current behavior remains unchanged. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1127:327,test,test,327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1127,3,['test'],['test']
Testability,Roll back #1321 which should have been closed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1327:298,test,test,298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1327,2,['test'],['test']
Testability,"SOFA with OpenGL adds a X11 dependency. If we compiled SOFA without OpenGL, this dependency was still there, which caused problem when compiling for a headless system (no X11 and no GL). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1370:438,test,test,438,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1370,2,['test'],['test']
Testability,"SOFA_COMPONENT_MISC_WRITESTATE_H was already used in WriteState.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1954:606,test,test,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1954,2,['test'],['test']
Testability,SOFA_WITH_DEPRECATED_COMPONENTS option was declared after it was supposed to be used in SofaFramework's own CMakeLists. Therefore CMake was throwing an error at the first step [here](https://github.com/sofa-framework/sofa/blob/d3aee470bc79a017e4f3e04b608c49d16d5874a6/SofaKernel/SofaFramework/CMakeLists.txt#L26). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1452:565,test,test,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1452,2,['test'],['test']
Testability,SPHParticleSink_obstacle.scn should be ignored. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1317:299,test,test,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1317,2,['test'],['test']
Testability,"STLExporter had a useless dependency on VisualModelImpl.; Removing it removes the need on SofaBaseVisual for SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2039:662,test,test,662,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2039,2,['test'],['test']
Testability,"Same as PR #284 but without the unwanted merge commits. Small fix related to issue #114 . Have tested the compilation without the flag SOFA_INSTALL_RESOURCES_FILES (which is set by default), Sofa.ini and installedSofa.ini, which are necessary for build and install, are well created. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/291:95,test,tested,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/291,3,['test'],"['test', 'tested']"
Testability,"Scene checkers were located in the SofaGraphComponent (even if they were not components themselves....); So they needed to be moved out of it.; The first idea was to move them to Sofa.Simulation as they related to the simulation itself (or rather its initialization).; But scene checking could need dependencies on components themselves (in this case, it needs the contact manager from Sofa.Component.Collision.Response.Contact, and APIVersion from Sofa.Component.SceneUtility); So finally a library was created into ~~applications/plugins, even if it is not really a plugin in the sofa-way of thinking (aka a set of components)~~ Sofa/plugins because it is not in Component or framework, but it could be placed in Sofa/ directly (where GUI is as well). As usual, a compat layer has been added to warn devs of the move. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2960:1359,test,test,1359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2960,2,['test'],['test']
Testability,Scene crashing in GUI mode only: can't make a test that fails,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/79:46,test,test,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/79,1,['test'],['test']
Testability,"SceneChecks were isolated in a project. But we may want that plugins add their own SceneCheck. An example with MultiThreading is provided here. The class `SceneCheck` is now available in Sofa.Simulation.Core. Tools to register a SceneCheck are also available in the module. The newly introduced SceneCheck checks if there are opportunities to use a multi-threaded component. It advices the user with a message looking like:. ```; [SUGGESTION] [SceneCheckMultithreading] This scene is using components implemented sequentially while a parallel implementation is available. Using the parallel implementation may improve the performances. Here is the list of sequen; tial components in your scene and their parallel equivalent:; BVHNarrowPhase -> ParallelBVHNarrowPhase; BruteForceBroadPhase -> ParallelBruteForceBroadPhase; HexahedronFEMForceField[Vec3d] -> ParallelHexahedronFEMForceField[Vec3d]; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3597:1440,test,test,1440,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3597,2,['test'],['test']
Testability,"Second and last task about https://github.com/sofa-framework/sofa/issues/2483. Contains #2531. Create a new plugin SofaNewmat with ; - newmat lib itself; - NewmatMatrix and NewmatVector (and their tests); - LULinearSolver (only compatible with NewmatMatrix); ; Add a ""compatibility"" layer (tricky because SofaNewmat is optional; Update ComponentChange; Remove newmat usage in image plugin. Fix #2483 . Change the template of CGLinearSolver in the BeamLinearForceField because I dont see why we would need to run it with newmat matrices. It results with a very slight difference on the DOF positions. [ci-depends-on https://github.com/sofa-framework/Regression/pull/21]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2532:197,test,tests,197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2532,3,['test'],"['test', 'tests']"
Testability,See #1180 for details. Fixes #1180; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1182:287,test,test,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1182,2,['test'],['test']
Testability,See #1271 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1272:263,test,test,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1272,2,['test'],['test']
Testability,"See #2641 and especially https://github.com/sofa-framework/sofa/pull/2641#issuecomment-1036695510. @EulalieCoevoet could you try this branch to make sure it fixes the error ? Thanks !. (NOTE: I did not revert the PR itself as there are some welcoming cleanings). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2699:802,test,test,802,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2699,2,['test'],['test']
Testability,"See #4532 to review readable changes.; In addition, this PR removes the entire `Sofa/Component/Compat` layer.; This PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/12]; [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/6]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533:1027,test,test,1027,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533,2,['test'],['test']
Testability,"See doc https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html. It gives 3 different presets similarly to what we are used to on the CI. The idea is the same (3 different config) but it cannot mimic it perfectly. For example, the CI checks if dependencies are available before setting a variable. It is not possible with presets. An example of CMakeUserPresets.json I use: https://gist.github.com/alxbilger/bee1135fbe222943906d0f595699c1a3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3305:989,test,test,989,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3305,2,['test'],['test']
Testability,"See https://github.com/sofa-framework/LMConstraint and https://github.com/sofa-framework/sofa/pull/2508. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2828:644,test,test,644,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2828,2,['test'],['test']
Testability,"See https://json.nlohmann.me/api/basic_json/error_handler_t/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4900:601,test,test,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4900,2,['test'],['test']
Testability,See issue #784 : Quadractic complexity in BarycentricMapping ; This PR depends on PR #797: Cleaning and refactoring of BarycentricMapping. In this PR the initialization of BarycentricMapping (for topology container only) is optimized using spatial hashing. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/798:510,test,test,510,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/798,2,['test'],['test']
Testability,"See issue: https://github.com/sofa-framework/sofa/issues/338; The Rayleigh parameters (Rayleigh mass and stiffness) are used for numerical dumping in the simulation. However, most integration schemes (OdeSolvers) in SOFA use NON-ZERO default values. This commit fixes this.; The user must be aware of its dumping parameters, now : ; - default rayleighMass=0.0; - default rayleighStiffness=0.0. To avoid breaking all scenes, this PR also updates (where needed) the rayleighMass and; rayleighStiffness parameter (set to 0.1 like previous default values). NOTE : a script is available for updating all your own scenes if needed (script/update-scenes-rayleighcoeff.sh). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/350:917,test,test,917,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/350,2,['test'],['test']
Testability,"See the list of commit for a description of the changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4185:596,test,test,596,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4185,2,['test'],['test']
Testability,"See: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2382/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/2/artifact/parent_dir/build/scene-tests/archive/applications/plugins/MultiThreading/examples/ParallelHexahedronFEMForceField.scn/output.txt",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2409:159,test,tests,159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2409,1,['test'],['tests']
Testability,"See; - #4429. (+ add registration from missing components sceneutility and engine.transform). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5055:633,test,test,633,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5055,2,['test'],['test']
Testability,"See; - #4429. EDIT:; Based on ; - #4863 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4858:581,test,test,581,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4858,2,['test'],['test']
Testability,"See; - #4429. [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/143]; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/458]; [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/305]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5012:770,test,test,770,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5012,2,['test'],['test']
Testability,"See; - #4429. [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/302]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4976:621,test,test,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4976,2,['test'],['test']
Testability,"See; - #4429. [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/306]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5033:621,test,test,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5033,2,['test'],['test']
Testability,"See; - #4429. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/462]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5052:625,test,test,625,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5052,2,['test'],['test']
Testability,"See; - #4429. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/463]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5053:625,test,test,625,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5053,2,['test'],['test']
Testability,"See; - #4429. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4930:553,test,test,553,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4930,24,['test'],['test']
Testability,"See; - #4429. some works still need to be done in the future to avoid calling a singleton for the ObjectFactory. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5098:652,test,test,652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5098,2,['test'],['test']
Testability,"Set of fixes for warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2140:566,test,test,566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2140,2,['test'],['test']
Testability,"Set worker threads to idle state when there are no more tasks to execute.; It should fix the problem of the CPU busy when the simulation is not running raised in PR #1862 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1997:712,test,test,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1997,2,['test'],['test']
Testability,"Setting the background color with the component BackgroundSetting wasn't working anymore, because in PR #1758 the test changed from:. ```cpp; else if (_background==2); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	 ; ```; to: . ```cpp; else if (_background==3); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1826:114,test,test,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1826,3,['test'],['test']
Testability,"Setup for the Sofa.Type module which will contain classes like Vec, Mat, etc.; Empty for now (just an init() ) and is set as a dependency for SofaHelper. (was before in #1553 but decided to split it). Issue #1521 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - builds with SUCCESS for all platforms on the CI.; - does not generate new warnings.; - does not generate new unit test failures.; - does not generate new scene test failures.; - does not break API compatibility.; - is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1555:454,test,test,454,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1555,2,['test'],['test']
Testability,Several changes and fix from my master branch:; - Fix: Duplicate declaration of Data in MechanicalObject; - Fix: the graph display of topologyData.; - Replace serr by msg_error and put some methods and parameter from private to protected in SofaMeshCollision classes; - Add: missing generic methods in MeshTopology; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/953:567,test,test,567,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/953,2,['test'],['test']
Testability,"Several changes from my working branch:; - **TopologicalMapping**: Add method checkTopology. Can be called from outside the component. Need to be overwritten by children. Implement only the tetra2TriangleTopologicalMapping version.; - **Quad2TriangleTopologycalMapping**, **Hexa2TetraTopologicalMapping**, **Hexa2QuadTopologicalMapping**: clean component init and model check in methods.; - **MeshTopology**: reorder methods declaration in header for clarity.; - **EdgeSetTopologyContainer**, **TriangleSetTopologyContainer**, **TetrahedronSetTopologyContainer**: Improve checkTopology methods in container.; - **Mat**, **MatSym**: Improve invertMatrix error logs. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/999:659,log,logs,659,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/999,3,"['log', 'test']","['logs', 'test']"
Testability,Several changes in PluginManager:; - Add check to avoid registering the same plugin from different paths; - Change method getPlugin to look in the map of registered plugin using the plugin name instead of using a reconstructed path. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1472:484,test,test,484,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1472,2,['test'],['test']
Testability,Several crashes possible in Tetra2TriangleTopologicalMapping when removing tetrahedron.; - When removing the last elements; - When using noInitialTriangles or noNewTriangles options. Will fix issue #954 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/960:456,test,test,456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/960,2,['test'],['test']
Testability,"Several fixes:; - TriangleFEMForcefield : wrong init value for strainDisplacement; - TriangularFEMForceField: strainDisplacement not updated at each timestep and using rest Triangle area like in TriangleFEMForceField; - Enable the 2 tests which same value references for TriangleFEMForcefield and TriangularFEMForceField:; checkTriangularFEMForceField_init; checkTriangularFEMForceField_values. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2275:233,test,tests,233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2275,3,['test'],"['test', 'tests']"
Testability,"Several improvments regarding principal stress computation in `TriangularFEMForceFieldOptim`:; - Add Data `d_computePrincipalStress` to force the computation no matter if stress vector is displayed or not.; - Move the computation out from the draw loop, in addForce if `d_computePrincipalStress` or `d_showStressVector` is true; - Store principal stress info into the TriangleInfo structure so it can be accessed outside from the component; - Update drawing to use arrow with color orientation.; - Add Data `d_showStressThreshold` to display only vectors above a threshold. ![image](https://github.com/sofa-framework/sofa/assets/21199245/9da6ebe5-38b7-4e3a-a37c-7d25fc8724f4). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4027:1216,test,test,1216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4027,2,['test'],['test']
Testability,"Several plugins out-sourced:; - [SixenseHydra](https://github.com/sofa-framework/SixenseHydra); - [Xitact](https://github.com/sofa-framework/Xitact); - [Haption](https://github.com/sofa-framework/Haption) ; - [Sensable](https://github.com/sofa-framework/Sensable); - [SensableEmulation](https://github.com/sofa-framework/SensableEmulation); - [LeapMotion](https://github.com/sofa-framework/LeapMotion); - [Geomagic](https://github.com/sofa-framework/Geomagic). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4575:1063,test,test,1063,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4575,2,['test'],['test']
Testability,Several warning types:; - uint/int conversion; - bad init order; - missing break; - unused variables. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/873:353,test,test,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/873,2,['test'],['test']
Testability,SharedFileList (144 - 144) <C861FAD6-D3A5-302C-88AE-B2813F7201A7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList; 0x7fff27439000 - 0x7fff2743bfff libapp_launch_measurement.dylib (14.1) <2BBB708C-4D91-364E-ABD0-39BF198688A6> /usr/lib/libapp_launch_measurement.dylib; 0x7fff2743c000 - 0x7fff27484fff com.apple.CoreAutoLayout (1.0 - 21.10.1) <7A2E42E6-3AF2-3ECB-8A16-5C4AC41206EE> /System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout; 0x7fff27485000 - 0x7fff27567fff libxml2.2.dylib (34.9) <E0BF29C7-869B-3DD5-82AE-F36E6398091A> /usr/lib/libxml2.2.dylib; 0x7fff27568000 - 0x7fff275b4fff com.apple.CoreVideo (1.8 - 408.4) <50857F8D-C7CC-3609-B0DB-FC3C7382243B> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo; 0x7fff275b5000 - 0x7fff275b7fff com.apple.loginsupport (1.0 - 1) <B149BCAF-854C-3820-809D-15C6077FFB8B> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport; 0x7fff275b8000 - 0x7fff275e0fff com.apple.aps.framework (4.0 - 4.0) <D86ED827-F22D-3A52-B055-251478B29AE1> /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService; 0x7fff275e1000 - 0x7fff275fefff com.apple.UserManagement (1.0 - 1) <B6B35079-3860-384F-B7A2-584192BAAE70> /System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement; 0x7fff275ff000 - 0x7fff2779efff com.apple.cloudkit.CloudKit (970 - 970) <58BD254C-AAF1-3CC5-AAB7-2EF0A70BA033> /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit; 0x7fff27822000 - 0x7fff27bc7fff com.apple.CoreML (1.0 - 1) <21D89ABE-2DEC-3099-81CC-78D9ADB9D12B> /System/Library/Frameworks/CoreML.framework/Versions/A/CoreML; 0x7fff2851b000 - 0x7fff28598fff com.apple.corelocation (2420.12.16 - 2420.12.16) <8BD49018-78D4-3A81-88AD-47DE1A8E3BFE> /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation; 0x7fff28599000 - 0x7,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:30952,log,loginsupport,30952,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['log'],['loginsupport']
Testability,"ShewchukPCGLinearSolver is not an ODE solver. Instead, the scenes examples/Components/linearsolver/FEMBAR-ShewchukPCGLinearSolver.scn and in the folder examples/Components/linearsolver/preconditioner shows how to use this component. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2726:772,test,test,772,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2726,2,['test'],['test']
Testability,Short fix in main CMakeList regarding compilation with other than Win; CPackNSIS preventing from compiling. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/867:359,test,test,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/867,2,['test'],['test']
Testability,"Should fix #2486 (at least it was working for me :p ). The InteractionPerformerFactory was instantiated in SofaUserInteraction but not exported so I suppose other dlls using this factory was created their own InteractionPerformerFactory (creating discrepancies between the various registations) ; This is valid only for Windows (Mac/Linux is not using this import/export mechanism). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2495:922,test,test,922,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2495,2,['test'],['test']
Testability,"Should fix a failing unit test: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/3799/testReport/UnitTests/. The [dynamic_cast](https://github.com/sofa-framework/SofaPython3/blob/05195cd49b6db0dd028f1163ac407d459f6156f6/bindings/Modules/src/SofaPython3/SofaConstraintSolver/Binding_ConstraintSolver.cpp#L69) failed in:; ```cpp; py::cast(dynamic_cast<ConstraintSolverImpl*>(object));; ```. This is due to the lack of key function in the class ConstraintSolverImpl. See ; https://github.com/android/ndk/issues/533#issuecomment-335977747. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3240:26,test,test,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3240,4,['test'],"['test', 'testReport']"
Testability,Should fix crash and error on scenes:; - SimpleBox-Method2.scn; - testOmniDriverEmu.scn; - /scene-tests/archive/examples/Tutorials/Topologies/TopologyTetra2TriangleTopologicalMapping.scn. Fix unit test:; - ReadState_test.test_loadFailure. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/982:66,test,testOmniDriverEmu,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/982,5,['test'],"['test', 'testOmniDriverEmu', 'tests']"
Testability,"Should fix issue #3750. In this PR : ; - minor cleaning : set the default value to `d_indexFromRoot` in init(); - checks size of `m_fromRoot` wrt to `d_indexFromRoot`, if `d_indexFromRoot` is out of bounds, uses default value instead.; - typo? : I think there was a typo at line 534, for me it should be `xfromRoot[indexFromRoot]` instead of `xto[indexFromRoot]`. It makes more sense to me. Could be double checked. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3751:955,test,test,955,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751,2,['test'],['test']
Testability,"Should fix out-of-tree errors like https://github.com/guparan/SofaPython3/runs/7896706218?check_suite_focus=true; To be backported asap. [ci-depends-on https://github.com/sofa-framework/SofaGLFW/pull/57]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3229:744,test,test,744,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3229,2,['test'],['test']
Testability,"Should fix your infinite build issue @alxbilger :eyes: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2310:596,test,test,596,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2310,2,['test'],['test']
Testability,"Showcase of a pure cpp application with direct usage of components.; Replace glut with sofalgfw (dependency).; Can be built out-of-tree. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2792:676,test,test,676,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2792,2,['test'],['test']
Testability,"Showcase, not supposed to be merged as it is.; (prone to discussion at sofameetings). This PR is a prototype on how exception would be used with the example of the matrix functions invert(). (Issue #1924 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1882:746,test,test,746,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1882,2,['test'],['test']
Testability,Signed-off-by: duriez <christian.duriez@inria.fr>. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/844:302,test,test,302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/844,2,['test'],['test']
Testability,Significant improvement.; Just removing msg coming in the console in release due to CTRL key pressed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1130:353,test,test,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1130,2,['test'],['test']
Testability,"Silence the -Wattribute warning because of its verbosity g++.; It was supposed to be in pr #1643 but it appears to have been lost somehow... so this PR add it again. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1657:707,test,test,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1657,2,['test'],['test']
Testability,"Similar code is factorized to be reused. Also, in `AnimationLoopParallelScheduler`, I replaced the use of the class `StepTask` by a lambda function. Since it is no longer used, I deprecated the `StepTask` class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3607:751,test,test,751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607,2,['test'],['test']
Testability,"Similar scenes are introduced as a benchmark in order to compare their performances.; It's a cantilever beam simulated with 2.5k tetrahedra.; Depending on the scene, it is solved with either a Conjugate Gradient or a LDL solver.; The main difference is how the global system matrix is assembled (or not in case of a matrix free solver). This is defined by the template parameter of the linear solver. # Results. The results are the average duration in milliseconds of the AnimateVisitor step:. ```; MatrixAssembly_assembledCG_blocs.scn 6.54 ms; MatrixAssembly_assembledCG.scn 16.65 ms; MatrixAssembly_direct_blocs.scn 12.85 ms; MatrixAssembly_direct.scn 22.04 ms; MatrixAssembly_matrixfreeCG.scn 7.99 ms; ```. * MatrixAssembly_matrixfreeCG.scn: the linear solver is a Conjugate Gradient and the matrix is not built; * MatrixAssembly_assembledCG.scn: the linear solver is a Conjugate Gradient and the matrix is explicitly built; * MatrixAssembly_assembledCG_blocs.scn: the linear solver is a Conjugate Gradient and the bloc-based matrix is explicitly built; * MatrixAssembly_direct.scn: the linear solver is a LDL solver and the matrix is explicitly built; * MatrixAssembly_direct_blocs.scn: the linear solver is a LDL solver and the bloc-based matrix is explicitly built. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2208:35,benchmark,benchmark,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2208,3,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"Similar to #2322, but in the profiler. Buttons collapse or expand the displayed tree of timers.; ![image](https://user-images.githubusercontent.com/10572752/134161374-9985c29b-d864-4900-a9ac-a5e27a59c964.png). Note that those two buttons add extra space on top of the tree widget, but not so much because there was already an empty spacer here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2351:884,test,test,884,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2351,2,['test'],['test']
Testability,"Similar to TetrahedronFEMForceField, compute von mises per element and add option to draw it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4945:633,test,test,633,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4945,2,['test'],['test']
Testability,"Similar to https://github.com/sofa-framework/sofa/pull/3650; To make it compatible with Cuda 12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3868:636,test,test,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3868,2,['test'],['test']
Testability,"Similar to https://github.com/sofa-framework/sofa/pull/4720. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4721:600,test,test,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4721,2,['test'],['test']
Testability,"Similar to work done for triangles. Add tests on:; - Component creation; - Component init without topology; - Component init with empty topology; - checkDefaultAttributes; - check Wrong Attributes; - Check values at init; - Check values during simulation; - Check vertex position at init and after some steps. **Not all tests are activated** for `TetrahedronFEMForceField`, `CorotationalTetrahedralForceField `and `FastTetrahedralCorotationalForceField` because some are failing for now. . This PR doesn't change the behavior of the FEM, this will be done in next PR. ; This PR add tests to ensure the current behavior won't be broken in the incoming work. . ----- . Logs at this stage for 1000 steps of an horizontal fixed beam (resolution: 8x26x8). ; Average values of 6 executions of 4 successive simulations. | **ForceField** | **timeMin** | **timeMax** | **timeMean** |; | ------------- | ------------- | ------------- | ------------- |; | `TetrahedronFEMForceField` | 8.402152 | 8.643823 | 8.491758 |; | `TetrahedralCorotationalFEMForceField` | 13.79633 | 14.15237 | 13.96938 |; | `FastTetrahedralCorotationalForceField` | 5.71298 | 5.8269 | 5.772838 |. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2842:40,test,tests,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2842,6,"['Log', 'test']","['Logs', 'test', 'tests']"
Testability,"Similarly to SparseLDLSolver own exporter, it is now possible to set the arithmetic precision of the matrix export. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2724:655,test,test,655,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2724,2,['test'],['test']
Testability,"Similarly to Vec implementation, add a NoInit constructor for Quat and a type QuatNoInit<Real>. Speedup is minor compare to Mat and Vec of big size but still it makes a small diff when working with several Quat in loops. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3217:760,test,test,760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3217,2,['test'],['test']
Testability,"Simple PR to clean up DeformableOnRigidFrameMapping, during DEFROST team coding friday. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/848:339,test,test,339,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/848,2,['test'],['test']
Testability,"Simple add to make sure the return value corresponds to the package found (qt5 or 6). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2346:625,test,test,625,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2346,2,['test'],['test']
