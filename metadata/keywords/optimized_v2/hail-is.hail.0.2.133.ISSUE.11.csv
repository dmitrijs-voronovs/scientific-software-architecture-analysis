quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Integrability,"Bumps [ipython](https://github.com/ipython/ipython) from 7.34.0 to 8.10.0.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/ipython/ipython/commit/15ea1ed5a886d6c19c1cc4856f2cf04a2a547c57""><code>15ea1ed</code></a> release 8.10.0</li>; <li><a href=""https://github.com/ipython/ipython/commit/560ad109197c0f8373865896af369bb3b36fd229""><code>560ad10</code></a> DOC: Update what's new for 8.10 (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13939"">#13939</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/7557ade0ed927475d5ab5b573d0ea4febfb22683""><code>7557ade</code></a> DOC: Update what's new for 8.10</li>; <li><a href=""https://github.com/ipython/ipython/commit/385d69325319a5972ee9b5983638e3617f21cb1f""><code>385d693</code></a> Merge pull request from GHSA-29gw-9793-fvw7</li>; <li><a href=""https://github.com/ipython/ipython/commit/e548ee23ac460a99901f1cd43b94ae84a35ec393""><code>e548ee2</code></a> Swallow potential exceptions from showtraceback() (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13934"">#13934</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/0694b08b436203817059ec7e7136cf8561a6f013""><code>0694b08</code></a> MAINT: mock slowest test. (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13885"">#13885</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/865591252a67c6907fe03228b4053305715286e6""><code>8655912</code></a> MAINT: mock slowest test.</li>; <li><a href=""https://github.com/ipython/ipython/commit/a011765b44febfb11bae122d2ed7db763621ac8f""><code>a011765</code></a> Isolate the attack tests with setUp and tearDown methods</li>; <li><a href=""https://github.com/ipython/ipython/commit/c7a9470e540392c575aac46c3ee5cf4fe5123eb1""><code>c7a9470</code></a> Add some regression tests for this change</li>; <li><a href=""https://github.com/ipython/ipython/commit/fd34cf5f1f6e243243c738c6e0cf62eb682c4d68""><code>fd34cf5</code></a> Swallow p",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12683:452,depend,dependabot,452,https://hail.is,https://github.com/hail-is/hail/pull/12683,1,['depend'],['dependabot']
Integrability,"Bumps [ipython](https://github.com/ipython/ipython) from 7.34.0 to 8.11.0.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/ipython/ipython/commit/daa7eb27c677dd985bf5d1c259273677440812ef""><code>daa7eb2</code></a> release 8.11.0</li>; <li><a href=""https://github.com/ipython/ipython/commit/cbb8cc6b0b7441f9b78f1c75d8a2bf98d8f2bf9e""><code>cbb8cc6</code></a> fixup docs</li>; <li><a href=""https://github.com/ipython/ipython/commit/586a7e229dec25c1c4b9b327df33699f6b4f683f""><code>586a7e2</code></a> what's new version 8.11 (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13955"">#13955</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/72c421754862ecce148dc2c2ed28f52a705d5f34""><code>72c4217</code></a> Fix typos in docs (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13956"">#13956</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/a6d2c5f6a09e8f5a408694767174009f309a324d""><code>a6d2c5f</code></a> refine wording, and document ptk pin</li>; <li><a href=""https://github.com/ipython/ipython/commit/b1abe43bd79be1c31e2262c3649e05a43d7767cc""><code>b1abe43</code></a> Pin to not ptk 3.0.37,</li>; <li><a href=""https://github.com/ipython/ipython/commit/40334fcc49b72fedd98ec8c6f9b6742f1e3efa50""><code>40334fc</code></a> what's new version 8.11</li>; <li><a href=""https://github.com/ipython/ipython/commit/fc3b5250f23e7b0d0b59dfe841b16238b848852a""><code>fc3b525</code></a> Fix typos in docs</li>; <li><a href=""https://github.com/ipython/ipython/commit/75ecfe932fc9ca3505efbebc016b046ffc7d0d68""><code>75ecfe9</code></a> capture_output does not respect trailing semicolon (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13940"">#13940</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/3edbe3bd10c434af6458bdbe02269880b10b9adf""><code>3edbe3b</code></a> Resurrect fast (non-highlighted) traceback code for long files. (<a href=""https://github-redirect.dependabot.com",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12741:583,depend,dependabot,583,https://hail.is,https://github.com/hail-is/hail/pull/12741,2,['depend'],['dependabot']
Integrability,"Bumps [ipython](https://github.com/ipython/ipython) from 7.34.0 to 8.5.0.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/ipython/ipython/commit/311a3a0fd25d09cc4d314f900e31ee6ac2cfbba4""><code>311a3a0</code></a> release 8.5.0</li>; <li><a href=""https://github.com/ipython/ipython/commit/9fba0f5afea7bf015b44899c53425719927b3a7a""><code>9fba0f5</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13740"">#13740</a> from Carreau/update-wn</li>; <li><a href=""https://github.com/ipython/ipython/commit/85a4bd798f2def36f662f064f5f64b6ef0762801""><code>85a4bd7</code></a> update whatsnew</li>; <li><a href=""https://github.com/ipython/ipython/commit/0ae109903886a0eb5202d216b84be61324ba6333""><code>0ae1099</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13671"">#13671</a> from madbird1304/madbird1304/issue-13073-fix-paste-...</li>; <li><a href=""https://github.com/ipython/ipython/commit/c2c6349ff101cfb07b7821c4bd51d8ba2e74f759""><code>c2c6349</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13669"">#13669</a> from achhina/fix-issue-12967</li>; <li><a href=""https://github.com/ipython/ipython/commit/ae639fb056e0f36f97d72c32ff78d9220fca32a4""><code>ae639fb</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13648"">#13648</a> from wjandrea/patch-1</li>; <li><a href=""https://github.com/ipython/ipython/commit/f64d2b1d0a32b858cbcb540699c9d7997d9ae935""><code>f64d2b1</code></a> Merge branch 'main' into madbird1304/issue-13073-fix-paste-magic</li>; <li><a href=""https://github.com/ipython/ipython/commit/0a8b189aa2ef5e146dcd6aa461c7ba67e979c430""><code>0a8b189</code></a> Show &quot;maxlen&quot; in deque repr</li>; <li><a href=""https://github.com/ipython/ipython/commit/6e3d5b4f5290b03b42fc64c94f902281d1c739d9""><code>6e3d5b4</code></a> Replaced getting cwd from os.getcwd() to ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12180:436,depend,dependabot,436,https://hail.is,https://github.com/hail-is/hail/pull/12180,2,['depend'],['dependabot']
Integrability,"Bumps [ipython](https://github.com/ipython/ipython) from 7.34.0 to 8.6.0.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/ipython/ipython/commit/f8d0e4c79a6c3587e6355f1354fff265f73f4938""><code>f8d0e4c</code></a> release 8.6.0</li>; <li><a href=""https://github.com/ipython/ipython/commit/47fa8f1d9ba68dab38d8bbec67a131f70c15e187""><code>47fa8f1</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13803"">#13803</a> from Carreau/wn86</li>; <li><a href=""https://github.com/ipython/ipython/commit/0e83a6373574e28b7b8b1211ff49edfbb0119a37""><code>0e83a63</code></a> What's new version 8.6</li>; <li><a href=""https://github.com/ipython/ipython/commit/25ded577db7bd932a8966fa96859c6672aba986b""><code>25ded57</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13804"">#13804</a> from Carreau/sd-x</li>; <li><a href=""https://github.com/ipython/ipython/commit/98e3599e130e253f292679f74982a3a2cd3a7a7a""><code>98e3599</code></a> exclude 3.8</li>; <li><a href=""https://github.com/ipython/ipython/commit/fcdcddd5e528844672688e07bfa5188e48e37521""><code>fcdcddd</code></a> iterate</li>; <li><a href=""https://github.com/ipython/ipython/commit/8ca7b420a29ad781cc6c701dd4a6af0dd21b35c4""><code>8ca7b42</code></a> fix stack-data 0.6 failing tests</li>; <li><a href=""https://github.com/ipython/ipython/commit/93992a7ecd086bb24840ba03cd69960daf41575d""><code>93992a7</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13768"">#13768</a> from osherdp/feature/raise-when-opening-standard-st...</li>; <li><a href=""https://github.com/ipython/ipython/commit/f44e27095fd647cc22bf37874f183ec4db85949f""><code>f44e270</code></a> Refactor a bit of uniformity.</li>; <li><a href=""https://github.com/ipython/ipython/commit/1b5674ca8bbac62daa42eb460848173c0542cf2e""><code>1b5674c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipyth",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12442:436,depend,dependabot,436,https://hail.is,https://github.com/hail-is/hail/pull/12442,2,['depend'],['dependabot']
Integrability,"Bumps [ipython](https://github.com/ipython/ipython) from 7.34.0 to 8.9.0.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/ipython/ipython/commit/cca49a27b5b102c2e37dadb06889b84e67e1512f""><code>cca49a2</code></a> release 8.9.0</li>; <li><a href=""https://github.com/ipython/ipython/commit/4722a72e963464118914959e269ca280bf3409fb""><code>4722a72</code></a> second try at trying to fix RTD; (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13909"">#13909</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/25071d01eb87c0f6da9db124bce21076f45d463d""><code>25071d0</code></a> second try at trying to fix RTD;</li>; <li><a href=""https://github.com/ipython/ipython/commit/9f7ff3ec903ceba58956324c04fa38ed482a98c8""><code>9f7ff3e</code></a> bump RTD versions (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13908"">#13908</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/100ee27a5c8172d5b7856783b1cf2bd577faa542""><code>100ee27</code></a> bump rTD versions</li>; <li><a href=""https://github.com/ipython/ipython/commit/22e3cf313fa822ac2987e7aa901be0c40a8c8bf3""><code>22e3cf3</code></a> what's new 8.9 (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13907"">#13907</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/72f54950fc46a93c9c2c5a74d96702dae88fdb3c""><code>72f5495</code></a> what's new 8.9</li>; <li><a href=""https://github.com/ipython/ipython/commit/f13c898153084521527a82a617bdef7c8deabc16""><code>f13c898</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13905"">#13905</a> from Carreau/bad-fd</li>; <li><a href=""https://github.com/ipython/ipython/commit/4a065015a1b987ac6f30fff9180efbd93cffbed6""><code>4a06501</code></a> Remove opening/at-exit closing of devnull.</li>; <li><a href=""https://github.com/ipython/ipython/commit/9d0419bed36bae7228b2ad48296e58b918b1a9b8""><code>9d0419b</code></a> Merge pull reques",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12664:451,depend,dependabot,451,https://hail.is,https://github.com/hail-is/hail/pull/12664,2,['depend'],['dependabot']
Integrability,"Bumps [jna](https://github.com/java-native-access/jna) from 5.6.0 to 5.12.1.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/java-native-access/jna/blob/master/CHANGES.md"">jna's changelog</a>.</em></p>; <blockquote>; <h1>Release 5.12.1</h1>; <h2>Bug Fixes</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/java-native-access/jna/issues/1447"">#1447</a>: Null-check cleanable in <code>c.s.j.Memory#close</code> - <a href=""https://github.com/dbwiddis""><code>@​dbwiddis</code></a>.</li>; </ul>; <h1>Release 5.12.0</h1>; <h2>Features</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/java-native-access/jna/pull/1433"">#1433</a>: Add <code>CFEqual</code>, <code>CFDictionaryRef.ByReference</code>, <code>CFStringRef.ByReference</code> to <code>c.s.j.p.mac.CoreFoundation</code> - <a href=""https://github.com/shalupov""><code>@​shalupov</code></a></li>; <li><a href=""https://github-redirect.dependabot.com/java-native-access/jna/issues/978"">#978</a>: Remove use of finalizers in JNA and improve concurrency for <code>Memory</code>, <code>CallbackReference</code> and <code>NativeLibrary</code> - <a href=""https://github.com/matthiasblaesing""><code>@​matthiasblaesing</code></a>.</li>; <li><a href=""https://github-redirect.dependabot.com/java-native-access/jna/pull/1440"">#1440</a>: Support for LoongArch64 - <a href=""https://github.com/Panxuefeng-loongson""><code>@​Panxuefeng-loongson</code></a>.</li>; <li><a href=""https://github-redirect.dependabot.com/java-native-access/jna/pull/1444"">#1444</a>: Update embedded libffi to 1f14b3fa92d4442a60233e9596ddec428a985e3c and rebuild native libraries - <a href=""https://github.com/matthiasblaesing""><code>@​matthiasblaesing</code></a>.</li>; </ul>; <h2>Bug Fixes</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/java-native-access/jna/pull/1438"">#1438</a>: Handle arrays in structures with differing size - <a href=""https://github.com/matthiasblaesing""><code>@​matthiasblaesing</",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12438:347,depend,dependabot,347,https://hail.is,https://github.com/hail-is/hail/pull/12438,3,['depend'],['dependabot']
Integrability,"Bumps [jsonschema](https://github.com/python-jsonschema/jsonschema) from 4.6.0 to 4.15.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/python-jsonschema/jsonschema/releases"">jsonschema's releases</a>.</em></p>; <blockquote>; <h2>v4.15.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Enable dedicated API documentation page(s) by <a href=""https://github.com/Julian""><code>@​Julian</code></a> in <a href=""https://github-redirect.dependabot.com/python-jsonschema/jsonschema/pull/989"">python-jsonschema/jsonschema#989</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/python-jsonschema/jsonschema/compare/v4.14.0...v4.15.0"">https://github.com/python-jsonschema/jsonschema/compare/v4.14.0...v4.15.0</a></p>; <h2>v4.14.0</h2>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/python-jsonschema/jsonschema/compare/v4.13.0...v4.14.0"">https://github.com/python-jsonschema/jsonschema/compare/v4.13.0...v4.14.0</a></p>; <h2>v4.13.0</h2>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/python-jsonschema/jsonschema/compare/v4.12.1...v4.13.0"">https://github.com/python-jsonschema/jsonschema/compare/v4.12.1...v4.13.0</a></p>; <h2>v4.12.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Use rST markers in README by <a href=""https://github.com/hynek""><code>@​hynek</code></a> in <a href=""https://github-redirect.dependabot.com/python-jsonschema/jsonschema/pull/987"">python-jsonschema/jsonschema#987</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/python-jsonschema/jsonschema/compare/v4.12.0...v4.12.1"">https://github.com/python-jsonschema/jsonschema/compare/v4.12.0...v4.12.1</a></p>; <h2>v4.12.0</h2>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/python-jsonschema/jsonschema/compare/v4.11.0...v4.12.0"">https://github.com/python-jsonschema/jsonschema/compare/v4.11.0...v4.12.0</a></p>; <h2>v4.11.0</h2>; <h2>What's Changed</h2>; <ul>; <li>jsonschema deserves a ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12163:471,depend,dependabot,471,https://hail.is,https://github.com/hail-is/hail/pull/12163,1,['depend'],['dependabot']
Integrability,"Bumps [jsonschema](https://github.com/python-jsonschema/jsonschema) from 4.6.0 to 4.6.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/python-jsonschema/jsonschema/releases"">jsonschema's releases</a>.</em></p>; <blockquote>; <h2>v4.6.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Type annotate format checker methods by <a href=""https://github.com/sirosen""><code>@​sirosen</code></a> in <a href=""https://github-redirect.dependabot.com/python-jsonschema/jsonschema/pull/958"">python-jsonschema/jsonschema#958</a></li>; <li>Fix fuzzer to include instrumentation by <a href=""https://github.com/DavidKorczynski""><code>@​DavidKorczynski</code></a> in <a href=""https://github-redirect.dependabot.com/python-jsonschema/jsonschema/pull/965"">python-jsonschema/jsonschema#965</a></li>; <li>[pre-commit.ci] pre-commit autoupdate by <a href=""https://github.com/pre-commit-ci""><code>@​pre-commit-ci</code></a> in <a href=""https://github-redirect.dependabot.com/python-jsonschema/jsonschema/pull/967"">python-jsonschema/jsonschema#967</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/python-jsonschema/jsonschema/compare/v4.6.0...v4.6.1"">https://github.com/python-jsonschema/jsonschema/compare/v4.6.0...v4.6.1</a></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-jsonschema/jsonschema/blob/main/CHANGELOG.rst"">jsonschema's changelog</a>.</em></p>; <blockquote>; <h2>v4.6.1</h2>; <ul>; <li>Gut the (incomplete) implementation of <code>recursiveRef</code> on draft 2019. It; needs completing, but for now can lead to recursion errors (e.g. <a href=""https://github-redirect.dependabot.com/python-jsonschema/jsonschema/issues/847"">#847</a>).</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-jsonschema/jsonschema/commit/12c793cf1f3c11d038b1c097d560871180976138""><code>12c793c</code></a> v4.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11981:465,depend,dependabot,465,https://hail.is,https://github.com/hail-is/hail/pull/11981,3,['depend'],['dependabot']
Integrability,"Bumps [junixsocket-core](https://github.com/kohlschutter/junixsocket) from 2.3.2 to 2.6.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/kohlschutter/junixsocket/releases"">junixsocket-core's releases</a>.</em></p>; <blockquote>; <h2>junixsocket 2.6.1</h2>; <ul>; <li>Add AFSocket.checkConnectionClosed to probe connection status</li>; <li>Fix connection status checks and error handling</li>; <li>Fix bind behavior on Windows, support re-bind with reuseAddress</li>; <li>Fix and improve unit tests/selftests, remove several false-positive errors found in the wild (Azure Cloudshell/Microsoft CBL-Mariner 2.0, Amazon EC2, OpenBSD, etc.)</li>; <li>Fix SimpleTestServer demo, actually counting now to 5, not 6.</li>; <li>Make builds reproducible, align timestamps with git commit</li>; </ul>; <p>NOTE: If you're seeing unexpected errors in selftest, please verify with the attached <code>junixsocket-selftest-2.6.1-hotpatch-jar-with-dependencies.jar</code>. There may be false-positive socket timeout issues on very slow machines (e.g., qemu s390).</p>; <h2>junixsocket 2.6.0</h2>; <ul>; <li>Add support for GraalVM native-image</li>; <li>Add support for native-image selftest</li>; <li>Add support for AF_VSOCK (on Linux, and some macOS VMs)</li>; <li>Reintroduce deprecated legacy constructors for AFUNIXSocketAddress that were removed in 2.5.0.</li>; <li>Parent POM has been renamed from junixsocket-parent to junixsocket</li>; </ul>; <h2>junixsocket 2.5.2</h2>; <ul>; <li>Fix address handling in the Abstract Namespace</li>; <li>Fix support for very large datagrams (&gt; 1MB)</li>; <li>Fix InetAddress-wrapping of long addresses</li>; <li>Update Xcode support script, crossclang</li>; <li>Bump postgresql version in demo code</li>; <li>Fix dependency for custom architecture artifact</li>; </ul>; <h2>junixsocket 2.5.1</h2>; <ul>; <li>Add support for IBM z/OS (experimental, binary not included)</li>; <li>Add support for building from source on arm64",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12483:978,depend,dependencies,978,https://hail.is,https://github.com/hail-is/hail/pull/12483,1,['depend'],['dependencies']
Integrability,"Bumps [jupyter-client](https://github.com/jupyter/jupyter_client) from 7.3.1 to 7.3.4.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/jupyter/jupyter_client/releases"">jupyter-client's releases</a>.</em></p>; <blockquote>; <h2>v7.3.4</h2>; <h2>7.3.4</h2>; <p>(<a href=""https://github.com/jupyter/jupyter_client/compare/v7.3.3...ca4cb2d6a4b95a6925de85a47b323d2235032c74"">Full Changelog</a>)</p>; <h3>Bugs fixed</h3>; <ul>; <li>Revert latest changes to <code>ThreadedZMQSocketChannel</code> because they break Qtconsole <a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/pull/803"">#803</a> (<a href=""https://github.com/ccordoba12""><code>@​ccordoba12</code></a>)</li>; </ul>; <h3>Maintenance and upkeep improvements</h3>; <ul>; <li>Fix sphinx 5.0 support <a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/pull/804"">#804</a> (<a href=""https://github.com/blink1073""><code>@​blink1073</code></a>)</li>; <li>[pre-commit.ci] pre-commit autoupdate <a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/pull/799"">#799</a> (<a href=""https://github.com/pre-commit-ci""><code>@​pre-commit-ci</code></a>)</li>; </ul>; <h3>Contributors to this release</h3>; <p>(<a href=""https://github.com/jupyter/jupyter_client/graphs/contributors?from=2022-06-07&amp;to=2022-06-08&amp;type=c"">GitHub contributors page for this release</a>)</p>; <p><a href=""https://github.com/search?q=repo%3Ajupyter%2Fjupyter_client+involves%3Ablink1073+updated%3A2022-06-07..2022-06-08&amp;type=Issues""><code>@​blink1073</code></a> | <a href=""https://github.com/search?q=repo%3Ajupyter%2Fjupyter_client+involves%3Accordoba12+updated%3A2022-06-07..2022-06-08&amp;type=Issues""><code>@​ccordoba12</code></a> | <a href=""https://github.com/search?q=repo%3Ajupyter%2Fjupyter_client+involves%3Apre-commit-ci+updated%3A2022-06-07..2022-06-08&amp;type=Issues""><code>@​pre-commit-ci</code></a></p>; <h2>v7.3.3</h2>; <h2>7.3.3</h2>; <p>(<a href=""https:/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12110:597,depend,dependabot,597,https://hail.is,https://github.com/hail-is/hail/pull/12110,2,['depend'],['dependabot']
Integrability,"Bumps [jupyter-client](https://github.com/jupyter/jupyter_client) from 7.4.4 to 7.4.5.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/jupyter/jupyter_client/releases"">jupyter-client's releases</a>.</em></p>; <blockquote>; <h2>v7.4.5</h2>; <h2>7.4.5</h2>; <p>(<a href=""https://github.com/jupyter/jupyter_client/compare/v7.4.4...d27c8a497c6cbb1a232fbbe75cb1fd0f53faa9b0"">Full Changelog</a>)</p>; <h3>Maintenance and upkeep improvements</h3>; <ul>; <li>[7.x] Handle Jupyter Core Warning <a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/pull/875"">#875</a> (<a href=""https://github.com/blink1073""><code>@​blink1073</code></a>)</li>; <li>Clean up 7.x workflows <a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/pull/865"">#865</a> (<a href=""https://github.com/blink1073""><code>@​blink1073</code></a>)</li>; </ul>; <h3>Contributors to this release</h3>; <p>(<a href=""https://github.com/jupyter/jupyter_client/graphs/contributors?from=2022-10-25&amp;to=2022-11-10&amp;type=c"">GitHub contributors page for this release</a>)</p>; <p><a href=""https://github.com/search?q=repo%3Ajupyter%2Fjupyter_client+involves%3Ablink1073+updated%3A2022-10-25..2022-11-10&amp;type=Issues""><code>@​blink1073</code></a></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/jupyter/jupyter_client/blob/v7.4.5/CHANGELOG.md"">jupyter-client's changelog</a>.</em></p>; <blockquote>; <h2>7.4.5</h2>; <p>(<a href=""https://github.com/jupyter/jupyter_client/compare/v7.4.4...d27c8a497c6cbb1a232fbbe75cb1fd0f53faa9b0"">Full Changelog</a>)</p>; <h3>Maintenance and upkeep improvements</h3>; <ul>; <li>[7.x] Handle Jupyter Core Warning <a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/pull/875"">#875</a> (<a href=""https://github.com/blink1073""><code>@​blink1073</code></a>)</li>; <li>Clean up 7.x workflows <a href=""https://github-redirect.dependabot.com/jupyter/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12459:564,depend,dependabot,564,https://hail.is,https://github.com/hail-is/hail/pull/12459,2,['depend'],['dependabot']
Integrability,"Bumps [jupyter-client](https://github.com/jupyter/jupyter_client) from 7.4.4 to 7.4.6.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/jupyter/jupyter_client/releases"">jupyter-client's releases</a>.</em></p>; <blockquote>; <h2>v7.4.6</h2>; <h2>7.4.6</h2>; <p>(<a href=""https://github.com/jupyter/jupyter_client/compare/v7.4.5...3394591f161be4a19f9e61c66ba510d7e29afd59"">Full Changelog</a>)</p>; <h3>Bugs fixed</h3>; <ul>; <li>Reconcile connection information <a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/pull/879"">#879</a> (<a href=""https://github.com/kevin-bates""><code>@​kevin-bates</code></a>)</li>; </ul>; <h3>Contributors to this release</h3>; <p>(<a href=""https://github.com/jupyter/jupyter_client/graphs/contributors?from=2022-11-10&amp;to=2022-11-15&amp;type=c"">GitHub contributors page for this release</a>)</p>; <p><a href=""https://github.com/search?q=repo%3Ajupyter%2Fjupyter_client+involves%3Ameeseeksmachine+updated%3A2022-11-10..2022-11-15&amp;type=Issues""><code>@​meeseeksmachine</code></a></p>; <h2>v7.4.5</h2>; <h2>7.4.5</h2>; <p>(<a href=""https://github.com/jupyter/jupyter_client/compare/v7.4.4...d27c8a497c6cbb1a232fbbe75cb1fd0f53faa9b0"">Full Changelog</a>)</p>; <h3>Maintenance and upkeep improvements</h3>; <ul>; <li>[7.x] Handle Jupyter Core Warning <a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/pull/875"">#875</a> (<a href=""https://github.com/blink1073""><code>@​blink1073</code></a>)</li>; <li>Clean up 7.x workflows <a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/pull/865"">#865</a> (<a href=""https://github.com/blink1073""><code>@​blink1073</code></a>)</li>; </ul>; <h3>Contributors to this release</h3>; <p>(<a href=""https://github.com/jupyter/jupyter_client/graphs/contributors?from=2022-10-25&amp;to=2022-11-10&amp;type=c"">GitHub contributors page for this release</a>)</p>; <p><a href=""https://github.com/search?q=repo%3Ajupyter%2Fjupyter_client+involv",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12467:538,depend,dependabot,538,https://hail.is,https://github.com/hail-is/hail/pull/12467,1,['depend'],['dependabot']
Integrability,"Bumps [jupyter-client](https://github.com/jupyter/jupyter_client) from 7.4.8 to 8.0.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/jupyter/jupyter_client/releases"">jupyter-client's releases</a>.</em></p>; <blockquote>; <h2>v8.0.2</h2>; <h2>8.0.2</h2>; <p>(<a href=""https://github.com/jupyter/jupyter_client/compare/v8.0.1...717d36edcd9ce595f727d8b5a27e270c2a6e2c46"">Full Changelog</a>)</p>; <h3>Bugs fixed</h3>; <ul>; <li>Add papermill downstream check and fix kernel client replies <a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/pull/925"">#925</a> (<a href=""https://github.com/blink1073""><code>@​blink1073</code></a>)</li>; </ul>; <h3>Maintenance and upkeep improvements</h3>; <ul>; <li>Adopt more ruff rules <a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/pull/924"">#924</a> (<a href=""https://github.com/blink1073""><code>@​blink1073</code></a>)</li>; <li>Prefer print in kernelspecapp <a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/pull/923"">#923</a> (<a href=""https://github.com/blink1073""><code>@​blink1073</code></a>)</li>; </ul>; <h3>Contributors to this release</h3>; <p>(<a href=""https://github.com/jupyter/jupyter_client/graphs/contributors?from=2023-01-26&amp;to=2023-01-30&amp;type=c"">GitHub contributors page for this release</a>)</p>; <p><a href=""https://github.com/search?q=repo%3Ajupyter%2Fjupyter_client+involves%3Ablink1073+updated%3A2023-01-26..2023-01-30&amp;type=Issues""><code>@​blink1073</code></a></p>; <h2>v8.0.1</h2>; <h2>8.0.1</h2>; <p>(<a href=""https://github.com/jupyter/jupyter_client/compare/v8.0.0...dc6113c360e05122430b8e130374e9f4e4b701d7"">Full Changelog</a>)</p>; <h3>Bugs fixed</h3>; <ul>; <li>Fix json_output in kernelspec app <a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/pull/921"">#921</a> (<a href=""https://github.com/blink1073""><code>@​blink1073</code></a>)</li>; </ul>; <h3>Contributors to this release</h3>; <p>(<a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12656:566,depend,dependabot,566,https://hail.is,https://github.com/hail-is/hail/pull/12656,2,['depend'],['dependabot']
Integrability,"Bumps [keyrings-alt](https://github.com/jaraco/keyrings.alt) from 3.5.2 to 4.2.0.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/jaraco/keyrings.alt/blob/main/CHANGES.rst"">keyrings-alt's changelog</a>.</em></p>; <blockquote>; <h1>v4.2.0</h1>; <p><a href=""https://github-redirect.dependabot.com/jaraco/keyrings.alt/issues/46"">#46</a>: EncryptedFileKeyring now supports both pycryptodome and; pycryptodomex (preferring the latter).</p>; <h1>v4.1.2</h1>; <p>Updated to work with keyring 23.9+ (no longer depending on properties; module).</p>; <h1>v4.1.1</h1>; <p>Refresh package metadata.</p>; <p>Enrolled with Tidelift.</p>; <h1>v4.1.0</h1>; <p><a href=""https://github-redirect.dependabot.com/jaraco/keyrings.alt/issues/44"">#44</a>: Bump upper bound on pyfs.</p>; <p>Refresh package metadata.</p>; <h1>v4.0.2</h1>; <p><a href=""https://github-redirect.dependabot.com/jaraco/keyrings.alt/issues/43"">#43</a>: Tests are no longer included in the install.</p>; <h1>v4.0.1</h1>; <p>Package refresh and minor cleanup.</p>; <h1>v4.0.0</h1>; <p><a href=""https://github-redirect.dependabot.com/jaraco/keyrings.alt/issues/41"">#41</a>: Instead of PyCrypto or PyCryptodome, the encrypting backend; now relies on PyCryptodomex.</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/jaraco/keyrings.alt/commit/a2ef1a8e15859bb90f499e6be88c14468f246f8e""><code>a2ef1a8</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/jaraco/keyrings.alt/issues/46"">#46</a> from TheChymera/cryptodome</li>; <li><a href=""https://github.com/jaraco/keyrings.alt/commit/dfab9b2846f7a19bebe788046b167a19a579fb45""><code>dfab9b2</code></a> 👹 Feed the hobgoblins (delint).</li>; <li><a href=""https://github.com/jaraco/keyrings.alt/commit/757afb5d5f3ada3d954eff981e9279f4e348f1e9""><code>757afb5</code></a> ⚫ Fade to black.</li>; <li><a href=""https://github.com/jaraco/keyrings.alt/commit/1614724e27124672f723735ff208a59a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12448:322,depend,dependabot,322,https://hail.is,https://github.com/hail-is/hail/pull/12448,4,['depend'],"['dependabot', 'depending']"
Integrability,"Bumps [kubernetes-asyncio](https://github.com/tomplus/kubernetes_asyncio) from 19.15.1 to 23.6.0.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/tomplus/kubernetes_asyncio/blob/master/CHANGELOG.md"">kubernetes-asyncio's changelog</a>.</em></p>; <blockquote>; <h1>v23.6.0</h1>; <h3>API Change</h3>; <ul>; <li>Omits alpha-level enums from the static openapi file captured in api/openapi-spec (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/109179"">kubernetes/kubernetes#109179</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG Apps and Auth]</li>; <li>Fixes a regression in v1beta1 PodDisruptionBudget handling of &quot;strategic merge patch&quot;-type API requests for the <code>selector</code> field. Prior to 1.21, these requests would merge <code>matchLabels</code> content and replace <code>matchExpressions</code> content. In 1.21, patch requests touching the <code>selector</code> field started replacing the entire selector. This is consistent with server-side apply and the v1 PodDisruptionBudget behavior, but should not have been changed for v1beta1. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/108139"">kubernetes/kubernetes#108139</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG Auth and Testing]</li>; <li>Fix OpenAPI serialization of the x-kubernetes-validations field (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/108030"">kubernetes/kubernetes#108030</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG API Machinery]</li>; <li>A new field <code>omitManagedFields</code> has been added to both <code>audit.Policy</code> and <code>audit.PolicyRule</code>; so cluster operators can opt in to omit managed fields of the request and response bodies from; being written to the API audit log. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/94986"">kubernetes/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11957:466,depend,dependabot,466,https://hail.is,https://github.com/hail-is/hail/pull/11957,1,['depend'],['dependabot']
Integrability,"Bumps [kubernetes-asyncio](https://github.com/tomplus/kubernetes_asyncio) from 19.15.1 to 24.2.2.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/tomplus/kubernetes_asyncio/blob/master/CHANGELOG.md"">kubernetes-asyncio's changelog</a>.</em></p>; <blockquote>; <h1>v24.2.2</h1>; <ul>; <li>fix: config reader handles bool types (<a href=""https://github-redirect.dependabot.com/tomplus/kubernetes_asyncio/pull/218"">#218</a>, <a href=""https://github.com/tomplus""><code>@​tomplus</code></a>)</li>; </ul>; <h1>v24.2.1</h1>; <ul>; <li>fixed watch.stream bug of not working with apis with follow kwarg (<a href=""https://github-redirect.dependabot.com/tomplus/kubernetes_asyncio/pull/216"">#216</a>, <a href=""https://github.com/mcreng""><code>@​mcreng</code></a>)</li>; </ul>; <h1>v24.2.0</h1>; <p>Kubernetes API Version: v1.24.2</p>; <h3>API Change</h3>; <ul>; <li>Add 2 new options for kube-proxy running in winkernel mode. <code>--forward-healthcheck-vip</code>, if specified as true, health check traffic whose destination is service VIP will be forwarded to kube-proxy's healthcheck service. <code>--root-hnsendpoint-name</code> specifies the name of the hns endpoint for the root network namespace. This option enables the pass-through load balancers like Google's GCLB to correctly health check the backend services. Without this change, the health check packets is dropped, and Windows node will be considered to be unhealthy by those load balancers. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/99287"">kubernetes/kubernetes#99287</a>, <a href=""https://github.com/anfernee""><code>@​anfernee</code></a>)</li>; <li>Added CEL runtime cost calculation into CustomerResource validation. CustomerResource validation will fail if runtime cost exceeds the budget. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/108482"">kubernetes/kubernetes#108482</a>, <a href=""https://github.com/cici37""><code>@​cici37</code><",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12196:401,depend,dependabot,401,https://hail.is,https://github.com/hail-is/hail/pull/12196,2,['depend'],['dependabot']
Integrability,"Bumps [kubernetes-asyncio](https://github.com/tomplus/kubernetes_asyncio) from 9.1.0 to 19.15.1.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/tomplus/kubernetes_asyncio/blob/master/CHANGELOG.md"">kubernetes-asyncio's changelog</a>.</em></p>; <blockquote>; <h1>v19.15.1</h1>; <ul>; <li>fix: watch returns <code>raw_object</code> if detection of returned objects fail (<a href=""https://github-redirect.dependabot.com/tomplus/kubernetes_asyncio/pull/177"">#177</a>, <a href=""https://github.com/tomplus""><code>@​tomplus</code></a>)</li>; </ul>; <h1>v19.15.0</h1>; <ul>; <li>feat: Kubernetes API Version: v1.19.15</li>; </ul>; <h3>API Change</h3>; <ul>; <li>We have added a new Priority &amp; Fairness rule that exempts all probes (/readyz, /healthz, /livez) to prevent; restarting of &quot;healthy&quot; kube-apiserver instance(s) by kubelet. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/101113"">kubernetes/kubernetes#101113</a>, <a href=""https://github.com/tkashem""><code>@​tkashem</code></a>) [SIG API Machinery]</li>; <li>Fixes using server-side apply with APIService resources (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/100713"">kubernetes/kubernetes#100713</a>, <a href=""https://github.com/kevindelgado""><code>@​kevindelgado</code></a>) [SIG API Machinery, Apps, Scheduling and Testing]</li>; <li>Regenerate protobuf code to fix CVE-2021-3121 (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/100515"">kubernetes/kubernetes#100515</a>, <a href=""https://github.com/joelsmith""><code>@​joelsmith</code></a>) [SIG API Machinery, Auth, CLI, Cloud Provider, Cluster Lifecycle, Instrumentation, Node and Storage]</li>; <li>Kubernetes is now built using go1.15.8 (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/99093"">kubernetes/kubernetes#99093</a>, <a href=""https://github.com/cpanato""><code>@​cpanato</code></a>) [SIG Cloud Provider, Instrumentat",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11462:444,depend,dependabot,444,https://hail.is,https://github.com/hail-is/hail/pull/11462,2,['depend'],['dependabot']
Integrability,"Bumps [mccabe](https://github.com/pycqa/mccabe) from 0.6.1 to 0.7.0.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/PyCQA/mccabe/commit/835a5400881b7460998be51d871fd36f836db3c9""><code>835a540</code></a> Prepare for v0.7.0</li>; <li><a href=""https://github.com/PyCQA/mccabe/commit/2d4dd9435fcb05aaa89ba0392a84cb1d30a87dc9""><code>2d4dd94</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pycqa/mccabe/issues/81"">#81</a> from MaxG87/master</li>; <li><a href=""https://github.com/PyCQA/mccabe/commit/7c54a18f26ace8531d7ec6e60848ddfee5b2a38a""><code>7c54a18</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pycqa/mccabe/issues/88"">#88</a> from cclauss/patch-1</li>; <li><a href=""https://github.com/PyCQA/mccabe/commit/ff7e1ea52948e0f7b0ca48147141dcae67f54d80""><code>ff7e1ea</code></a> [flake8] max-line-length = 88</li>; <li><a href=""https://github.com/PyCQA/mccabe/commit/2dfdfb1ecfeb0d62c999ab30a9ea9abb646de52b""><code>2dfdfb1</code></a> flake8 --max-line-length=88 again</li>; <li><a href=""https://github.com/PyCQA/mccabe/commit/7285c3be5be8f5a8606eb3615b962797c3dfaff0""><code>7285c3b</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pycqa/mccabe/issues/87"">#87</a> from cclauss/patch-1</li>; <li><a href=""https://github.com/PyCQA/mccabe/commit/78ce3839d6910a99021a4b09a85d3486897b47b7""><code>78ce383</code></a> tox.ini: flake8 --max-line-length=88</li>; <li><a href=""https://github.com/PyCQA/mccabe/commit/4ba21d2e8db92534914a89f44b5dfd0fb2e29e9c""><code>4ba21d2</code></a> Travis CI: allow_failures in Python end of life branches</li>; <li><a href=""https://github.com/PyCQA/mccabe/commit/80794d37d7d3e35cf243877a396e53f70243e154""><code>80794d3</code></a> Apply suggestions from code review</li>; <li><a href=""https://github.com/PyCQA/mccabe/commit/e864119dca577a38552b0d32c66d0ef3dc7779e0""><code>e864119</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pycqa",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12449:430,depend,dependabot,430,https://hail.is,https://github.com/hail-is/hail/pull/12449,2,['depend'],['dependabot']
Integrability,"Bumps [minimist](https://github.com/substack/minimist) from 1.2.5 to 1.2.6.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/substack/minimist/commit/7efb22a518b53b06f5b02a1038a88bd6290c2846""><code>7efb22a</code></a> 1.2.6</li>; <li><a href=""https://github.com/substack/minimist/commit/ef88b9325f77b5ee643ccfc97e2ebda577e4c4e2""><code>ef88b93</code></a> security notice for additional prototype pollution issue</li>; <li><a href=""https://github.com/substack/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d""><code>c2b9819</code></a> isConstructorOrProto adapted from PR</li>; <li><a href=""https://github.com/substack/minimist/commit/bc8ecee43875261f4f17eb20b1243d3ed15e70eb""><code>bc8ecee</code></a> test from prototype pollution PR</li>; <li>See full diff in <a href=""https://github.com/substack/minimist/compare/1.2.5...1.2.6"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimist&package-manager=npm_and_yarn&previous-version=1.2.5&new-version=1.2.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and blo",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11653:918,Depend,Dependabot,918,https://hail.is,https://github.com/hail-is/hail/pull/11653,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"Bumps [mistune](https://github.com/lepture/mistune) from 0.8.4 to 2.0.3.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/lepture/mistune/releases"">mistune's releases</a>.</em></p>; <blockquote>; <h2>Version 2.0.2</h2>; <p>Fix <code>escape_url </code> via <a href=""https://github-redirect.dependabot.com/lepture/mistune/pull/295"">lepture/mistune#295</a></p>; <h2>Version 2.0.1</h2>; <p>Fix XSS for image link syntax.</p>; <h2>Version 2.0.0</h2>; <p>First release of Mistune v2.</p>; <h2>Version 2.0.0 RC1</h2>; <p>In this release, we have a <strong>Security Fix</strong> for harmful links.</p>; <h2>Version 2.0.0 Alpha 1</h2>; <p>This is the first release of v2. An alpha version for users to have a preview of the new mistune.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/lepture/mistune/blob/master/docs/changes.rst"">mistune's changelog</a>.</em></p>; <blockquote>; <h2>Changelog</h2>; <p>Here is the full history of mistune v2.</p>; <p>Version 2.0.4</p>; <pre><code>; Released on Jul 15, 2022; <ul>; <li>Fix <code>url</code> plugin in <code>&amp;lt;a&amp;gt;</code> tag</li>; <li>Fix <code>*</code> formatting</li>; </ul>; <p>Version 2.0.3; </code></pre></p>; <p>Released on Jun 27, 2022</p>; <ul>; <li>Fix <code>table</code> plugin</li>; <li>Security fix for CVE-2022-34749</li>; </ul>; <p>Version 2.0.2</p>; <pre><code>; Released on Jan 14, 2022; <p>Fix <code>escape_url</code></p>; <p>Version 2.0.1; </code></pre></p>; <p>Released on Dec 30, 2021</p>; <p>XSS fix for image link syntax.</p>; <p>Version 2.0.0</p>; <pre><code>; Released on Dec 5, 2021; <p>This is the first non-alpha release of mistune v2.</p>; <p>Version 2.0.0rc1; </code></pre></p>; <p>Released on Feb 16, 2021</p>; <p>Version 2.0.0a6</p>; <pre><code>; &lt;/tr&gt;&lt;/table&gt; ; </code></pre>; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""ht",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12064:334,depend,dependabot,334,https://hail.is,https://github.com/hail-is/hail/pull/12064,1,['depend'],['dependabot']
Integrability,"Bumps [mistune](https://github.com/lepture/mistune) from 0.8.4 to 2.0.4.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/lepture/mistune/releases"">mistune's releases</a>.</em></p>; <blockquote>; <h2>Version 2.0.2</h2>; <p>Fix <code>escape_url </code> via <a href=""https://github-redirect.dependabot.com/lepture/mistune/pull/295"">lepture/mistune#295</a></p>; <h2>Version 2.0.1</h2>; <p>Fix XSS for image link syntax.</p>; <h2>Version 2.0.0</h2>; <p>First release of Mistune v2.</p>; <h2>Version 2.0.0 RC1</h2>; <p>In this release, we have a <strong>Security Fix</strong> for harmful links.</p>; <h2>Version 2.0.0 Alpha 1</h2>; <p>This is the first release of v2. An alpha version for users to have a preview of the new mistune.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/lepture/mistune/blob/master/docs/changes.rst"">mistune's changelog</a>.</em></p>; <blockquote>; <h2>Changelog</h2>; <p>Here is the full history of mistune v2.</p>; <p>Version 2.0.4</p>; <pre><code>; Released on Jul 15, 2022; <ul>; <li>Fix <code>url</code> plugin in <code>&amp;lt;a&amp;gt;</code> tag</li>; <li>Fix <code>*</code> formatting</li>; </ul>; <p>Version 2.0.3; </code></pre></p>; <p>Released on Jun 27, 2022</p>; <ul>; <li>Fix <code>table</code> plugin</li>; <li>Security fix for CVE-2022-34749</li>; </ul>; <p>Version 2.0.2</p>; <pre><code>; Released on Jan 14, 2022; <p>Fix <code>escape_url</code></p>; <p>Version 2.0.1; </code></pre></p>; <p>Released on Dec 30, 2021</p>; <p>XSS fix for image link syntax.</p>; <p>Version 2.0.0</p>; <pre><code>; Released on Dec 5, 2021; <p>This is the first non-alpha release of mistune v2.</p>; <p>Version 2.0.0rc1; </code></pre></p>; <p>Released on Feb 16, 2021</p>; <p>Version 2.0.0a6</p>; <pre><code>; &lt;/tr&gt;&lt;/table&gt; ; </code></pre>; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""ht",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12066:334,depend,dependabot,334,https://hail.is,https://github.com/hail-is/hail/pull/12066,2,['depend'],['dependabot']
Integrability,"Bumps [msal-extensions](https://github.com/AzureAD/microsoft-authentication-extensions-for-python) from 0.3.1 to 1.0.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/AzureAD/microsoft-authentication-extensions-for-python/releases"">msal-extensions's releases</a>.</em></p>; <blockquote>; <h2>MSAL Extensions for Python, 1.0.0</h2>; <p>This package is now considered stable and production-ready.</p>; <ul>; <li>New: Add a new platform-independent <code>build_encrypted_persistence()</code> API. (<a href=""https://github-redirect.dependabot.com/AzureAD/microsoft-authentication-extensions-for-python/issues/87"">#87</a>, <a href=""https://github-redirect.dependabot.com/AzureAD/microsoft-authentication-extensions-for-python/issues/110"">#110</a>)</li>; <li>Remove: Old TokenCache API which has been deprecated for 2 years. (<a href=""https://github-redirect.dependabot.com/AzureAD/microsoft-authentication-extensions-for-python/issues/110"">#110</a>)</li>; <li>Enhancement: Make all platform-dependent parameters optional (<a href=""https://github-redirect.dependabot.com/AzureAD/microsoft-authentication-extensions-for-python/issues/103"">#103</a>)</li>; <li>Enhancement: Provide <code>PersistenceEncryptError</code> and <code>PersistenceDecryptError</code>, currently raised when encryption on Windows fails. (<a href=""https://github-redirect.dependabot.com/AzureAD/microsoft-authentication-extensions-for-python/issues/108"">#108</a>)</li>; <li>Enhancement: The data file will be created with <code>600</code> permission when running in Unix-like systems. (<a href=""https://github-redirect.dependabot.com/AzureAD/microsoft-authentication-extensions-for-python/issues/107"">#107</a>)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/AzureAD/microsoft-authentication-extensions-for-python/commit/a88fa673af3602fe7c8c922314599b0c245e7add""><code>a88fa67</code></a> Merge branch 'release-1.0.0'</li",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11992:575,depend,dependabot,575,https://hail.is,https://github.com/hail-is/hail/pull/11992,3,['depend'],['dependabot']
Integrability,"Bumps [msrest](https://github.com/Azure/msrest-for-python) from 0.6.21 to 0.7.1.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/Azure/msrest-for-python/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=msrest&package-manager=pip&previous-version=0.6.21&new-version=0.7.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this d",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11965:262,Depend,Dependabot,262,https://hail.is,https://github.com/hail-is/hail/pull/11965,9,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [mypy](https://github.com/python/mypy) from 0.780 to 0.931.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python/mypy/commit/4486d764c07a1cee9792d691e8e85cedfed2a451""><code>4486d76</code></a> Bump version to 0.931</li>; <li><a href=""https://github.com/python/mypy/commit/d7fe756ddf2c5166a336c02624dccf74111f32a6""><code>d7fe756</code></a> Restore removed builtin_type() api method (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/11932"">#11932</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/4d64557848de9a7749412270d0e93dd9e3e1a494""><code>4d64557</code></a> stubtest: fix literal type construction (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/11931"">#11931</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/5b3280e667aea60c4a22b3e1df4fad6c5df421bd""><code>5b3280e</code></a> Fix crash on <code>ErasedType</code> and <code>covers_at_runtime</code> (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/11924"">#11924</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/73de602cf62f7a68eaa6a11bf04f01eebaf9a034""><code>73de602</code></a> Stricter None handling with --no-strict-optional (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/11717"">#11717</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/221a7f34cbfdc0dafe7f84042f2a707cbfdbf60f""><code>221a7f3</code></a> Fix PEP 585 type aliases in stubs (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/11918"">#11918</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/b40c3d0bae812d3c38096973e84479e20353d5a9""><code>b40c3d0</code></a> Handle <code>NoReturn</code> type aliases (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/11912"">#11912</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/3f2143d55c2f2ec6afc44b42541901aaaf12614a""><code>3f2143d</code></a> Always allow use of <code>type[T]</code> in stubs (<a href=""https://github-redir",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11498:452,depend,dependabot,452,https://hail.is,https://github.com/hail-is/hail/pull/11498,3,['depend'],['dependabot']
Integrability,"Bumps [mypy](https://github.com/python/mypy) from 0.780 to 0.941.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python/mypy/commit/4e18c789d177b858fad6499018f7302e3ee75199""><code>4e18c78</code></a> Bump version to 0.941</li>; <li><a href=""https://github.com/python/mypy/commit/8c11393d3158275a5489571038294f610835a2b3""><code>8c11393</code></a> Typeshed cherry-pick: Use import instead of type alias in <code>email/message.pyi</code>...</li>; <li><a href=""https://github.com/python/mypy/commit/48ff811fdf666e8a3149a692c0238f9019f55e58""><code>48ff811</code></a> Bump version to 0.940</li>; <li><a href=""https://github.com/python/mypy/commit/739028085e82368ff646249588e85c17ebf1c636""><code>7390280</code></a> Trigger wheel builds</li>; <li><a href=""https://github.com/python/mypy/commit/942395acb984e272eb65caf2e6e0de2aba9fcb87""><code>942395a</code></a> Minor documentation updates (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/12329"">#12329</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/5954bc9cbfef4a8fff658cde00016f12d03b46f8""><code>5954bc9</code></a> Update copyright in LICENSE (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/12330"">#12330</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/8650f5c2eedc26f11b6f5c35cf0c0d752aaf51fb""><code>8650f5c</code></a> stubgen: fix non default keyword-only argument positioning (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/12303"">#12303</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/226661f62f365102f5fd913b39b32ed3f12e208b""><code>226661f</code></a> Exhaustiveness checking for match statements (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/12267"">#12267</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/fce1b548be74f7c65f8e3645f2a2b46aeff0c5a8""><code>fce1b54</code></a> CI: Do not run mypy_primer on stubtest/stubgen PRs (<a href=""https://github-redirect.dependabot.com/python/mypy/is",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11573:446,message,message,446,https://hail.is,https://github.com/hail-is/hail/pull/11573,6,"['depend', 'message']","['dependabot', 'message']"
Integrability,"Bumps [mypy](https://github.com/python/mypy) from 0.780 to 0.942.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python/mypy/commit/38f1e30e8137ccc1aad6a4f113eb4360c6206539""><code>38f1e30</code></a> Update version to 0.942</li>; <li><a href=""https://github.com/python/mypy/commit/1c836685da13f11287ae6d6931c04337f881ec40""><code>1c83668</code></a> Let overload item have a wider return type than implementation (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/12435"">#12435</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/67088e558dc24a2c6c231db542a367923dfdc049""><code>67088e5</code></a> Pin the version of bugbear (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/12436"">#12436</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/367b29d4aac16fc7493abffe2df0d8f477c23923""><code>367b29d</code></a> Make order of processing the builtins SCC predictable (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/12431"">#12431</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/f81b228e66d8a95cc39247f189e7be7e894f7f92""><code>f81b228</code></a> Fix inheritance false positives with dataclasses/attrs (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/12411"">#12411</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/7e09c2a100209072429e290d2f7b9b8007b8629c""><code>7e09c2a</code></a> Support overriding dunder attributes in Enum subclass (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/12138"">#12138</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/837543efb616b14e2f800db6962d216621dee4d7""><code>837543e</code></a> Fix crash in match statement if class name is undefined (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/12417"">#12417</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/6606dbe98d09170d3ad810bc791a16d99ceb2281""><code>6606dbe</code></a> Allow non-final <strong>match_args</strong> and ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11667:475,depend,dependabot,475,https://hail.is,https://github.com/hail-is/hail/pull/11667,6,['depend'],['dependabot']
Integrability,"Bumps [mypy](https://github.com/python/mypy) from 0.950 to 0.982.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python/mypy/commit/1c2b899fa9029538b9b9e6d30401901d94536202""><code>1c2b899</code></a> Bump version to 0.982</li>; <li><a href=""https://github.com/python/mypy/commit/51d9858b09c82499c79023d0a80693a71baa7bed""><code>51d9858</code></a> Restore Type vs Callable special-casing that was broken in refactoring (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/13784"">#13784</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/d03f201762df7138c6da157b5cbb8e634acef45f""><code>d03f201</code></a> Suggest using upper bound for unbound tvar (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/13730"">#13730</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/5b17cc6c393280326ed15d763e599cbaeefbc0e6""><code>5b17cc6</code></a> Fix overload overlap check for UninhabitedType (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/13461"">#13461</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/c7b4714e1f5e3cb8f3fec7426b6538fe1a3dcab1""><code>c7b4714</code></a> Update version to 0.981</li>; <li><a href=""https://github.com/python/mypy/commit/2bd7da21462a59643f2aec546304db1a624ba285""><code>2bd7da2</code></a> [0.980 backport] build changes (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/13688"">#13688</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/2b2953a1392368f623331d5168ccdfd39e37bbee""><code>2b2953a</code></a> [0.980 backport] Update pos-only unit tests for Python 3.10.7 (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/13660"">#13660</a>) (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/13665"">#13665</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/ada007841f6a96f68d114769624a0f7b523814a7""><code>ada0078</code></a> Remove dev from version</li>; <li><a href=""https://github.com/python/mypy/commit/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12291:481,depend,dependabot,481,https://hail.is,https://github.com/hail-is/hail/pull/12291,3,['depend'],['dependabot']
Integrability,"Bumps [nbconvert](https://github.com/jupyter/nbconvert) from 6.5.0 to 7.0.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/jupyter/nbconvert/releases"">nbconvert's releases</a>.</em></p>; <blockquote>; <h2>7.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update to Mistune 2.0.2 by <a href=""https://github.com/TiagodePAlves""><code>@​TiagodePAlves</code></a> in <a href=""https://github-redirect.dependabot.com/jupyter/nbconvert/pull/1764"">jupyter/nbconvert#1764</a></li>; <li>Clean up markdown parsing by <a href=""https://github.com/blink1073""><code>@​blink1073</code></a> in <a href=""https://github-redirect.dependabot.com/jupyter/nbconvert/pull/1774"">jupyter/nbconvert#1774</a></li>; <li>Switch to hatch build backend by <a href=""https://github.com/blink1073""><code>@​blink1073</code></a> in <a href=""https://github-redirect.dependabot.com/jupyter/nbconvert/pull/1777"">jupyter/nbconvert#1777</a></li>; <li>switch from entrypoints to importlib-metadata by <a href=""https://github.com/konstin""><code>@​konstin</code></a> in <a href=""https://github-redirect.dependabot.com/jupyter/nbconvert/pull/1782"">jupyter/nbconvert#1782</a></li>; <li>Add recursive flag for glob notebook search by <a href=""https://github.com/paoloalba""><code>@​paoloalba</code></a> in <a href=""https://github-redirect.dependabot.com/jupyter/nbconvert/pull/1785"">jupyter/nbconvert#1785</a></li>; <li>Updates for sphinx 5.0 support by <a href=""https://github.com/blink1073""><code>@​blink1073</code></a> in <a href=""https://github-redirect.dependabot.com/jupyter/nbconvert/pull/1788"">jupyter/nbconvert#1788</a></li>; <li>Fixed unique div ids in lab template, fixed <a href=""https://github-redirect.dependabot.com/jupyter/nbconvert/issues/1759"">#1759</a> by <a href=""https://github.com/veghdev""><code>@​veghdev</code></a> in <a href=""https://github-redirect.dependabot.com/jupyter/nbconvert/pull/1761"">jupyter/nbconvert#1761</a></li>; <li>WebPDFExporter: Emulate media print by <a href=""htt",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12126:439,depend,dependabot,439,https://hail.is,https://github.com/hail-is/hail/pull/12126,3,['depend'],['dependabot']
Integrability,"Bumps [nbformat]() from 5.6.1 to 5.7.0. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=nbformat&package-manager=pip&previous-version=5.6.1&new-version=5.7.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12306:43,Depend,Dependabot,43,https://hail.is,https://github.com/hail-is/hail/pull/12306,26,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency', 'dependency-name']"
Integrability,"Bumps [nest-asyncio](https://github.com/erdewit/nest_asyncio) from 1.5.4 to 1.5.5.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/erdewit/nest_asyncio/commit/3cfd2c8bc453174ec0be57cd3bb8ec16dbcde1b4""><code>3cfd2c8</code></a> Potential fix for issue <a href=""https://github-redirect.dependabot.com/erdewit/nest_asyncio/issues/65"">#65</a></li>; <li><a href=""https://github.com/erdewit/nest_asyncio/commit/616d9a5e15d8d75e3343422778e49af2e9ac80ea""><code>616d9a5</code></a> Patch asyncio.get_event_loop to not require a running loop, fixes <a href=""https://github-redirect.dependabot.com/erdewit/nest_asyncio/issues/70"">#70</a></li>; <li>See full diff in <a href=""https://github.com/erdewit/nest_asyncio/compare/v1.5.4...v1.5.5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=nest-asyncio&package-manager=pip&previous-version=1.5.4&new-version=1.5.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12209:313,depend,dependabot,313,https://hail.is,https://github.com/hail-is/hail/pull/12209,5,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-badges', 'dependency-name']"
Integrability,"Bumps [notebook](http://jupyter.org) from 6.4.11 to 6.4.12. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=notebook&package-manager=pip&previous-version=6.4.11&new-version=6.4.12)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hail-is/hail/network/ale",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11926:63,Depend,Dependabot,63,https://hail.is,https://github.com/hail-is/hail/pull/11926,18,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [oauthlib](https://github.com/oauthlib/oauthlib) from 3.2.0 to 3.2.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/oauthlib/oauthlib/releases"">oauthlib's releases</a>.</em></p>; <blockquote>; <h2>3.2.1</h2>; <h2>In short</h2>; <p>OAuth2.0 Provider:</p>; <ul>; <li><a href=""https://github-redirect.dependabot.com/oauthlib/oauthlib/issues/803"">#803</a> : Metadata endpoint support of non-HTTPS</li>; <li>CVE-2022-36087</li>; </ul>; <p>OAuth1.0:</p>; <ul>; <li><a href=""https://github-redirect.dependabot.com/oauthlib/oauthlib/issues/818"">#818</a> : Allow IPv6 being parsed by signature</li>; </ul>; <p>General:</p>; <ul>; <li>Improved and fixed documentation warnings.</li>; <li>Cosmetic changes based on isort</li>; </ul>; <h2>What's Changed</h2>; <ul>; <li>add missing slots to TokenBase by <a href=""https://github.com/ariebovenberg""><code>@​ariebovenberg</code></a> in <a href=""https://github-redirect.dependabot.com/oauthlib/oauthlib/pull/804"">oauthlib/oauthlib#804</a></li>; <li>Add CORS support for Refresh Token Grant. by <a href=""https://github.com/luhn""><code>@​luhn</code></a> in <a href=""https://github-redirect.dependabot.com/oauthlib/oauthlib/pull/806"">oauthlib/oauthlib#806</a></li>; <li>GitHub Action to lint Python code by <a href=""https://github.com/cclauss""><code>@​cclauss</code></a> in <a href=""https://github-redirect.dependabot.com/oauthlib/oauthlib/pull/797"">oauthlib/oauthlib#797</a></li>; <li>Docs: fix Sphinx warnings for better ReadTheDocs generation by <a href=""https://github.com/JonathanHuot""><code>@​JonathanHuot</code></a> in <a href=""https://github-redirect.dependabot.com/oauthlib/oauthlib/pull/807"">oauthlib/oauthlib#807</a></li>; <li>Allow non-HTTPS issuer when OAUTHLIB_INSECURE_TRANSPORT. by <a href=""https://github.com/luhn""><code>@​luhn</code></a> in <a href=""https://github-redirect.dependabot.com/oauthlib/oauthlib/pull/803"">oauthlib/oauthlib#803</a></li>; <li>chore: fix typo in test by <a href=""https://g",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12197:352,depend,dependabot,352,https://hail.is,https://github.com/hail-is/hail/pull/12197,6,['depend'],['dependabot']
Integrability,"Bumps [org.slf4j:slf4j-api](https://github.com/qos-ch/slf4j) from 1.7.25 to 2.0.7.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/qos-ch/slf4j/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.slf4j:slf4j-api&package-manager=gradle&previous-version=1.7.25&new-version=2.0.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12804:253,Depend,Dependabot,253,https://hail.is,https://github.com/hail-is/hail/pull/12804,9,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [org.testng:testng](https://github.com/cbeust/testng) from 6.8.21 to 7.7.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/cbeust/testng/releases"">org.testng:testng's releases</a>.</em></p>; <blockquote>; <h2>TestNG v7.7.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Streamline overloaded assertion methods for Groovy by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2858"">cbeust/testng#2858</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/cbeust/testng/compare/7.7.0...7.7.1"">https://github.com/cbeust/testng/compare/7.7.0...7.7.1</a></p>; <h2>TestNG v7.7.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Replace FindBugs by SpotBugs by <a href=""https://github.com/gruenich""><code>@​gruenich</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2781"">cbeust/testng#2781</a></li>; <li>Gradle: Drop forUseAtConfigurationTime() by <a href=""https://github.com/gruenich""><code>@​gruenich</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2783"">cbeust/testng#2783</a></li>; <li>Added ability to provide custom message to assertThrows\expectThrows methods by <a href=""https://github.com/anatolyuzhakov""><code>@​anatolyuzhakov</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2793"">cbeust/testng#2793</a></li>; <li>Fix issue 2801 - Only resolve hostname once by <a href=""https://github.com/spkrka""><code>@​spkrka</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2802"">cbeust/testng#2802</a></li>; <li>[SECURITY] Fix Zip Slip Vulnerability; by <a href=""https://github.com/JLLeitschuh""><code>@​JLLeitschuh</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2806"">cbeust/testng#2806</a></li>; <li>GITHUB-2807 - Failsafe buildStackTrace by <a href=""https://github.com/seregamorph""><code",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:479,depend,dependabot,479,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['depend'],['dependabot']
Integrability,"Bumps [orjson](https://github.com/ijl/orjson) from 3.9.10 to 3.10.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/ijl/orjson/releases"">orjson's releases</a>.</em></p>; <blockquote>; <h2>3.10.0</h2>; <h3>Changed</h3>; <ul>; <li>Support serializing <code>numpy.float16</code> (<code>numpy.half</code>).</li>; <li>sdist uses metadata 2.3 instead of 2.1.</li>; <li>Improve Windows PyPI builds.</li>; </ul>; <h2>3.9.15</h2>; <h3>Fixed</h3>; <ul>; <li>Implement recursion limit of 1024 on <code>orjson.loads()</code>.</li>; <li>Use byte-exact read on <code>str</code> formatting SIMD path to avoid crash.</li>; </ul>; <h2>3.9.14</h2>; <h3>Fixed</h3>; <ul>; <li>Fix crash serializing <code>str</code> introduced in 3.9.11.</li>; </ul>; <h3>Changed</h3>; <ul>; <li>Build now depends on Rust 1.72 or later.</li>; </ul>; <h2>3.9.13</h2>; <h3>Fixed</h3>; <ul>; <li>Serialization <code>str</code> escape uses only 128-bit SIMD.</li>; <li>Fix compatibility with CPython 3.13 alpha 3.</li>; </ul>; <h3>Changed</h3>; <ul>; <li>Publish <code>musllinux_1_2</code> instead of <code>musllinux_1_1</code> wheels.</li>; <li>Serialization uses small integer optimization in CPython 3.12 or later.</li>; </ul>; <h2>3.9.12</h2>; <h3>Fixed</h3>; <ul>; <li>Minimal <code>musllinux_1_1</code> build due to sporadic CI failure.</li>; </ul>; <h3>Changed</h3>; <ul>; <li>Update benchmarks in README.</li>; </ul>; <h2>3.9.11</h2>; <h3>Changed</h3>; <ul>; <li>Improve performance of serializing. <code>str</code> is significantly faster. Documents; using <code>dict</code>, <code>list</code>, and <code>tuple</code> are somewhat faster.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/ijl/orjson/blob/master/CHANGELOG.md"">orjson's changelog</a>.</em></p>; <blockquote>; <h2>3.10.0 - 2024-03-27</h2>; <h3>Changed</h3>; <ul>; <li>Support serializing <code>numpy.float16</code> (<code>numpy.half</code>).</",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14427:816,depend,depends,816,https://hail.is,https://github.com/hail-is/hail/pull/14427,1,['depend'],['depends']
Integrability,"Bumps [orjson](https://github.com/ijl/orjson) from 3.9.10 to 3.9.15.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/ijl/orjson/releases"">orjson's releases</a>.</em></p>; <blockquote>; <h2>3.9.15</h2>; <h3>Fixed</h3>; <ul>; <li>Implement recursion limit of 1024 on <code>orjson.loads()</code>.</li>; <li>Use byte-exact read on <code>str</code> formatting SIMD path to avoid crash.</li>; </ul>; <h2>3.9.14</h2>; <h3>Fixed</h3>; <ul>; <li>Fix crash serializing <code>str</code> introduced in 3.9.11.</li>; </ul>; <h3>Changed</h3>; <ul>; <li>Build now depends on Rust 1.72 or later.</li>; </ul>; <h2>3.9.13</h2>; <h3>Fixed</h3>; <ul>; <li>Serialization <code>str</code> escape uses only 128-bit SIMD.</li>; <li>Fix compatibility with CPython 3.13 alpha 3.</li>; </ul>; <h3>Changed</h3>; <ul>; <li>Publish <code>musllinux_1_2</code> instead of <code>musllinux_1_1</code> wheels.</li>; <li>Serialization uses small integer optimization in CPython 3.12 or later.</li>; </ul>; <h2>3.9.12</h2>; <h3>Fixed</h3>; <ul>; <li>Minimal <code>musllinux_1_1</code> build due to sporadic CI failure.</li>; </ul>; <h3>Changed</h3>; <ul>; <li>Update benchmarks in README.</li>; </ul>; <h2>3.9.11</h2>; <h3>Changed</h3>; <ul>; <li>Improve performance of serializing. <code>str</code> is significantly faster. Documents; using <code>dict</code>, <code>list</code>, and <code>tuple</code> are somewhat faster.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/ijl/orjson/blob/master/CHANGELOG.md"">orjson's changelog</a>.</em></p>; <blockquote>; <h2>3.9.15 - 2024-02-23</h2>; <h3>Fixed</h3>; <ul>; <li>Implement recursion limit of 1024 on <code>orjson.loads()</code>.</li>; <li>Use byte-exact read on <code>str</code> formatting SIMD path to avoid crash.</li>; </ul>; <h2>3.9.14 - 2024-02-14</h2>; <h3>Fixed</h3>; <ul>; <li>Fix crash serializing <code>str</code> introduced in 3.9.11.</li>; </ul>; <h",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14357:595,depend,depends,595,https://hail.is,https://github.com/hail-is/hail/pull/14357,3,['depend'],['depends']
Integrability,"Bumps [path-parse](https://github.com/jbgutierrez/path-parse) from 1.0.6 to 1.0.7.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/jbgutierrez/path-parse/commits/v1.0.7"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=path-parse&package-manager=npm_and_yarn&previous-version=1.0.6&new-version=1.0.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11288:270,Depend,Dependabot,270,https://hail.is,https://github.com/hail-is/hail/pull/11288,18,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [pkginfo](https://code.launchpad.net/~tseaver/pkginfo/trunk) from 1.8.2 to 1.8.3. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pkginfo&package-manager=pip&previous-version=1.8.2&new-version=1.8.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11966:91,Depend,Dependabot,91,https://hail.is,https://github.com/hail-is/hail/pull/11966,26,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency', 'dependency-name']"
Integrability,"Bumps [pre-commit](https://github.com/pre-commit/pre-commit) from 2.17.0 to 2.18.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/pre-commit/pre-commit/releases"">pre-commit's releases</a>.</em></p>; <blockquote>; <h2>pre-commit v2.18.1</h2>; <h3>Fixes</h3>; <ul>; <li>Fix regression for <code>repo: local</code> hooks running <code>python&lt;3.7</code>; <ul>; <li><a href=""https://github-redirect.dependabot.com/pre-commit/pre-commit/issues/2324"">#2324</a> PR by <a href=""https://github.com/asottile""><code>@​asottile</code></a>.</li>; </ul>; </li>; </ul>; <h2>pre-commit v2.18.0</h2>; <h3>Features</h3>; <ul>; <li>Keep <code>GIT_HTTP_PROXY_AUTHMETHOD</code> in git environ.; <ul>; <li><a href=""https://github-redirect.dependabot.com/pre-commit/pre-commit/issues/2272"">#2272</a> PR by <a href=""https://github.com/VincentBerthier""><code>@​VincentBerthier</code></a>.</li>; <li><a href=""https://github-redirect.dependabot.com/pre-commit/pre-commit/issues/2271"">#2271</a> issue by <a href=""https://github.com/VincentBerthier""><code>@​VincentBerthier</code></a>.</li>; </ul>; </li>; <li>Support both <code>cs</code> and <code>coursier</code> executables for coursier hooks.; <ul>; <li><a href=""https://github-redirect.dependabot.com/pre-commit/pre-commit/issues/2293"">#2293</a> PR by <a href=""https://github.com/Holzhaus""><code>@​Holzhaus</code></a>.</li>; </ul>; </li>; <li>Include more information in errors for <code>language_version</code> / <code>additional_dependencies</code> for languages which do not support them.; <ul>; <li><a href=""https://github-redirect.dependabot.com/pre-commit/pre-commit/issues/2315"">#2315</a> PR by <a href=""https://github.com/asottile""><code>@​asottile</code></a>.</li>; </ul>; </li>; <li>Have autoupdate preferentially pick tags which look like versions when there are multiple equivalent tags.; <ul>; <li><a href=""https://github-redirect.dependabot.com/pre-commit/pre-commit/issues/2312"">#2312</a> PR by <a href=""https:",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11731:445,depend,dependabot,445,https://hail.is,https://github.com/hail-is/hail/pull/11731,3,['depend'],['dependabot']
Integrability,"Bumps [pre-commit](https://github.com/pre-commit/pre-commit) from 2.9.2 to 2.17.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/pre-commit/pre-commit/releases"">pre-commit's releases</a>.</em></p>; <blockquote>; <h2>pre-commit v2.17.0</h2>; <h3>Features</h3>; <ul>; <li>add warnings for regexes containing <code>[\\/]</code>.; <ul>; <li><a href=""https://github-redirect.dependabot.com/pre-commit/pre-commit/issues/2151"">#2151</a> issue by <a href=""https://github.com/sanjioh""><code>@​sanjioh</code></a>.</li>; <li><a href=""https://github-redirect.dependabot.com/pre-commit/pre-commit/issues/2154"">#2154</a> PR by <a href=""https://github.com/kuviokelluja""><code>@​kuviokelluja</code></a>.</li>; </ul>; </li>; <li>upgrade supported ruby versions.; <ul>; <li><a href=""https://github-redirect.dependabot.com/pre-commit/pre-commit/issues/2205"">#2205</a> PR by <a href=""https://github.com/jalessio""><code>@​jalessio</code></a>.</li>; </ul>; </li>; <li>allow <code>language: conda</code> to use <code>mamba</code> or <code>micromamba</code> via <code>PRE_COMMIT_USE_MAMBA=1</code> or <code>PRE_COMMIT_USE_MICROMAMBA=1</code> respectively.; <ul>; <li><a href=""https://github-redirect.dependabot.com/pre-commit/pre-commit/issues/2204"">#2204</a> issue by <a href=""https://github.com/janjagusch""><code>@​janjagusch</code></a>.</li>; <li><a href=""https://github-redirect.dependabot.com/pre-commit/pre-commit/issues/2207"">#2207</a> PR by <a href=""https://github.com/xhochy""><code>@​xhochy</code></a>.</li>; </ul>; </li>; <li>display <code>git --version</code> in error report.; <ul>; <li><a href=""https://github-redirect.dependabot.com/pre-commit/pre-commit/issues/2210"">#2210</a> PR by <a href=""https://github.com/asottile""><code>@​asottile</code></a>.</li>; </ul>; </li>; <li>add <code>language: lua</code> as a supported language.; <ul>; <li><a href=""https://github-redirect.dependabot.com/pre-commit/pre-commit/issues/2158"">#2158</a> PR by <a href=""https://githu",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11460:418,depend,dependabot,418,https://hail.is,https://github.com/hail-is/hail/pull/11460,6,['depend'],['dependabot']
Integrability,"Bumps [prometheus-async](https://github.com/hynek/prometheus-async) from 19.2.0 to 22.1.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/hynek/prometheus-async/releases"">prometheus-async's releases</a>.</em></p>; <blockquote>; <h2>22.1.0</h2>; <h2>Highlights</h2>; <p><em>prometheus-async</em> now is fully typed and the optional <em>aiohttp</em> endpoint exposes the metrics in the OpenMetrics format if the client supports it.</p>; <h2>Full Changelog</h2>; <h3>Removed</h3>; <ul>; <li>Support for Python 2.7, 3.5, and 3.6 has been dropped.</li>; <li>The <em>loop</em> argument has been removed from <code>prometheus_async.aio.start_http_server()</code>.</li>; </ul>; <h3>Added</h3>; <ul>; <li>Added type hints for all APIs.; <a href=""https://github-redirect.dependabot.com/hynek/prometheus-async/pull/21"">#21</a></li>; <li>Added support for <a href=""https://openmetrics.io"">OpenMetrics</a> exposition in <code>prometheus_async.aio.web.server_stats()</code> and thus <code>prometheus_async.aio.web.start_http_server_in_thread()</code>.; <a href=""https://github-redirect.dependabot.com/hynek/prometheus-async/issues/23"">#23</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/hynek/prometheus-async/blob/main/CHANGELOG.md"">prometheus-async's changelog</a>.</em></p>; <blockquote>; <h2><a href=""https://github.com/hynek/prometheus-async/compare/19.2.0...22.1.0"">22.1.0</a> - 2022-02-15</h2>; <h3>Removed</h3>; <ul>; <li>Support for Python 2.7, 3.5, and 3.6 has been dropped.</li>; <li>The <em>loop</em> argument has been removed from <code>prometheus_async.aio.start_http_server()</code>.</li>; </ul>; <h3>Added</h3>; <ul>; <li>Added type hints for all APIs.; <a href=""https://github-redirect.dependabot.com/hynek/prometheus-async/pull/21"">#21</a></li>; <li>Added support for <a href=""https://openmetrics.io"">OpenMetrics</a> exposition in <code>prometheus_async.aio.web.ser",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11536:808,depend,dependabot,808,https://hail.is,https://github.com/hail-is/hail/pull/11536,1,['depend'],['dependabot']
Integrability,"Bumps [prometheus-client](https://github.com/prometheus/client_python) from 0.11.0 to 0.13.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/prometheus/client_python/releases"">prometheus-client's releases</a>.</em></p>; <blockquote>; <h2>0.13.1 / 2022-01-28</h2>; <p>[BUGFIX] Relax some type constraints that were too strict. <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/754"">#754</a>, <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/755"">#755</a>, <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/756"">#756</a>, <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/758"">#758</a>; [BUGFIX] Explicitly export functions with <code>__all__</code>. <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/757"">#757</a></p>; <h2>0.13.0 / 2022-01-25</h2>; <p>[CHANGE] Drop support for Python versions 2.7, 3.4, and 3.5. <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/718"">#718</a>; [FEATURE] Support adding labels when using <code>.time()</code> <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/730"">#730</a>; [ENHANCEMENT] Begin to add type hints to functions. <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/705"">#705</a>; [ENHANCEMENT] Improved go-to-declaration behavior for editors. <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/747"">#747</a>; [BUGFIX] Remove trailing slashes from pushgateway URLS. <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/722"">#722</a>; [BUGFIX] Catch non-integer bucket/count values. <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/726"">#726</a></p>; <h2>0.12.0 / 2021-10-29</h2>; <p>[FEATURE] Exemplar support (excludes multiprocess) <a href=""https://github-redirect.dependabot.com/pr",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11515:406,depend,dependabot,406,https://hail.is,https://github.com/hail-is/hail/pull/11515,5,['depend'],['dependabot']
Integrability,"Bumps [protobuf](https://github.com/protocolbuffers/protobuf) from 3.19.6 to 4.21.12.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/protocolbuffers/protobuf/releases"">protobuf's releases</a>.</em></p>; <blockquote>; <h2>Protocol Buffers v3.20.3</h2>; <h1>Java</h1>; <ul>; <li>Refactoring java full runtime to reuse sub-message builders and prepare to; migrate parsing logic from parse constructor to builder.</li>; <li>Move proto wireformat parsing functionality from the private &quot;parsing; constructor&quot; to the Builder class.</li>; <li>Change the Lite runtime to prefer merging from the wireformat into mutable; messages rather than building up a new immutable object before merging. This; way results in fewer allocations and copy operations.</li>; <li>Make message-type extensions merge from wire-format instead of building up; instances and merging afterwards. This has much better performance.</li>; <li>Fix TextFormat parser to build up recurring (but supposedly not repeated); sub-messages directly from text rather than building a new sub-message and; merging the fully formed message into the existing field.</li>; <li>This release addresses a <a href=""https://github.com/protocolbuffers/protobuf/security/advisories/GHSA-h4h5-3hr4-j3g2"">Security Advisory for Java users</a></li>; </ul>; <h2>Protocol Buffers v3.20.2</h2>; <h1>C++</h1>; <ul>; <li>Reduce memory consumption of MessageSet parsing</li>; <li>This release addresses a <a href=""https://github.com/protocolbuffers/protobuf/security/advisories/GHSA-8gq9-2x98-w8hf"">Security Advisory for C++ and Python users</a></li>; </ul>; <h2>Protocol Buffers v3.20.1</h2>; <h1>PHP</h1>; <ul>; <li>Fix building packaged PHP extension (<a href=""https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/9727"">#9727</a>)</li>; <li>Fixed composer.json to only advertise compatibility with PHP 7.0+. (<a href=""https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/9",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12563:36,protocol,protocolbuffers,36,https://hail.is,https://github.com/hail-is/hail/pull/12563,6,"['Protocol', 'message', 'protocol']","['Protocol', 'message', 'message-type', 'messages', 'protocolbuffers']"
Integrability,"Bumps [protobuf](https://github.com/protocolbuffers/protobuf) from 3.20.1 to 3.20.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/protocolbuffers/protobuf/releases"">protobuf's releases</a>.</em></p>; <blockquote>; <h2>Protocol Buffers v3.20.2</h2>; <h1>C++</h1>; <ul>; <li>Reduce memory consumption of MessageSet parsing</li>; <li>This release addresses a <a href=""https://github.com/protocolbuffers/protobuf/security/advisories/GHSA-8gq9-2x98-w8hf"">Security Advisory for C++ and Python users</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/protocolbuffers/protobuf/commit/a20c65f2cd549445fda907f7b83894c8eb7427d6""><code>a20c65f</code></a> Updating changelog</li>; <li><a href=""https://github.com/protocolbuffers/protobuf/commit/c49fe79af9c295960477b7568f1765b202093143""><code>c49fe79</code></a> Updating version.json and repo version numbers to: 20.2</li>; <li><a href=""https://github.com/protocolbuffers/protobuf/commit/806d7e4ce6f1fd0545cae226b94cb0249ea495c7""><code>806d7e4</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/10544"">#10544</a> from deannagarcia/3.20.x</li>; <li><a href=""https://github.com/protocolbuffers/protobuf/commit/ae718b39020ae6e6f8f5568e357d6893fd0fd29c""><code>ae718b3</code></a> Add missing includes</li>; <li><a href=""https://github.com/protocolbuffers/protobuf/commit/b4c395aaedfacb32e2414d361fa85968c0991b34""><code>b4c395a</code></a> Apply patch</li>; <li><a href=""https://github.com/protocolbuffers/protobuf/commit/6439c5c01349e74d4deb57c844a7ad4b7b13a302""><code>6439c5c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/10531"">#10531</a> from protocolbuffers/deannagarcia-patch-7</li>; <li><a href=""https://github.com/protocolbuffers/protobuf/commit/22c79e6e4ca8be2bc2f700b2cdddca84d84659ce""><code>22c79e6</code></a> Update v",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12223:36,protocol,protocolbuffers,36,https://hail.is,https://github.com/hail-is/hail/pull/12223,21,"['Message', 'Protocol', 'protocol']","['MessageSet', 'Protocol', 'protocolbuffers']"
Integrability,"Bumps [protobuf](https://github.com/protocolbuffers/protobuf) from 3.20.1 to 4.21.5.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/protocolbuffers/protobuf/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=protobuf&package-manager=pip&previous-version=3.20.1&new-version=4.21.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more fo",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12082:36,protocol,protocolbuffers,36,https://hail.is,https://github.com/hail-is/hail/pull/12082,22,"['Depend', 'depend', 'protocol']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name', 'protocolbuffers']"
Integrability,"Bumps [protobuf](https://github.com/protocolbuffers/protobuf) from 3.20.1 to 4.21.6.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/protocolbuffers/protobuf/releases"">protobuf's releases</a>.</em></p>; <blockquote>; <h2>Protocol Buffers v3.20.2</h2>; <h1>C++</h1>; <ul>; <li>Reduce memory consumption of MessageSet parsing</li>; <li>This release addresses a <a href=""https://github.com/protocolbuffers/protobuf/security/advisories/GHSA-8gq9-2x98-w8hf"">Security Advisory for C++ and Python users</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/protocolbuffers/protobuf/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=protobuf&package-manager=pip&previous-version=3.20.1&new-version=4.21.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You ca",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12227:36,protocol,protocolbuffers,36,https://hail.is,https://github.com/hail-is/hail/pull/12227,18,"['Depend', 'Message', 'Protocol', 'depend', 'protocol']","['Dependabot', 'MessageSet', 'Protocol', 'dependabot-badges', 'dependency-name', 'protocolbuffers']"
Integrability,"Bumps [protobuf](https://github.com/protocolbuffers/protobuf) from 3.20.2 to 4.21.9.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/protocolbuffers/protobuf/releases"">protobuf's releases</a>.</em></p>; <blockquote>; <h2>Protocol Buffers v3.20.3</h2>; <h1>Java</h1>; <ul>; <li>Refactoring java full runtime to reuse sub-message builders and prepare to; migrate parsing logic from parse constructor to builder.</li>; <li>Move proto wireformat parsing functionality from the private &quot;parsing; constructor&quot; to the Builder class.</li>; <li>Change the Lite runtime to prefer merging from the wireformat into mutable; messages rather than building up a new immutable object before merging. This; way results in fewer allocations and copy operations.</li>; <li>Make message-type extensions merge from wire-format instead of building up; instances and merging afterwards. This has much better performance.</li>; <li>Fix TextFormat parser to build up recurring (but supposedly not repeated); sub-messages directly from text rather than building a new sub-message and; merging the fully formed message into the existing field.</li>; <li>This release addresses a <a href=""https://github.com/protocolbuffers/protobuf/security/advisories/GHSA-h4h5-3hr4-j3g2"">Security Advisory for Java users</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/protocolbuffers/protobuf/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=protobuf&package-manager=pip&previous-version=3.20.2&new-version=4.21.9)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12518:36,protocol,protocolbuffers,36,https://hail.is,https://github.com/hail-is/hail/pull/12518,6,"['Protocol', 'message', 'protocol']","['Protocol', 'message', 'message-type', 'messages', 'protocolbuffers']"
Integrability,"Bumps [psutil](https://github.com/giampaolo/psutil) from 5.8.0 to 5.9.0.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/giampaolo/psutil/blob/master/HISTORY.rst"">psutil's changelog</a>.</em></p>; <blockquote>; <h1>5.9.0</h1>; <p>2021-12-29</p>; <p><strong>Enhancements</strong></p>; <ul>; <li>1851_, [Linux]: <code>cpu_freq()</code>_ is slow on systems with many CPUs. Read current; frequency values for all CPUs from <code>/proc/cpuinfo</code> instead of opening many; files in <code>/sys</code> fs. (patch by marxin)</li>; <li>1992_: <code>NoSuchProcess</code>_ message now specifies if the PID has been reused.</li>; <li>1992_: error classes (<code>NoSuchProcess</code><em>, <code>AccessDenied</code></em>, etc.) now have a better; formatted and separated <code>__repr__</code> and <code>__str__</code> implementations.</li>; <li>1996_, [BSD]: add support for MidnightBSD. (patch by Saeed Rasooli)</li>; <li>1999_, [Linux]: <code>disk_partitions()</code>_: convert <code>/dev/root</code> device (an alias; used on some Linux distros) to real root device path.</li>; <li>2005_: <code>PSUTIL_DEBUG</code> mode now prints file name and line number of the debug; messages coming from C extension modules.</li>; <li>2042_: rewrite HISTORY.rst to use hyperlinks pointing to psutil API doc.</li>; </ul>; <p><strong>Bug fixes</strong></p>; <ul>; <li>1456_, [macOS], <strong>[critical]</strong>: <code>cpu_freq()</code>_ <code>min</code> and <code>max</code> are set to; 0 if can't be determined (instead of crashing).</li>; <li>1512_, [macOS]: sometimes <code>Process.connections()</code>_ will crash with; <code>EOPNOTSUPP</code> for one connection; this is now ignored.</li>; <li>1598_, [Windows]: <code>disk_partitions()</code>_ only returns mountpoints on drives; where it first finds one.</li>; <li>1874_, [SunOS]: swap output error due to incorrect range.</li>; <li>1892_, [macOS]: <code>cpu_freq()</code>_ broken on Apple M1.</li>; <li>1901_, [macOS]: diff",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11459:607,message,message,607,https://hail.is,https://github.com/hail-is/hail/pull/11459,1,['message'],['message']
Integrability,"Bumps [py4j](https://github.com/bartdag/py4j) from 0.10.9 to 0.10.9.7.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/py4j/py4j/commit/cd479ba858d11272f4852669a6ad33307a7681c4""><code>cd479ba</code></a> Prepare release 0.10.9.7 (<a href=""https://github-redirect.dependabot.com/bartdag/py4j/issues/495"">#495</a>)</li>; <li><a href=""https://github.com/py4j/py4j/commit/3518579a9323c10b4d8cb4f58a45c2eed100cb8c""><code>3518579</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/bartdag/py4j/issues/494"">#494</a> from xinrong-meng/release</li>; <li><a href=""https://github.com/py4j/py4j/commit/060519f392b08c7f158d24582a4ade2a444ad7d4""><code>060519f</code></a> milestone</li>; <li><a href=""https://github.com/py4j/py4j/commit/9bf515a34e70ca142f8b6ee15f12ae3bd0139bd2""><code>9bf515a</code></a> prepare</li>; <li><a href=""https://github.com/py4j/py4j/commit/1f8a0b6dc216f16092d9c1b2556897eec8653a62""><code>1f8a0b6</code></a> Detach Java objects only when _detach method exists (<a href=""https://github-redirect.dependabot.com/bartdag/py4j/issues/492"">#492</a>)</li>; <li><a href=""https://github.com/py4j/py4j/commit/4a97b24c7da163b4c5bb24fe88f75a691adb60ed""><code>4a97b24</code></a> Reduce test combinations to one Windows, one JDK 11 and one JDK 17 (<a href=""https://github-redirect.dependabot.com/bartdag/py4j/issues/493"">#493</a>)</li>; <li><a href=""https://github.com/py4j/py4j/commit/726031fe64840b41859155d3f50b581e6be5f9af""><code>726031f</code></a> Add support for Java 11/17 (<a href=""https://github-redirect.dependabot.com/bartdag/py4j/issues/491"">#491</a>)</li>; <li><a href=""https://github.com/py4j/py4j/commit/77330c37440cbb5d68c8f1025b6d9f3f2843122b""><code>77330c3</code></a> Add Windows support to CI (<a href=""https://github-redirect.dependabot.com/bartdag/py4j/issues/487"">#487</a>)</li>; <li><a href=""https://github.com/py4j/py4j/commit/1c622faa81e983f5ceface5290859d6a49974849""><code>1c622fa</code></a> Migrate nosetest to pytest (<a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12298:292,depend,dependabot,292,https://hail.is,https://github.com/hail-is/hail/pull/12298,2,['depend'],['dependabot']
Integrability,"Bumps [pycares](https://github.com/saghul/pycares) from 4.2.2 to 4.3.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/saghul/pycares/releases"">pycares's releases</a>.</em></p>; <blockquote>; <h2>4.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump cibuildwheel to build for Python 3.11 + CI total time speedups by <a href=""https://github.com/Jackenmen""><code>@​Jackenmen</code></a> in <a href=""https://github-redirect.dependabot.com/saghul/pycares/pull/174"">saghul/pycares#174</a></li>; <li>Fix tests that depended on external sites by <a href=""https://github.com/Jackenmen""><code>@​Jackenmen</code></a> in <a href=""https://github-redirect.dependabot.com/saghul/pycares/pull/180"">saghul/pycares#180</a></li>; <li>Complete the Python 3.11 support by <a href=""https://github.com/Jackenmen""><code>@​Jackenmen</code></a> in <a href=""https://github-redirect.dependabot.com/saghul/pycares/pull/179"">saghul/pycares#179</a></li>; <li>Drop CPython 3.6 by <a href=""https://github.com/saghul""><code>@​saghul</code></a> in <a href=""https://github-redirect.dependabot.com/saghul/pycares/pull/181"">saghul/pycares#181</a></li>; <li>Improve test compatibility with pytest by <a href=""https://github.com/saghul""><code>@​saghul</code></a> in <a href=""https://github-redirect.dependabot.com/saghul/pycares/pull/182"">saghul/pycares#182</a></li>; <li>Update c-ares submodule to 1.18.1 by <a href=""https://github.com/saghul""><code>@​saghul</code></a> in <a href=""https://github-redirect.dependabot.com/saghul/pycares/pull/183"">saghul/pycares#183</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/saghul/pycares/compare/pycares-4.2.2...pycares-4.3.0"">https://github.com/saghul/pycares/compare/pycares-4.2.2...pycares-4.3.0</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/saghul/pycares/commit/036aafd253b39f7459a86a5574daae8c5b681bc2""><code>036aafd</code></a> Bump version to 4.3.0",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12559:465,depend,dependabot,465,https://hail.is,https://github.com/hail-is/hail/pull/12559,4,['depend'],"['dependabot', 'depended']"
Integrability,"Bumps [pycodestyle](https://github.com/PyCQA/pycodestyle) from 2.8.0 to 2.9.1.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/PyCQA/pycodestyle/blob/main/CHANGES.txt"">pycodestyle's changelog</a>.</em></p>; <blockquote>; <h2>2.9.1 (2022-08-03)</h2>; <p>Changes:</p>; <ul>; <li>E275: fix false positive for yield expressions.</li>; </ul>; <h2>2.9.0 (2022-07-30)</h2>; <p>Changes:</p>; <ul>; <li>E221, E222, E223, E224: add support for <code>:=</code> operator. PR <a href=""https://github-redirect.dependabot.com/PyCQA/pycodestyle/issues/1032"">#1032</a>.</li>; <li>Drop python 2.7 / 3.5.</li>; <li>E262: consider non-breaking spaces (<code>\xa0</code>) as whitespace. PR <a href=""https://github-redirect.dependabot.com/PyCQA/pycodestyle/issues/1035"">#1035</a>.</li>; <li>Improve performance of <code>_is_binary_operator</code>. PR <a href=""https://github-redirect.dependabot.com/PyCQA/pycodestyle/issues/1052"">#1052</a>.</li>; <li>E275: requires whitespace around keywords. PR <a href=""https://github-redirect.dependabot.com/PyCQA/pycodestyle/issues/1063"">#1063</a>.</li>; <li>Add support for python 3.11. PR <a href=""https://github-redirect.dependabot.com/PyCQA/pycodestyle/issues/1070"">#1070</a>.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/PyCQA/pycodestyle/commit/10a4427c75740717b43448339fcf71f11bc33d1a""><code>10a4427</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/PyCQA/pycodestyle/issues/1092"">#1092</a> from PyCQA/2_9_1</li>; <li><a href=""https://github.com/PyCQA/pycodestyle/commit/c33e852a5938b823b04dd981260bd1664c643385""><code>c33e852</code></a> Release 2.9.1</li>; <li><a href=""https://github.com/PyCQA/pycodestyle/commit/c97e4f86bd60e449a64be6c0de5b5ec5bb28b8e9""><code>c97e4f8</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/PyCQA/pycodestyle/issues/1091"">#1091</a> from asottile/E275-yield-expression</li>; <li>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12476:538,depend,dependabot,538,https://hail.is,https://github.com/hail-is/hail/pull/12476,3,['depend'],['dependabot']
Integrability,"Bumps [pyflakes](https://github.com/PyCQA/pyflakes) from 2.4.0 to 2.5.0.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/PyCQA/pyflakes/blob/master/NEWS.rst"">pyflakes's changelog</a>.</em></p>; <blockquote>; <p>2.5.0 (2022-07-30)</p>; <ul>; <li>Drop support for EOL python 2.7 / 3.4 / 3.5</li>; <li>Ignore <code>__all__</code> when not directly assigned</li>; <li>Handle <code>TypeAlias</code> annotations as aliases (PEP 613)</li>; <li>Assignment expressions (<code>:=</code>) target outer scope in comprehensions</li>; <li>Add support for new python 3.11 syntax</li>; <li>Unify output so it is always <code>filename:lineno:col: message</code></li>; <li>Properly report <code>SyntaxError</code> from stdin in python &lt; 3.9</li>; <li>Fix offsets of <code>SyntaxError</code>s in pypy</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/2a6e36bd43af9829e0818961b60a1e3aab01fafc""><code>2a6e36b</code></a> Release 2.5.0 (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/720"">#720</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/a153aeed8df60f4190e6114f77cd254d1493e411""><code>a153aee</code></a> remove special handling of pypy offsets since modern pypy gets it right (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/717"">#717</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/d875b02835fb9b1480a95c5245040eb31a384357""><code>d875b02</code></a> fix syntax error reporting from stdin (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/357"">#357</a>) (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/716"">#716</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/44ef321b0e608c61182ecf5d88f9edeececa5403""><code>44ef321</code></a> Fix pylint URL in README (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/714"">#714</a>)</li>; <l",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12149:672,message,message,672,https://hail.is,https://github.com/hail-is/hail/pull/12149,1,['message'],['message']
Integrability,"Bumps [pyjwt](https://github.com/jpadilla/pyjwt) from 1.7.1 to 2.3.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/jpadilla/pyjwt/releases"">pyjwt's releases</a>.</em></p>; <blockquote>; <h2>2.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>[pre-commit.ci] pre-commit autoupdate by <a href=""https://github.com/pre-commit-ci""><code>@​pre-commit-ci</code></a> in <a href=""https://github-redirect.dependabot.com/jpadilla/pyjwt/pull/700"">jpadilla/pyjwt#700</a></li>; <li>Add exception chaining by <a href=""https://github.com/ehdgua01""><code>@​ehdgua01</code></a> in <a href=""https://github-redirect.dependabot.com/jpadilla/pyjwt/pull/702"">jpadilla/pyjwt#702</a></li>; <li>Revert &quot;Remove arbitrary kwargs.&quot; by <a href=""https://github.com/auvipy""><code>@​auvipy</code></a> in <a href=""https://github-redirect.dependabot.com/jpadilla/pyjwt/pull/701"">jpadilla/pyjwt#701</a></li>; <li>Bump up version to v2.3.0 by <a href=""https://github.com/jpadilla""><code>@​jpadilla</code></a> in <a href=""https://github-redirect.dependabot.com/jpadilla/pyjwt/pull/703"">jpadilla/pyjwt#703</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/ehdgua01""><code>@​ehdgua01</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/jpadilla/pyjwt/pull/702"">jpadilla/pyjwt#702</a></li>; <li><a href=""https://github.com/auvipy""><code>@​auvipy</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/jpadilla/pyjwt/pull/701"">jpadilla/pyjwt#701</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/jpadilla/pyjwt/compare/2.2.0...2.3.0"">https://github.com/jpadilla/pyjwt/compare/2.2.0...2.3.0</a></p>; <h2>2.2.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Complete <code>jwt</code> documentation by <a href=""https://github.com/johachi""><code>@​johachi</code></a> in <a href=""https://github-redirect.dependabot.com/jpadilla/pyjwt/pull/654"">jpadilla/pyjwt#6",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11457:439,depend,dependabot,439,https://hail.is,https://github.com/hail-is/hail/pull/11457,3,['depend'],['dependabot']
Integrability,"Bumps [pyjwt](https://github.com/jpadilla/pyjwt) from 1.7.1 to 2.4.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/jpadilla/pyjwt/releases"">pyjwt's releases</a>.</em></p>; <blockquote>; <h2>2.4.0</h2>; <h2>Security</h2>; <ul>; <li>[CVE-2022-29217] Prevent key confusion through non-blocklisted public key formats. <a href=""https://github.com/jpadilla/pyjwt/security/advisories/GHSA-ffqj-6fqr-9h24"">https://github.com/jpadilla/pyjwt/security/advisories/GHSA-ffqj-6fqr-9h24</a></li>; </ul>; <h2>What's Changed</h2>; <ul>; <li>Add support for Python 3.10 by <a href=""https://github.com/hugovk""><code>@​hugovk</code></a> in <a href=""https://github-redirect.dependabot.com/jpadilla/pyjwt/pull/699"">jpadilla/pyjwt#699</a></li>; <li>Don't use implicit optionals by <a href=""https://github.com/rekyungmin""><code>@​rekyungmin</code></a> in <a href=""https://github-redirect.dependabot.com/jpadilla/pyjwt/pull/705"">jpadilla/pyjwt#705</a></li>; <li>[pre-commit.ci] pre-commit autoupdate by <a href=""https://github.com/pre-commit-ci""><code>@​pre-commit-ci</code></a> in <a href=""https://github-redirect.dependabot.com/jpadilla/pyjwt/pull/708"">jpadilla/pyjwt#708</a></li>; <li>[pre-commit.ci] pre-commit autoupdate by <a href=""https://github.com/pre-commit-ci""><code>@​pre-commit-ci</code></a> in <a href=""https://github-redirect.dependabot.com/jpadilla/pyjwt/pull/710"">jpadilla/pyjwt#710</a></li>; <li>[pre-commit.ci] pre-commit autoupdate by <a href=""https://github.com/pre-commit-ci""><code>@​pre-commit-ci</code></a> in <a href=""https://github-redirect.dependabot.com/jpadilla/pyjwt/pull/711"">jpadilla/pyjwt#711</a></li>; <li>[pre-commit.ci] pre-commit autoupdate by <a href=""https://github.com/pre-commit-ci""><code>@​pre-commit-ci</code></a> in <a href=""https://github-redirect.dependabot.com/jpadilla/pyjwt/pull/712"">jpadilla/pyjwt#712</a></li>; <li>documentation fix: show correct scope for decode_complete() by <a href=""https://github.com/sseering""><code>@​ss",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11866:702,depend,dependabot,702,https://hail.is,https://github.com/hail-is/hail/pull/11866,2,['depend'],['dependabot']
Integrability,"Bumps [pylint](https://github.com/PyCQA/pylint) from 2.12.2 to 2.13.0.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/PyCQA/pylint/blob/main/ChangeLog"">pylint's changelog</a>.</em></p>; <blockquote>; <h1>What's New in Pylint 2.13.0?</h1>; <p>Release date: 2022-03-24</p>; <ul>; <li>; <p>Add missing dunder methods to <code>unexpected-special-method-signature</code> check.</p>; </li>; <li>; <p>No longer emit <code>no-member</code> in for loops that reference <code>self</code> if the binary operation that; started the for loop uses a <code>self</code> that is encapsulated in tuples or lists.</p>; <p>Ref <a href=""https://github-redirect.dependabot.com/PyCQA/astroid/issues/1360"">PyCQA/astroid#1360</a>; Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/4826"">#4826</a></p>; </li>; <li>; <p>Output better error message if unsupported file formats are used with <code>pyreverse</code>.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5950"">#5950</a></p>; </li>; <li>; <p>Fix pyreverse diagrams type hinting for classmethods and staticmethods.</p>; </li>; <li>; <p>Fix pyreverse diagrams type hinting for methods returning None.</p>; </li>; <li>; <p>Fix matching <code>--notes</code> options that end in a non-word character.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5840"">#5840</a></p>; </li>; <li>; <p>Updated the position of messages for class and function defintions to no longer cover; the complete definition. Only the <code>def</code> or <code>class</code> + the name of the class/function; are covered.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5466"">#5466</a></p>; </li>; <li>; <p><code>using-f-string-in-unsupported-version</code> and <code>using-final-decorator-in-unsupported-version</code> msgids; were renamed from <code>W1601</code> and <code>W1602</code> to <code>W2601</code> and <code>W2602</code>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11674:683,depend,dependabot,683,https://hail.is,https://github.com/hail-is/hail/pull/11674,3,"['depend', 'message']","['dependabot', 'message']"
Integrability,"Bumps [pylint](https://github.com/PyCQA/pylint) from 2.12.2 to 2.13.3.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/PyCQA/pylint/blob/main/ChangeLog"">pylint's changelog</a>.</em></p>; <blockquote>; <h1>What's New in Pylint 2.13.3?</h1>; <p>Release date: 2022-03-29</p>; <ul>; <li>; <p>Fix false positive for <code>unnecessary-ellipsis</code> when using an ellipsis as a default argument.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5973"">#5973</a></p>; </li>; <li>; <p>Fix crash involving unbalanced tuple unpacking.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5998"">#5998</a></p>; </li>; <li>; <p>Fix false positive for 'nonexistent-operator' when repeated '-' are; separated (e.g. by parens).</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5769"">#5769</a></p>; </li>; </ul>; <h1>What's New in Pylint 2.13.2?</h1>; <p>Release date: 2022-03-27</p>; <ul>; <li>; <p>Fix crash when subclassing a <code>namedtuple</code>.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5982"">#5982</a></p>; </li>; <li>; <p>Fix false positive for <code>superfluous-parens</code> for patterns like; &quot;return (a or b) in iterable&quot;.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5803"">#5803</a></p>; </li>; <li>; <p>Fix a false negative regression in 2.13.0 where <code>protected-access</code> was not; raised on functions.</p>; <p>Fixes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5989"">#5989</a></p>; </li>; <li>; <p>Better error messages in case of crash if pylint can't write the issue template.</p>; <p>Refer to <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5987"">#5987</a></p>; </li>; </ul>; <h1>What's New in Pylint 2.13.1?</h1>; <p>Release date: 2022-03-26</p>; <ul>; <li>; <p>Fix a regression in 2.13.0 where <code>used-before-ass",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11702:481,depend,dependabot,481,https://hail.is,https://github.com/hail-is/hail/pull/11702,3,['depend'],['dependabot']
Integrability,"Bumps [pylint](https://github.com/PyCQA/pylint) from 2.13.3 to 2.13.4.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/PyCQA/pylint/blob/main/ChangeLog"">pylint's changelog</a>.</em></p>; <blockquote>; <h1>What's New in Pylint 2.13.4?</h1>; <p>Release date: 2022-03-31</p>; <ul>; <li>; <p>Fix false positive regression in 2.13.0 for <code>used-before-assignment</code> for; homonyms between variable assignments in try/except blocks and variables in; a comprehension's filter.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6035"">#6035</a></p>; </li>; <li>; <p>Include <code>testing_pylintrc</code> in source and wheel distributions.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6028"">#6028</a></p>; </li>; <li>; <p>Fix crash in <code>super-init-not-called</code> checker when using <code>ctypes.Union</code>.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6027"">#6027</a></p>; </li>; <li>; <p>Fix crash for <code>unneccessary-ellipsis</code> checker when an ellipsis is used inside of a container or a lambda expression.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6036"">#6036</a>; Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6037"">#6037</a>; Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6048"">#6048</a></p>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/PyCQA/pylint/commit/14ae9e8985a70af1b04aa996c04a1a8c3fa8f463""><code>14ae9e8</code></a> Bump pylint to 2.13.4, update changelog</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/9009189c06dd326b7a4f5b9911d0246976f64509""><code>9009189</code></a> Fix crash in <code>super-init-not-called</code> checker (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6043"">#6043</a>)</li>; <li><a href=""https://g",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11723:566,depend,dependabot,566,https://hail.is,https://github.com/hail-is/hail/pull/11723,3,['depend'],['dependabot']
Integrability,"Bumps [pylint](https://github.com/PyCQA/pylint) from 2.13.4 to 2.13.5.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/PyCQA/pylint/blob/main/ChangeLog"">pylint's changelog</a>.</em></p>; <blockquote>; <h1>What's New in Pylint 2.13.5?</h1>; <p>Release date: 2022-04-06</p>; <ul>; <li>; <p>Fix false positive regression in 2.13.0 for <code>used-before-assignment</code> for; homonyms between variable assignments in try/except blocks and variables in; subscripts in comprehensions.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6069"">#6069</a>; Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6136"">#6136</a></p>; </li>; <li>; <p><code>lru-cache-decorating-method</code> has been renamed to <code>cache-max-size-none</code> and; will only be emitted when <code>maxsize</code> is <code>None</code>.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6180"">#6180</a></p>; </li>; <li>; <p>Fix false positive for <code>unused-import</code> when disabling both <code>used-before-assignment</code> and <code>undefined-variable</code>.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6089"">#6089</a></p>; </li>; <li>; <p>Narrow the scope of the <code>unnecessary-ellipsis</code> checker to:</p>; <ul>; <li>functions &amp; classes which contain both a docstring and an ellipsis.</li>; <li>A body which contains an ellipsis <code>nodes.Expr</code> node &amp; at least one other statement.</li>; </ul>; </li>; <li>; <p>Fix false positive for <code>used-before-assignment</code> for assignments taking place via; nonlocal declarations after an earlier type annotation.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5394"">#5394</a></p>; </li>; <li>; <p>Fix crash for <code>redefined-slots-in-subclass</code> when the type of the slot is not a const or a string.</p>; <p>Closes <a href=""https://github-redi",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11739:570,depend,dependabot,570,https://hail.is,https://github.com/hail-is/hail/pull/11739,3,['depend'],['dependabot']
Integrability,"Bumps [pylint](https://github.com/PyCQA/pylint) from 2.13.5 to 2.14.3.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/PyCQA/pylint/commit/680edebc686cad664bbed934a490aeafa775f163""><code>680edeb</code></a> Bump pylint to 2.14.3, update changelog</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/b05ac51ad2e3785b6b9b071b8cb241993c914105""><code>b05ac51</code></a> Pin <code>colorama</code> to lowest supported version (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6970"">#6970</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/417e8c3560bcb733a08dbdc8a0d33d5e3cb4a1b0""><code>417e8c3</code></a> Fix <code>bad-super-call</code> for non-direct parents (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6956"">#6956</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/fb6be5933ab270d542d80589be6fdea8abc82665""><code>fb6be59</code></a> Fix <code>undefined-variable</code> for <code>__class__</code> in inner methods (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6957"">#6957</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/b9ecb4d70d23f7a6d05cc14e94c26fd8d3261d0f""><code>b9ecb4d</code></a> Fix false positive for <code>useless-super-delegation</code> for variadics (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6949"">#6949</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/f881219a66deaf9cef6467ba27c3385bc98dad82""><code>f881219</code></a> Bump pylint to 2.14.2, update changelog</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/988d882b56f9eca8ba1825b86b59e92b824ca1c3""><code>988d882</code></a> Treat <code>--errors-only</code> as a disable, not a paired enable/disable (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6937"">#6937</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/386e7782b78a6e1baf0edd57cff893f3a08fb33c""><code>386e778</code></a> Mix incorrect parsing of multi-line optio",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11971:489,depend,dependabot,489,https://hail.is,https://github.com/hail-is/hail/pull/11971,2,['depend'],['dependabot']
Integrability,"Bumps [pylint](https://github.com/PyCQA/pylint) from 2.13.5 to 2.14.4.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/PyCQA/pylint/commit/bf29a5520e8d0e432ca715e0614a62052b3809e2""><code>bf29a55</code></a> Bump pylint to 2.14.4, update changelog</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/15470d10f74adb8fd3fab599097a8da8c10ec515""><code>15470d1</code></a> Fix recognition of config files named <code>setup.cfg</code> (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/3630"">#3630</a>) (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6577"">#6577</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/e8202000e046e286816375f5887110cacda4d11b""><code>e820200</code></a> Normalize path before checking if path should be ignored (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/7080"">#7080</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/c82d08c8433de92433b9b555dd2eb50a7987060f""><code>c82d08c</code></a> Don't report <code>import-private-name</code> for relative imports (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/7079"">#7079</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/f8f05f12522c0036668f9a0da86fa0d3456ed795""><code>f8f05f1</code></a> Don't emit <code>modified-iterating-dict</code> when updating existing keys (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/7037"">#7037</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/bee24cd55af4f1231e787aed5a1cc072492adee6""><code>bee24cd</code></a> Avoid hangs on many-core Windows machines (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/7035"">#7035</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/b379ef3acc2a983140994c93a2ea2c99e260c9c1""><code>b379ef3</code></a> Fix handling of quoted <code>init-hook</code> (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/7010"">#7010</a>)</li>; <li><a href=""https",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11980:496,depend,dependabot,496,https://hail.is,https://github.com/hail-is/hail/pull/11980,3,['depend'],['dependabot']
Integrability,"Bumps [pylint](https://github.com/PyCQA/pylint) from 2.13.5 to 2.15.3.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/PyCQA/pylint/commit/403dac602ee01e317a22800e0d63bdeb0c2faa7e""><code>403dac6</code></a> Bump pylint to 2.15.3, update changelog</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/38e278401a66218fba26308fbce56740761a2003""><code>38e2784</code></a> Bump astroid to 2.12.10</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/f5e168e867799013fb380aa9fe8a0c1516a651c8""><code>f5e168e</code></a> Fix <code>undefined-loop-variable</code> with <code>NoReturn</code> and <code>Never</code> (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/7476"">#7476</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/fbc9e663473fa0416779f1d71109b4123f6c3365""><code>fbc9e66</code></a> Accept a comma-separated list of messages IDs in <code>--help-msg</code> (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/7490"">#7490</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/fe3436efb0ec10677ba1539ac02e26cb3f852cbb""><code>fe3436e</code></a> False positive <code>global-variable-not-assigned</code> (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/7479"">#7479</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/52cf631d732f7b39a879adf7e617e0aa7059a83a""><code>52cf631</code></a> [invalid-class-object] Fix crash when <strong>class</strong> is defined with a tuple</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/8e05ff6acf30deae5d83ea3847ec47ed0bf049a4""><code>8e05ff6</code></a> Fix a crash in the <code>modified-iterating-dict</code> checker involving instance attri...</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/9b359ad676dff97a35321976c19ca0f6c4fc44ad""><code>9b359ad</code></a> Fix <code>unhashable-member</code> crash when <code>lambda</code> used as a dict key (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/7454"">#7454</a>)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12240:675,depend,dependabot,675,https://hail.is,https://github.com/hail-is/hail/pull/12240,3,"['depend', 'message']","['dependabot', 'messages']"
Integrability,"Bumps [pylint](https://github.com/PyCQA/pylint) from 2.6.0 to 2.12.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/PyCQA/pylint/releases"">pylint's releases</a>.</em></p>; <blockquote>; <h2>pylint-2.8.1</h2>; <ul>; <li>; <p>Add numversion back (temporarily) in <code>__pkginfo__</code> because it broke Pylama and revert the unnecessary; <code>pylint.version</code> breaking change.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/4399"">#4399</a></p>; </li>; </ul>; <h2>pylint-2.8.0</h2>; <ul>; <li>; <p>New refactoring message <code>consider-using-with</code>. This message is emitted if resource-allocating functions or methods of the; standard library (like <code>open()</code> or <code>threading.Lock.acquire()</code>) that can be used as a context manager are called without; a <code>with</code> block.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/3413"">#3413</a></p>; </li>; <li>; <p>Resolve false positives on unused variables in decorator functions</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/4252"">#4252</a></p>; </li>; <li>; <p>Add new extension <code>ConfusingConsecutiveElifChecker</code>. This optional checker emits a refactoring message (R5601 <code>confusing-consecutive-elif</code>); if if/elif statements with different indentation levels follow directly one after the other.</p>; </li>; <li>; <p>New option <code>--output=&lt;file&gt;</code> to output result to a file rather than printing to stdout.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/1070"">#1070</a></p>; </li>; <li>; <p>Use a prescriptive message for <code>unidiomatic-typecheck</code></p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/3891"">#3891</a></p>; </li>; <li>; <p>Apply <code>const-naming-style</code> to module constants annotated with; <code>typing.Final</code></p>; </li>; <li",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11461:479,depend,dependabot,479,https://hail.is,https://github.com/hail-is/hail/pull/11461,8,"['depend', 'message']","['dependabot', 'message']"
Integrability,"Bumps [pymysql](https://github.com/PyMySQL/PyMySQL) from 0.9.2 to 1.0.2.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/PyMySQL/PyMySQL/blob/main/CHANGELOG.md"">pymysql's changelog</a>.</em></p>; <blockquote>; <h2>v1.0.2</h2>; <p>Release date: 2021-01-09</p>; <ul>; <li>Fix <code>user</code>, <code>password</code>, <code>host</code>, <code>database</code> are still positional arguments.; All arguments of <code>connect()</code> are now keyword-only. (<a href=""https://github-redirect.dependabot.com/PyMySQL/PyMySQL/issues/941"">#941</a>)</li>; </ul>; <h2>v1.0.1</h2>; <p>Release date: 2021-01-08</p>; <ul>; <li>Stop emitting DeprecationWarning for use of <code>db</code> and <code>passwd</code>.; Note that they are still deprecated. (<a href=""https://github-redirect.dependabot.com/PyMySQL/PyMySQL/issues/939"">#939</a>)</li>; <li>Add <code>python_requires=&quot;&gt;=3.6&quot;</code> to setup.py. (<a href=""https://github-redirect.dependabot.com/PyMySQL/PyMySQL/issues/936"">#936</a>)</li>; </ul>; <h2>v1.0.0</h2>; <p>Release date: 2021-01-07</p>; <p>Backward incompatible changes:</p>; <ul>; <li>Python 2.7 and 3.5 are not supported.</li>; <li><code>connect()</code> uses keyword-only arguments. User must use keyword argument.</li>; <li><code>connect()</code> kwargs <code>db</code> and <code>passwd</code> are now deprecated; Use <code>database</code> and <code>password</code> instead.</li>; <li>old_password authentication method (used by MySQL older than 4.1) is not supported.</li>; <li>MySQL 5.5 and MariaDB 5.5 are not officially supported, although it may still works.</li>; <li>Removed <code>escape_dict</code>, <code>escape_sequence</code>, and <code>escape_string</code> from <code>pymysql</code>; module. They are still in <code>pymysql.converters</code>.</li>; </ul>; <p>Other changes:</p>; <ul>; <li>Connection supports context manager API. <code>__exit__</code> closes the connection. (<a href=""https://github-redirect.dependabot.com/PyMySQL",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11595:528,depend,dependabot,528,https://hail.is,https://github.com/hail-is/hail/pull/11595,3,['depend'],['dependabot']
Integrability,"Bumps [pymysql](https://github.com/PyMySQL/PyMySQL) from 1.1.0 to 1.1.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/PyMySQL/PyMySQL/releases"">pymysql's releases</a>.</em></p>; <blockquote>; <h2>v1.1.1</h2>; <blockquote>; <p>[!WARNING]; This release fixes a vulnerability (CVE-2024-36039).; All users are recommended to update to this version.</p>; <p>If you can not update soon, check the input value from untrusted source has an expected type.; Only dict input from untrusted source can be an attack vector.</p>; </blockquote>; <h2>What's Changed</h2>; <ul>; <li>Prohibit dict parameter for <code>Cursor.execute()</code>. It didn't produce valid SQL; and might cause SQL injection. (CVE-2024-36039)</li>; <li>Added ssl_key_password param by <a href=""https://github.com/svaskov""><code>@​svaskov</code></a> in <a href=""https://redirect.github.com/PyMySQL/PyMySQL/pull/1145"">PyMySQL/PyMySQL#1145</a></li>; </ul>; <h2>Merged PRs</h2>; <ul>; <li>Add support for Python 3.12 by <a href=""https://github.com/hugovk""><code>@​hugovk</code></a> in <a href=""https://redirect.github.com/PyMySQL/PyMySQL/pull/1134"">PyMySQL/PyMySQL#1134</a></li>; <li>chore(deps): update actions/checkout action to v4 by <a href=""https://github.com/renovate""><code>@​renovate</code></a> in <a href=""https://redirect.github.com/PyMySQL/PyMySQL/pull/1136"">PyMySQL/PyMySQL#1136</a></li>; <li>Update codecov/codecov-action action to v4 by <a href=""https://github.com/renovate""><code>@​renovate</code></a> in <a href=""https://redirect.github.com/PyMySQL/PyMySQL/pull/1137"">PyMySQL/PyMySQL#1137</a></li>; <li>ci: use codecov@v3 by <a href=""https://github.com/methane""><code>@​methane</code></a> in <a href=""https://redirect.github.com/PyMySQL/PyMySQL/pull/1142"">PyMySQL/PyMySQL#1142</a></li>; <li>chore(deps): update dessant/lock-threads action to v5 by <a href=""https://github.com/renovate""><code>@​renovate</code></a> in <a href=""https://redirect.github.com/PyMySQL/PyMySQL/pull/1141"">",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14556:723,inject,injection,723,https://hail.is,https://github.com/hail-is/hail/pull/14556,1,['inject'],['injection']
Integrability,"Bumps [pyspark](https://github.com/apache/spark) from 3.1.3 to 3.2.2.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/apache/spark/commit/78a5825fe266c0884d2dd18cbca9625fa258d7f7""><code>78a5825</code></a> Preparing Spark release v3.2.2-rc1</li>; <li><a href=""https://github.com/apache/spark/commit/ba978b3c533f202c6203ac514261655e9cee0cff""><code>ba978b3</code></a> [SPARK-39099][BUILD] Add dependencies to Dockerfile for building Spark releases</li>; <li><a href=""https://github.com/apache/spark/commit/001d8b0cddcec46a44e7c6e31612dc2baada05d5""><code>001d8b0</code></a> [SPARK-37554][BUILD] Add PyArrow, pandas and plotly to release Docker image d...</li>; <li><a href=""https://github.com/apache/spark/commit/9dd4c07475c82f922c29d67a4db4bb42676c5c07""><code>9dd4c07</code></a> [SPARK-37730][PYTHON][FOLLOWUP] Split comments to comply pycodestyle check</li>; <li><a href=""https://github.com/apache/spark/commit/bc54a3f0c2e08893702c3929bfe7a9d543a08cdb""><code>bc54a3f</code></a> [SPARK-37730][PYTHON] Replace use of MPLPlot._add_legend_handle with MPLPlot....</li>; <li><a href=""https://github.com/apache/spark/commit/c5983c1691f20590abf80b17bdc029b584b89521""><code>c5983c1</code></a> [SPARK-38018][SQL][3.2] Fix ColumnVectorUtils.populate to handle CalendarInte...</li>; <li><a href=""https://github.com/apache/spark/commit/32aff86477ac001b0ee047db08591d89e90c6eb8""><code>32aff86</code></a> [SPARK-39447][SQL][3.2] Avoid AssertionError in AdaptiveSparkPlanExec.doExecu...</li>; <li><a href=""https://github.com/apache/spark/commit/be891ad99083564a7bf7f421e00b2cc4759a679f""><code>be891ad</code></a> [SPARK-39551][SQL][3.2] Add AQE invalid plan check</li>; <li><a href=""https://github.com/apache/spark/commit/1c0bd4c15a28d7c6a2dca846a5b8d0eb1d152aae""><code>1c0bd4c</code></a> [SPARK-39656][SQL][3.2] Fix wrong namespace in DescribeNamespaceExec</li>; <li><a href=""https://github.com/apache/spark/commit/3d084fe3217bea9af4c544f10ead8a2e5b97dad4""><code>3d084fe</code></a> [SPARK-",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12452:420,depend,dependencies,420,https://hail.is,https://github.com/hail-is/hail/pull/12452,1,['depend'],['dependencies']
Integrability,"Bumps [pytest-html](https://github.com/pytest-dev/pytest-html) from 1.20.0 to 3.1.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/pytest-dev/pytest-html/releases"">pytest-html's releases</a>.</em></p>; <blockquote>; <h2>v3.0.0a0</h2>; <p>Changed below are not curated yet and is machine generated. Look at <a href=""https://github.com/pytest-dev/pytest-html/blob/master/CHANGES.rst"">https://github.com/pytest-dev/pytest-html/blob/master/CHANGES.rst</a> for human curated changelist.</p>; <h2>Changes</h2>; <ul>; <li>Prep version 3.0.0 for release (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/362"">#362</a>) <a href=""https://github.com/gnikonorov""><code>@​gnikonorov</code></a></li>; </ul>; <h2>Major Changes</h2>; <ul>; <li>Stop shadowing the 'format' builtin (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/347"">#347</a>) <a href=""https://github.com/gnikonorov""><code>@​gnikonorov</code></a></li>; <li>Drop support for legacy Python 2.7 (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/230"">#230</a>) <a href=""https://github.com/hugovk""><code>@​hugovk</code></a></li>; </ul>; <h2>Minor Changes</h2>; <ul>; <li>Add support for py39 (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/345"">#345</a>) <a href=""https://github.com/ssbarnea""><code>@​ssbarnea</code></a></li>; <li>Enable py38 testing (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/326"">#326</a>) <a href=""https://github.com/ssbarnea""><code>@​ssbarnea</code></a></li>; <li>Strip ANSI escape sequences when ansi2html is missing (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/315"">#315</a>) <a href=""https://github.com/BeyondEvil""><code>@​BeyondEvil</code></a></li>; <li>Make the links column in the results table sortable (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/324"">#32",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11524:628,depend,dependabot,628,https://hail.is,https://github.com/hail-is/hail/pull/11524,2,['depend'],['dependabot']
Integrability,"Bumps [pytest-metadata](https://github.com/pytest-dev/pytest-metadata) from 2.0.1 to 2.0.2.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pytest-dev/pytest-metadata/blob/master/CHANGES.rst"">pytest-metadata's changelog</a>.</em></p>; <blockquote>; <h2>2.0.2 (2022-07-15)</h2>; <ul>; <li>Allow all python versions above 3.7</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pytest-dev/pytest-metadata/commit/6688a6f21c7bef1aaea5f8ac171be4a5df2eb527""><code>6688a6f</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-metadata/issues/50"">#50</a> from BeyondEvil/release-v2.0.2</li>; <li><a href=""https://github.com/pytest-dev/pytest-metadata/commit/f0b5503452f922a84faa213224a4970c57d8a654""><code>f0b5503</code></a> Release v2.0.2</li>; <li><a href=""https://github.com/pytest-dev/pytest-metadata/commit/ff493afce81b1bbe7a2f866cd27510e5d9b8feef""><code>ff493af</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-metadata/issues/47"">#47</a> from pytest-dev/pre-commit-ci-update-config</li>; <li><a href=""https://github.com/pytest-dev/pytest-metadata/commit/4591db1fa5546ff372ae95155caed99ce8dc4842""><code>4591db1</code></a> [pre-commit.ci] pre-commit autoupdate</li>; <li><a href=""https://github.com/pytest-dev/pytest-metadata/commit/0414bb9f81cc1856ea021504eecd22d202462f1d""><code>0414bb9</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-metadata/issues/46"">#46</a> from pytest-dev/pre-commit-ci-update-config</li>; <li><a href=""https://github.com/pytest-dev/pytest-metadata/commit/025be8999a22ae395b0e2b8ae4e7c9fa2334f874""><code>025be89</code></a> [pre-commit.ci] pre-commit autoupdate</li>; <li><a href=""https://github.com/pytest-dev/pytest-metadata/commit/429840f4de26276560961929f21aab79ed305875""><code>429840f</code></a> Avoid running nightly on forks</li",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12188:636,depend,dependabot,636,https://hail.is,https://github.com/hail-is/hail/pull/12188,1,['depend'],['dependabot']
Integrability,"Bumps [pytest-xdist](https://github.com/pytest-dev/pytest-xdist) from 2.2.1 to 2.5.0.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pytest-dev/pytest-xdist/blob/master/CHANGELOG.rst"">pytest-xdist's changelog</a>.</em></p>; <blockquote>; <h1>pytest-xdist 2.5.0 (2021-12-10)</h1>; <h2>Deprecations and Removals</h2>; <ul>; <li><code>[#468](https://github.com/pytest-dev/pytest-xdist/issues/468) &lt;https://github.com/pytest-dev/pytest-xdist/issues/468&gt;</code>_: The <code>--boxed</code> command line argument is deprecated. Install pytest-forked and use <code>--forked</code> instead. pytest-xdist 3.0.0 will remove the <code>--boxed</code> argument and pytest-forked dependency.</li>; </ul>; <h2>Features</h2>; <ul>; <li>; <p><code>[#722](https://github.com/pytest-dev/pytest-xdist/issues/722) &lt;https://github.com/pytest-dev/pytest-xdist/issues/722&gt;</code>_: Full compatibility with pytest 7 - no deprecation warnings or use of legacy features.</p>; </li>; <li>; <p><code>[#733](https://github.com/pytest-dev/pytest-xdist/issues/733) &lt;https://github.com/pytest-dev/pytest-xdist/issues/733&gt;</code>_: New <code>--dist=loadgroup</code> option, which ensures all tests marked with <code>@pytest.mark.xdist_group</code> run in the same session/worker. Other tests run distributed as in <code>--dist=load</code>.</p>; </li>; </ul>; <h2>Trivial Changes</h2>; <ul>; <li>; <p><code>[#708](https://github.com/pytest-dev/pytest-xdist/issues/708) &lt;https://github.com/pytest-dev/pytest-xdist/issues/708&gt;</code>_: Use <code>@pytest.hookspec</code> decorator to declare hook options in <code>newhooks.py</code> to avoid warnings in <code>pytest 7.0</code>.</p>; </li>; <li>; <p><code>[#719](https://github.com/pytest-dev/pytest-xdist/issues/719) &lt;https://github.com/pytest-dev/pytest-xdist/issues/719&gt;</code>_: Use up-to-date <code>setup.cfg</code>/<code>pyproject.toml</code> packaging setup.</p>; </li>; <li>; <p><code>[#720](https://github.co",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11491:714,depend,dependency,714,https://hail.is,https://github.com/hail-is/hail/pull/11491,2,['depend'],['dependency']
Integrability,"Bumps [pytest](https://github.com/pytest-dev/pytest) from 6.2.5 to 7.0.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/pytest-dev/pytest/releases"">pytest's releases</a>.</em></p>; <blockquote>; <h2>7.0.1</h2>; <h1>pytest 7.0.1 (2022-02-11)</h1>; <h2>Bug Fixes</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9608"">#9608</a>: Fix invalid importing of <code>importlib.readers</code> in Python 3.9.</li>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9610"">#9610</a>: Restore [UnitTestFunction.obj]{.title-ref} to return unbound rather than bound method.; Fixes a crash during a failed teardown in unittest TestCases with non-default [__init__]{.title-ref}.; Regressed in pytest 7.0.0.</li>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9636"">#9636</a>: The <code>pythonpath</code> plugin was renamed to <code>python_path</code>. This avoids a conflict with the <code>pytest-pythonpath</code> plugin.</li>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9642"">#9642</a>: Fix running tests by id with <code>::</code> in the parametrize portion.</li>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9643"">#9643</a>: Delay issuing a <code>~pytest.PytestWarning</code>{.interpreted-text role=&quot;class&quot;} about diamond inheritance involving <code>~pytest.Item</code>{.interpreted-text role=&quot;class&quot;} and; <code>~pytest.Collector</code>{.interpreted-text role=&quot;class&quot;} so it can be filtered using <code>standard warning filters &lt;warnings&gt;</code>{.interpreted-text role=&quot;ref&quot;}.</li>; </ul>; <h2>7.0.0</h2>; <h1>pytest 7.0.0 (2022-02-03)</h1>; <p>(<strong>Please see the full set of changes for this release also in the 7.0.0rc1 notes below</strong>)</p>; <h2>Deprecations</h2>; <ul>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pyte",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11516:358,depend,dependabot,358,https://hail.is,https://github.com/hail-is/hail/pull/11516,9,['depend'],['dependabot']
Integrability,"Bumps [pytest](https://github.com/pytest-dev/pytest) from 6.2.5 to 7.1.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/pytest-dev/pytest/releases"">pytest's releases</a>.</em></p>; <blockquote>; <h2>7.1.0</h2>; <h1>pytest 7.1.0 (2022-03-13)</h1>; <h2>Breaking Changes</h2>; <ul>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/8838"">#8838</a>: As per our policy, the following features have been deprecated in the 6.X series and are now; removed:</p>; <ul>; <li><code>pytest._fillfuncargs</code> function.</li>; <li><code>pytest_warning_captured</code> hook - use <code>pytest_warning_recorded</code> instead.</li>; <li><code>-k -foobar</code> syntax - use <code>-k 'not foobar'</code> instead.</li>; <li><code>-k foobar:</code> syntax.</li>; <li><code>pytest.collect</code> module - import from <code>pytest</code> directly.</li>; </ul>; <p>For more information consult; <a href=""https://docs.pytest.org/en/latest/deprecations.html"">Deprecations and Removals</a> in the docs.</p>; </li>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9437"">#9437</a>: Dropped support for Python 3.6, which reached <a href=""https://devguide.python.org/#status-of-python-branches"">end-of-life</a> at 2021-12-23.</p>; </li>; </ul>; <h2>Improvements</h2>; <ul>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/5192"">#5192</a>: Fixed test output for some data types where <code>-v</code> would show less information.</p>; <p>Also, when showing diffs for sequences, <code>-q</code> would produce full diffs instead of the expected diff.</p>; </li>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9362"">#9362</a>: pytest now avoids specialized assert formatting when it is detected that the default <code>__eq__</code> is overridden in <code>attrs</code> or <code>dataclasses</code>.</p>; </li>; <li>; <p><a href=""https://github-redirec",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11571:370,depend,dependabot,370,https://hail.is,https://github.com/hail-is/hail/pull/11571,2,['depend'],['dependabot']
Integrability,"Bumps [pytest](https://github.com/pytest-dev/pytest) from 6.2.5 to 7.1.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/pytest-dev/pytest/releases"">pytest's releases</a>.</em></p>; <blockquote>; <h2>7.1.1</h2>; <h1>pytest 7.1.1 (2022-03-17)</h1>; <h2>Bug Fixes</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9767"">#9767</a>: Fixed a regression in pytest 7.1.0 where some conftest.py files outside of the source tree (e.g. in the [site-packages]{.title-ref} directory) were not picked up.</li>; </ul>; <h2>7.1.0</h2>; <h1>pytest 7.1.0 (2022-03-13)</h1>; <h2>Breaking Changes</h2>; <ul>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/8838"">#8838</a>: As per our policy, the following features have been deprecated in the 6.X series and are now; removed:</p>; <ul>; <li><code>pytest._fillfuncargs</code> function.</li>; <li><code>pytest_warning_captured</code> hook - use <code>pytest_warning_recorded</code> instead.</li>; <li><code>-k -foobar</code> syntax - use <code>-k 'not foobar'</code> instead.</li>; <li><code>-k foobar:</code> syntax.</li>; <li><code>pytest.collect</code> module - import from <code>pytest</code> directly.</li>; </ul>; <p>For more information consult; <a href=""https://docs.pytest.org/en/latest/deprecations.html"">Deprecations and Removals</a> in the docs.</p>; </li>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9437"">#9437</a>: Dropped support for Python 3.6, which reached <a href=""https://devguide.python.org/#status-of-python-branches"">end-of-life</a> at 2021-12-23.</p>; </li>; </ul>; <h2>Improvements</h2>; <ul>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/5192"">#5192</a>: Fixed test output for some data types where <code>-v</code> would show less information.</p>; <p>Also, when showing diffs for sequences, <code>-q</code> would produce full diffs instead of the ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11619:358,depend,dependabot,358,https://hail.is,https://github.com/hail-is/hail/pull/11619,2,['depend'],['dependabot']
Integrability,"Bumps [pytest](https://github.com/pytest-dev/pytest) from 7.1.1 to 7.1.3.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/pytest-dev/pytest/releases"">pytest's releases</a>.</em></p>; <blockquote>; <h2>7.1.3</h2>; <h1>pytest 7.1.3 (2022-08-31)</h1>; <h2>Bug Fixes</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/10060"">#10060</a>: When running with <code>--pdb</code>, <code>TestCase.tearDown</code> is no longer called for tests when the <em>class</em> has been skipped via <code>unittest.skip</code> or <code>pytest.mark.skip</code>.</li>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/10190"">#10190</a>: Invalid XML characters in setup or teardown error messages are now properly escaped for JUnit XML reports.</li>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/10230"">#10230</a>: Ignore <code>.py</code> files created by <code>pyproject.toml</code>-based editable builds introduced in <a href=""https://pip.pypa.io/en/stable/news/#v21-3"">pip 21.3</a>.</li>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/3396"">#3396</a>: Doctests now respect the <code>--import-mode</code> flag.</li>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9514"">#9514</a>: Type-annotate <code>FixtureRequest.param</code> as <code>Any</code> as a stop gap measure until <code>8073</code>{.interpreted-text role=&quot;issue&quot;} is fixed.</li>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9791"">#9791</a>: Fixed a path handling code in <code>rewrite.py</code> that seems to work fine, but was incorrect and fails in some systems.</li>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9917"">#9917</a>: Fixed string representation for <code>pytest.approx</code>{.interpreted-text role=&quot;func&quot;} when used to compare tuples.</li>; </ul>; <h2>Imp",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12187:358,depend,dependabot,358,https://hail.is,https://github.com/hail-is/hail/pull/12187,4,"['depend', 'message']","['dependabot', 'messages']"
Integrability,"Bumps [python-dateutil](https://github.com/dateutil/dateutil) from 2.8.1 to 2.8.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/dateutil/dateutil/releases"">python-dateutil's releases</a>.</em></p>; <blockquote>; <h2>2.8.2</h2>; <h1>Version 2.8.2 (2021-07-08)</h1>; <h2>Data updates</h2>; <ul>; <li>Updated tzdata version to 2021a. (gh pr <a href=""https://github-redirect.dependabot.com/dateutil/dateutil/issues/1128"">#1128</a>)</li>; </ul>; <h2>Bugfixes</h2>; <ul>; <li>Fixed a bug in the parser where non-<code>ValueError</code> exceptions would be raised; during exception handling; this would happen, for example, if an; <code>IllegalMonthError</code> was raised in <code>dateutil</code> code. Fixed by Mark Bailey.; (gh issue <a href=""https://github-redirect.dependabot.com/dateutil/dateutil/issues/981"">#981</a>, pr <a href=""https://github-redirect.dependabot.com/dateutil/dateutil/issues/987"">#987</a>).</li>; <li>Fixed the custom <code>repr</code> for <code>dateutil.parser.ParserError</code>, which was not; defined due to an indentation error. (gh issue <a href=""https://github-redirect.dependabot.com/dateutil/dateutil/issues/991"">#991</a>, gh pr <a href=""https://github-redirect.dependabot.com/dateutil/dateutil/issues/993"">#993</a>)</li>; <li>Fixed a bug that caused <code>b'</code> prefixes to appear in parse_isodate exception; messages. Reported and fixed by Paul Brown (<a href=""https://github.com/pawl""><code>@​pawl</code></a>) (gh pr <a href=""https://github-redirect.dependabot.com/dateutil/dateutil/issues/1122"">#1122</a>)</li>; <li>Make <code>isoparse</code> raise when trying to parse times with inconsistent use of; <code>:</code> separator. Reported and fixed by <a href=""https://github.com/mariocj89""><code>@​mariocj89</code></a> (gh pr <a href=""https://github-redirect.dependabot.com/dateutil/dateutil/issues/1125"">#1125</a>).</li>; <li>Fixed <code>tz.gettz()</code> not returning local time when passed an empty string.; Repor",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11518:420,depend,dependabot,420,https://hail.is,https://github.com/hail-is/hail/pull/11518,3,['depend'],['dependabot']
Integrability,"Bumps [qtpy](https://github.com/spyder-ide/qtpy) from 2.1.0 to 2.2.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/spyder-ide/qtpy/releases"">qtpy's releases</a>.</em></p>; <blockquote>; <h2>QtPy 2.2.0</h2>; <h2>What's Changed</h2>; <ul>; <li>PR: Add workaround for <code>mode</code> argument in QTextCursor.movePosition (PySide6) by <a href=""https://github.com/rear1019""><code>@​rear1019</code></a> in <a href=""https://github-redirect.dependabot.com/spyder-ide/qtpy/pull/346"">spyder-ide/qtpy#346</a></li>; <li>PR: Add missing imports and modules by <a href=""https://github.com/DaelonSuzuka""><code>@​DaelonSuzuka</code></a> in <a href=""https://github-redirect.dependabot.com/spyder-ide/qtpy/pull/344"">spyder-ide/qtpy#344</a></li>; <li>PR: Restore <code>WEBENGINE</code> constant in <code>QtWebEngineWidgets</code> by <a href=""https://github.com/ccordoba12""><code>@​ccordoba12</code></a> in <a href=""https://github-redirect.dependabot.com/spyder-ide/qtpy/pull/350"">spyder-ide/qtpy#350</a></li>; <li>PR: Add note to readme about use with Pyright by <a href=""https://github.com/CAM-Gerlach""><code>@​CAM-Gerlach</code></a> in <a href=""https://github-redirect.dependabot.com/spyder-ide/qtpy/pull/353"">spyder-ide/qtpy#353</a></li>; <li>PR: Add wrapper around sip/shiboken isdeleted/isvalid (compat.py) by <a href=""https://github.com/zjp""><code>@​zjp</code></a> in <a href=""https://github-redirect.dependabot.com/spyder-ide/qtpy/pull/354"">spyder-ide/qtpy#354</a></li>; <li>PR: Fix PyQt6 typing import for Qt by <a href=""https://github.com/tlambert03""><code>@​tlambert03</code></a> in <a href=""https://github-redirect.dependabot.com/spyder-ide/qtpy/pull/358"">spyder-ide/qtpy#358</a></li>; <li>PR: Add initial <code>Methods, helpers and QtPy namespace specifics</code> section to the README by <a href=""https://github.com/dalthviz""><code>@​dalthviz</code></a> in <a href=""https://github-redirect.dependabot.com/spyder-ide/qtpy/pull/357"">spyder-ide/qtpy#357</a></",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12194:484,depend,dependabot,484,https://hail.is,https://github.com/hail-is/hail/pull/12194,3,['depend'],['dependabot']
Integrability,"Bumps [requests](https://github.com/psf/requests) from 2.25.1 to 2.27.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/psf/requests/releases"">requests's releases</a>.</em></p>; <blockquote>; <h2>v2.27.1</h2>; <h2>2.27.1 (2022-01-05)</h2>; <p><strong>Bugfixes</strong></p>; <ul>; <li>Fixed parsing issue that resulted in the <code>auth</code> component being; dropped from proxy URLs. (<a href=""https://github-redirect.dependabot.com/psf/requests/issues/6028"">#6028</a>)</li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/psf/requests/blob/v2.27.1/HISTORY.md#2271-2022-01-05"">https://github.com/psf/requests/blob/v2.27.1/HISTORY.md#2271-2022-01-05</a></p>; <h2>v2.27.0</h2>; <h2>2.27.0 (2022-01-03)</h2>; <p><strong>Improvements</strong></p>; <ul>; <li>; <p>Officially added support for Python 3.10. (<a href=""https://github-redirect.dependabot.com/psf/requests/issues/5928"">#5928</a>)</p>; </li>; <li>; <p>Added a <code>requests.exceptions.JSONDecodeError</code> to unify JSON exceptions between; Python 2 and 3. This gets raised in the <code>response.json()</code> method, and is; backwards compatible as it inherits from previously thrown exceptions.; Can be caught from <code>requests.exceptions.RequestException</code> as well. (<a href=""https://github-redirect.dependabot.com/psf/requests/issues/5856"">#5856</a>)</p>; </li>; <li>; <p>Improved error text for misnamed <code>InvalidSchema</code> and <code>MissingSchema</code>; exceptions. This is a temporary fix until exceptions can be renamed; (Schema-&gt;Scheme). (<a href=""https://github-redirect.dependabot.com/psf/requests/issues/6017"">#6017</a>)</p>; </li>; <li>; <p>Improved proxy parsing for proxy URLs missing a scheme. This will address; recent changes to <code>urlparse</code> in Python 3.9+. (<a href=""https://github-redirect.dependabot.com/psf/requests/issues/5917"">#5917</a>)</p>; </li>; </ul>; <p><strong>Bugfixes</strong></p>; <ul>; <li>; <p>Fixed defect i",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11528:466,depend,dependabot,466,https://hail.is,https://github.com/hail-is/hail/pull/11528,4,['depend'],['dependabot']
Integrability,"Bumps [rich](https://github.com/Textualize/rich) from 12.6.0 to 13.7.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/Textualize/rich/releases"">rich's releases</a>.</em></p>; <blockquote>; <h2>The &quot;It's a wrap&quot; release</h2>; <h2>[13.7.0] - 2023-11-15</h2>; <h3>Added</h3>; <ul>; <li>Adds missing parameters to Panel.fit <a href=""https://redirect.github.com/Textualize/rich/issues/3142"">Textualize/rich#3142</a></li>; </ul>; <h3>Fixed</h3>; <ul>; <li>Some text goes missing during wrapping when it contains double width characters <a href=""https://redirect.github.com/Textualize/rich/issues/3176"">Textualize/rich#3176</a></li>; <li>Ensure font is correctly inherited in exported HTML <a href=""https://redirect.github.com/Textualize/rich/issues/3104"">Textualize/rich#3104</a></li>; <li>Fixed typing for <code>FloatPrompt</code>.</li>; </ul>; <h2>The Python 3.12 release</h2>; <p>Mostly a meta update in readiness for the release of Python3.12</p>; <h2>[13.6.0] - 2023-09-30</h2>; <h3>Added</h3>; <ul>; <li>Added Python 3.12 to classifiers.</li>; </ul>; <h2>Markdown fixes</h2>; <h2>[13.5.3] - 2023-09-17</h2>; <h3>Fixed</h3>; <ul>; <li>Markdown table rendering issue with inline styles and links <a href=""https://redirect.github.com/Textualize/rich/issues/3115"">Textualize/rich#3115</a></li>; <li>Fix Markdown code blocks on a light background <a href=""https://redirect.github.com/Textualize/rich/issues/3123"">Textualize/rich#3123</a></li>; </ul>; <h2>v13.5.2</h2>; <p>Bugfix</p>; <h2>[13.5.2] - 2023-08-01</h2>; <h3>Fixed</h3>; <ul>; <li>Fixed Text.expand_tabs assertion error</li>; </ul>; <h2>v13.5.1</h2>; <p>Very minor update to URL highlighting</p>; <h2>[13.5.1] - 2023-07-31</h2>; <h3>Fixed</h3>; <ul>; <li>Fix tilde character (<code>~</code>) not included in link regex when printing to console <a href=""https://redirect.github.com/Textualize/rich/issues/3057"">Textualize/rich#3057</a></li>; </ul>; <h2>Mostly cake, one or two puppies</h2",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14012:258,wrap,wrap,258,https://hail.is,https://github.com/hail-is/hail/pull/14012,4,['wrap'],"['wrap', 'wrapping']"
Integrability,"Bumps [rich](https://github.com/Textualize/rich) from 12.6.0 to 13.7.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/Textualize/rich/releases"">rich's releases</a>.</em></p>; <blockquote>; <h2>v13.7.1</h2>; <p>Fixes some character widths</p>; <h2>[13.7.1] - 2023-02-28</h2>; <h3>Fixed</h3>; <ul>; <li>Updated the widths of some characters <a href=""https://redirect.github.com/Textualize/rich/pull/3289"">Textualize/rich#3289</a></li>; </ul>; <h2>The &quot;It's a wrap&quot; release</h2>; <h2>[13.7.0] - 2023-11-15</h2>; <h3>Added</h3>; <ul>; <li>Adds missing parameters to Panel.fit <a href=""https://redirect.github.com/Textualize/rich/issues/3142"">Textualize/rich#3142</a></li>; </ul>; <h3>Fixed</h3>; <ul>; <li>Some text goes missing during wrapping when it contains double width characters <a href=""https://redirect.github.com/Textualize/rich/issues/3176"">Textualize/rich#3176</a></li>; <li>Ensure font is correctly inherited in exported HTML <a href=""https://redirect.github.com/Textualize/rich/issues/3104"">Textualize/rich#3104</a></li>; <li>Fixed typing for <code>FloatPrompt</code>.</li>; </ul>; <h2>The Python 3.12 release</h2>; <p>Mostly a meta update in readiness for the release of Python3.12</p>; <h2>[13.6.0] - 2023-09-30</h2>; <h3>Added</h3>; <ul>; <li>Added Python 3.12 to classifiers.</li>; </ul>; <h2>Markdown fixes</h2>; <h2>[13.5.3] - 2023-09-17</h2>; <h3>Fixed</h3>; <ul>; <li>Markdown table rendering issue with inline styles and links <a href=""https://redirect.github.com/Textualize/rich/issues/3115"">Textualize/rich#3115</a></li>; <li>Fix Markdown code blocks on a light background <a href=""https://redirect.github.com/Textualize/rich/issues/3123"">Textualize/rich#3123</a></li>; </ul>; <h2>v13.5.2</h2>; <p>Bugfix</p>; <h2>[13.5.2] - 2023-08-01</h2>; <h3>Fixed</h3>; <ul>; <li>Fixed Text.expand_tabs assertion error</li>; </ul>; <h2>v13.5.1</h2>; <p>Very minor update to URL highlighting</p>; <!-- raw HTML omitted -->; </blockquot",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14376:510,wrap,wrap,510,https://hail.is,https://github.com/hail-is/hail/pull/14376,4,['wrap'],"['wrap', 'wrapping']"
Integrability,"Bumps [sphinx-autodoc-typehints](https://github.com/tox-dev/sphinx-autodoc-typehints) from 1.11.1 to 1.18.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/releases"">sphinx-autodoc-typehints's releases</a>.</em></p>; <blockquote>; <h2>1.18.2</h2>; <h2>What's Changed</h2>; <ul>; <li>[pre-commit.ci] pre-commit autoupdate by <a href=""https://github.com/pre-commit-ci""><code>@​pre-commit-ci</code></a> in <a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/pull/230"">tox-dev/sphinx-autodoc-typehints#230</a></li>; <li>Support and require nptyping 2.1.1 by <a href=""https://github.com/gaborbernat""><code>@​gaborbernat</code></a> in <a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/pull/232"">tox-dev/sphinx-autodoc-typehints#232</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/compare/1.18.1...1.18.2"">https://github.com/tox-dev/sphinx-autodoc-typehints/compare/1.18.1...1.18.2</a></p>; <h2>1.18.1</h2>; <p>No release notes provided.</p>; <h2>1.18.0</h2>; <p>No release notes provided.</p>; <h2>1.17.1</h2>; <p>No release notes provided.</p>; <h2>typehints_use_rtype support and handle TypeError</h2>; <p>No release notes provided.</p>; <h2>1.16.0</h2>; <p>No release notes provided.</p>; <h2>1.15.3</h2>; <p>No release notes provided.</p>; <h2>1.15.2</h2>; <p>No release notes provided.</p>; <h2>1.15.1</h2>; <p>No release notes provided.</p>; <h2>1.15.0</h2>; <p>No release notes provided.</p>; <h2>1.14.1</h2>; <p>No release notes provided.</p>; <h2>Added document_defaults config option</h2>; <p>No release notes provided.</p>; <h2>Fix NewType is inserting a reference as first argument</h2>; <p>No release notes provided.</p>; <h2>Python 3.10 support and PEP-563, drop 3.6</h2>; <p>No release notes provided.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sour",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11893:516,depend,dependabot,516,https://hail.is,https://github.com/hail-is/hail/pull/11893,2,['depend'],['dependabot']
Integrability,"Bumps [sphinx-autodoc-typehints](https://github.com/tox-dev/sphinx-autodoc-typehints) from 1.11.1 to 1.18.3.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/releases"">sphinx-autodoc-typehints's releases</a>.</em></p>; <blockquote>; <h2>1.18.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Fix for new nptyping by <a href=""https://github.com/gaborbernat""><code>@​gaborbernat</code></a> in <a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/pull/235"">tox-dev/sphinx-autodoc-typehints#235</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/compare/1.18.2...1.18.3"">https://github.com/tox-dev/sphinx-autodoc-typehints/compare/1.18.2...1.18.3</a></p>; <h2>1.18.2</h2>; <h2>What's Changed</h2>; <ul>; <li>[pre-commit.ci] pre-commit autoupdate by <a href=""https://github.com/pre-commit-ci""><code>@​pre-commit-ci</code></a> in <a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/pull/230"">tox-dev/sphinx-autodoc-typehints#230</a></li>; <li>Support and require nptyping 2.1.1 by <a href=""https://github.com/gaborbernat""><code>@​gaborbernat</code></a> in <a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/pull/232"">tox-dev/sphinx-autodoc-typehints#232</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/compare/1.18.1...1.18.2"">https://github.com/tox-dev/sphinx-autodoc-typehints/compare/1.18.1...1.18.2</a></p>; <h2>1.18.1</h2>; <p>No release notes provided.</p>; <h2>1.18.0</h2>; <p>No release notes provided.</p>; <h2>1.17.1</h2>; <p>No release notes provided.</p>; <h2>typehints_use_rtype support and handle TypeError</h2>; <p>No release notes provided.</p>; <h2>1.16.0</h2>; <p>No release notes provided.</p>; <h2>1.15.3</h2>; <p>No release notes provided.</p>; <h2>1.15.2</h2>; <p>No release notes provided.</p>; <h",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11909:495,depend,dependabot,495,https://hail.is,https://github.com/hail-is/hail/pull/11909,1,['depend'],['dependabot']
Integrability,"Bumps [sphinx-rtd-theme](https://github.com/readthedocs/sphinx_rtd_theme) from 0.4.2 to 1.0.0.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/readthedocs/sphinx_rtd_theme/blob/master/docs/changelog.rst"">sphinx-rtd-theme's changelog</a>.</em></p>; <blockquote>; <h1>1.0.0</h1>; <h2>Incompatible Changes</h2>; <ul>; <li>The minimum supported python version is now 2.7 or 3.4 and greater (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1093"">#1093</a>)</li>; <li>The minimum supported Sphinx version is now 1.6 (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1091"">#1091</a>)</li>; </ul>; <h2>Deprecated</h2>; <ul>; <li>Support for Sphinx's HTML4 writer is deprecated and will be removed in version 2.0 (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1091"">#1091</a>)</li>; </ul>; <h2>Features</h2>; <ul>; <li>Add support for Sphinx 4.x (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1123"">#1123</a>)</li>; <li>Add support for Docutils 0.17 (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1185"">#1185</a> and <a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1199"">#1199</a>)</li>; <li>Fixed logo scaling on IE11 (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1183"">#1183</a>)</li>; <li>Added support for logos as URLs (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1171"">#1171</a>)</li>; <li>Align top and side navigation background colors on mobile (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1132"">#1132</a>)</li>; <li>Added support for deep toc levels (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1089"">#1089</a>)</li>; <li>Updated translations for Chinese, Dutch, Estonian, Frenc",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11464:462,depend,dependabot,462,https://hail.is,https://github.com/hail-is/hail/pull/11464,6,['depend'],['dependabot']
Integrability,"Bumps [sphinx-rtd-theme](https://github.com/readthedocs/sphinx_rtd_theme) from 1.3.0 to 2.0.0.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/readthedocs/sphinx_rtd_theme/blob/master/docs/changelog.rst"">sphinx-rtd-theme's changelog</a>.</em></p>; <blockquote>; <h1>2.0.0</h1>; <h2>Added</h2>; <ul>; <li>Support for Sphinx versions <code>6.x</code> and <code>7.x</code></li>; <li>Support for docutils <code>&lt;=0.20</code></li>; </ul>; <h2>Deprecations</h2>; <ul>; <li>The HTML4 writer is now officially deprecated. An error will be thrown if your; project configuration still uses the HTML4 writer.</li>; <li>Support for Sphinx versions &lt; 5.0 was removed.</li>; <li>In addition, our supported dependencies will match the dependencies from our; lowest supported Sphinx release, version 5.0: Python &gt;= 3.6 and docutils &gt; 0.14 and &lt; 0.19</li>; </ul>; <p>.. _release-1.3.0:</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/readthedocs/sphinx_rtd_theme/commit/7c9b1b5d391f6d7fae72274393eb25d1df96e546""><code>7c9b1b5</code></a> Release 2.0 final (<a href=""https://redirect.github.com/readthedocs/sphinx_rtd_theme/issues/1544"">#1544</a>)</li>; <li><a href=""https://github.com/readthedocs/sphinx_rtd_theme/commit/c1044107602faf9be43e4358bc4f8b6abff9b420""><code>c104410</code></a> Bump for next potential release, 2.0.0rc5 (<a href=""https://redirect.github.com/readthedocs/sphinx_rtd_theme/issues/1539"">#1539</a>)</li>; <li><a href=""https://github.com/readthedocs/sphinx_rtd_theme/commit/53ca116ef64123735e5e445258b8b103ad31a26e""><code>53ca116</code></a> Release 2.0.0rc4 (<a href=""https://redirect.github.com/readthedocs/sphinx_rtd_theme/issues/1538"">#1538</a>)</li>; <li><a href=""https://github.com/readthedocs/sphinx_rtd_theme/commit/4498e97b462688bac2ff3615ac1da1b867b21842""><code>4498e97</code></a> Fix AttributeError when one of <code>css_files</code> is a string (<a href=""https://redire",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14502:740,depend,dependencies,740,https://hail.is,https://github.com/hail-is/hail/pull/14502,2,['depend'],['dependencies']
Integrability,"Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.5.4 to 4.4.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/sphinx-doc/sphinx/releases"">sphinx's releases</a>.</em></p>; <blockquote>; <h2>v4.4.0</h2>; <p>Changelog: <a href=""https://www.sphinx-doc.org/en/master/changes.html"">https://www.sphinx-doc.org/en/master/changes.html</a></p>; <h2>v4.3.1</h2>; <p>No release notes provided.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/sphinx-doc/sphinx/blob/4.x/CHANGES"">sphinx's changelog</a>.</em></p>; <blockquote>; <h1>Release 4.4.0 (released Jan 17, 2022)</h1>; <h2>Dependencies</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10007"">#10007</a>: Use <code>importlib_metadata</code> for python-3.9 or older</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10007"">#10007</a>: Drop <code>setuptools</code></li>; </ul>; <h2>Features added</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9075"">#9075</a>: autodoc: Add a config variable :confval:<code>autodoc_typehints_format</code>; to suppress the leading module names of typehints of function signatures (ex.; <code>io.StringIO</code> -&gt; <code>StringIO</code>)</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9831"">#9831</a>: Autosummary now documents only the members specified in a module's; <code>__all__</code> attribute if :confval:<code>autosummary_ignore_module_all</code> is set to; <code>False</code>. The default behaviour is unchanged. Autogen also now supports; this behavior with the <code>--respect-module-all</code> switch.</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9555"">#9555</a>: autosummary: Improve error messages on failure to load target object</li>; <li><a href=""https://github-redirect.dependabot.com/sp",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11522:697,Depend,Dependencies,697,https://hail.is,https://github.com/hail-is/hail/pull/11522,6,"['Depend', 'depend']","['Dependencies', 'dependabot']"
Integrability,"Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.5.4 to 4.5.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/sphinx-doc/sphinx/releases"">sphinx's releases</a>.</em></p>; <blockquote>; <h2>v4.5.0</h2>; <p>Changelog: <a href=""https://www.sphinx-doc.org/en/master/changes.html"">https://www.sphinx-doc.org/en/master/changes.html</a></p>; <h2>v4.4.0</h2>; <p>Changelog: <a href=""https://www.sphinx-doc.org/en/master/changes.html"">https://www.sphinx-doc.org/en/master/changes.html</a></p>; <h2>v4.3.1</h2>; <p>No release notes provided.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/sphinx-doc/sphinx/blob/4.x/CHANGES"">sphinx's changelog</a>.</em></p>; <blockquote>; <h1>Release 4.5.0 (released Mar 28, 2022)</h1>; <h2>Incompatible changes</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10112"">#10112</a>: extlinks: Disable hardcoded links detector by default</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9993"">#9993</a>, <a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10177"">#10177</a>: std domain: Disallow to refer an inline target via; :rst:role:<code>ref</code> role</li>; </ul>; <h2>Deprecated</h2>; <ul>; <li><code>sphinx.ext.napoleon.docstring.GoogleDocstring._qualify_name()</code></li>; </ul>; <h2>Features added</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10260"">#10260</a>: Enable <code>FORCE_COLOR</code> and <code>NO_COLOR</code> for terminal colouring</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10234"">#10234</a>: autosummary: Add &quot;autosummary&quot; CSS class to summary tables</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10125"">#10125</a>: extlinks: Improve suggestion message for a reference having title</li>; <li><a hre",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11714:917,depend,dependabot,917,https://hail.is,https://github.com/hail-is/hail/pull/11714,1,['depend'],['dependabot']
Integrability,"Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.5.4 to 4.5.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/sphinx-doc/sphinx/releases"">sphinx's releases</a>.</em></p>; <blockquote>; <h2>v4.5.0</h2>; <p>Changelog: <a href=""https://www.sphinx-doc.org/en/master/changes.html"">https://www.sphinx-doc.org/en/master/changes.html</a></p>; <h2>v4.4.0</h2>; <p>Changelog: <a href=""https://www.sphinx-doc.org/en/master/changes.html"">https://www.sphinx-doc.org/en/master/changes.html</a></p>; <h2>v4.3.1</h2>; <p>No release notes provided.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/sphinx-doc/sphinx/blob/5.x/CHANGES"">sphinx's changelog</a>.</em></p>; <blockquote>; <h1>Release 4.5.0 (released Mar 28, 2022)</h1>; <h2>Incompatible changes</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10112"">#10112</a>: extlinks: Disable hardcoded links detector by default</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9993"">#9993</a>, <a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10177"">#10177</a>: std domain: Disallow to refer an inline target via; :rst:role:<code>ref</code> role</li>; </ul>; <h2>Deprecated</h2>; <ul>; <li><code>sphinx.ext.napoleon.docstring.GoogleDocstring._qualify_name()</code></li>; </ul>; <h2>Features added</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10260"">#10260</a>: Enable <code>FORCE_COLOR</code> and <code>NO_COLOR</code> for terminal colouring</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10234"">#10234</a>: autosummary: Add &quot;autosummary&quot; CSS class to summary tables</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10125"">#10125</a>: extlinks: Improve suggestion message for a reference having title</li>; <li><a hre",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11730:917,depend,dependabot,917,https://hail.is,https://github.com/hail-is/hail/pull/11730,1,['depend'],['dependabot']
Integrability,"Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.5.4 to 5.0.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/sphinx-doc/sphinx/releases"">sphinx's releases</a>.</em></p>; <blockquote>; <h2>v5.0.0b1</h2>; <p>Changelog: <a href=""https://www.sphinx-doc.org/en/master/changes.html"">https://www.sphinx-doc.org/en/master/changes.html</a></p>; <h2>v4.5.0</h2>; <p>Changelog: <a href=""https://www.sphinx-doc.org/en/master/changes.html"">https://www.sphinx-doc.org/en/master/changes.html</a></p>; <h2>v4.4.0</h2>; <p>Changelog: <a href=""https://www.sphinx-doc.org/en/master/changes.html"">https://www.sphinx-doc.org/en/master/changes.html</a></p>; <h2>v4.3.1</h2>; <p>No release notes provided.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/sphinx-doc/sphinx/blob/5.x/CHANGES"">sphinx's changelog</a>.</em></p>; <blockquote>; <h1>Release 5.0.0 (released May 30, 2022)</h1>; <h2>Dependencies</h2>; <p>5.0.0 b1</p>; <ul>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10164"">#10164</a>: Support <code>Docutils 0.18</code>_. Patch by Adam Turner.</li>; </ul>; <p>.. _Docutils 0.18: <a href=""https://docutils.sourceforge.io/RELEASE-NOTES.html#release-0-18-2021-10-26"">https://docutils.sourceforge.io/RELEASE-NOTES.html#release-0-18-2021-10-26</a></p>; <h2>Incompatible changes</h2>; <p>5.0.0 b1</p>; <ul>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10031"">#10031</a>: autosummary: <code>sphinx.ext.autosummary.import_by_name()</code> now raises; <code>ImportExceptionGroup</code> instead of <code>ImportError</code> when it failed to import; target object. Please handle the exception if your extension uses the; function to import Python object. As a workaround, you can disable the; behavior via <code>grouped_exception=False</code> keyword argument until v7.0.</li>; <li><a href=""https://github-redirect.dependabot.c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11871:999,Depend,Dependencies,999,https://hail.is,https://github.com/hail-is/hail/pull/11871,1,['Depend'],['Dependencies']
Integrability,"Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 6.2.1 to 7.0.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/sphinx-doc/sphinx/releases"">sphinx's releases</a>.</em></p>; <blockquote>; <h2>v7.0.1</h2>; <p>Changelog: <a href=""https://www.sphinx-doc.org/en/master/changes.html"">https://www.sphinx-doc.org/en/master/changes.html</a></p>; <h2>v7.0.0</h2>; <p>Changelog: <a href=""https://www.sphinx-doc.org/en/master/changes.html"">https://www.sphinx-doc.org/en/master/changes.html</a></p>; <h2>v7.0.0rc1</h2>; <p>Changelog: <a href=""https://www.sphinx-doc.org/en/master/changes.html"">https://www.sphinx-doc.org/en/master/changes.html</a></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/sphinx-doc/sphinx/blob/master/CHANGES"">sphinx's changelog</a>.</em></p>; <blockquote>; <h1>Release 7.0.1 (released May 12, 2023)</h1>; <h2>Dependencies</h2>; <ul>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11411"">#11411</a>: Support <code>Docutils 0.20</code>_. Patch by Adam Turner.</li>; </ul>; <p>.. _Docutils 0.20: <a href=""https://docutils.sourceforge.io/RELEASE-NOTES.html#release-0-20-2023-05-04"">https://docutils.sourceforge.io/RELEASE-NOTES.html#release-0-20-2023-05-04</a></p>; <h2>Bugs fixed</h2>; <ul>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11418"">#11418</a>: Clean up remaining references to <code>sphinx.setup_command</code>; following the removal of support for setuptools.; Patch by Willem Mulder.</li>; </ul>; <h1>Release 7.0.0 (released Apr 29, 2023)</h1>; <h2>Incompatible changes</h2>; <ul>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11359"">#11359</a>: Remove long-deprecated aliases for <code>MecabSplitter</code> and; <code>DefaultSplitter</code> in <code>sphinx.search.ja</code>.</li>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11360"">#11360</a>: Remove deprecated <",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13054:951,Depend,Dependencies,951,https://hail.is,https://github.com/hail-is/hail/pull/13054,1,['Depend'],['Dependencies']
Integrability,"Bumps [svelte](https://github.com/sveltejs/svelte) from 3.38.2 to 3.49.0.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/sveltejs/svelte/blob/master/CHANGELOG.md"">svelte's changelog</a>.</em></p>; <blockquote>; <h2>3.49.0</h2>; <ul>; <li>Improve performance of string escaping during SSR (<a href=""https://github-redirect.dependabot.com/sveltejs/svelte/pull/5701"">#5701</a>)</li>; <li>Add <code>ComponentType</code> and <code>ComponentProps</code> convenience types (<a href=""https://github-redirect.dependabot.com/sveltejs/svelte/pull/6770"">#6770</a>)</li>; <li>Add support for CSS <code>@layer</code> (<a href=""https://github-redirect.dependabot.com/sveltejs/svelte/issues/7504"">#7504</a>)</li>; <li>Export <code>CompileOptions</code> from <code>svelte/compiler</code> (<a href=""https://github-redirect.dependabot.com/sveltejs/svelte/pull/7658"">#7658</a>)</li>; <li>Fix DOM-less components not being properly destroyed (<a href=""https://github-redirect.dependabot.com/sveltejs/svelte/issues/7488"">#7488</a>)</li>; <li>Fix <code>class:</code> directive updates with <code>&lt;svelte:element&gt;</code> (<a href=""https://github-redirect.dependabot.com/sveltejs/svelte/issues/7521"">#7521</a>, <a href=""https://github-redirect.dependabot.com/sveltejs/svelte/issues/7571"">#7571</a>)</li>; <li>Harden attribute escaping during SSR (<a href=""https://github-redirect.dependabot.com/sveltejs/svelte/pull/7530"">#7530</a>)</li>; </ul>; <h2>3.48.0</h2>; <ul>; <li>Allow creating cancelable custom events with <code>createEventDispatcher</code> (<a href=""https://github-redirect.dependabot.com/sveltejs/svelte/issues/4623"">#4623</a>)</li>; <li>Support <code>{@const}</code> tag in <code>{#if}</code> blocks <a href=""https://github-redirect.dependabot.com/sveltejs/svelte/issues/7241"">#7241</a></li>; <li>Return the context object in <code>setContext</code> <a href=""https://github-redirect.dependabot.com/sveltejs/svelte/issues/7427"">#7427</a></li>; <li>Allow comments ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12032:365,depend,dependabot,365,https://hail.is,https://github.com/hail-is/hail/pull/12032,12,['depend'],['dependabot']
Integrability,"Bumps [tqdm](https://github.com/tqdm/tqdm) from 4.42.1 to 4.63.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/tqdm/tqdm/releases"">tqdm's releases</a>.</em></p>; <blockquote>; <h2>tqdm v4.63.0 stable</h2>; <ul>; <li>add <code>__reversed__()</code></li>; <li>add efficient <code>__contains__()</code></li>; <li>improve CLI startup time (replace <code>pkg_resources</code> =&gt; <code>importlib</code>)</li>; <li><code>tqdm.autonotebook</code> warning &amp; <code>std</code> fallback on missing <code>ipywidgets</code> (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1218"">#1218</a> &lt;- <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1082"">#1082</a>, <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1217"">#1217</a>)</li>; <li>warn on positional CLI arguments</li>; <li>misc build/test framework updates; <ul>; <li>enable <code>py3.10</code> tests</li>; <li>add <code>conda</code> dependencies</li>; <li>update pre-commit hooks</li>; <li>fix <code>pytest</code> config (<code>nbval</code>, <code>asyncio</code>)</li>; <li>fix dependencies &amp; tests</li>; <li>fix site deployment</li>; </ul>; </li>; </ul>; <h2>tqdm v4.62.3 stable</h2>; <ul>; <li>fix minor typo (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1246"">#1246</a>)</li>; <li>minor example fix (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1246"">#1246</a>)</li>; <li>misc tidying &amp; refactoring</li>; <li>misc build/dev framework updates; <ul>; <li>update dependencies</li>; <li>update linters</li>; <li>update docs deployment branches</li>; </ul>; </li>; <li>misc test/ci updates; <ul>; <li>test forks</li>; <li>tidy OS &amp; Python version tests</li>; <li>bump primary python version 3.7 =&gt; 3.8</li>; <li>beta py3.10 testing</li>; <li>fix py2.7 tests</li>; <li>better timeout handling</li>; </ul>; </li>; </ul>; <h2>tqdm v4.62.2 stable</h2>; <ul>; <li>fix notebook memory leak (<a href=""https",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11587:600,depend,dependabot,600,https://hail.is,https://github.com/hail-is/hail/pull/11587,3,['depend'],['dependabot']
Integrability,"Bumps [tqdm](https://github.com/tqdm/tqdm) from 4.42.1 to 4.64.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/tqdm/tqdm/releases"">tqdm's releases</a>.</em></p>; <blockquote>; <h2>tqdm v4.64.1 stable</h2>; <ul>; <li>support <code>ipywidgets&gt;=8</code> (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1366"">#1366</a>, <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1361"">#1361</a> &lt;- <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1310"">#1310</a>, <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1359"">#1359</a>, <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1360"">#1360</a>, <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1364"">#1364</a>); <ul>; <li>fix jupyter lab display</li>; <li>update notebook tests</li>; </ul>; </li>; </ul>; <h2>tqdm v4.64.0 stable</h2>; <ul>; <li>add <code>contrib.slack</code> (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1313"">#1313</a>)</li>; </ul>; <h2>tqdm v4.63.2 stable</h2>; <ul>; <li><code>rich</code>: expose <code>options</code> kwargs (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1282"">#1282</a>)</li>; <li><code>autonotebook</code>: re-enable VSCode (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1309"">#1309</a>)</li>; <li>misc docs typos (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1301"">#1301</a>, <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1299"">#1299</a>)</li>; <li>update dev dependencies (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1311"">#1311</a>)</li>; </ul>; <h2>tqdm v4.63.1 stable</h2>; <ul>; <li>fix stderr/stdout missing <code>flush()</code> (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1248"">#1248</a> &lt;- <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1177"">#1177</a>)</li>; <li>misc speed improvements/optimisations",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12260:337,depend,dependabot,337,https://hail.is,https://github.com/hail-is/hail/pull/12260,6,['depend'],['dependabot']
Integrability,"Bumps [types-chardet](https://github.com/python/typeshed) from 4.0.4 to 5.0.1.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/python/typeshed/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=types-chardet&package-manager=pip&previous-version=4.0.4&new-version=5.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this depen",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12001:252,Depend,Dependabot,252,https://hail.is,https://github.com/hail-is/hail/pull/12001,9,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [types-chardet](https://github.com/python/typeshed) from 5.0.4 to 5.0.4.1.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/python/typeshed/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=types-chardet&package-manager=pip&previous-version=5.0.4&new-version=5.0.4.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this d",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12537:254,Depend,Dependabot,254,https://hail.is,https://github.com/hail-is/hail/pull/12537,9,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [types-chardet](https://github.com/python/typeshed) from 5.0.4.5 to 5.0.4.6.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/python/typeshed/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=types-chardet&package-manager=pip&previous-version=5.0.4.5&new-version=5.0.4.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for th",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13034:256,Depend,Dependabot,256,https://hail.is,https://github.com/hail-is/hail/pull/13034,9,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [types-python-dateutil](https://github.com/python/typeshed) from 2.8.17 to 2.8.19.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/python/typeshed/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=types-python-dateutil&package-manager=pip&previous-version=2.8.17&new-version=2.8.19)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12172:262,Depend,Dependabot,262,https://hail.is,https://github.com/hail-is/hail/pull/12172,9,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [types-requests](https://github.com/python/typeshed) from 2.27.30 to 2.28.0.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/python/typeshed/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=types-requests&package-manager=pip&previous-version=2.27.30&new-version=2.28.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for th",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11967:256,Depend,Dependabot,256,https://hail.is,https://github.com/hail-is/hail/pull/11967,9,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [types-requests](https://github.com/python/typeshed) from 2.28.11.1 to 2.28.11.2.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/python/typeshed/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=types-requests&package-manager=pip&previous-version=2.28.11.1&new-version=2.28.11.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any m",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12297:261,Depend,Dependabot,261,https://hail.is,https://github.com/hail-is/hail/pull/12297,9,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [types-requests](https://github.com/python/typeshed) from 2.28.11.2 to 2.28.11.3.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/python/typeshed/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=types-requests&package-manager=pip&previous-version=2.28.11.2&new-version=2.28.11.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any m",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12437:261,Depend,Dependabot,261,https://hail.is,https://github.com/hail-is/hail/pull/12437,9,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [types-setuptools](https://github.com/python/typeshed) from 57.4.17 to 65.3.0.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/python/typeshed/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=types-setuptools&package-manager=pip&previous-version=57.4.17&new-version=65.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more fo",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12181:258,Depend,Dependabot,258,https://hail.is,https://github.com/hail-is/hail/pull/12181,9,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [types-six](https://github.com/python/typeshed) from 1.16.15 to 1.16.18.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/python/typeshed/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=types-six&package-manager=pip&previous-version=1.16.15&new-version=1.16.18)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this depen",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12114:252,Depend,Dependabot,252,https://hail.is,https://github.com/hail-is/hail/pull/12114,9,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [types-six](https://github.com/python/typeshed) from 1.16.15 to 1.16.19.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/python/typeshed/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=types-six&package-manager=pip&previous-version=1.16.15&new-version=1.16.19)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this depen",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12131:252,Depend,Dependabot,252,https://hail.is,https://github.com/hail-is/hail/pull/12131,9,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [types-six](https://github.com/python/typeshed) from 1.16.21.20240301 to 1.16.21.20240311.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/python/typeshed/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=types-six&package-manager=pip&previous-version=1.16.21.20240301&new-version=1.16.21.20240311)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (un",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14491:270,Depend,Dependabot,270,https://hail.is,https://github.com/hail-is/hail/pull/14491,9,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [types-six](https://github.com/python/typeshed) from 1.16.21.20240301 to 1.16.21.20240425.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/python/typeshed/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=types-six&package-manager=pip&previous-version=1.16.21.20240301&new-version=1.16.21.20240425)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (un",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14501:270,Depend,Dependabot,270,https://hail.is,https://github.com/hail-is/hail/pull/14501,9,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [types-urllib3](https://github.com/python/typeshed) from 1.26.15 to 1.26.20.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/python/typeshed/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=types-urllib3&package-manager=pip&previous-version=1.26.15&new-version=1.26.20)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for th",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12068:256,Depend,Dependabot,256,https://hail.is,https://github.com/hail-is/hail/pull/12068,9,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [types-urllib3](https://github.com/python/typeshed) from 1.26.15 to 1.26.21.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/python/typeshed/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=types-urllib3&package-manager=pip&previous-version=1.26.15&new-version=1.26.21)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for th",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12072:256,Depend,Dependabot,256,https://hail.is,https://github.com/hail-is/hail/pull/12072,9,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [types-urllib3](https://github.com/python/typeshed) from 1.26.15 to 1.26.22.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/python/typeshed/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=types-urllib3&package-manager=pip&previous-version=1.26.15&new-version=1.26.22)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for th",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12077:256,Depend,Dependabot,256,https://hail.is,https://github.com/hail-is/hail/pull/12077,9,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps [typing-extensions](https://github.com/python/typing_extensions) from 4.2.0 to 4.3.0.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python/typing_extensions/blob/main/CHANGELOG.md"">typing-extensions's changelog</a>.</em></p>; <blockquote>; <h1>Release 4.3.0 (July 1, 2022)</h1>; <ul>; <li>Add <code>typing_extensions.NamedTuple</code>, allowing for generic <code>NamedTuple</code>s on; Python &lt;3.11 (backport from <a href=""https://github-redirect.dependabot.com/python/cpython/issues/92027"">python/cpython#92027</a>, by Serhiy Storchaka). Patch; by Alex Waygood (<a href=""https://github.com/AlexWaygood""><code>@​AlexWaygood</code></a>).</li>; <li>Adjust <code>typing_extensions.TypedDict</code> to allow for generic <code>TypedDict</code>s on; Python &lt;3.11 (backport from <a href=""https://github-redirect.dependabot.com/python/cpython/issues/27663"">python/cpython#27663</a>, by Samodya Abey). Patch by; Alex Waygood (<a href=""https://github.com/AlexWaygood""><code>@​AlexWaygood</code></a>).</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python/typing_extensions/commit/9c0759a260fe126210a1e2026720000a3c40a919""><code>9c0759a</code></a> Prepare release 4.3.0 (<a href=""https://github-redirect.dependabot.com/python/typing_extensions/issues/52"">#52</a>)</li>; <li><a href=""https://github.com/python/typing_extensions/commit/1baf0a58b2b4c5327871d06801187cba47aa6975""><code>1baf0a5</code></a> Backport generic <code>TypedDict</code>s (<a href=""https://github-redirect.dependabot.com/python/typing_extensions/issues/46"">#46</a>)</li>; <li><a href=""https://github.com/python/typing_extensions/commit/7c28357e412cef215a7d66c0ef69b568b316678b""><code>7c28357</code></a> Add a backport of generic <code>NamedTuple</code>s (<a href=""https://github-redirect.dependabot.com/python/typing_extensions/issues/44"">#44</a>)</li>; <li><a href=""https://github.com/python/typing_extensions/commi",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12200:500,depend,dependabot,500,https://hail.is,https://github.com/hail-is/hail/pull/12200,2,['depend'],['dependabot']
Integrability,"Bumps [typing-extensions](https://github.com/python/typing_extensions) from 4.3.0 to 4.4.0.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python/typing_extensions/blob/main/CHANGELOG.md"">typing-extensions's changelog</a>.</em></p>; <blockquote>; <h1>Release 4.4.0 (October 6, 2022)</h1>; <ul>; <li>Add <code>typing_extensions.Any</code> a backport of python 3.11's Any class which is; subclassable at runtime. (backport from <a href=""https://github-redirect.dependabot.com/python/cpython/issues/31841"">python/cpython#31841</a>, by Shantanu; and Jelle Zijlstra). Patch by James Hilton-Balfe (<a href=""https://github.com/Gobot1234""><code>@​Gobot1234</code></a>).</li>; <li>Add initial support for TypeVarLike <code>default</code> parameter, PEP 696.; Patch by Marc Mueller (<a href=""https://github.com/cdce8p""><code>@​cdce8p</code></a>).</li>; <li>Runtime support for PEP 698, adding <code>typing_extensions.override</code>. Patch by; Jelle Zijlstra.</li>; <li>Add the <code>infer_variance</code> parameter to <code>TypeVar</code>, as specified in PEP 695.; Patch by Jelle Zijlstra.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python/typing_extensions/commit/b5f375a332840cf8543bfc191463266382edec6a""><code>b5f375a</code></a> Prepare release 4.4.0 (<a href=""https://github-redirect.dependabot.com/python/typing_extensions/issues/82"">#82</a>)</li>; <li><a href=""https://github.com/python/typing_extensions/commit/354b938774d741a33cbabe916ae46db34afb3a05""><code>354b938</code></a> Add to README (<a href=""https://github-redirect.dependabot.com/python/typing_extensions/issues/81"">#81</a>)</li>; <li><a href=""https://github.com/python/typing_extensions/commit/3c21f33ebc6b3b45387c9f54fec1b7d1ce6a1f54""><code>3c21f33</code></a> Add <a href=""https://github.com/typing""><code>@​typing</code></a>.override (<a href=""https://github-redirect.dependabot.com/python/typing_extensions/issues/78"">#7",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12288:502,depend,dependabot,502,https://hail.is,https://github.com/hail-is/hail/pull/12288,1,['depend'],['dependabot']
Integrability,"Bumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.5 to 1.26.8.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/releases"">urllib3's releases</a>.</em></p>; <blockquote>; <h2>1.26.8</h2>; <p><strong>If you or your organization rely on urllib3 consider supporting us via <a href=""https://github.com/sponsors/urllib3"">GitHub Sponsors</a>.</strong></p>; <p>:warning: <strong>urllib3 v2.0 will drop support for Python 2</strong>: <a href=""https://urllib3.readthedocs.io/en/latest/v2-roadmap.html"">Read more in the v2.0 Roadmap</a></p>; <p>:warning: <strong>This release will be the last release supporting Python 3.5. Please upgrade to a non-EOL Python version.</strong></p>; <ul>; <li>Added extra message to<code>urllib3.exceptions.ProxyError</code> when urllib3 detects that a proxy is configured to use HTTPS but the proxy itself appears to only use HTTP.</li>; <li>Added a mention of the size of the connection pool when discarding a connection due to the pool being full.</li>; <li>Added explicit support for Python 3.11.</li>; <li>Deprecated the <code>Retry.MAX_BACKOFF</code> class property in favor of <code>Retry.DEFAULT_MAX_BACKOFF</code> to better match the rest of the default parameter names. <code>Retry.MAX_BACKOFF</code> is removed in v2.0.</li>; <li>Changed location of the vendored <code>ssl.match_hostname</code> function from <code>urllib3.packages.ssl_match_hostname</code> to <code>urllib3.util.ssl_match_hostname</code> to ensure Python 3.10+ compatibility after being repackaged by downstream distributors.</li>; <li>Fixed absolute imports, all imports are now relative.</li>; </ul>; <h2>1.26.7</h2>; <p>:warning: <strong>IMPORTANT: urllib3 v2.0 will drop support for Python 2</strong>: <a href=""https://urllib3.readthedocs.io/en/latest/v2-roadmap.html"">Read more in the v2.0 Roadmap</a></p>; <ul>; <li>Fixed a bug with HTTPS hostname verification involving IP addresses and lack of SNI</li>; <li>Fixed a bug ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11532:766,message,message,766,https://hail.is,https://github.com/hail-is/hail/pull/11532,1,['message'],['message']
Integrability,"Bumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.9 to 1.26.12.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/releases"">urllib3's releases</a>.</em></p>; <blockquote>; <h2>1.26.12</h2>; <ul>; <li>Deprecated the <code>urllib3[secure]</code> extra and the <code>urllib3.contrib.pyopenssl</code> module. Both will be removed in v2.x. See this <a href=""https://github-redirect.dependabot.com/urllib3/urllib3/issues/2680"">GitHub issue</a> for justification and info on how to migrate.</li>; </ul>; <h2>1.26.11</h2>; <p><strong>If you or your organization rely on urllib3 consider supporting us via <a href=""https://github.com/sponsors/urllib3"">GitHub Sponsors</a>.</strong></p>; <p>:warning: <strong>urllib3 v2.0 will drop support for Python 2</strong>: <a href=""https://urllib3.readthedocs.io/en/latest/v2-roadmap.html"">Read more in the v2.0 Roadmap</a></p>; <ul>; <li>Fixed an issue where reading more than 2 GiB in a call to HTTPResponse.read would raise an OverflowError on Python 3.9 and earlier.</li>; </ul>; <h2>1.26.10</h2>; <p><strong>If you or your organization rely on urllib3 consider supporting us via <a href=""https://github.com/sponsors/urllib3"">GitHub Sponsors</a>.</strong></p>; <p>:warning: <strong>urllib3 v2.0 will drop support for Python 2</strong>: <a href=""https://urllib3.readthedocs.io/en/latest/v2-roadmap.html"">Read more in the v2.0 Roadmap</a></p>; <p>:closed_lock_with_key: <strong>This is the first release to be signed with Sigstore!</strong> You can verify the distributables using the <code>.sig</code> and <code>.crt</code> files included on this release.</p>; <ul>; <li>Removed support for Python 3.5</li>; <li>Fixed an issue where a <code>ProxyError</code> recommending configuring the proxy as HTTP instead of HTTPS could appear even when an HTTPS proxy wasn't configured.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://gi",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12140:449,depend,dependabot,449,https://hail.is,https://github.com/hail-is/hail/pull/12140,1,['depend'],['dependabot']
Integrability,"Bumps [widgetsnbextension](http://jupyter.org) from 3.6.0 to 4.0.3. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=widgetsnbextension&package-manager=pip&previous-version=3.6.0&new-version=4.0.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12167:71,Depend,Dependabot,71,https://hail.is,https://github.com/hail-is/hail/pull/12167,26,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency', 'dependency-name']"
Integrability,"Bumps [wrapt](https://github.com/GrahamDumpleton/wrapt) from 1.13.3 to 1.14.1.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/GrahamDumpleton/wrapt/blob/develop/docs/changes.rst"">wrapt's changelog</a>.</em></p>; <blockquote>; <h2>Version 1.14.1</h2>; <p><strong>Bugs Fixed</strong></p>; <ul>; <li>When the post import hooks mechanism was being used, and a Python package with; its own custom module importer was used, importing modules could fail if the; custom module importer didn't use the latest Python import hook finder/loader; APIs and instead used the deprecated API. This was actually occurring with the; <code>zipimporter</code> in Python itself, which was not updated to use the newer Python; APIs until Python 3.10.</li>; </ul>; <h2>Version 1.14.0</h2>; <p><strong>Bugs Fixed</strong></p>; <ul>; <li>; <p>Python 3.11 dropped <code>inspect.formatargspec()</code> which was used in creating; signature changing decorators. Now bundling a version of this function; which uses <code>Parameter</code> and <code>Signature</code> from <code>inspect</code> module when; available. The replacement function is exposed as <code>wrapt.formatargspec()</code>; if need it for your own code.</p>; </li>; <li>; <p>When using a decorator on a class, <code>isinstance()</code> checks wouldn't previously; work as expected and you had to manually use <code>Type.__wrapped__</code> to access; the real type when doing instance checks. The <code>__instancecheck__</code> hook is; now implemented such that you don't have to use <code>Type.__wrapped__</code> instead; of <code>Type</code> as last argument to <code>isinstance()</code>.</p>; </li>; <li>; <p>Eliminated deprecation warnings related to Python module import system, which; would have turned into broken code in Python 3.12. This was used by the post; import hook mechanism.</p>; </li>; </ul>; <p><strong>New Features</strong></p>; <ul>; <li>Binary wheels provided on PyPi for <code>aarch64</code> Linux s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12102:7,wrap,wrapt,7,https://hail.is,https://github.com/hail-is/hail/pull/12102,4,['wrap'],['wrapt']
Integrability,"Bumps asm from 7.3.1 to 9.4. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.ow2.asm:asm&package-manager=gradle&previous-version=7.3.1&new-version=9.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12516:32,Depend,Dependabot,32,https://hail.is,https://github.com/hail-is/hail/pull/12516,26,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency', 'dependency-name']"
Integrability,"Bumps com.github.johnrengelman.shadow from 6.1.0 to 7.1.2. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=com.github.johnrengelman.shadow&package-manager=gradle&previous-version=6.1.0&new-version=7.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12500:62,Depend,Dependabot,62,https://hail.is,https://github.com/hail-is/hail/pull/12500,26,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency', 'dependency-name']"
Integrability,"Bumps com.github.johnrengelman.shadow from 6.1.0 to 8.1.1. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=com.github.johnrengelman.shadow&package-manager=gradle&previous-version=6.1.0&new-version=8.1.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). You can trigger a rebase of this PR by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>> **Note**; > Automatic rebases have been disabled on this pull request as it has been open for over 30 days.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12897:62,Depend,Dependabot,62,https://hail.is,https://github.com/hail-is/hail/pull/12897,25,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency', 'dependency-name']"
Integrability,"Bumps commons-io from 2.5 to 2.11.0. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=commons-io:commons-io&package-manager=gradle&previous-version=2.5&new-version=2.11.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12469:40,Depend,Dependabot,40,https://hail.is,https://github.com/hail-is/hail/pull/12469,26,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency', 'dependency-name']"
Integrability,"Bumps commons-lang3 from 3.5 to 3.12.0. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.apache.commons:commons-lang3&package-manager=gradle&previous-version=3.5&new-version=3.12.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12363:43,Depend,Dependabot,43,https://hail.is,https://github.com/hail-is/hail/pull/12363,26,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency', 'dependency-name']"
Integrability,"Bumps freemarker from 2.3.14 to 2.3.31. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.freemarker:freemarker&package-manager=gradle&previous-version=2.3.14&new-version=2.3.31)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12443:43,Depend,Dependabot,43,https://hail.is,https://github.com/hail-is/hail/pull/12443,26,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency', 'dependency-name']"
Integrability,"Bumps hadoop-client from 2.7.1 to 3.3.4. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.apache.hadoop:hadoop-client&package-manager=gradle&previous-version=2.7.1&new-version=3.3.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12377:44,Depend,Dependabot,44,https://hail.is,https://github.com/hail-is/hail/pull/12377,26,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency', 'dependency-name']"
Integrability,"Bumps org.ow2.asm:asm-util from 7.3.1 to 9.5. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.ow2.asm:asm-util&package-manager=gradle&previous-version=7.3.1&new-version=9.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13636:49,Depend,Dependabot,49,https://hail.is,https://github.com/hail-is/hail/pull/13636,18,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bumps org.ow2.asm:asm-util from 7.3.1 to 9.6. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.ow2.asm:asm-util&package-manager=gradle&previous-version=7.3.1&new-version=9.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). You can trigger a rebase of this PR by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>. > **Note**; > Automatic rebases have been disabled on this pull request as it has been open ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13761:49,Depend,Dependabot,49,https://hail.is,https://github.com/hail-is/hail/pull/13761,17,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependabot-automerge-end', 'dependabot-automerge-start', 'dependabot-badges', 'dependabot-security-updates', 'dependency-name']"
Integrability,"Bundling up the LD score calculation work @jbloom22 and @ktashman did during the Hail hackathon into a Hail method. Not sure if this should be a part of core Hail methods, or sequestered as a user-contributed method, of which there will hopefully be more in 0.2. I've currently taken the latter route, but we can discuss at office hours tomorrow @tpoterba.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3859:295,rout,route,295,https://hail.is,https://github.com/hail-is/hail/pull/3859,1,['rout'],['route']
Integrability,"Bundling working well now:. For instance, the addition of this file, which handles the auth0 callback/sets cookie, adds only *501B* despite importing Auth and react-easy-state :tada:. The entirety of Auth dependency, react-easy-state (just observable JS properties for easy event notification), js-cookie to simplify cookie management, all other imports that are used at least 2x, poly fills for IE11 compat (promises, object.assign) + React + React-Dom is 99KB, and served in parallel with the page, so initial render doesn't incur the cost. Not bad; we can get this down a bit by removing js-cookie (2KB). ```jsx; // TODO: Replace Loading component without Material UI; import { Component } from 'react';; import Router from 'next/router';; import { view } from 'react-easy-state';; import Auth from '../lib/Auth';. class Callback extends Component {; componentDidMount() {; Auth.handleAuthenticationAsync(err => {; // TODO: notify in modal if error; if (err) {; console.error('ERROR in callback!', err);; }. Router.push('/');; });; }. render() {; return !Auth.isAuthenticated() ? <div>Loading</div> : <div>Hello</div>;; }; }. export default view(Callback);; ```. <img width=""353"" alt=""screen shot 2018-12-19 at 5 06 59 pm"" src=""https://user-images.githubusercontent.com/5543229/50251076-ad695680-03b0-11e9-88f2-28d3ff7daa33.png"">",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931#issuecomment-448761682:205,depend,dependency,205,https://hail.is,https://github.com/hail-is/hail/pull/4931#issuecomment-448761682,6,"['Rout', 'depend', 'rout']","['Router', 'dependency', 'router']"
Integrability,ByteChannel(Files.java:361) at java.nio.file.Files.newByteChannel(Files.java:407) at org.apache.spark.shuffle.IndexShuffleBlockResolvt org.apache.spark.network.netty.NettyBlockRpcServer$$anonfun$1.apply(NettyBlockRpcServer.scala:61) at org.apache.spark.network.netty.NettyBloction.convert.Wrappers$IteratorWrapper.next(Wrappers.scala:31) at org.apache.spark.network.server.OneForOneStreamManager.getChunk(OneForOneStreamMt org.apache.spark.network.server.TransportRequestHandler.handle(TransportRequestHandler.java:101) at org.apache.spark.network.server.TransportractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)eout.IdleStateHandler.channelRead(IdleStateHandler.java:286) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelt io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.netty.handler.codec.MessageTotractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)work.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:85) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadxt.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.netty.channeleChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerC.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:138) at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLootLoop.processSelectedKeys(NioEventLoop.java:497) at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459) at io.netty.util.cotRunnableDecorator.run(DefaultThreadFactory.java:138) at java.lang.Thread.run(Thread.java:745) at org.apache.spark.storage.ShuffleBlockFet.next(ShuffleBlockFetcherIte,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8106:17571,Message,MessageTotractChannelHandlerContext,17571,https://hail.is,https://github.com/hail-is/hail/issues/8106,2,['Message'],['MessageTotractChannelHandlerContext']
Integrability,ByteChannel.java:114) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.ApiaryUnbufferedWritableByteChannel.writeAndClose(ApiaryUnbufferedWritableByteChannel.java:65) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.UnbufferedWritableByteChannelSession$UnbufferedWritableByteChannel.writeAndClose(UnbufferedWritableByteChannelSession.java:40) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.DefaultBufferedWritableByteChannel.close(DefaultBufferedWritableByteChannel.java:166) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.StorageByteChannels$SynchronizedBufferedWritableByteChannel.close(StorageByteChannels.java:119) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.StorageException.wrapIOException(StorageException.java:179) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.BaseStorageWriteChannel.close(BaseStorageWriteChannel.java:84) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$close$2(GoogleStorageFS.scala:310) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:280) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2e,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943:11914,Synchroniz,SynchronizedBufferedWritableByteChannel,11914,https://hail.is,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943,1,['Synchroniz'],['SynchronizedBufferedWritableByteChannel']
Integrability,"ByteCharSetProber</code> confidence to match latest uchardet (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/209"">#209</a>)</li>; <li>Made <code>detect_all</code> return child prober confidences (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/210"">#210</a>)</li>; <li>Updated examples in docs (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/223"">#223</a>, <a href=""https://github.com/domdfcoding""><code>@​domdfcoding</code></a>)</li>; <li>Documentation fixes (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/212"">#212</a>, <a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/224"">#224</a>, <a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/225"">#225</a>, <a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/226"">#226</a>, <a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/220"">#220</a>, <a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/221"">#221</a>, <a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/244"">#244</a> from too many to mention)</li>; <li>Minor performance improvements (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/252"">#252</a>, <a href=""https://github.com/deedy5""><code>@​deedy5</code></a>)</li>; <li>Add support for Python 3.10 when testing (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/232"">#232</a>, <a href=""https://github.com/jdufresne""><code>@​jdufresne</code></a>)</li>; <li>Lots of little development cycle improvements, mostly thanks to <a href=""https://github.com/jdufresne""><code>@​jdufresne</code></a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/chardet/chardet/commit/ff5dcb25a59990e43683b8e9057f6f746bfb2658""><code>ff5dcb2</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/254"">",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12107:2276,depend,dependabot,2276,https://hail.is,https://github.com/hail-is/hail/pull/12107,1,['depend'],['dependabot']
Integrability,"C Core.</p>; <p>For gRPC documentation, see <a href=""https://grpc.io/"">grpc.io</a>. For previous releases, see <a href=""https://github.com/grpc/grpc/releases"">Releases</a>.</p>; <p>This release contains refinements, improvements, and bug fixes, with highlights listed below.</p>; <h2>Core</h2>; <ul>; <li>Upgrade Abseil to LTS 20220623.0 . (<a href=""https://github-redirect.dependabot.com/grpc/grpc/pull/30155"">#30155</a>)</li>; <li>Call: Send cancel op down the stack even when no ops are sent. (<a href=""https://github-redirect.dependabot.com/grpc/grpc/pull/30004"">#30004</a>)</li>; <li>FreeBSD system roots implementation. (<a href=""https://github-redirect.dependabot.com/grpc/grpc/pull/29436"">#29436</a>)</li>; <li>xDS: Workaround to get gRPC clients working with istio. (<a href=""https://github-redirect.dependabot.com/grpc/grpc/pull/29841"">#29841</a>)</li>; </ul>; <h2>Python</h2>; <ul>; <li>Set Correct Platform Tag in Wheels on Mac OS with Python 3.10. (<a href=""https://github-redirect.dependabot.com/grpc/grpc/pull/29857"">#29857</a>)</li>; <li>[Aio] Ensure Core channel closes when deallocated. (<a href=""https://github-redirect.dependabot.com/grpc/grpc/pull/29797"">#29797</a>)</li>; <li>[Aio] Fix the wait_for_termination return value. (<a href=""https://github-redirect.dependabot.com/grpc/grpc/pull/29795"">#29795</a>)</li>; </ul>; <h2>Ruby</h2>; <ul>; <li>Make the gem build on TruffleRuby. (<a href=""https://github-redirect.dependabot.com/grpc/grpc/pull/27660"">#27660</a>)</li>; <li>Support for prebuilt Ruby binary on x64-mingw-ucrt platform. (<a href=""https://github-redirect.dependabot.com/grpc/grpc/pull/29684"">#29684</a>)</li>; <li>[Ruby] Add ruby_abi_version to exported symbols. (<a href=""https://github-redirect.dependabot.com/grpc/grpc/pull/28976"">#28976</a>)</li>; </ul>; <h2>Objective-C</h2>; <p>First developer preview of XCFramework binary distribution via Cocoapod (<a href=""https://github-redirect.dependabot.com/grpc/grpc/issues/28749"">#28749</a>).</p>; <p>This brings in ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12201:1939,depend,dependabot,1939,https://hail.is,https://github.com/hail-is/hail/pull/12201,1,['depend'],['dependabot']
Integrability,"C can load an impersonated service account credentials. (<a href=""https://github-redirect.dependabot.com/googleapis/google-auth-library-python/issues/956"">#956</a>) (<a href=""https://github.com/googleapis/google-auth-library-python/commit/a8eb4c8693055a3420cfe9c3420aae2bc8cd465a"">a8eb4c8</a>)</li>; </ul>; <h2>v2.4.1</h2>; <h3>Bug Fixes</h3>; <ul>; <li>urllib3 import (<a href=""https://github-redirect.dependabot.com/googleapis/google-auth-library-python/issues/953"">#953</a>) (<a href=""https://github.com/googleapis/google-auth-library-python/commit/c8b5cae3da5eb9d40067d38dac51a4a8c1e0763e"">c8b5cae</a>)</li>; </ul>; <h2>v2.4.0</h2>; <h3>Features</h3>; <ul>; <li>add 'py.typed' declaration (<a href=""https://github-redirect.dependabot.com/googleapis/google-auth-library-python/issues/919"">#919</a>) (<a href=""https://github.com/googleapis/google-auth-library-python/commit/c99350455d0f7fd3aab950ac47b43000c73dd312"">c993504</a>)</li>; <li>add api key support (<a href=""https://github-redirect.dependabot.com/googleapis/google-auth-library-python/issues/826"">#826</a>) (<a href=""https://github.com/googleapis/google-auth-library-python/commit/3b15092b3461278400e4683060f64a96d50587c4"">3b15092</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li><strong>deps:</strong> allow cachetools 5.0 for python 3.7+ (<a href=""https://github-redirect.dependabot.com/googleapis/google-auth-library-python/issues/937"">#937</a>) (<a href=""https://github.com/googleapis/google-auth-library-python/commit/1eae37db7f6fceb32d6ef0041962ce1755d2116c"">1eae37d</a>)</li>; <li>fix the message format for metadata server exception (<a href=""https://github-redirect.dependabot.com/googleapis/google-auth-library-python/issues/916"">#916</a>) (<a href=""https://github.com/googleapis/google-auth-library-python/commit/e756f08dc78616040ab8fbd7db20903137ccf0c7"">e756f08</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>fix intersphinx link for 'requests-oauthlib' (<a href=""https://github-redirect.dependabot.com/googleapis/google-a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11546:2127,depend,dependabot,2127,https://hail.is,https://github.com/hail-is/hail/pull/11546,1,['depend'],['dependabot']
Integrability,"CHANGELOG: Add `composable` option to parallel text export for use with `gsutil compose`. The BGZF spec reccommends one empty BGZF block be written at the end of; at the end a BGZF file. The `gsutil compose` command concatenates a list; of objects into one composite object. We recently discovered that when; these empty blocks are present in the middle of a file, utilities like; tabix will output pointers to them (as from a reading perspective, the; empty blocks are equivalent to the next block). This will hit assertions; in code like htsjdk that checks to make sure that seek operations from; tabix virtual pointers point to the end of a block if and only if that; block is end of file. This is a bug in tabix implementations.; Furthermore, the end-of-file marker probably shouldn't be appended to; BGZF streams in the first place. In order to improve interoperability of hail with other tools, we add; the 'composable' output option to export types. 'composable' behaves; like 'separate_header', except we do not write the end-of-file marker at; the end of the header or every partition written, and an extra, empty; bgz file with the end-of-file marker is written to `part-composable-end`; which should sort later than any partfile written from the RDD and thus; should be amenable to globbing.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8854:858,interoperab,interoperability,858,https://hail.is,https://github.com/hail-is/hail/pull/8854,1,['interoperab'],['interoperability']
Integrability,"CHANGELOG: Added `Job.run_when()` which allows you to specify under what conditions a job should run based on the state of its parent dependencies and whether the job is cancellable. The gist of this PR is that we now have an extra variable `run_condition` which specifies under what conditions a job should run (any, all, always). The default is to maintain the current behavior that a job runs when all its parent dependencies succeeded. The semantics of `always_run` should stay the same. Can you check over the jobs_after_update trigger and make sure I'm not crazy and nothing needs to be modified there since the job state where the cancelled state matters is a Ready or Running job and the run_condition / cancelled interaction applies to Pending jobs with parent dependencies. Also, I did this crazily fast, so maybe I'm missing something and it shouldn't be this easy????",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12365:134,depend,dependencies,134,https://hail.is,https://github.com/hail-is/hail/pull/12365,3,['depend'],['dependencies']
Integrability,"CHANGELOG: Adds close, default implementation pass, to Backend as an abstract method. This reduces the number of conditional statements needed by 1 when using variable backends. Variable backends (Local or Service) are useful when prototyping batches, or when the user will know in advance that a particular batch routine will work locally (since in future work it will be much easier to consume dockerized methods using Batch than anything else). Additionally, as provided, the only Batch tutorial, GWAS clumping will not work with LocalBackend without this. Use case:. ```python; parser.add_argument('--local', required=False, action=""store_true""); if is_local:; backend = hb.LocalBackend(); run_opts = {}; else:; backend = hb.ServiceBackend(); run_opts = {open: True, wait: True}. # do a bunch of Batch stuff to ; batch.run(**run_opts); backend.close(); ```. In a similar vein, I'd like to allow LocalBackend to ignore unused run opts. Again, GWAS tutorial would not work with LocalBackend without this (or an opts dict as above).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9191:314,rout,routine,314,https://hail.is,https://github.com/hail-is/hail/pull/9191,1,['rout'],['routine']
Integrability,"CHANGELOG: BatchPoolExecutor now raises an informative error message for a variety of ""system"" errors, such as missing container images. If the main container fails for reasons beyond BatchPoolExecutor's control, such; as a missing container image, we previously did not report these errors. In; fact, we encountered errors when trying to load the output file that cannot; exist if the main container errors. Smaller included changes:; - directly use the asynchronous, low-level client instead of the synchronous,; low-level client; - introduce an `async_cancel` now that we have access to the async client.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9543:61,message,message,61,https://hail.is,https://github.com/hail-is/hail/pull/9543,1,['message'],['message']
Integrability,"CHANGELOG: Fix #13721 which manifested with the message ""Missing Range header in response"". The root cause was a bug in the Google Cloud Storage SDK on which we rely. The fix is to update to a version without this bug. The buggy version of GCS SDK was introduced in 0.2.123. The details are not particularly important, but the GCS client library was unable to parse a certain kind of exceptional server condition. This updates us to the latest GCS version.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13732:48,message,message,48,https://hail.is,https://github.com/hail-is/hail/pull/13732,1,['message'],['message']
Integrability,"CHANGELOG: Fix #13998 which appeared in 0.2.58 and prevented reading from a networked filesystem mounted within the filesystem of the worker node for certain pipelines (those that did not trigger ""lowering""). We use the IndexReader in `PartitionNativeIntervalReader`, `PartitionNativeReaderIndexed`, and `PartitionZippedIndexedNativeReader`. 1. `PartitionNativeIntervalReader` is only used by `query_table`. 2. `PartitionNativeReaderIndexed` is only used by `IndexedRVDSpec2.readTableStage` which is used by `TableNativeReader` when there is a new partitioner. 3. `PartitionZippedIndexedNativeReader` is only sued by `AbstractRVDSpec.readZippedLowered` when there is a new partitioner. Two is for tables, three is for matrix tables. In `readZippedLowered` we explicitly [drop the file protocol](https://github.com/hail-is/hail/blob/1dedf3c63f9aabf1b6ce538165360056f82f76e4/hail/src/main/scala/is/hail/rvd/AbstractRVDSpec.scala#L154-L155):. ```; val absPathLeft = removeFileProtocol(pathLeft); val absPathRight = removeFileProtocol(pathRight); ```. We have done this, by various names, since this lowered code path was added. I added `removeFileProtocol` because stripping the protocol in Query-on-Batch prevented the reading and writing of gs:// URIs, the only URIs I could read in QoB. `uriPath` (the function whose use I replaced with `removeFileProtocol`) was added by Cotton [a very long time ago](https://github.com/hail-is/hail/commit/92a9936e11d2f56b88390bee5dc4de489e188f02). It seems he added it so that he could use HDFS to generate a temporary file path on the local filesystem but pass the file path to binary tools that know nothing of HDFS and file:// URIs. #9522 added the lowered code path and thus introduced this bug. It attempted to mirror the extant code in [`readIndexedPartitions`](https://github.com/hail-is/hail/blob/2b0aded9206849252b453dd80710cea8d2156793/hail/src/main/scala/is/hail/HailContext.scala#L421-L440) which *does not* strip any protocols from the path. This has g",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14057:785,protocol,protocol,785,https://hail.is,https://github.com/hail-is/hail/pull/14057,1,['protocol'],['protocol']
Integrability,"CHANGELOG: Fix #14089, which makes `hailctl dataproc connect` work in Windows Subsystem for Linux. 1. Non 64-bit Windows uses ""Program Files"" not ""Program Files (x86)"". 2. Windows Subsystem for Linux looks like GNU/Linux but will not have chromium on its path. 3. The removed arguments are no longer supported. They produce a warning message in my version of Chrome and appear to not work in the version of Chrome that this user was using. Instead, I bind to 0.0.0.0 and access the Notebook using the machine DNS name. This is how Google recommend accessing the Spark UI anyway.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14090:334,message,message,334,https://hail.is,https://github.com/hail-is/hail/pull/14090,1,['message'],['message']
Integrability,CHANGELOG: Fix bug that caused make install-on-cluster to fail with a message about sys_platform. Co-authored-by: ryerobinson <39314627+ryerobinson@users.noreply.github.com>,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12216:70,message,message,70,https://hail.is,https://github.com/hail-is/hail/pull/12216,1,['message'],['message']
Integrability,"CHANGELOG: Fix bug that prevented concatenating ndarrays that are fields of a table. Two bugs:. 1. We can't call `.typ` on `concat_ir`, since that kicks off the type inference process before this IR gets wrapped in a `TableIR` that provides the necessary context to infer the type.; 2. We need to `_compute_type` on `self.nds` as a whole, not just each of its `args`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9161:204,wrap,wrapped,204,https://hail.is,https://github.com/hail-is/hail/pull/9161,1,['wrap'],['wrapped']
Integrability,CHANGELOG: Fix hailctl dataproc modify to install dependencies of the wheel file.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9502:50,depend,dependencies,50,https://hail.is,https://github.com/hail-is/hail/pull/9502,1,['depend'],['dependencies']
Integrability,"CHANGELOG: Fixed incorrect error message when incorrect type specifid with hl.loop. I added a test that gave a bad error message, then rearranged code in `hl.loop` to improve the error message. Prior to this change, the error a user would get here is that they wrote a loop that isn't tail recursive, because hail would insert an implicit cast when trying to unify types, and the casting would wrap the recursive loop call. Now, we check to make sure the loop's return type is correct before analyzing whether it's tail recursive, which I believe removes the possibility of getting a tail recursion error when you should be getting a type error.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10174:33,message,message,33,https://hail.is,https://github.com/hail-is/hail/pull/10174,4,"['message', 'wrap']","['message', 'wrap']"
Integrability,"CHANGELOG: Fixes #13697, a long standing issue with QoB, in which a failing partition job or driver job is not failed in the Batch UI. I am not sure why we did not do this this way in the first place. If a JVMJob raises an exception, Batch will mark the job as failed. Ergo, we should raise an exception when a driver or a worker fails!. Here's an example: I used a simple pipeline that write to a bucket to which I have read-only access. You can see an example Batch (where every partition fails): https://batch.hail.is/batches/8046901. [1]. ```python3; import hail as hl; hl.utils.range_table(3, n_partitions=3).write('gs://neale-bge/foo.ht'); ```. NB: I removed the `log.error` in `handleForPython` because that log is never necessary. That function converts a stack of exceptions into a triplet of the short message, the full exception with stack trace, and a Hail error id (if present). That triplet is always passed along to someone else who logs the exception. (FWIW, the error id indicates a Python source location that is associated with the error. On the Python-side, we can look up that error id and provide a better stack trace.). [1] You'll notice the logs are missing. I noticed this as well, it's a new bug. I fixed it in https://github.com/hail-is/hail/pull/13729.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13715:812,message,message,812,https://hail.is,https://github.com/hail-is/hail/pull/13715,1,['message'],['message']
Integrability,"CHANGELOG: Fixes #13704, in which Hail could encounter an IllegalArgumentException if there are too many transient errors. I need to do the multiplication in 64-bits so that it does not wrap around to a large negative value. Then I can use `math.min` with the maxDelayMs to get us back into 32-bits. I'm just pushing through a bunch of bugs to get Wenhan unblocked today.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13713:186,wrap,wrap,186,https://hail.is,https://github.com/hail-is/hail/pull/13713,1,['wrap'],['wrap']
Integrability,"CHANGELOG: Fixes #13756: operations that collect large results such as `to_pandas` may require up to 3x less memory. This turns all ""actions"", i.e. backend methods supported by QoB into HTTP endpoints on the spark and local backends. This intentionally avoids py4j because py4j was really designed to pass function names and references around and does not handle large payloads well (such as results from a `collect`). Specifically, py4j uses a text-based protocol on top of TCP that substantially inflates the memory requirement for communicating large byte arrays. On the Java side, py4j serializes every binary payload as a Base64-encoded `java.lang.String`, which between the Base64 encoding and `String`'s use of UTF-16 results in a memory footprint of the `String` being `4/3 * 2 = 8/3` nearly three times the size of the byte array on either side of the py4j pipe. py4j also appears to do an entire copy of this payload, which means nearly a 6x memory requirement for sending back bytes. Using our own socket means we can directly send back the response bytes to python without any of this overhead, even going so far as to encode results directly into the TCP output stream. Formalizing the API between python and java also allows us to reuse the same payload schema across all three backends.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13797:456,protocol,protocol,456,https://hail.is,https://github.com/hail-is/hail/pull/13797,1,['protocol'],['protocol']
Integrability,"CHANGELOG: Fixes #13837 in which Hail could break a Spark installation if the Hail JAR appears on the classpath before the Scala JARs. We and several dependencies of ours are exposing an old version of scala-reflect (rude of us and them). If our JAR appears on the classpath before the scala JARs and the sub-versions of Scala differ, Spark is likely to have incompatible bytecode. See https://github.com/hail-is/hail/issues/13837 . In this PR, this command,. ```; make shadowJar && \; jar tf build/libs/hail-all-spark.jar | grep scala/reflect | wc -l && \; jar tf build/libs/hail-all-spark.jar | grep 'MutableSettings'; ```. prints:. ```; 0. ```. On main (`5d7dc2cab7`) it prints:. ```; 1417; scala/reflect/internal/settings/MutableSettings$.class; scala/reflect/internal/settings/MutableSettings$SettingValue.class; scala/reflect/internal/settings/MutableSettings.class; ```. ---. A bit more details follow for the curious. `./gradlew dependencies` shows these packages as depending on `scala-reflect`:. ```; +--- org.scalanlp:breeze-natives_2.12:1.1; | +--- org.scala-lang:scala-library:2.12.10 -> 2.12.17; | +--- org.scalanlp:breeze_2.12:1.1 -> 1.2; | | +--- org.scala-lang:scala-library:2.12.10 -> 2.12.17; | | +--- org.scalanlp:breeze-macros_2.12:1.2; | | | +--- org.scala-lang:scala-library:2.12.10 -> 2.12.17; | | | \--- org.scala-lang:scala-reflect:2.12.10 -> 2.12.15; ...; +--- org.elasticsearch:elasticsearch-spark-30_2.12:8.4.3; | +--- org.scala-lang:scala-library:2.12.8 -> 2.12.17; | +--- org.scala-lang:scala-reflect:2.12.8 -> 2.12.15 (*); | \--- org.apache.spark:spark-core_2.12:3.2.1 -> 3.3.0; ...; | +--- org.scala-lang:scala-reflect:2.12.15 (*); ...; +--- org.scala-lang:scala-reflect:2.12.15 (*); ...; +--- org.apache.spark:spark-sql_2.12:3.3.0; ...; | +--- org.apache.spark:spark-catalyst_2.12:3.3.0; | | +--- org.scala-lang:scala-reflect:2.12.15 (*); ```. This root (the fourth to last package above):. ```; +--- org.scala-lang:scala-reflect:2.12.15 (*); ```. is coming from this",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13894:150,depend,dependencies,150,https://hail.is,https://github.com/hail-is/hail/pull/13894,3,['depend'],"['dependencies', 'depending']"
Integrability,"CHANGELOG: Hail no longer officially supports Python 3.7. Combines https://github.com/hail-is/hail/pull/12927 and https://github.com/hail-is/hail/pull/12908. Many changes. All seem to be necessary together. ---. I fixed any new mypy errors or deprecation warnings. I also cleaned up plots.py (which isn't CI'd by mypy) because I was in there and it was a mess. I unified all our pip-tools versions. Require pandas 2 now. That requires Bokeh 3.x.x. Fix the pinned-requirements.txt dependencies so they reflect the actual necessary runtime harmony. Upgraded Sphinx. The method names lose their fixed-width styling but I think it looks fine. Version policy added. Updating everything means Jinja2 can jump to the latest version too. Numpy deprecated some of its types, using `_` gets rid of the warning.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12929:480,depend,dependencies,480,https://hail.is,https://github.com/hail-is/hail/pull/12929,1,['depend'],['dependencies']
Integrability,"CHANGELOG: Implement the KING method for relationship inference as hl.methods.king. Just look at the last commit. The other commits are PRs that I hope will merge; on Tuesday. This PR implements `hl.methods.king` a new, relatively fast, method for; relationship inference on genotype data. I am eager for criticism of the ""Notes""; section in which I attempt to describe the KING method to a Hail user with only; a basic understanding of genotype matrices and Hail. I also include a benchmark which exercises MT->BM, matrix multiply, and; BM->MT. We have an opportunity for a substantial improvement in performance by; BM->replacing the BM interface by one which permits multiple entry fields. In; BM->particular, note that I have to convert from row-partitioning to; BM->block-partitioning four times!",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9343:639,interface,interface,639,https://hail.is,https://github.com/hail-is/hail/pull/9343,1,['interface'],['interface']
Integrability,"CHANGELOG: Improve error message when combining incompatibly indexed fields in certain operations including array indexing. See test cases for straightforward examples. In main, none of the test code triggers errors. You have to execute the table to actually trigger an error in IR serialization which will reference `""sa""` which is totally meaningless to the user (let alone many Hail engineers).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12566:25,message,message,25,https://hail.is,https://github.com/hail-is/hail/pull/12566,1,['message'],['message']
Integrability,"CHANGELOG: In Query-on-Batch, driver and worker logs no longer buffer so messages should arrive in the UI after a fixed delay rather than proportional to the frequency of log messages.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13067:73,message,messages,73,https://hail.is,https://github.com/hail-is/hail/pull/13067,2,['message'],['messages']
Integrability,"CHANGELOG: Introduce `hailtop.fs` that makes public a filesystem module that works for local fs, gs, s3 and abs. This is now used as the `Backend.fs` for hail query but can be used standalone for Hail Batch users by `import hailtop.fs as hfs`. Still have to do the docs but a couple questions remain:. I create a hidden singleton `RouterFS` object so that is used by functions in `hailtop.fs`. Should this singleton also be used by the Hail Query backends when they are initialized? How do we propagate configuration information such as `requester_pays_bucket` to the FS?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12731:331,Rout,RouterFS,331,https://hail.is,https://github.com/hail-is/hail/pull/12731,1,['Rout'],['RouterFS']
Integrability,"CHANGELOG: Query on Spark now officially supports Spark 3.3.0 and Dataproc 2.1.x. Tested on dataproc via `make -C hail test-dataproc-37`. Updating the dependencies introduced a few new linting checks that I fixed here. Updating pyspark necessitated a couple of changes, namely a different py4j jar and they removed `SparkSession._wrapped` (but maybe we didn't need that anyway? not sure). Most importantly, the newer spark version brings with it a newer jackson version which is sufficient for the azure-storage-blob dependency, meaning we don't need to build against two different spark versions for spark and batch.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12701:151,depend,dependencies,151,https://hail.is,https://github.com/hail-is/hail/pull/12701,2,['depend'],"['dependencies', 'dependency']"
Integrability,"CHANGELOG: Teach `hailctl dataproc start` about `--expiration-time`. Teach `hailctl dataproc modify` about `--no-max-idle`, `no-max-age`, `--max-age`, and `--expiration-time`. These flags were always available as pass-throughs. This change adds them to the; help documentation and improves error messages in the case that an incompatible; set of arguments are provided together.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9263:296,message,messages,296,https://hail.is,https://github.com/hail-is/hail/pull/9263,1,['message'],['messages']
Integrability,"CHANGELOG: The Batch LocalBackend now supports `always_run` jobs. The LocalBackend will no longer immediately error when a job fails, rather now aligns with the ServiceBackend in running all jobs whose parents have succeeded. See [Zulip thread](https://hail.zulipchat.com/#narrow/stream/223457-Hail-Batch-support/topic/.60always_on.60.20for.20local.20backend/near/341620608) for some discussion. The question to whether we can support `always_run` in the local backend depends on whether to make a breaking change in the local backend where a failure in a job does not immediately raise an exception. Seemed there was no issue with this on zulip.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12780:469,depend,depends,469,https://hail.is,https://github.com/hail-is/hail/pull/12780,1,['depend'],['depends']
Integrability,CHANGELOG: The `batch_size` parameter of `vds.new_combiner` is deprecated in favor of `gvcf_batch_size`. This avoids a confusing error message: https://dev.hail.is/t/vds-new-combiner/269/4?u=dking. @tpoterba do you think this is better?,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12213:135,message,message,135,https://hail.is,https://github.com/hail-is/hail/pull/12213,1,['message'],['message']
Integrability,CHANGELOG: `hl.nd.vstack` and `hl.nd.hstack` provide clear error messages when used with incompatible matrices or with no arguments.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12636:65,message,messages,65,https://hail.is,https://github.com/hail-is/hail/pull/12636,1,['message'],['messages']
Integrability,"CHANGELOG: fix missing google-cloud-storage python dependency, required by batch. This makes the tutorial work: https://hail.is/docs/batch/getting_started.html. Version chosen based on our dataproc dependency declaration in init_notebook.py. Note that 1.25.* will install a new version of google-auth. On that note, it is possible that we can upgrade /auth to use a newer google-auth (@danking), as the issue listed in the /auth docker file (https://github.com/googleapis/google-auth-library-python/issues/443) is obviated by the 1.11.2 release: https://github.com/googleapis/google-auth-library-python/pull/446.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9172:51,depend,dependency,51,https://hail.is,https://github.com/hail-is/hail/pull/9172,2,['depend'],['dependency']
Integrability,"CHANGELOG: make hail's optimization rewriting filters to interval-filters smarter and more robust. Completely rewrites ExtractIntervalFilters. Instead of matching against very specific patterns, and failing completely for things that don't quite match (e.g. an input is let bound, or the fold implementing ""locus is contained in a set of intervals"" is written slightly differently), this uses a standard abstract interpretation framework, which is almost completely insensitive to the form of the IR, only depending on the semantics. It also correctly handles missing key fields, where the previous implementation often produced an unsound transformation of the IR. Also adds a much more thorough test suite than we had before. At the top level, the analysis takes a boolean typed IR `cond` in an environment where there is a reference to some `key`, and produces a set `intervals`, such that `cond` is equivalent to `cond & intervals.contains(key)` (in other words `cond` implies `intervals.contains(key)`, or `intervals` contains all rows where `cond` is true). This means for instance it is safe to replace `TableFilter(t, cond)` with `TableFilter(TableFilterIntervals(t, intervals), cond)`. Then in a second pass it rewrites `cond` to `cond2`, such that `cond & (intervals.contains(key))` is equivalent to `cond2 & intervals.contains(key)` (in other words `cond` implies `cond2`, and `cond2 & intervals.contains(key)` implies `cond`). This means it is safe to replace the `TableFilter(t, cond)` with `TableFilter(TableFilterIntervals(t, intervals), cond2)`. A common example is when `cond` can be completely captured by the interval filter, i.e. `cond` is equivant to `intervals.contains(key)`, in which case we can take `cond2 = True`, and the `TableFilter` can be optimized away. This all happens in the function; ```scala; def extractPartitionFilters(ctx: ExecuteContext, cond: IR, ref: Ref, key: IndexedSeq[String]): Option[(IR, IndexedSeq[Interval])] = {; if (key.isEmpty) None; else {; val e",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13355:506,depend,depending,506,https://hail.is,https://github.com/hail-is/hail/pull/13355,1,['depend'],['depending']
Integrability,"CHANGES.rst"">aiodocker's changelog</a>.</em></p>; <blockquote>; <h1>0.21.0 (2021-07-23)</h1>; <h2>Bugfixes</h2>; <ul>; <li>Use ssl_context passsed to Docker constructor for creating underlying connection to docker engine. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiodocker/issues/536"">#536</a>)</li>; <li>Fix an error when attach/exec when container stops before close connection to it. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiodocker/issues/608"">#608</a>)</li>; </ul>; <h1>0.20.0 (2021-07-21)</h1>; <h2>Bugfixes</h2>; <ul>; <li>Accept auth parameter by <code>run()</code> method; it allows auto-pulling absent image from private storages. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiodocker/issues/295"">#295</a>)</li>; <li>Fix passing of JSON params. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiodocker/issues/543"">#543</a>)</li>; <li>Fix issue with unclosed response object in attach/exec. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiodocker/issues/604"">#604</a>)</li>; </ul>; <h1>0.19.1 (2020-07-09)</h1>; <h2>Bugfixes</h2>; <ul>; <li>Fix type annotations for <code>exec.start()</code>, <code>docker.images.pull()</code>,; <code>docker.images.push()</code>. Respect default arguments again.</li>; </ul>; <h1>0.19.0 (2020-07-07)</h1>; <h2>Features</h2>; <ul>; <li>Run mypy checks on the repo in the non-strict mode. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiodocker/issues/466"">#466</a>)</li>; <li>Add <code>container.rename()</code> method. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiodocker/issues/458"">#458</a>)</li>; </ul>; <h2>Bugfixes</h2>; <ul>; <li>Changed DockerNetwork.delete() to return True if successful (<a href=""https://github-redirect.dependabot.com/aio-libs/aiodocker/issues/464"">#464</a>)</li>; </ul>; <h1>0.18.9 (2020-07-07)</h1>; <p>Bugfixes</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summa",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11537:2078,depend,dependabot,2078,https://hail.is,https://github.com/hail-is/hail/pull/11537,1,['depend'],['dependabot']
Integrability,"CI acting as the ""control plane"" for our internal networking allows us to more easily dynamically configure our Kubernetes networking and achieve proper connection pooling/load-balancing over TLS, which translates to less resource consumption and lower request latencies. ## Motivation; This is primarily a performance-motivated change, and one largely based on our (ab)use of NGINX in order to work with our dynamically-generated Kubernetes test namespaces. Currently, we configure NGINX by creating server blocks that dynamically resolve and dispatch requests based on matching regular expressions on the host and path headers. This is in large part due that at gateway deploy time we do not statically know all of the namespaces and namespace-service combinations that will exist in the cluster in the future. This is true for `default`, but not test namespaces, and NGINX will refuse to start with statically-configured clusters that it cannot reach. Making the server blocks make the routing decisions dynamically circumvents this limitation. However, this prevents usage of NGINX [upstream](http://nginx.org/en/docs/http/ngx_http_upstream_module.html) blocks that provide connection pooling, at least in the community edition, and as a result the gateways will create and terminate a TCP connection per http request. This likely causes minor delays on the front-end through gateway, but this hampers performance greatly in job scheduling. The batch driver is forced to establish a new TCP connection and do an SSL handshake with the internal-gateway multiple times per job, which is expensive and slow. We currently have to dedicate a 2-core NGINX sidecar for the batch-driver just to terminate TLS with internal-gateway and free up cycles in the batch-driver python process. By using proper persistent connections, we can reduce the TLS overhead to single-digit percents of a core. This leads to the first goal of this transition: configure our load balancers to know the full cluster configura",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12095:1290,rout,routing,1290,https://hail.is,https://github.com/hail-is/hail/pull/12095,1,['rout'],['routing']
Integrability,"CI's tags are annotated, i.e., they have their own datestamp and message. The recent 0.2.128 tag is a lightweight tag, so for example `git describe` of current HEAD still says 0.2.127-87-ge002b4b23; you have to add `--tags` to get 0.2.128-8-ge002b4b23. Not a biggie, but worth adding to a checklist. But yes, eventually, signing them would probably be best practice.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14322#issuecomment-1960288592:65,message,message,65,https://hail.is,https://github.com/hail-is/hail/pull/14322#issuecomment-1960288592,1,['message'],['message']
Integrability,"CQA/pyflakes/commit/2a6e36bd43af9829e0818961b60a1e3aab01fafc""><code>2a6e36b</code></a> Release 2.5.0 (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/720"">#720</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/a153aeed8df60f4190e6114f77cd254d1493e411""><code>a153aee</code></a> remove special handling of pypy offsets since modern pypy gets it right (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/717"">#717</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/d875b02835fb9b1480a95c5245040eb31a384357""><code>d875b02</code></a> fix syntax error reporting from stdin (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/357"">#357</a>) (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/716"">#716</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/44ef321b0e608c61182ecf5d88f9edeececa5403""><code>44ef321</code></a> Fix pylint URL in README (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/714"">#714</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/2246217295dc8cb30ef4a7b9d8dc449ce32e603a""><code>2246217</code></a> burn the bridges with python 2.x (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/707"">#707</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/becbab65bae84e3e19fc388a42dfabcff0c323c8""><code>becbab6</code></a> upgrade flake8 to 4.0.1 (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/706"">#706</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/f736615f32a4bab27c9efeb5b8f8c31702efc4ab""><code>f736615</code></a> remove backported unittest methods (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/705"">#705</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/5959216f67837f3ddf5b959c21e097c7a3758d48""><code>5959216</code></a> remove checking of node.docstring (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflake",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12149:1941,depend,dependabot,1941,https://hail.is,https://github.com/hail-is/hail/pull/12149,1,['depend'],['dependabot']
Integrability,"C_NUMBERS to allow; at [Source: {""__uid_3"": [NaN, Infinity, -Infinity]}; line: 1, column: 17]; ```. I'm not sure how to enable this feature:; https://github.com/FasterXML/jackson-core/wiki/JsonParser-Features. ### Hail version:; master; c908fd74abd819f4fcfbcdad88c5db6bf77083b2. ### What you did:. `hl.literal([float('nan')]).value`. ### What went wrong (all error messages here, including the full java stack trace):. hl.literal([float('nan'), float('inf'), float('-inf')]).value; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); <ipython-input-3-ea2ec4f5df06> in <module>(); ----> 1 hl.literal([float('nan'), float('inf'), float('-inf')]).value. ~/hail/python/hail/expr/expressions/base_expression.py in value(self); 773 ; 774 """"""; --> 775 return hl.eval_expr(self); 776 ; 777 . ~/hail/python/hail/typecheck/check.py in wrapper(*args, **kwargs); 545 def wrapper(*args, **kwargs):; 546 args_, kwargs_ = check_all(f, args, kwargs, checkers, is_method=is_method); --> 547 return f(*args_, **kwargs_); 548 ; 549 update_wrapper(wrapper, f). ~/hail/python/hail/expr/expressions/expression_utils.py in eval_expr(expression); 135 Result of evaluating `expression`.; 136 """"""; --> 137 return eval_expr_typed(expression)[0]; 138 ; 139 . ~/hail/python/hail/typecheck/check.py in wrapper(*args, **kwargs); 545 def wrapper(*args, **kwargs):; 546 args_, kwargs_ = check_all(f, args, kwargs, checkers, is_method=is_method); --> 547 return f(*args_, **kwargs_); 548 ; 549 update_wrapper(wrapper, f). ~/hail/python/hail/expr/expressions/expression_utils.py in eval_expr_typed(expression); 169 analyze('eval_expr_typed', expression, Indices(expression._indices.source)); 170 ; --> 171 return expression.collect()[0], expression.dtype; 172 ; 173 . ~/hail/python/hail/expr/expressions/base_expression.py in collect(self); 755 """"""; 756 uid = Env.get_uid(); --> 757 t = self._to_table(uid); 758 return [r[uid] for r in t._select(""collect"", None, hl",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3785:1176,wrap,wrapper,1176,https://hail.is,https://github.com/hail-is/hail/issues/3785,3,['wrap'],['wrapper']
Integrability,"Calling `fb.result()` generates stalled execution, no warnings or errors raised. Should generate some error message, or potentially the result (memory address). cc @catoverdrive . Test case. ```scala; def testString() {; val rt = PString(); val input = ""hello""; val fb = FunctionBuilder.functionBuilder[Region, String, Long]; val srvb = new StagedRegionValueBuilder(fb, rt). fb.emit(; Code(; srvb.start(),; srvb.addString(fb.getArg[String](2)),; srvb.end(); ); ). val region = Region(); val rv = RegionValue(region). val res1 = fb.result()()(region, input); println(""Past res1""). val res2 = fb.result()()(region, input); // never reached; println(""Past res2""); }; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7384:108,message,message,108,https://hail.is,https://github.com/hail-is/hail/issues/7384,1,['message'],['message']
Integrability,Can this move forward now? The dependency went in.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8431#issuecomment-617756822:31,depend,dependency,31,https://hail.is,https://github.com/hail-is/hail/pull/8431#issuecomment-617756822,1,['depend'],['dependency']
Integrability,Can you add a test that drops rsid and lid fields? See message above.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3779#issuecomment-398382290:55,message,message,55,https://hail.is,https://github.com/hail-is/hail/pull/3779#issuecomment-398382290,1,['message'],['message']
Integrability,Can you add the method wrapping and run benchmarks?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10510#issuecomment-867194564:23,wrap,wrapping,23,https://hail.is,https://github.com/hail-is/hail/pull/10510#issuecomment-867194564,1,['wrap'],['wrapping']
Integrability,Can you force push an edit to the commit message that includes a `CHANGELOG:` line indicating that pca and hwe_normalized_pca are now supported in Query-on-Batch?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12457#issuecomment-1314247012:41,message,message,41,https://hail.is,https://github.com/hail-is/hail/pull/12457#issuecomment-1314247012,1,['message'],['message']
Integrability,Can you respond to my concerns in the initial commit message? Specifically some math questions when computing resources and the AsyncWorkerPool usage and the temp variable in the SQL code.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9832#issuecomment-758019254:53,message,message,53,https://hail.is,https://github.com/hail-is/hail/pull/9832#issuecomment-758019254,1,['message'],['message']
Integrability,"Can you take another look, Cotton? This PR:; - sets up the conf as we did in Main (fixes the issues Konrad has had in the last days); - sets up logging properly; - handles exceptions correctly. All new methods that call into scala VDS operations need to wrap in try/except",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1085#issuecomment-261416007:254,wrap,wrap,254,https://hail.is,https://github.com/hail-is/hail/pull/1085#issuecomment-261416007,1,['wrap'],['wrap']
Integrability,"Can you try running this before hail context creation:; ```python; old_popen = subprocess.Popen. def wrapped(*args, **kwargs):; print('args are: ' + str(args)); print('kwargs are: ' + str(kwargs)); return old_popen(*args, **kwargs). subprocess.Popen = wrapped; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2062#issuecomment-319714443:101,wrap,wrapped,101,https://hail.is,https://github.com/hail-is/hail/issues/2062#issuecomment-319714443,2,['wrap'],['wrapped']
Integrability,"Caveats:; * the copy-to-GS at the end is crashing without a good error message,; but probably permissions, even though I've given my service account; access to that bucket.; * this runs all benchmarks in replicate. We should split them up; in a randomized (deterministic?) way so that the wall time is; shorter.; * needs to dump into a database instead of json files on GS.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6908:71,message,message,71,https://hail.is,https://github.com/hail-is/hail/pull/6908,1,['message'],['message']
Integrability,"Change ""=="" and ""!="" to throw error message for off-type comparisons",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/405:36,message,message,36,https://hail.is,https://github.com/hail-is/hail/pull/405,1,['message'],['message']
Integrability,Change batch dependency structure of build.py to free up test resources,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6673:13,depend,dependency,13,https://hail.is,https://github.com/hail-is/hail/issues/6673,1,['depend'],['dependency']
Integrability,"Change python interface for key_by, select/annotate/drop",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3297:14,interface,interface,14,https://hail.is,https://github.com/hail-is/hail/pull/3297,1,['interface'],['interface']
Integrability,Change the interface of aggregate,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2892:11,interface,interface,11,https://hail.is,https://github.com/hail-is/hail/pull/2892,1,['interface'],['interface']
Integrability,"Changed as requested. - files go in per-session directories with names of the form /tmp/hail_XXXXXX. - this eliminates interprocess synchronization; inter-thread synchronization is; by a std::map<std::string, std::mutex> giving a separate mutex coresponding; to each generated module. - it's now ""libhail.so"" and ""libhail.dylib"", without any abi qualification. The prebuilt; libhail.dylib should work on machines compatible with -march=sandybridge and; MacOS back to 10.9. - if you build from source, you can do ""./gradlew nativeLibPrebuilt"" to get; the libraries copied over for packaging into the jar(or copy them by hand, as; previously).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3973#issuecomment-415067865:132,synchroniz,synchronization,132,https://hail.is,https://github.com/hail-is/hail/pull/3973#issuecomment-415067865,2,['synchroniz'],['synchronization']
Integrability,"Changes:; - added monitoring setup (Prometheus, Grafana) to monitoring namespace; - I'm considering monitoring part of ""infrastructure"", no automated tests, gateway and router-resolver changes already deployed; - authenticated_users_only always passes userdata as second argument; - added authenticated_developers_only decorator to hailjwt, no userdata; - gateway forwards to internal namespaces: internal.hail.is/namespace proxies to router.namespace, so in general you'll go to internal.hail.is/namespace/service/the/real/url; - proxy only if namespace has router service and authorized developer; - add router to monitoring namespace that proxies for prometheus and grafana; - restrict ci to authorized developers. monitoring/grafana-cluster.json is an export of an initial Grafana monitoring dashboard that I constructed through the UI. If you're logged in as a developer, you can see Grafana at internal.hail.is/monitoring/grafana. The admin password is in the usual place.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6242:169,rout,router-resolver,169,https://hail.is,https://github.com/hail-is/hail/pull/6242,4,['rout'],"['router', 'router-resolver']"
Integrability,"Changes:; - correct the interpretation of less and greater.; - improve the formatting and verbiage of the docs,; - expand upon the statistical definition alluded to previously in only the less; case,; - add python tests which would have caught this error,; - add python tests which test against `scipy`,; - deprecate the use of `'two.sided'`, an R-ism, document the preferred use of; `'two-sided'`, a Python-ism, and; - fix an error message in Scala that used yet another naming of the two sided test.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8420:433,message,message,433,https://hail.is,https://github.com/hail-is/hail/pull/8420,1,['message'],['message']
Integrability,"Changes:; - create a custom job spec schema for what a job means to us; - hand-rolled validator; - use in bath_client, /jobs/create endpoints in batch, batch2; - slightly changed create_job interface around volumes, docker socket and secrets, update usage; - wrote route to convert this to a k8s pod spec, use when actually creating jobs. The secret has a namespace, but it is ignored by the servers. Eventually, batch should be able to pull secrets from wherever, but needs to enforce permissions on who can use what secrets. This was a long-standing issue that I think now has a clearer path. We can get rid of the mount docker socket option by making the worker support a build (rather than run) task. The validator should really go in the server code, but it needs to be shared between batch and batch2 for now. Plan is to push this through batch2 to remove the dependence on the k8s pod serialization. When that's done, the job to pod spec routine can go into batch (and go away when CI uses batch2). Will be interested to benchmark my validator vs. the previous cerberus + k8s validation/serialization.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7313:190,interface,interface,190,https://hail.is,https://github.com/hail-is/hail/pull/7313,4,"['depend', 'interface', 'rout']","['dependence', 'interface', 'route', 'routine']"
Integrability,"Changes:; - four containers: setup container, main container, cleanup container, keep alive container; - cleanup container waits for an HTTP message from batch before cleaning up; - keep alive container stays alive until batch sends it an HTTP message (this prevents terminated pod GC); - split `mark_complete` into three simpler methods; - extract several parts of former `mark_complete` into named helper methods; - `LogStore.results_filename` is gone, if the logs are present, the pod has already been run",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6746:141,message,message,141,https://hail.is,https://github.com/hail-is/hail/pull/6746,2,['message'],['message']
Integrability,"Changes:; - mostly boilerplate; - moved Dockerfile.hail-base from apiserver/ to hail/; - move apiserver => query; - I'm going to call the Hail query service query; - remove legacy apiserver stuff; - add a dummy Java ServiceBackend with a single dummy method `request` that returns 5.; - query spins up py4j without using Spark; - has a single /request REST endpoint that just returns `{'value': 5}` via the Java ServiceBackend; - add query to letsencrypt, routers, etc.; - I had deployed all of this via the Makefile and it is working fine. Just one point that might not be obvious: the Python ServiceBackend talks to the query service. The query service talks to the Java ServiceBackend but won't itself spin up a Python backend. Plan:; - I will start adding multi-user functionality to this after the GoogleStorageFS PR lands; - It will soon be possible to connect lowered stuff and the shuffler to this. Things are about to get real. FYI @tpoterba",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8417:456,rout,routers,456,https://hail.is,https://github.com/hail-is/hail/pull/8417,1,['rout'],['routers']
Integrability,"Changes:; - removed unused py4jVersion from build.gradle; - pin breeze native version to version required by spark. This was not easy! I do it by creating a configuration that just depends on Spark, and then a resolution rule for all configurations that says only accept the breeze natives version corresponding to the version requested by spark.; - determine sparkMajorVersion from sparkVersion (strip patch version); - in docs, everywhere we use SPARK_VERSION, also specify SCALA_VERSION. I verified 2.4.0.cloudera is built against Scala 2.11.; - added SCALA_VERSION to hail/Makefile; - make Makefile versions match build.gradle defaults (somewhat annoying they are duplicated)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8680:181,depend,depends,181,https://hail.is,https://github.com/hail-is/hail/pull/8680,1,['depend'],['depends']
Integrability,ChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.Abstracead(DefaultChannelPipeline.java:935) at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:138) at ed(NioEventLoop.java:580) at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497) at io.netty.channel.nio.Nio at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) at java.lang.Thread.run(Thrpark.network.server.TransportChannelHandler.channelRead(TransportChannelHandler.java:120) at io.netty.channel.AbstractChannelHandlerContext.innelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at eChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerCetty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102) at io.netty.channel.AbstractChannelHandlerContext.innelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at lerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(Abstrac0) at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359) at io.netty.channel.AbstractChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935) at ocessSelectedKey(NioEventLoop.java:645) at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580) at ava:459) at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) at io.netty.util.concurrent. Java stack trace:; org.apache.spark.SparkException: Job aborted.; at org.apache.spark.internal,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8106:10138,Message,MessageToMessageDecoder,10138,https://hail.is,https://github.com/hail-is/hail/issues/8106,1,['Message'],['MessageToMessageDecoder']
Integrability,"Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3MThjYjgyZC1jNGU3LTRlNWEtODgzZi02NjQ0NjlmYzA4MGEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjcxOGNiODJkLWM0ZTctNGU1YS04ODNmLTY2NDQ2OWZjMDgwYSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""718cb82d-c4e7-4e5a-883f-664469fc080a"",""prPublicId"":""718cb82d-c4e7-4e5a-883f-664469fc080a"",""dependencies"":[{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.11.2""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-JUPYTERSERVER-6099119""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[461],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Generation of Error Message Containing Sensitive Information](https://learn.snyk.io/lesson/error-message-with-sensitive-information/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14070:3035,depend,dependencies,3035,https://hail.is,https://github.com/hail-is/hail/pull/14070,3,"['Message', 'depend', 'message']","['Message', 'dependencies', 'message-with-sensitive-information']"
Integrability,Citation for log4j1 programmatic configuration breaking log4j2: https://logging.apache.org/log4j/2.x/manual/migration.html#limitations-of-the-log4j-1-x-bridge,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12941#issuecomment-1524328047:152,bridg,bridge,152,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1524328047,1,['bridg'],['bridge']
Integrability,Clean up / speed up VSM interface functions,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/629:24,interface,interface,24,https://hail.is,https://github.com/hail-is/hail/pull/629,1,['interface'],['interface']
Integrability,Clean up Region allocate/align interface.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2568:31,interface,interface,31,https://hail.is,https://github.com/hail-is/hail/pull/2568,1,['interface'],['interface']
Integrability,"Clean up typecheck.py, remove dependence on 'decorator'",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3594:30,depend,dependence,30,https://hail.is,https://github.com/hail-is/hail/pull/3594,1,['depend'],['dependence']
Integrability,Clearly document python dependencies,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2978:24,depend,dependencies,24,https://hail.is,https://github.com/hail-is/hail/issues/2978,1,['depend'],['dependencies']
Integrability,"Closes https://github.com/hail-is/hail/issues/14652. See https://github.com/populationgenomics/hail/pull/346. Thanks for the contribution @illusional!. Gives Dataproc clusters started via `hailctl dataproc start` internet access by default, since we need it to install some of our dependencies, per the error message in the linked issue.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14653:281,depend,dependencies,281,https://hail.is,https://github.com/hail-is/hail/pull/14653,2,"['depend', 'message']","['dependencies', 'message']"
Integrability,Closing in favor of PR with new interface.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1650#issuecomment-293427251:32,interface,interface,32,https://hail.is,https://github.com/hail-is/hail/pull/1650#issuecomment-293427251,1,['interface'],['interface']
Integrability,Closing this for now. Didn't realize the bootstrap dependence of not having a letsencrypt config. I don't think we can entirely delete this just yet (but could trivially move it to envoy),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12096#issuecomment-1226092951:51,depend,dependence,51,https://hail.is,https://github.com/hail-is/hail/pull/12096#issuecomment-1226092951,1,['depend'],['dependence']
Integrability,Closing this for now. Want to rethink this interface.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2225#issuecomment-331990417:43,interface,interface,43,https://hail.is,https://github.com/hail-is/hail/pull/2225#issuecomment-331990417,1,['interface'],['interface']
Integrability,"Code:; ```python3; import hail as hl; from hail import ir. hl.init(); mt = hl.import_vcf('path/to/vcf'); mt = hl.MatrixTable(ir.MatrixKeyRowsBy(mt._mir, ['locus'], is_sorted=True)); ht = mt._localize_entries('_e', '_c'); j = hl.Table._multi_way_zip_join([ht, ht], 'd', 'g'); j.write('tst.ht'); ```. Java Stack Trace:; ```; py4j.protocol.Py4JJavaError: An error occurred while calling z:is.hail.expr.ir.Interpret.interpretJSON.; : java.util.NoSuchElementException: key not found: alleles; 	at scala.collection.MapLike$class.default(MapLike.scala:228); 	at scala.collection.AbstractMap.default(Map.scala:59); 	at scala.collection.MapLike$class.apply(MapLike.scala:141); 	at scala.collection.AbstractMap.apply(Map.scala:59); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59); 	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at is.hail.rvd.RVDType.<init>(RVDType.scala:24); 	at is.hail.expr.ir.TableMultiWayZipJoin.execute(TableIR.scala:669); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:775); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:93); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:63); 	at is.hail.expr.ir.Interpret$.interpretJSON(Interpret.scala:22); 	at is.hail.expr.ir.Interpret.interpretJSON(Interpret.scala); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.Reflec",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5396:328,protocol,protocol,328,https://hail.is,https://github.com/hail-is/hail/issues/5396,1,['protocol'],['protocol']
Integrability,"Combined with vdsFromMatrix, this allows Alex to generate a vds and then vcf with a proscribed population structure as needed for methods dev. Later we can move this to main and/or integrate into our generative testing framework.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1011:181,integrat,integrate,181,https://hail.is,https://github.com/hail-is/hail/pull/1011,1,['integrat'],['integrate']
Integrability,"Commandline:. ```; hail -l /xchip/cga_home/gtiao/Hail/hail.re-import.log importvcf $VCF \; filtervariants all \; count \; filtersamples list -i 'file:///xchip/cga_home/gtiao/37k/germline_cancer_joint_calling.restricted_samples.sample_list' --remove \; count \; exportsamples -c 's.id' -o file:///xchip/cga_home/gtiao/37k/Hail/samples_after_removing_restricted.txt; ```. Error message:. ```; hail: info: running: exportsamples -c s.id -o file:///xchip/cga_home/gtiao/37k/Hail/samples_after_removing_restricted.txt; hail: exportsamples: fatal: does not support multiallelics.; Run `splitmulti' first.; ```. It works if I insert ""splitmulti"" after the import command, but then I drop all variants, so this seems a very silly requirement.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/382:376,message,message,376,https://hail.is,https://github.com/hail-is/hail/issues/382,1,['message'],['message']
Integrability,Commandline:. ```; hail-new -l /home/unix/gtiao/hail.rename.log \; read -i /user/gtiao/37k/germline_cancer_joint_calling.no_restricted.GQ20_AB.split.VEP.vds \; renamesamples -i file:///xchip/cga_home/gtiao/37k/Hail/germline_cancer_joint_calling.no_restricted.GQ20_AB.split.VEP.sample_id_map.txt \; write -o /user/gtiao/37k/germline_cancer_joint_calling.no_restricted.GQ20_AB.split.VEP.no_spaces.vds. ```. Error message:. ```; hail: info: running: read -i /user/gtiao/37k/germline_cancer_joint_calling.no_restricted.GQ20_AB.split.VEP.vds; [Stage 0:=============================> (1 + 1) / 2]hail: info: running: renamesamples -i file:///xchip/cga_home/gtiao/37k/Hail/germline_cancer_joint_calling.no_restricted.GQ20_AB.split.VEP.sample_id_map.txt; hail: renamesamples: caught exception: org.apache.hadoop.fs.ChecksumException: Checksum error: file:/xchip/cga_home/gtiao/37k/Hail/germline_cancer_joint_calling.no_restricted.GQ20_AB.split.VEP.sample_id_map.txt at 175616 exp: -1352655701 got: 441984571. ```,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/347:411,message,message,411,https://hail.is,https://github.com/hail-is/hail/issues/347,1,['message'],['message']
Integrability,"Comments addressed. You asked about scalars so I've rounded that out with support for any combination of scalar and block matrix, as well as unary + and -, testing in notebook along the way. I've marked the class with experimental.rst until I've stabilized the interface with robust testing of all operations in subsequent broadcasting PR. I fixed the process_joins bug as noted, but stopped there in this PR since just switching to select_entries will end up calling the expression machinery twice. The right solution requires simultaneous changes on the Scala side. I'll make a PR to check if `entry_expr` is a field, if not to use `select_entries` to make it one, and then change `MatrixTable.writeBlockMatrix` to take a field rather than an expression. Sound good?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3072#issuecomment-370569833:261,interface,interface,261,https://hail.is,https://github.com/hail-is/hail/pull/3072#issuecomment-370569833,1,['interface'],['interface']
Integrability,Commit message: ; ```; Fixed bug in TextTableReader caused by unsafe ArrayBuilder use. ; Bug occurred for text tables with a number of columns equal to a power of 2; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1127#issuecomment-263676448:7,message,message,7,https://hail.is,https://github.com/hail-is/hail/pull/1127#issuecomment-263676448,1,['message'],['message']
Integrability,"Commits</summary>; <ul>; <li><a href=""https://github.com/tomplus/kubernetes_asyncio/commit/3640de349f9fa26e009c6cd102c062b066fefe6b""><code>3640de3</code></a> [chore] update version</li>; <li><a href=""https://github.com/tomplus/kubernetes_asyncio/commit/11c3eb4d50ae822545572aa7b8c15f7153f65a1c""><code>11c3eb4</code></a> [feat] regenerate library using API K8s v23.6.0 (<a href=""https://github-redirect.dependabot.com/tomplus/kubernetes_asyncio/issues/211"">#211</a>)</li>; <li><a href=""https://github.com/tomplus/kubernetes_asyncio/commit/35f109ce6e093285f232b4f45d68f44a964c6d11""><code>35f109c</code></a> chore(deps): bump actions/setup-python from 3 to 4 (<a href=""https://github-redirect.dependabot.com/tomplus/kubernetes_asyncio/issues/208"">#208</a>)</li>; <li><a href=""https://github.com/tomplus/kubernetes_asyncio/commit/0172af9302cc7e3e80b48c2f78afc4ed45583b95""><code>0172af9</code></a> [ci/cd] add python-version attr required by actions/setup-python@v4 (<a href=""https://github-redirect.dependabot.com/tomplus/kubernetes_asyncio/issues/210"">#210</a>)</li>; <li><a href=""https://github.com/tomplus/kubernetes_asyncio/commit/8b54424920fd58174d7b215489d4f74c7656ed3d""><code>8b54424</code></a> [chore] update changelog</li>; <li><a href=""https://github.com/tomplus/kubernetes_asyncio/commit/50fc5f8758a3f0c0da723ae766f48345e2108ce9""><code>50fc5f8</code></a> Periodically refresh ServiceAccount tokens (<a href=""https://github-redirect.dependabot.com/tomplus/kubernetes_asyncio/issues/205"">#205</a>)</li>; <li><a href=""https://github.com/tomplus/kubernetes_asyncio/commit/af050bb8b129a6648030ec11c1b0625cfd7a29dd""><code>af050bb</code></a> chore(deps): update sphinx requirement (<a href=""https://github-redirect.dependabot.com/tomplus/kubernetes_asyncio/issues/204"">#204</a>)</li>; <li><a href=""https://github.com/tomplus/kubernetes_asyncio/commit/7e7999c19300d32c04f90cc0b56f0c5488e9d787""><code>7e7999c</code></a> [chore] pin k8s version to 1.23.6 in e2e tests. (<a href=""https://github-redirect.d",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11957:13874,depend,dependabot,13874,https://hail.is,https://github.com/hail-is/hail/pull/11957,1,['depend'],['dependabot']
Integrability,Compiling NativeBoot.cpp fails with error message about -march=sandybridge flag,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4305:42,message,message,42,https://hail.is,https://github.com/hail-is/hail/issues/4305,1,['message'],['message']
Integrability,"ComponentType and ComponentProps (<a href=""https://github-redirect.dependabot.com/sveltejs/svelte/issues/6770"">#6770</a>)</li>; <li><a href=""https://github.com/sveltejs/svelte/commit/2f562d9e2817d911d0eec437d2b0e45074ec8291""><code>2f562d9</code></a> [docs] use npm create instead of npm init (<a href=""https://github-redirect.dependabot.com/sveltejs/svelte/issues/7641"">#7641</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/sveltejs/svelte/compare/v3.38.2...v3.49.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=svelte&package-manager=npm_and_yarn&previous-version=3.38.2&new-version=3.49.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12032:9105,depend,dependabot,9105,https://hail.is,https://github.com/hail-is/hail/pull/12032,3,['depend'],['dependabot']
Integrability,"Conceptually, if we're not just interested in missingness, then unboxedGT is useful only in route to nNonRefAlleles (and equal to it if we've split). E.g., the simplest way to extend regression to multi-allelic is to use nNonRefAlleles...though thinking about this further, it's upsettingly asymmetric in the case where the ref allele is the minor allele, so perhaps we should just force deliberate choice of splitting, esp if we're moving toward implementing that less painfully under the hood. Or do regression per alternate allele while maintaining multi-allelic form. (edited). We currently compute nNonRefAlleles from unboxedGT through GTPair, which allocates per genotype. For example, PCA currently requires splitting, but uses nNonRefAlleles. And IBD currently requires splitting but allocates per genotype via:; ```; def countRefs(gtIdx: Int): Int = {; val gt = Genotype.gtPair(gtIdx); indicator(gt.j == 0) + indicator(gt.k == 0); ```. So it may make sense to add `unboxedNNonRefAlleles` that avoids allocation, but doesn't require splitting for these.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1314#issuecomment-276082468:92,rout,route,92,https://hail.is,https://github.com/hail-is/hail/issues/1314#issuecomment-276082468,2,['rout'],['route']
Integrability,"ConnectionPool._make_request(self, conn, method, url, timeout, chunked, **httplib_request_kw); 443 try:; --> 444 httplib_response = conn.getresponse(); 445 except BaseException as e:; 446 # Remove the TypeError from the exception chain in; 447 # Python 3 (including for exceptions like SystemExit).; 448 # Otherwise it looks like a bug in the code. File /opt/conda/lib/python3.10/http/client.py:1375, in HTTPConnection.getresponse(self); 1374 try:; -> 1375 response.begin(); 1376 except ConnectionError:. File /opt/conda/lib/python3.10/http/client.py:318, in HTTPResponse.begin(self); 317 while True:; --> 318 version, status, reason = self._read_status(); 319 if status != CONTINUE:. File /opt/conda/lib/python3.10/http/client.py:287, in HTTPResponse._read_status(self); 284 if not line:; 285 # Presumably, the server closed the connection before; 286 # sending a valid response.; --> 287 raise RemoteDisconnected(""Remote end closed connection without""; 288 "" response""); 289 try:. ProtocolError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response')). During handling of the above exception, another exception occurred:. ConnectionError Traceback (most recent call last); File <timed exec>:9. File <decorator-gen-1235>:2, in export(self, output, types_file, header, parallel, delimiter). File ~/.local/lib/python3.10/site-packages/hail/typecheck/check.py:587, in _make_dec.<locals>.wrapper(__original_func, *args, **kwargs); 584 @decorator; 585 def wrapper(__original_func: Callable[..., T], *args, **kwargs) -> T:; 586 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 587 return __original_func(*args_, **kwargs_). File ~/.local/lib/python3.10/site-packages/hail/table.py:1153, in Table.export(self, output, types_file, header, parallel, delimiter); 1150 hl.current_backend().validate_file(output); 1152 parallel = ir.ExportType.default(parallel); -> 1153 Env.backend().execute(; 1154 ir.TableWrite(self._tir, ir.Ta",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13960:9958,Protocol,ProtocolError,9958,https://hail.is,https://github.com/hail-is/hail/issues/13960,1,['Protocol'],['ProtocolError']
Integrability,"Context from Tim's scribblings:; """"""; Why are we adding this node?; The hl.balding_nichols_model node is implemented as; >>> ht = hl.utils.range_table(N); >>> ht = ht.key_by(locus = hl.locus('chr1', ht.idx + 1)) // or something. This requires us to do an extra pass over the data in order to key `ht` by this new key 'locus' we track information about keys statically -- need to know that tables are sorted by their key we also need to know partition intervals statically. So, when we implement key_by, we have to do extra work to compute this information before generating the rest of the query. This is a super common tutorial example and it's currently slow because it an extra pass over the data! We need to implmement balding_nichols_model without a key_by, which means we need to inject the information we need to know about the key into the IR directly. This means passing the key that's sorted and the partition intervals.; """""". This change just implements the new TableIR node in Scala. Exposure to Python will come in a subsequent change.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12725:786,inject,inject,786,https://hail.is,https://github.com/hail-is/hail/pull/12725,1,['inject'],['inject']
Integrability,"Copy new architecture of `split_multi`.; Added `left_aligned` option, removed `max_shift`.; Moved routine to VariantSampleMatrix, require row key is `Variant`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2381:98,rout,routine,98,https://hail.is,https://github.com/hail-is/hail/pull/2381,1,['rout'],['routine']
Integrability,"Core infrastructure enclosed. Opening now to enable feedback as I continue to higher level interfaces, tests, and examples.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3397:91,interface,interfaces,91,https://hail.is,https://github.com/hail-is/hail/pull/3397,1,['interface'],['interfaces']
Integrability,Correcting an oversight from #11273 . Probably we should test that all build.yaml dependencies exist in the future (Services team seems to be replacing build.yaml with something new?),MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11275:82,depend,dependencies,82,https://hail.is,https://github.com/hail-is/hail/pull/11275,1,['depend'],['dependencies']
Integrability,Could you please fix the error messages? See above.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3234#issuecomment-376664624:31,message,messages,31,https://hail.is,https://github.com/hail-is/hail/pull/3234#issuecomment-376664624,1,['message'],['messages']
Integrability,Couldn't build with sbt after googleFS changes. Couldn't download the proper LZ4 dependency.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8475:81,depend,dependency,81,https://hail.is,https://github.com/hail-is/hail/pull/8475,1,['depend'],['dependency']
Integrability,"Couple of things:. You left in a bunch of commented out blocks that need to get cleaned up. You need to squash the history. That might be hard. The solution is to merge the current master, create a diff between the resulting version and master, and apply that to a fresh copy of master and then PR against that (or force this branch to the resulting commit). Finally, I'd like you to break out the gradle dependencies as a separate PR first. I need that for the seqr stuff ASAP. Thanks!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/422#issuecomment-235642374:405,depend,dependencies,405,https://hail.is,https://github.com/hail-is/hail/pull/422#issuecomment-235642374,1,['depend'],['dependencies']
Integrability,"Create a file for _BasicChecker in pylint.checkers</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/be4699399904654ef4107a228817b4ef176d8999""><code>be46993</code></a> [refactor] Create a package in order to be able to burst base.py</li>; <li>Additional commits viewable in <a href=""https://github.com/PyCQA/pylint/compare/v2.12.2...v2.13.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pylint&package-manager=pip&previous-version=2.12.2&new-version=2.13.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11674:6063,Depend,Dependabot,6063,https://hail.is,https://github.com/hail-is/hail/pull/11674,1,['Depend'],['Dependabot']
Integrability,"Create a filter alleles command. The interface should be modeled off the current filter commands (variant, sample, genotype). One wrinkle is that to update the variant annotations, which must be done by the user, they must have access to information about what alleles were filtered. Rough sketch of the interface:. ```; ... filteralleles; --keep; -c 'va.alleleQuality[aIndex] > 0.8'; -a 'va.info.AC = aIndices.map(i => va.info.AC[i]), va.info.AN = ...'; ```. where `va.alleleQuality` is a hypothetical annotation of type `Array[Double]`. It also has a `--remove` option. `-c` is the filter condition. It has type `Boolean` and `v`, `va`, and `aIndex` in scope, where `aIndex` is the index of the allele being evaluated. `-a` is an annotation expression which updates variant annotations analogous to the `-c` argument of `annotatevariants expr`. It has `v`, `va` and `aIndices`, where `v` is the _new_ variant (so `v.altAlleles.size` is the number of alleles being kept), `va` is the old variant annotations which are being updated, and `aIndices` is a map from the new to old allele indices. Only alternate alleles should be filtered, although all indices should be 0-based, counting the reference. If no alternate alleles remain, the variant should be filtered (no monomorphic variants). Step one should be to sketch the command docs so we can get feedback on the interface. We should work with @konradjk and Monkol to make examples that handle the ExACv2 use case.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/551:37,interface,interface,37,https://hail.is,https://github.com/hail-is/hail/issues/551,3,['interface'],['interface']
Integrability,Create a way for keytables to contract types like Variant,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1813:30,contract,contract,30,https://hail.is,https://github.com/hail-is/hail/issues/1813,1,['contract'],['contract']
Integrability,"Created AzureStorageFS which implements the FS trait's methods so users can interface with Azure Blob Storage as though it were a filesystem. . - Create abstract classes for seekable InputStreams and positioned OutputStreams to consolidate streams created in createNoCompression and openNoCompression; - Add deleteOnExit, mkDir, globAll, and globStatuses method implementations to FS trait (and change HadoopFS to override those methods); - Create BlobStorageFileStatus class to consolidate Azure and Google file status classes",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11617:76,interface,interface,76,https://hail.is,https://github.com/hail-is/hail/pull/11617,1,['interface'],['interface']
Integrability,"Curious to hear your reaction to this, Daniel, as you've effectively become the dependency czar. For this, we might need to pull in @chrisvittal or @tpoterba to resolve dependency issues.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12226:80,depend,dependency,80,https://hail.is,https://github.com/hail-is/hail/pull/12226,2,['depend'],['dependency']
Integrability,Current plan going forward for this:; - I'm getting pretty happy with the interface (but maybe want to rename some things). I think I will document what I have next.; - Get rid of legacy hailtop.GCS. This means we can get rid of all the client libraries except the oauth2 flows in auth.; - The add a glob operation.; - Add a copy/sync operation. I might also add an S3AsyncFS. I could have used that recently.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9451:74,interface,interface,74,https://hail.is,https://github.com/hail-is/hail/pull/9451,1,['interface'],['interface']
Integrability,"Currently ExportVCF calls Genotype.toString to format the per-sample genotype fields. ExportVCF uses a StringBuilder to minimize allocation, but Genotype.toString allocates a StringBuilder and the result. Datasets can have 100s of millions of variants and hundreds of thousands of samples. That's 10s of trillions of extra allocations. ExportVCF should have its own routine that formats the Genotype according to the VCF spec directly into its StringBuilder. Genotype.toString shouldn't be required to conform to the VCF spec. In particular, it currently doesn't indicate Phred-scaled likelihoods vs dosage (which in the VCF are indicated in the format field are indicated by PL vs GP) nor the fakeRef (which isn't indicated in the VCF at all). Maybe something like `0/1*:10,10,0:22:99:PL=100,0,100` where `*` indicates fakeRef?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/631:366,rout,routine,366,https://hail.is,https://github.com/hail-is/hail/issues/631,1,['rout'],['routine']
Integrability,"Currently pruning dependencies, forking NextJS to remove poly fills for older browsers, and focusing on bundle size. Investigated using Inferno.js as a lighter alternative to React. Saves ~20-30KB bundle size, and is somewhat faster. However, main Inferno dev moved to React core team, and React is focusing on the optimizations present in Inferno for 2019 (DOM: move to native events where possible), as well as introducing optimizations not found in Inferno (compile time targets: initially inlining, future maybe web assembly binaries; move rendering work to separate thread / concurrent rendering). Furthermore, React ecosystem is orders of magnitude larger, so we can save a huge amount of dev time by avoiding Inferno (N modules * time to develop bespoke module avg), and have greater likelihood of LTS. Notably, I realized that most of my bundle size was coming from inefficient bundling of Material UI and due to Apollo's insanely large graphQL bundle. Removing these now. Lastly, React is actually very efficient. jQuery is ~31.1KB minified. React is 3KB, while React DOM is 33.8KB. In 2019 React DOM will shrink. In any case, given that React is both faster than jQuery, dramatically simplifies development, and introduces development structure, 4KB cost is imo worth it. Related issues:; https://github.com/zeit/next.js/issues/5923. Bundle (with header, authentication logic including jks-rsa verification of token, styles). Index.js is 336 B, _app is 2.89, and that is all that is needed for first page render. _app amortized over all other pages. Scorecard template w/fetch logic is 1.67KB. <img width=""341"" alt=""screen shot 2018-12-19 at 3 43 23 pm"" src=""https://user-images.githubusercontent.com/5543229/50247084-f3202200-03a4-11e9-8232-f1cd2a35958c.png"">",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931#issuecomment-448652812:18,depend,dependencies,18,https://hail.is,https://github.com/hail-is/hail/pull/4931#issuecomment-448652812,2,['depend'],['dependencies']
Integrability,"Currently the Ops Agent does not do any parsing of the log message, so the log entry in Google Logging looks like:. ```; jsonPayload: {; message: ""{""severity"":""INFO"",""levelname"":""INFO"",""asctime"":""2024-01-22 16:10:45,748"",""filename"":""worker.py"",""funcNameAndLine"":""<module>:3461"",""message"":""closed"",""hail_log"":1}""; }; ```. The `parse_json` processor extracts the json fields from the message into fields on the `jsonPayload` so it looks like this. ```; jsonPayload: {; asctime: ""2024-01-22 16:14:06,098""; filename: ""worker.py""; funcNameAndLine: ""<module>:180""; hail_log: 1; levelname: ""INFO""; message: ""CLOUD gcp""; }; ```. and only the new `message` field is displayed in the Google Logging row instead of the whole json. This also adds a `severity` field on the log entry so filters such as `SEVERITY!=INFO` work as expected.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14187:59,message,message,59,https://hail.is,https://github.com/hail-is/hail/pull/14187,6,['message'],['message']
Integrability,Currently the linear SKAT routine is implemented to be optimal for the case of (genetic variants) k < n (genetic samples). Implementation will process sets of variants associated to the same gene in such a way that there is no redundant computation in the algorithm. . cases handled:; hard call genetic data; dosage genetic data; k << n - (Cannot explicitly form a matrix containing all the genotype data) . ran on chromosome 22 1kgDataset with approximately 100 intervals and the program runs in about 3-4 minutes with 2 workers and 12 pre-emptibles with 8 cores each.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1973#issuecomment-320358482:26,rout,routine,26,https://hail.is,https://github.com/hail-is/hail/pull/1973#issuecomment-320358482,1,['rout'],['routine']
Integrability,"Currently you can't do a dev deploy that only builds an image, because the `deployed_services` method breaks if there are no `deploy_*` steps in the config. This change allows a dev deploy to work with just steps that don't transitively depend on the create namespace step.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12619:237,depend,depend,237,https://hail.is,https://github.com/hail-is/hail/pull/12619,1,['depend'],['depend']
Integrability,"Currently, all cleanup jobs depend on `sink`, which depends on all the deploy/test jobs finishing. This creates a problem -- short-running tests with high resource requirements end up reserving those resources for the full duration of the *longest* job. For instance, the scheduler test takes 14 seconds, but ends up reserving 3 non-preemptible cores for up to 30 minutes!. This can be solved by making the cleanup jobs depend on all descendants of the deploy jobs they are intending to clean up.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6673:28,depend,depend,28,https://hail.is,https://github.com/hail-is/hail/issues/6673,3,['depend'],"['depend', 'depends']"
Integrability,"Currently, attempting to start a Dataproc cluster without either a region argument or a configured `dataproc/region` results in a long error message `subprocess.CalledProcessError: Command '['gcloud', 'dataproc', 'clusters', 'create', ... ]' returned non-zero exit status 1` with the actual cause obscured above the traceback. That cause is:; ```; Failed to find attribute [region]. The attribute can be set in the following ways:; - provide the argument [--region] on the command line; - set the property [dataproc/region]; ```. There is some logic to show a nicer error message if no region is provided. However, that is only shown if `gcloud config get-value dataproc/region` fails. When `dataproc/region` is not set, that command succeeds and outputs an empty string. This change handles that case and shows the nicer error message.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8791:141,message,message,141,https://hail.is,https://github.com/hail-is/hail/pull/8791,3,['message'],['message']
Integrability,"Currently, if the type of the `default` argument to `dict.get` does not match the dictionary's value type, the error message contains the dictionary's type and the `default` argument's type. However, the `default` argument's type should be compared to the dictionary's **value** type. This can be particularly confusing when dealing with nested dictionaries. For example:; ```python; d = hl.dict({""foo"": {""foo"": 1}}); d.get(""somekey"", hl.dict({""bar"": {""bar"": 2}})); ```; results in:; ```; TypeError: 'get' expects parameter 'default' to have the same type as the dictionary ; value type, found 'dict<str, dict<str, int32>>' and 'dict<str, dict<str, int32>>'; ```. This change puts the value type instead of the dictionary type in the error message and slightly rewords the message to be clearer about which type is which.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7377:117,message,message,117,https://hail.is,https://github.com/hail-is/hail/pull/7377,3,['message'],['message']
Integrability,"Currently, jobs in hail batch can only be run on n1 machines but with the rise of deep learning in bioinformatics, the ability to run jobs on g2 machines, as well as other GPU supported machines, is an important and exciting addition to hail batch. This PR highlights the steps needed to add new machine types into hail batch and could be used as a template for further development support. . The changes in this PR can broadly be divided into additions to the job crun container and insertion of g2 resources (CPU, RAM, L4 Accelerator) into the resources table for billing. This PR uses the NVIDIA Container Toolkit, which allows the creation of GPU accelerated containers. This toolkit is integrated with docker via the parameters —runtime=nvidia and the specification of GPUs is made through —gpus all. The toolkit is installed in the batch worker VM startup script and the corresponding docker parameters are configured if the machine type is g2, so there is no change to the docker configuration for n1 machines. For the toolkit to work there is a nvidia hook that needs to be injected into the crun config. These modifications are also done based on machine type. On the billing side, the existing pricing setup was expanded to include g2 machines. The g2 instance cores and RAM are inserted into the database, and the SKUs are hard coded. For future machine type incorporation or updates, [https://cloud.google.com/skus/?currency=USD&filter=](https://cloud.google.com/skus/?currency=USD&filter=) may serve as a useful resource to identify relevant SKU ids. A new resource type was also added for the accelerator, including preemptible and non-preemtible. Finally, g2 machines mount the worker data disk under the name nvme0n2 so the code is updated to reflect this. Future work may want to investigate a way to automatically detect what the proper disk name is or make the disk naming logic more robust.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13430:691,integrat,integrated,691,https://hail.is,https://github.com/hail-is/hail/pull/13430,2,"['inject', 'integrat']","['injected', 'integrated']"
Integrability,"Currently, multiple users updating the pool config on the pool pages on the batch-driver website can have unexpected behavior. For instance, if two users simultaneously go to the batch-driver website and update the pool config one after the other, the net result is that the second config update will override the first with neither user knowing that two updates happened. This PR addresses this issue by ensuring that the current pool config that a client sees is consistent with what the pool config that the server has, before processing an update. - Add hidden input to pool.html to store the current client config json; - Change config-update route to get current client pool config and proposed pool config from POST request body; - Compare current client config with current server config and if they're different, then reject the proposed pool config",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11798:648,rout,route,648,https://hail.is,https://github.com/hail-is/hail/pull/11798,1,['rout'],['route']
Integrability,"Currently, the Grafana service deployed with the Hail environment is behind two layers of authentication, since the Grafana NGINX configuration proxies requests to it through the `/auth` route, and the login screen built into Grafana also displays. This change removes the second login screen. Demo at https://internal.hail.is/irademac/grafana.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12192:187,rout,route,187,https://hail.is,https://github.com/hail-is/hail/pull/12192,1,['rout'],['route']
Integrability,"Currently, the `mark_job_complete` SQL procedure deadlocks with itself, because the transaction takes a shared lock on the relevant row of the `batches` table, which it proceeds to try to upgrade to an exclusive lock later in the transaction when it calls `UPDATE batches …`. The lock upgrade is not an issue in itself, but it will cause a deadlock if we run multiple `mark_job_complete` transactions for the same batch at the same time, which we clearly would like to do. One way to avoid this deadlock is to never issue an UPDATE to the batches table during the `mark_job_complete` procedure. Currently, we conduct the following updates to the batch row:; - increment number of completed jobs; - mark the batch as complete if the number of completed jobs is equal to the total number of jobs; - increment the number of successful/failed/cancelled jobs depending on the completion type of the job. This deadlock is a symptom of the problem that the `batches` table holds both very static information (like the billing project) and very volatile information like the number of completed jobs. It's not an issue to have many transactions holding read-only locks on rows of the batches table so long as it contains mostly static data. Therefore, it seems appropriate to move the job counters out of the batch table and into a new small table that just contains these counters. This eliminates all but one of the UPDATEs to the batch table in the procedure. The one sticky issue is marking the batch as complete. This is a much more popular column and I was hesitant to move it around just yet. I ended up moving the completeness update into a second transaction, which I think is not too bad for now. I also think that it could merge nicely with the following transaction that does the callback. Resolving this deadlock uncovered yet another deadlock underneath, which I want to tackle next. This PR does NOT resolve the issue that all mark job complete transactions are serialized due to the way we inc",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11352:854,depend,depending,854,https://hail.is,https://github.com/hail-is/hail/pull/11352,1,['depend'],['depending']
Integrability,"Currently, the boolean versions aren't being used because there's no equivalent in the function registry. I removed the int and float versions because the Python interface didn't use them. Happy for feedback on what we want to expose. If we want to support booleans now, I'll add new Aggregators that work on annotations (not RV).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3535:162,interface,interface,162,https://hail.is,https://github.com/hail-is/hail/pull/3535,1,['interface'],['interface']
Integrability,"Currently, the k8s namespace field is used both for routing internal requests inside kubernetes but also external requests over the internet. It also has special logic based on whether the namespace indicates a production or dev environment. For example, if `namespace == 'default'`, then we route external `batch` requests to `batch.<domain>/path`, but if `namespace == foo_dev`, we route external `batch` requests to `internal.<domain>/foo_dev/path`. This PR decouples the namespace field from routing. Aside from being overall more straightforward in my opinion, this is necessary for batch on azure terra where batch is served out of a subpath it does not control and is unrelated to whatever namespace it might reside in. The guiding principle for routing is then as follows: If the config has no subpath, use a subdomain, otherwise put everything under domain + subpath. For example:; - `{'domain': 'hail.is', 'subpath': null}` => `batch.hail.is`; - `{'domain': 'internal.hail.is', 'subpath': '/foo_dev'}` => `internal.hail.is/foo_dev/batch`. Since the CI pipeline runs on current production instances, there is a minor need to stay compatible with old deploy configs (or else hack up the CI build.yaml). It's quite a simple translation though, because if there is no subpath provided we can infer one based on the `default_namespace`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14056:52,rout,routing,52,https://hail.is,https://github.com/hail-is/hail/pull/14056,5,['rout'],"['route', 'routing']"
Integrability,"Currently, the memory client buffers the entire output in memory which is likely to cause OOMs. For reasons that are not entirely clear to me, sometimes these OOMs get muffled by our system and instead lead to non-termination. I vaguely remember this happening before with `using`. I suspect there is something somewhat subtle wrong with that method, but I am not certain. Anyway, there are four big changes here:; 1. Do not buffer the entire request body in memory when writing to memory.; 2. Because of (1) we have to pull retry behavior all the way up to the top-level where we know how to recreate the body.; 3. Because of (2) it is easier to provide a `write(url)(writerFunction)` style API, which I do here.; 4. Again, because of (2), and because I want to preserve the file-object-like interface, I added a somewhat funky anonymous class which uses a second thread to facilitate the movement of data written into the OutputStream returned by `create` into the OutputStream of the HTTP connection. Point (4) probably bears more explanation. The root issue is the bad Apache HTTP Client interface. Instead of `request` returning an OutputStream, it takes an ""entity"". An entity knows how to write itself into the OutputStream of an HTTP request. This works fine if the ""writer"" code is pased as a function (as in my new `write` method), but that does not work if the control flow looks like:. f = create(...); f.write(...); r.close(). We avoid this limited API by initiating the request in a second thread which will eventually block waiting to receive data from a PipedInputStream. That PipedInputStream produces the data written to a PipedOutputStream. The `create` call returns a positioned OutputStream which just writes data into the PipedOutputStream and handles cleaning up the thread when it is closed. In a multi-core system, network requests should proceed in parallel to the client code. In a single-core system, the written data will buffer until `close` is called which will definite",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12691:793,interface,interface,793,https://hail.is,https://github.com/hail-is/hail/pull/12691,1,['interface'],['interface']
Integrability,"Currently, the memory client buffers the entire output in memory which is likely to cause OOMs. For reasons that are not entirely clear to me, sometimes these OOMs get muffled by our system and instead lead to non-termination. I vaguely remember this happening before with `using`. I suspect there is something somewhat subtle wrong with that method, but I am not certain. Anyway, there are two big changes here:; 1. Do not buffer the entire request body in memory when writing to memory.; 2. Because of (1) we have to pull retry behavior all the way up to the top-level where we know how to recreate the body.; 3. Because of (2) it is easier to provide a `write(url)(writerFunction)` style API, which I do here.; 4. Again, because of (2), and because I want to preserve the file-object-like interface, I added a somewhat funky anonymous class which uses a second thread to facilitate the movement of data written into the OutputStream returned by `create` into the OutputStream of the HTTP connection. Point (4) probably bears more explanation. The root issue is the bad Apache HTTP Client interface. Instead of `request` returning an OutputStream, it takes an ""entity"". An entity knows how to write itself into the OutputStream of an HTTP request. This works fine if the ""writer"" code is pased as a function (as in my new `write` method), but that does not work if the control flow looks like:. f = create(...); f.write(...); r.close(). We avoid this limited API by initiating the request in a second thread which will eventually block waiting to receive data from a PipedInputStream. That PipedInputStream produces the data written to a PipedOutputStream. The `create` call returns a positioned OutputStream which just writes data into the PipedOutputStream and handles cleaning up the thread when it is closed. In a multi-core system, network requests should proceed in parallel to the client code. In a single-core system, the written data will buffer until `close` is called which will definitel",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12689:792,interface,interface,792,https://hail.is,https://github.com/hail-is/hail/pull/12689,2,['interface'],['interface']
Integrability,"Currently, the only way to check if Hail can read URLs with a given scheme (`gs`, `s3`, etc) is to attempt to read a URL with that scheme. However, the same exception type is thrown whether the scheme is not supported or the file doesn't exist or something else went wrong and the error message is the only way to determine what went wrong. This adds a `hl.hadoop_scheme_supported` function, which returns a boolean indicating whether or not a URL scheme is supported. Discussed on Zulip: https://hail.zulipchat.com/#narrow/stream/123010-Hail-0.2E2.20support/topic/Get.20supported.20URL.20schemes. @johnc1231",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10555:287,message,message,287,https://hail.is,https://github.com/hail-is/hail/pull/10555,1,['message'],['message']
Integrability,"Currently, the router-resolver returns 500 if the session id is invalid. Instead,; it should return 401. This collapses two states: not authorized due to not being; a developer and not authorized due to not being logged in. This is unfortunate, but; we should avoid leaking information as to *why* this endpoint is unauthorized to; an attacker. Developers, presumably, are knowledgable enough to figure out why; they cannot log in on their own.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8583:15,rout,router-resolver,15,https://hail.is,https://github.com/hail-is/hail/pull/8583,1,['rout'],['router-resolver']
Integrability,"Currently, this just spins up a new JVM instance; I need to integrate this with a different branch with a standing JVM server that listens on a TCP socket for incoming jobs.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9935:60,integrat,integrate,60,https://hail.is,https://github.com/hail-is/hail/pull/9935,1,['integrat'],['integrate']
Integrability,"Currently, we only offer `hl._ndarray`, which takes a python list. Based on the contents of that list, and inner lists, it determines the dimensions. Problematically, the IR that gets generated will wrap every single number in the NDArray in an IR Node. . To resolve this, we should at least support:. - [x] Numpy NDArray literals; - [x] Make an ndarray from a hail array. Right now needs to be a python iterable or numpy array.; - [x] Natural generator functions, like `zeros`, `ones`, `full`",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7122:199,wrap,wrap,199,https://hail.is,https://github.com/hail-is/hail/issues/7122,1,['wrap'],['wrap']
Integrability,"Customize export variant- and genotype-level fields.; Upgrade to SorlJ 6, add dependencies.; Support SolrCloud.; Retry on Solr error.; Only insert non-null fields.; Only export called non-ref genotypes.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/497:78,depend,dependencies,78,https://hail.is,https://github.com/hail-is/hail/pull/497,1,['depend'],['dependencies']
Integrability,"D to pass impersonated uid information through in requests. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/104483"">kubernetes/kubernetes#104483</a>, <a href=""https://github.com/margocrawf""><code>@​margocrawf</code></a>)</li>; <li>Create HPA v2 from v2beta2 with some fields changed. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/102534"">kubernetes/kubernetes#102534</a>, <a href=""https://github.com/wangyysde""><code>@​wangyysde</code></a>) [SIG API Machinery, Apps, Auth, Autoscaling and Testing]</li>; <li>Ephemeral containers graduated to beta and are now available by default. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/105405"">kubernetes/kubernetes#105405</a>, <a href=""https://github.com/verb""><code>@​verb</code></a>)</li>; <li>Fix kube-proxy regression on UDP services because the logic to detect stale connections was not considering if the endpoint was ready. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/106163"">kubernetes/kubernetes#106163</a>, <a href=""https://github.com/aojea""><code>@​aojea</code></a>) [SIG API Machinery, Apps, Architecture, Auth, Autoscaling, CLI, Cloud Provider, Contributor Experience, Instrumentation, Network, Node, Release, Scalability, Scheduling, Storage, Testing and Windows]</li>; <li>If a conflict occurs when creating an object with <code>generateName</code>, the server now returns an &quot;AlreadyExists&quot; error with a retry option. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/104699"">kubernetes/kubernetes#104699</a>, <a href=""https://github.com/vincepri""><code>@​vincepri</code></a>)</li>; <li>Implement support for recovering from volume expansion failures (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/106154"">kubernetes/kubernetes#106154</a>, <a href=""https://github.com/gnufied""><code>@​gnufied</code></a>) [SIG API Machinery, Apps and Storage]</li>; <li>In ku",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11957:3853,depend,dependabot,3853,https://hail.is,https://github.com/hail-is/hail/pull/11957,1,['depend'],['dependabot']
Integrability,"D versions</li>; <li><a href=""https://github.com/ipython/ipython/commit/22e3cf313fa822ac2987e7aa901be0c40a8c8bf3""><code>22e3cf3</code></a> what's new 8.9 (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13907"">#13907</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/72f54950fc46a93c9c2c5a74d96702dae88fdb3c""><code>72f5495</code></a> what's new 8.9</li>; <li><a href=""https://github.com/ipython/ipython/commit/f13c898153084521527a82a617bdef7c8deabc16""><code>f13c898</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13905"">#13905</a> from Carreau/bad-fd</li>; <li><a href=""https://github.com/ipython/ipython/commit/4a065015a1b987ac6f30fff9180efbd93cffbed6""><code>4a06501</code></a> Remove opening/at-exit closing of devnull.</li>; <li><a href=""https://github.com/ipython/ipython/commit/9d0419bed36bae7228b2ad48296e58b918b1a9b8""><code>9d0419b</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13900"">#13900</a> from Carreau/doc-autosugg</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.34.0...8.9.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.34.0&new-version=8.9.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreat",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12664:2036,depend,dependabot,2036,https://hail.is,https://github.com/hail-is/hail/pull/12664,1,['depend'],['dependabot']
Integrability,"D.scala:52) at org.apache.spark.rdd.RDD.computeOrReadCheckpointla:90) at org.apache.spark.scheduler.Task.run(Task.scala:121) at org.apache.spark.executor.Executor$TaskRunner$$anonfun$10.apply(Executor.scala:4cala:414) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$ailureException: Failure while fetching StreamChunkId{streamId=830947795015, chunkIndex=0}: java.nio.file.NoSuchFileException: /data03/hadoop/yarn/t sun.nio.fs.UnixException.translateToIOException(UnixException.java:86) at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.javannel(UnixFileSystemProvider.java:214) at java.nio.file.Files.newByteChannel(Files.java:361) at java.nio.file.Files.newByteChannel(Files.java:40rage.BlockManager.getBlockData(BlockManager.scala:382) at org.apache.spark.network.netty.NettyBlockRpcServer$$anonfun$1.apply(NettyBlockRpcServer.rator$$anon$11.next(Iterator.scala:410) at scala.collection.convert.Wrappers$IteratorWrapper.next(Wrappers.scala:31) at org.apache.sparkler.processFetchRequest(TransportRequestHandler.java:130) at org.apache.spark.network.server.TransportRequestHandler.handle(TransportRequestHetty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerCactChannelHandlerContext.java:340) at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) at io.netty.channelxt.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHaetty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerCactChannelHandlerContext.java:340) at org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:85) at nnelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.A",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8106:8051,Wrap,Wrappers,8051,https://hail.is,https://github.com/hail-is/hail/issues/8106,1,['Wrap'],['Wrappers']
Integrability,"Dan thanks for the comments, some great suggestions. I've addressed some, will get to the rest by Monday. I owe you at least one unit test. You can check the app out at app.hail.is (no SSL yet). Let me know if you have a problem logging in. Currently no one knows the workshop password but me (we can set this to whatever needed), but all team members, besides maybe Dan Goldstein should have access through the normal login. . Login will appear a bit slow because we've decided to not go the popup route, so there's an extra 2 apparent redirects. Also, safari causes some issues if ""Cross-site tracking"" protection is on. A satisfactory solution will be made in time, until then, either another browser, or disable that protection.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5215#issuecomment-460040036:499,rout,route,499,https://hail.is,https://github.com/hail-is/hail/pull/5215#issuecomment-460040036,1,['rout'],['route']
Integrability,"Dan, I ended up revisiting your output suggestion, after realizing that I could eventually solve the output issue by changing how write_output concatenates identifiers with the prefix. This would be a smaller change than the original thought, which was to allow write_output to treat the output path as a directory and write the identifier unchanged. I still think this would be more what users would expect, but going this route is a bigger deviation so from a project management standpoint less desirable. I think you will now be happy with the code. Should be ready to go modulo the submodule decision. edit: Asana issue made for the output munging issue. If we add a user-definable separator my issue will be solved.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9194#issuecomment-670642110:424,rout,route,424,https://hail.is,https://github.com/hail-is/hail/pull/9194#issuecomment-670642110,1,['rout'],['route']
Integrability,"Danfeng needs to multiply a Hail Table by a Hail MatrixTable and get back a Hail MatrixTable again. The Table is sample by ""cluster"" (I think cluster is more or less an ancestry group). The MatrixTable is variant by ""cluster"". She wants to take the product of T and MT along the cluster dimension, returning to a variant by sample MatrixTable. There's two missing pieces:; - convert a Table to a MatrixTable; - convert a BlockMatrix to a MatrixTable. ---. The interface for `_unlocalize_entries` is pretty terrible right now:; ```; t = t.transmute(entries=[hl.struct(x=t[str(i)]) for i in range(6)]); t = t.annotate_globals(cols=hl.array([hl.struct(s=str(i)) for i in range(6)])); mt = t._unlocalize_entries('entries', 'cols', ['s']); ```; I want something like:; ```; mt = t.to_matrix_table_columns_to_entries(; columns=['0', '1', '2', '3', '4', '5']; ); ```; `columns` is a list of column names, the columns must have the same type. If they're not a struct, they're transformed to a struct this way: `hl.struct(entry=t[column])`. There is one column field called `""s""`, its values is corresponding column's name. ---. I want; ```; mt = bm.to_matrix_table(); ```; which produces a matrix table with three fields: `row_idx` `col_idx` and `entry`. They have the obvious values.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5504:460,interface,interface,460,https://hail.is,https://github.com/hail-is/hail/issues/5504,1,['interface'],['interface']
Integrability,"DeadNews""><code>@​DeadNews</code></a> in <a href=""https://github-redirect.dependabot.com/tox-dev/py-filelock/pull/155"">tox-dev/py-filelock#155</a></li>; <li>[pre-commit.ci] pre-commit autoupdate by <a href=""https://github.com/pre-commit-ci""><code>@​pre-commit-ci</code></a> in <a href=""https://github-redirect.dependabot.com/tox-dev/py-filelock/pull/156"">tox-dev/py-filelock#156</a></li>; <li>[pre-commit.ci] pre-commit autoupdate by <a href=""https://github.com/pre-commit-ci""><code>@​pre-commit-ci</code></a> in <a href=""https://github-redirect.dependabot.com/tox-dev/py-filelock/pull/157"">tox-dev/py-filelock#157</a></li>; <li>Check 3.11 support by <a href=""https://github.com/gaborbernat""><code>@​gaborbernat</code></a> in <a href=""https://github-redirect.dependabot.com/tox-dev/py-filelock/pull/158"">tox-dev/py-filelock#158</a></li>; <li>[pre-commit.ci] pre-commit autoupdate by <a href=""https://github.com/pre-commit-ci""><code>@​pre-commit-ci</code></a> in <a href=""https://github-redirect.dependabot.com/tox-dev/py-filelock/pull/159"">tox-dev/py-filelock#159</a></li>; <li>Bump dependencies by <a href=""https://github.com/gaborbernat""><code>@​gaborbernat</code></a> in <a href=""https://github-redirect.dependabot.com/tox-dev/py-filelock/pull/160"">tox-dev/py-filelock#160</a></li>; <li>[pre-commit.ci] pre-commit autoupdate by <a href=""https://github.com/pre-commit-ci""><code>@​pre-commit-ci</code></a> in <a href=""https://github-redirect.dependabot.com/tox-dev/py-filelock/pull/162"">tox-dev/py-filelock#162</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/dependabot""><code>@​dependabot</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/tox-dev/py-filelock/pull/154"">tox-dev/py-filelock#154</a></li>; <li><a href=""https://github.com/jnordberg""><code>@​jnordberg</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/tox-dev/py-filelock/pull/148"">tox-dev/py-filelock#148</a></li>; <li",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12157:2963,depend,dependabot,2963,https://hail.is,https://github.com/hail-is/hail/pull/12157,1,['depend'],['dependabot']
Integrability,"Dear hail team,. I would like to delete the gcvf information in the matrix table. I run:. mt = mt.transmute_entries(**mt.gvcf_info). **1. error in the hail terminal:** ; 2022-03-24 14:51:45 Hail: ERROR: Analysis exception: 'MatrixTable.transmute_entries': name collision with field indexed by ['row']: 'AS_MQRankSum'; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""<decorator-gen-1132>"", line 2, in transmute_entries; File ""/PATH_OMIT/.local/lib/python3.7/site-packages/hail/typecheck/check.py"", line 577, in wrapper; return __original_func(*args_, **kwargs_); File ""/PATH_OMIT/.local/lib/python3.7/site-packages/hail/matrixtable.py"", line 1952, in transmute_entries; check_annotate_exprs(caller, named_exprs, self._entry_indices, set()); File ""/PATH_OMIT/.local/lib/python3.7/site-packages/hail/utils/misc.py"", line 468, in check_annotate_exprs; check_collisions(caller, list(named_exprs), indices); File ""/PATH_OMIT/.local/lib/python3.7/site-packages/hail/utils/misc.py"", line 363, in check_collisions; raise ExpressionException(msg); hail.expr.expressions.base_expression.ExpressionException: 'MatrixTable.transmute_entries': name collision with field indexed by ['row']: 'AS_MQRankSum'. **2. Details in mt.gcvf_info:**; <StructExpression of type struct{AC: array<int32>, AF: array<float64>, AN: int32, AS_BaseQRankSum: array<float64>, AS_FS: array<float64>, AS_InbreedingCoeff: array<float64>, AS_MQ: array<float64>, AS_MQRankSum: array<float64>, AS_QD: array<float64>, AS_QUALapprox: array<int32>, AS_RAW_BaseQRankSum: str, AS_RAW_MQ: array<float64>, AS_RAW_MQRankSum: array<tuple(float64, int32)>, AS_RAW_ReadPosRankSum: array<tuple(float64, int32)>, AS_ReadPosRankSum: array<float64>, AS_SB_TABLE: array<array<int32>>, AS_SOR: array<float64>, AS_VarDP: array<int32>, BaseQRankSum: float64, ExcessHet: float64, FS: float64, InbreedingCoeff: float64, MQ: float64, MQRankSum: float64, MQ_DP: int32, QD: float64, QUALapprox: int32, RAW_GT_COUNT: array<int32>, RAW_MQ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/11660:541,wrap,wrapper,541,https://hail.is,https://github.com/hail-is/hail/issues/11660,1,['wrap'],['wrapper']
Integrability,"DefaultExecutor.execute(ServerImpl.java:159); 	at jdk.httpserver/sun.net.httpserver.ServerImpl$Dispatcher.handle(ServerImpl.java:442); 	at jdk.httpserver/sun.net.httpserver.ServerImpl$Dispatcher.run(ServerImpl.java:408); 	at java.base/java.lang.Thread.run(Thread.java:834). Hail version: 0.2.128-ce3ca9c77507; Error summary: SocketTimeoutException: connect timed out; File ""/home/edmund/.local/src/hail/hail/python/hail/backend/py4j_backend.py"", line 223, in _rpc; raise fatal_error_from_java_error_triplet(; File ""/home/edmund/.local/src/hail/hail/python/hail/backend/backend.py"", line 190, in execute; raise e.maybe_user_error(ir) from None; File ""/home/edmund/.local/src/hail/hail/python/hail/backend/backend.py"", line 190, in execute; raise e.maybe_user_error(ir) from None; File ""/home/edmund/.local/src/hail/hail/python/hail/table.py"", line 2002, in write; Env.backend().execute(; File ""/home/edmund/.local/src/hail/hail/python/hail/typecheck/check.py"", line 584, in wrapper; return __original_func(*args_, **kwargs_); File ""/home/edmund/.local/src/hail/test.py"", line 6, in <module>; ht.write('gs://ehigham-hail-tmp/test_hail_in_notebook.ht'); hail.utils.java.FatalError: SocketTimeoutException: connect timed out. Java stack trace:; java.io.IOException: Error getting access token from metadata server at: http://169.254.169.254/computeMetadata/v1/instance/service-accounts/default/token; 	at com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:254); 	at com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.util.CredentialFactory.getCredential(CredentialFactory.java:406); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.getCredential(GoogleHadoopFileSystemBase.java:1471); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createGcsFs(GoogleHadoopFileSystemBase.java:1630); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoo",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13904#issuecomment-1973731699:11360,wrap,wrapper,11360,https://hail.is,https://github.com/hail-is/hail/issues/13904#issuecomment-1973731699,1,['wrap'],['wrapper']
Integrability,"Deleting in col key branch. ```. def test_trio_matrix(self):; """"""; This test depends on certain properties of the trio matrix VCF; and pedigree structure. This test is NOT a valid test if the pedigree includes quads:; the trio_matrix method will duplicate the parents appropriately,; but the genotypes_table and samples_table orthogonal paths would; require another duplication/explode that we haven't written.; """"""; ped = Pedigree.read(test_file('triomatrix.fam')); famkt = KeyTable.import_fam(test_file('triomatrix.fam')). vds = hc.import_vcf(test_file('triomatrix.vcf'))\; .annotate_samples_table(famkt, root='sa.fam'). dads = famkt.filter('isDefined(pat_id)')\; .annotate('is_dad = true')\; .select(['pat_id', 'is_dad'])\; .key_by('pat_id'). moms = famkt.filter('isDefined(mat_id)') \; .annotate('is_mom = true') \; .select(['mat_id', 'is_mom']) \; .key_by('mat_id'). # test genotypes; gkt = (vds.genotypes_table(); .key_by('s'); .join(dads, how='left'); .join(moms, how='left'); .annotate('is_dad = isDefined(is_dad), is_mom = isDefined(is_mom)'); .aggregate_by_key('v = v, fam = fam.fam_id',; 'data = GT.map(_ => {role: if (is_dad) 1 else if (is_mom) 2 else 0, g: {GT: GT, AD: AD, GQ: GQ, DP: DP, PL: PL}}).collect()'); .filter('data.length() == 3'); .explode('data'); .select(['v', 'fam', 'data'])). tkt = (vds.trio_matrix(ped, complete_trios=True); .genotypes_table(); .annotate('fam = proband.fields.fam.fam_id, data = [{role: 0, g: proband}, {role: 1, g: father}, {role: 2, g: mother}]'); .select(['v', 'fam', 'data']); .explode('data'); .filter('isDefined(data.g)'); .key_by(['v', 'fam'])). self.assertTrue(gkt.same(tkt)). # test annotations; g_sa = (vds.samples_table(); .join(dads, how='left'); .join(moms, how='left'); .annotate('is_dad = isDefined(is_dad), is_mom = isDefined(is_mom)'); .aggregate_by_key('fam = fam.fam_id',; 'data = map(sa => {role: if (is_dad) 1 else if (is_mom) 2 else 0, sa: sa}).collect()'); .filter('data.length() == 3'); .explode('data'); .select(['fam', 'data']",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2814:77,depend,depends,77,https://hail.is,https://github.com/hail-is/hail/issues/2814,1,['depend'],['depends']
Integrability,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12476#issuecomment-1319054705:0,Depend,Dependabot,0,https://hail.is,https://github.com/hail-is/hail/pull/12476#issuecomment-1319054705,10,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"Dependency was only added to environment.yml, causing the container to fail to run. Would be nice if we could specify in one place.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5451:0,Depend,Dependency,0,https://hail.is,https://github.com/hail-is/hail/pull/5451,1,['Depend'],['Dependency']
Integrability,Dependent on #1574,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1576:0,Depend,Dependent,0,https://hail.is,https://github.com/hail-is/hail/pull/1576,1,['Depend'],['Dependent']
Integrability,DependentFunction for invoking a generated function from another generated function,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3631:0,Depend,DependentFunction,0,https://hail.is,https://github.com/hail-is/hail/pull/3631,1,['Depend'],['DependentFunction']
Integrability,"Depending on desired PL behavior, there's one last mismatch between the new combiner and the old one. The new combiner doesn't compute `RGQ` at all for reference alleles, I think this is fine.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10777#issuecomment-921329857:0,Depend,Depending,0,https://hail.is,https://github.com/hail-is/hail/pull/10777#issuecomment-921329857,1,['Depend'],['Depending']
Integrability,"Depending on how long the benchmark takes, you might want to make it work harder by setting k to something bigger, like 500 to 1000.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9888#issuecomment-761060616:0,Depend,Depending,0,https://hail.is,https://github.com/hail-is/hail/pull/9888#issuecomment-761060616,1,['Depend'],['Depending']
Integrability,"Depending on which PR of #8844 goes in first, I'll need to update the docs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8850#issuecomment-635432823:0,Depend,Depending,0,https://hail.is,https://github.com/hail-is/hail/pull/8850#issuecomment-635432823,1,['Depend'],['Depending']
Integrability,Depends -- we can extend the HWE aggregator to incorporate sample phenotype information or we can leave it to the user to filter out male samples.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/200#issuecomment-279521097:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/issues/200#issuecomment-279521097,1,['Depend'],['Depends']
Integrability,Depends on #1602,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1678:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/1678,1,['Depend'],['Depends']
Integrability,Depends on #1698,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1757:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/1757,1,['Depend'],['Depends']
Integrability,Depends on #1748,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1750:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/1750,1,['Depend'],['Depends']
Integrability,Depends on #2063,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2084#issuecomment-321332562:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/2084#issuecomment-321332562,1,['Depend'],['Depends']
Integrability,Depends on #2111,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2116#issuecomment-322951262:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/2116#issuecomment-322951262,1,['Depend'],['Depends']
Integrability,Depends on #2160. I have a Python interface and documentation in another branch but I think this function ought to be moved elsewhere.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2177:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/2177,2,"['Depend', 'interface']","['Depends', 'interface']"
Integrability,Depends on #2551,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2552#issuecomment-350601600:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/2552#issuecomment-350601600,1,['Depend'],['Depends']
Integrability,"Depends on #2619 (already approved, will go in soon)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2622#issuecomment-353471832:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/2622#issuecomment-353471832,1,['Depend'],['Depends']
Integrability,Depends on #2657,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2659#issuecomment-355762347:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/2659#issuecomment-355762347,1,['Depend'],['Depends']
Integrability,Depends on #2682 .,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2685:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/2685,1,['Depend'],['Depends']
Integrability,"Depends on #2848 and #2861, I'll rebase once those are in. LocalMatrix has pointwise +,-,*,% ops with broadcasting, matrix ops, etc. It's meant to mirror NumPy restricted to always having 2 axes (we may eventually want to introduce np.array into the expression language). Vectors are identified with a single column rather than having a separate class. Once this is in, I'll rename the distributedmatrix package to linalg. Next step is to build Python interface starting with those ops I need to pull over much of LMM pipeline, with testing on the Python side against Numpy.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2860:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/2860,2,"['Depend', 'interface']","['Depends', 'interface']"
Integrability,Depends on #2903,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2908:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/2908,1,['Depend'],['Depends']
Integrability,Depends on #3245,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3240#issuecomment-376892673:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/3240#issuecomment-376892673,1,['Depend'],['Depends']
Integrability,"Depends on #3259 . - Added TableImportIR; - Rewrote BedAnnotator and IntervalList in Python; - Removed BedAnnotator from Scala; - Could not easily remove IntervalList from the Scala code, so I kept it in there. @cseed Can you please take a look at this to make sure it is consistent with what you had in mind for TableImportIR?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3265:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/3265,1,['Depend'],['Depends']
Integrability,Depends on #3364.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3373:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/3373,1,['Depend'],['Depends']
Integrability,"Depends on #3539. (first new commit is ""filled out block-sparse matrix support""). Third and final major PR to introduce block-sparse matrices. All block matrix operations are now supported apart from the following cases that are most likely user error (and even these can be forced by applying the new method `densify` first):; - Division between two block matrices.; - Multiplication by a scalar or broadcasted vector which includes an infinite or ``nan`` value.; - Division by a scalar or broadcasted vector which includes a zero, infinite or ``nan`` value.; - Division of a scalar or broadcasted vector by a block matrix.; - Exponentiation by a negative exponent. The following operations are newly supported:; - Addition and subtraction of block matrices, resulting in ""union"" of realized blocks.; - Addition and subtraction of a scalar or broadcasted vector, resulting in a block-dense matrix.; - Slicing, and more generally row/column filtering, resulting in a block-dense matrix. New infrastructure includes:; - `supersetPartitions` in RichRDD, analogue of `subsetPartitions`, used to densify/realizeBlocks; - `BlockMatrixUnionOpRDD`, so far applied for `+` and `-` but able to support more general ops. Throughout I've aimed to support the block-sparse case while minimizing overhead on the more common block-dense case, particularly with `maybeSparse = None` when block-dense. Docs and tests updated accordingly.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3636:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/3636,1,['Depend'],['Depends']
Integrability,"Depends on #3992. Resolves https://github.com/hail-is/hail/issues/878. @tpoterba @catoverdrive Could you please double check I handled the joins, indices, and aggregations properly? Everything I tried besides just copying the indices and aggregations from `agg_expr` resulted in an index mismatch error. My current code generates the right output. I'm just skeptical whether it is robust to other faulty inputs.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4004:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/4004,1,['Depend'],['Depends']
Integrability,"Depends on #4049 and #4121. . @danking I'm concerned I changed the meaning of your `file_row_index` field and the code you specialized for Caitlin is broken with this PR. That field is always sorted now from 0 to nVariants. Before, the indices were the order in the BGEN file. Now they're the variant index into the actual index file. I had to change/delete some of the Python tests because they didn't make sense anymore. Next PR will support push down by locus, alleles rather than row index and this shouldn't be a concern anymore (and we can delete file_row_index). If you think the change in behavior will cause problems, I'll close this PR.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4102:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/4102,1,['Depend'],['Depends']
Integrability,Depends on #406,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/439#issuecomment-227984589:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/issues/439#issuecomment-227984589,1,['Depend'],['Depends']
Integrability,Depends on #5563,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5572#issuecomment-471690561:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/5572#issuecomment-471690561,1,['Depend'],['Depends']
Integrability,Depends on #5679,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5615#issuecomment-475804671:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/5615#issuecomment-475804671,1,['Depend'],['Depends']
Integrability,Depends on #5776 and #5781,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5784:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/5784,1,['Depend'],['Depends']
Integrability,Depends on #5776.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5781:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/5781,1,['Depend'],['Depends']
Integrability,Depends on #5791 and #5809,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5824:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/5824,1,['Depend'],['Depends']
Integrability,Depends on #867,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/873:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/873,1,['Depend'],['Depends']
Integrability,"Depends on (and includes changes in) #2661. This PR adds:; RowPartitioner and RowPartitionerSuite; RowMatrix.readBlockMatrix and tests in RowMatrixSuite; forceRowMajor parameter to BlockMatrix.write, included in tests; forceRowMajor to richDenseMatrixDouble. Currently I use skipBytes (which reads and throws away) to advance the DataInputStream. @cseed do you have advice on how to use seek instead?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2665:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/2665,1,['Depend'],['Depends']
Integrability,Depends on bug fix in #2620,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2591#issuecomment-353443048:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/2591#issuecomment-353443048,1,['Depend'],['Depends']
Integrability,Depends on pull request #696. Merge that first to get a simpler diff.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/697:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/697,1,['Depend'],['Depends']
Integrability,"Depends on the partitioning, of course. Currently, I think Chris said ~1m at 20K partitions. I think we should have ~4K, in which case this overhead of this step would be 6%. There's a problem that we want courser partitioning earlier in the merge process, and finer later, but we don't have the ability to repartition dynamically. Note, this isn't 100% overhead, because there was a previous step to compute and collect the partitioning information which is now gone. If that's problematic there are additional ways to speed things up.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5596#issuecomment-473367050:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/pull/5596#issuecomment-473367050,1,['Depend'],['Depends']
Integrability,Depends on: https://github.com/hail-is/hail/issues/4023,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4024:0,Depend,Depends,0,https://hail.is,https://github.com/hail-is/hail/issues/4024,1,['Depend'],['Depends']
Integrability,"Deploy failed, I was missing dependencies.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6182:29,depend,dependencies,29,https://hail.is,https://github.com/hail-is/hail/pull/6182,1,['depend'],['dependencies']
Integrability,"Describe, LookupError messages, etc.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2765:22,message,messages,22,https://hail.is,https://github.com/hail-is/hail/issues/2765,1,['message'],['messages']
Integrability,"Dictdiffer v0.9.0</h2>; <ul>; <li>Adds absolute tolerance feature for floats (<a href=""https://github.com/adrien-berchet""><code>@​adrien-berchet</code></a>) (<a href=""https://github-redirect.dependabot.com/inveniosoftware/dictdiffer/issues/152"">#152</a>)</li>; <li>Drops support of Python&lt;3.5 (<a href=""https://github.com/adrien-berchet""><code>@​adrien-berchet</code></a>) (<a href=""https://github-redirect.dependabot.com/inveniosoftware/dictdiffer/issues/160"">#160</a>)</li>; <li>Adds <code>assert_no_diff</code> helper to assist pytest users (<a href=""https://github.com/joesolly""><code>@​joesolly</code></a>) (<a href=""https://github-redirect.dependabot.com/inveniosoftware/dictdiffer/issues/153"">#153</a>)</li>; <li>Migrates CI to gh-actions (<a href=""https://github.com/ParthS007""><code>@​ParthS007</code></a> <a href=""https://github.com/diegodelemos""><code>@​diegodelemos</code></a>) (<a href=""https://github-redirect.dependabot.com/inveniosoftware/dictdiffer/issues/145"">#145</a>)</li>; <li>Removes dependency on pkg_resources (<a href=""https://github.com/eldruin""><code>@​eldruin</code></a>)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/inveniosoftware/dictdiffer/blob/master/CHANGES"">dictdiffer's changelog</a>.</em></p>; <blockquote>; <h1>Changes</h1>; <p>Version 0.9.0 (released 2021-07-22)</p>; <ul>; <li>Adds absolute tolerance feature for floats (<a href=""https://github.com/adrien-berchet""><code>@​adrien-berchet</code></a>) (<a href=""https://github-redirect.dependabot.com/inveniosoftware/dictdiffer/issues/152"">#152</a>)</li>; <li>Drops support of Python&lt;3.5 (<a href=""https://github.com/adrien-berchet""><code>@​adrien-berchet</code></a>) (<a href=""https://github-redirect.dependabot.com/inveniosoftware/dictdiffer/issues/160"">#160</a>)</li>; <li>Adds <code>assert_no_diff</code> helper to assist pytest users (<a href=""https://github.com/joesolly""><code>@​joesolly</code></a>) (<a href=""https",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11485:1282,depend,dependency,1282,https://hail.is,https://github.com/hail-is/hail/pull/11485,1,['depend'],['dependency']
Integrability,"Did my best, the behavior of this lowering functionality is complex, and it's hard to come up with a universal solution. The current issue I'm struggling with is the failure it testArrayAggContexts, which finds a ToArray(StreamRange()) being passed to EmitStream, instead of a StreamRange. TLDR: my ArrayAgg rule is stupid and fucked. Options: 1) Fix this rule, 2) (Seems not as good) In Emit have ArrayAgg needs to pass its child through Emit.emit a second time to match on ToArray, 3) make unstreamify more specific, such that ArrayAgg is allowed to take streams directly. ToArray definitely needs to wrap StreamRange in some cases (for instance MakeTuple(ToArray(StreamRange)), else get issues with the stream passed to SRVB. it would be helpful to have the intended (but currently applicable) design of stream/array semantics written down for all nodes (maybe it exists, I'll dig through design docs). Besides this 2 more failures.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8063#issuecomment-583795904:603,wrap,wrap,603,https://hail.is,https://github.com/hail-is/hail/pull/8063#issuecomment-583795904,1,['wrap'],['wrap']
Integrability,Discovered in azure when it couldn't run the auth copy-paste token tests. We don't see this in google because we use Cloud DNS for resolving *.hail to internal gateway for private jobs (we use /etc/hosts and a public resolver for public jobs). In Azure I decided to forego azure dns and just use the /etc/hosts route for all of our jobs.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11098:311,rout,route,311,https://hail.is,https://github.com/hail-is/hail/pull/11098,1,['rout'],['route']
Integrability,"Discussion in a different forum sounds good. This came up with the GPU branch as there was a question on whether we can trust what we are parsing as a resource or did we need to hardcode the SKUs explicitly. This was my proposed solution for us at least knowing that something has changed with lots of driver error messages and to not try and do any updates if the invariants of the ""SKU"" don't hold.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13607#issuecomment-1736209579:315,message,messages,315,https://hail.is,https://github.com/hail-is/hail/pull/13607#issuecomment-1736209579,1,['message'],['messages']
Integrability,"Disregard the message above. The auto increment would not work. Now the critical check to make sure no duplicates are added is this line:. ```python3; job_id = parameters.get('job_id'); has_record = await db.jobs.has_record(batch_id, job_id); if has_record:; log.info(f""database has record for ({batch_id}, {job_id})""); abort(400, f'invalid request: batch {batch_id} already has a job_id={job_id}'); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6238#issuecomment-498043583:14,message,message,14,https://hail.is,https://github.com/hail-is/hail/pull/6238#issuecomment-498043583,1,['message'],['message']
Integrability,"Disregard, makes sense because two of our dependencies might specify a shared dependency which is not directly our dependency. That dependency will be resolved in some manner and we want to track exactly what it was resolved to. This actually seems like the right thing to do.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5162#issuecomment-456603534:42,depend,dependencies,42,https://hail.is,https://github.com/hail-is/hail/pull/5162#issuecomment-456603534,4,['depend'],"['dependencies', 'dependency']"
Integrability,"Do you have an error message other than that failed post? I'm not seeing why that would stop a deploy. In #13115, the PR healing code is after the `_heal_deploy` code, so I don't know why an exception when healing a PR would stop a deploy from occurring. This POST error is also occurring on GCP. Definitely something to fix but I'm not sure why it's related. > This caused problems because the next merge candidates CI was selecting was causing bad GitHub rate limit requests for exceeding the number of statuses. So it kept retrying that same merge candidate. Unfortunately I'm not sure if this is relevant in Azure. Azure CI thinks about merge candidate when it comes to testing PRs, but it doesn't merge any PRs and whether or not it does a deploy just depends if there's a new commit on `main`, it shouldn't have to do with PRs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13050#issuecomment-1561903065:21,message,message,21,https://hail.is,https://github.com/hail-is/hail/issues/13050#issuecomment-1561903065,2,"['depend', 'message']","['depends', 'message']"
Integrability,"Do you think we should add 1-2 more states which are 'any_failure', 'all_failed' and change the others to 'any_success' and 'all_succeeded'? I was thinking it might be nice to have onError jobs with that dependency explicitly in the DAG.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12365#issuecomment-1289341106:204,depend,dependency,204,https://hail.is,https://github.com/hail-is/hail/pull/12365#issuecomment-1289341106,1,['depend'],['dependency']
Integrability,Do you want me to adopt this and make sure it doesn't break anything / see if the error messages disappear?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13546#issuecomment-1710276555:88,message,messages,88,https://hail.is,https://github.com/hail-is/hail/pull/13546#issuecomment-1710276555,1,['message'],['messages']
Integrability,"Docker jobs were cleaning up after themselves by including the entire directory for that job which removed the old container files. This PR makes it so `Container.remove()` removes the directory for the container. Before we merge this, I want to check the logs for this PR and make sure there aren't error messages that don't show up in tests.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12397:306,message,messages,306,https://hail.is,https://github.com/hail-is/hail/pull/12397,1,['message'],['messages']
Integrability,Docker just always returns 500s for images that don't exist and has a slightly different error message for each thing that could go wrong (project / repository / image / tag don't exist) and that message varies across registries.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12594:95,message,message,95,https://hail.is,https://github.com/hail-is/hail/pull/12594,2,['message'],['message']
Integrability,Docs and interface looks good to me!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2701#issuecomment-357036272:9,interface,interface,9,https://hail.is,https://github.com/hail-is/hail/pull/2701#issuecomment-357036272,1,['interface'],['interface']
Integrability,Document Scala version dependency,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8009:23,depend,dependency,23,https://hail.is,https://github.com/hail-is/hail/issues/8009,1,['depend'],['dependency']
Integrability,Document installing dependencies for pytest,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7942:20,depend,dependencies,20,https://hail.is,https://github.com/hail-is/hail/pull/7942,1,['depend'],['dependencies']
Integrability,Does it have to be in `Gi` not `G`? Otherwise interface looks good (don't know much about batch internals so can't comment on those),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6215#issuecomment-497099235:46,interface,interface,46,https://hail.is,https://github.com/hail-is/hail/pull/6215#issuecomment-497099235,1,['interface'],['interface']
Integrability,"Does not depend on PTypes 53, despite the name.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5055:9,depend,depend,9,https://hail.is,https://github.com/hail-is/hail/pull/5055,1,['depend'],['depend']
Integrability,Does this need to have the service with the router like all the other services?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9681#issuecomment-722651702:44,rout,router,44,https://hail.is,https://github.com/hail-is/hail/pull/9681#issuecomment-722651702,1,['rout'],['router']
Integrability,"Don't use typecheck decorators here, we need a clearer message.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2694:55,message,message,55,https://hail.is,https://github.com/hail-is/hail/issues/2694,1,['message'],['message']
Integrability,"Done!. Thanks Tim!. On Wed, Feb 1, 2017 at 8:24 AM, Tim Poterba <notifications@github.com>; wrote:. > *@tpoterba* commented on this pull request.; >; > Need just one tiny change to the py/j connector. Looks great!; > ------------------------------; >; > In python/hail/dataset.py; > <https://github.com/hail-is/hail/pull/1324#pullrequestreview-19546823>:; >; > > @@ -2336,6 +2336,22 @@ def mendel_errors(self, output, fam):; > pargs = ['mendelerrors', '-o', output, '-f', fam]; > self.hc._run_command(self, pargs); >; > + def min_rep(self):; > + """"""; > + Gives minimal, left-aligned representation of alleles. Note that this can change the variant position.; > +; > + ** Examples **; > + 1) Simple trimming of a multi-allelic site, no change in variant position; > + `1:10000:TAA:TAA,AA` => `1:10000:TA:T,A`; > +; > + 2) Trimming of a bi-allelic site leading to a change in position; > + `1:10000:AATAA,AAGAA` => `1:10002:T:G`; > +; > + """"""; > + jvds = self._jvds.minrep(); >; > add in the try: / except: here, following the other methods in dataset.py.; >; > The default py4j errors look horrible, so calling our wrapper method helps; > a lot.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/hail-is/hail/pull/1324#pullrequestreview-19546823>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ADVxgaQoXMxYMPE_V-RMRgYp5mvNSf-Pks5rYIePgaJpZM4LzbBv>; > .; >",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1324#issuecomment-276663883:1114,wrap,wrapper,1114,https://hail.is,https://github.com/hail-is/hail/pull/1324#issuecomment-276663883,1,['wrap'],['wrapper']
Integrability,"Due to a typo I tried to read a vds that doesn't exist. I got the following error message:; hail: fatal: read: corrupt VDS: no metadata.ser file. Recreate VDS. It should probably say something more specific, ideally:; hail: fatal: read: VDS does not exist. Or at least:; hail: fatal: read: non-existent or corrupt VDS: no metadata.ser file. Please (re)create VDS.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/327:82,message,message,82,https://hail.is,https://github.com/hail-is/hail/issues/327,1,['message'],['message']
Integrability,"Due to bytecode verification rules, an allocated but uninitalized object cannot be stored into a field, so the NEW and INVOKESPECIAL constructor call bytecodes cannot be split across methods. Therefore, I modified newInstance to fuse those operations together. I broke out control simplification and made it a stronger. Added method splitting. Currently, method splitting splits out basic blocks into their own, straight-line methods and all the control flow remains in the original method. All locals are spilled to fields which is terrible, but what we're doing now. I expect two changes in the future: recover the structured control flow (there are standard algorithms for this) so we can split out control flow, and use the dataflow analysis from InitializeLocals to only spill locals split across method boundaries. I will make a stacked PR on this that removes method wrapping from Emit and enables lir method splitting.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8958:874,wrap,wrapping,874,https://hail.is,https://github.com/hail-is/hail/pull/8958,1,['wrap'],['wrapping']
Integrability,"Dumpleton/wrapt/commit/df0e62c2740143cceb6cafea4c306dae1c559ef8""><code>df0e62c</code></a> Deal with module importers that don't implement newer API.</li>; <li><a href=""https://github.com/GrahamDumpleton/wrapt/commit/72627592324bee1a197925d0e600142bc8719a3e""><code>7262759</code></a> Fix change notes formatting.</li>; <li>Additional commits viewable in <a href=""https://github.com/GrahamDumpleton/wrapt/compare/1.13.3...1.14.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=wrapt&package-manager=pip&previous-version=1.13.3&new-version=1.14.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12102:4671,depend,dependabot-automerge-start,4671,https://hail.is,https://github.com/hail-is/hail/pull/12102,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"EC-291: Hex encode/decode with existing arrays. Thanks to Adam Retter.</p>; <p>Fixed Bugs:; o CODEC-264: MurmurHash3: Ensure hash128 maintains the sign extension bug.; Thanks to Andy Seaborne.</p>; <p>Changes:; o CODEC-280: Base32/Base64/BCodec: Added strict decoding property to control; handling of trailing bits. Default lenient mode discards them; without error. Strict mode raise an exception.; o CODEC-289: Base32/Base64 Input/OutputStream: Added strict decoding property; to control handling of trailing bits. Default lenient mode; discards them without error. Strict mode raise an exception.; o Update tests from JUnit 4.12 to 4.13. Thanks to Gary Gregory.; o Update actions/checkout from v1 to v2.3.2 <a href=""https://github-redirect.dependabot.com/apache/commons-codec/issues/50"">#50</a>, <a href=""https://github-redirect.dependabot.com/apache/commons-codec/issues/56"">#56</a>.; Thanks to Dependabot.; o Update actions/setup-java from v1.4.0 to v1.4.1 <a href=""https://github-redirect.dependabot.com/apache/commons-codec/issues/57"">#57</a>.; Thanks to Dependabot.</p>; <p>For complete information on Apache Commons Codec, including instructions on how; to submit bug reports, patches, or suggestions for improvement, see the; Apache Commons Codec website:</p>; <p><a href=""https://commons.apache.org/proper/commons-codec/"">https://commons.apache.org/proper/commons-codec/</a></p>; <p>Download page: <a href=""https://commons.apache.org/proper/commons-codec/download_codec.cgi"">https://commons.apache.org/proper/commons-codec/download_codec.cgi</a></p>; <hr />; <pre><code> Apache Commons Codec 1.14 RELEASE NOTES; December 30 2019; </code></pre>; <p>The Apache Commons Codec package contains simple encoder and decoders for; various formats such as Base64 and Hexadecimal. In addition to these; widely used encoders and decoders, the codec package also maintains a</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>;",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12385:1819,depend,dependabot,1819,https://hail.is,https://github.com/hail-is/hail/pull/12385,1,['depend'],['dependabot']
Integrability,"ECENT_DATE</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/6dd01c74102db0d608687953e351e31df3f31d9f""><code>6dd01c7</code></a> [1.26] Update docs for re-using HTTP connections after streaming</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/2049c91f732ae4fec0216c0697dee7822c25db10""><code>2049c91</code></a> Adds changing branches for installing from git docs for 1.26.x</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/cb4950545be4d427557ce863539c08655c9bdd6e""><code>cb49505</code></a> [1.26] Improve testing for IPv6 scoped addresses</li>; <li>Additional commits viewable in <a href=""https://github.com/urllib3/urllib3/compare/1.26.9...1.26.11"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.9&new-version=1.26.11)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12104:4473,depend,dependabot-security-updates,4473,https://hail.is,https://github.com/hail-is/hail/pull/12104,1,['depend'],['dependabot-security-updates']
Integrability,"EDIT: The problem in this message is still valid, but the fix described here was replaced following the conversation with Tim. Ok, second pruning bug fixed. This commit illustrates the change, probably worth looking at in isolation: https://github.com/hail-is/hail/pull/9578/commits/f4ce01d59a56bef7496490145e66d274f51139e6. Essentially, the problem was that we were rebuilding an `InsertFields(child, newFields, _)` node with a requested type of empty struct. The old rebuilding strategy handled this by recursively rebuilding the `child` node, then filtering `newFields` to include only those in the requested type. However, if the `child` node can't be filtered (say it's a `Ref` of a certain type), and one of the fields being inserted is overwriting a field in the child, you need to make sure you do the overwriting so the typing works out. Happy to explain more if this is unclear. I also added an optimization to just drop the whole `InsertFields` if the requested type is the empty struct, not sure if that's good pruning manners though. . CC @tpoterba",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9578#issuecomment-708568970:26,message,message,26,https://hail.is,https://github.com/hail-is/hail/pull/9578#issuecomment-708568970,1,['message'],['message']
Integrability,Elasticsearch dependency needs to be deteremined by scala / spark version,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9767:14,depend,dependency,14,https://hail.is,https://github.com/hail-is/hail/issues/9767,1,['depend'],['dependency']
Integrability,"Erm. There's an interface issue here. I need an output stream that can tell me the file position, but I don't know of any standard library interface that exposes that, so I just hardcoded the `FSDataOutputStream`. Is this going to be a problem? Are all `FS` implementations Hadoop file systems? cc: @akotlar",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6333#issuecomment-501732176:16,interface,interface,16,https://hail.is,https://github.com/hail-is/hail/pull/6333#issuecomment-501732176,2,['interface'],['interface']
Integrability,"Err, not sure what happened, but I noticed we removed refresh_k8s_state route, so I think we need to get rid of the call in the api (since the route doesn't exist). ```py; def refresh_k8s_state(self, url):; self.post(f'{url}/refresh_k8s_state', json_response=False); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5844#issuecomment-483833068:72,rout,route,72,https://hail.is,https://github.com/hail-is/hail/pull/5844#issuecomment-483833068,2,['rout'],['route']
Integrability,"Error (<a href=""https://github-redirect.dependabot.com/pandas-dev/pandas/issues/45939"">#45939</a>)</li>; <li><a href=""https://github.com/pandas-dev/pandas/commit/0fc655f84c6b51552a7c70f2b92c846b4d24e381""><code>0fc655f</code></a> Backport PR <a href=""https://github-redirect.dependabot.com/pandas-dev/pandas/issues/45920"">#45920</a>: DOC: fix URLs, formatting and typos (<a href=""https://github-redirect.dependabot.com/pandas-dev/pandas/issues/45930"">#45930</a>)</li>; <li><a href=""https://github.com/pandas-dev/pandas/commit/1418835ea328eb402686c31c8d6de0a99ad55bc9""><code>1418835</code></a> Backport PR <a href=""https://github-redirect.dependabot.com/pandas-dev/pandas/issues/45633"">#45633</a>: DOC: Fix typo in nth docstring (<a href=""https://github-redirect.dependabot.com/pandas-dev/pandas/issues/45924"">#45924</a>)</li>; <li><a href=""https://github.com/pandas-dev/pandas/commit/f035290718ef8e0683ecb16a20639ed5e57e10eb""><code>f035290</code></a> Backport PR <a href=""https://github-redirect.dependabot.com/pandas-dev/pandas/issues/45853"">#45853</a>: Fixing documentation format in read_csv (<a href=""https://github-redirect.dependabot.com/pandas-dev/pandas/issues/45922"">#45922</a>)</li>; <li><a href=""https://github.com/pandas-dev/pandas/commit/ebf024eb886a8e81922250a386c8d1c8bfa13b2a""><code>ebf024e</code></a> Backport PR <a href=""https://github-redirect.dependabot.com/pandas-dev/pandas/issues/45923"">#45923</a>: DOC: add Python 3.10 to doc (<a href=""https://github-redirect.dependabot.com/pandas-dev/pandas/issues/45927"">#45927</a>)</li>; <li><a href=""https://github.com/pandas-dev/pandas/commit/deea0562e1ebabc874011575293103d0ba35d0f0""><code>deea056</code></a> Backport PR <a href=""https://github-redirect.dependabot.com/pandas-dev/pandas/issues/45910"">#45910</a>: TST/CI: Set hypothesis deadline to None to avoid flaky fa...</li>; <li><a href=""https://github.com/pandas-dev/pandas/commit/58aebf1940b56b77279174f5413b76a5aaba465c""><code>58aebf1</code></a> Backport PR <a href=""https://githu",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11521:3141,depend,dependabot,3141,https://hail.is,https://github.com/hail-is/hail/pull/11521,2,['depend'],['dependabot']
Integrability,"Error message is this:. ```; org.apache.spark.SparkException: Task not serializable. Caused by: java.io.NotSerializableException: htsjdk.samtools.reference.FastaSequenceIndex; Serialization stack:; 	- object not serializable (class: htsjdk.samtools.reference.FastaSequenceIndex, value: htsjdk.samtools.reference.FastaSequenceIndex@e7b265e); 	- writeObject data (class: java.util.HashMap); 	- object (class is.hail.io.reference.FastaReader$$anon$1, {}); 	- field (class: is.hail.io.reference.FastaReader, name: cache, type: class java.util.LinkedHashMap); 	- object (class is.hail.io.reference.FastaReader, is.hail.io.reference.FastaReader@5a0e0886); 	- field (class: is.hail.variant.GenomeReference, name: fastaReader, type: class is.hail.io.reference.FastaReader); 	- object (class is.hail.variant.GenomeReference, test); 	- field (class: is.hail.expr.FunctionRegistry$$anonfun$160$$anonfun$apply$94, name: gr$13, type: class is.hail.variant.GRBase); 	- object (class is.hail.expr.FunctionRegistry$$anonfun$160$$anonfun$apply$94, <function2>). plus many more lines; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2881:6,message,message,6,https://hail.is,https://github.com/hail-is/hail/pull/2881,1,['message'],['message']
Integrability,"Error message starting up Batch:. ```; raise ApiException(http_resp=r); kubernetes.client.rest.ApiException: (403); Reason: Forbidden; HTTP response headers: HTTPHeaderDict({'Audit-Id': 'fc886821-4fc7-4697-b8d2-a4bc656b45f6', 'Content-Type': 'application/json', 'X-Content-Type-Options': 'nosniff', 'Date': 'Thu, 25 Apr 2019 22:18:26 GMT', 'Content-Length': '252'}); HTTP response body: b'{""kind"":""Status"",""apiVersion"":""v1"",""metadata"":{},""status"":""Failure"",""message"":""pods is forbidden: User \\""system:serviceaccount:batch-pods:default\\"" cannot watch pods in the namespace \\""test\\"""",""reason"":""Forbidden"",""details"":{""kind"":""pods""},""code"":403}\n'; ```. Going to retest, but it seems like this was a one time thing...",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5956#issuecomment-487075273:6,message,message,6,https://hail.is,https://github.com/hail-is/hail/pull/5956#issuecomment-487075273,2,['message'],['message']
Integrability,"Error message was this:. ```; + kubectl -n pr-12053-default-chqnmsebv8fq scale deployment batch-driver --replicas=0; Error from server (Forbidden): deployments.apps ""batch-driver"" is forbidden: User ""system:serviceaccount:pr-12053-default-chqnmsebv8fq:admin"" cannot get resource ""deployments"" in API group ""apps"" in the namespace ""pr-12053-default-chqnmsebv8fq""; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12059:6,message,message,6,https://hail.is,https://github.com/hail-is/hail/pull/12059,1,['message'],['message']
Integrability,Error message: hail: variantqc: caught exception: org.apache.spark.SparkException,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/660:6,message,message,6,https://hail.is,https://github.com/hail-is/hail/issues/660,1,['message'],['message']
Integrability,"Error messages from GCR and AR are different, and sometimes it looks like this from GCR:. ```; ""unauthorized: You don't have the needed permissions to perform this operation, and you may have invalid credentials; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12708:6,message,messages,6,https://hail.is,https://github.com/hail-is/hail/pull/12708,1,['message'],['messages']
Integrability,"Error:; ```; Hail version: 0.2.26-5e79257ea31c; Error summary: GoogleJsonResponseException: 400 Bad Request; {; ""code"" : 400,; ""errors"" : [ {; ""domain"" : ""global"",; ""message"" : ""Bucket is requester pays bucket but no user project provided."",; ""reason"" : ""required""; } ],; ""message"" : ""Bucket is requester pays bucket but no user project provided.""; }. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7433#issuecomment-548909738:166,message,message,166,https://hail.is,https://github.com/hail-is/hail/issues/7433#issuecomment-548909738,2,['message'],['message']
Integrability,Even better: append a d (or multiple ds to make it unique) to duplicate IDs and generate a message that it happened.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/862#issuecomment-319509326:91,message,message,91,https://hail.is,https://github.com/hail-is/hail/issues/862#issuecomment-319509326,1,['message'],['message']
Integrability,Ew8XF; + diff /tmp/tmp.WRSKGgGEB8 /tmp/tmp.C8ggaXDHDt; sed '/^pyspark/d' python/pinned-requirements.txt | grep -v -e '^[[:space:]]*#' -e '^$' | tr '\n' '\0' | xargs -0 python3 -m pip install -U; Defaulting to user installation because normal site-packages is not writeable; Collecting aiodns==2.0.0; Using cached aiodns-2.0.0-py2.py3-none-any.whl (4.8 kB); Collecting aiohttp==3.8.5; Using cached aiohttp-3.8.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.1 MB); Collecting aiosignal==1.3.1; Using cached aiosignal-1.3.1-py3-none-any.whl (7.6 kB); Collecting async-timeout==4.0.3; Using cached async_timeout-4.0.3-py3-none-any.whl (5.7 kB); Collecting asyncinit==0.2.4; Using cached asyncinit-0.2.4-py3-none-any.whl (2.8 kB); Collecting attrs==23.1.0; Using cached attrs-23.1.0-py3-none-any.whl (61 kB); Collecting avro==1.11.2; Using cached avro-1.11.2.tar.gz (85 kB); Installing build dependencies: started; Installing build dependencies: finished with status 'done'; Getting requirements to build wheel: started; Getting requirements to build wheel: finished with status 'done'; Preparing metadata (pyproject.toml): started; Preparing metadata (pyproject.toml): finished with status 'done'; Collecting azure-common==1.1.28; Using cached azure_common-1.1.28-py2.py3-none-any.whl (14 kB); Collecting azure-core==1.29.3; Using cached azure_core-1.29.3-py3-none-any.whl (191 kB); Collecting azure-identity==1.14.0; Using cached azure_identity-1.14.0-py3-none-any.whl (160 kB); Collecting azure-mgmt-core==1.4.0; Using cached azure_mgmt_core-1.4.0-py3-none-any.whl (27 kB); Collecting azure-mgmt-storage==20.1.0; Using cached azure_mgmt_storage-20.1.0-py3-none-any.whl (2.3 MB); Collecting azure-storage-blob==12.17.0; Using cached azure_storage_blob-12.17.0-py3-none-any.whl (388 kB); Collecting bokeh==3.2.2; Using cached bokeh-3.2.2-py3-none-any.whl (7.8 MB); Collecting boto3==1.28.41; Using cached boto3-1.28.41-py3-none-any.whl (135 kB); Collecting botocore==1.31.41; Using cached ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13837#issuecomment-1770502221:32590,depend,dependencies,32590,https://hail.is,https://github.com/hail-is/hail/issues/13837#issuecomment-1770502221,2,['depend'],['dependencies']
Integrability,"Example that currently fails:. ```; >>> mt = hl.import_vcf('sample.vcf'); >>> mt.annotate_entries(PL = hl.cond(mt.DP > 20, mt.PL, hl.map(lambda x: x, mt.PL))); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/cotton/hail/python/hail/matrixtable.py"", line 975, in annotate_entries; return self._select_entries(caller, s=self.entry.annotate(**e)); File ""/home/cotton/hail/python/hail/typecheck/check.py"", line 547, in wrapper; return f(*args_, **kwargs_); File ""/home/cotton/hail/python/hail/matrixtable.py"", line 2887, in _select_entries; return cleanup(MatrixTable(base._jvds.selectEntries(str(s._ir)))); File ""/home/cotton/opt/spark-2.2.0-bin-hadoop2.7/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/home/cotton/hail/python/hail/utils/java.py"", line 212, in deco; 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; hail.utils.java.FatalError: AssertionError: assertion failed: mismatch:; array<int32>; array<int32>; ApplyComparisonOp(GT(int32,int32),GetField(ArrayRef(GetField(Ref(va,struct{locus: locus<GRCh37>, alleles: array<str>, rsid: str, qual: float64, filters: set<str>, info: struct{NEGATIVE_TRAIN_SITE: bool, HWP: float64, AC: array<int32>, culprit: str, MQ0: int32, ReadPosRankSum: float64, AN: int32, InbreedingCoeff: float64, AF: array<float64>, GQ_STDDEV: float64, FS: float64, DP: int32, GQ_MEAN: float64, POSITIVE_TRAIN_SITE: bool, VQSLOD: float64, ClippingRankSum: float64, BaseQRankSum: float64, MLEAF: array<float64>, MLEAC: array<int32>, MQ: float64, QD: float64, END: int32, DB: bool, HaplotypeScore: float64, MQRankSum: float64, CCC: int32, NCC: int32, DS: bool}, `the entries! [877f12a8827e18f61222c6c8c5fb04a8]`: array<struct{GT: call, AD: array<int32>, DP: int32, GQ: int32, PL: array<int32>}>}),the entries! [877f12a8827e18f61222c6c8c5fb04a8]),Ref(i,int32)),DP),I32(20)). Java stack trace:; java.lang.AssertionError: assertion failed: mismatch:; array<int32>; array<int32>; ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4134:452,wrap,wrapper,452,https://hail.is,https://github.com/hail-is/hail/issues/4134,1,['wrap'],['wrapper']
Integrability,"Exciting, first code-related pull request review! It seems correct. I was wondering how you're testing table.py, backend.py, java.py, and would it be worthwhile to write unit or integration tests for these sections? I'd be happy to work on that if desired.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5019#issuecomment-449156617:178,integrat,integration,178,https://hail.is,https://github.com/hail-is/hail/pull/5019#issuecomment-449156617,1,['integrat'],['integration']
Integrability,"ExecuteContext.scoped() depends on the Spark backend, and all uses of it need to get removed. A separate PR removes it from the IRParser. The remaining uses are in BlockMatrix and the Graph/maximal independent set stuff.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8640:24,depend,depends,24,https://hail.is,https://github.com/hail-is/hail/pull/8640,1,['depend'],['depends']
Integrability,"Existence of directories is filesystem dependent, and they exist on Google if there is an object with that directory name a prefix. This required a little refactoring that changed fs.listfiles to return a coroutine that gives an iterator, rather than returning an iterator directly. This is because, if you use the `async def foo ... yield ...` syntax, it is not possible to write any code that will run between calling the async genreator function `foo` and the first call to `__anext__`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9818:39,depend,dependent,39,https://hail.is,https://github.com/hail-is/hail/pull/9818,1,['depend'],['dependent']
Integrability,Expands the interface to permit importing with no entry fields (previously was error),MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3449:12,interface,interface,12,https://hail.is,https://github.com/hail-is/hail/pull/3449,1,['interface'],['interface']
Integrability,"Exporting sample ids is dependent on having split variants, even after dropping all variants",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/382:24,depend,dependent,24,https://hail.is,https://github.com/hail-is/hail/issues/382,1,['depend'],['dependent']
Integrability,Expose VSM interface in python,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1153:11,interface,interface,11,https://hail.is,https://github.com/hail-is/hail/issues/1153,1,['interface'],['interface']
Integrability,Extending the idea of better error messages from #9398 to include `NDArrayRef`.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9444:35,message,messages,35,https://hail.is,https://github.com/hail-is/hail/pull/9444,1,['message'],['messages']
Integrability,"FWIW it does go into the container logs which is how I've always pulled out the true error, but I'm not sure how to get that on every system. For future reference, there's an even more pernicious issue, which is that when running VEP with `-o STDOUT` it actually suppresses certain error messages too - and there's not much you can do about that unless you actually go in and run VEP manually without that, in the environment that hail uses.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8146#issuecomment-591009197:288,message,messages,288,https://hail.is,https://github.com/hail-is/hail/issues/8146#issuecomment-591009197,1,['message'],['messages']
Integrability,"FYI @daniel-goldstein . I created three new abstract classes that act as the interface between different cloud compute implementations: `BaseZoneMonitor`, `BaseActivityMonitor`, and `BaseDiskMonitor`. There's a new `BaseComputeManager` that wraps the different monitors and also provides an interface for creating, deleting, and getting instances. I added an `InstanceState` that represents a common instance state between clouds (Running, Creating, Terminating). . I created a new `gcp` module that mirrors the structure of the batch module. I put all of the GCP specific implementations in there. In a future PR, I'll add the WorkerConfig for GCP and all of the GCP cost utility functions. I tested everything by hand looking for errors in the Logs Viewer. I'd like to do more testing of the disk monitor if you are good with the structure of this PR.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10860:77,interface,interface,77,https://hail.is,https://github.com/hail-is/hail/pull/10860,3,"['interface', 'wrap']","['interface', 'wraps']"
Integrability,"FYI, includes missing dependencies for batch_deploy and ci_deploy on create_accounts that can cause race condition failures.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6193#issuecomment-496358460:22,depend,dependencies,22,https://hail.is,https://github.com/hail-is/hail/pull/6193#issuecomment-496358460,1,['depend'],['dependencies']
Integrability,"FYI, there's a kubernetes_async that I've used twice now, copies the interface of the official library and works like a charm: https://github.com/tomplus/kubernetes_asyncio.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5844#issuecomment-483852673:69,interface,interface,69,https://hail.is,https://github.com/hail-is/hail/pull/5844#issuecomment-483852673,1,['interface'],['interface']
Integrability,"Feedback welcome, not for merging. Goal with ScoreCovariance was to get a working interface rather than optimize speed.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2219:82,interface,interface,82,https://hail.is,https://github.com/hail-is/hail/pull/2219,1,['interface'],['interface']
Integrability,Feel free to modify the terminology to something that makes sense to you. I agree I had a hard time figuring out what the correct interface should be.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12078#issuecomment-1206732116:130,interface,interface,130,https://hail.is,https://github.com/hail-is/hail/pull/12078#issuecomment-1206732116,1,['interface'],['interface']
Integrability,"Feels like it should allow complex expressions:; ```; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-51-baa31e7fcb57> in <module>(); ----> 1 ht4.order_by(hl.desc(ht4.fin_freq.AC[1])). <decorator-gen-788> in order_by(self, *exprs). /home/hail/hail.zip/hail/typecheck/check.py in wrapper(__original_func, *args, **kwargs); 544 def wrapper(__original_func, *args, **kwargs):; 545 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 546 return __original_func(*args_, **kwargs_); 547 ; 548 return wrapper. /home/hail/hail.zip/hail/table.py in order_by(self, *exprs); 2139 else:; 2140 if not e.col in self._fields_inverse:; -> 2141 raise ValueError(""Expect top-level field, found a complex expression""); 2142 if not e.col._indices == self._row_indices:; 2143 raise ValueError(""Sort fields must be row-indexed, found global field '{}'"".format(e)). ValueError: Expect top-level field, found a complex expression. ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4152:369,wrap,wrapper,369,https://hail.is,https://github.com/hail-is/hail/issues/4152,3,['wrap'],['wrapper']
Integrability,"Finally add BGEN filtering at the level of bytes. We add a non-public, non-documented `_variants_per_file` argument that lists the variants to keep by their on-disk indices. It's a pretty groady interface, but it works with the current infrastructure and provides a _massive_ improvement. We go from decoding all the variants in the BGEN to decoding only those relevant to the computation at hand. In the case of Caitlin's PRS scoring method, that's about 1% or less of the original variant set. It's a bit janky. The file paths need to be the fully qualified ones that are seen by the hadoop reader. So `file:/full/path/to/file.bgen` or `gs://full/path/to/bgen.file`, which is annoying. I don't have any better way to generically uniquely identify files though. ---; ### Calc Depth Bug. I also had to fix a bug in the indices. Neither my `OnDiskBTreeIndexToValue` nor the existing `IndexBTree` correctly calculated the sizes of the given trees. Recall that a b-tree is a series of layers. Layer 0 is at most `branchingFactor` in size. Layer i is at most `branchingFactor ^ (i+1)` in size. The total size of the b-tree is the sum of the layer sizes. Here's a few max sizes for a branchingFactor of 1024:. - 1 layer tree: 1024; - 2 layer tree: 1024^2 + 1024; - 3 layer tree: 1024^3 + 1024^2 + 1024. If you look carefully at the old `calcDepth` method, it incorrectly concludes that fully populated 3 layer trees have four layers because they have more than 1024^3 total (internal+leaf) elements. This issue rears it's head on an exponentially small number of trees (at depth `i`, the number of leaf elements must lie in `[1024^i-1024^(i-1), 1024^i]`. This discrepancy is what lead to my confusion for the last few days. It shows up quite quickly with very small branching factors (e.g. 3) but with a large branching factor (the default of 1024 and what all the tests were written against) it's fairly rare. ---; ### Summary of Changes. - add `_variants_per_file` which is a map from absolute file paths",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3813:195,interface,interface,195,https://hail.is,https://github.com/hail-is/hail/pull/3813,1,['interface'],['interface']
Integrability,"Finally working! Ugh, that was painful. Changes I made since I closed:; - You can't broadcast an object which has a reference to its own broadcast (e.g. ReferenceGenome => locusType => rgBc). I made locusType transient and recompute after serialization.; - Removed BroadcastSerializable. I can't figure out how to check ReferenceGenome/RVDPartitioner are only serialized during partitioning. This is basically a failure of the Kryo interface. I might try again sometime when I'm feeling beat down by serialization.; - Removed removeReference. This just isn't something we can support (except in isolated situations like tests, and I fixed those.) Now, if you add a reference, it only throws an error if an existing reference exists by that name and is incompatible.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5512#issuecomment-473088362:432,interface,interface,432,https://hail.is,https://github.com/hail-is/hail/pull/5512#issuecomment-473088362,1,['interface'],['interface']
Integrability,"First error was we were not cancelling the batch on TimeoutErrors. I kept the interface to timeout on the client side rather than passing the timeout to the service spec. We can revisit this design at another point. I also added another layer of tasks to make sure we were cancelling batches in the case that a submit failed. Some coroutines may have already succeeded and created a BatchPoolFuture, which we need to cancel. We need to use tasks instead of coroutines as the input to `gather` because on at least one failure we need to know if the submit task was completed successfully to extract the BatchPoolFuture to cancel it.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10696:78,interface,interface,78,https://hail.is,https://github.com/hail-is/hail/pull/10696,1,['interface'],['interface']
Integrability,"First of several web-related commits. Simply adds Lerna to manage (from future PRs) web apps and related micro services, as a monorepo. Deduplicate dependencies, install using a single command. The package.lock file is the majority of LOC, and it's automatically generated by npm install for a given package.json at a given point in time. We should commit these to ensure that subsequent npm install commands generated the same dependency tree. I think we should assume that this file is correct for the moment. https://stackoverflow.com/questions/44206782/do-i-commit-the-package-lock-json-file-created-by-npm-5. Lerna: https://lernajs.io. We can also choose not to use Lerna here and treat all web-related micro services as completely independent.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5314:148,depend,dependencies,148,https://hail.is,https://github.com/hail-is/hail/pull/5314,2,['depend'],"['dependencies', 'dependency']"
Integrability,"First, @cristinaluengoagullo, thank you for your contribution! This is awesome. Second, I think this PR will need a little work before it can go in. Let me describe the situation:. We have now stopped work on Hail 0.1 and are now making only critical bug fixes. I think we can accept small feature additions, but we're optimizing for stability over features now. All new development has moved to master/0.2 beta. If you do make changes to 0.1, they should be forward ported to 0.2 if you want them to be carried forward. In addition, there are two problems with your PR:. 1. It is quite large. We prefer contributions to be single conceptual units. For example, a change to VEP should be separate from additions to the function registry. 2. The diff is somewhat confusing and I'm not 100% sure what is going on. It appears to include a large number of our own changes, it looks like from this commit: https://github.com/hail-is/hail/pull/3172/commits/e6f0b7f3a854f0fd64857876ab04375e570ba09f. However, given that the commit is under your name with a new commit message, I can't tell where those changes originated. Also, at least some (all?) of those changes already appear in 0.1, so I'm not sure why Github is displaying them, for example: https://github.com/hail-is/hail/pull/3172/files#diff-f11d07953ac5cd8bd8d4d3fd135a3efbR11. I think squashing your changes (and just your changes) and rebasing them onto the current 0.1 HEAD will fix the problem. Then we can take a closer look at the changes. Finally, it looks like your changed the VEP schema because you're invoking it with extra plugins. I think that's a no-go for us, but you could modify the VEP command (through an argument or in the properties file) to specify an alternate schema.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3172#issuecomment-377559347:1061,message,message,1061,https://hail.is,https://github.com/hail-is/hail/pull/3172#issuecomment-377559347,1,['message'],['message']
Integrability,Fix Bind AST node to wrap in parens,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3456:21,wrap,wrap,21,https://hail.is,https://github.com/hail-is/hail/pull/3456,1,['wrap'],['wrap']
Integrability,Fix LoadVCF exception message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2402:22,message,message,22,https://hail.is,https://github.com/hail-is/hail/pull/2402,1,['message'],['message']
Integrability,Fix VCF error message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3076:14,message,message,14,https://hail.is,https://github.com/hail-is/hail/pull/3076,1,['message'],['message']
Integrability,Fix bad error message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2789:14,message,message,14,https://hail.is,https://github.com/hail-is/hail/pull/2789,2,['message'],['message']
Integrability,"Fix bad error message in Table.order_by, extend functionality",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4927:14,message,message,14,https://hail.is,https://github.com/hail-is/hail/pull/4927,1,['message'],['message']
Integrability,Fix bad error message in unify,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3801:14,message,message,14,https://hail.is,https://github.com/hail-is/hail/pull/3801,1,['message'],['message']
Integrability,"Fix bad error message, make 'analyze' errors better",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4045:14,message,message,14,https://hail.is,https://github.com/hail-is/hail/pull/4045,1,['message'],['message']
Integrability,Fix bgen index error message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2499:21,message,message,21,https://hail.is,https://github.com/hail-is/hail/pull/2499,1,['message'],['message']
Integrability,Fix cats runtime dependency,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1074:17,depend,dependency,17,https://hail.is,https://github.com/hail-is/hail/pull/1074,1,['depend'],['dependency']
Integrability,Fix error message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1040:10,message,message,10,https://hail.is,https://github.com/hail-is/hail/pull/1040,2,['message'],['message']
Integrability,Fix error message for import_gen,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2537:10,message,message,10,https://hail.is,https://github.com/hail-is/hail/issues/2537,1,['message'],['message']
Integrability,Fix error message when Code[T] emission happens on worker,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3525:10,message,message,10,https://hail.is,https://github.com/hail-is/hail/pull/3525,1,['message'],['message']
Integrability,Fix error message when indexing into (Matrix)Tables without keys,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6736:10,message,message,10,https://hail.is,https://github.com/hail-is/hail/pull/6736,1,['message'],['message']
Integrability,Fix error message when no files found,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2850:10,message,message,10,https://hail.is,https://github.com/hail-is/hail/pull/2850,1,['message'],['message']
Integrability,Fix error message with null values for export vcf,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4156:10,message,message,10,https://hail.is,https://github.com/hail-is/hail/pull/4156,1,['message'],['message']
Integrability,Fix error messages for MatrixTable / Table join syntax with __getitem__,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2694:10,message,messages,10,https://hail.is,https://github.com/hail-is/hail/issues/2694,1,['message'],['messages']
Integrability,Fix error messages in union_cols,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5241:10,message,messages,10,https://hail.is,https://github.com/hail-is/hail/pull/5241,1,['message'],['messages']
Integrability,Fix error messages related to bad indexing.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5171:10,message,messages,10,https://hail.is,https://github.com/hail-is/hail/pull/5171,1,['message'],['messages']
Integrability,"Fix error messages to be consistent about using quotes, not backticks.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5761:10,message,messages,10,https://hail.is,https://github.com/hail-is/hail/pull/5761,1,['message'],['messages']
Integrability,Fix exporting of env vars in build.yaml for `release`. ; Make `release`:; - depend on tests; - use tested wheel (dont rebuild).,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14434:76,depend,depend,76,https://hail.is,https://github.com/hail-is/hail/pull/14434,1,['depend'],['depend']
Integrability,Fix pip install dependency name,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4689:16,depend,dependency,16,https://hail.is,https://github.com/hail-is/hail/pull/4689,1,['depend'],['dependency']
Integrability,Fix python error messages,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1206:17,message,messages,17,https://hail.is,https://github.com/hail-is/hail/pull/1206,1,['message'],['messages']
Integrability,"Fix python methods, expose samples_to_pandas, integrate logging",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1085:46,integrat,integrate,46,https://hail.is,https://github.com/hail-is/hail/pull/1085,1,['integrat'],['integrate']
Integrability,Fix require biallelic error message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2742:28,message,message,28,https://hail.is,https://github.com/hail-is/hail/pull/2742,1,['message'],['message']
Integrability,"Fix typo in server.rst by <a href=""https://github.com/NemanjaT""><code>@​NemanjaT</code></a> in <a href=""https://github-redirect.dependabot.com/oauthlib/oauthlib/pull/819"">oauthlib/oauthlib#819</a></li>; <li>Fixed isort imports by <a href=""https://github.com/dasm""><code>@​dasm</code></a> in <a href=""https://github-redirect.dependabot.com/oauthlib/oauthlib/pull/820"">oauthlib/oauthlib#820</a></li>; <li>docs: Fix a few typos by <a href=""https://github.com/timgates42""><code>@​timgates42</code></a> in <a href=""https://github-redirect.dependabot.com/oauthlib/oauthlib/pull/822"">oauthlib/oauthlib#822</a></li>; <li>docs: fix typos by <a href=""https://github.com/kianmeng""><code>@​kianmeng</code></a> in <a href=""https://github-redirect.dependabot.com/oauthlib/oauthlib/pull/823"">oauthlib/oauthlib#823</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/ariebovenberg""><code>@​ariebovenberg</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/oauthlib/oauthlib/pull/804"">oauthlib/oauthlib#804</a></li>; <li><a href=""https://github.com/tamanobi""><code>@​tamanobi</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/oauthlib/oauthlib/pull/816"">oauthlib/oauthlib#816</a></li>; <li><a href=""https://github.com/NemanjaT""><code>@​NemanjaT</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/oauthlib/oauthlib/pull/819"">oauthlib/oauthlib#819</a></li>; <li><a href=""https://github.com/kianmeng""><code>@​kianmeng</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/oauthlib/oauthlib/pull/823"">oauthlib/oauthlib#823</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/oauthlib/oauthlib/compare/v3.2.0...v3.2.1"">https://github.com/oauthlib/oauthlib/compare/v3.2.0...v3.2.1</a></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.co",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12197:3159,depend,dependabot,3159,https://hail.is,https://github.com/hail-is/hail/pull/12197,2,['depend'],['dependabot']
Integrability,Fixed Cassandra dependency.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/547:16,depend,dependency,16,https://hail.is,https://github.com/hail-is/hail/pull/547,1,['depend'],['dependency']
Integrability,Fixed bad error message in Variant ctor.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1545:16,message,message,16,https://hail.is,https://github.com/hail-is/hail/pull/1545,1,['message'],['message']
Integrability,"Fixed error message in 4d38cca, new issue supercedes in #376",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/361#issuecomment-218033798:12,message,message,12,https://hail.is,https://github.com/hail-is/hail/issues/361#issuecomment-218033798,1,['message'],['message']
Integrability,Fixed error messages (!),MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/324:12,message,messages,12,https://hail.is,https://github.com/hail-is/hail/pull/324,1,['message'],['messages']
Integrability,Fixed error messages caused by invalid VCF input,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/369:12,message,messages,12,https://hail.is,https://github.com/hail-is/hail/pull/369,1,['message'],['messages']
Integrability,Fixed warning message typo: 'non-ACGT' => 'non-ACGTN',MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/802:14,message,message,14,https://hail.is,https://github.com/hail-is/hail/pull/802,1,['message'],['message']
Integrability,"Fixes #12976. I do not fully understand the Azure git tagging scheme, but [this commit](https://github.com/Azure/azure-sdk-for-java/commit/054df3fb74098f4ee30eeb1df70df1e40438d169) appears to have made `close` idempotent. It was merged in June of 2022. That commit resolved [an issue](https://github.com/Azure/azure-sdk-for-java/issues/24782) reporting an error very similar to our own. All the azure version changes update the Azure packages to their latest versions as of 2023-05-09 1713 ET. Unfortunately, newer Azure versions and Spark 3.3.0 have inconsistent `io.netty` requirements. Spark is stuck back in February 2022. Spark 3.4.0 does support a compatible version of `io.netty`, but we're months from seeing that in Dataproc. This change packages up Azure and all its dependencies into one JAR of relocated classes. We must refer to those classes by their relocated names.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13032:777,depend,dependencies,777,https://hail.is,https://github.com/hail-is/hail/pull/13032,1,['depend'],['dependencies']
Integrability,"Fixes #13346. Another user was confused by this: https://github.com/hail-is/hail/issues/14102. Unfortunately, the world appears to have embraced missing values in VCF array fields even though the single element case is ambiguous. In #13346, I proposed a scheme by which we can disambiguate many of the cases, but implementing it ran into challenges because LoadVCF.scala does not expose whether or not an INFO field was a literal ""."" or elided entirely from that line. Anyway, this error message actually points users to the fix. I also changed some method names such that every method is ArrayType and never TypeArray.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14105:488,message,message,488,https://hail.is,https://github.com/hail-is/hail/pull/14105,1,['message'],['message']
Integrability,"Fixes #13706. When I reworked `build.gradle` to be simpler and conform with modern gradle standards, I forgot to dump all of our dependencies into our test runtime classpath. This PR ensures that the test runtime classpath is the same as our runtime classpath in QoB and in QoS.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13740:129,depend,dependencies,129,https://hail.is,https://github.com/hail-is/hail/pull/13740,1,['depend'],['dependencies']
Integrability,"Fixes #14262. Ever since starting to control job network namespaces ourselves, we run the worker container with `--network host`. But running with the host's network namespace means there's no need (nor meaning) to use port forwarding rules with `-p`. Docker safely ignores this redundant setting but emit some log messages like:. ```; WARNING: Published ports are discarded when using host network mode; ```. The solution here is to just remove the old port publishing settings.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14252:315,message,messages,315,https://hail.is,https://github.com/hail-is/hail/pull/14252,1,['message'],['messages']
Integrability,Fixes #2159. Error message is now:; ```; FatalError: HailException: corrupt or outdated VDS: invalid metadata; Recreate VDS with current version of Hail.; Detailed exception:; No usable value for sample_schema; Did not find value which can be converted into java.lang.String. Java stack trace:; is.hail.utils.HailException: corrupt or outdated VDS: invalid metadata; Recreate VDS with current version of Hail.; Detailed exception:; No usable value for sample_schema; Did not find value which can be converted into java.lang.String; 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:6); 	at is.hail.utils.package$.fatal(package.scala:27); 	at is.hail.variant.VariantSampleMatrix$$anonfun$1.apply(VariantSampleMatrix.scala:77); 	at is.hail.variant.VariantSampleMatrix$$anonfun$1.apply(VariantSampleMatrix.scala:72); 	at is.hail.utils.richUtils.RichHadoopConfiguration$.is$hail$utils$richUtils$RichHadoopConfiguration$$using$extension(RichHadoopConfiguration.scala:226); 	at is.hail.utils.richUtils.RichHadoopConfiguration$.readFile$extension(RichHadoopConfiguration.scala:251); 	at is.hail.variant.VariantSampleMatrix$.readFileMetadata(VariantSampleMatrix.scala:72); 	at is.hail.variant.VariantSampleMatrix$.read(VariantSampleMatrix.scala:51); 	at is.hail.HailContext$$anonfun$10.apply(HailContext.scala:434); 	at is.hail.HailContext$$anonfun$10.apply(HailContext.scala:433); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.mutable.ArrayOps$ofRef.map(ArrayOps.scala:186); 	at is.hail.HailContext.readAll(HailContext.scala:433); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.N,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2173:19,message,message,19,https://hail.is,https://github.com/hail-is/hail/pull/2173,1,['message'],['message']
Integrability,"Fixes #3465. `GC` had been removed from the Python interface (mostly), but it should have also been removed on the Scala side as well.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3496:51,interface,interface,51,https://hail.is,https://github.com/hail-is/hail/pull/3496,1,['interface'],['interface']
Integrability,"Fixes #3729. The problem with the If in the array emitting logic was that the lengths were being stored in two different local variables, which were only being evaluated/stored depending on which branch was taken. Because we store that information in another local variable, `xvcond`, and check it again when we're actually consuming the array, the analyzer was checking both branches again for that step, and being unhappy that the local variable where the length is stored could have been unpopulated. I have fixed this by only having one branch and doing both the length calculation and the rest of the stuff there.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4234:177,depend,depending,177,https://hail.is,https://github.com/hail-is/hail/pull/4234,1,['depend'],['depending']
Integrability,"Fixes #4193 ; Depends on #4450. Before, the aggregation expression to `group_by` had to be an `ApplyAggOp` or a `ScanAggOp`, which was limiting (hl.agg.mean didn't work because it was implemented as hl.agg.sum / hl.agg.count). Now, any expression should work as long as there is at least one `ApplyAggOp` or `ScanAggOp`. I implemented this by converting the expression into a map values operation. Where the original ApplyAggOps are replaced by Apply operations getting the value from the dictionary that is defined with a Let IR outside of the ArrayMap over the keys operation. I had to compute the keySet because it's possible not every key appears in each dictionary due to filters in the SeqOp.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4456:14,Depend,Depends,14,https://hail.is,https://github.com/hail-is/hail/pull/4456,1,['Depend'],['Depends']
Integrability,"Fixes #7584. We already require this in Scala, but since we don't require it in python the error message is bad.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7656:97,message,message,97,https://hail.is,https://github.com/hail-is/hail/pull/7656,1,['message'],['message']
Integrability,"Fixes #9640. CHANGELOG: Fixed bug where show output for ndarrays was not correct. `TNDArray` shouldn't store strides on it. It only existed because of the old world where `PTypes` weren't fully fleshed out. Especially since `strides` is a series of offsets in bytes, and at the virtual type level we have no idea what elements of the ndarray will actually be. . The way I've fixed this for now is by making all incoming ndarray literals row major and all Java `Row` representation style things use `UnsafeIndexedSeqRowMajorView` to make them indexable in arow major way. I mostly just did this since row by row is the way you'd want to display data for `show`. My eventual plan is reorganize the ndarray emitter so we know that all ndarrays are being emitted column major all the time, and then we won't have to do this view wrapper thing since we will know what striding to expect. . This change is also good because now that strides are off of `TNDArray`/literals, there should be nothing preventing us from passing ndarrays of arbitrary data types back to Python from the JVM (currently we only support collecting ndarrays of primitives).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9641:825,wrap,wrapper,825,https://hail.is,https://github.com/hail-is/hail/pull/9641,1,['wrap'],['wrapper']
Integrability,Fixes a transitive dependency breaking issue. See [here](https://github.com/psf/black/issues/2964).,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11697:19,depend,dependency,19,https://hail.is,https://github.com/hail-is/hail/pull/11697,1,['depend'],['dependency']
Integrability,Fixes https://github.com/hail-is/hail/security/dependabot/168,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14532:47,depend,dependabot,47,https://hail.is,https://github.com/hail-is/hail/pull/14532,1,['depend'],['dependabot']
Integrability,Fixes the test where 'ERROR: could not find file' is in the message.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11692:60,message,message,60,https://hail.is,https://github.com/hail-is/hail/pull/11692,1,['message'],['message']
Integrability,"Fixes this error message in logs:. ```; Traceback (most recent call last):; File ""/usr/local/lib/python3.6/dist-packages/aiohttp/web_protocol.py"", line 418, in start; resp = await task; File ""/usr/local/lib/python3.6/dist-packages/aiohttp/web_app.py"", line 458, in _handle; resp = await handler(request); File ""/usr/local/lib/python3.6/dist-packages/aiohttp/web_middlewares.py"", line 119, in impl; return await handler(request); File ""/usr/local/lib/python3.6/dist-packages/aiohttp_session/__init__.py"", line 152, in factory; response = await handler(request); File ""/usr/local/lib/python3.6/dist-packages/ci/ci.py"", line 302, in batch_callback; await asyncio.shield(batch_callback_handler(request)); File ""/usr/local/lib/python3.6/dist-packages/ci/ci.py"", line 276, in batch_callback_handler; await wb.notify_batch_changed(); TypeError: notify_batch_changed() missing 1 required positional argument: 'app'; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7399:17,message,message,17,https://hail.is,https://github.com/hail-is/hail/pull/7399,1,['message'],['message']
Integrability,Fixes this warning message I got when activating the instance:; ```; /usr/local/lib/python3.6/dist-packages/aiomysql/cursors.py:192: Warning: Column 'activation_token' cannot be null; await self._do_get_result(); ```,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7463:19,message,message,19,https://hail.is,https://github.com/hail-is/hail/pull/7463,1,['message'],['message']
Integrability,"Fixes: #14247. Issues resolved herein:. 1. build.yaml tests must not use `exit 0` as it exits the test early.; 2. Always prefer `orjson` to `json`.; 3. Add `--wait` which waits for the submitted batch to complete and exits success only when the batch is success.; 4. Whenever working with paths, we must use the `realpath` which resolves symlinks. In particular, on Mac OS X, `/tmp` is a symlink to `/private/tmp` and Python's APIs are inconsistent on whether they return a realpath or a path with symlinks. [1]; 5. If the destination looks like a directory (e.g. ""bar:/foo/"", ""bar:/""), the tests all suggest we should copy *into* not *to*. We now check for a trailing slash and copy *into*.; 6. `ln -s src dst` means different things depending on whether dst is an extant folder or not. In this PR, I prefer to always be fully explicit so I never rely on `ln` detecting the destination is a directory and acting differently. Put differently: `file_input_to_src_dest` now never returns a file source and a destination folder.; 7. We need to create the `real_absolute_cwd()` on the job before we `cd` into it.; 8. `test_dir_outside_curdir` suggests that `--file foo/:/` is meant to copy the contents of foo into the root. This cannot be implemented with our symlink strategy (you can't replace the root with a symlink), so I changed the interpretation: a trailing slash on the source is meaningless. If the destination ends in a slash, we ""copy into"", otherwise we ""copy to"".; 9. Add examples of --files usage. [1]:. ```ipython3; In [1]: import tempfile; ...: tempfile.TemporaryDirectory(); Out[1]: <TemporaryDirectory '/var/folders/x1/601098gx0v11qjx2l_7qfw2c0000gq/T/tmp_pmj3lr9'>. In [2]: import os; ...: os.getcwd(); Out[2]: '/private/tmp'. In [3]: !ls -al /tmp; lrwxr-xr-x@ 1 root wheel 11 Aug 2 05:44 /tmp -> private/tmp; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14186:735,depend,depending,735,https://hail.is,https://github.com/hail-is/hail/pull/14186,1,['depend'],['depending']
Integrability,"Fixes</h3>; <ul>; <li>allow grpc without grpcio-status (<a href=""https://github-redirect.dependabot.com/googleapis/python-api-core/issues/355"">#355</a>) (<a href=""https://github.com/googleapis/python-api-core/commit/112049e79f5a5b0a989d85d438a1bd29485f46f7"">112049e</a>)</li>; <li>remove dependency on pkg_resources (<a href=""https://github-redirect.dependabot.com/googleapis/python-api-core/issues/361"">#361</a>) (<a href=""https://github.com/googleapis/python-api-core/commit/523dbd0b10d37ffcf83fa751f0bad313f162abf1"">523dbd0</a>)</li>; </ul>; <h2><a href=""https://github.com/googleapis/python-api-core/compare/v2.7.0...v2.7.1"">2.7.1</a> (2022-03-09)</h2>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/googleapis/python-api-core/commit/5b5e77563229687c901d77b5fdecc18168b535e6""><code>5b5e775</code></a> chore(main): release 2.8.2 (<a href=""https://github-redirect.dependabot.com/googleapis/python-api-core/issues/396"">#396</a>)</li>; <li><a href=""https://github.com/googleapis/python-api-core/commit/8f73d2ee2d3af2201f877aa7e2f7361147759dc7""><code>8f73d2e</code></a> fix(deps): allow protobuf &lt; 5.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-api-core/issues/400"">#400</a>)</li>; <li><a href=""https://github.com/googleapis/python-api-core/commit/5da6733a475c436efc11b14889af73b3a0e20379""><code>5da6733</code></a> fix: drop support for grpc-gcp (<a href=""https://github-redirect.dependabot.com/googleapis/python-api-core/issues/401"">#401</a>)</li>; <li><a href=""https://github.com/googleapis/python-api-core/commit/e92045b7a34b8d0a6374d6b1f67c1c6095ad33c6""><code>e92045b</code></a> chore: test minimum dependencies in python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/python-api-core/issues/397"">#397</a>)</li>; <li><a href=""https://github.com/googleapis/python-api-core/commit/0eb727f92314db3c4383754514f75a49ba02e27b""><c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11970:8234,depend,dependabot,8234,https://hail.is,https://github.com/hail-is/hail/pull/11970,1,['depend'],['dependabot']
Integrability,"Fnxi: Array[Set[Array[Dict[Empty, Dict[Array[Call], Call]]]]],; dA0IS78I: Set[Empty],; VeGLA3v: Array[Array[Struct {; C: Empty,; sHjMXnj: Boolean,; G: Call; }]],; Ni: Struct {; HCrSI: Empty,; nJt7: Boolean; },; nxb8CkLI: Int,; y4mYv_DvH: Dict[Array[Genotype], Variant]; }; v [ WrappedArray( Set( WrappedArray(null); , WrappedArray(); , WrappedArray(Map(null -> Map(WrappedArray(2) -> 2)), Map(null -> Map(WrappedArray() -> 1)), Map(null -> Map(WrappedArray(1) -> 2))); ); , Set(WrappedArray(Map(null -> null), Map(null -> Map(WrappedArray(2) -> 31, WrappedArray(0) -> 0)))); , Set(WrappedArray(Map(null -> Map()), Map(null -> null))); , Set( WrappedArray(Map()); , WrappedArray(Map(null -> Map())); , WrappedArray(Map(null -> null)); , WrappedArray(); , WrappedArray(null, Map(null -> Map(WrappedArray() -> null)))); , Set(); , Set( WrappedArray(Map(null -> Map(WrappedArray() -> null))); , WrappedArray(); , WrappedArray(Map(null -> Map())); , WrappedArray(Map(null -> Map()), Map(null -> Map(WrappedArray() -> 2)))); , Set(WrappedArray()); , Set( WrappedArray(); , WrappedArray(Map(null -> Map()))); , Set(); , Set( WrappedArray(Map(null -> null)); , WrappedArray(Map(null -> Map()))); , Set( WrappedArray(Map(null -> Map(WrappedArray(null) -> 1)), Map(null -> Map(WrappedArray(5) -> 2))); , WrappedArray(Map())); , Set(); , Set(); , Set(WrappedArray(); , WrappedArray(Map(null -> Map()))); , Set(); , Set( null; , WrappedArray()); , Set( WrappedArray(Map(null -> Map(WrappedArray(1) -> 19))); , WrappedArray(Map(null -> Map(WrappedArray(0) -> 2)), Map(null -> Map())); , WrappedArray(Map(null -> Map())); , WrappedArray(Map(null -> Map(WrappedArray(2) -> null)), Map(null -> Map(WrappedArray() -> 17)), Map(null -> Map(WrappedArray() -> 1)))); , Set(WrappedArray(Map(null -> Map(WrappedArray(null) -> 1)), Map(null -> Map(WrappedArray(2) -> 0, WrappedArray() -> null)), Map(), Map())); , Set(WrappedArray(Map(null -> Map()), Map(null -> Map()), Map(null -> Map(WrappedArray(0) -> 0)))); , Set( Wrap",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1902:1850,Wrap,WrappedArray,1850,https://hail.is,https://github.com/hail-is/hail/pull/1902,1,['Wrap'],['WrappedArray']
Integrability,Follow-up PRs will use this for better error messages in places like require_biallelic,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4845:45,message,messages,45,https://hail.is,https://github.com/hail-is/hail/pull/4845,1,['message'],['messages']
Integrability,"For example, see error messages when batch-driver shuts down: https://cloudlogging.app.goo.gl/kKgJdv34s3a6Vd8n6.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13418:23,message,messages,23,https://hail.is,https://github.com/hail-is/hail/pull/13418,1,['message'],['messages']
Integrability,"For intervals, a lot of the usage is wrapped up in ordering. The lift of ordering to CodeBuilder/PCode is another large project all on its own.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8365#issuecomment-605101201:37,wrap,wrapped,37,https://hail.is,https://github.com/hail-is/hail/pull/8365#issuecomment-605101201,1,['wrap'],['wrapped']
Integrability,"For linreg, logrem, lmmreg, and skat:; - changed Python implementation to annotate or select on `x` if not a field and always pass `x_field`, which must be float64 but may have missing values.; - changed Scala linreg, logrem, lmmreg, and skat to take `xField` rather than `xExpr`. Updated Scala tests with selectEntry accordingly.; - replaced RegressionUtils `inputVector` with `setMeanImputedDoubles`; - removed `dataset` parameter from Python. Now all methods that take a dataset and one or more required expressions on that dataset now only take the expressions. Updated docs, tests, tutorial accordingly.; - added `req_tstring` to linear_mixed_regression and `We plan to change the interface to this method in Hail 0.2 while maintaining its functionality.` The constraint is due to string assumption made when comparing and filtering column keys against keys on KinshipMatrix. Since the latter is going away (and marked as such), I don't think it's worth more changes to remove the constraint.; - made docs more consistent and variable names more generic (sample=>col, variant=>row, etc)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3289:686,interface,interface,686,https://hail.is,https://github.com/hail-is/hail/pull/3289,1,['interface'],['interface']
Integrability,"For now, I'm going to add them by hand. Later there will be an admin interface for creating/deleting/editing billing projects.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7596#issuecomment-560198758:69,interface,interface,69,https://hail.is,https://github.com/hail-is/hail/pull/7596#issuecomment-560198758,1,['interface'],['interface']
Integrability,"For rrm and grm, I've pushed overall rescaling to the faster block matrix side and thereby removed the action that counts the number of variants after filtering. The behavior is identical except that we no longer warn when constant variants are dropped, but I've clarified the behavior in the docs. In the unfathomable case that all variants are constant, the user will receive the error message `HailException: block matrix must have at least one row` when the BlockMatrix is being created. For rrm, I've also simplified the filtering, as well as the expression algebra for std_dev from; ```; hl.sqrt((mt.__ACsq + (n_samples - mt.__n_called) * mt.__mean_gt ** 2) / n_samples - mt.__mean_gt ** 2); ```; to; ```; hl.sqrt(mt.__ACsq - (mt.__AC ** 2) / mt.__n_called); ```; with the added benefit of combining two annotates.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3944:388,message,message,388,https://hail.is,https://github.com/hail-is/hail/pull/3944,1,['message'],['message']
Integrability,"For your consideration… We often have a `pathlib.Path` or `cloudpathlib.CloudPath` that we've built up by parts, which is then the path to be used as an input resource:. ```python; res = mybatch.read_input(str(mycloudpath)); ```. Periodically we accidentally omit the `str(…)`, which leads to a semi-obscure error message and an extra editing round-trip. There is a point of view that `read_input()` and `read_input_group()` could also accept `os.PathLike` objects directly, and have Hail convert them to `str` itself, e.g. in `_new_input_resource_file()` which underlies both methods, as per this PR. The difficulty is how to do that conversion: `str(…)` does the trick for [`pathlib.Path`](https://docs.python.org/3.12/library/pathlib.html#operators) and [`cloudpathlib.CloudPath`](https://cloudpathlib.drivendata.org/stable/api-reference/cloudpath/), returning the path and URL, respectively, as a string. But it looks like in theory there might be [`os.PathLike`](https://docs.python.org/3/library/os.html#os.PathLike) subclasses that don't define `__str__()` to produce a usable path/URL. The official conversion method appears to be [`os.fspath()`](https://docs.python.org/3/library/os.html#os.fspath), but that does not do the right thing for `cloudpath.CloudPath` — there it downloads the remote file and returns a local path — which is not at all what Hail needs. However probably this is a theoretical concern and `str(…)` will be fine…",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14544#issuecomment-2105616965:314,message,message,314,https://hail.is,https://github.com/hail-is/hail/pull/14544#issuecomment-2105616965,2,['message'],['message']
Integrability,"Found during ndarray debugging, but generally applies:. Sumary of issue:; ```sh; In [21]: hl.eval(hl_nd_array_t[5,0:1000]) ; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); <ipython-input-21-f94ec164ffe0> in <module>; ----> 1 hl.eval(t[5,0:1000]). <decorator-gen-716> in eval(expression). ~/projects/hail/hail/python/hail/typecheck/check.py in wrapper(__original_func, *args, **kwargs); 612 def wrapper(__original_func, *args, **kwargs):; 613 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 614 return __original_func(*args_, **kwargs_); 615 ; 616 return wrapper. ~/projects/hail/hail/python/hail/expr/expressions/expression_utils.py in eval(expression); 188 Any; 189 """"""; --> 190 return eval_timed(expression)[0]; 191 ; 192 . <decorator-gen-714> in eval_timed(expression). ~/projects/hail/hail/python/hail/typecheck/check.py in wrapper(__original_func, *args, **kwargs); 612 def wrapper(__original_func, *args, **kwargs):; 613 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 614 return __original_func(*args_, **kwargs_); 615 ; 616 return wrapper. ~/projects/hail/hail/python/hail/expr/expressions/expression_utils.py in eval_timed(expression); 154 if ir_type != expression.dtype:; 155 raise ExpressionException(f'Expression type and IR type differed: \n{ir_type}\n vs \n{expression_type}'); --> 156 return Env.backend().execute(expression._ir, True); 157 else:; 158 uid = Env.get_uid(). ~/projects/hail/hail/python/hail/backend/spark_backend.py in execute(self, ir, timed); 294 jir = self._to_java_value_ir(ir); 295 # print(self._hail_package.expr.ir.Pretty.apply(jir, True, -1)); --> 296 result = json.loads(self._jhc.backend().executeJSON(jir)); 297 value = ir.typ._from_json(result['value']); 298 timings = result['timings']. ~/miniconda3/lib/python3.7/site-packages/py4j/java_gateway.py in __call__(self, *args); 1255 answer = s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9226:419,wrap,wrapper,419,https://hail.is,https://github.com/hail-is/hail/issues/9226,3,['wrap'],['wrapper']
Integrability,"Foundation</code> - <a href=""https://github.com/shalupov""><code>@​shalupov</code></a></li>; <li><a href=""https://github-redirect.dependabot.com/java-native-access/jna/issues/978"">#978</a>: Remove use of finalizers in JNA and improve concurrency for <code>Memory</code>, <code>CallbackReference</code> and <code>NativeLibrary</code> - <a href=""https://github.com/matthiasblaesing""><code>@​matthiasblaesing</code></a>.</li>; <li><a href=""https://github-redirect.dependabot.com/java-native-access/jna/pull/1440"">#1440</a>: Support for LoongArch64 - <a href=""https://github.com/Panxuefeng-loongson""><code>@​Panxuefeng-loongson</code></a>.</li>; <li><a href=""https://github-redirect.dependabot.com/java-native-access/jna/pull/1444"">#1444</a>: Update embedded libffi to 1f14b3fa92d4442a60233e9596ddec428a985e3c and rebuild native libraries - <a href=""https://github.com/matthiasblaesing""><code>@​matthiasblaesing</code></a>.</li>; </ul>; <h2>Bug Fixes</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/java-native-access/jna/pull/1438"">#1438</a>: Handle arrays in structures with differing size - <a href=""https://github.com/matthiasblaesing""><code>@​matthiasblaesing</code></a>.</li>; <li><a href=""https://github-redirect.dependabot.com/java-native-access/jna/issues/1442"">#1442</a>: Handle race condition in <code>c.s.j.p.win32.PdhUtil#PdhEnumObjectItems</code> - <a href=""https://github.com/dbwiddis""><code>@​dbwiddis</code></a>.</li>; </ul>; <h2>Important Changes</h2>; <ul>; <li><code>Memory#dispose</code>, <code>CallbackReference#dispose</code> and <code>NativeLibrary#dispose</code>; were called by the <code>Object#finalize</code> override. These calls were replaced by; the use of a cleaner. It is not guaranteed anymore, that <code>dispose</code> is called; on subclasses on finalization.</li>; </ul>; <h1>Release 5.11.0</h1>; <h2>Features</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/java-native-access/jna/pull/1398"">#1398</a>: Increase <code>c.s.j.p.win32.Sspi",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12438:1819,depend,dependabot,1819,https://hail.is,https://github.com/hail-is/hail/pull/12438,1,['depend'],['dependabot']
Integrability,"From @cseed: . > We're going to add a Reference class with a list of all the contigs and; > their sizes soon. We should use this instead of looking at the contig lines; > (which are unfortunately optional in the VCF spec.) We depend on the; > reference in a few places (e.g. Variant.inParX) and currently assume b37,; > but will soon have datasets with both b37 and b38.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/440:226,depend,depend,226,https://hail.is,https://github.com/hail-is/hail/issues/440,1,['depend'],['depend']
Integrability,"From Akhil:. ```; Traceback (most recent call last):; File ""/tmp/e9b3538af9b14d6ba440edbdf89e1ef1/phewas_rvas_jhs_unrel.py"", line 55, in <module>; print(mt.describe()); File ""/opt/conda/default/lib/python3.6/site-packages/hail/matrixtable.py"", line 85, in describe; rowstr = ""\nRows: \n"" + ""\n "".join([""{}: {}"".format(k, v._type) for k, v in self._row_keys.items()]); AttributeError: 'list' object has no attribute 'items'; ERROR: (gcloud.dataproc.jobs.submit.pyspark) Job [e9b3538af9b14d6ba440edbdf89e1ef1] failed with error:; Job failed with message [AttributeError: 'list' object has no attribute 'items']. Additional details can be found in 'gs://dataproc-37b10a9c-3ebd-47a4-9228-bf38bdfba439-us/google-cloud-dataproc-metainfo/e432509c-1bea-4839-9cb8-4d404d195a35/jobs/e9b3538af9b14d6ba440edbdf89e1ef1/driveroutput'.; ```; ```; mt = hl.read_matrix_table('gs://jhs_data_topmed/HCLOF_JHS_AF_01_unrel.mt'); mt.describe(); print(mt.count()); mt = mt.annotate_rows(genes = mt.vep.transcript_consequences.gene_symbol); mt = mt.group_rows_by(mt.genes); print(mt.describe()); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7410:544,message,message,544,https://hail.is,https://github.com/hail-is/hail/issues/7410,1,['message'],['message']
Integrability,"From a fresh clone, the above (modified with `rm -f`) fails with: ; ```bash; $ rm -f hail/upload-remote-test-resources && make -C hail upload-remote-test-resources; make: Entering directory '/home/edmund/.local/src/hail/hail'; # # If hailtop.aiotools.copy gives you trouble:; # gcloud storage cp -r src/test/resources/\* gs://hail-test-ezlis/edmund/hail-test-resources/test/resources/; # gcloud storage cp -r python/hail/docs/data/\* gs://hail-test-ezlis/edmund/hail-test-resources/doctest/data/; python3 -m hailtop.aiotools.copy -vvv 'null' '[\; {""from"":""src/test/resources"",""to"":""gs://hail-test-ezlis/edmund/hail-test-resources/test/resources/""},\; {""from"":""python/hail/docs/data"",""to"":""gs://hail-test-ezlis/edmund/hail-test-resources/doctest/data/""}\; ]' --timeout 600; /home/edmund/.local/src/hail/.venv/bin/python3: Error while finding module specification for 'hailtop.aiotools.copy' (ModuleNotFoundError: No module named 'hailtop'); make: *** [Makefile:355: upload-remote-test-resources] Error 1; make: Leaving directory '/home/edmund/.local/src/hail/hail'; ```. I'll try again with `hailtop` installed - just wanted to point out the dependency failure in `Makefile`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14138#issuecomment-1887719777:1141,depend,dependency,1141,https://hail.is,https://github.com/hail-is/hail/pull/14138#issuecomment-1887719777,1,['depend'],['dependency']
Integrability,"From gitter:. ```; Konrad Karczewski @konradjk 14:12; ooooo that's a fun error:; Error summary: RuntimeException: Internal hail error, bad binding in function registry for `count' with argument types Aggregable[Variant], List(): Arity0Aggregator(Long,<function0>); i know what i did wrong, but that's not a particularly helpful error. Daniel King @danking 14:13; @konradjk can you share the expression that caused this?. Konrad Karczewski @konradjk 14:13; print hc.read(vds_path).query_variants('variants.count'); :facepalm:. Daniel King @danking 14:14; mhmm; terrible error message indeed; ```. Somehow we're looking up a `FieldType` but getting the `Arity0Aggregator` for `count` [which has `MethodType`](https://github.com/hail-is/hail/blob/master/src/main/scala/is/hail/expr/FunctionRegistry.scala#L1843) (see also [def'n of `registerAggregator`](https://github.com/hail-is/hail/blob/master/src/main/scala/is/hail/expr/FunctionRegistry.scala#L578)). I suspect something is wrong in either `FunctionRegistry.lookupConversion` or `TypeTag.unify` or `FunctionRegistry.lookup`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1983:575,message,message,575,https://hail.is,https://github.com/hail-is/hail/issues/1983,1,['message'],['message']
Integrability,"From the logs:; ```; WARNING: --use-feature=2020-resolver no longer has any effect, since it is now the default dependency resolver in pip. This will become an error in pip 21.0.; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9771:112,depend,dependency,112,https://hail.is,https://github.com/hail-is/hail/pull/9771,1,['depend'],['dependency']
Integrability,"From the under development R interface, we want to call this method definition in `is.hail.expr.ir.IRParser`:. ```; def parse_table_ir(s: String, refMap: java.util.HashMap[String, String], irMap: java.util.HashMap[String, BaseIR]); ```. But the method signature is using `java.util.HashMap` instead of `java.util.Map` and the sparklyr JVM layer translates the R map equivalent (an environment) to a different implementation of `java.util.Map`, so dispatch fails. Since the conversion is transparent, there is no way to _force_ a particular implementation of `java.util.Map`. Is there any reason to require `java.util.HashMap` there, or could the signature be generalized? There are cases like this throughout the Hail API, for all collection types.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5340:29,interface,interface,29,https://hail.is,https://github.com/hail-is/hail/issues/5340,1,['interface'],['interface']
Integrability,"Full error message:. ```[Stage 2:> (0 + 0) / 16]2018-02-28 23:41:58 Hail: INFO: interval filter loaded 2453 of 103675 partitions; 2018-02-28 23:42:08 Hail: WARN: deprecation: 'drop_cols' will be removed before 0.2 release; Traceback (most recent call last):; File ""/tmp/98788bda-73b9-4ebe-924d-440665f0cd1d/hail-devel-53d795c163fd.zip/hail/typecheck/check.py"", line 415, in check_all; File ""/tmp/98788bda-73b9-4ebe-924d-440665f0cd1d/hail-devel-53d795c163fd.zip/hail/typecheck/check.py"", line 53, in check; hail.typecheck.check.TypecheckFailure. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/tmp/98788bda-73b9-4ebe-924d-440665f0cd1d/generate_qc_annotations.py"", line 220, in <module>; try_slack(args.slack_channel, main, args); File ""/tmp/98788bda-73b9-4ebe-924d-440665f0cd1d/pyscripts_8Rer6O.zip/gnomad_hail/slack_utils.py"", line 94, in try_slack; File ""/tmp/98788bda-73b9-4ebe-924d-440665f0cd1d/pyscripts_8Rer6O.zip/gnomad_hail/slack_utils.py"", line 77, in try_slack; File ""/tmp/98788bda-73b9-4ebe-924d-440665f0cd1d/generate_qc_annotations.py"", line 187, in main; vds, sample_table = generate_qc_annotations(vds, medians=not args.skip_medians); File ""<decorator-gen-616>"", line 2, in __getitem__; File ""/tmp/98788bda-73b9-4ebe-924d-440665f0cd1d/hail-devel-53d795c163fd.zip/hail/typecheck/check.py"", line 478, in _typecheck; File ""/tmp/98788bda-73b9-4ebe-924d-440665f0cd1d/hail-devel-53d795c163fd.zip/hail/typecheck/check.py"", line 425, in check_all; TypeError: __getitem__: parameter 'item': expected (str or tuple[(slice or hail.expr.expression.Expression or tuple[hail.expr.expression.Expression]),(slice or hail.expr.expression.Expression or tuple[hail.expr.expression.Expression])]), found int: '0'```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3038:11,message,message,11,https://hail.is,https://github.com/hail-is/hail/issues/3038,1,['message'],['message']
Integrability,"Function2. Hail JAR appears to not be visible on workers despite setting `--jars`, `--driver-class-path`, and `--conf spark.executor.extraClassPath`. . ### What you did:; 1) Downloaded pre-built binaries for 2.0.2. 2) Zipped the hail/python/hail folder into hail.zip. 3) Launched a local pyspark shell as follows:; ```; pyspark --jars $HAIL_HOME/jars/hail-all-spark.jar \; > --driver-class-path ./hail-all-spark.jar \; > --conf spark.executor.extraClassPath=./hail-all-spark.jar \; > --py-files $HAIL_HOME/python/hail.zip \; > --conf spark.sql.files.openCostInBytes=1099511627776 \; > --conf spark.sql.files.maxPartitionBytes=1099511627776 \; > --conf spark.hadoop.parquet.block.size=1099511627776; ```. 4) Attempted to run the Hail tutorial, received an error when calling `common_vds = common_vds.filter_genotypes('let ab = g.ad[1] / g.ad.sum() in ((g.isHomRef && ab <= 0.1) || (g.isHet && ab >= 0.25 && ab <= 0.75) ||(g.isHomVar && ab >= 0.9))')`. ### What went wrong (all error messages here, including the full java stack trace):; ```; Python 2.7.14 |Anaconda, Inc.| (default, Oct 16 2017, 17:29:19); [GCC 7.2.0] on linux2; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel).; 18/02/22 20:29:10 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 18/02/22 20:29:10 WARN Utils: Your hostname, CompyWompy resolves to a loopback address: 127.0.1.1; using 192.168.1.122 instead (on interface eth0); 18/02/22 20:29:10 WARN Utils: Set SPARK_LOCAL_IP if you need to bind to another address; Welcome to; ____ __; / __/__ ___ _____/ /__; _\ \/ _ \/ _ `/ __/ '_/; /__ / .__/\_,_/_/ /_/\_\ version 2.0.2; /_/. Using Python version 2.7.14 (default, Oct 16 2017 17:29:19); SparkSession available as 'spark'.; >>> from hail import *; >>> hc =",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2966:1084,message,messages,1084,https://hail.is,https://github.com/hail-is/hail/issues/2966,1,['message'],['messages']
Integrability,"Further pruned. Removed all GraphQL libraries, besides graphql-tag, which I like, because 1) simple hash-based cache: no need to walk complex graph to normalize cache, because in most cases I'm perfectly fine with not re-using cache across different queries (that may have some shared fields). Apollo does something ""smarter"", but much slower: walks a query, checks that the requested fields for a node are the same, and that the node's id is the same, as some other query. 2) no runtime validation of query shape via graphql-tag...uses simple template strings, which are free. We don't care about schema validation in the client...because the server will error when schema is invalid. This should be compile time validated instead, in this case via integration tests. Also removed react-icons... I was going to use this in place of material-design-icons, because I thought loading the full font, when I needed only a few icons, would be unnecessarily expensive. It turns out that I cannot find a library where a single icon import (react-icons or MaterialUI) is smaller than Google's entire material design font: a single font (there are several needed to cover all icons) is ~500B. A single react-icons icon is ~2KB on dev (production may be smaller due to tree shaking). Also, am opposed to CSS-in-JS: slower, worse tooling, larger. Benefits are dynamic selectors, which are really no advantage that I can see (without them can still dynamically apply classes, as in the yee ol days of pleb vanilla js). Home page down to <2kb when not logged in, and 3.1KB logged in. This includes header, simple body, and dark mode button.; <img width=""2636"" alt=""screen shot 2018-12-19 at 11 49 59 pm"" src=""https://user-images.githubusercontent.com/5543229/50264482-ed4c3000-03e8-11e9-80d1-81d195a7b37a.png"">; <img width=""2636"" alt=""screen shot 2018-12-19 at 11 50 33 pm"" src=""https://user-images.githubusercontent.com/5543229/50264483-ed4c3000-03e8-11e9-8180-1409ca16573f.png"">. edit: Further .1KB shaved (gzipp",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931#issuecomment-448868665:750,integrat,integration,750,https://hail.is,https://github.com/hail-is/hail/pull/4931#issuecomment-448868665,2,['integrat'],['integration']
Integrability,"FutureTask.run(FutureTask.java:266); E 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); E 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); E 	at java.lang.Thread.run(Thread.java:750); E ; E ; E ; E ; E Hail version: 0.2.115-f6017673dbb6; E Error summary: RuntimeException: Stream is already closed.; ```. ### Version. 0.2.115-f6017673dbb6. ### Relevant log output. ```shell; ________________________________ test_spectra_4 ________________________________; [gw2] linux -- Python 3.8.10 /usr/bin/python3. def test_spectra_4():; > spectra_helper(spec4). test/hail/methods/test_pca.py:229: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; test/hail/methods/test_pca.py:172: in spectra_helper; hail_V = (np.array(scores.scores.collect()) / singulars).T; <decorator-gen-538>:2: in collect; ???; /usr/local/lib/python3.8/dist-packages/hail/typecheck/check.py:584: in wrapper; return __original_func(*args_, **kwargs_); /usr/local/lib/python3.8/dist-packages/hail/expr/expressions/base_expression.py:1132: in collect; return hl.eval(e); <decorator-gen-702>:2: in eval; ???; /usr/local/lib/python3.8/dist-packages/hail/typecheck/check.py:584: in wrapper; return __original_func(*args_, **kwargs_); /usr/local/lib/python3.8/dist-packages/hail/expr/expressions/expression_utils.py:191: in eval; return eval_timed(expression)[0]; <decorator-gen-700>:2: in eval_timed; ???; /usr/local/lib/python3.8/dist-packages/hail/typecheck/check.py:584: in wrapper; return __original_func(*args_, **kwargs_); /usr/local/lib/python3.8/dist-packages/hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; /usr/local/lib/python3.8/dist-packages/hail/backend/service_backend.py:490: in execute; return self._cancel_on_ctrl_c(self._async_execute(ir, timed=timed)); /usr/local/lib/python3.8/dist-packages/hail/backend/service_backend.py:481: in _cancel_o",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12976:10277,wrap,wrapper,10277,https://hail.is,https://github.com/hail-is/hail/issues/12976,1,['wrap'],['wrapper']
Integrability,"G.yml</li>; <li>Additional commits viewable in <a href=""https://github.com/Textualize/rich/compare/v12.6.0...v13.5.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=rich&package-manager=pip&previous-version=12.6.0&new-version=13.5.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). You can trigger a rebase of this PR by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>. > **Note**; > Automatic rebases have been disabled on this pull request as it has been open for over 30 days.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13380:7332,Depend,Dependabot,7332,https://hail.is,https://github.com/hail-is/hail/pull/13380,17,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"GCP Logging attempts to infer the severity of a log entry and defaults to labelling everything written to `stdout` as `INFO` and everything written to `stderr` as `ERROR`. There are some [LogEntry fields](https://cloud.google.com/logging/docs/structured-logging) that can be overwritten by fields in our JSON output, including `severity`. Until now we had been logging the severity level as `levelname`, which is the expectation of `jsonlogger`, but this means GCP's levels and ours do not necessarily match. This adds another `severity` field to the logs so GCP can pick up the level. This should get rid of a swath of non-error log messages written to `stderr` (only JSON though) and lets other levels like `WARNING` get marked as such. GCP does quite literally extract the severity field though, so it does not appear in the `jsonPayload`. I've kept the `levelname` in then as a sanity check but am also happy to try to remove it.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9910:634,message,messages,634,https://hail.is,https://github.com/hail-is/hail/pull/9910,1,['message'],['messages']
Integrability,"GI/MGI (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1547"">#1547</a>)</p>; <p>Misc Improvements; f461401e3 Silence AsciiLineReader warning when creating a FASTA sequence index (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1559"">#1559</a>); 8f82871c1 Update explain samflags script to python3 (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1585"">#1585</a>); 4ba4c0678 Update to new version of the snappy library which will work with M1 macs (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1580"">#1580</a>); e92706452 add predicate to GFF3Codec to give a chance to filter out some unused attributes (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1575"">#1575</a>); c647764b0 Some long reads tests using PacBio data. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1564"">#1564</a>); 57c3f03eb remove hardcoded .idx (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1568"">#1568</a>); a94a32512 Add file extension to missing index error message <a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1512"">#1512</a> (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1567"">#1567</a>); 74b827b67 Improve error message in IntervalTree (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1545"">#1545</a>); 7719274fe Htsget POST request support (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1529"">#1529</a>)</p>; <p>VCF:; aac46ee6d Added GVCF mode for VariantContext type determination (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1544"">#1544</a>); d72d73b01 Add context to exception when the vcf file is invalid <a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1565"">#1565</a> (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1566"">#1566</a>); 8466c82dc Respect genotype filtering wh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12229:4673,depend,dependabot,4673,https://hail.is,https://github.com/hail-is/hail/pull/12229,1,['depend'],['dependabot']
Integrability,"G] Select widget hiding tabs, when selecting a plot</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/10125"">#10125</a> [component: bokehjs] [BUG] widgets overlap each other</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/10183"">#10183</a> [component: server] [BUG] Processing of HTTP request arguments (server_document) and num-procs &gt; 1</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/10355"">#10355</a> [component: bokehjs] [BUG] Toolbar cropped when using tabbed auto-width</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/10377"">#10377</a> [component: docs] Documentation examples produce inconsistently named output files</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/10621"">#10621</a> [component: bokehjs] [BUG] [MINOR] 2.3.0dev3, plot's inner_width property always sent on redraw even if unchanged</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/10804"">#10804</a> [BUG] export does not respect current theme</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11033"">#11033</a> [component: bokehjs] [BUG] add_layout(LinearAxis) in click handler crashes client</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11116"">#11116</a> [component: bokehjs] [BUG] ColorBars do not update when their properties are updated</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11205"">#11205</a> [component: bokehjs] [BUG] Hover tooltip breaks with full-circle wedge</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11339"">#11339</a> [BUG] Toggling layout's visibility results with overlapping widgets</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11462"">#11462</a> [component: bokehjs] [BUG] Existing ColorBar tick-digits don't react to theme changes</li>; <li><a href=""https://github-redirect.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12454:5309,depend,dependabot,5309,https://hail.is,https://github.com/hail-is/hail/pull/12454,1,['depend'],['dependabot']
Integrability,"Gah, OK, I think I have it now, but there was one more detail:. The gradle configuration `testCompileOnly` [1] *does not* inherit from the `shadow` configuration (as evidence see [this search](https://github.com/search?q=repo%3Ajohnrengelman%2Fshadow%20extendsFrom&type=code) of the shadow repo). We must explicitly request that `shadow` dependencies are included in the compile-time class path of the tests. This is as it should be: the things in `shadow` are things which are provided to us by our runtime environment. That's true of both the *test* runtime environment and the normal runtime environment. The Gradle Shadow plugin takes a different perspective by default, it suggests that `shadow` dependencies shouldn't be used in the tests at all. [1] NB: `testCompile` does not exist but you don't get an error if you try to use it, thanks for nothing gradle.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13551#issuecomment-1710414563:338,depend,dependencies,338,https://hail.is,https://github.com/hail-is/hail/pull/13551#issuecomment-1710414563,2,['depend'],['dependencies']
Integrability,"Gateway receives the user IP (thanks to #8045). However, gateway is an HTTP; proxy, so packets from gateway necessarily come from gateway's IP. Gateway; places the user IP into the HTTP header `X-Real-IP`. All downstream servers; must: log `X-Real-IP` and forward `X-Real-IP` unadulterated. This PR makes that; change for `router`. - fix router Makefile (`domain` is now in `global`); - add `proxy.conf` which configures the standard proxy headers (importantly:; forwards `X-REAL-IP`); - for non-notebook servers, `include` the `proxy.conf`; - for notebook, update to include proxy headers; - override default `access_log` (which required checking in the default; `nginx.conf`); - lift other `http` directives into `nginx.conf` now that it is checked in",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8058:323,rout,router,323,https://hail.is,https://github.com/hail-is/hail/pull/8058,2,['rout'],['router']
Integrability,Gateway to router,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5873:11,rout,router,11,https://hail.is,https://github.com/hail-is/hail/pull/5873,1,['rout'],['router']
Integrability,Genome dependent constructors in func registry,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2373:7,depend,dependent,7,https://hail.is,https://github.com/hail-is/hail/pull/2373,1,['depend'],['dependent']
Integrability,"Getting a sporadic task failure, with the error:; ```; ExecutorLostFailure (executor 99 exited caused by one of the running tasks) Reason: Container marked as failed: container_1519994715701_0003_01_000102 on host: exomes-sw-pxt3.c.broad-mpg-gnomad.internal. Exit status: 134. Diagnostics: Exception from container-launch.; Container id: container_1519994715701_0003_01_000102; Exit code: 134; Exception message: /bin/bash: line 1: 6739 Aborted /usr/lib/jvm/java-8-openjdk-amd64/bin/java -server -Xmx11171m '-Xss4M' -Djava.io.tmpdir=/hadoop/yarn/nm-local-dir/usercache/root/appcache/application_1519994715701_0003/container_1519994715701_0003_01_000102/tmp '-Dspark.driver.port=41843' '-Dspark.rpc.message.maxSize=512' -Dspark.yarn.app.container.log.dir=/var/log/hadoop-yarn/userlogs/application_1519994715701_0003/container_1519994715701_0003_01_000102 -XX:OnOutOfMemoryError='kill %p' org.apache.spark.executor.CoarseGrainedExecutorBackend --driver-url spark://CoarseGrainedScheduler@10.128.0.4:41843 --executor-id 99 --hostname exomes-sw-pxt3.c.broad-mpg-gnomad.internal --cores 4 --app-id application_1519994715701_0003 --user-class-path file:/hadoop/yarn/nm-local-dir/usercache/root/appcache/application_1519994715701_0003/container_1519994715701_0003_01_000102/__app__.jar --user-class-path file:/hadoop/yarn/nm-local-dir/usercache/root/appcache/application_1519994715701_0003/container_1519994715701_0003_01_000102/hail.jar > /var/log/hadoop-yarn/userlogs/application_1519994715701_0003/container_1519994715701_0003_01_000102/stdout 2> /var/log/hadoop-yarn/userlogs/application_1519994715701_0003/container_1519994715701_0003_01_000102/stderr. Stack trace: ExitCodeException exitCode=134: /bin/bash: line 1: 6739 Aborted /usr/lib/jvm/java-8-openjdk-amd64/bin/java -server -Xmx11171m '-Xss4M' -Djava.io.tmpdir=/hadoop/yarn/nm-local-dir/usercache/root/appcache/application_1519994715701_0003/container_1519994715701_0003_01_000102/tmp '-Dspark.driver.port=41843' '-Dspark.rpc.message.maxSize=512'",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3053:404,message,message,404,https://hail.is,https://github.com/hail-is/hail/issues/3053,2,['message'],['message']
Integrability,Ghost does not respect the `X-Forwarded` headers. It should not have a `url` parameter but a `pathPrefix` and the protocol should be set from `X-Forwarded-Proto`. Thanks to this design bug we cannot test connectivity to the blog in PRs until the internal gateway is configured to use TLS. I'll revisit this PR when that happens.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8117#issuecomment-589741905:114,protocol,protocol,114,https://hail.is,https://github.com/hail-is/hail/pull/8117#issuecomment-589741905,1,['protocol'],['protocol']
Integrability,Git has special support for coauthors in the commit message https://docs.github.com/en/pull-requests/committing-changes-to-your-project/creating-and-editing-commits/creating-a-commit-with-multiple-authors,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11750#issuecomment-1104096542:52,message,message,52,https://hail.is,https://github.com/hail-is/hail/pull/11750#issuecomment-1104096542,1,['message'],['message']
Integrability,"Given the breaking changes to interface, I'll make a discuss post and alert in various channels when merging. @liameabbott this may significantly improve performance when you pass a field as `x` in regression. I'll follow up directly.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3289#issuecomment-378452971:30,interface,interface,30,https://hail.is,https://github.com/hail-is/hail/pull/3289#issuecomment-378452971,1,['interface'],['interface']
Integrability,Going the small PRs route.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3301#issuecomment-379276463:20,rout,route,20,https://hail.is,https://github.com/hail-is/hail/pull/3301#issuecomment-379276463,1,['rout'],['route']
Integrability,"Going to close this since we no longer have Command Line interface and Hail has changed considerably. If you still have problems @lv-xy11 , please chat with us on Gitter here https://gitter.im/hail-is/hail",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/683#issuecomment-296671361:57,interface,interface,57,https://hail.is,https://github.com/hail-is/hail/issues/683#issuecomment-296671361,1,['interface'],['interface']
Integrability,"Good catch on the dependency issue, that should be fixed now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14138#issuecomment-1889786055:18,depend,dependency,18,https://hail.is,https://github.com/hail-is/hail/pull/14138#issuecomment-1889786055,1,['depend'],['dependency']
Integrability,"Good point @johnc1231, it would be nice to have the same interface for `head`/`tail` on tables and arrays. Instead of adding `tail`, should we add `first`/`last` and deprecate `head`?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9474#issuecomment-694826372:57,interface,interface,57,https://hail.is,https://github.com/hail-is/hail/pull/9474#issuecomment-694826372,1,['interface'],['interface']
Integrability,Good point. In my branch I've written wrappers for the LAPACK methods that take SNDArrays and determine the leading dimension arguments. I can pull those into this PR and replace all the LAPACK calls with the wrappers.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10614#issuecomment-867766626:38,wrap,wrappers,38,https://hail.is,https://github.com/hail-is/hail/pull/10614#issuecomment-867766626,2,['wrap'],['wrappers']
Integrability,Good work hunting this down; these messages are always a pain to find.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10713#issuecomment-891277817:35,message,messages,35,https://hail.is,https://github.com/hail-is/hail/pull/10713#issuecomment-891277817,1,['message'],['messages']
Integrability,Google considers any message written to stderr as an error.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9845:21,message,message,21,https://hail.is,https://github.com/hail-is/hail/pull/9845,1,['message'],['message']
Integrability,Got it. +1 for a more specific error message if possible.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3760#issuecomment-397472784:37,message,message,37,https://hail.is,https://github.com/hail-is/hail/issues/3760#issuecomment-397472784,1,['message'],['message']
Integrability,"Got rid of @handle_py4j, as well, which removes our dependence on decorator 👍",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1552#issuecomment-287190661:52,depend,dependence,52,https://hail.is,https://github.com/hail-is/hail/pull/1552#issuecomment-287190661,1,['depend'],['dependence']
Integrability,"Got rid of copyStreamable, and set getNestedElementPTypesOfSameType to use concrete constructors as we discussed at lunch. The child ptypes (elementType, fields) are always cast to the interface, not the concrete class, since this is the correct behavior in our restriction hierarchy (upcast to canonical). This is obviously still not quite right (need to check whether anything canonical, not just head), but that's outside the scope of this pr.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8126#issuecomment-589390319:185,interface,interface,185,https://hail.is,https://github.com/hail-is/hail/pull/8126#issuecomment-589390319,1,['interface'],['interface']
Integrability,Got this error message:. [Stage 0:> (0 + 120) / 2941]hail: write: fatal: hdfs://dataflow01.broadinstitute.org:8020/user/aganna/DIABETES.vcf.bgz: caught java.lang.IllegalArgumentException: requirement failed; offending line: 1 23735206 var_1_23735206 C T 4044.57PASS AC=1;AF=1.971e-0… . which according to Tim can be improved (there is no separation between QUAL and INFO filed). My main point however is that for these malformed files we should be able to remove the malformed lines instead of just not allowing to import the .vcf. This might be an important vcf and cannot / or difficult to find a better version.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/361:15,message,message,15,https://hail.is,https://github.com/hail-is/hail/issues/361,1,['message'],['message']
Integrability,"Gotcha, thanks, the trouble with reading your reply on the go. I had assumed you contributed to both from your reply. Glad to hear you're taking aiohttp performance seriously. Regarding flow-control, yep, that pr was merged https://github.com/huge-success/sanic/pull/1179. I haven't seen any further conversations from you or Sanic devs on the issue.; * It's not just on master, it's in 0.8. Part of my concerns over Sanic came from reading your post @ https://www.reddit.com/r/Python/comments/876msl/sanic_python_web_server_thats_written_to_die_fast/ ; this now seems outdated, and it would be interesting to hear the reply of a Sanic contributor. Re: ""The last cherry: Sanic has super fast URL router because it caches matching results. The feature is extremely useful for getting awesome numbers with `wrk` tool but in real life URL paths for server usually not constant. URLs like `/users/{userid}` don't fit in cache well :)""; - Surely simple (typical-use, i.e /path or /path/<param>) pattern matching isn't a large performance constraint. I would be surprised if this were a bottleneck in either Sanic or aiohttp.; - If aiohttp is bottlenecked by this, and isn't caching matches, why not? The most common route is say /. Edit: To be clear, the bench mentioned above used 1 worker for Sanic and aiohttp, both using uvloop. Bench attached. [bench.zip](https://github.com/hail-is/hail/files/2841473/bench.zip)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5242#issuecomment-461455096:696,rout,router,696,https://hail.is,https://github.com/hail-is/hail/pull/5242#issuecomment-461455096,4,['rout'],"['route', 'router']"
Integrability,"Great question. The need for two clients is we have an asynchronous one that ci uses and a synchronous one that pipeline uses. The client code in `aioclient.py` is the asynchronous one and the code in `client.py` is for the synchronous one. Rather than duplicating the code as was done before, I either had to make the synchronous client use the asynchronous code or vice versa. It was easier to make the asynchronous code synchronous by using the `run_until_complete` function and wrapping calls to the asynchronous classes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6208#issuecomment-497540673:482,wrap,wrapping,482,https://hail.is,https://github.com/hail-is/hail/pull/6208#issuecomment-497540673,1,['wrap'],['wrapping']
Integrability,"Great! I think we are good on the client. I'll modify it later today to use the new scheme. Before we get into the nitty gritty of the actual implementation, can we move on to the UI components and the semantics of using the client in `test_batch.py`? There's also a change to how the batch fields `time_closed` and `time_created` are used. I also added `time_updated`. I think the new semantics are:. - time_created -- time the batch was created; - time_updated -- time the last update was committed; - time_completed -- time the last time n_completed == n_jobs regardless of whether there are outstanding updates that haven't been committed. For old batches:; - time_created => same; - time_closed => time_updated; - time_completed => same. I also changed what the batch state means:; > There are only two batch states in the database: running and complete. A batch starts out as complete until an update is committed at which point if the n_jobs > 0, it will change to running. There are no longer ""open"" batches. . It's possible I didn't actually implement exactly what I described above as I was having a hard time figuring out whether time_updated should be equal to time_completed if the batch has no outstanding jobs to run. That's why I'd like to take a step back and make sure we agree on the interface.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12010#issuecomment-1218125677:1303,interface,interface,1303,https://hail.is,https://github.com/hail-is/hail/pull/12010#issuecomment-1218125677,1,['interface'],['interface']
Integrability,Great! I think we should run the integration tests as part of `testAll` and kill the integration tests in the CI.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1827#issuecomment-302116530:33,integrat,integration,33,https://hail.is,https://github.com/hail-is/hail/pull/1827#issuecomment-302116530,2,['integrat'],['integration']
Integrability,"Great! I will test it out on our cluster. First, I have question on the; Spark version that is recommended. At the very top of the *Getting Started; with Python API*, the document indicates the latest version of Spark 2; should be used. But later on under the *Running on a Spark cluster and in; the cloud section,* it indicates only Spark 1.5 and 1.6 are supported.; Which version would be the best to use? Or does it really depend on whether; it is run locally or on a cluster?. On Thu, Jan 12, 2017 at 11:21 PM, cseed <notifications@github.com> wrote:. > We now have a Getting Started the python API:; >; > https://hail.is/pyhail/getting_started.html; >; > Please give it a spin and let us know if you run into any problems. The; > documentation for the python API is nearly complete, but the Tutorial and; > General Reference section are still being ported to python and will need; > another week or so. Thanks for your patience!; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/hail-is/hail/issues/1218#issuecomment-272357689>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AB3rDZjYATb82CmTNeP61RpKxMCFMhInks5rRvvYgaJpZM4La8Pf>; > .; >. -- ; John Farrell, Ph.D.; Biomedical Genetics-Evans 218; Boston University Medical School; 72 East Concord Street; Boston, MA. ph: 617-638-5491",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1218#issuecomment-272494749:426,depend,depend,426,https://hail.is,https://github.com/hail-is/hail/issues/1218#issuecomment-272494749,1,['depend'],['depend']
Integrability,"Grr. I realized that our build.yaml `build_hail` step did not explicitly depend on setting up the python package correctly, it just relied on `make jars` doing that as a side effect. I've added an explicit rule for setting up the version files and I call it in build.yaml. The better answer is to change build.yaml to ship around a wheel file. I don't want to do this right now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6923#issuecomment-524017142:73,depend,depend,73,https://hail.is,https://github.com/hail-is/hail/pull/6923#issuecomment-524017142,1,['depend'],['depend']
Integrability,"HANGELOG.md"">plotly's changelog</a>.</em></p>; <blockquote>; <h2>[5.6.0] - 2022-02-09</h2>; <h3>Updated</h3>; <ul>; <li>Updated Plotly.js to from version 2.8.3 to version 2.9.0. See the <a href=""https://github.com/plotly/plotly.js/blob/master/CHANGELOG.md#290----2022-02-04"">plotly.js CHANGELOG</a> for more information. Notable changes include:; <ul>; <li>Implement <code>ticklabelstep</code> to reduce labels on cartesian axes and colorbars</li>; <li>Display the version of plotly.js when hovering over the modebar</li>; </ul>; </li>; </ul>; <h2>[5.5.0] - 2021-12-20</h2>; <h3>Added</h3>; <ul>; <li><code>text_auto</code> argument to <code>px.bar</code>, <code>px.histogram</code>, <code>px.density_heatmap</code>, <code>px.imshow</code> <a href=""https://github-redirect.dependabot.com/plotly/plotly.py/issues/3518"">#3518</a></li>; <li>Deprecated <code>ff.create_annotated_heatmap</code>, <code>ff.create_county_choropleth</code>, <code>ff.create_gantt</code> <a href=""https://github-redirect.dependabot.com/plotly/plotly.py/issues/3518"">#3518</a></li>; <li><code>div_id</code> argument to <code>pio.to_html</code>, <code>pio.write_html</code>, <code>fig.to_html</code> and <code>fig.write_html</code> to optionally make its IDs deterministic <a href=""https://github-redirect.dependabot.com/plotly/plotly.py/issues/3487"">#3487</a> with thanks to <a href=""https://github.com/Skn0tt""><code>@​Skn0tt</code></a></li>; </ul>; <h3>Fixed</h3>; <ul>; <li>Fixed ValueError when <code>ff.create_annotated_heatmap</code> passes <code>rgba()</code> colors into <code>to_rgb_color_list</code> <a href=""https://github-redirect.dependabot.com/plotly/plotly.py/issues/3478"">#3478</a> with thanks to <a href=""https://github.com/janosh""><code>@​janosh</code></a></li>; </ul>; <h3>Updated</h3>; <ul>; <li>Updated Plotly.js to from version 2.6.3 to version 2.8.3. See the <a href=""https://github.com/plotly/plotly.js/blob/master/CHANGELOG.md#280----2021-12-10"">plotly.js CHANGELOG</a> for more information. Notable chan",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11535:1882,depend,dependabot,1882,https://hail.is,https://github.com/hail-is/hail/pull/11535,1,['depend'],['dependabot']
Integrability,"HISTORY.rst add hyperlinks pointing to psutil API doc (<a href=""https://github-redirect.dependabot.com/giampaolo/psutil/issues/2042"">#2042</a>)</li>; <li><a href=""https://github.com/giampaolo/psutil/commit/a7165b5c02670cb7c4886425dd3911dd1b1116a6""><code>a7165b5</code></a> add sponsorhips / supporters <a href=""https://github.com/indeedeng""><code>@​indeedeng</code></a> and <a href=""https://github.com/PySimpleGUI""><code>@​PySimpleGUI</code></a>; thanks a lot! ;)</li>; <li><a href=""https://github.com/giampaolo/psutil/commit/ff2f4d4c4986bffbc5348a197396e11bef057346""><code>ff2f4d4</code></a> assert scripts have +x bit</li>; <li><a href=""https://github.com/giampaolo/psutil/commit/ebbaae8d1f42f051282af79d60f19cb1161088a5""><code>ebbaae8</code></a> git pre commit hook: use shlex.split()</li>; <li><a href=""https://github.com/giampaolo/psutil/commit/39dc44bfa5fbb9500166b3480295379602e5bbc5""><code>39dc44b</code></a> Automatically sort imports (isort CLI tool) (<a href=""https://github-redirect.dependabot.com/giampaolo/psutil/issues/2033"">#2033</a>)</li>; <li><a href=""https://github.com/giampaolo/psutil/commit/b490b5d51af6ed29709c357a00fcdb6bda26df78""><code>b490b5d</code></a> fix missing arg passed to C psutil_debug()</li>; <li><a href=""https://github.com/giampaolo/psutil/commit/eb2f74c153987b4e0d03aa16931d97e8137d9257""><code>eb2f74c</code></a> Fix CI tests / wheels / workflow (<a href=""https://github-redirect.dependabot.com/giampaolo/psutil/issues/2024"">#2024</a>)</li>; <li><a href=""https://github.com/giampaolo/psutil/commit/a1ae994cabff37eb86c6ca4564b4f193a73a7b0d""><code>a1ae994</code></a> fix <a href=""https://github-redirect.dependabot.com/giampaolo/psutil/issues/2023"">#2023</a> [Linux] cpu_freq() return order is wrong on systems with &gt; 9 CPUs.</li>; <li><a href=""https://github.com/giampaolo/psutil/commit/875d2195fc8efa642c7bca714d468551d1805c6c""><code>875d219</code></a> Handle missing dependencies on MidnightBSD (<a href=""https://github-redirect.dependabot.com/giampaolo/psut",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11459:5030,depend,dependabot,5030,https://hail.is,https://github.com/hail-is/hail/pull/11459,1,['depend'],['dependabot']
Integrability,"HTTP/1.1"", ""response_status"": 200, ""response_size"": 279, ""request_header"": {""Referer"": ""-"", ""User-Agent"": ""Python/3.6 aiohttp/3.5.4""}}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,991"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1145"", ""message"": ""update job (9, 1, 'main') with pod batch-9-job-1-c8b9b2""}; ```. Recall that pod creation happens in the background, so the `batches/9/create` and `batches/9/close` endpoints return to the client before pods are necessarily created. See batch.py:866, `Batch.close`. Likewise, the `batches/9/cancel` endpoint returns before the individual jobs are cancelled. There are now at most three concurrent threads of control interacting with the database and k8s. Eventually this sequence of log messages appears three times in quick succession. ```; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:39,890"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1145"", ""message"": ""update job (9, 1, 'main') with pod batch-9-job-1-c8b9b2""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:39,890"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1159"", ""message"": ""job (9, 1, 'main') mark complete""}; {""levelname"": ""WARNING"", ""asctime"": ""2019-07-11 14:19:39,899"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""mark_complete:579"", ""message"": ""job (9, 1, 'main') has pod batch-9-job-1-c8b9b2 which is terminated but has no timing information. {'api_version': 'v1',\n 'kind': 'Pod',\n 'metadata': {'annotations': None,\n 'cluster_name': None,\n 'creation_timestamp': datetime.datetime(2019, 7, 11, 14, 19, 34, tzinfo=tzlocal()),\n 'deletion_grace_period_seconds': 30,\n 'deletion_timestamp': datetime.datetime(2019, 7, 11, 14, 20, 4, tzinfo=tzlocal()),\n 'finalizers': None,\n 'generate_name': None,\n 'generation': None,\n 'initializers': None,\n 'labels': {'app': 'batch-job',\n 'batch_id': '9',\n 'hail.is/batch-instance': 'ffa5abc4607849df8e5f0036e7350bcf',\n 'job_id': '1',\n 'task': 'main',\n 'user'",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6617:5238,message,message,5238,https://hail.is,https://github.com/hail-is/hail/issues/6617,1,['message'],['message']
Integrability,"Ha, no, was just curious as to where the interface settled. Not a show-stopper for me at the moment (though I'd probably use it later this week)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4004#issuecomment-408987889:41,interface,interface,41,https://hail.is,https://github.com/hail-is/hail/pull/4004#issuecomment-408987889,1,['interface'],['interface']
Integrability,"Ha, you THINK this would work dependabot… you've never sparred with spark",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12450#issuecomment-1310869486:30,depend,dependabot,30,https://hail.is,https://github.com/hail-is/hail/pull/12450#issuecomment-1310869486,1,['depend'],['dependabot']
Integrability,"Had an idea about an easier way to fix this: don't support open terms in interpret, compile, etc., and then wrap the open term in an ArrayAgg to make it closed.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5772#issuecomment-480308468:108,wrap,wrap,108,https://hail.is,https://github.com/hail-is/hail/pull/5772#issuecomment-480308468,1,['wrap'],['wrap']
Integrability,"Hail depends on the `decorator` module, and in this case it looks like you've got it but it's out of date. The following should fix it:. ```bash; pip install -U decorator; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1818#issuecomment-302064968:5,depend,depends,5,https://hail.is,https://github.com/hail-is/hail/issues/1818#issuecomment-302064968,1,['depend'],['depends']
Integrability,Hail doctests should not depend on random data,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7030:25,depend,depend,25,https://hail.is,https://github.com/hail-is/hail/issues/7030,1,['depend'],['depend']
Integrability,"Hail does not support heterogeneous arrays: found list with elements of types [dtype('int32'), dtype('str')] . The above exception was the direct cause of the following exception:. Traceback (most recent call last):; File ""/home/edmund/.local/src/hail/hail/python/hail/typecheck/check.py"", line 584, in arg_check; return checker.check(arg, function_name, arg_name); File ""/home/edmund/.local/src/hail/hail/python/hail/expr/expressions/expression_typecheck.py"", line 80, in check; raise TypecheckFailure from e; hail.typecheck.check.TypecheckFailure. The above exception was the direct cause of the following exception:. Traceback (most recent call last):; File ""/home/edmund/.pyenv/versions/3.8.16/lib/python3.8/runpy.py"", line 194, in _run_module_as_main; return _run_code(code, main_globals, None,; File ""/home/edmund/.pyenv/versions/3.8.16/lib/python3.8/runpy.py"", line 87, in _run_code; exec(code, run_globals); File ""/home/edmund/.vscode/extensions/ms-python.python-2023.10.1/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher/../../debugpy/__main__.py"", line 39, in <module>; cli.main(); File ""/home/edmund/.vscode/extensions/ms-python.python-2023.10.1/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher/../../debugpy/../debugpy/server/cli.py"", line 430, in main; run(); File ""/home/edmund/.vscode/extensions/ms-python.python-2023.10.1/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher/../../debugpy/../debugpy/server/cli.py"", line 284, in run_file; runpy.run_path(target, run_name=""__main__""); File ""/home/edmund/.vscode/extensions/ms-python.python-2023.10.1/pythonFiles/lib/python/debugpy/_vendored/pydevd/_pydevd_bundle/pydevd_runpy.py"", line 321, in run_path; return _run_module_code(code, init_globals, run_name,; File ""/home/edmund/.vscode/extensions/ms-python.python-2023.10.1/pythonFiles/lib/python/debugpy/_vendored/pydevd/_pydevd_bundle/pydevd_runpy.py"", line 135, in _run_module_code; _run_code(code, mod_globals, init_globals,; File ""/home/edmund/.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13046#issuecomment-1624278982:3044,adapter,adapter,3044,https://hail.is,https://github.com/hail-is/hail/issues/13046#issuecomment-1624278982,1,['adapter'],['adapter']
Integrability,"Hail fails when trying to filter a MatrixTable based on locus position; -----------------------------------------------------------------------------; To reproduce; ```python; import hail as hl; mt = hl.import_vcf(""http://hgdownload.cse.ucsc.edu/gbdb/hg19/1000Genomes/phase3/ALL.chrY.phase3_integrated_v1a.20130502.genotypes.vcf.gz"", force_bgz=True); ----------------------------------------------------------------------; Initializing Hail with default parameters...; 2022-10-06 15:56:03 WARN Utils:69 - Your hostname, nid resolves to a loopback address: 127.0.1.1; using 192.168.248.80 instead (on interface wlp0s20f3); 2022-10-06 15:56:03 WARN Utils:69 - Set SPARK_LOCAL_IP if you need to bind to another address; WARNING: An illegal reflective access operation has occurred; WARNING: Illegal reflective access by org.apache.spark.unsafe.Platform (file:/home/med/.local/lib/python3.8/site-packages/pyspark/jars/spark-unsafe_2.12-3.1.3.jar) to constructor java.nio.DirectByteBuffer(long,int); WARNING: Please consider reporting this to the maintainers of org.apache.spark.unsafe.Platform; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations; WARNING: All illegal access operations will be denied in a future release; 2022-10-06 15:56:03 WARN NativeCodeLoader:60 - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; Running on Apache Spark version 3.1.3; SparkUI available at http://192.168.248.80:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.100-2ea2615a797a; LOGGING: writing to /; --------------------------------------------------------------------------; mt.filter_rows(mt.locus.position==2867101).count_rows(); ```; ### Expected ; Return a count of rows with that condition. ### Error ; ```; FatalError: Assertio",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12280:600,interface,interface,600,https://hail.is,https://github.com/hail-is/hail/issues/12280,1,['interface'],['interface']
Integrability,Hail improve error message for pip,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7081:19,message,message,19,https://hail.is,https://github.com/hail-is/hail/pull/7081,1,['message'],['message']
Integrability,"Hail seems to always use the first reference genome that is used within an operation. Using this example file:; ```; contig_38	pos_38	contig_37	pos_37; chr1	10000	1	10000; ```. ---. The following code; ```; ds = hl.import_table(""test.tsv"", types={""pos_38"": hl.tint, ""pos_37"": hl.tint}); ds = ds.annotate(locus_37=hl.locus(ds.contig_37, ds.pos_37, reference_genome=""GRCh37"")); ds = ds.annotate(locus_38=hl.locus(ds.contig_38, ds.pos_38, reference_genome=""GRCh38"")); ds.show(); ```; Fails with ""HailException: Invalid locus 'chr1:10000' found. Contig 'chr1' is not in the reference genome 'GRCh37'."". ---. Reversing the order of those annotations changes the error message.; ```python; ds = hl.import_table(""test.tsv"", types={""pos_38"": hl.tint, ""pos_37"": hl.tint}); ds = ds.annotate(locus_38=hl.locus(ds.contig_38, ds.pos_38, reference_genome=""GRCh38"")); ds = ds.annotate(locus_37=hl.locus(ds.contig_37, ds.pos_37, reference_genome=""GRCh37"")); ds.show(); ```; Fails with ""HailException: Invalid locus '1:10000' found. Contig '1' is not in the reference genome 'GRCh38'."". ---. And it works with a `cache` in between the annotations.; ```python; ds = hl.import_table(""test.tsv"", types={""pos_38"": hl.tint, ""pos_37"": hl.tint}); ds = ds.annotate(locus_37=hl.locus(ds.contig_37, ds.pos_37, reference_genome=""GRCh37"")); ds = ds.cache(); ds = ds.annotate(locus_38=hl.locus(ds.contig_38, ds.pos_38, reference_genome=""GRCh38"")); ds.show(); ```. outputs; ```; +-----------+--------+-----------+--------+---------------+---------------+; | contig_38 | pos_38 | contig_37 | pos_37 | locus_37 | locus_38 |; +-----------+--------+-----------+--------+---------------+---------------+; | str | int32 | str | int32 | locus<GRCh37> | locus<GRCh38> |; +-----------+--------+-----------+--------+---------------+---------------+; | ""chr1"" | 10000 | ""1"" | 10000 | 1:10000 | chr1:10000 |; +-----------+--------+-----------+--------+---------------+---------------+; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7063:663,message,message,663,https://hail.is,https://github.com/hail-is/hail/issues/7063,1,['message'],['message']
Integrability,Hail should not depend on bioconductor,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4439:16,depend,depend,16,https://hail.is,https://github.com/hail-is/hail/issues/4439,1,['depend'],['depend']
Integrability,Hail should produce a legible error message when reading an out-of-date VDS,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2159:36,message,message,36,https://hail.is,https://github.com/hail-is/hail/issues/2159,1,['message'],['message']
Integrability,"Hail strives to be deterministic wrt a seed, but partitioning can interfere with this. As such, the doctests should not depend on data that is randomly generated at doctest time. Instead, we should randomly generate data once and store it in a checked-in file.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7030:120,depend,depend,120,https://hail.is,https://github.com/hail-is/hail/issues/7030,1,['depend'],['depend']
Integrability,Hail throws a confusing error message on a weird CSV,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5222:30,message,message,30,https://hail.is,https://github.com/hail-is/hail/issues/5222,1,['message'],['message']
Integrability,"Hail tries to do a lot of data integrity checks and warn the user about problems. We've found a number of bugs in upstream tools and workflows that were arguably incorrect. But generating warnings when importing a 2TB file is a challenge in Spark. Right now we use Spark's Accumulators to accumulate classes of error messages and write them out at the end of the pipeline run (see the VCFReport object). However, we use them in non-actions and get incorrect reports (due to job restarts or reused stages in the pipeline). I have an idea about how to fix this by accumulating only at the end of a successful mapPartitions operation and recording the stageId and taskAttemptId from the TaskContext. The accumulator should only accumulate one of the reports from a successful mapPartitions. Using this, I wanted to build an abstraction for reporting warnings and other messages reliably on large import steps. If this works, we plan to float it up to the Spark mailing list to see if it can be of use, or at least write a nice blog post explaining how to get reliable accumulators in Spark. See the discussion here for the current situation:. http://stackoverflow.com/questions/29494452/when-are-accumulators-truly-reliable. Closed as won't fix:. https://issues.apache.org/jira/browse/SPARK-732. Of course, I might be missing something obvious and this won't work.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/371#issuecomment-240550289:317,message,messages,317,https://hail.is,https://github.com/hail-is/hail/issues/371#issuecomment-240550289,2,['message'],['messages']
Integrability,Hail2 python interface makes this a lot more consistent,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1509#issuecomment-349717645:13,interface,interface,13,https://hail.is,https://github.com/hail-is/hail/issues/1509#issuecomment-349717645,1,['interface'],['interface']
Integrability,"Hail2 python interface makes this impossible, so no longer worrying about.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/634#issuecomment-349719025:13,interface,interface,13,https://hail.is,https://github.com/hail-is/hail/issues/634#issuecomment-349719025,1,['interface'],['interface']
Integrability,"HailContext initialization overrides any existing log4j configuration, which can lead to the logs ending up in an unexpected location. This PR adds an option to HailContext initialization to skip this configuration step. I also included two unrelated changes to this PR:; - Not bundling the transitive dependencies for `com.indeed:lsmtree-core:1.0.7`, which don't seem to be needed and can lead to classpath conflicts.; - Allowing the `quiet` option during initialization to silence the warning issued when initializing with pip-installed Hail.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8571:302,depend,dependencies,302,https://hail.is,https://github.com/hail-is/hail/pull/8571,1,['depend'],['dependencies']
Integrability,"HailException and LowererUnsupportedOperation get returned as 400 with the error message,; other exceptions as 500 with stack trace. Also, some docker fixes. @jigold, I think this might explain why deploying from your computer is so slow. Docker includes the file permissions in the metadata when checking the image cache. The CI uses umask 022 (group not writable). I changed up my computer, and noticed everything was being rebuilt from scratch (requiring me to push massive images). I added some checks in docker/Makefile that the expectations for the image. I couldn't find a way to fix this globally. If the checks trigger, I think the solution is to set your umask to 022 going forward and chmod -R g-w your Hail source tree.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8636:81,message,message,81,https://hail.is,https://github.com/hail-is/hail/pull/8636,1,['message'],['message']
Integrability,"Half finished. SQL is probably wrong. Need to integrate the job filtering with the parameters into the api calls, write tests, integrate with batch_client. I'm sure there's more to do.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6607:46,integrat,integrate,46,https://hail.is,https://github.com/hail-is/hail/pull/6607,2,['integrat'],['integrate']
Integrability,"Hand deployed (currently running). Only visible change is to router, add proxy rules from ukbb-hail.is to the ukbb-rg servers. The web site has two parts: static HTML served by nginx and a interactive, data-driven Shiny site run by R/shiny/shiny server. Servers run as stateful sets. Static HTML and ; data for Shiny were hand-populated. Currently giving them each one core. Given how much state is involved here, it's not clear how to autoscale this like we do with the other services.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6573:61,rout,router,61,https://hail.is,https://github.com/hail-is/hail/pull/6573,1,['rout'],['router']
Integrability,"Hello, I am having similar problems. I installed using conda according to https://hail.is/docs/0.2/getting_started.html#requirements ; I created the environment, activated it and installed with pip. When I try to load a vcf file, I am getting:; ` hl.import_vcf('/Volumes/Macintosh HD2/data/thousands_genome/hector.Q15d5.vcf.gz')`; `py4j.protocol.Py4JJavaError: An error occurred while calling z:is.hail.HailContext.apply.; : is.hail.utils.HailException: Hail requires Java 8, found 12.0.1`; Any help? Best, Zillur",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6299#issuecomment-515502374:337,protocol,protocol,337,https://hail.is,https://github.com/hail-is/hail/issues/6299#issuecomment-515502374,1,['protocol'],['protocol']
Integrability,"Here's a link with an absolute time window: https://cloudlogging.app.goo.gl/gXAWZpZtUiV8jphXA. This is the assertion's stack trace:; ```; at scala.Predef$.assert(Predef.scala:208); at is.hail.QoBOutputStreamManager.createOutputStream(QoBAppender.scala:38); at org.apache.logging.log4j.core.appender.OutputStreamManager.getOutputStream(OutputStreamManager.java:165); at org.apache.logging.log4j.core.appender.OutputStreamManager.writeToDestination(OutputStreamManager.java:250); at org.apache.logging.log4j.core.appender.OutputStreamManager.flushBuffer(OutputStreamManager.java:283); at org.apache.logging.log4j.core.appender.OutputStreamManager.flush(OutputStreamManager.java:294); at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:217); at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:208); at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:199); at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:161); ```. And the line of our code that triggers the logger appender:; ```; is.hail.JVMEntryway$2.run(JVMEntryway.java:139); ```. On that line, we should have already evaluated line 97:; ```; QoBOutputStreamManager.changeFileInAllAppenders(logFile);; ```; Which updates the filename for all `QoBOutputStreamManager`s. We should be the only ones allocating `QoBOutputStreamManager` (it has no magic annotations, we don't pass its constructor anywhere). We should only allocate `QoBOutputStreamManager` in its associated object. We always put it into the map in `getInstance`. We don't synchronize the other methods though, so that could be the issue? If we have a stale version of that map?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13242#issuecomment-1703383030:1728,synchroniz,synchronize,1728,https://hail.is,https://github.com/hail-is/hail/issues/13242#issuecomment-1703383030,1,['synchroniz'],['synchronize']
Integrability,"Here's my proposed interface (names to be changed, I'm terrible at those). ```; case class WithSource[T](value: T, source: InputSource) {; def map[U](f: T => U): WithSource[U] = {; try {; copy[U](value = f(value)); } catch {; case e: Exception => source.wrapError(e); }; }; }. abstract class InputSource {; def wrapError(e: Exception): Nothing; }. case class TextSource(line: String, file: String, position: Option[Int]) extends InputSource {; def wrapError(e: Exception): Nothing = {; val msg = e match {; case _: FatalException => e.getMessage; case _ => s""caught $e""; }; val lineToPrint =; if (line.length > 62); line.take(59) + ""...""; else; line. log.error(; s""""""; |$file${position.map(ln => "":"" + (ln + 1)).getOrElse("""")}: $msg; | offending line: $line"""""".stripMargin); fatal(; s""""""; |$file${position.map(ln => "":"" + (ln + 1)).getOrElse("""")}: $msg; | offending line: $lineToPrint"""""".stripMargin); }; }; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/462#issuecomment-233012302:19,interface,interface,19,https://hail.is,https://github.com/hail-is/hail/pull/462#issuecomment-233012302,4,"['interface', 'wrap']","['interface', 'wrapError']"
Integrability,Here's what I have now. Higher-level feedback appreciated. Note there are 4 hidden methods to convert between old interface and new. `VariantDataset._to_new_variant_dataset`; `NewVariantDataset._to_old_variant_dataset`; `KeyTable._to_new_keytable`; `NewKeyTable._to_old_keytable`,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2244:114,interface,interface,114,https://hail.is,https://github.com/hail-is/hail/pull/2244,1,['interface'],['interface']
Integrability,"Hey @alanmejiamaza, could you reply to my message above? I can't replicate the issue without more information.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12717#issuecomment-1458661804:42,message,message,42,https://hail.is,https://github.com/hail-is/hail/issues/12717#issuecomment-1458661804,1,['message'],['message']
Integrability,"Hey @anh151 !. I'm sorry you're having trouble with Hail. The message ""Container killed on request. Exit code is 137"" comes from Apache Spark, our underlying distributed compute framework. It indicates that the worker machines have insufficient RAM. In general, using worker machines with higher RAM-to-core ratios will help. If you're on GCP, try the n1-highmem family. Some other suggestions:. 1. Hail is a ""lazy"" system. Your entire pipeline is executed, from the beginning, when you run ""export"" or ""write"". That means that Hail has to do all of that work at once. You can ease the memory pressure by performing less operations at once, by writing an intermediate file (and reading back in and proceeding with it).; 2. We recommend against directly exporting from a complex operation (like group-by-aggregate). Instead, grab the cols table and write it to Hail's fast, binary, parallel format: `.cols().select('field_of_interest').write('my-cols.ht')`. Then read that table and export that: `hl.read_table('my-cols.ht').field_of_interest.export(...)`. Exporting to a text file requires more memory because we have to construct ASCII strings.; 3. Always use a compressed export: `.export('foo.tsv.bgz')` or `hl.export_vcf(..., 'foo.vcf.bgz')`. This won't help your memory problem, but you can avoid parsing strings to create loci by constructing an `hl.Locus` which is the Python-side representation of loci (`hl.locus` is the inside-Hail representation):; ```python3; def create_intervals(data):; return [; hl.Locus(chromosome, start, reference_genome=""GRCh38""); for i, (chromosome, start) in data[[""CHROM"", ""POS""]].iterrows(); ]; ```. Please reply here if you're still having problems after incorporating the above suggestions as it may indicate a more fundamental issue with Hail.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13287#issuecomment-1674035485:62,message,message,62,https://hail.is,https://github.com/hail-is/hail/issues/13287#issuecomment-1674035485,1,['message'],['message']
Integrability,"Hey @cosi1!. We are actively moving away from Scala and the JVM. We don't plan to support a JVM interface to Hail. As a result, I think. the answer to this issue is that this is a known limitation.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/10882#issuecomment-1145240358:96,interface,interface,96,https://hail.is,https://github.com/hail-is/hail/issues/10882#issuecomment-1145240358,1,['interface'],['interface']
Integrability,"Hey @illusional ! Sorry for the massive latency. OK, so, big apologies are in order, I totally lead you astray by mentioning the makefile. The Makefile *is* the source of hail version truth, but invoking the makefile inside an image build step feels wrong to me. Each step creates a layer which inflates the image sizes. Hail's images are already too big!. I took your commits and added one of my own that snags the version from the `copy_files` build step. Because I wanted `service_base_image` to depend on `copy_files`, I had to move the whole step after `copy_files`. This is a limitation in build.yaml: a step must appear *after* steps on which it depends. I also had to move `check_services` for the same reason: it depends on `service_base_image`. File dependencies in build.yaml work like this:; 1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:499,depend,depend,499,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401,8,['depend'],"['depend', 'dependencies', 'depends']"
Integrability,"Hey @seanjosephjurgens !. Sorry you're running into trouble. This error message is bad. See https://github.com/hail-is/hail/issues/13346 for that bug. The real issue here is VCF INFO fields like:; ```; AS_BaseQRankSum=0.000,.,0.100,0.500; ```; The VCF spec doesn't explicitly permit missing values as elements of INFO or FORMAT fields. It does permit the whole field to be missing a la `FIELD=.` but `FIELD=1,.,1` or `FIELD=.,.,.` are not explicitly permitted. In particular, `FIELD=.` could mean ""this field is missing"" or ""this field is not-missing, it is a one-element array containing one missing value"". The fix is to use `hl.import_vcf(..., array_elements_required=False)`. When that is true, Hail will parse `1,.,1` as `[1, NA, 1]`. Be forewarned: Hail treats `FIELD=.` as a missing field, not an array with one missing element.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14102#issuecomment-1860989511:72,message,message,72,https://hail.is,https://github.com/hail-is/hail/issues/14102#issuecomment-1860989511,1,['message'],['message']
Integrability,"Hey @tomwhite, sorry for the massive delay. There was some concern about not having instructions generic to any cluster in the docs, so I've restructured your PR a bit more to capture the generic Spark cluster instructions and then have a separate section on getting started with a Cloudera cluster. I also opted for ""Cloudera"" instead of ""CDH"" because I don't think our users will recognize the acronym. Does that seem OK to you?. I made my changes as [a PR into your branch](https://github.com/tomwhite/hail/pull/1/files). Also, don't worry about the failing integration test, that's a CI issue on our end. It should resolve it self after the next new commit to your branch.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1452#issuecomment-290546429:561,integrat,integration,561,https://hail.is,https://github.com/hail-is/hail/pull/1452#issuecomment-290546429,1,['integrat'],['integration']
Integrability,"Hey Alex, this is great. The PR protocol is for you to assign the PR to a random developer by using the random user generated by scorecard.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4947#issuecomment-446738202:32,protocol,protocol,32,https://hail.is,https://github.com/hail-is/hail/pull/4947#issuecomment-446738202,1,['protocol'],['protocol']
Integrability,"Hey Nick, wanted to loop you in on an offline discussion I had with Cotton about this. First, thank you for picking up review responsibilities! I'll just do a brief review focusing on interaction of this change with intended directions for hailctl. Here are the conclusions from our discussion:. 1. This is a breaking change to the hailctl interface. We're OK with that.; 2. Although we are OK making breaking changes, we should get Grace's team on board and update their scripts/repos before merging/releasing. For that reason this will sit for a few weeks until their current urgent analysis push is done.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9842#issuecomment-767171298:340,interface,interface,340,https://hail.is,https://github.com/hail-is/hail/pull/9842#issuecomment-767171298,1,['interface'],['interface']
Integrability,"Hi @Sun-shan,. First, I should note that we do not currently test hail against Spark version 2.2.0, I recommend using Spark 2.1.1 or 2.0.2. Spark versions aside, the error you encountered is unrelated to Spark, as far as I know. What version of the `decorator` package is installed on your machine? `decorator` version 4.0.10 should work correctly. Unfortunately, we are still looking for a python dependency management solution. My apologies that you've run into this issue.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2076#issuecomment-336903534:398,depend,dependency,398,https://hail.is,https://github.com/hail-is/hail/issues/2076#issuecomment-336903534,1,['depend'],['dependency']
Integrability,"Hi @alanmejiamaza ,. Just to be clear, you did `pip install hail` and then you opened a notebook and ran something like:; ```; import hail as hl; hl.init(); from hail.plot import show; from pprint import pprint; hl.plot.output_notebook(); ht = hl.utils.range_table(1000); ht = mt.annotate(DP = hl.rand_unif(0, 100)); p = hl.plot.histogram(ht.DP, range=(0,30), bins=30, title='DP Histogram', legend='DP'); show(p); ```; And the plot didn't appear? Did you get a message saying ""BokehJS 1.4.0 successfully loaded.""? What version of Jupyter are you using? What web browser are you using?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12717#issuecomment-1452599951:461,message,message,461,https://hail.is,https://github.com/hail-is/hail/issues/12717#issuecomment-1452599951,2,['message'],['message']
Integrability,"Hi all,. Here's the error message that I get when I go to install all of my python packages (scipy/uvloop/etc). ```; cp -f build/libs/hail-all-spark.jar python/hail/backend/hail-all-spark.jar; --; 872 | amazon-ebs: rm -rf build/deploy; 873 | amazon-ebs: mkdir -p build/deploy; 874 | amazon-ebs: mkdir -p build/deploy/src; 875 | amazon-ebs: cp ../README.md build/deploy/; 876 | amazon-ebs: rsync -r \; 877 | amazon-ebs: --exclude '.eggs/' \; 878 | amazon-ebs: --exclude '.pytest_cache/' \; 879 | amazon-ebs: --exclude '__pycache__/' \; 880 | amazon-ebs: --exclude 'benchmark_hail/' \; 881 | amazon-ebs: --exclude '.mypy_cache/' \; 882 | amazon-ebs: --exclude 'docs/' \; 883 | amazon-ebs: --exclude 'dist/' \; 884 | amazon-ebs: --exclude 'test/' \; 885 | amazon-ebs: --exclude '*.log' \; 886 | amazon-ebs: python/ build/deploy/; 887 | amazon-ebs: # Clear the bdist build cache before building the wheel; 888 | amazon-ebs: cd build/deploy; rm -rf build; python3 setup.py -q sdist bdist_wheel; 889 | ==> amazon-ebs: /usr/local/lib/python3.7/site-packages/setuptools/installer.py:30: SetuptoolsDeprecationWarning: setuptools.installer is deprecated. Requirements should be satisfied by a PEP 517 installer.; 890 | ==> amazon-ebs: SetuptoolsDeprecationWarning,; 891 | ==> amazon-ebs: /usr/local/lib/python3.7/site-packages/setuptools/command/install.py:37: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.; 892 | ==> amazon-ebs: setuptools.SetuptoolsDeprecationWarning,; 893 | amazon-ebs: sed '/^pyspark/d' python/requirements.txt \| grep -v '^#' \| xargs python3 -m pip install -U; 894 | amazon-ebs: Collecting aiohttp==3.8.1; 895 | amazon-ebs: Downloading aiohttp-3.8.1-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.1 MB); 896 | amazon-ebs: ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.1/1.1 MB 68.3 MB/s eta 0:00:00; 897 | amazon-ebs: Collecting aiohttp_session<2.8,>=2.7; 898 | amazon-eb",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12136#issuecomment-1255177691:26,message,message,26,https://hail.is,https://github.com/hail-is/hail/pull/12136#issuecomment-1255177691,1,['message'],['message']
Integrability,"Hi! Are you trying to compile hail from source? You can get `lz4` on OS X with Homebrew by doing something like `brew install lz4`, or `apt-get install liblz4-dev` on a Debian-flavored Linux, but we don't (currently) ship with that dependency because the C++ code isn't enabled yet. If you don't need to build from source, but just want a local version to play around with, you can either use `pip` or download the prebuilt distribution following the instructions here: https://hail.is/docs/stable/getting_started.html",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4651#issuecomment-433220724:232,depend,dependency,232,https://hail.is,https://github.com/hail-is/hail/issues/4651#issuecomment-433220724,1,['depend'],['dependency']
Integrability,"Hi!; This is an odd error message to get -- is your repository updated to the current master? There was an update to the `importannotations table` module a few weeks ago, before which the `-e` option didn't exist. . We are in the midst of a documentation reorganization, so I apologize if it's difficult to find things at the moment. From the cloned repository, all test files are at `src/test/resources/*`. . This command worked for me just now:. ```; hail importannotations table src/test/resources/variantAnnotations.alternateformat.tsv --impute -e '`Chromosome:Position:Ref:Alt`' write -o tmp.vds; ```. The `-e` argument uses an expression to specify how to construct a `Variant`, which in this case is just the column name since the type of that column is `Variant`. If we don't use the `--impute` argument, we can construct it with . ```; -e 'Variant(`Chromosome:Position:Ref:Alt`)'; ```. More info on that [here](https://github.com/broadinstitute/hail/blob/master/docs/commands/ImportAnnotations.md)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/561#issuecomment-238502640:26,message,message,26,https://hail.is,https://github.com/hail-is/hail/issues/561#issuecomment-238502640,1,['message'],['message']
Integrability,"Hi, I just tried installing hail with pip but it has very stringent version dependencies.; For example, it requires [pandas>0.22,<0.24](https://github.com/hail-is/hail/blob/04344d214361daede1417e74b206b739eff9ae87/hail/python/requirements.txt#L10) which causes a `pip install hail` to downgrade my pandas version. Would it be feasible to remove all those `<0.x` in the dependencies?; Usually, new versions of e.g. pandas introduce less problems to the user than downgrades caused by pip packages (`pip` does not resolve dependencies in contrast to e.g. `conda`).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7299:76,depend,dependencies,76,https://hail.is,https://github.com/hail-is/hail/issues/7299,3,['depend'],['dependencies']
Integrability,"Hi, I'm studying Hail and installing Hail on spark. I have plan that run GWAS about 1000 genomes. So, I install and set up hail on spark. **<my environment>**; Linux: Centos 7.8; Python: 3.7.3 (anaconda); Apache spark: spark-2.2.0-bin-hadoop2.6; Hadoop: hadoop-2.6.0; Java -version (info. I'm using linux server by korea Institution, So i can't use root permission); openjdk version ""1.8.0_262""; OpenJDK Runtime Environment (build 1.8.0_262-b10); OpenJDK 64-Bit Server VM (build 25.262-b10, mixed mode); Hail version: 0.2.68. **<My workflow>**; 1. Run start-master.sh and start-slaves.sh in spark sbin directory.; 2. (bash) pyspark. I got message below. ![image](https://user-images.githubusercontent.com/78582088/121848873-9f001980-cd25-11eb-9e9d-8854f204c8c3.png); ![image](https://user-images.githubusercontent.com/78582088/121848900-a58e9100-cd25-11eb-9655-58100401e0d3.png); ![image](https://user-images.githubusercontent.com/78582088/121848915-a9baae80-cd25-11eb-90ff-a4f12df5b322.png). How can i set up hail on spark?; Do i need to change java version?. Thank you for your services. My <bashrc>, <conf/spark-defaults.conf> and <./spark-env.sh> are below. **<.bashrc>**; ```; #SPARK; export SPARK_HOME=/home/edu1/tools/spark-2.2.0-bin-hadoop2.6; export PATH=$PATH:$SPARK_HOME/bin:$SPARK_HOME/python:$PATH; export PYTHONPATH=$HAIL_HOME/python:$SPARK_HOME/python:$(echo ${SPARK_HOME}/python/lib/py4j-*-src.zip):$PYTHONPATH. # Hail; export HAIL_HOME=/home/edu1/miniconda2/envs/Hail-on-spark/lib/python3.7/site-packages/hail; export PATH=$PATH:$HAIL_HOME/bin; export PYTHONPATH=$PYTHONPATH:$HAIL_HOME/python; export SPARK_CLASSPATH=$HAIL_HOME/backend/hail-all-spark.jar. # JAVA (I just can modify .bashrc, so This would not apply to java path.); export JAVA_HOME=/home/edu1/tools/jdk-1.8.0_231; export PATH=$PATH:$JAVA_HOME/bin; export CLASSPATH=$JAVA_HOME/lib/tools.jar. # Hadoop; export HADOOP_INSTALL=/home/edu1/tools/hadoop-2.6.0; export PAHT=$PATH:$HADOOP_INSTALL/bin; export LD_LIBRARY_PATH=$H",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/10590:639,message,message,639,https://hail.is,https://github.com/hail-is/hail/issues/10590,1,['message'],['message']
Integrability,"Hi, danking, @danking I tried two log file pathes ,all had access permission, but the error still appeared. （1）HDFS file path ：/user/hail/hail.log， have access permission; -rwxrwxrwx 3 hdfs supergroup 0 2016-10-08 10:54 /user/hail/hail.log; （2）log file：local PATH， hava access permission; -rwxrwxrwx 1 root root 48523 Oct 8 11:42 hail.log. The error message was attached as follows ; [splitmulti_1_1.txt](https://github.com/hail-is/hail/files/517467/splitmulti_1_1.txt)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/825#issuecomment-252404979:350,message,message,350,https://hail.is,https://github.com/hail-is/hail/issues/825#issuecomment-252404979,1,['message'],['message']
Integrability,"High level take-aways:. - Hail docs now have syntax highlighting (we just needed to import pygments.css).; - Search works again.; - There are now only two root HTML templates: `site/templates/base.html` and; `web_common/web_common/templates/layout.html`. I cannot unify these further; because our services and our main websites actually differ significantly.; - The search/nav bar is now present in the HTML, no JS nonsense to; asynchronously load it into place after HTML rendering.; - Site now has a `make watch` which watches for changes and automatically; re-renders the HTML.; - Site now has a few make rules that facilitate experimenting with how the docs; are displayed within the context of the current development version of site's; CSS & HTML.; - XSLT is now only used by the C++ tests. Smaller things:. - Removed bootstrap dependencies. Did we ever actually use these?; - Removed ""clipboard.js"" dependency. Also not clear from where this came.; - Removed use of the `subtitle` tag, which isn't actually an HTML tag?. Future work:. - Simplify our CSS. It's not possible to logically reason about our CSS. And it; interacts in bad ways with the latent RTD themes. I want a unified Hail visual; theme.; - Clean up the search-related JavaScript in nav-bottom.html and; search.html. These both seem too complicated to just make search work. ---. The thrust of this PR is to restructure Hail's website and documentation to; entirely rely on Jinja2 templates. Previously, we used a mix of Jinja2, XSLT,; and in-browser JavaScript DOM manipulation to piece together a web page. Now, all of Hail's non-service website derives from; `site/templates/base.html`. It is a Jinja2 template with four blocks: title,; meta_description, head, and content. It ensures that:; - Hail's CSS is loaded,; - the Hail icon is set,; - the fonts are loaded,; - the source code highlighter is loaded (prism.js, only used outside the docs); - the nav bar is present and configured.; The nav bar is somewhat complicated. ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9597:834,depend,dependencies,834,https://hail.is,https://github.com/hail-is/hail/pull/9597,2,['depend'],"['dependencies', 'dependency']"
Integrability,"Histograms are basically a group_by on the bin index. The implementation is a tad more complex than I would have hoped, but I think it will be nice to not have to maintain an extra aggregator. (Actually, I think if we break apart the array elements aggregator interface in the right way, hl.agg.hist might be written pretty naturally in terms of that. But that may need to wait until the old aggregators are gone.)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6730:260,interface,interface,260,https://hail.is,https://github.com/hail-is/hail/pull/6730,1,['interface'],['interface']
Integrability,"Hi，cseed @cseed , I configured the java related to the Spark cluster, as follows：. ```; scala> System.getProperty(""java.version""); res0: String = 1.8.0_91. scala> val rdd = sc.parallelize(0 to 1000, 4); rdd: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[0] at parallelize at <console>:27. scala> rdd.mapPartitions { it => Iterator(System.getProperty(""java.version"")) }.collect(); res1: Array[String] = Array(1.8.0_91, 1.8.0_91, 1.8.0_91, 1.8.0_91) ; ```. but when testing the `split multi` command， use the `split_test.vcf` in the test file hail offered:. ```; spark-submit --executor-memory 16g --executor-cores 4 --class org.broadinstitute.hail.driver.Main ******/hail-all-spark.jar ; --master yarn-client importvcf /user/hail/split_test.vcf splitmulti write -o /user/hail/split_test_1_1.vds exportvcf -o /user/hail/split_test_1_1.vcf; ```. there appeared some errors：; 1. `java.io.FileNotFoundException: hail.log (Permission denied)`; 2. `Job aborted due to stage failure: Task 0 in stage 2.0 failed 4 times, most recent failure: Lost task 0.3 in stage 2.0 (TID 5, bio-x-3): ; java.io.IOException: The file being written is in an invalid state. Probably caused by an error thrown previously. Current state: COLUMN`; 3. `The file being written is in an invalid state. Probably caused by an error thrown previously. Current state: COLUMN`. I tested several different vcf files, the errors always existed.; The whole error message was attached as follows ; [splitmulti.txt](https://github.com/hail-is/hail/files/502516/splitmulti.txt) . How can I solve it ?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/825#issuecomment-250697347:1431,message,message,1431,https://hail.is,https://github.com/hail-is/hail/issues/825#issuecomment-250697347,1,['message'],['message']
Integrability,"Hmm, I realized one problem with this - the error message will return that of coalesce rather than or_else and might be a little confusing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7088#issuecomment-532938355:50,message,message,50,https://hail.is,https://github.com/hail-is/hail/pull/7088#issuecomment-532938355,1,['message'],['message']
Integrability,"Hmm, there's another issue with our dependency management. If batch changes and docker doesn't, docker won't get rebuilt locally and batch will fail. I made docker touch a build stamp file (so we don't end up building docker multiple times) and make scorecard and batch build it before building themselves.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5655#issuecomment-475060566:36,depend,dependency,36,https://hail.is,https://github.com/hail-is/hail/pull/5655#issuecomment-475060566,1,['depend'],['dependency']
Integrability,Hmm. OrderedRDD and OrderedPartitioner are being phased out in master. OrderedRDD2 and OrderedPartitioner2 are in. We should probably have an offline discussion about how the linear algebra routines are going to interact with the new RegionValue-based stuff. There seem to be two competing goals here: getting something working for UKB and building something that will integrate with the new 0.2 stuff. We should probably have a chat about how to navigate this.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2171#issuecomment-326647606:190,rout,routines,190,https://hail.is,https://github.com/hail-is/hail/pull/2171#issuecomment-326647606,2,"['integrat', 'rout']","['integrate', 'routines']"
Integrability,"Hmm... shadowJar is building at about 2 minutes on my computer, 1 min 20s of which is compileScala. Master is building at about 1 min 40s (not sure how much scala compile is taking, forgot to check), and I managed to get it down to like 1 min 45s by not bundling some of the dependencies that we weren't bundling before.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6248#issuecomment-498742903:275,depend,dependencies,275,https://hail.is,https://github.com/hail-is/hail/pull/6248#issuecomment-498742903,1,['depend'],['dependencies']
Integrability,"Hmph, ya this seems annoyingly complicated, and I'd prefer to make one command with opinionated but configurable defaults than have different commands. One thing that feels inconsistent here is what we do in the Batch interface. We don't have the equivalent of `HAIL_QUERY_BACKEND` and a user specifically has to create a `ServiceBackend` as opposed to relying on the environment dictating which model to use. I feel like it would be OK if we documented `hailctl batch submit` as ""distribute everything on batch by default""",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12471#issuecomment-1324131496:218,interface,interface,218,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324131496,1,['interface'],['interface']
Integrability,How does the history slow it down? It's just a wrapper.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2209#issuecomment-328142662:47,wrap,wrapper,47,https://hail.is,https://github.com/hail-is/hail/pull/2209#issuecomment-328142662,1,['wrap'],['wrapper']
Integrability,"Huh, you can't request changes on your own PR. So, right now the hail/apiserver dependency is cyclic. I'll need to fix that to get testing and deploying working right.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5624#issuecomment-473961308:80,depend,dependency,80,https://hail.is,https://github.com/hail-is/hail/pull/5624#issuecomment-473961308,1,['depend'],['dependency']
Integrability,"Huh. Well, this is a terrible error message, but the short answer is that Hail doesn't support reading directly from an HTTP(S) server. You can either download that file or use a dataset that is available in a cloud storage bucket. In general, you'll want to convert to Hail's native MatrixTable format before you do further analysis anyway. I'll fix this to give a more reasonable error message, but, in general, not all HTTP(S) servers support the Range header which means Hail can't efficiently read from all HTTP(S) servers. If you're looking for public datasets to experiment with, I strongly recommend using the Dense Hail MatrixTable of the HGDP+1KG dataset hosted for free by the three major clouds https://gnomad.broadinstitute.org/downloads#v3-hgdp-1kg.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12280#issuecomment-1270722614:36,message,message,36,https://hail.is,https://github.com/hail-is/hail/issues/12280#issuecomment-1270722614,2,['message'],['message']
Integrability,"I added ""Reviewers"" who are folks that might be interested in this PR. The PR die came up Tim. If you prefer, I can probably break it up a bit. The big changes are:. - `RegionValueAggregator` an interface and associated set of concrete implementations that work on region values rather than `Annotation`s. - The magic happens in ExtractAggregators.scala and RunAggregtors.scala. The former rips out references to aggregations and replaces them with references to the 2nd (index 1) input. The latter packages up running an aggregator on a region value array with some ""context"" (i.e. the `EvalContext`).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2492:195,interface,interface,195,https://hail.is,https://github.com/hail-is/hail/pull/2492,1,['interface'],['interface']
Integrability,"I added 64KB buffer, but I'm unsure of the right interface (should the caller pass in the byte buffer as well?) and location (RichDenseMatrixDouble is quite specific) for these functions. In compute on WriteBlocksRDD, I create a byte buffer of the same size in bytes as the entire IndexedRow, and re-use it for every row. This limits the number of cols to 268 million or so (~2^28) which I don't see us exceeding anytime soon. I could instead use the writeDoubles function but then I'd want to change the interface to pass in the byte buffer so it's not recreated for every row. What do you think is most reasonable?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2531#issuecomment-350128393:49,interface,interface,49,https://hail.is,https://github.com/hail-is/hail/pull/2531#issuecomment-350128393,2,['interface'],['interface']
Integrability,I added an asana task for CI to use the PR message for single commit PRs,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8552#issuecomment-613688867:43,message,message,43,https://hail.is,https://github.com/hail-is/hail/pull/8552#issuecomment-613688867,1,['message'],['message']
Integrability,I added an separate test of correctness of toKeyGsWeightRdd since this function is used in both the Hail and R routes in the end-to-end comparison,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2248#issuecomment-332873098:111,rout,routes,111,https://hail.is,https://github.com/hail-is/hail/pull/2248#issuecomment-332873098,1,['rout'],['routes']
Integrability,"I added the cli. I kind of winged it looking at how `hailctl dev deploy` was done. It seems to work though:. ```; (base) wmecc-475:hail jigold$ hailctl batch billing; usage: hailctl batch billing [-h] {list,get} ... Manage billing on the service managed by the Hail team. positional arguments:; {list,get}; list List billing projects; get Get a particular billing project's info. optional arguments:; -h, --help show this help message and exit; (base) wmecc-475:hail jigold$ hailctl batch billing fake; usage: hailctl batch billing [-h] {list,get} ...; hailctl batch billing: error: invalid choice: 'fake' (choose from 'list', 'get'); Unclosed client session; client_session: <aiohttp.client.ClientSession object at 0x111288208>; (base) wmecc-475:hail jigold$ hailctl batch billing list; - accrued_cost: 0.0; billing_project: ci; cost: null; limit: null; users: [ci]; - accrued_cost: 0.0012024241022130966; billing_project: test; cost: 0.0012024241022130966; limit: null; users: [test]; - accrued_cost: 9.62974093086927e-05; billing_project: test-tiny-limit; cost: 9.62974093086927e-05; limit: 1.0e-05; users: [test]; - accrued_cost: 0.0; billing_project: test-zero-limit; cost: null; limit: 0.0; users: [test]. (base) wmecc-475:hail jigold$ hailctl batch billing get; usage: hailctl batch billing get [-h] [-o {yaml,json}] billing_project; hailctl batch billing get: error: the following arguments are required: billing_project; Unclosed client session; client_session: <aiohttp.client.ClientSession object at 0x10a635208>; (base) wmecc-475:hail jigold$ hailctl batch billing get test-tiny-limit; accrued_cost: 9.62974093086927e-05; billing_project: test-tiny-limit; cost: 9.62974093086927e-05; limit: 1.0e-05; users: [test]. (base) wmecc-475:hail jigold$ hailctl batch billing get test-tiny-limit; accrued_cost: 9.62974093086927e-05; billing_project: test-tiny-limit; cost: 9.62974093086927e-05; limit: 1.0e-05; users: [test]. Unclosed client session; client_session: <aiohttp.client.ClientSession o",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9385#issuecomment-684964006:427,message,message,427,https://hail.is,https://github.com/hail-is/hail/pull/9385#issuecomment-684964006,1,['message'],['message']
Integrability,"I agree about conda and having a set of docker images for the whole repo. I ran into other problems with conda and inter-project dependencies last week. The solution was to not rely on conda to specify the environment and just use `setup.py`. I can see this approach failing if different projects require different versions of the same package. Also, I think ci is using Python 3.7 while other projects are 3.6. We should probably pick a version for the entire project.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5623#issuecomment-473970604:129,depend,dependencies,129,https://hail.is,https://github.com/hail-is/hail/pull/5623#issuecomment-473970604,1,['depend'],['dependencies']
Integrability,"I agree cancel_after_n_failures should be on the group. That lets us match Spark semantics for QoB. 1. I agree, callback per group seems valuable.; 2. I agree attributes seem useful on groups.; 3. I agree, not much value in updates being at the job-group level. . Depends what you mean by prefix search, if that means `LIKE ""X%""`, I think that'll be quite fast on a normal index because you can jump directly to the first record whose prefix is X. I don't see how a fulltext index could do any better in that case. On the other hand, if you mean `LIKE ""%X""` then I agree, a normal index is useless and MySQL will do a table scan. In that case, I expect a fulltext index to be a substantial improvement. > I believe my plan is basically already doing this. It might not be clear because I didn't put the migrations in. But basically all of the current batches tables are now indexed by batch_id, job_group_id where the current ""batch"" has job_group_id = 1. Ah, that sounds good. So the plan would be to drop, for example, `aggregated_batch_resources_v2` and the other tables which are now replaced with the job group ones? That's exactly what I had in mind.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12697#issuecomment-1450945048:264,Depend,Depends,264,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1450945048,1,['Depend'],['Depends']
Integrability,"I agree with your criticism, although my feeling is that rows and r in your proposal are noisy and unnecessary. Two thoughts:. I think this is best resolved in the context of embedding the expression language in Python. I think understanding pandas and what's involved in building a pandas-like interface for VariantDatasets is a good way to start. If we do address it in the current setup, what do we want to write? How about `kt.aggregate('filter(col1 < col2).count()` or, assuming we're doing a summing col1, `filter(col1 < col2).sum(col1)`. Then all the lambdas go away. We clearly need the scope in aggregators. Why not make that explicit, and throw out the single implicit value? Then `filter(col1 < col2).with(col3 = col1 * col2).mean(col3)`. I'm not sure about flatMap. `flatWith(col3 = <array expr>)`? I guess that's the same as `with(col3 = <array expr>).explode(col3)`. Then Aggregables look like Structs:. ```; Aggregable {; col1: Int,; col2: Int, ...; }; ```. Then there's nothing funny going on.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1410#issuecomment-282784540:295,interface,interface,295,https://hail.is,https://github.com/hail-is/hail/issues/1410#issuecomment-282784540,2,['interface'],['interface']
Integrability,"I also added some flair to our ""integration tests"" (test.sh).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9821:32,integrat,integration,32,https://hail.is,https://github.com/hail-is/hail/pull/9821,1,['integrat'],['integration']
Integrability,"I also broke out routines to create examples of values (tables, matrix tables) with all types, and added a test case that runs expand_types on the table of values of all types.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5021#issuecomment-451248463:17,rout,routines,17,https://hail.is,https://github.com/hail-is/hail/pull/5021#issuecomment-451248463,1,['rout'],['routines']
Integrability,"I also compared `variant_and_sample_qc_nested_with_filters_2` (33% worse on batch) between the two branches on my laptop, and could not detect a difference. I do think the make_ndarray range speedup is real -- there are a few benchmarks that indicate improvement that all are heavily dependent on the performance of the `StreamRange` implementation, which I think slightly improved.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10229#issuecomment-814325646:284,depend,dependent,284,https://hail.is,https://github.com/hail-is/hail/pull/10229#issuecomment-814325646,1,['depend'],['dependent']
Integrability,I also converted a no-message assertion into an if with an AssertionError; because I found it difficult to debug without the added information. This removes the duplication of the list of supported types for RPrimitive.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8765:22,message,message,22,https://hail.is,https://github.com/hail-is/hail/pull/8765,1,['message'],['message']
Integrability,"I also created a Starlette branch; which may be preferable, as Sanic brings with it a bit of controversy and a bunch of errors generate on Techempower benchmarks. I took a brief look at the bench source didn't see an immediate issue, so worry a bit about. Sanic. Starlette is a light layer on top of Uvicorn, one of the leading ASGI web servers. Similar to Sanic/Flaks interface:. https://www.techempower.com/benchmarks/#section=data-r17&hw=ph&test=fortune&l=zijzen-1. Branch here, can issue a separate pr and close this one: https://github.com/akotlar/hail/tree/scorecard-starlette",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5242#issuecomment-461188115:369,interface,interface,369,https://hail.is,https://github.com/hail-is/hail/pull/5242#issuecomment-461188115,1,['interface'],['interface']
Integrability,"I also now suspect that the strange behavior I was seeing was due to caching on Chrome's side. This would explain why I was seeing nothing in server logs, and why behavior was inconsistent between browsers. I even watched logs of all 6 gateways (3 gateway, 3 internal), and the monitoring router, nothing. I also saw differences in redirect behavior between Safari and Chrome. Cleared browser cache (hard refreshes weren't doing anything), and started also testing in Firefox. Lastly, the proxy_set_header Host does not appear to be needed for Grafana or Prometheus to operate, so I have excluded it (tested with the Cluster dashboard). This also reduces the number of places we need to specify which external domain Grafana/Prometheus sit behind. edit: To be clear I also tried to find documentation on the use of GF_SERVER_DOMAIN and could not. GF_SERVER_DOMAIN doesn't even appear in Grafan's repository (at least, GitHub search doesn't find it, although it does find GF_SERVER_ROOT_URL)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7015#issuecomment-541336418:289,rout,router,289,https://hail.is,https://github.com/hail-is/hail/pull/7015#issuecomment-541336418,2,['rout'],['router']
Integrability,I also switched the `api` argument to `BatchClient` to `default_api` rather than `None`. I wonder if that was somehow creating a muffled error message. It should have erred as soon as someone tried to make a request with `api=None`. Not sure why it looped forever instead.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4586#issuecomment-434412373:143,message,message,143,https://hail.is,https://github.com/hail-is/hail/pull/4586#issuecomment-434412373,1,['message'],['message']
Integrability,"I also think a fixed result type of RDD will be a problem. My CNV work involves parallelizing file parsing, and this interface wouldn't be compatible with that use case. I think there are a lot of strengths of generating a `(String) => Annotation` parse function, and then letting the client code use that however it likes. Including `sc.textFileLine(...)` in one read function prevents only a little bit of code duplication, and causes major headaches.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/462#issuecomment-232825352:117,interface,interface,117,https://hail.is,https://github.com/hail-is/hail/pull/462#issuecomment-232825352,1,['interface'],['interface']
Integrability,"I am a fresh user for hail.; I try this command ""hail importannotations table variantAnnotations.alternateformat.tsv -e Variant --impute write -o consequences.vds"", but I received an error message as follow ""hail: fatal: importannotations table: parse error: ""-e"" is not a valid option"", why?; additionally, I can not find the corresponding test file in the test file of hail download from here and it is really very inconvenient for me to test it!; thanks a lot!",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/561:189,message,message,189,https://hail.is,https://github.com/hail-is/hail/issues/561,1,['message'],['message']
Integrability,I am convinced this is actually just a bad error message.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4668#issuecomment-434267326:49,message,message,49,https://hail.is,https://github.com/hail-is/hail/issues/4668#issuecomment-434267326,1,['message'],['message']
Integrability,"I am in dependency Hell. Spark, in classic Spark fashion, wants a version of Netty from February 2022. The fixed versions of Azure need more recent Netty.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13018#issuecomment-1541021083:8,depend,dependency,8,https://hail.is,https://github.com/hail-is/hail/pull/13018#issuecomment-1541021083,1,['depend'],['dependency']
Integrability,"I am testing hail build on spark3 (v0.2.89, spark 3.1.2) and getting the following error with jinja2 (see below).; From the error it seems like this is due to Hail's dependency of bokeh using the latest version of jinja2. Downgrading jinja2 to 3.0.0 solves the problem, and it seems like other people have seen this too with the latest release of jinja2:. https://github.com/holoviz/panel/issues/3260. This may be transient and may be solved by bokeh / jinja2 folks but thought I'd let you know in case you hit this issue. ```; ../conda/envs/glow/lib/python3.7/site-packages/bokeh/core/templates.py:43: in <module>; from jinja2 import Environment, Markup, FileSystemLoader; E ImportError: cannot import name 'Markup' from 'jinja2' (/home/circleci/conda/envs/lib/python3.7/site-packages/jinja2/__init__.py); [error] java.lang.IllegalArgumentException: requirement failed: Python tests in Hail environment failed; [error] 	at scala.Predef$.require(Predef.scala:281); [error] 	at $1fb87e3247134917ca70$.$anonfun$pythonSettings$14(build.sbt:288); [error] 	at $1fb87e3247134917ca70$.$anonfun$pythonSettings$14$adapted(build.sbt:278); [error] 	at scala.Function1.$anonfun$compose$1(Function1.scala:49); [error] 	at sbt.internal.util.$tilde$greater.$anonfun$$u2219$1(TypeFunctions.scala:62); [error] 	at sbt.std.Transform$$anon$4.work(Transform.scala:67); [error] 	at sbt.Execute.$anonfun$submit$2(Execute.scala:280); [error] 	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:19); [error] 	at sbt.Execute.work(Execute.scala:289); [error] 	at sbt.Execute.$anonfun$submit$1(Execute.scala:280); [error] 	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178); [error] 	at sbt.CompletionService$$anon$2.call(CompletionService.scala:37); [error] 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); [error] 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); [error] 	at java.util.concurrent.FutureTask.run(FutureTask.ja",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/11705:166,depend,dependency,166,https://hail.is,https://github.com/hail-is/hail/issues/11705,1,['depend'],['dependency']
Integrability,"I am trying to move towards removing the `fundamentalType` interface from `PType`s. As a first pass, this PR will remove RVB's use of `fundamentalType` by delegating the `addAnnotation`'s implementation to a new method, `unstagedStoreJavaObjectAtAddress`. WIP until I see tests are passing and clean up comments.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9892:59,interface,interface,59,https://hail.is,https://github.com/hail-is/hail/pull/9892,1,['interface'],['interface']
Integrability,"I am using Hail 0.2.54. However, I also tested with the latest build.gradle file. I run the following make install command:; `make install HAIL_COMPILE_NATIVES=1 SCALA_VERSION=2.11.12 SPARK_VERSION=2.4.2`. However, I got this error message which did not appear before. ` > Could not resolve org.scalanlp:breeze-natives_2.11:+.; Required by:; project :; > Failed to list versions for org.scalanlp:breeze-natives_2.11.; > Unable to load Maven meta-data from https://repo.hortonworks.com/content/repositories/releases/org/scalanlp/breeze-natives_2.11/maven-metadata.xml.; > Could not get resource 'https://repo.hortonworks.com/content/repositories/releases/org/scalanlp/breeze-natives_2.11/maven-metadata.xml'.; > Could not GET 'https://repo.hortonworks.com/content/repositories/releases/org/scalanlp/breeze-natives_2.11/maven-metadata.xml'. Received status code 500 from server: Server Error; * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.; * Get more help at https://help.gradle.org. BUILD FAILED in 29s; make: *** [build/libs/hail-all-spark.jar] Error 1`. It seems that is caused by https://repo.hortonworks.com/content/repositories/releases/ server is done.; I am wondering whether there is any maven substitute can be used temporarily to compile hail.jar?. Thanks in advance for your help.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9419:232,message,message,232,https://hail.is,https://github.com/hail-is/hail/issues/9419,1,['message'],['message']
Integrability,"I apologize for not responding sooner to this. I've been mulling over what to do here as it's been over 4 years since I wrote the first interface. I think your changes are fine, but I need to go through the tests again and figure out what `_mentioned` was originally intended for to make sure this change doesn't break anything subtle. I'm going to have our CI run this SHA so I can see what the failures are.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13192#issuecomment-1603274953:136,interface,interface,136,https://hail.is,https://github.com/hail-is/hail/pull/13192#issuecomment-1603274953,1,['interface'],['interface']
Integrability,I avoid printing the full exception into the body in most cases. Seems prudent to not expose too much about our internals. CI already uses a broad except and prints the full message when building PRs so I adopted that for building the branch (`unwatched_branch.deploy`) in dev deploy.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8828:174,message,message,174,https://hail.is,https://github.com/hail-is/hail/pull/8828,1,['message'],['message']
Integrability,"I believe #14547 introduced a bug that broke IR function deserialization in QoB by changing `value_parameter_names` from `Array[String]` to `Array[Name]`. This fixes the issue by pushing the introduction of the `Name` wrapper object to after deserialization. Another option is to incorporate the `{ str: String }` structure of `Name` into the python -> scala payload, but I'm not sure I see a use case for that and we can always do that later (there is no issue of backwards compatibility with this communication between python and scala). My main concern here is that clearly this isn't tested. I'd appreciate guidance on the current advised practice for testing this behavior.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14579:218,wrap,wrapper,218,https://hail.is,https://github.com/hail-is/hail/pull/14579,1,['wrap'],['wrapper']
Integrability,"I believe I addressed all the comments from #2431. The one thing I couldn't quite figure out is that you suggested testing using a randomly generated vsm and then calling make_table().export() (which in Scala, best as I can figure, is makeKT().export(f)). This does some things that makes re-importing using LoadMatrix non-identical:; - the exported header includes a header entry for the row ID column also, which the data we were looking at before didn't (n entries in the first line, n + 1 entries in subsequent lines), which seems like a reasonable thing to want to deal with---I added a flag in LoadMatrix called hasRowKeyLabel which drops the first item of the header line if that's the case, although it's not exposed to HailContext/the Python interface.; - the exported sample IDs somehow get "".g""s tacked on the ends (presumably because they came from the ""g"" struct), so the sample IDs would never match.; I ended up writing my own export function for the test (since I assume we don't really want to be exporting to this format IRL)---please let me know if I should handle that differently.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2440:751,interface,interface,751,https://hail.is,https://github.com/hail-is/hail/pull/2440,1,['interface'],['interface']
Integrability,"I believe fixes messages need to be in the PR message body to work, so I've added it there.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2858#issuecomment-364973969:16,message,messages,16,https://hail.is,https://github.com/hail-is/hail/pull/2858#issuecomment-364973969,2,['message'],"['message', 'messages']"
Integrability,"I believe the code is behaving as designed. The error message, however, leaves a lot to be desired. A few take-aways:; 1. Hail doesn't support heterogeneous arrays. In situations like these, using an array of tuples has the desired outcome.; 2. The variable `x` in `lambda x:` is already a hail expression and so you don't need to explictly capture it as a `literal`.; a. While support for using hail expressions with `literal` was added in https://github.com/hail-is/hail/pull/4086 (see the issue for motivation), it can only be used when that expression is self-contained (ie it's not dependent on another hail expression, eg referencing an element of a hail array expression or tuple expression etc).; b. Our evaluation strategy is to `eval` the expression, then broadcast the result in a `literal`.; c. `eval` correctly complains that that expression has free variables and so can't be evaluated.; d. This error is ugly and has little to do with what the user wanted to achieve. Off the top of my head, a couple of ways to proceed:; 1. The hardest (but backwards compatible) fix is to somehow provide a good error message that the `x` in `lambda x:` in this particular context is a hail expression containing a reference that you should not use with `literal`.; 2. Remove support for using hail expressions with literal.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13046#issuecomment-1624335413:54,message,message,54,https://hail.is,https://github.com/hail-is/hail/issues/13046#issuecomment-1624335413,3,"['depend', 'message']","['dependent', 'message']"
Integrability,I believe this missing line basically erased all of the above `build_wheel_for_azure` step and the cloud optional changes I put our build system think a missing step is ok. If you look at the most recent deploy it doesn't include `build_wheel_for_azure` even though the `deploy` step depends on it. I'll separately make a fix for that,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11356:284,depend,depends,284,https://hail.is,https://github.com/hail-is/hail/pull/11356,1,['depend'],['depends']
Integrability,I believe we removed PLINK because we didn't want to depend on it. It was historically hard to get a stable URL to a fixed version of the PLINK binary.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9527#issuecomment-701653528:53,depend,depend,53,https://hail.is,https://github.com/hail-is/hail/pull/9527#issuecomment-701653528,1,['depend'],['depend']
Integrability,"I broke this when I separated out the dependencies for hail into two layers:. 1. hailtop dependencies; 2. hail dependencies, which builds on top of the hailtop dependencies. This fix does two things:; - Use the full dependencies in 1 & 2; - Use fully pinned dependencies when installing on clusters which seems better than using our wide-range dependencies. I left the `install-deps` and `install-dev-deps` as the normal requirements files as those are meant for development (I think?) but am happy to take opinions on whether we should use fully pinned deps there as well. I have so far been going by the rule of thumb of fully-pinned for CI and production environments, more lax rules for dev environments. See [here](https://github.com/hail-is/hail/pull/12446#discussion_r1030986069) for additional context. cc: @tpoterba, any idea why the test dataproc test succeeded?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12510:38,depend,dependencies,38,https://hail.is,https://github.com/hail-is/hail/pull/12510,7,['depend'],['dependencies']
Integrability,"I can add it if you'd like, thought we'd prefer to save keystrokes:. ```python; In [3]: class Backend: ; ...: """""" ; ...: Abstract class for backends. ; ...: """""" ; ...: ; ...: @abc.abstractmethod ; ...: def close(self): ; ...: """""" ; ...: Close a Hail Batch backend. ; ...: """""" ; ...: pass ; ...: ; ...: ; ...: class LocalBackend(Backend): . In [4]: n = LocalBackend() . In [5]: n.close() ; ```. This allows us to declare an interface and a void implementation in one.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9191#issuecomment-667226454:423,interface,interface,423,https://hail.is,https://github.com/hail-is/hail/pull/9191#issuecomment-667226454,1,['interface'],['interface']
Integrability,I can break this up further if you want. Big changes:. - change batch.py to support multi-line commands (use `{\n...\n}`); - change batch.py and job.py to support per-job environment variables (and add tests to test_batch.py); - add `partition` to hail top mirroring the implementation in Scala; - implement BatchPoolExecutor which attempts to faithfully implement the interface of concurrent.futures.Executor,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9035:369,interface,interface,369,https://hail.is,https://github.com/hail-is/hail/pull/9035,1,['interface'],['interface']
Integrability,"I can't figure out why I'm still getting this warning message:; ```; 2018-04-20 15:31:39 Hail: WARN: modified row key, rescanning to compute ordering...; 2018-04-20 15:31:39 Hail: INFO: Coerced sorted dataset; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3417#issuecomment-383200453:54,message,message,54,https://hail.is,https://github.com/hail-is/hail/pull/3417#issuecomment-383200453,1,['message'],['message']
Integrability,I cannot enable these tests because both the local and service backend fail due to this error:. ```; E Java stack trace:; E java.lang.AssertionError: assertion failed:; E ir key: [Ljava.lang.String;@28f4484b; E lowered key: WrappedArray(); E 	at scala.Predef$.assert(Predef.scala:223); E 	at is.hail.expr.ir.lowering.LowerTableIR$.lower$1(LowerTableIR.scala:1101); E 	at is.hail.expr.ir.lowering.LowerTableIR$.apply(LowerTableIR.scala:1118); E 	at is.hail.expr.ir.lowering.LowerToCDA$.lower(LowerToCDA.scala:67); E 	at is.hail.expr.ir.lowering.LowerToCDA$.lower(LowerToCDA.scala:36); E 	at is.hail.expr.ir.lowering.LowerToCDA$.apply(LowerToCDA.scala:16); E 	at is.hail.expr.ir.lowering.LowerToDistributedArrayPass.transform(LoweringPass.scala:75); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$3(LoweringPass.scala:15); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$1(LoweringPass.scala:15); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is.hail.expr.ir.lowering.LoweringPass.apply(LoweringPass.scala:13); E 	at is.hail.expr.ir.lowering.LoweringPass.apply$(LoweringPass.scala:12); E 	at is.hail.expr.ir.lowering.LowerToDistributedArrayPass.apply(LoweringPass.scala:70); E 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1(LoweringPipeline.scala:14); E 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1$adapted(LoweringPipeline.scala:12); E 	at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:36); E 	at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:33); E 	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:38); E 	at is.hail.expr.ir.lowering.LoweringPipeline.apply(LoweringPipeline.scala:12); E 	at is.hail.backend.local.LocalBackend._jvmLowerAndExecute(LocalBackend.scala:88); E 	at is.hail.backend.local.LocalBackend._execute(LocalBackend.scala:124); E 	at is.hail.backend.local.LocalBac,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10379:224,Wrap,WrappedArray,224,https://hail.is,https://github.com/hail-is/hail/pull/10379,1,['Wrap'],['WrappedArray']
Integrability,I cannot figure out why the revision isn't getting generated. The build_hail step seems to completely ignore that I've put that dependency into the Makefile.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11645#issuecomment-1075937035:128,depend,dependency,128,https://hail.is,https://github.com/hail-is/hail/pull/11645#issuecomment-1075937035,1,['depend'],['dependency']
Integrability,I can’t help you without an error message or description of what didn’t work. I recommend waiting for the next release which should come out today.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12844#issuecomment-1501909992:34,message,message,34,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1501909992,1,['message'],['message']
Integrability,I changed PCA and toIndexRowMatrix to take a field. Now these all use select_entries so no need to analyze keys or process joins. But I still check that the expression has a matrix table source with good error message using `matrix_table_source`.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3262#issuecomment-377599353:210,message,message,210,https://hail.is,https://github.com/hail-is/hail/pull/3262#issuecomment-377599353,1,['message'],['message']
Integrability,"I changed the interface for `Batch.jobs()` to return an iterator of Job objects rather than statuses that were partial. I think this makes more sense to me. To do that, I got rid of parent_ids on Job because they weren't used anywhere and were misleading because we never return the parent_ids when creating Job objects.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7949#issuecomment-578296538:14,interface,interface,14,https://hail.is,https://github.com/hail-is/hail/pull/7949#issuecomment-578296538,1,['interface'],['interface']
Integrability,I checked the database and was surprised to see the SKUs weren't necessarily unique to a specific region. But it makes sense when I looked at their API here: https://cloud.google.com/billing/docs/reference/rest/v1/services.skus/list#sku. I think we should put this in and address what happens if they change the SKU of a particular region if that occurs in the future. We'll just get a bunch of error messages with no price updates and it shouldn't impact users. ~~I will also manually check this in Azure.~~ I checked in both GCP and Azure and the updates looked fine with no errors.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13607#issuecomment-1726229597:401,message,messages,401,https://hail.is,https://github.com/hail-is/hail/pull/13607#issuecomment-1726229597,1,['message'],['messages']
Integrability,I chose to use an Iterator that stasifies the spirit of the Iterator interface rather than special casing an iterator that does no copies,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2408:69,interface,interface,69,https://hail.is,https://github.com/hail-is/hail/pull/2408,1,['interface'],['interface']
Integrability,I copied `nginx.conf` from a running router and then trimmed out the comments and made our changes (see `access_log` and `log_format`).,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8058#issuecomment-583565691:37,rout,router,37,https://hail.is,https://github.com/hail-is/hail/pull/8058#issuecomment-583565691,1,['rout'],['router']
Integrability,"I couldn't find any tests of `sample_variants` in either the Python or Scala suites, nor could I think of any good tests. But it's such a direct interface to `RDD.sample`, that seems okay to me. I can add tests if anyone has suggestions.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2696:145,interface,interface,145,https://hail.is,https://github.com/hail-is/hail/pull/2696,1,['interface'],['interface']
Integrability,I couldn't get `_counter` to work from `server.py`. Wrapping it in a function restored the functionality.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4794:52,Wrap,Wrapping,52,https://hail.is,https://github.com/hail-is/hail/pull/4794,1,['Wrap'],['Wrapping']
Integrability,"I couldn't get rid of gcloud, sadly. `kubectl` is still to pervasively integrated into what build.yaml does. Although removing it would save us 100s of MB of unnecessary transfer and extraction, using the ci_utils_image for this purpose delays deployment of most services by an unacceptable amount of time.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10502#issuecomment-845459536:71,integrat,integrated,71,https://hail.is,https://github.com/hail-is/hail/pull/10502#issuecomment-845459536,1,['integrat'],['integrated']
Integrability,"I created a new multi-branch configuration that should be better for what we are trying to accomplish. This should fix issues 2 and 3. . For the reproducibility of errors, that will probably take both setting the random seed parameter in Hail for all random tests and getting Jenkins to give better error messages.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/335#issuecomment-214377125:305,message,messages,305,https://hail.is,https://github.com/hail-is/hail/issues/335#issuecomment-214377125,1,['message'],['messages']
Integrability,"I decided to try to do this in two passes since making changes to deploy logic always finnicky on its own. I think this does the right thing though. . Does build.yaml support a way to say ""depend on this step x if we are doing x at all""? Redeploying the website will have to happen after the `deploy` step runs in the future and publishes the latest version of the docs to hail-common.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11294#issuecomment-1024606310:189,depend,depend,189,https://hail.is,https://github.com/hail-is/hail/pull/11294#issuecomment-1024606310,1,['depend'],['depend']
Integrability,"I deleted the LinearRegressionFromHcsCommand and associated tests as it'd fallen out of sync with how hcs evolved for T2D, it's independent of the rest of the PR and I can add this functionality back later (at which point I imagine there will be other changes both to hcs and to the stats interfaces more generally).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/517#issuecomment-236385122:289,interface,interfaces,289,https://hail.is,https://github.com/hail-is/hail/pull/517#issuecomment-236385122,1,['interface'],['interfaces']
Integrability,"I did make sure it renders as I intended, and the round trip test means it produces valid type grammar. but I'm hesitant to add a test for exact characters, since if we want to change spacing or something cosmetic then we have to change the test. I feel the same way about assertRaisesRegex checks -- we should be able to make error messages nicer.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2998#issuecomment-368885849:333,message,messages,333,https://hail.is,https://github.com/hail-is/hail/pull/2998#issuecomment-368885849,1,['message'],['messages']
Integrability,"I did some more tweaking with the memory and got a new exception. ```; ---------------------------------------------------------------------------; Py4JError Traceback (most recent call last); Input In [3], in <cell line: 2>(); 1 ## Import scores table; ----> 2 score_pd = ht_score.to_pandas(). File <decorator-gen-1091>:2, in to_pandas(self, flatten). File ~/mambaforge/lib/python3.9/site-packages/hail/typecheck/check.py:577, in _make_dec.<locals>.wrapper(__original_func, *args, **kwargs); 574 @decorator; 575 def wrapper(__original_func, *args, **kwargs):; 576 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 577 return __original_func(*args_, **kwargs_). File ~/mambaforge/lib/python3.9/site-packages/hail/table.py:3340, in Table.to_pandas(self, flatten); 3338 dtypes_struct = table.row.dtype; 3339 collect_dict = {key: hl.agg.collect(value) for key, value in table.row.items()}; -> 3340 column_struct_array = table.aggregate(hl.struct(**collect_dict)); 3341 columns = list(column_struct_array.keys()); 3342 data_dict = {}. File <decorator-gen-1037>:2, in aggregate(self, expr, _localize). File ~/mambaforge/lib/python3.9/site-packages/hail/typecheck/check.py:577, in _make_dec.<locals>.wrapper(__original_func, *args, **kwargs); 574 @decorator; 575 def wrapper(__original_func, *args, **kwargs):; 576 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 577 return __original_func(*args_, **kwargs_). File ~/mambaforge/lib/python3.9/site-packages/hail/table.py:1231, in Table.aggregate(self, expr, _localize); 1228 agg_ir = ir.TableAggregate(base._tir, expr._ir); 1230 if _localize:; -> 1231 return Env.backend().execute(hl.ir.MakeTuple([agg_ir]))[0]; 1233 return construct_expr(ir.LiftMeOut(agg_ir), expr.dtype). File ~/mambaforge/lib/python3.9/site-packages/hail/backend/py4j_backend.py:99, in Py4JBackend.execute(self, ir, timed); 97 try:; 98 result_tuple = self._jbackend.executeEncode(jir, stream_codec)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12035#issuecomment-1186014691:450,wrap,wrapper,450,https://hail.is,https://github.com/hail-is/hail/issues/12035#issuecomment-1186014691,2,['wrap'],['wrapper']
Integrability,"I did that originally and then switched to the state in the last commit, because of a preference for try/catch blocks to wrap the minimal amount of code for clarity",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4465#issuecomment-425601550:121,wrap,wrap,121,https://hail.is,https://github.com/hail-is/hail/pull/4465#issuecomment-425601550,1,['wrap'],['wrap']
Integrability,"I did the following ; ```; import is.hail._; val hc = HailContext(sc); ```. When I did so, I got this error message . ```; java.util.NoSuchElementException: spark.hadoop.io.compression.codecs; at org.apache.spark.SparkConf$$anonfun$get$1.apply(SparkConf.scala:235); at org.apache.spark.SparkConf$$anonfun$get$1.apply(SparkConf.scala:235); at scala.Option.getOrElse(Option.scala:121); at org.apache.spark.SparkConf.get(SparkConf.scala:235); at is.hail.HailContext$.checkSparkConfiguration(HailContext.scala:94); at is.hail.HailContext$.apply(HailContext.scala:171); ... 50 elided; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1447:108,message,message,108,https://hail.is,https://github.com/hail-is/hail/issues/1447,1,['message'],['message']
Integrability,I did try it out and the error messages are WAY better!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2916#issuecomment-366339845:31,message,messages,31,https://hail.is,https://github.com/hail-is/hail/pull/2916#issuecomment-366339845,1,['message'],['messages']
Integrability,"I didn't like how the scala wrapper was written, so I rewrote it? Should make it easier to use as an endpoint for code-generated stages.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4956:28,wrap,wrapper,28,https://hail.is,https://github.com/hail-is/hail/pull/4956,1,['wrap'],['wrapper']
Integrability,"I didn't look through everything, but skimmed through quickly. This interface is gonna be way nicer.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1811#issuecomment-302128830:68,interface,interface,68,https://hail.is,https://github.com/hail-is/hail/pull/1811#issuecomment-302128830,1,['interface'],['interface']
Integrability,I didn't read your comment carefully enough. Do we want to have all of these dependencies for our project? This is a more general question.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5572#issuecomment-471675774:77,depend,dependencies,77,https://hail.is,https://github.com/hail-is/hail/pull/5572#issuecomment-471675774,1,['depend'],['dependencies']
Integrability,"I discovered this when I tried to run a vcf combiner pipeline. To me, this signals that we need better knowledge of where integration tests live and how to add to them.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5033#issuecomment-449468618:122,integrat,integration,122,https://hail.is,https://github.com/hail-is/hail/pull/5033#issuecomment-449468618,1,['integrat'],['integration']
Integrability,"I do agree that I think all of my proposed interfaces are missing the ability to do things like nest loops, which is part of the reason I'm not sold on any of them.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7614#issuecomment-558331064:43,interface,interfaces,43,https://hail.is,https://github.com/hail-is/hail/pull/7614#issuecomment-558331064,1,['interface'],['interfaces']
Integrability,"I do not know why but /etc triggers errors about:; ```; archive/tar: write too long; ```; Even though /etc is not very large (1.4MB). I suspect there is some symlink; or other nonsense which is breaking Kaniko. The solution, after much trial and error, was simple: copy over directories that do not; cause issues and copy only the necessary files out of etc. A mix of speculation and; binary search lead me to the conclusion that /etc/ld.so.* are the only files necessary; from /etc for python to run correctly. These files tell the kernel how to link python3.7; to the various libraries on which it depends (which live in lib and lib64). Anyway, I've tested that this image can build itself, so it should be good enough for; our purposes.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10399:600,depend,depends,600,https://hail.is,https://github.com/hail-is/hail/pull/10399,1,['depend'],['depends']
Integrability,"I do think the solution you've described in the PR message seems better, though, if we can make this work.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9304#issuecomment-675767918:51,message,message,51,https://hail.is,https://github.com/hail-is/hail/pull/9304#issuecomment-675767918,1,['message'],['message']
Integrability,"I don't disagree. However, we need toString on (scalar) Type because they are used for error messages all over. MatrixTable used to have a bunch of separate types, now it just has a MatrixType. I think some error messages could now use the matrix type. Python also has some matrix type printing logic, these should probably get unified. Once I have printing for the user, it seemed easier to write a (admittedly small) parser than a separate to/from JSON. I admit, apart from user error messages, JSON is natural since that's what we're storing in the metadata file. Do you have a concrete suggestion? I'm not sure quite what to do that's better than this.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2825#issuecomment-362082473:93,message,messages,93,https://hail.is,https://github.com/hail-is/hail/pull/2825#issuecomment-362082473,3,['message'],['messages']
Integrability,I don't especially like renaming the Python hail1 api classes KeyTable -> Table and VariantDataset -> MatrixTable. I basically feel like we should leave that interface untouched until we delete it.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2588#issuecomment-352157852:158,interface,interface,158,https://hail.is,https://github.com/hail-is/hail/pull/2588#issuecomment-352157852,1,['interface'],['interface']
Integrability,I don't know why you'd ever check the position and not the chromosome. Leave the same interface but have them check the chromosome.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/499#issuecomment-235602871:86,interface,interface,86,https://hail.is,https://github.com/hail-is/hail/pull/499#issuecomment-235602871,1,['interface'],['interface']
Integrability,"I don't love what I've had to do with the deploy config stuff. That's in my opinion the most finicky part of this (has already broken multiple times) and it's mostly our fault, because we overload the `namespace` parameter with both identifying the namespace in Kubernetes and signifying whether the environment is prod or not. All I want really is to change the `domain` to a domain and path prefix, and not have the namespace have such an impact on routing. Like what if `namespace` didn't affect routing, but if the deploy config only gave a domain with no path e.g. `hail.is`, we use subdomains so `batch.hail.is`, but if we provided a domain with a path prefix like `internal.hail.is/dgoldste`, we make the batch root `internal.hail.is/dgoldste/batch`?. Alternative: Actually have and use a `base_path` in the deploy config. This would be used in dev and terra environments.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13944#issuecomment-1785575616:451,rout,routing,451,https://hail.is,https://github.com/hail-is/hail/pull/13944#issuecomment-1785575616,2,['rout'],['routing']
Integrability,"I don't see the utility in creating an unnecessary stack trace to see 'method ""variant QC"" requires a split dataset'. I think there is value in having clear, short, stack-trace-free error messages when it's clear what the problem is and what the user needs to do. I think that printing unnecessary stack traces will cause users to view hail even more as a tool in development, and they will be more inclined to ask us about errors rather than try to figure out how whether they made a simple mistake using the interface.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1552#issuecomment-287149290:188,message,messages,188,https://hail.is,https://github.com/hail-is/hail/pull/1552#issuecomment-287149290,4,"['interface', 'message']","['interface', 'messages']"
Integrability,"I don't think I actually understand how artifact and snapshot dependencies work in TeamCity. I thought a build by the main build configuration (the regular CI) would trigger a build of the docs build configuration. This was not the case and I'm not sure why. I've set up the docs build to trigger on any change to master. Unfortunately, we have to `compileScala` twice because these are separate builds. I'll add an issue to clean this up and make it more sensible. There's got to be a right way to do this.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/733#issuecomment-244475645:62,depend,dependencies,62,https://hail.is,https://github.com/hail-is/hail/issues/733#issuecomment-244475645,1,['depend'],['dependencies']
Integrability,"I don't think I'm quite satisfied with this implementation, although I think that it will do the things we need it to do, for the most part. It mostly adheres to the structure that @chrisvittal was implementing in #5228, although I had some questions/notes about implementation/interface and would love some input:. * I'd like to implement (in python) some sort of while loop construct, but I'm not sure what it looks like. I think I'd like to think of that as our primary loop construct since the general recursive loop function can be confusing to start with in terms of what's allowed (what is tail-recursive? what is non-tail-recursive?) if you're just trying to implement some convergence criteria. Some initial thoughts on interface:; ```; 1:; loop = hl.WhileBuilder(i=0, x=0); loop.cond(loop.i < 10); .update(x = loop.x + i, ; i = loop.i + 1); .result(loop.x). 2: ; loop = hl.while_loop(; lambda i, x: i < 10, ; lambda i, x: (x + i, i + 1), ; lambda i, x: x, ; 0, 0). 3:; loop = hl.while_loop(; lambda i, x: ; hl.loop.cond(i < 10); .update(i + 1, x + i); .result(x).; 0, 0); ```; but I'm not sure I really like any of them.; * the scoping for `Recur` is difficult to check and enforce.; * It's difficult to check if a TailLoop is invalidly attempting to recur a function from a different loop (in a nested environment), except by the type signature. I think I could give each loop a name so that `Recur` unambiguously refers to a loop defined in the surrounding scope, mostly treating `Recur` as something of a function reference.; * The code generation is rather inconsistent, since the `Recur` node technically has the same type as the return type of the function, but the code generated needs to be a jump node with no actual value (which makes the generated EmitTriplet look a lot like it has type TVoid!); * @patrick-schultz proposed a similar design, but with two additional types to make the difference between the type of the `Recur` concept and the actual return type more explicit. I ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7614:278,interface,interface,278,https://hail.is,https://github.com/hail-is/hail/pull/7614,2,['interface'],['interface']
Integrability,"I don't think there's any good reason why the other pip packages are in a separate RUN step. In fact, using one pip invocation should ensure we get compatible versions whereas what we have now doesn't ensure that. I have no objections to using the hail/python/pinned-requirements.txt. If we install that and all these extra dependencies in one layer then install the hail wheel after (without -U), I *think* it should see all the dependencies are met and just install the hail package.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12301#issuecomment-1275353805:324,depend,dependencies,324,https://hail.is,https://github.com/hail-is/hail/pull/12301#issuecomment-1275353805,2,['depend'],['dependencies']
Integrability,"I don't think we should merge this. This PR got a bit out of hand and then died when I changed focus to the query service. There are two distinct changes that I had hoped to unify: nicely rendered dev-docs *and* generated docs for gear, web_common, & hailtop. I got stuck after getting each one rendering OK but not integrated with one another. I also never got to dynamic rendering of the header (i.e. logged in users see batch > batches, etc.). The first thing you should check out are the rendered library docs:; ```; (cd docs && make html && (cd build/html && python3 -m http.server)); # now navigate to http://localhost:8000/; ```; You'll notice the Hail CSS is missing a bunch of styles to make functions render nicely. Take a look at the generated HTML. Sphinx includes a few style tags that we should probably define. I also fixed a few docs issues. There are many more broken references to fix. ![Screen Shot 2021-02-09 at 11 07 34 PM](https://user-images.githubusercontent.com/106194/107463257-acb15280-6b2b-11eb-8a26-129697009ef8.png); ![Screen Shot 2021-02-09 at 11 07 50 PM](https://user-images.githubusercontent.com/106194/107463256-acb15280-6b2b-11eb-82ff-48b6d83f2f0f.png). Now you should check out the rendered dev docs:; ```; (cd site && make render && cd docs && python3 -m http.server); ```; ![Screen Shot 2021-02-09 at 11 11 07 PM](https://user-images.githubusercontent.com/106194/107463544-555fb200-6b2c-11eb-9b23-39f66f0f4b12.png); ![Screen Shot 2021-02-09 at 11 11 16 PM](https://user-images.githubusercontent.com/106194/107463545-555fb200-6b2c-11eb-9901-5af07effc814.png). ---. What's left to do?. 1. Make the header dynamic (i.e. logged-in users see their name, etc.)?; 2. Move the dev-docs and the python library docs into one location.; 3. Finish modifying `site` so that it hosts two servers: `hail.is` and `docs.hail.is`. `docs.hail.is` displays some landing page from which we can navigate to dev-docs or python library docs.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10027:316,integrat,integrated,316,https://hail.is,https://github.com/hail-is/hail/pull/10027,1,['integrat'],['integrated']
Integrability,"I don't understand your first sentence. In the case of a hybrid query and batch script, using Hail Query is totally kosher! What I don't want is dependence on a JVM and Hail Query just to check if a file exists in Google Cloud Storage for a script that is otherwise independent of Hail Query.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9194#issuecomment-671516865:145,depend,dependence,145,https://hail.is,https://github.com/hail-is/hail/pull/9194#issuecomment-671516865,1,['depend'],['dependence']
Integrability,"I feel a bit like a cheat here since there's been a fair bit of work since you last reviewed. Most of it was fixes of tiny bugs that the CI revealed. There was [one, kind of notable, change](https://github.com/hail-is/hail/pull/5194/commits/f95e4e0ff1cdd2865cf703aa27f780c7f162316c). I removed Spark from the Dockerfile. It is no longer necessary because the pip install will pull the correct version of Spark. To avoid pulling Spark on each PR build, I cache 2.2.0 (and all our other pip dependencies) in the hail conda env in the docker image. Doing this required that I move our requirements into a requirements file which is parameterized by spark version. A good follow up PR would be to either a) entirely remove dependency on conda or b) generate the conda `environment.yml` from `requirements.txt.in`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5194#issuecomment-460305333:489,depend,dependencies,489,https://hail.is,https://github.com/hail-is/hail/pull/5194#issuecomment-460305333,2,['depend'],"['dependencies', 'dependency']"
Integrability,"I feel like I must be missing some complexity here. I think in the past, the complexity was if we allowed submitting to the same batch from a different process and trying to have dependencies on previously submitted jobs.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12381:179,depend,dependencies,179,https://hail.is,https://github.com/hail-is/hail/pull/12381,1,['depend'],['dependencies']
Integrability,"I feel like I probably ought to have more tests, but wasn't sure what else to include. I didn't want to make the `StreamLen` tests depend on the correctness of more complicated IR nodes like `StreamZip`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8783#issuecomment-628105025:131,depend,depend,131,https://hail.is,https://github.com/hail-is/hail/pull/8783#issuecomment-628105025,1,['depend'],['depend']
Integrability,"I figured out the cyclic import. I have the code two ways now. Take your pick:. ```; batch/; gcp/; cloud.py # contains constructor functions for CloudDriver, CloudDisk etc.; utils.py. # has general utils plus the InstanceConfig constructor functions (this is what caused the cyclic import when they were in the same file as the CloudDriver constructor); ```. OR. ```; batch/; cloud/; gcp/; cloud.py. # contains constructor functions for CloudDriver etc.; instance_config.py # has interfaces for constructing InstanceConfig (this can't be in the same file as the CloudDriver constructor function due to cyclic import.; utils.py. # old utils functions; ```. If you're going to carefully go through the code, do you want the other two sets of changes in this PR? Then all of Batch will be completely cloud-agnostic and not just the driver. Up to you how you want me to structure this.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10920#issuecomment-951332977:480,interface,interfaces,480,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-951332977,1,['interface'],['interfaces']
Integrability,"I figured, noticed the double post :). ```; The exception in your above message is coming from the Apply node being inferred as a PVoid by your case _ => PVoid code. Writing the rule for the apply node should fix that.; ```. Right. It's just that I tried to write the rule, and quickly ran across the fact that Seq[IR] would be inferred such that the first IR had a different type from the 2nd or Nth. This is what I had written:. ```scala; case ApplySpecial(name, irs) => {; val it = irs.iterator; val head = it.next(); head.inferSetPType(env). while(it.hasNext) {; val value = it.next(). value.inferSetPType(env); assert(value.pType2 == head.pType2); }. head.pType2; }; ```. With the result in one case that `head.pType2` was bool, `value.pType2` was something else. Without a type union, it wasn't clear to me what to return. One possibility was that I shouldn't handle this node, so I started with that possibility, which I know understand isn't right. The other was that the implementation was wrong, and my first guess there is that one of the IRs dictates the type (say the first), the 2nd is that there is a simple precedence rule, the 3rd is that the type inference procedure has some branching logic over the collection.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6594#issuecomment-513007861:72,message,message,72,https://hail.is,https://github.com/hail-is/hail/pull/6594#issuecomment-513007861,2,['message'],['message']
Integrability,"I fixed something that was definitely broken, and then added scala dependencies that didn't fix scala being missing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6181#issuecomment-497421947:67,depend,dependencies,67,https://hail.is,https://github.com/hail-is/hail/pull/6181#issuecomment-497421947,1,['depend'],['dependencies']
Integrability,"I fixed the part where the behavior of locus_windows was changed, and now the behavior should be consistent with the previous version. (Some of the error types were changed, but I don't really see that as a breaking interface change).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5690#issuecomment-477306260:216,interface,interface,216,https://hail.is,https://github.com/hail-is/hail/pull/5690#issuecomment-477306260,1,['interface'],['interface']
Integrability,"I get the following version: ; ``; $ java -version; java version ""1.8.0_111""; Java(TM) SE Runtime Environment (build 1.8.0_111-b14); Java HotSpot(TM) 64-Bit Server VM (build 25.111-b14, mixed mode); ``; I'm using virtualenv to run python 2.7 and I think I installed all the dependencies and python libraries that were required. Any further idea on what I can do to get this to work?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2062#issuecomment-319675148:274,depend,dependencies,274,https://hail.is,https://github.com/hail-is/hail/issues/2062#issuecomment-319675148,1,['depend'],['dependencies']
Integrability,"I got sick of having things fail without sufficient debug information. This ensures; that the batch status and every job status and log is presented, untruncated, in; the assertion message from pylint.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10953:181,message,message,181,https://hail.is,https://github.com/hail-is/hail/pull/10953,1,['message'],['message']
Integrability,I got the error message while importing VCFs in dataflow01. `hail -l /medpop/afib/schoi/projects/TOPMed/Script/log/TopMed.Chr22.QC.vds.test.log \; importvcf file:///medpop/afib/schoi/projects/TOPMed/Data/BROAD/Link/Chr22/TopMed_8k.853.vcf.bgz \ splitmulti \; write -o TOPMed.6998.chr22.vds`. `[Stage 0:====================================================> (52 + 4) / 56]hail: info: Ordering unsorted dataset with network shuffle; hail: importvcf: caught exception: java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.Integer; at scala.runtime.BoxesRunTime.unboxToInt(BoxesRunTime.java:106); at org.apache.spark.rdd.OrderedRDD$$anonfun$calculateKeyRanges$1.apply(OrderedRDD.scala:143); at org.apache.spark.rdd.OrderedRDD$$anonfun$calculateKeyRanges$1.apply(OrderedRDD.scala:142); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108); at org.apache.spark.rdd.OrderedRDD$.calculateKeyRanges(OrderedRDD.scala:142); at org.apache.spark.rdd.OrderedRDD$.apply(OrderedRDD.scala:117); at org.broadinstitute.hail.RichPairRDD$.toOrderedRDD$extension(Utils.scala:482); at org.broadinstitute.hail.io.vcf.LoadVCF$.apply(LoadVCF.scala:267); at org.broadinstitute.hail.driver.ImportVCF$.run(ImportVCF.scala:85); at org.broadinstitute.hail.driver.ImportVCF$.run(ImportVCF.scala:31); at org.broadinstitute.hail.driver.Command.runCommand(Command.scala:239); at org.broadinstitute.hail.driver.Main$.runCommand(Main.scala:120); at org.broadinstitute.hail.driver.Main$$anonfun$runCommands$1$$anonfun$1.apply(Main.scala:144); at org.broadinstitute.hail.driver.Main$$anonfun$runCommands$1$$anonfun$1.apply(Main.scala:144); at org.broadinstitute.hail.Utils$.time(Utils.scala:1282); at org.broadinstitute.hail.driver.Main$$anonfun$runCommands$1.apply(Main.scala:143); at org.broadinstitute.hail.driver.Main$$anonfun$runCommands$1.apply(Main.scala:137); at scala.collection.IndexedSeqOptimized$class.fold,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/669:16,message,message,16,https://hail.is,https://github.com/hail-is/hail/issues/669,1,['message'],['message']
Integrability,"I guess it depends whether you want up to date or just compatible, the maintainers seem to be of the opinion that you should either always update the lock file immediately or set upper bounds if you're not ok with a certain upgrade, seen [here](https://github.com/jazzband/pip-tools/issues/882). Continuous work, but maybe the right way to go honestly. In that case trivially make a build.yaml step that asserts the lock file is valid and up to date.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11842#issuecomment-1131859471:11,depend,depends,11,https://hail.is,https://github.com/hail-is/hail/pull/11842#issuecomment-1131859471,1,['depend'],['depends']
Integrability,"I had a choice on how to implement this and I decided to add a JobTask class that takes care of a single pod and the Job changes to just be a manager of the pods. However, I could have done it all within the Job if you think that is clearer. Happy to refactor if needed. Please look and see if I have enough tests. The tests are passing, but I'm getting this error message. Is this expected or a bug in my code? . ```; INFO	| 2019-02-22 11:48:48,126 	| _internal.py 	| _log:87 | 127.0.0.1 - - [22/Feb/2019 11:48:48] ""POST /pod_changed HTTP/1.1"" 204 -; INFO	| 2019-02-22 11:48:48,210 	| _internal.py 	| _log:87 | 127.0.0.1 - - [22/Feb/2019 11:48:48] ""POST /pod_changed HTTP/1.1"" 204 -; INFO	| 2019-02-22 11:48:48,833 	| server.py 	| mark_complete:190 | wrote log for job 61, main task to logs/job-61-main.log; INFO	| 2019-02-22 11:48:48,845 	| server.py 	| set_state:272 | job 61 changed state: Created -> Complete; INFO	| 2019-02-22 11:48:48,851 	| server.py 	| parent_new_state:287 | parent 61 successfully complete for 63; INFO	| 2019-02-22 11:48:48,857 	| server.py 	| parent_new_state:292 | all parents successfully complete for 63, creating pod; INFO	| 2019-02-22 11:48:48,918 	| server.py 	| create_pod:135 | created pod name: job-63-main-qqwb2 for job 63, main task; INFO	| 2019-02-22 11:48:48,929 	| server.py 	| mark_complete:330 | job 61 complete, exit_code 0; INFO	| 2019-02-22 11:48:48,995 	| _internal.py 	| _log:87 | 127.0.0.1 - - [22/Feb/2019 11:48:48] ""POST /pod_changed HTTP/1.1"" 204 -; [2019-02-22 11:48:49,043] ERROR in app: Exception on /test [POST]; Traceback (most recent call last):; File ""//anaconda/envs/hail-batch/lib/python3.6/site-packages/flask/app.py"", line 1982, in wsgi_app; response = self.full_dispatch_request(); File ""//anaconda/envs/hail-batch/lib/python3.6/site-packages/flask/app.py"", line 1615, in full_dispatch_request; return self.finalize_request(rv); File ""//anaconda/envs/hail-batch/lib/python3.6/site-packages/flask/app.py"", line 1630, in finalize_request",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5418:365,message,message,365,https://hail.is,https://github.com/hail-is/hail/pull/5418,1,['message'],['message']
Integrability,I had problems with calling the Make rules that create batch worker images; but I see that you already remove them and created a script that doesn't depend on config.mk: https://github.com/hail-is/hail/blob/main/batch/gcp-create-worker-image.sh. Thanks for a response! I guess I don't have to worry about config.mk :),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11371#issuecomment-1045522380:149,depend,depend,149,https://hail.is,https://github.com/hail-is/hail/pull/11371#issuecomment-1045522380,1,['depend'],['depend']
Integrability,"I have a branch where I've upgraded the dependency to libsimdpp-2.1 and resolved issues around depreciation warnings, this does solve the issue. We would need to discuss if we want to upgrade the dependency, and benchmark against the new version to see if it causes any performance regression. Branch is [here](https://github.com/chrisvittal/hail/tree/libsimdpp-2.1)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3955#issuecomment-406297780:40,depend,dependency,40,https://hail.is,https://github.com/hail-is/hail/issues/3955#issuecomment-406297780,2,['depend'],['dependency']
Integrability,"I have a implemented a highly concurrent Python asyncio filesystem that supports GCS and the local file system (and soon S3). It is my intention to ultimately replace the hadoop_* functions with this. The new thing feels pretty fast: copy benchmarks 2-5x faster than gsutil for example, esp. when working with lots of files. Some remarks:; - It is designed to do the minimal number of system calls/API calls per operation so there is serial loops like this anywhere in the code.; - Our short term goal is to use this for the input/output steps in Batch.; - It doesn't support Hadoop (and I'm not super exciting about maintaining that).; - Some things will be much faster because no round trip the JVM. ; - The interface is fully async, so we'll need to build some wrappers if you want a synchronous interface. The async interface will get you concurrency within operations (copy, rmtree), the sync interface only gets you currency within operations.; - The list files operation doesn't support globbing yet.; - There are no docs yet.; - Compared to Hadoop/POSIX, the interface is slightly lower level but it was designed to map well onto the filesystems we want to support. There is no `stat`, for example, but is statfile (which requires the input to be a file) and listfiles (which requires it to be a directory), although we could build that.; - I'd say the code is beta and not quite completely solid but getting close. Here is the AsyncFS interface: https://github.com/hail-is/hail/blob/main/hail/python/hailtop/aiotools/fs.py#L70. Here is an example creating a router filesystem that supports GCS and the local file system: https://github.com/hail-is/hail/blob/main/hail/python/test/hailtop/test_aiogoogle.py#L17. I'd be happy to chat more about what would make this attractive for you guys to switch to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10043#issuecomment-778364838:710,interface,interface,710,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778364838,8,"['interface', 'rout', 'wrap']","['interface', 'router', 'wrappers']"
Integrability,"I have diagnosed the root cause of the issue observed by; both Patrick and Chris: incorrect spilling of method parameter variables. This patch makes the bug impossible to replicate using proper interfaces,; though does not fix the underlying issue in LIR. Here's a way to replicate:. ```; val mb = kb.genEmitMethod(""btree_foo"", FastIndexedSeq[ParamType](typeInfo[Long]), typeInfo[Unit]); mb.voidWithBuilder { cb =>; val arg = mb.getCodeParam[Long](1).asInstanceOf[Settable[Long]]. cb.assign(arg, arg + 1L). (0 until 100).foreach { i =>; cb.println(s""i=$i, arg="", arg.toS); }. }; cb.invokeVoid(mb,const( 0L)); ```. called with `0`, this prints `1` until i=84, then starts printing 0 again.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9946:194,interface,interfaces,194,https://hail.is,https://github.com/hail-is/hail/pull/9946,1,['interface'],['interfaces']
Integrability,"I have forthcoming changes that make the router only accept HTTPS. I've been testing this in my dev namespace. Unfortunately, my batch workers cannot speak to my batch instance anymore. The workers speak to internal-gateway who then tries to proxy to my router over HTTP, but nobody is listening on that port. As long as there is a mix of HTTP-only and HTTPS-only routers, internal-gateway needs a way to know which protocol to use with which router. It's temporary because I intend everyone to speak HTTPS.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8490#issuecomment-610644390:41,rout,router,41,https://hail.is,https://github.com/hail-is/hail/pull/8490#issuecomment-610644390,5,"['protocol', 'rout']","['protocol', 'router', 'routers']"
Integrability,"I have hidden options in `lmmreg` PR: https://github.com/hail-is/hail/pull/1064/files#diff-f6dd198b9e7d7ee72f9ff0042b8de368. As we move to the Python interface, we may need another solution. For now I've written ""(advanced)"" at the end of these option descriptions: https://github.com/hail-is/hail/pull/1064/files#diff-b462644505a1aefc479455f4060b415a",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1084#issuecomment-260354398:150,interface,interface,150,https://hail.is,https://github.com/hail-is/hail/pull/1084#issuecomment-260354398,1,['interface'],['interface']
Integrability,"I have no idea what this means. ```; Caused by: is.hail.shadedazure.com.azure.storage.blob.models.BlobStorageException: If you are using a StorageSharedKeyCredential, and the server returned an error message that says 'Signature did not match', you can compare the string to sign with the one generated by the SDK. To log the string to sign, pass in the context key value pair 'Azure-Storage-Log-String-To-Sign': true to the appropriate method call.; If you are using a SAS token, and the server returned an error message that says 'Signature did not match', you can compare the string to sign with the one generated by the SDK. To log the string to sign, pass in the context key value pair 'Azure-Storage-Log-String-To-Sign': true to the appropriate generateSas method call.; Please remember to disable 'Azure-Storage-Log-String-To-Sign' before going to production as this string can potentially contain PII.; Status code 403, (empty body); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13032#issuecomment-1542906073:200,message,message,200,https://hail.is,https://github.com/hail-is/hail/pull/13032#issuecomment-1542906073,2,['message'],['message']
Integrability,I have one thing left to do: I need to rebuild pr-builder because the apiserver test depends on Flask. I'll do that shortly. Rest of it is ready for review.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5386#issuecomment-466480945:85,depend,depends,85,https://hail.is,https://github.com/hail-is/hail/pull/5386#issuecomment-466480945,1,['depend'],['depends']
Integrability,"I haven't looked at this yet, I have a new use case in seqr for the table code. I need to be able to load data as `RDD[Annotation]` without pulling out a sample/variant key (or pull out a totally custom key). Can I do that easily with the new interface?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/462#issuecomment-232252890:243,interface,interface,243,https://hail.is,https://github.com/hail-is/hail/pull/462#issuecomment-232252890,1,['interface'],['interface']
Integrability,"I haven't ported type checking to everything yet -- just hail context. It'll take an hour or two to write it for everything, and I want to wait until after breakingbad is merged to do that to avoid a hellish rebase (also in case you want me to change the interface).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1727:255,interface,interface,255,https://hail.is,https://github.com/hail-is/hail/pull/1727,1,['interface'],['interface']
Integrability,"I haven't tested this error message, as I'm not sure how to replicate the bug scenario, but I think it should work.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11321#issuecomment-1031552946:28,message,message,28,https://hail.is,https://github.com/hail-is/hail/pull/11321#issuecomment-1031552946,1,['message'],['message']
Integrability,I hope this will alleviate some version incompatibilties between SciPy 1.6 and; NumPy >1.15. See [here](https://discuss.hail.is/t/unable-to-import-hail-due-to-numpy-scipy-dependency-mismatch/2285/3).,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10950:171,depend,dependency-mismatch,171,https://hail.is,https://github.com/hail-is/hail/pull/10950,1,['depend'],['dependency-mismatch']
Integrability,"I implemented `cancelled` as a join from the batch table rather than storing redundant information for each job. @akotlar The issue was that all jobs were getting set to cancelled at the same time (and thus notifying children), so always run jobs were all getting run at once neglecting the hierarchy of job dependencies. This is the purpose of having the `cancelled` flag as separate from the `Cancelled` state and is checked in `create_if_ready`. @cseed Can you look and see if this solves the cancel problem we discussed earlier? The faulty PR was this one: https://github.com/hail-is/hail/pull/6128/files",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6341:308,depend,dependencies,308,https://hail.is,https://github.com/hail-is/hail/pull/6341,1,['depend'],['dependencies']
Integrability,"I integrated these changes into https://github.com/broadinstitute/hail/pull/652 except I used block instead of block-inline. I also fixed the line height. (Problem was not using display: block, padding was per-line.) With the line-height fixed, font-size: 0.8em feels too small. How do you think it looks now?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/644#issuecomment-241179566:2,integrat,integrated,2,https://hail.is,https://github.com/hail-is/hail/pull/644#issuecomment-241179566,1,['integrat'],['integrated']
Integrability,"I intend the Tour of Hail Query to assume no genetics knowledge. Indeed, it probably won't ever mention genetics. I removed the sentence-as-bulleted list. I like them, but I'm not the reader here 😉. I intend for each of these documents to be separate files, and people with git experience can skip the git doc. I agree that we use git in one of the typical ways. However, I've learned that Atom's GitHub support doesn't consider the possibility of PRs from one remote to another. We also have some conventions around git messages and stacked PRs that I think are worth getting in writing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10020#issuecomment-776868568:521,message,messages,521,https://hail.is,https://github.com/hail-is/hail/pull/10020#issuecomment-776868568,2,['message'],['messages']
Integrability,I just added a slightly more informative error message. Do you want something more than this?,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9733:47,message,message,47,https://hail.is,https://github.com/hail-is/hail/pull/9733,1,['message'],['message']
Integrability,"I know I said I thought this was a reasonable approach a while ago, but I’ve been thinking hard about this change since last week, and I think I want us to explore a larger set of designs before committing to this strategy. The approach in this PR doubles down on the functional Code[T] structure, which is something we’re trying to move away from with CodeBuilder. I think if I could choose an interface for injecting line numbers from IR in emit it would look something like:. ```scala; class Emit[C](; val ctx: ExecuteContext,; val cb: EmitClassBuilder[C]) { emitSelf =>. val methods: mutable.Map[(String, Seq[Type], Seq[PType], PType), EmitMethodBuilder[C]] = mutable.Map(). private[ir] def emitVoid(cb: EmitCodeBuilder, ir: IR, mb: EmitMethodBuilder[C], region: StagedRegion, env: E, container: Option[AggContainer], loopEnv: Option[Env[LoopRef]]): Unit = {; cb.startLine(ir.lineNumber); ... implementaiton; cb.endLine(ir.lineNumber); ```. How could we make something like this work? Can we get away without every Code[T] knowing the source line? The JVM represents line numbers as an array of (line start bytecode index, line bytecode length) tuples, and I think it will be possible to produce this more easily. I think part of my concern is that I’m not entirely sold by the need to have a whole stack of IR printouts and associated line numbers — right now, the option to get debug information by LIR line number or IR (fully lowered, compile-ready) seems plenty sufficient. Part of my pushback is that I'm hesitant to use Scala implicits pervasively without a careful cost/benefit consideration — they’ve been a source of confusion and frustration in the past, and the intentional paucity of implicits in our current codebase reflects that.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9770#issuecomment-742027249:395,interface,interface,395,https://hail.is,https://github.com/hail-is/hail/pull/9770#issuecomment-742027249,2,"['inject', 'interface']","['injecting', 'interface']"
Integrability,"I like it, in particular I like the use of the adjective ""opposite"". Small proposed tweak to the first sentence, because that sounds similar to ""Both tables must have the same number of keys"", which is included in the description of keys below the portion we're changing. ```; Tables are joined at rows whose key fields have equal values.; The inclusion of a row with no match in the opposite table depends on the; join strategy:. - **inner** -- Only rows with a matching key in the opposite table are included; in the resulting table.; - **left** -- All rows from the left table are included in the resulting table.; If a row in the left table has no match in the right table, then the fields; derived from the right table will be missing.; - **right** -- All rows from the right table are included in the resulting table.; If a row in the right table has no match in the left table, then the fields; derived from the left table will be missing.; - **outer** -- All rows are included in the resulting table. If a row in the right; table has no match in the left table, then the fields derived from the left; table will be missing. If a row in the right table has no match in the left table,; then the fields derived from the left table will be missing.; ```. Below this I had added ""Missing (NA) keys never match"".",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8467#issuecomment-609471408:399,depend,depends,399,https://hail.is,https://github.com/hail-is/hail/pull/8467#issuecomment-609471408,1,['depend'],['depends']
Integrability,"I like this proposal!. On Thu, Jun 29, 2017 at 6:30 PM, Tim Poterba <notifications@github.com>; wrote:. > I think we should do this by default, and remove the ability to annotate; > in this method. The interface is a bit too complicated; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/hail-is/hail/issues/1391#issuecomment-312126181>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ADVxgbSEIxHUor98MljwApai7csY9q2Zks5sJCWHgaJpZM4MB6sU>; > .; >",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1391#issuecomment-312283421:202,interface,interface,202,https://hail.is,https://github.com/hail-is/hail/issues/1391#issuecomment-312283421,1,['interface'],['interface']
Integrability,"I like this. That + depending on the `release` step ensures that we only submit the benchmarks on the exact sha that we release. When we eventually split these steps out into their own release pipeline, we can just delete the file and use the normal `depends_on: release` behavior to achieve the same result.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14398#issuecomment-2027251314:20,depend,depending,20,https://hail.is,https://github.com/hail-is/hail/pull/14398#issuecomment-2027251314,1,['depend'],['depending']
Integrability,"I loaded gcc 4.9 and java 1.8 and now getting a new error while compiling.This is strange as earlier I dint face any issues.Is there some major changes that happened for code compilation. mkdir -p lib/linux-x86-64; g++ -fvisibility=hidden -rdynamic -shared -fPIC -ggdb -O3 -march=native -g -std=c++11 -Ilibsimdpp-2.0-rc2 -Wall -Werror ibs.cpp -o lib/linux-x86-64/libibs.so; :compileScala; missing or invalid dependency detected while loading class file 'package.class'.; Could not access type SparkSession in package org.apache.spark.sql,; because it (or its dependencies) are missing. Check your build definition for; missing or conflicting dependencies. (Re-run with `-Ylog-classpath` to see the problematic classpath.); A full rebuild may help if 'package.class' was compiled against an incompatible version of org.apache.spark.sql.; /gpfs/home/tpathare/haillatest/hail/src/main/scala/is/hail/driver/package.scala:25: overloaded method value save with alternatives:; (javaRDD: org.apache.spark.api.java.JavaRDD[org.bson.Document])Unit <and>; (dataFrameWriter: org.apache.spark.sql.DataFrameWriter[_])Unit <and>; [D](dataset: org.apache.spark.sql.Dataset[D])Unit <and>; [D](rdd: org.apache.spark.rdd.RDD[D])(implicit evidence$5: scala.reflect.ClassTag[D])Unit; cannot be applied to (org.apache.spark.sql.DataFrameWriter); MongoSpark.save(kt.toDF(sqlContext); ^; /gpfs/home/tpathare/haillatest/hail/src/main/scala/is/hail/sparkextras/OrderedRDD.scala:382: class PartitionCoalescer in package rdd cannot be accessed in package org.apache.spark.rdd; override def coalesce(maxPartitions: Int, shuffle: Boolean = false, partitionCoalescer: Option[PartitionCoalescer] = Option.empty); ^; missing or invalid dependency detected while loading class file 'package.class'.; Could not access type DataFrame in package org.apache.spark.sql.package,; because it (or its dependencies) are missing. Check your build definition for; missing or conflicting dependencies. (Re-run with `-Ylog-classpath` to see the pro",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1327#issuecomment-277494831:408,depend,dependency,408,https://hail.is,https://github.com/hail-is/hail/issues/1327#issuecomment-277494831,3,['depend'],"['dependencies', 'dependency']"
Integrability,"I looked at all of these usages. Since the only value types that use the state manager are sets and dicts with locus in the elt/key, it's impossible to construct a failing example for most of these. It's possible for a usage of the RVDContext RVB in `orderedLeftJoinDistinctAndInsert`, but we can replace the implementation of `TableLeftJoinRightDistinct.execute` with a wrapped call to the lowered implementation (not necessary in this PR).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12699#issuecomment-1442231548:371,wrap,wrapped,371,https://hail.is,https://github.com/hail-is/hail/pull/12699#issuecomment-1442231548,1,['wrap'],['wrapped']
Integrability,"I looked over the code and it looks fine, but I'm having trouble understanding the bigger picture of what you're trying to accomplish. I see that you have a new step that creates a test database in the default namespace in the test scope. Then you create the database config secret from this new database. And then deploy_ci depends on it, which makes sense because it needs the secret to be able to create new databases. And this is all only in the test scope. It looks like you cleaned up the build database in the case of dev deploy, which is fine too. > we also create a ""test_instance"" database that will be used as the database instance inside the tests. I don't understand what you wrote here because test_instance database doesn't seem to be used at all. Aren't we still creating the same batch and ci databases? I don't see what the test_instance database is buying you except to be able to make the database config secret that doesn't have the root username and password. I also don't quite understand what's going on in the build_cant_create_database build step. Shouldn't those secrets already exist? Won't this fail?. I'm sorry if I'm missing something obvious.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7683#issuecomment-562887906:325,depend,depends,325,https://hail.is,https://github.com/hail-is/hail/pull/7683#issuecomment-562887906,1,['depend'],['depends']
Integrability,"I love simpler solutions that leverage mutation, but in this case, `ggplot.py` and `geom.py` are circularly dependent if we want to use `GGPlot` in `geom.py`. I return a Boolean indicating if this geom makes the plot static. I do not love it because there is little indication of what that return value means, but I do not see another simple solution.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12336:108,depend,dependent,108,https://hail.is,https://github.com/hail-is/hail/pull/12336,1,['depend'],['dependent']
Integrability,"I made these updates to Scala LocalMatrix as I was building the Python interface, to more closely mirror NumPy functions and name the symbolic operators. I no longer intend to expose LocalMatrix in Python in its current form, but rather to localize BlockMatrix ""directly"" to NumPy and vice versa. Still, LocalMatrix in Scala is a useful local model for how I'll update BlockMatrix to be more NumPy like (e.g. broadcasting), and a step toward building a region-value based ndarray. I think these are good changes, isolated to LocalMatrix, so my preference is to merge them in now.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3071:71,interface,interface,71,https://hail.is,https://github.com/hail-is/hail/pull/3071,1,['interface'],['interface']
Integrability,I merged these branches and resolved one (false) conflict. - [dependabot/pip/docker/async-timeout-4.0.2](/hail-is/hail/tree/dependabot/pip/docker/async-timeout-4.0.2); - [dependabot/pip/docker/pylint-2.12.2](/hail-is/hail/tree/dependabot/pip/docker/pylint-2.12.2); - [dependabot/pip/docker/python-json-logger-2.0.2](/hail-is/hail/tree/dependabot/pip/docker/python-json-logger-2.0.2); - [dependabot/pip/hail/python/avro-gte-1.10-and-lt-1.12](/hail-is/hail/tree/dependabot/pip/hail/python/avro-gte-1.10-and-lt-1.12); - [dependabot/pip/hail/python/dev/nbsphinx-0.8.8](/hail-is/hail/tree/dependabot/pip/hail/python/dev/nbsphinx-0.8.8); - [dependabot/pip/hail/python/dev/pylint-2.12.2](/hail-is/hail/tree/dependabot/pip/hail/python/dev/pylint-2.12.2); - [dependabot/pip/hail/python/dev/sphinxcontrib-katex-0.8.6](/hail-is/hail/tree/dependabot/pip/hail/python/dev/sphinxcontrib-katex-0.8.6); - [dependabot/pip/hail/python/janus-gte-0.6-and-lt-1.1](/hail-is/hail/tree/dependabot/pip/hail/python/janus-gte-0.6-and-lt-1.1); - [dependabot/pip/hail/python/pre-commit-2.17.0](/hail-is/hail/tree/dependabot/pip/hail/python/pre-commit-2.17.0); - [dependabot/pip/hail/python/tabulate-0.8.9](/hail-is/hail/tree/dependabot/pip/hail/python/tabulate-0.8.9),MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11481:62,depend,dependabot,62,https://hail.is,https://github.com/hail-is/hail/pull/11481,20,['depend'],['dependabot']
Integrability,"I mistakenly assumed in #11159 that _all_ dependencies of a requested step should run, but in fact `run_if_requested` steps can be dependents of normal steps.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11193:42,depend,dependencies,42,https://hail.is,https://github.com/hail-is/hail/pull/11193,2,['depend'],"['dependencies', 'dependents']"
Integrability,"I mostly rewrote things to fit this interface, but found a pretty significant problem with it -- we lose our informative error messages. Once we've got an `RDD[Annotation]`, we've lost our line context. This new variant expression interface will be different and challenging with our users, and if there's a problem with the expression, I don't want to get a crash from a requirementError from the Variant constructor without any context, or a match error from a `Chr:Pos:Ref:Alt` with too few colon-split fields.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/462#issuecomment-232824524:36,interface,interface,36,https://hail.is,https://github.com/hail-is/hail/pull/462#issuecomment-232824524,3,"['interface', 'message']","['interface', 'messages']"
Integrability,I moved to TBoolean and simplified the error messages. Back to you.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/511#issuecomment-236389770:45,message,messages,45,https://hail.is,https://github.com/hail-is/hail/pull/511#issuecomment-236389770,2,['message'],['messages']
Integrability,"I need to write the CI integration, but this is my proposed distributed buffer service. It's not resilient to failure at all. `python3 -m dbuf 8`. Will create an 8-process dbuf. You can start follower cores on another machine with `python3 -m dbuf 8 --leader http://LEADER:LEADER_PORT`. For a sense of the performance, the following has 10 co-routines each sending 10k messages of 40k bytes each using a buffer size of 5MB (so each co-routine holds about 5MB in memory before flushing):; ```; # python3 scale_test.py 10 5 40000 10000; create; write aggregate-throughput: 0.333 GiB/s; read aggregate-throughput: 0.213 GiB/s; ```; This is on my laptop over loopback with `python3 -m dbuf 4`. Note that we send 4 GB (10 * 10k * 40k bytes). Each core will buffer 512 MiB, so each server core will flush to disk twice (the scale test explicitly equally distributes the load, so each server core gets 1 GB). I've got a Scala client as well which I'll add in another PR. ---. Update: same as above benchmark but I had to reduce the maximum data sent in one HTTP request to 1MiB:. ```; write aggregate-throughput: 0.194 GiB/s; read aggregate-throughput: 0.135 GiB/s; ```. I can no longer run the test on my laptop due to all the changes I made to dbuf to make it run in k8s. I don't know how much of the reduced throughput is due to the HTTP window size. I'll increase all the NGINX max request sizes at some point and retest.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7523:23,integrat,integration,23,https://hail.is,https://github.com/hail-is/hail/pull/7523,8,"['integrat', 'message', 'rout']","['integration', 'messages', 'routine', 'routines']"
Integrability,I need transitive dependencies for the forthcoming hailjwt library. fyi @akotlar,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5640:18,depend,dependencies,18,https://hail.is,https://github.com/hail-is/hail/pull/5640,1,['depend'],['dependencies']
Integrability,"I needed to make the read function in MatrixRead into a class so I can print/parse as part of the work to replace AST with IR in the Python interface. Also, push down required type into MT decoder. I also use the compiler to build the function to add the entries to the row values (no RegionValueBuilder).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3819:140,interface,interface,140,https://hail.is,https://github.com/hail-is/hail/pull/3819,1,['interface'],['interface']
Integrability,I noticed that this step blew up in the benchmarking PR and thought I'd provide a better error message.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12866:95,message,message,95,https://hail.is,https://github.com/hail-is/hail/pull/12866,1,['message'],['message']
Integrability,"I pushed a few more changes:. I added a nginx server block to handle proxying connections to other namespaces. To map a namespace to the router service IP in gateway, I wrote a new server (router-resolver) that looks up the IP via kubernetes and call it with nginx auth_request. So now you can hit, e.g., blah.cseed.internal.hail.is and it gets forwarded to the cseed:router service.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5873#issuecomment-482439395:137,rout,router,137,https://hail.is,https://github.com/hail-is/hail/pull/5873#issuecomment-482439395,3,['rout'],"['router', 'router-resolver']"
Integrability,"I pushed some additional commits:. - added UnpartitionedRVD, made RVD a cleaner interface; - improved the RVDSpec to/from JSON conversion; - added RVD.write that returns an rvdSpec + stats (partition counts)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2828#issuecomment-362842294:80,interface,interface,80,https://hail.is,https://github.com/hail-is/hail/pull/2828#issuecomment-362842294,1,['interface'],['interface']
Integrability,I put the WIP tag on so it won't merge until you change the commit message.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13434#issuecomment-1684203905:67,message,message,67,https://hail.is,https://github.com/hail-is/hail/pull/13434#issuecomment-1684203905,1,['message'],['message']
Integrability,I put the WIP tag on so you can merge this at your leisure in case there's a hidden dependency somewhere.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10983#issuecomment-947197768:84,depend,dependency,84,https://hail.is,https://github.com/hail-is/hail/pull/10983#issuecomment-947197768,1,['depend'],['dependency']
Integrability,"I read what you wrote as you wanting to wrap RunAggScan in ToStream. I don't have time now, but I will re-run the above with toStream around that node. However, the issues that originally precipitated this observation/fix had nothing to do with RunAggScan. They had to do with the fact that we cannot safely wrap ToStream on something that is TContainer, and then cast ToArray on that. Even if we don't find a bug now, this can't be safe, we need instead to handle each specific type of TContainer (ToArray, ToDict, ToSet)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8063#issuecomment-586610981:40,wrap,wrap,40,https://hail.is,https://github.com/hail-is/hail/pull/8063#issuecomment-586610981,2,['wrap'],['wrap']
Integrability,"I really borked our SQL linting. This PR is short but it catches a few critical problems. 1. The point of `check-sql.sh` is to detect modifications or deletions of SQL files in PRs and fail if such a change occurs. Currently on `main` it does not detect modifications. In #13456, I removed the `delete-<service>-tables.sql` files (intentionally), so added the `^D` to the `grep` regex to indicate that it is OK to have a deletion. What I inadvertently did though is change the rule from ""It's ok to have Additions of any file OR Modifications of estimated-current.sql / delete-<service>-tables.sql"" to ""It's ok to have Additions OR Modifications OR Deletions of estimated-current.sql / delete-<service>-tables.sql"". Really this should have been ""It's ok to have Additions OR Modifications of estimated-current.sql OR Deletions of delete-<service>-tables.sql"". I've changed it to reflect that rule. 2. Rules currently silently *pass* in CI with an error message that git is not installed. In #13437 I changed the image used to run the linters and inadvertently didn't include `git` which `check-sql.sh` needs to run. Here's how it failed in a sneaky way:; - Since `git` is not installed, all calls to `git` fail, but the script is not run with `set -e` so every line of the script is executed; - Since `git` lines fail, `modified_sql_file_list` remains empty; - Since `modified_sql_file_list` remains empty, it appears to the check at the end that everything checked out; - The if statement runs successfully and the script returns with error code 0. To fix this I do a few things:; - installed `git` in the linting image; - `set -e` by default and only enable `set +e` later on when necessary (because we don't want a failed `git diff` to immediately exit); - Do away with the file checking and instead check the error code of the grep. If nothing survives the grep filter, which means there were no illegal changes made, grep will return with exit code 1. So we treat that exit code as a success.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13745:953,message,message,953,https://hail.is,https://github.com/hail-is/hail/pull/13745,1,['message'],['message']
Integrability,"I registered the functions inside and outside the actual aggregation to bring the IR size all the way down to about what it was before. It was maybe 140 before I did that, 30 of which belonged to the string concatenation in the error messages :(. . This also hit a bug that I'm fixing in #6740, so it won't be able to go in before that does.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6730#issuecomment-515198365:234,message,messages,234,https://hail.is,https://github.com/hail-is/hail/pull/6730#issuecomment-515198365,1,['message'],['messages']
Integrability,I removed PSubsetStructSuite because it is testing functionality that won't really be part of the SCode interface and will go away soon.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10047:104,interface,interface,104,https://hail.is,https://github.com/hail-is/hail/pull/10047,1,['interface'],['interface']
Integrability,I removed the info message.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/414#issuecomment-224777755:19,message,message,19,https://hail.is,https://github.com/hail-is/hail/pull/414#issuecomment-224777755,1,['message'],['message']
Integrability,I removed this dependency instead https://github.com/hail-is/hail/pull/11505,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11483#issuecomment-1059610790:15,depend,dependency,15,https://hail.is,https://github.com/hail-is/hail/pull/11483#issuecomment-1059610790,1,['depend'],['dependency']
Integrability,"I replicated the issue with this:; ```; In [1]: grch37 = hl.get_reference('GRCh37'). In [2]: grch37.add_liftover('src/test/resources/grch37_to_grch38_chr20.over.chain.gz', 'GRCh38'). In [3]: i = hl.parse_locus_interval('1:10000-10000'). In [4]: hl.eval(hl.liftover(i)); ```. The issue is this interval is `Interval(10000, 10000, includesStart=True, includesEnd=False)` which has a length of zero. @patrick-schultz Should this be a valid interval? i.e. start==end and includesStart = True and includesEnd = False. Otherwise, if it is a valid Hail interval, then I'll throw a nicer error message.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5174#issuecomment-455713308:586,message,message,586,https://hail.is,https://github.com/hail-is/hail/issues/5174#issuecomment-455713308,1,['message'],['message']
Integrability,I reverted the LSM tree transitive dependency change.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8571#issuecomment-615454573:35,depend,dependency,35,https://hail.is,https://github.com/hail-is/hail/pull/8571#issuecomment-615454573,1,['depend'],['dependency']
Integrability,"I rolled Jackie, but @tpoterba you should check you're happy with the code structure. Adds two hail experimental functions, `encode` and `decode`, which provide a python interface to the encoders and decoders in `RowStore.scala`:. ```; In [16]: import hail as hl ; ...: import hail.experimental as hle . In [17]: hle.encode(hl.literal(1)) ; Out[17]: ('Tuple[Int32]', b'\x07\x00\x00\x00\x02\x00\x00\x00 \x00\x01'). In [18]: hle.encode(hl.literal(1), 'defaultUncompressed') ; Out[18]: ('Tuple[Int32]', b'\x05\x00\x00\x00\x00\x01\x00\x00\x00'). In [19]: hle.encode(hl.literal(1), 'unblockedUncompressed') ; Out[19]: ('Tuple[Int32]', b'\x00\x01\x00\x00\x00'). In [20]: hle.encode(hl.literal([1,2,3,4,5,6])) ; Out[20]: ; ('Tuple[Array[Int32]]',; b'\x0e\x00\x00\x00\t\x00\x00\x00\x90\x00\x06\x00\x01\x02\x03\x04\x05\x06'). In [21]: hle.encode(hl.literal(1), 'defaultUncompressed') ; Out[21]: ('Tuple[Int32]', b'\x05\x00\x00\x00\x00\x01\x00\x00\x00'). In [22]: hle.encode(hl.literal(1), 'unblockedUncompressed') ; Out[22]: ('Tuple[Int32]', b'\x00\x01\x00\x00\x00'). In [23]: v = hl.struct(x=1) ; ...: hle.decode(v.dtype, *hle.encode(v)) ; Out[23]: Struct(x=1); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6360:170,interface,interface,170,https://hail.is,https://github.com/hail-is/hail/pull/6360,1,['interface'],['interface']
Integrability,"I searched [here](https://portal.azure.com#@d6c9f2ea-d3bb-4ca9-8b14-231bac999aa6/blade/Microsoft_OperationsManagementSuite_Workspace/Logs.ReactView/resourceId/%2Fsubscriptions%2F22cd45fe-f996-4c51-af67-ef329d977519%2Fresourcegroups%2Fhaildev%2Fproviders%2Fmicrosoft.operationalinsights%2Fworkspaces%2Fhaildev-logs/source/LogsBlade.AnalyticsShareLinkToQuery/q/H4sIAAAAAAAAA21Sy27CMBC88xVbLiRSqNprUSpVgFpUVCraOzLxJhgcO7LNI2r7710nKRBoDokzmp2dnbVEB6%252FbJb5rPtWZhRiCQnPFciwMpuLwYJ0RKovAQ7ZgCR4RqTOJO5QNEMJXB%252BiRpDjUyjGh0Ez4VFhHqk2PidqhctqUFfUb9is0CG%252BkDdYx4%252BxeuBUdTcJc20gE3X43bJURTaIKTs1G4ePdlXBlGuL4NEFD4eRMqOTc7SgCHwRbooxOxRU4KWpkUFUfSyi0Rg4PDhUHGs%252BUccGMxcXaahUQY%252ByxsM0jbcsyjCv%252BbfPXMn9mC4SC4CLUdha1jKV9GOFKP%252B7fev6h4SFZCJVquElqTQvdj5enbkOVWm%252B2BWyE4rHE1OmtQ3PdH7Q699gUF0avMXF9tmclTHIaKqo%252Fn4zuzBwLbYW%252FAHWaEXyKHGfpUOc5U%252FxCw6DfmU%252Ffc2P%252Fuu%252F8DDpnFzboJaIXQY9jyrbS%252BeN4Pp%252FNeyHpaMPJ%252BLKsmjwj2WQOOXC0yS9DxlTe%252BAIAAA%253D%253D/timespan/2023-04-16T20%3A37%3A28.000Z%2F2023-04-28T20%3A37%3A28.000Z) and couldn't really find anything insightful. It does feel odd that we went that long with so *few* error messages, so maybe some silent error.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13050#issuecomment-1561910142:1156,message,messages,1156,https://hail.is,https://github.com/hail-is/hail/issues/13050#issuecomment-1561910142,1,['message'],['messages']
Integrability,"I see this happening quite a bit. ```; =================================== FAILURES ===================================; ______________________________ Test.test_callback ______________________________. self = <test.test_batch.Test testMethod=test_callback>. def test_callback(self):; app = Flask('test-client'); ; d = {}; ; @app.route('/test', methods=['POST']); def test():; d['status'] = request.get_json(); return Response(status=200); ; server = ServerThread(app); try:; server.start(); ; j = self.batch.create_job(; 'alpine',; ['echo', 'test'],; attributes={'foo': 'bar'},; callback=server.url_for('/test')); j.wait(); ; > status = d['status']; E KeyError: 'status'; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5817:330,rout,route,330,https://hail.is,https://github.com/hail-is/hail/issues/5817,1,['rout'],['route']
Integrability,"I see.. if there's a place where it's easy to check for this, I could add an error message",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1806#issuecomment-301753639:83,message,message,83,https://hail.is,https://github.com/hail-is/hail/issues/1806#issuecomment-301753639,1,['message'],['message']
Integrability,"I should have removed it when I was done. I used it to debug a bunch of stuff. I do not understand why, but, by default, no messages are printed. Setting the level to WARNING at least got my `log.warn` messages to print, of which I temporarily added many during debugging of insert. Anyway, I agree with the latter statement.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7990#issuecomment-579967208:124,message,messages,124,https://hail.is,https://github.com/hail-is/hail/pull/7990#issuecomment-579967208,2,['message'],['messages']
Integrability,"I sometimes find the term ""Cost"" on this page confusing, and I think its inferred meaning differs depending on who's reading the page. This page shows what users are spending on the Batch service, not what it is *costing* operators to run the service (since we charge a service fee).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14437:98,depend,depending,98,https://hail.is,https://github.com/hail-is/hail/pull/14437,1,['depend'],['depending']
Integrability,I squashed this in https://github.com/hail-is/hail/pull/14057; more details in the PR message.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13998#issuecomment-1834317436:86,message,message,86,https://hail.is,https://github.com/hail-is/hail/issues/13998#issuecomment-1834317436,1,['message'],['message']
Integrability,"I started hail this way:; ```; hailctl config set batch/billing_project hail; hailctl dev config set default_namespace default; HAIL_QUERY_BACKEND=service ipython; ```; ```ipython; In [1]: In [1]: import hail as hl ; ...: ...: ; ...: ...: temp = hl.utils.range_table(100) ; ...: ...: temp.write('gs://danking/workshop-test/1kg.mt', overwrite=True) ; ...: ; Initializing Hail with default parameters...; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.61-15a45cfb9b0f; LOGGING: writing to /Users/dking/projects/hail/hail-20210202-1642-0.2.61-15a45cfb9b0f.log; Traceback (most recent call last):; File ""<ipython-input-1-92be8dd8c99f>"", line 4, in <module>; temp.write('gs://danking/workshop-test/1kg.mt', overwrite=True); File ""</Users/dking/miniconda3/lib/python3.7/site-packages/decorator.py:decorator-gen-1094>"", line 2, in write; File ""/Users/dking/projects/hail/hail/python/hail/typecheck/check.py"", line 577, in wrapper; return __original_func(*args_, **kwargs_); File ""/Users/dking/projects/hail/hail/python/hail/table.py"", line 1271, in write; Env.backend().execute(ir.TableWrite(self._tir, ir.TableNativeWriter(output, overwrite, stage_locally, _codec_spec))); File ""/Users/dking/projects/hail/hail/python/hail/backend/service_backend.py"", line 103, in execute; bucket=self._bucket); File ""/Users/dking/projects/hail/hail/python/hail/backend/service_backend.py"", line 48, in request; return async_to_blocking(retry_transient_errors(self.async_request, endpoint, **data)); File ""/Users/dking/projects/hail/hail/python/hailtop/utils/utils.py"", line 116, in async_to_blocking; return asyncio.get_event_loop().run_until_complete(coro); File ""/Users/dking/miniconda3/lib/python3.7/asyncio/base_events.py"", line 587, in run_until_complete; return future.result(); File ""/Users/dking/projects/hail/hail/python/hailtop/utils/utils.py"", line 395, in retry_transient_errors; return await f(*args, **kwargs); File ""/Users/dking/projects/hail/hail/python/hail/backen",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:1069,wrap,wrapper,1069,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601,1,['wrap'],['wrapper']
Integrability,"I suppose we have lost to stand up a working CI (b/c it must talk to batcH) without a working router. Or, really, we've lost the ability to do that without copying the service definition from the router's list. I'm OK with this. I agree `make deploy` not also setting up the service definition is out of sync with our previous behavior. I could engineer some system to have one definition but two uses of the `Service` definition but it just doesn't feel important enough to justify it. We rarely if ever deploy the services by hand without deploying the router first.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8504#issuecomment-611711990:94,rout,router,94,https://hail.is,https://github.com/hail-is/hail/pull/8504#issuecomment-611711990,3,['rout'],['router']
Integrability,"I suspect some of the inconsistent behavior we're seeing could be due to memory corruption. So I put in another debugging allocator. What does this do? It makes sure all memory accesses in `Memory` are valid. Also, for each allocation, it puts a sentinel values before and after the allocation, and verifies they are undisturbed on free. How will this work normally? Obviously, this will slow things down. This checked `Memory` will be stored outside the main source, and can be copied over `Memory` to run with checked memory. Once this is passing, I will organize it that way. We should probably always run a version of the tests with memory checking enabled. Am I seeing failures? Yes, a handful. Unfortunately, the failures themselves don't seem context dependent, and when I run all the tests things fail, but when I run the isolated test, they pass. Getting this on the board while we debug it.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8878:758,depend,dependent,758,https://hail.is,https://github.com/hail-is/hail/pull/8878,1,['depend'],['dependent']
Integrability,I switched the docker retry function back to having a wrapper/curried because I got a clash with the kwargs for the name parameter in one function and figured this was safer then trying to rename the parameter to something that will never clash.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8049#issuecomment-592050430:54,wrap,wrapper,54,https://hail.is,https://github.com/hail-is/hail/pull/8049#issuecomment-592050430,1,['wrap'],['wrapper']
Integrability,I tested this by hand by replacing the actual function call with throwing a TimeoutError and making sure both the client and the batch-driver gave the appropriate warning in the log message and didn't proceed.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7850#issuecomment-573430599:182,message,message,182,https://hail.is,https://github.com/hail-is/hail/pull/7850#issuecomment-573430599,1,['message'],['message']
Integrability,I think I've fixed the dataproc dependencies: https://github.com/hail-is/hail/pull/8576,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8571#issuecomment-615453991:32,depend,dependencies,32,https://hail.is,https://github.com/hail-is/hail/pull/8571#issuecomment-615453991,1,['depend'],['dependencies']
Integrability,"I think in an ideal world, every project including ours, our dependencies, and our end users, maintain public wide-open requirements files and private fully-pinned lockfiles. Our users know we need X and Y and they pin whatever versions are compatible with the union of our code and theirs. If we don't want our end users to have to do that, we need to compromise by narrowing the window and accepting the faulted but practical middle-ground. @jmarshall, out of curiosity does your group fully pin your dependencies / do you have any thoughts? It would be interesting to hear from the perspectives of end users but also third-party collaborators.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12906#issuecomment-1520506773:61,depend,dependencies,61,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520506773,2,['depend'],['dependencies']
Integrability,"I think it can still be a little tighter (though it's already a definite improvement over before). How does this sound -- it avoids 'key value' while still being precise:. ```; Tables are joined at rows that have the same value of non-missing key fields.; The inclusion of a row with no matching key in the opposite table depends on the; join strategy:. - **inner** -- Only rows with a matching key in the opposite table are included; in the resulting table.; - **left** -- All rows from the left table are included in the resulting table.; If a row in the left table has no match in the right table, then the fields; derived from the right table will be missing.; - **right** -- All rows from the right table are included in the resulting table.; If a row in the right table has no match in the left table, then the fields; derived from the left table will be missing.; - **outer** -- All rows are included in the resulting table. If a row in the right; table has no match in the left table, then the fields derived from the left; table will be missing. If a row in the right table has no match in the left table,; then the fields derived from the left table will be missing.; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8467#issuecomment-609470292:322,depend,depends,322,https://hail.is,https://github.com/hail-is/hail/pull/8467#issuecomment-609470292,1,['depend'],['depends']
Integrability,I think it's transitively checking types in the dependencies of hailtop and we probably import hail in hailtop somewhere even though we really ought not to.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11734#issuecomment-1090454046:48,depend,dependencies,48,https://hail.is,https://github.com/hail-is/hail/pull/11734#issuecomment-1090454046,1,['depend'],['dependencies']
Integrability,I think one answer to this would be to just cut out the Java parts and show just the summary. But I also wrote up some further thoughts for how to improve here: https://dev.hail.is/t/better-python-error-messages-idea/201,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9226#issuecomment-672126952:203,message,messages-idea,203,https://hail.is,https://github.com/hail-is/hail/issues/9226#issuecomment-672126952,1,['message'],['messages-idea']
Integrability,"I think one of the following needs to happen:; 1. we document the pc relate setup sufficiently; 2. we precompute results somewhere that PC-Relate runs and test against that. I feel strongly that any PRs that introduce new testing dependencies must also include the relevant information to install those dependencies, probably in the ""getting started developing"" doc or somewhere like that.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3274#issuecomment-377932960:230,depend,dependencies,230,https://hail.is,https://github.com/hail-is/hail/pull/3274#issuecomment-377932960,2,['depend'],['dependencies']
Integrability,"I think the current proposal is to have distributed and ""small"" dimensions, but the distributed dimensions specify their blocking (rather than just being marked ""distributed"" which I think is your proposal). Blocks aren't heterogenous in our current setup (last block can be short) and I think that needs to be clarified in your proposal. Slicing has similar complications. I think the blocking should specify the list of sizes of each block, which makes it closed under slicing. I agree the user interface should do implicit broadcast but in the IR it should be explicit. > If we want to support sparse tensors. I vote we punt on sparse vectors for the time being. (In the sparse case, I think sparsity of the output should be inferred by analysis rather than specified. I think statically knowing the sparsity relationship is going to a rarity.). The key point here is that Patrick's operations are incredibly general so this proposal needs to be paired with an compilation strategy that guarantees his operations are never actually realized directly (e.g. deforestation, fusing operations (e.g. broadcast) into their consumers) while also generating BLAS-level performance. I propose we plan to build against BLAS while we investigate more general codegen strategies. To that end, I've suggested we read up on a few related projects in study group: taco (hat tip Patrick), TensorComprehensions, TVM (tensor virtual machine) and Halide. Might be other relevant ones (TF/XLA?) Few questions to ask:; - Can we steal good ideas for our IR?; - Can we target their IR?; - Can we integrate this with our stack?; - What's the performance like (compile time, runtime)?. We'll need some more prosaic operators:; - constructors: from array with shape, from shape and a function of indices; - get shape.; - index: get an element from a tuple of integers. This is only allowed for local arrays.; - slice: get another ndarray from a sequence of integers, ranges, or array of indices.; - reshape. Maybe local only",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5190#issuecomment-459208120:497,interface,interface,497,https://hail.is,https://github.com/hail-is/hail/pull/5190#issuecomment-459208120,1,['interface'],['interface']
Integrability,"I think the iterator interface would be much nicer, but I don't see how it could work with the per-sample aggregations.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1209#issuecomment-268823332:21,interface,interface,21,https://hail.is,https://github.com/hail-is/hail/pull/1209#issuecomment-268823332,1,['interface'],['interface']
Integrability,"I think the only two things I'm stuck on are:; (a) Do we want users to pass a VEPConfig instead of a `config` dictionary (and add documentation)?; (b) What is the best way to expose the VEP command interface so a user can customize it to their setup? I wanted to do something like this, but I don't see how to do this with the bash script being called with an argument `/bin/bash -c ""...."" csq` or `/bin/bash -c ""..."" vep`. ```python3; vep_85_grch37_command = '''; #!/bin/bash. if [ $VEP_CONSEQUENCE -ne 0 ]; then; vcf_or_json=""--vcf""; else; vcf_or_json=""--json""; fi. export VEP_COMMAND=/vep/vep \; ${VEP_INPUT_FILE:+--input_file $VEP_INPUT_FILE} \; --format vcf \; ${vcf_or_json} \; --everything \; --allele_number \; --no_stats \; --cache \; --offline \; --minimal \; --assembly GRCh37 \; --dir=${VEP_DATA_DIR} \; --plugin LoF,human_ancestor_fa:${VEP_DATA_DIR}/loftee_data/human_ancestor.fa.gz,filter_position:0.05,min_intron_size:15,conservation_file:${VEP_DATA_DIR}/loftee_data/phylocsf_gerp.sql,gerp_file:${VEP_DATA_DIR}/loftee_data/GERP_scores.final.sorted.txt.gz \; -o STDOUT. exec vep.py ""$@""; '''. supported_vep_configs = {; ('GRCh37', 'gcp', 'us-central1', 'hail.is'): VEPConfig(; 'hail-qob-vep-grch37-us-central1',; ['us-central1'],; HAIL_GENETICS_QOB_VEP_GRCH37_IMAGE,; '/vep_data/',; {},; VEPConfig.default_vep_json_typ,; [""/bin/bash"", ""-c"", vep_85_grch37_command, ""vep""],; [""/bin/bash"", ""-c"", vep_85_grch37_command, ""csq_header""],; True,; 'gcp',; ),; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12428#issuecomment-1498124947:198,interface,interface,198,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1498124947,1,['interface'],['interface']
Integrability,I think there's another way in which the union interfaces are bad - they don't reorder top-level struct fields. This isn't especially hard to do and would be a huge QoL improvement. We could also reorder column values automatically.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5406#issuecomment-466484251:47,interface,interfaces,47,https://hail.is,https://github.com/hail-is/hail/issues/5406#issuecomment-466484251,1,['interface'],['interfaces']
Integrability,"I think this code needed to be more complicated than you desired because you're not handling the case where someone can request something like this:. ```python3; j = b.new_job(); j.memory('standard'); j.cpu(1); j.preemptible(False); ```. Your solution would require that any non preemptible job would have to be like this:. ```python3; j = b.new_job(); j.machine_type('n1-standard-1', preemptible=False); ```. I was trying to make things easier for the user, especially once we live in a world where we have amazon, azure, etc. But maybe your interface is fine and we drop the preemptible method and put it on machine_type only. In our design discussions, we had decided that we'd support the former interface and select the correct / cheapest machine type for the user automatically. I think we should have another interface discussion, especially since we might be supporting other clouds, before we finalize this PR.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10283#issuecomment-841410983:543,interface,interface,543,https://hail.is,https://github.com/hail-is/hail/pull/10283#issuecomment-841410983,3,['interface'],['interface']
Integrability,I think this interface is clearer and it will be a necessary change when atomic batch creation causes the batch_id to be None until the entire batch is submitted.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6241:13,interface,interface,13,https://hail.is,https://github.com/hail-is/hail/pull/6241,1,['interface'],['interface']
Integrability,I think this is a bad error message but should still be an error.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4118#issuecomment-411796377:28,message,message,28,https://hail.is,https://github.com/hail-is/hail/pull/4118#issuecomment-411796377,1,['message'],['message']
Integrability,"I think this is a good change, but we should keep in eye out, it is going to increase preemptions and restarts, and will almost certainly expose issues. Poor man's chaos. I will add an option to the batch interface to disable this for longer-running jobs.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6210:205,interface,interface,205,https://hail.is,https://github.com/hail-is/hail/pull/6210,1,['interface'],['interface']
Integrability,"I think this is closer to the right interface, so I want to think about how to get it in while allowing for future changes that don't break interface. I think `RegressionModel` should be initialized with the data of `y` and `covariates`. It should have a `fit` method that returns a struct with the multivariate regression result, which I can add later without breaking interface. The underlying math is already there (e.g. when computing the null model), just a matter of packaging. It'd be nice for this to work on Tables too. And then `regress_rows`, renamed fit_rows, should only take `x` and other parameters like `test` and `block_size`. This is basically how LMM works, but with the multivariate global math all on the python side.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4535#issuecomment-429487447:36,interface,interface,36,https://hail.is,https://github.com/hail-is/hail/pull/4535#issuecomment-429487447,3,['interface'],['interface']
Integrability,I think this is dependent on the authorization PR going in so I can test it's working.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6719#issuecomment-514341053:16,depend,dependent,16,https://hail.is,https://github.com/hail-is/hail/pull/6719#issuecomment-514341053,1,['depend'],['dependent']
Integrability,"I think this is just pip not honoring retries everywhere. The crash appears to occur while downloading a dependency. Sure, I can add a retry to apt as well, though apt seems to be more careful about retrying on its own.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9906#issuecomment-767034755:105,depend,dependency,105,https://hail.is,https://github.com/hail-is/hail/pull/9906#issuecomment-767034755,1,['depend'],['dependency']
Integrability,"I think this is ready for another look but I put a WIP label on it because I don't want to merge it today while there's still workshop things happening. After it goes in I'll run another scale test. The nginx config is mostly just lifted over from router, with a couple small changes. I wasn't able to just proxy to localhost because notebook couldn't figure out which subdomain the request was going to and everything would 404. Adding a Host header fixed the 404, but messed with the requests to notebook pods so instead I added `workshop.local` and `notebook.local` to `/etc/hosts` on the pod, which I kind of like, which did the trick. I needed two ssl configs, one for nginx and one for aiohttp to use internally, and ended up changing the `ssl-config-notebook` secret to `nginx` and creating a second `ssl-config-notebook-python`, but let me know if this seems off.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10204#issuecomment-806087347:248,rout,router,248,https://hail.is,https://github.com/hail-is/hail/pull/10204#issuecomment-806087347,1,['rout'],['router']
Integrability,"I think this is ready. Adds a createDatabase2 step that adds database migrations. What's a database migration? The idea is that a database starts as an empty database and is built up or modified over time by a series of patches or migrations. The database has a version which is the number of migrations applied (starting from 1). This is stored in the table `{database_name}_migration_version`. Each migration involves running a `.sql` or `.py` script. The logic that applies migrations computes a checksum of these scripts and stores them in the database in table `{database_name}_migrations`. When applying migrations again in the future, these checksums are verified. A create database step now looks like (from the CI tests):. ```; - kind: createDatabase2; name: hello2_database; databaseName: hello2; migrations:; - name: create-tables; script: /io/sql/create-hello2-tables.sql; - name: insert; script: /io/sql/insert.py; inputs:; - from: /repo/ci/test/resources/sql; to: /io/; namespace:; valueFrom: default_ns.name; dependsOn:; - default_ns; - copy_files; ```. migrations is a the list of migrations that need to be applied to get the current version. So the idea is, if you want to change the schema of the database, you just add another migration at the end to make the changes you want. After this goes in, I'll make a separate PR to switch everything to this new createDatabase2 step.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7674#issuecomment-562891346:1024,depend,dependsOn,1024,https://hail.is,https://github.com/hail-is/hail/pull/7674#issuecomment-562891346,1,['depend'],['dependsOn']
Integrability,I think this is subsumed by the generic genotype interface + ongoing unsafe work.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/55#issuecomment-316223325:49,interface,interface,49,https://hail.is,https://github.com/hail-is/hail/issues/55#issuecomment-316223325,1,['interface'],['interface']
Integrability,I think this is the bug that will make me create a second JAR target that doesn't depend on Spark. Infuriating.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13018#issuecomment-1541022803:82,depend,depend,82,https://hail.is,https://github.com/hail-is/hail/pull/13018#issuecomment-1541022803,1,['depend'],['depend']
Integrability,"I think this issue is going to arise often with type imputation. As Tim wrote, you can also use --impute and say str(contig) or give it type string which will overwrite the imputation...but it's going to confuse folks. We could expand on the error message, or maybe we should implicitly convert Int to String for contig in the Variant constructor.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/520#issuecomment-236401286:248,message,message,248,https://hail.is,https://github.com/hail-is/hail/issues/520#issuecomment-236401286,1,['message'],['message']
Integrability,"I think this just isn't something you should do. You should use a newer version of hail than 0.2.60. We admittedly had a slightly rough transition into supporting multiple spark versions. It does seem like that message is a warning not an error, so you may be able to remove ` ""-Xfatal-warnings"", ` option from build.gradle and get things to build.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/10831#issuecomment-914325862:211,message,message,211,https://hail.is,https://github.com/hail-is/hail/issues/10831#issuecomment-914325862,1,['message'],['message']
Integrability,"I think tying the reset to the iterator is a mistake. First, iterator is the wrong abstraction here. Whole-stage code generation should use the aggregator/array strategy we're using in Emit to generate nothing, conditionals and loops for map, filter and flatMap, respectively. Ideally read ... do stuff ... write will generate an RDD with no per-element iterators at all. I want to make sure this picture is clear. Second, we want to vectorize in the database sense: we want to process multiple rows together in batches. Then overall structure of a stage is a loop over the batches, and and a loop within batches. Thus, the common case should not be we reset after every element, so I think it's the wrong direction to bake it in. The place where we do this should be interface points with the Spark stack which should be looked at with scorn and derision and as the organizing model. Finally, this points to an ongoing difference in our views about the meaning of context. I see context as serving two purposes (neither of which involve reset):. - First, context is a set of resources needed to process a partition that should be released when the partition is complete. For example, I'm working on GenomicsDB which needs to localize a GenomicsDB shard to a local file that needs to be cleaned up when the partition is complete. - Second, it is a way to tell an iterator where to return its value. (This is the ""current"" region business.). I'd be happy to separate these, but I don't see clean way. In no case do I see generic logic to manage the lifetime of regions (e.g. knowing when to call reset) inside the Context.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3365#issuecomment-381180739:768,interface,interface,768,https://hail.is,https://github.com/hail-is/hail/pull/3365#issuecomment-381180739,2,['interface'],['interface']
Integrability,"I think we might need a different name than ""mount"". In Docker, you can only use the same destination mount once. i.e. you can't have this. `--mount file1:/ --mount file2:/`. . @danking Do you have any thoughts on the interface for this?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13812#issuecomment-1772965095:218,interface,interface,218,https://hail.is,https://github.com/hail-is/hail/pull/13812#issuecomment-1772965095,1,['interface'],['interface']
Integrability,"I think we need this fix:; ```; commit 4cb998d1c7cbc9954d66c6e39d7fd48b0e936f51 (HEAD -> add-version-endpoint); Author: Daniel King <dking@broadinstitute.org>; Date: Mon Mar 22 17:47:22 2021 -0400. fix. diff --git a/build.yaml b/build.yaml; index 7a100adec8..256ca99c91 100644; --- a/build.yaml; +++ b/build.yaml; @@ -86,7 +86,7 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; - make -C hail python/hail/hail_version python/hail/hail_pip_version; + make -C hail python-version-info; git rev-parse HEAD > git_version; outputs:; - from: /io/repo/auth/sql; diff --git a/ci/test/resources/build.yaml b/ci/test/resources/build.yaml; index 3b1df5214c..b994d2787c 100644; --- a/ci/test/resources/build.yaml; +++ b/ci/test/resources/build.yaml; @@ -27,10 +27,13 @@ steps:; mkdir repo; cd repo; {{ code.checkout_script }}; + make -C hail python-version-info; timeout: 300; outputs:; - from: /io/repo; to: /; + - from: /io/repo/hail/python/hail/hail_version; + to: /hail_version; dependsOn:; - inline_image; - kind: buildImage; @@ -52,6 +55,10 @@ steps:; publishAs: service-base; dependsOn:; - base_image; + - copy_files; + inputs:; + - from: /hail_version; + to: /hail_version; - kind: buildImage; name: hello_image; dockerFile: ci/test/resources/Dockerfile; ```; EDIT: updated with more changes",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10085#issuecomment-804418107:982,depend,dependsOn,982,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-804418107,2,['depend'],['dependsOn']
Integrability,"I think we should do this by default, and remove the ability to annotate in this method. The interface is a bit too complicated",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1391#issuecomment-312126181:93,interface,interface,93,https://hail.is,https://github.com/hail-is/hail/issues/1391#issuecomment-312126181,1,['interface'],['interface']
Integrability,"I think we should find a time to discuss this in person if the following explanation doesn't make sense. . Right now, for small batches, we send one REST request to the server to both create the batch and create the jobs. However, if we want one REST request for an update (ideal for the query service and low latency jobs?), we have to use relative job ids because (1) we don't know the absolute start index of the jobs until we've gotten the start id of the update back from the server and (2) the job dependencies can be a mix of known job ids that have already been previously submitted in a previous creation/update. The negative job IDs are a way to deal with a mix of relative ids within an update and known, submitted job ids. We can simplify things if we require all updates make two requests to the server to (1) get the start id and establish the update and then (2) submit new jobs with all absolute job IDs. I'd have to make sure this will actually simplify things because I also ran into a bifurcation in how the job IDs are handled in `BatchBuilder.create_job()`. We currently populate the spec with a job id before we've made any requests to the server. We need to know how many total jobs there are before we can figure out the job ids because the API for creating a new update requires reserving a block of job IDs which then returns the start id. This complexity is because we allow multiple updates to occur simultaneously to a batch.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12010#issuecomment-1215919856:504,depend,dependencies,504,https://hail.is,https://github.com/hail-is/hail/pull/12010#issuecomment-1215919856,2,['depend'],['dependencies']
Integrability,"I think you're slightly misinterpreting this bit:. > Patrick Schultz: I think we have most of the infrastructure needed to have a hail type hold a region. Then a lazily decoding PType can hold a (uniquely owned) region to decode into, invisibly to callers. > Patrick Schultz: In which case I don't think the region argument to loadElement would be needed. > Alex Kotlar:; In which case I don't think the region argument to loadElement would be needed; agreed. > Tim Poterba: ok, I think I'm convinced. In order to do a lazy bgen ptype, we need the *value*, not the type, to hold a region handle. PType doesn't need to be associated with a region -- that's a concept that doesn't really make sense given that PType is really a memory layout spec and codegen interface.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7826#issuecomment-575727189:757,interface,interface,757,https://hail.is,https://github.com/hail-is/hail/issues/7826#issuecomment-575727189,1,['interface'],['interface']
Integrability,"I thought about the memory thing a bit more. I think we should leave the method, add a warning message that says ""We ignore this method now. It was always confusing. If you need more memory select a concomitant core count.""",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9598#issuecomment-714488332:95,message,message,95,https://hail.is,https://github.com/hail-is/hail/pull/9598#issuecomment-714488332,1,['message'],['message']
Integrability,"I thought we were going to load the genome reference upon initializing the HailContext. What happens if someone has two VDS's in the same session, but one is GRCh37 and the other is 38? Then we would have to ensure the reference is set to the correct one for every operation on the vds. It wouldn't be too difficult to add a decorator to the Python VDS to set the global reference on each method call. Then for a Join we can check the references are the same explicitly. If we go this route, I think we should not have the HailContext have the reference parameter, and instead have it as an optional parameter on `import_vcf`, `import_plink`, ...",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1789#issuecomment-302429644:485,rout,route,485,https://hail.is,https://github.com/hail-is/hail/pull/1789#issuecomment-302429644,1,['rout'],['route']
Integrability,"I tried it in both raw python and pyspark and I got a new error. Seem to be a problem with the profile having too small a starting maxPartition size and openCost size. I'm uncertain how to change these parameters even after extensive googling. Any Ideas? Thank you!. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/scratch/PI/dpwall/computeEnvironments/hail/python/hail/context.py"", line 64, in __init__; parquet_compression, min_block_size, branching_factor, tmp_dir); File ""/share/sw/free/spark.2.1.0/spark-2.1.0-bin-hadoop2.7/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/share/sw/free/spark.2.1.0/spark-2.1.0-bin-hadoop2.7/python/lib/py4j-0.10.4-src.zip/py4j/protocol.py"", line 319, in get_return_value; py4j.protocol.Py4JJavaError: An error occurred while calling o18.apply.; : is.hail.utils.package$FatalException: Found problems with SparkContext configuration:; Invalid config parameter 'spark.sql.files.openCostInBytes=': too small. Found 0, require at least 50G; Invalid config parameter 'spark.sql.files.maxPartitionBytes=': too small. Found 0, require at least 50G; 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:5); 	at is.hail.utils.package$.fatal(package.scala:20); 	at is.hail.HailContext$.checkSparkConfiguration(HailContext.scala:104); 	at is.hail.HailContext$.apply(HailContext.scala:162); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:280); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:7",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1507#issuecomment-285792978:734,protocol,protocol,734,https://hail.is,https://github.com/hail-is/hail/pull/1507#issuecomment-285792978,2,['protocol'],['protocol']
Integrability,"I tried to install hail for another researcher here at the NBER. I'm getting errors when trying to run hail because the version of glibc on the server is too old (released in 2010... crazy). Do you know of any way to get around this? I.e. would building hail from source work?. ### Hail version:. `0.2.3`, installed from pip. (Installed Spark 2.2.2 separately and set `SPARK_HOME` accordingly). . ### What you did:. ```py; import hail as hl; mt = hl.balding_nichols_model(3, 100, 100); mt.aggregate_entries(hl.agg.mean(mt.GT.n_alt_alleles())); ```. ### What went wrong (all error messages here, including the full java stack trace):. ```; ERROR: dlopen(""/tmp/libhail6105307987842221044.so""): /lib64/libc.so.6: version `GLIBC_2.14' not found (required by /tmp/libhail6105307987842221044.so); FATAL: caught exception java.lang.UnsatisfiedLinkError: /tmp/libhail6105307987842221044.so: /lib64/libc.so.6: version `GLIBC_2.14' not found (required by /tmp/libhail6105307987842221044.so); java.lang.UnsatisfiedLinkError: /tmp/libhail6105307987842221044.so: /lib64/libc.so.6: version `GLIBC_2.14' not found (required by /tmp/libhail6105307987842221044.so); 	at java.lang.ClassLoader$NativeLibrary.load(Native Method); 	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); 	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1824); 	at java.lang.Runtime.load0(Runtime.java:809); 	at java.lang.System.load(System.java:1086); 	at is.hail.nativecode.NativeCode.<clinit>(NativeCode.java:25); 	at is.hail.nativecode.NativeBase.<init>(NativeBase.scala:22); 	at is.hail.annotations.Region.<init>(Region.scala:34); 	at is.hail.annotations.Region$.apply(Region.scala:16); 	at is.hail.annotations.Region$.scoped(Region.scala:20); 	at is.hail.expr.ir.MatrixMapCols.execute(MatrixIR.scala:1771); 	at is.hail.expr.ir.MatrixMapGlobals.execute(MatrixIR.scala:1832); 	at is.hail.expr.ir.MatrixMapGlobals.execute(MatrixIR.scala:1832); 	at is.hail.expr.ir.MatrixMapCols.execute(MatrixIR.scala:1558); 	at is.hail.expr",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4733:580,message,messages,580,https://hail.is,https://github.com/hail-is/hail/issues/4733,1,['message'],['messages']
Integrability,"I tried to use `Try[T]` but it doesn't permit me to specify the subclass of `Throwable`, as such consumers are limited to the interface of `Throwable`. This seems like a better solution. I added a minimal definition of the `Either` right-biased monad, we can grow it if necessary.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1075#issuecomment-259742354:126,interface,interface,126,https://hail.is,https://github.com/hail-is/hail/pull/1075#issuecomment-259742354,1,['interface'],['interface']
Integrability,"I updated every call site to match the new parameters. This refactoring removes some code duplication, changes a stack trace in `hailctl auth user` to a nice print message, and adds a parameter (`client_session`) which I will use in my forthcoming TCP Proxy PR.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9715:164,message,message,164,https://hail.is,https://github.com/hail-is/hail/pull/9715,1,['message'],['message']
Integrability,"I used `RegionValueVariant` to clean up some of the code, and fixed a couple of bugs from #2451 in the process. I also replaced the `aggregatePartitions` method I wrote in e5f87c3 following @danking's comment, which was defined on `OrderedRDD2`, with `aggregateWithContext`, which is defined on a rich wrapper around `RDD`. I put it in the spark package to get access to private methods, making the implementation cleaner. It is now a simple modification of the implementation of `RDD.aggregate`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2423#issuecomment-347624179:302,wrap,wrapper,302,https://hail.is,https://github.com/hail-is/hail/pull/2423#issuecomment-347624179,2,['wrap'],['wrapper']
Integrability,I used the gsutil storage bandwidth tool and confirmed we get 1.2 Gibit / second upload and download speeds from within a 1 core job and 10 Gi storage. Adding more cores didn't change anything. I ran a test job with the copy tool on a 10 Gi random file and matched 1.2 Gibit / second. I'm wondering if the problem is actually workload-dependent and is based on the number of jobs / number of files. The GCS best practices states the initial capacity is 5000 read requests / second per bucket including list operations until the bucket has time to scale up its capacity. https://cloud.google.com/storage/docs/request-rate#best-practices. ```. ==============================================================================; DIAGNOSTIC RESULTS ; ==============================================================================. ------------------------------------------------------------------------------; Latency ; ------------------------------------------------------------------------------; Operation Size Trials Mean (ms) Std Dev (ms) Median (ms) 90th % (ms); ========= ========= ====== ========= ============ =========== ===========; Delete 0 B 5 43.1 6.4 40.9 50.9 ; Delete 1 KiB 5 44.2 12.7 42.5 58.1 ; Delete 100 KiB 5 44.7 10.4 42.8 56.3 ; Delete 1 MiB 5 41.5 3.7 40.2 45.7 ; Download 0 B 5 74.6 7.9 73.2 84.0 ; Download 1 KiB 5 84.3 15.9 80.6 103.4 ; Download 100 KiB 5 81.9 16.0 82.7 99.6 ; Download 1 MiB 5 90.6 6.5 94.5 96.8 ; Metadata 0 B 5 23.6 2.7 23.6 26.3 ; Metadata 1 KiB 5 25.5 2.1 26.9 27.4 ; Metadata 100 KiB 5 26.2 3.6 27.3 29.9 ; Metadata 1 MiB 5 24.0 3.7 23.3 28.4 ; Upload 0 B 5 98.1 16.6 95.5 117.9 ; Upload 1 KiB 5 116.7 21.8 115.5 142.1 ; Upload 100 KiB 5 116.5 17.8 115.1 135.1 ; Upload 1 MiB 5 168.2 18.5 179.6 185.6 . ------------------------------------------------------------------------------; Write Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Write thr,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:335,depend,dependent,335,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597,1,['depend'],['dependent']
Integrability,"I verified this now works and also verified it fails on current main:; ```; In [2]: from hailtop.hail_logging import *; ...: import logging; ...: configure_logging(); ...: logging.getLogger('foo').info(""hello!""); ...: ; ...: try:; ...: raise ValueError('boom!'); ...: except:; ...: logging.getLogger('foo').exception(""hello!""); {""severity"":""INFO"",""levelname"":""INFO"",""asctime"":""2023-05-10 09:54:36,474"",""filename"":""<ipython-input-2-740eb5422cd6>"",""funcNameAndLine"":""<module>:4"",""message"":""hello!"",""hail_log"":1}; {""severity"":""ERROR"",""levelname"":""ERROR"",""asctime"":""2023-05-10 09:54:36,474"",""filename"":""<ipython-input-2-740eb5422cd6>"",""funcNameAndLine"":""<module>:9"",""message"":""hello!"",""exc_info"":""Traceback (most recent call last):\n File \""<ipython-input-2-740eb5422cd6>\"", line 7, in <module>\n raise ValueError('boom!')\nValueError: boom!"",""hail_log"":1}; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13023#issuecomment-1542260535:478,message,message,478,https://hail.is,https://github.com/hail-is/hail/pull/13023#issuecomment-1542260535,2,['message'],['message']
Integrability,I very much like the interface. :+1:,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4154#issuecomment-414640137:21,interface,interface,21,https://hail.is,https://github.com/hail-is/hail/pull/4154#issuecomment-414640137,1,['interface'],['interface']
Integrability,"I want cancel_after_n_failures to be on a job group. The things a job group doesn't have which maybe it should is:; - callback; - attributes; - updates. I think updates should be on a batch and not part of a job group. An update can add jobs to multiple job groups. Otherwise, the batches table should only have static fields that apply to the entire batch. I think we can do callbacks and attributes on a job group. I added a PATCH endpoint to be able to update a job group's cancel_after_n_attributes as the hailtop.batch interface was going to automatically generate job groups without any configuration settings. As for the full text search, I think prefix searches are faster with full text search than with a regular index, but I could be wrong. We'd have to benchmark it. > If we made batches simpler, does that ease complexity and decrease code duplication? In particular, what if batches didn't contain jobs at all? Instead, a batch contains exactly one job group. That job group contains zero or more job groups. Job groups manage: resource aggregation, cancellation, etc. I believe my plan is basically already doing this. It might not be clear because I didn't put the migrations in. But basically all of the current batches tables are now indexed by batch_id, job_group_id where the current ""batch"" has job_group_id = 1.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163:524,interface,interface,524,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163,2,['interface'],['interface']
Integrability,"I want this for interface purposes, but it's really not usable due to performance. It takes 2 minutes to collect sample.vcf. I think that py4j is the main culprit, but the history stuff also slows it down a ton.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2209:16,interface,interface,16,https://hail.is,https://github.com/hail-is/hail/pull/2209,1,['interface'],['interface']
Integrability,"I want to generate a plot with some hover fields (ID, pop, ...) but this seems really hard in the current interface. I also feel like trying to support expression AND local data in the same function is going to be too confusing.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4510:106,interface,interface,106,https://hail.is,https://github.com/hail-is/hail/issues/4510,1,['interface'],['interface']
Integrability,"I want to respond to some of your objections to unique_ptr. > If you buy into using std::unique_ptr, then everyone who writes or reads the code has to get; their head around the massively confusing and counter-intuitive concept of move semantics (a; form of assignment which modifies the source) and the somewhat bizarre terminology and syntax; used to express that in C++. I agree that move semantics takes getting used to, but I think it is much too integrated into modern C++ to ignore, going far beyond unique_ptr. Writing interfaces that take advantage of move semantics requires understanding rvalue-references in more detail, but for users of those move-enabled interfaces I think the guidelines are easy to teach: a variable will only be modified by moving if it is explicitly tagged with a `std::move`, so all you have to remember is ""after a `std::move(foo)`, the variable `foo` may only be assigned to or deleted."". > And then you get into a whole host of associated design decisions (I'm holding this as a unique_ptr,; but I want to pass it to a function - should I pass it as a raw pointer ? a raw reference ? a reference; to the unique_ptr ?). Keeping in mind the model that letting a function/class `foo` hold a `unique_ptr<Widget>` means explicitly ""`foo` owns this Widget, and is responsible for deleting it or passing ownership somewhere else"", these questions have pretty clear answers. * If a function `bar` takes a `Widget` but isn't concerned with its lifetime management, it should take its argument as a `Widget*` or `Widget&`, with the usual reasoning to choose between them. The caller owns the widget, and the lifetime of `bar` is nested inside that of its caller, so lifetime management isn't an issue.; * If `bar` takes a `Widget` and needs to take ownership, it should take its argument as a `unique_ptr<Widget>`. This serves as documentation that the function is taking over responsibility for deleting the Widget, in a way enforced by the compiler.; * A `unique_ptr<Wid",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3718#issuecomment-396669638:452,integrat,integrated,452,https://hail.is,https://github.com/hail-is/hail/pull/3718#issuecomment-396669638,6,"['integrat', 'interface']","['integrated', 'interfaces']"
Integrability,I want to use this in the PR that uses one git repo checkout step for the whole build. There I'll have one step to clone the repo:; ```; - kind: runImage; name: clone; image:; valueFrom: git_bash_image.image; script: |; mkdir /io/repo; cd /io/repo; {{ code.checkout_script }}; cd ..; tar -cvzf repo.tgz repo; outputs:; - from: /io/repo.tgz; to: /repo.tgz; dependsOn:; - git_bash_image; ```; and every buildImage step will be able to extract only the relevant files from that large tar archive:; ```; - kind: buildImage; name: base_image; dockerFile: docker/Dockerfile.base; contextPath: /; publishAs: base; inputs:; - from: /repo.tgz; to: /; extract:; - docker; - pylintrc; dependsOn:; - clone; ```,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7626:356,depend,dependsOn,356,https://hail.is,https://github.com/hail-is/hail/pull/7626,2,['depend'],['dependsOn']
Integrability,"I wanted to add a tool that can compare more than two benchmark results and hacked this together today.; I decided to use a means of ""registering"" sub-programs with the main parser to eliminate manual arg parsing.; Make sure you clean and build before using this otherwise you may get collisions with stale package directories.; ```bash; $ hail-bench visualize --help; usage: hail-bench visualize [-h] [--metric {mean,median,stdev,max_memory}] [--head HEAD] [--abs] baseline runs [runs ...]. Visualize benchmark results. positional arguments:; baseline baseline benchmark results; runs benchmarks to compare against baseline. options:; -h, --help show this help message and exit; --metric {mean,median,stdev,max_memory}; --head HEAD number of most significant results to take; --abs plot absolute differences; ```; ![image](https://user-images.githubusercontent.com/8223952/231209244-97007be3-f0d7-4077-ab0e-3a551986a502.png)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12856:662,message,message,662,https://hail.is,https://github.com/hail-is/hail/pull/12856,1,['message'],['message']
Integrability,"I wanted to chime in on this briefly because I think it a good example use case and its design will influence many future methods, so it is important to get the design right. Thoughts:. - the underscore stuff is a non-starter in my opinion, and too clever by half. A lot of my feedback on your stuff is guided by the general heuristic that you should start by writing down the code you want, and then decide how to implement. You'd never want to write this _ stuff if you didn't have to. - I'm still not quite sure what tablify does (in part because the name is too clever by half and in part because it doesn't appear to always return tables). - But I think the idea of tablify is something we want, which is to convert (possibly indexed expressions) back into relational objects (Table, MatrixTable) because the latter support a wider set of operations and don't have the ""source mismatch problem"". Tim and I discussed this yesterday and we suggest the following interface:. ```; t = build_table(); .set_globals(x = 5, batch = batch); .set_rows(locus = locus, aaf = aaf); .build(); ```. and. ```; mt = build_table_matix(); .set_globals(dataset = dataset); .set_rows(locus = locus, aaf = aaf); .set_entries(GT = GT); .build(); ```. where the input expressions for each part must all come from the same source (or be compatible, e.g., constants) and the resulting (matrix) table inherits the keys from the original table. I think there is an unresolved question about how to handle potential name conflicts (e.g. a column key named locus).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2852#issuecomment-363841964:965,interface,interface,965,https://hail.is,https://github.com/hail-is/hail/pull/2852#issuecomment-363841964,2,['interface'],['interface']
Integrability,"I wanted to get this feature done quickly for Michael. But I do think we should think about having consistency in route names across services. Like when do we have `/delete` in the route name versus a 'DELETE' request or both?. Another question is whether to add the polling / waiting for the user to be created and if so, where should the polling go? I put it in the auth service for now rather than the CLI because I don't think we expose the state of the user in our API. I tested this as much as I could in my namespace. The most important thing is to make sure the decorators are correct and only developers can create / delete users. I want to add auth tests that make sure the routes are protected, but that's more work than I wanted to do in this PR.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11249:114,rout,route,114,https://hail.is,https://github.com/hail-is/hail/pull/11249,3,['rout'],"['route', 'routes']"
Integrability,"I was able to install hail on my Macbook using a virtenv for python 2.7 and was able to import hail. . However, when I want to create a hail context as outlined in the installation guide, I get the following message: ; ``; Python 2.7.13 (default, Jul 18 2017, 09:16:53) ; [GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from hail import *; >>> hc = HailContext(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""<decorator-gen-422>"", line 2, in __init__; File ""/Users/ih/languages/hail.is/hail/python/hail/typecheck/check.py"", line 226, in _typecheck; return f(*args, **kwargs); File ""/Users/ih/languages/hail.is/hail/python/hail/context.py"", line 68, in __init__; SparkContext._ensure_initialized(); File ""/Users/ih/hailenv/lib/python2.7/site-packages/pyspark/context.py"", line 283, in _ensure_initialized; SparkContext._gateway = gateway or launch_gateway(conf); File ""/Users/ih/hailenv/lib/python2.7/site-packages/pyspark/java_gateway.py"", line 77, in launch_gateway; proc = Popen(command, stdin=PIPE, preexec_fn=preexec_func, env=env); File ""/usr/local/Cellar/python/2.7.13_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/subprocess.py"", line 390, in __init__; errread, errwrite); File ""/usr/local/Cellar/python/2.7.13_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/subprocess.py"", line 1024, in _execute_child; raise child_exception; OSError: [Errno 2] No such file or directory; ``; Any idea what is going on with my installation, did somebody encounter this before already?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2062:208,message,message,208,https://hail.is,https://github.com/hail-is/hail/issues/2062,1,['message'],['message']
Integrability,"I was having trouble figuring out how to handle the token and the attributes in hailtop.batch_client.aioclient.Batch. When we create an update from a Batch that already existed perhaps in a different process, we don't have the attributes and token. I made a contract where `commit_update` always returns the token and attributes regardless of whether the BatchBuilder already has that infromation. However, we could also get that information available lazily and cache the result. In addition, the `n_jobs` returned to the client are the number of jobs that are committed and not the same as the `n_jobs` in the batches table. Things to do before merging:; 1. Get rid of the batch updates additions to the UI2. ; 2. Double check the GCP LogsExplorer to make sure there are no silent error messages especially with regards to cancellation.; 3. Have @danking look over the SQL stored procedure for `commit_batch_update` to make sure that query is going to perform as good as what is possible given the complexity of the check.; 4. Run a test batch with the old client (I just checked out the current version of main). You need to make sure both create and create-fast are accounted for and succeed. I've been using the following script to make sure we're using the slow path in addition to the fast path with a regular small test job:. ```python3; from hailtop.batch import ServiceBackend, Batch; import secrets. backend = ServiceBackend(billing_project='hail'); b = Batch(backend=backend); # 8 * 256 * 1024 = 2 MiB > 1 MiB max bunch size; for i in range(8):; j1 = b.new_job(); long_str = secrets.token_urlsafe(256 * 1024); j1.command(f'echo ""{long_str}"" > /dev/null'); batch = b.run(); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12010#issuecomment-1226043347:258,contract,contract,258,https://hail.is,https://github.com/hail-is/hail/pull/12010#issuecomment-1226043347,2,"['contract', 'message']","['contract', 'messages']"
Integrability,"I was hoping that a greater restructure would lead to a more elegant solution, but after so many footguns it just felt worth making this change. The main point is shelling out in the Makefiles to ask Kubernetes directly for what the global config values are instead of hard-coding them. Specifically, the changes are:. - `KUBERNETES_SERVER_URL` was simply not used anymore in the Makefiles so I deleted it.; - `DOCKER_ROOT_IMAGE`, `INTERNAL_IP`, `IP` and `CLOUD` were only used in a couple Makefiles so I moved the `kubectl` invocation into where they're used so that Makefiles that don't depend on those variables won't incur the cost of querying them; - `DOCKER_PREFIX` and `DOMAIN` were used pretty widely, so I kept them in config.mk because most Makefiles will need to query those values anyway. The added startup time for `make deploy` feels pretty insignificant.; - With this change in place, there's no need to render config.mk anymore so I deleted the shell function for doing so",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11414:589,depend,depend,589,https://hail.is,https://github.com/hail-is/hail/pull/11414,1,['depend'],['depend']
Integrability,I was playing whack-a-mole with randomness tests and adding the GCS_REQUESTER_PAYS_BUCKET flag and the flags interface and testing infrastructure was making it impossible for the VEP tests to pass or the other tests for randomness that were failing. I'll revisit this PR again next week to see if your flags PR actually fixed the issue.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12428#issuecomment-1426177281:109,interface,interface,109,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1426177281,1,['interface'],['interface']
Integrability,I was trying to figure out how to implement the lazy router and just couldn't stand the huge hailtop/aiotools/fs.py file anymore. This is just a reorganization. Should be no actual code changes. Feel free to can this if you think it's unnecessary. FYI @danking,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11059:53,rout,router,53,https://hail.is,https://github.com/hail-is/hail/pull/11059,1,['rout'],['router']
Integrability,"I was trying to filtervariants with an interval_list, and I wrote:. filtervariants list --keep -i /user/satterst/exome_evaluation_regions.v1.interval_list count; (when clearly I should have done filtervariants intervals... instead of filtervariants list...). and it kept getting most of the way done and then failing, with the error message:; hail: count: fatal: invalid variant. Invalid variant? I double-checked that my dataset was OK by running count on the whole thing, telling me that the filtering was the problem, so I created different versions of the interval_list file, trying to figure out if something was specified incorrectly in the file... I was literally troubleshooting the interval_list file for over half an hour before I realized what the problem was. And it's not the first time I've made this mistake. . I humbly submit that a better error message here would be helpful, something like:; filtervariants: fatal: list expected but intervals encountered",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/383:333,message,message,333,https://hail.is,https://github.com/hail-is/hail/issues/383,2,['message'],['message']
Integrability,I went down that route once before and the main issue is how to trigger the change in batch state to completed. I couldn't figure out how to do that correctly and efficiently.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11352#issuecomment-1039624594:17,rout,route,17,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1039624594,1,['rout'],['route']
Integrability,"I wonder if, using a consistent template, we could have CI do this, either by looking at the first comment, or by looking at the commit. Look for ""depends on: #hash"" string, much like GitHub does with ""closes #hash"" in commits.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7417#issuecomment-548480282:147,depend,depends,147,https://hail.is,https://github.com/hail-is/hail/issues/7417#issuecomment-548480282,1,['depend'],['depends']
Integrability,"I would like to load a single vcf that is present in the current working directory. ; `vcf = hc.import_vcf('AID61507_SID56895.Improved.gatk.phased.vcf')`. However, I get the following error message:. `FatalError Traceback (most recent call last)`; `<ipython-input-15-90c48751816a> in <module>()`; `----> 1 vcf = hc.import_vcf('AID61507_SID56895.Improved.gatk.phased.vcf')`; `<decorator-gen-605> in import_vcf(self, path, force, force_bgz, header_file, min_partitions, ``drop_samples, store_gq, pp_as_pl, skip_bad_ad, generic, call_fields)`; `/Users/ih/hail/python/hail/java.pyc in handle_py4j(func, *args, **kwargs)`; ` 110 raise FatalError('%s\n\nJava stack trace:\n%s\n'`; ` 111 'Hail version: %s\n'`; `--> 112 'Error summary: %s' % (deepest, full, Env.hc().version, deepest))`; ` 113 except py4j.protocol.Py4JError as e:`; ` 114 if e.args[0].startswith('An error occurred while calling'):`; `FatalError: HailException: arguments refer to no files`; `Java stack trace:`; `is.hail.utils.HailException: arguments refer to no files`; 	`at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:6)`; 	`at is.hail.utils.package$.fatal(package.scala:25)`; 	`at is.hail.io.vcf.LoadVCF$.globAllVCFs(LoadVCF.scala:105)`; 	`at is.hail.HailContext.importVCFsGeneric(HailContext.scala:558)`; 	`at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)`; 	`at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)`; 	`at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)`; 	`at java.lang.reflect.Method.invoke(Method.java:498)`; 	`at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:237)`; 	`at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)`; 	`at py4j.Gateway.invoke(Gateway.java:280)`; 	`at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)`; 	`at py4j.commands.CallCommand.execute(CallCommand.java:79)`; 	`at py4j.GatewayConnection.run(GatewayConnection.java:214)`; 	`at java.lang.Thread.run(",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2070:190,message,message,190,https://hail.is,https://github.com/hail-is/hail/issues/2070,2,"['message', 'protocol']","['message', 'protocol']"
Integrability,"I'd appreciate thoughts on this interface. Based this on our discussion for group/ungroup. The motivation for this PR is we needed a better way to select fields (including splat) for export when we remove export on `dataset`. . I started to modify the code for AST for ""select"" on Structs, but I found it to be extremely confusing and didn't think it was adding any benefit. Example:. ```; kt.annotate(""Y = select(X, a.b, a.c)""); ```; could just be; ```; kt.annotate(""Y = {b: X.a.b, c: X.a.c}"") ; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2221:32,interface,interface,32,https://hail.is,https://github.com/hail-is/hail/pull/2221,1,['interface'],['interface']
Integrability,"I'd like to give the user the ability to authenticate to our services from within a batch job. The specific use case I need it for is for the query service to be able to cache things with the memory service, but it seems like it could be more broadly applicable. I'm unsure whether this is the correct way to do it. This is currently not exposed in the python user interface (only in BatchClient), but I can pipe the option through in this PR if we want to.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9437:365,interface,interface,365,https://hail.is,https://github.com/hail-is/hail/pull/9437,1,['interface'],['interface']
Integrability,"I'd probably suggest a better error message if possible, but if you don't want to, go ahead and close",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3465#issuecomment-386372161:36,message,message,36,https://hail.is,https://github.com/hail-is/hail/issues/3465#issuecomment-386372161,1,['message'],['message']
Integrability,"I'd propose to do an implicit dependency audit every time you push a new commit. You can still pin versions on published packages, but use unpinned dependencies for CI testing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7299#issuecomment-542208997:30,depend,dependency,30,https://hail.is,https://github.com/hail-is/hail/issues/7299#issuecomment-542208997,2,['depend'],"['dependencies', 'dependency']"
Integrability,"I'll add more tests, and I'm still considering whether to rip out or integrate WriteBlocksRDD for IRM. But given how similar this is to the latter, I'm ready for feedback on the new code.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2559:69,integrat,integrate,69,https://hail.is,https://github.com/hail-is/hail/pull/2559,1,['integrat'],['integrate']
Integrability,I'll look at this once the Lazy Router goes in (#11063),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11072#issuecomment-972974896:32,Rout,Router,32,https://hail.is,https://github.com/hail-is/hail/pull/11072#issuecomment-972974896,1,['Rout'],['Router']
Integrability,I'll pick this one up in medium term since NDArray stuff has involved a lot of fleshing out of numpy integration,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3699#issuecomment-550356741:101,integrat,integration,101,https://hail.is,https://github.com/hail-is/hail/issues/3699#issuecomment-550356741,1,['integrat'],['integration']
Integrability,I'll put point_type back in for the sake of compatibility. This will depend on https://github.com/hail-is/hail/pull/5138 so I'm waiting for that to go in first.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5152#issuecomment-455895729:69,depend,depend,69,https://hail.is,https://github.com/hail-is/hail/pull/5152#issuecomment-455895729,1,['depend'],['depend']
Integrability,I'm a little confused. The snippet in the PR body gives impression that the sphinx injection happens after inserting the headers/footers. Should the raw blocks be the other way around?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10278#issuecomment-813632797:83,inject,injection,83,https://hail.is,https://github.com/hail-is/hail/pull/10278#issuecomment-813632797,1,['inject'],['injection']
Integrability,"I'm attempting to build hail from a clone of this repository's master branch, as a local install on my laptop, under Debian GNU/Linux version 8. The gradle script successfully downloaded and installed the various Java dependencies, but gcc chokes on the C source code. I get:; $ ./gradlew shadowJar; :compileJava UP-TO-DATE; :nativeLib; (cd libsimdpp-2.0-rc2 && cmake .); -- Configuring done; -- Generating done; -- Build files have been written to: /home/rmk/package_sources/hail/hail/src/main/c/libsimdpp-2.0-rc2; mkdir -p lib/linux-x86-64; g++ -fvisibility=hidden -rdynamic -shared -fPIC -ggdb -O3 -march=native -g -std=c++11 -Ilibsimdpp-2.0-rc2 -Wall -Werror ibs.cpp -o lib/linux-x86-64/libibs.so; In file included from ibs.cpp:1:0:; /usr/lib/gcc/x86_64-linux-gnu/4.9/include/popcntintrin.h: In function ‘uint64_t vector_popcnt(uint64vector)’:; /usr/lib/gcc/x86_64-linux-gnu/4.9/include/popcntintrin.h:42:1: error: inlining failed in call to always_inline ‘long long int _mm_popcnt_u64(long long unsigned int)’: target specific option mismatch; _mm_popcnt_u64 (unsigned long long __X); ^; ibs.cpp:14:48: error: called from here; uint64_t count = _mm_popcnt_u64(extract<0>(x));; ^; In file included from ibs.cpp:1:0:; /usr/lib/gcc/x86_64-linux-gnu/4.9/include/popcntintrin.h:42:1: error: inlining failed in call to always_inline ‘long long int _mm_popcnt_u64(long long unsigned int)’: target specific option mismatch; _mm_popcnt_u64 (unsigned long long __X); ^; ibs.cpp:16:41: error: called from here; count += _mm_popcnt_u64(extract<1>(x));; ^; make: *** [lib/linux-x86-64/libibs.so] Error 1; Makefile:52: recipe for target 'lib/linux-x86-64/libibs.so' failed; :nativeLib FAILED. Tim Poterba suggested defining `CXXFLAGS='-DHAIL_OVERRIDE_ARCH -DSIMDPP_ARCH_X86_SSE2'`, but to no avail. So, he suggested I open this issue. I'm running gcc version 4.9.2. Possibly relevant might be the processor I'm running,; $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian;",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1520:218,depend,dependencies,218,https://hail.is,https://github.com/hail-is/hail/issues/1520,1,['depend'],['dependencies']
Integrability,I'm convinced this is entirely possible in the 0.2 python interface,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/332#issuecomment-422364559:58,interface,interface,58,https://hail.is,https://github.com/hail-is/hail/issues/332#issuecomment-422364559,1,['interface'],['interface']
Integrability,"I'm curious what people think about this. Did this on one of my flights. Moved all the types to a separate package (so that you can depend on hail types without depending on the AST/IR). When doing this with IntelliJ, I had to move each class to a separate file. This doesn't seem terrible actually because `Type.scala` is rather large and makes IntelliJ angry. On the other hand, we can't seal `Type` if its subclasses are not in the same file. cc: @tpoterba @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2671:132,depend,depend,132,https://hail.is,https://github.com/hail-is/hail/pull/2671,2,['depend'],"['depend', 'depending']"
Integrability,"I'm currently running this branch of CI on a pull request of itself on my own fork of hail, and it nearly passes all tests except for hailtop_batch_* because of requester pays permissions issues and monitoring, because I don't have a service account in my project with all the permissions for broad-ctsa. So unfortunately haven't fully validated that it will _not_ merge a passing PR, but this seemed good enough that we can push it through for azure (since both of these errors are gcp-dependent). If this goes through I can put in a follow-up PR that mirrors the infra resources that CI needs in azure (blob storage, acr permissions, etc.)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11053#issuecomment-964437539:487,depend,dependent,487,https://hail.is,https://github.com/hail-is/hail/pull/11053#issuecomment-964437539,1,['depend'],['dependent']
Integrability,"I'm fine removing copy-paste-tokens. They were for a prototype with Terra. We obviously are pursuing a different approach now. Hmm. I suppose old versions of hailctl have no way to know that the fix is to upgrade to a newer version of hailctl? Like, the server can't send a message in the auth failure? We can just ask our local users to upgrade. As long as there's a stable & robust version of query that they can rely on, I think they're happy to upgrade. Which version of hailctl is compatible with new auth?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13531#issuecomment-1767018024:274,message,message,274,https://hail.is,https://github.com/hail-is/hail/issues/13531#issuecomment-1767018024,1,['message'],['message']
Integrability,"I'm going to close this and revisit it after (1) we're handling wrapping for the stream code, and (2) we can generate roughly comparable code.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8148#issuecomment-591935928:64,wrap,wrapping,64,https://hail.is,https://github.com/hail-is/hail/pull/8148#issuecomment-591935928,1,['wrap'],['wrapping']
Integrability,I'm going to start rejecting PRs with non-descriptive names like this (I would have if I caught it!). It makes changelog generation extremely difficult!. I think it's especially important to have good messages when we're force-merging a change.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6168#issuecomment-495293829:201,message,messages,201,https://hail.is,https://github.com/hail-is/hail/pull/6168#issuecomment-495293829,1,['message'],['messages']
Integrability,I'm happy with this as long as the interface is not public in hailtop.batch. I'll look over it once more carefully to make sure nothing has changed since it was first opened and then take care of the rebase.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11944#issuecomment-1302571268:35,interface,interface,35,https://hail.is,https://github.com/hail-is/hail/pull/11944#issuecomment-1302571268,1,['interface'],['interface']
Integrability,I'm happy with this initial interface: typecheck and typecheck_method. Back to you!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1727#issuecomment-301183677:28,interface,interface,28,https://hail.is,https://github.com/hail-is/hail/pull/1727#issuecomment-301183677,1,['interface'],['interface']
Integrability,I'm just going to close the other PR so that we get the overall in (I think here you've approved both the dependent PR and the stacked content),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8920#issuecomment-640990714:106,depend,dependent,106,https://hail.is,https://github.com/hail-is/hail/pull/8920#issuecomment-640990714,1,['depend'],['dependent']
Integrability,"I'm merging this so Sali can use the new interface and better performance, and I am going to add an additional test in another PR.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2544#issuecomment-351097552:41,interface,interface,41,https://hail.is,https://github.com/hail-is/hail/pull/2544#issuecomment-351097552,1,['interface'],['interface']
Integrability,I'm not 100% happy with this interface. I created a thread to discuss collection constructors: http://dev.hail.is/t/collection-constructors-and-lit/72.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2984:29,interface,interface,29,https://hail.is,https://github.com/hail-is/hail/pull/2984,1,['interface'],['interface']
Integrability,I'm not sure of the protocol regarding stacked PRs,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3993#issuecomment-409674187:20,protocol,protocol,20,https://hail.is,https://github.com/hail-is/hail/pull/3993#issuecomment-409674187,1,['protocol'],['protocol']
Integrability,"I'm not sure this is a good idea -- repartition shuffle=False should basically be treated as giving something a maximum number of output partitions, which could be smaller. Still need to figure out where partitions fit into the relational interface.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3756#issuecomment-422360127:239,interface,interface,239,https://hail.is,https://github.com/hail-is/hail/issues/3756#issuecomment-422360127,1,['interface'],['interface']
Integrability,"I'm not sure this is the right fix. The segfault was coming from dgeqrf itself, and it was happening only when `N` is 0 (`M` being 0 was fine). The real issue is that when `N` is 0, LAPACK computes `LWORK` to be 0, meaning we don't actually allocate any memory for the `WORK` array and we segfault. To contrast, if I do a workspace size query for shape `(0, 10)`, I get `320` for `LWORK`. This also seems wrong though, as you shouldn't really need any work space for an empty matrix? . Anyway, the segfault preventing fix was just to make sure LWORK was at least 1. I was hoping you (Patrick) could use Julia interface to play with the LAPACK functions and see what behavior you notice, and if it's consistent with the above.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10227:609,interface,interface,609,https://hail.is,https://github.com/hail-is/hail/pull/10227,1,['interface'],['interface']
Integrability,"I'm not sure what the class loading issues are, there's probably some dependency conflict that's been introduced by pulling in avro. Need to investigate, and possibly relocate avro.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10793#issuecomment-902307018:70,depend,dependency,70,https://hail.is,https://github.com/hail-is/hail/pull/10793#issuecomment-902307018,1,['depend'],['dependency']
Integrability,"I'm not sure where these should live, but I wanted to move them off my laptop and into a place where people can access them, and the repo seems as good of a place as any. There are svgs for a bunch of icons in both blue and white, as well as high-ish resolution images of both versions of the logo and 32x32 icon pngs. I haven't started integrating them into website stuff yet, but I figured that raw images should have a central-ish place to live anyways. All of the images in the PR are as below:; ![all](https://user-images.githubusercontent.com/19789871/91755326-ece1d180-eb98-11ea-83ce-eec6b13ab18f.png)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9382:337,integrat,integrating,337,https://hail.is,https://github.com/hail-is/hail/pull/9382,1,['integrat'],['integrating']
Integrability,"I'm not sure, but it's the only difference I could find between session messages that worked on the front end and the messages not showing up from the driver. I want to test this explicitly, but my namespace is currently messed up in Azure with previous database changes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11094#issuecomment-984813805:72,message,messages,72,https://hail.is,https://github.com/hail-is/hail/pull/11094#issuecomment-984813805,2,['message'],['messages']
Integrability,"I'm obviously sympathetic to this (I've even argued matrix should not have row/col annotations at all!) But I have a few questions about how this will work:. The main interface problem I see is that there are naturally columnless matrices in our domain (sites files). This PR was motivated by some code that Konrad sent me. Are we going to have two versions of VEP and export_vcf, for example?. Second, it seems we can have either interface purity or performance in the short term. I loosely think the latter is better (I would) so we can productively move people off 0.1 even if that means the interface is less stable (e.g. eventually we'll deprecate/remove the drop functions). I want to say I can be convinced otherwise, but changing a range join to a table shuffle seems like a non-starter.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2649#issuecomment-355362499:167,interface,interface,167,https://hail.is,https://github.com/hail-is/hail/pull/2649#issuecomment-355362499,3,['interface'],['interface']
Integrability,I'm personally in favor of this change adding a switch to the protocol. It avoids running the compiler.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11598#issuecomment-1069292016:62,protocol,protocol,62,https://hail.is,https://github.com/hail-is/hail/pull/11598#issuecomment-1069292016,1,['protocol'],['protocol']
Integrability,I'm posting to test that some tests that depend on lapack libraries still pass in CI,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7499:41,depend,depend,41,https://hail.is,https://github.com/hail-is/hail/pull/7499,1,['depend'],['depend']
Integrability,I'm pretty sure GitHub will merge this with the commit message (instead of PR title/comments) since it's a single commit. oh well.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6272#issuecomment-499524823:55,message,message,55,https://hail.is,https://github.com/hail-is/hail/pull/6272#issuecomment-499524823,1,['message'],['message']
Integrability,I'm pretty sure this is why the session messages were gone when trying to configure the pools pages.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11094:40,message,messages,40,https://hail.is,https://github.com/hail-is/hail/pull/11094,1,['message'],['messages']
Integrability,"I'm ready to approve, but I'm not sure why the build is failing, and I don't know what the protocol is now for approving PRs failing tests. Seems like it increases the chances of merging a dumb mistake.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4123#issuecomment-412981153:91,protocol,protocol,91,https://hail.is,https://github.com/hail-is/hail/pull/4123#issuecomment-412981153,1,['protocol'],['protocol']
Integrability,I'm reverting this to 1 so Konrad can get some work done this weekend -- will figure out why the client message size is still failing next week.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6444#issuecomment-504634470:104,message,message,104,https://hail.is,https://github.com/hail-is/hail/pull/6444#issuecomment-504634470,1,['message'],['message']
Integrability,"I'm still looking, but I could only find the logs for PR 13509 as PR 13458 is too old. There are no batch worker logs at all for these two instances, but there are a bunch of sys logs. I didn't see an obvious error message, but there's 1000s of sys log messages in there. https://console.cloud.google.com/logs/query;query=resource.type%3D%22gce_instance%22%0Alabels.%22compute.googleapis.com%2Fresource_name%22:%22batch-worker-pr-13509-default-p2aogbaogrsp-highmem-np-zx6w4%22;summaryFields=:false:32:beginning;cursorTimestamp=2023-08-29T20:39:28Z;aroundTime=2023-08-29T20:16:33.950Z;duration=PT24H?project=hail-vdc",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13554#issuecomment-1736282516:215,message,message,215,https://hail.is,https://github.com/hail-is/hail/issues/13554#issuecomment-1736282516,2,['message'],"['message', 'messages']"
Integrability,"I'm thinking that I want to have this:. Basic setup for the domain, remote_tmpdir, billing_project, and only select one region; ```; hailctl init; ```. Which will prompt for:; 1. GCP project; 2. Hail domain; 3. region; 4. remote tmpdir location. And set:; - domain; - batch/billing_project; - batch/regions; - batch/remote_tmpdir; - batch/backend; - query/backend. And then print out a message with the default settings with instructions on how to change any of the settings and warnings about the configuration by using `hailctl config set ...`. I'll have the autocomplete PR merged (hopefully) by then so we can make that nice. The trial billing project is automatically used and we don't prompt for that. Then we'll have optional flags for components to configure; ```; hailctl init --container-registry --requester-pays-buckets --extra-query-settings --extra-batch-settings; ```; This would prompt for the same as above as well as advanced regions settings, query settings, and create the container registry. And lastly; ```; hailctl config check; ```; which prints warnings about misspecified regions and tmpdirs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13279#issuecomment-1650549451:386,message,message,386,https://hail.is,https://github.com/hail-is/hail/pull/13279#issuecomment-1650549451,1,['message'],['message']
Integrability,"I'm trying to address three separate error messages:. ```; /usr/local/lib/python3.7/dist-packages/aiomysql/cursors.py:458: Warning: This version of MySQL doesn't yet support 'sorting of non-scalar JSON values'; ```. Add more debug info to warning message with the query executed. ```; Traceback (most recent call last):; File ""/usr/local/lib/python3.7/dist-packages/hailtop/utils/utils.py"", line 775, in retry_long_running; return await f(*args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/hailtop/utils/utils.py"", line 812, in loop; await f(*args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/batch/driver/instance_collection.py"", line 181, in monitor_instances; await asyncio.gather(*[check(instance) for instance in instances]); File ""/usr/local/lib/python3.7/dist-packages/batch/driver/instance_collection.py"", line 179, in check; await self.check_on_instance(instance); File ""/usr/local/lib/python3.7/dist-packages/batch/driver/instance_collection.py"", line 157, in check_on_instance; assert last_start_timestamp is not None, f'lastStartTimestamp does not exist {spec}'; ```. Handle case where last_start_timestamp is None. ```; Failed to collect and upload profile: [Errno 32] Broken pipe; ```. This is from the google cloud profiler. I reduced the logging level from error to warning for messages from this module.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10702:43,message,messages,43,https://hail.is,https://github.com/hail-is/hail/pull/10702,3,['message'],"['message', 'messages']"
Integrability,"I'm trying to move all NDArray emission to emitI and update the style a bit, with the plan to eventually overhaul `NDArrayEmitter` to be more in line with the `PCode` interface. This PR updates `NDArrayMatmul` and `NDArrayInv` emit rules to be `emitI` rules, and cleans it up a bit. The diff isn't great, main changes were doing those `emit / flatmap` calls at the top to create `PCode`s, then using the corresponding `PValue`s everywhere I could instead of relying on `PType` methods. All the ""setup"" and missingness check code also went away since the `flatmap`s handle that stuff.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9438:167,interface,interface,167,https://hail.is,https://github.com/hail-is/hail/pull/9438,1,['interface'],['interface']
Integrability,"I'm trying to move our codebase away from relying on the notion of a K8s namespace for routing because this model does not hold in alternative deployment environments such as Terra. Further, having a `-n` option in `hailctl auth` commands is awkward because it can only be used for dev environments yet is visible to users in the help menu. As such, this is a breaking change only for developers. The functionality is not really gone though because you can replace any `hailctl auth … -n dgoldste` with `HAIL_DEFAULT_NAMESPACE=dgoldste hailctl auth …`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14069:87,rout,routing,87,https://hail.is,https://github.com/hail-is/hail/pull/14069,1,['rout'],['routing']
Integrability,I'm unassigning myself after our Zulip discussion on the intended job dependency graph in batch.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4514#issuecomment-437121438:70,depend,dependency,70,https://hail.is,https://github.com/hail-is/hail/issues/4514#issuecomment-437121438,1,['depend'],['dependency']
Integrability,"I've added a second commit that fixes the remainder of #13191, marking the individual JobResourceFiles within the ResourceGroup as `_mentioned` and hence preventing the “undefined resource” BatchException previously observed. (Some of the tests in _hail/python/test/hailtop/batch/test_batch.py_ would also need adjusting to account for the re-imagined `_mentioned`.). Having now studied f6fe19c085a9d9ebee23866961cb582a713cc1ad, which introduced `_mentioned` and this error message hint, IMHO this is a reasonable fix. Apart from the code in _backend.py_ to do with `symlink_input_resource_group`, which I haven't looked at, `_mentioned` is maintained solely to decide whether to emit this BatchException hinting to the user that the resource ought to be defined if you're going to use it in `write_output`. In this case, because the filenames are related, `foo.gz.tbi` may well have been created even though only `foo.gz` appears explicitly in the command text, so it may be a false positive (as in #13191's case) to raise the exception. So the conservative thing to do is to suppress the message in these `declare_resource_group` cases.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13192#issuecomment-1600755633:474,message,message,474,https://hail.is,https://github.com/hail-is/hail/pull/13192#issuecomment-1600755633,2,['message'],['message']
Integrability,I've been letting this cook all day with no unforeseen problems so unless someone redeploys gateway it is the current working version. I've also left the `router-resolver` and `router` changes as two commits in case it might be better to deal with the two services independently.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10207#issuecomment-803130352:155,rout,router-resolver,155,https://hail.is,https://github.com/hail-is/hail/pull/10207#issuecomment-803130352,2,['rout'],"['router', 'router-resolver']"
Integrability,"I've been working on an R interface to Hail through the sparklyr package, with some minor success. However, a recent commit (e7552fd55a9d) is somehow causing Spark to stop prematurely when R calls the `is.hail.table.Table.count()` method. Any clues as to why this might be happening?. <details>; <summary>Stack trace</summary>. 	Error: org.apache.spark.SparkException: Job 3 cancelled because SparkContext was shut down; 	at org.apache.spark.scheduler.DAGScheduler$$anonfun$cleanUpAfterSchedulerStop$1.apply(DAGScheduler.scala:820); 	at org.apache.spark.scheduler.DAGScheduler$$anonfun$cleanUpAfterSchedulerStop$1.apply(DAGScheduler.scala:818); 	at scala.collection.mutable.HashSet.foreach(HashSet.scala:78); 	at org.apache.spark.scheduler.DAGScheduler.cleanUpAfterSchedulerStop(DAGScheduler.scala:818); 	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onStop(DAGScheduler.scala:1732); 	at org.apache.spark.util.EventLoop.stop(EventLoop.scala:83); 	at org.apache.spark.scheduler.DAGScheduler.stop(DAGScheduler.scala:1651); 	at org.apache.spark.SparkContext$$anonfun$stop$8.apply$mcV$sp(SparkContext.scala:1921); 	at org.apache.spark.util.Utils$.tryLogNonFatalError(Utils.scala:1317); 	at org.apache.spark.SparkContext.stop(SparkContext.scala:1920); 	at org.apache.spark.SparkContext$$anonfun$2.apply$mcV$sp(SparkContext.scala:581); 	at org.apache.spark.util.SparkShutdownHook.run(ShutdownHookManager.scala:216); 	at org.apache.spark.util.SparkShutdownHookManager$$anonfun$runAll$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ShutdownHookManager.scala:188); 	at org.apache.spark.util.SparkShutdownHookManager$$anonfun$runAll$1$$anonfun$apply$mcV$sp$1.apply(ShutdownHookManager.scala:188); 	at org.apache.spark.util.SparkShutdownHookManager$$anonfun$runAll$1$$anonfun$apply$mcV$sp$1.apply(ShutdownHookManager.scala:188); 	at org.apache.spark.util.Utils$.logUncaughtExceptions(Utils.scala:1954); 	at org.apache.spark.util.SparkShutdownHookManager$$anonfun$runAll$1.apply$mcV$sp(ShutdownHookManager.sc",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4513:26,interface,interface,26,https://hail.is,https://github.com/hail-is/hail/issues/4513,1,['interface'],['interface']
Integrability,"I've changed BlockMatrix.from(lm: BDM[Double]) so that each executor is transmitted only the blocks it needs (~num_blocks/num_executors) rather than all of them: ""[TorrentBroadcast](https://jaceklaskowski.gitbooks.io/mastering-apache-spark/spark-TorrentBroadcast.html) uses a BitTorrent-like protocol for block distribution (that only happens when tasks access broadcast variables on executors)."". In another branch, I've verified on GCP that distributing and then localizing a 10k x 10k matrix is twice as fast (about 15s vs 30s). Distributing and then writing a 25k by 25k matrix (5GB) with 10+2 standard 8-core workers takes about 30s with the new method but fails for every partition with the old method (months ago I believe I sometimes got the old method to work at this scale using high mem. It's needed for LMM). Note the matrix only has 49 partitions at the new default blockSize so I had more cores than needed for the experiment. I've also added a method to write a local matrix as a block matrix. I use ParRange to parallelize writing from master. Writing and then reading should be the safest way to distribute a big local matrix at the beginning of complex pipelines, and I think it avoids some of the memory overhead associated with broadcast.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2848:292,protocol,protocol,292,https://hail.is,https://github.com/hail-is/hail/pull/2848,1,['protocol'],['protocol']
Integrability,"I've eventually reproduced this. I was a bit thrown that the error message in this issue is different to the one in the op. Here's my work so far:; ```python; # create `variants` heterogeneous array as described in the op; variants = [[""10"", 123, ""G"", ""C""], [""10"", 456, ""T"", ""A""]]. # not sure how the `mt` was created, but not sure it's important for the; # purposes of reproducing the failure; mt = hl.struct(; locus=hl.locus(contig='10', pos=60515, reference_genome='GRCh37'),; alleles=['C', 'T']; ). expr = hl.any(; lambda x:; (mt.locus.contig == hl.literal(x[0])) & \; (mt.locus.position == hl.literal(int(x[1]))) & \; (mt.alleles == hl.literal(x[2:])),; variants; ). hl.eval(expr); ```; This fails in the call to `any` with the following: ; ```; Traceback (most recent call last):; File ""/home/edmund/.local/src/hail/hail/python/hail/expr/expressions/expression_typecheck.py"", line 78, in check; return self.coerce(to_expr(x)); File ""/home/edmund/.local/src/hail/hail/python/hail/expr/expressions/base_expression.py"", line 275, in to_expr; return cast_expr(e, dtype, partial_type); File ""/home/edmund/.local/src/hail/hail/python/hail/expr/expressions/base_expression.py"", line 281, in cast_expr; dtype = impute_type(e, partial_type); File ""/home/edmund/.local/src/hail/hail/python/hail/expr/expressions/base_expression.py"", line 129, in impute_type; t = _impute_type(x, partial_type=partial_type); File ""/home/edmund/.local/src/hail/hail/python/hail/expr/expressions/base_expression.py"", line 179, in _impute_type; ts = {_impute_type(element, partial_type.element_type) for element in x}; File ""/home/edmund/.local/src/hail/hail/python/hail/expr/expressions/base_expression.py"", line 179, in <setcomp>; ts = {_impute_type(element, partial_type.element_type) for element in x}; File ""/home/edmund/.local/src/hail/hail/python/hail/expr/expressions/base_expression.py"", line 182, in _impute_type; raise ExpressionException(""Hail does not support heterogeneous arrays: ""; hail.expr.expressions.base_e",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13046#issuecomment-1624278982:67,message,message,67,https://hail.is,https://github.com/hail-is/hail/issues/13046#issuecomment-1624278982,1,['message'],['message']
Integrability,"I've rebased `jbloom22:lmm_getthisin` onto `jbloom22:py_reg` (which should go in first) and made the parallel modifications (LinearMixedModelCommand is gone, command line relics gone, refactored using RegressionUtils, tests modified to accommodate changing interface, etc). I'll do some command line testing next to be safe.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1064#issuecomment-272765058:257,interface,interface,257,https://hail.is,https://github.com/hail-is/hail/pull/1064#issuecomment-272765058,1,['interface'],['interface']
Integrability,"I've removed the Python `tempfile` approach in favor of adding `new_local_temp_file` to utils and a corresponding function to HailContext in Scala, which currently hardcodes `file:///temp` as the local temp directory. It may be more natural to have a localTmpDir on HailContext like we have tmpDir. ; I see there is a notion of local temp files on TempDir on the Scala side, but it doesn't seem to be used on the Python side. I also don't see if/where we wipe temp files on exit. In any case, I've tested that now it all works nicely on GCP, so ready for feedback/review. I think factoring through `tofile` and `fromfile` is useful for wider interoperability for the same reason that NumPy exposes them, but it's also good if you don’t want to actually load the NumPy array into driver memory but just save it to read/copy later, or to load it multiple time without recomputing the BlockMatrix. And I've provided the simpler interface of `to_numpy` and `from_numpy` for the common case. I suspect that (de)serializing over the network and building the local matrix dominates local read/write, so that using a socket isn't going to do much better. I can profile more closely if/when we feel it's high priority to make this faster still.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3114#issuecomment-372165433:642,interoperab,interoperability,642,https://hail.is,https://github.com/hail-is/hail/pull/3114#issuecomment-372165433,4,"['interface', 'interoperab']","['interface', 'interoperability']"
Integrability,"I've told you before dependabot, this doesn't work",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12477#issuecomment-1319090640:21,depend,dependabot,21,https://hail.is,https://github.com/hail-is/hail/pull/12477#issuecomment-1319090640,1,['depend'],['dependabot']
Integrability,I've updated the PR accordingly — feel free to wordsmith the warning message.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14700#issuecomment-2384183254:69,message,message,69,https://hail.is,https://github.com/hail-is/hail/pull/14700#issuecomment-2384183254,1,['message'],['message']
Integrability,"I've updated this to allow stream consumers to choose an allocation strategy independently of the producer: the producer is written to allocate temporary regions that it owns, as needed, but the consumer can override that behavior to actually put all temporary allocations in a single region. This is implemented via the two abstract interfaces `StagedRegion` and `StagedOwnedRegion`, which have two implementations, one of which can create temporary regions, and one which cannot. The producer is written using the interface, and the consumer passes in one of the concrete implementations, determining the allocation strategy. Currently, only the non-allocating instance is ever used, which generates the same code we did before, so this should have zero run-time effect, even if we continue to update more stream nodes to use smarter region management. We can figure out separately how to introduce the other strategy (use less memory, but with more allocator overhead) in a controlled way.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9106#issuecomment-664591165:334,interface,interfaces,334,https://hail.is,https://github.com/hail-is/hail/pull/9106#issuecomment-664591165,2,['interface'],"['interface', 'interfaces']"
Integrability,"I've worked to improve Skat with regard to usability and code readability / organization and to address issues / bugs that could provoke a crash. - Added group size (number of variants) as a column in the returned key table. - Added an optional maxSize parameter so large groups only return their size rather than filling memory and killing the entire job. - Now computeGramianLargeN is used if n * m exceeds 8000 * 8000 (about 512MB of doubles) or maxSize * maxSize if maxSize is given and smaller than 8000. This seems a reasonable approach for now to prevent OOM without exposing additional memory parameters, but once we have some user feedback I'd like to consider re-implementing computeGramianLargeN to use BLAS3 outer product on blocks of (fewer than m) rows of the n x m matrix rather than inner product on all pairs of columns, which I think will boost speed and make it reasonable to kill the smallN routine entirely (the current largeN case benefits from dot product of sparse vectors when using hard calls, but that also goes away when we move to generic 0.2 and rip out the hardcall/dosage complexity). Then it will be natural for maxSize to control the number of rows in a block. - Added accuracy and iterations parameters to allow users to tune Davies, with R settings for Davies (1e-6, 10k) as default. This allows users to re-run groups with tiny p-values if desired to obtain greater accuracy. The R package runs additional p-value routines that may be faster when the p-value is very small, will keep in mind should this become an issue. - In remark above the Skat class, I've added an overview of how math in paper corresponds to implementation. - Simplified and re-organized the Skat class to cut down on the number and complexity of passed parameters and make the meaning of the code more transparent with respect to the overview. Killed the SkatModel class. - Fixed an oversight whereby the largeN route was never called by logistic. - Fixed a bug whereby a weight of null was ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2248:911,rout,routine,911,https://hail.is,https://github.com/hail-is/hail/pull/2248,1,['rout'],['routine']
Integrability,"I: Do not run mypy_primer on stubtest/stubgen PRs (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/12295"">#12295</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/c7a81620bef7585cca6905861bb7ef34ec12da2f""><code>c7a8162</code></a> stubtest: ignore more dunder positional-only errors (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/12294"">#12294</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/python/mypy/compare/v0.780...v0.941"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mypy&package-manager=pip&previous-version=0.780&new-version=0.941)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11573:2907,depend,dependabot,2907,https://hail.is,https://github.com/hail-is/hail/pull/11573,3,['depend'],['dependabot']
Integrability,"INT: Replace most setup with setup_method (also teardown)</li>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22490"">#22490</a>: MAINT, CI: Switch to cygwin/cygwin-install-action@v2</li>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22494"">#22494</a>: TST: Make test_partial_iteration_cleanup robust but require leak...</li>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22592"">#22592</a>: MAINT: Ensure graceful handling of large header sizes</li>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22593"">#22593</a>: TYP: Spelling alignment for array flag literal</li>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22594"">#22594</a>: BUG: Fix bounds checking for <code>random.logseries</code></li>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22595"">#22595</a>: DEV: Update GH actions and Dockerfile for Gitpod</li>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22596"">#22596</a>: CI: Only fetch in actions/checkout</li>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22597"">#22597</a>: BUG: Decrement ref count in gentype_reduce if allocated memory...</li>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22625"">#22625</a>: BUG: Histogramdd breaks on big arrays in Windows</li>; </ul>; <h2>Checksums</h2>; <h3>MD5</h3>; <pre><code>8a412b79d975199cefadb465279fd569 numpy-1.23.5-cp310-cp310-macosx_10_9_x86_64.whl; 1b56e8e6a0516c78473657abf0710538 numpy-1.23.5-cp310-cp310-macosx_11_0_arm64.whl; c787f4763c9a5876e86a17f1651ba458 numpy-1.23.5-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl; db07645022e56747ba3f00c2d742232e numpy-1.23.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl; c63a6fb7cc16a13aabc82ec57ac6bb4d numpy-1.23.5-cp310-cp310-win32.whl; 3fea9247e1d812600015641941fa273f numpy-1.23.5-cp310-cp310-win_amd64.whl; 4222cfb36e5ac9aec348c81b075e2c05 numpy-1",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12515:2081,depend,dependabot,2081,https://hail.is,https://github.com/hail-is/hail/pull/12515,1,['depend'],['dependabot']
Integrability,IR Dict lookups should include key/dict in error message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6158:49,message,message,49,https://hail.is,https://github.com/hail-is/hail/issues/6158,1,['message'],['message']
Integrability,"If a batch contains a job who lists the same parent twice, Batch will encounter; [integrity errors from; MySQL](https://hail.zulipchat.com/#narrow/stream/127527-team/topic/ci.20broken/near/195236580). For; example, this error was raised when I duplicated a parent in build.yaml:. pymysql.err.IntegrityError: (1062, ""Duplicate entry '35921-13-1' for key 'PRIMARY'"")""}. This change catches the integrity error and raises a more useful 400 bad request; error message.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8830:456,message,message,456,https://hail.is,https://github.com/hail-is/hail/pull/8830,1,['message'],['message']
Integrability,"If instance name isn't active, look to see whether it existed in the database before printing an error message about an unknown instance.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10325:103,message,message,103,https://hail.is,https://github.com/hail-is/hail/pull/10325,1,['message'],['message']
Integrability,"If it's an important VCF, it shouldn't be corrupted... My solution to this error message will be to add something like `requirement failed: ref was equal to alt` or something like that",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/361#issuecomment-216535838:81,message,message,81,https://hail.is,https://github.com/hail-is/hail/issues/361#issuecomment-216535838,1,['message'],['message']
Integrability,"If we cannot authenticate the user, we should send them to a publicly accessible page where the error message can be presented.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12401:102,message,message,102,https://hail.is,https://github.com/hail-is/hail/pull/12401,1,['message'],['message']
Integrability,"If we go through route (2), this project can serve as a prototype C or C++ interface to Hail. This interface could take multiple forms. For example, we could actually re-build our memory representation implementations in C++ and compile SAIGE, at Hail-Query-compile-time (i.e. when we are compiling a *user's* query), to use whatever SType/PType that Hail has decided is the ideal. A simpler approach is to implement one canonical implementation of the Hail types in C++, fork & slightly modify SAIGE to accept these memory representations, compile SAIGE at Java compile time (i.e. in CI or when you run `make` on your laptop) against these mem reps, ship the compiled library with the Hail JAR, and expose it, via JNI, into the Hail Query language. This requires that the Query compiler can call a function which only supports arguments using one particular SType/PType.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13442#issuecomment-1679739816:17,rout,route,17,https://hail.is,https://github.com/hail-is/hail/issues/13442#issuecomment-1679739816,6,"['interface', 'rout']","['interface', 'route']"
Integrability,"If with my changes it is still slower, then let's abandon. My bad for heading us down this route. Seems natural to use binary, but given that pandas probably has native code for parsing TSVs, maybe we're fighting a losing battle.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11368#issuecomment-1057594484:91,rout,route,91,https://hail.is,https://github.com/hail-is/hail/pull/11368#issuecomment-1057594484,1,['rout'],['route']
Integrability,"If you do build a sites-only export routine, now's the time to request it work on Tables in addition to (or instead of, doesn't matter too much) MatrixTables",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4338#issuecomment-421403518:36,rout,routine,36,https://hail.is,https://github.com/hail-is/hail/issues/4338#issuecomment-421403518,1,['rout'],['routine']
Integrability,Implement old interface using expression language.; New interface is not yet exposed in Python (like split_multi). This will come in a later PR. This should use SplitMulti.unionMovedVariants from https://github.com/hail-is/hail/pull/2381. I will make this change as a separate PR after they both go in.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2382:14,interface,interface,14,https://hail.is,https://github.com/hail-is/hail/pull/2382,2,['interface'],['interface']
Integrability,"Implements a StagedIndexWriter with a very similar structure to the unstaged version. To test this, I threaded this through `IndexWriter.build` so that it now compiles a function that implements the CompiledIndexWriter interface:; ```; trait CompiledIndexWriter {; def init(path: String): Unit; def apply(x: Long, offset: Long, annotation: Long): Unit; def close(): Unit; }; ```; with a wrapper class that mimics the interface of the old IndexWriter. Eventually, we'll need this to lower TableWrite. (Kind of non-randomly assigning @chrisvittal, as I'd like feedback on whether the new-style imperative codegen looks right.)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8737:219,interface,interface,219,https://hail.is,https://github.com/hail-is/hail/pull/8737,3,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"Implements existing query service endpoints using websockets instead of long-running http requests. I open a new socket for each request instead of attempting to hold one open for each client to send all its requests; not sure if one is preferable to the other, but this one seemed easier to handle and more in line with what we were doing before. ~~I haven't put any sort of heartbeat on either end for now for simplicity; the `blocking_to_async` wrapper around the jvm execution interferes with the server's ability to send/receive pings and pongs, and I'm not currently handling retries for timeouts anyways; would love suggestions on how to make this more robust.~~. Since nginx's default behavior is to close the websocket after 60s of non-activity (which seems pretty reasonable), I have a 30s heartbeat on the server-side websocket connection. This meant rewriting the flow to split a task off to execute the blocking JVM function and keeping the websocket task open to handle the heartbeat. Currently, we rely on the client to close the connection once the jvm task is completed and the result response is received; if the connection is closed/something errors for some other reason, we check to see if the task is completed and cancel it if it's not. The client side still doesn't poll the server for existence, but if the socket is unexpectedly closed we'll retry the request.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9636:448,wrap,wrapper,448,https://hail.is,https://github.com/hail-is/hail/pull/9636,1,['wrap'],['wrapper']
Integrability,"Implicitly verify biallelic on non-split VDSes on the python side for methods that require it through the @require_biallelic decorator.; ; Scala interface now `require`s biallelic expectations. Other requirements should be written in this form, too (like TSampleString). This is based on the decision not to support a user-level Scala interface that mirror the Python. We've already left that with, say, history.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2228:145,interface,interface,145,https://hail.is,https://github.com/hail-is/hail/pull/2228,2,['interface'],['interface']
Integrability,Importing from `batch_configuration` means that for this cache to be used you must define all environment variables that batch depends on. I severed this connection and fixed a use of the k8s cache in bootstrap.py,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11162:127,depend,depends,127,https://hail.is,https://github.com/hail-is/hail/pull/11162,1,['depend'],['depends']
Integrability,Improve assert error message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1878:21,message,message,21,https://hail.is,https://github.com/hail-is/hail/pull/1878,1,['message'],['message']
Integrability,Improve error message for incorrect type for dict.get default argument,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7377:14,message,message,14,https://hail.is,https://github.com/hail-is/hail/pull/7377,1,['message'],['message']
Integrability,Improve error message for starting a cluster without a region,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8791:14,message,message,14,https://hail.is,https://github.com/hail-is/hail/pull/8791,1,['message'],['message']
Integrability,Improve error message when bgen.idx does not exist,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2412:14,message,message,14,https://hail.is,https://github.com/hail-is/hail/pull/2412,1,['message'],['message']
Integrability,Improved Variant.parse error message.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2026:29,message,message,29,https://hail.is,https://github.com/hail-is/hail/pull/2026,1,['message'],['message']
Integrability,"In 0.2, there is Table.to_spark but Table.from_spark is missing. -------------------------------------------------------------------------------------------. ### Hail version: 0.2. ### What you did:. ### What went wrong (all error messages here, including the full java stack trace):",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2938:231,message,messages,231,https://hail.is,https://github.com/hail-is/hail/issues/2938,1,['message'],['messages']
Integrability,"In a TableValue, the RVD key may be longer than the TableType key, so it's wrong for the row type of the result of a TableIR execute to depend on the RVD key. I tried to find all cases of this error in TableIR execute methods, and only found these two.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8890:136,depend,depend,136,https://hail.is,https://github.com/hail-is/hail/pull/8890,1,['depend'],['depend']
Integrability,"In a previous PR we added exception logging when tasks on a `BackgroundTaskManager` fail. I'm not seeing any of those messages in the worker logs, suggesting that for some reason the Tasks to free a network namespace when a job is finished are not getting created in the first place. I don't see how in the code we could somehow *not* free the network namespace, but I'm hoping that some of these diagnostics shed some light. Also open to suggestions for where else might be a good spot to add more logging.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13509:118,message,messages,118,https://hail.is,https://github.com/hail-is/hail/pull/13509,1,['message'],['messages']
Integrability,"In a89d64a, I modified `build.yaml` to release the wheel we had already built and tested. Unbeknownst to me was that we rebuild the wheel with a different version of `hail/python/hailtop/hailctl/deploy.yaml` and releasing the version used for testing borked `hailctl dataproc` commands. To fix this, we'll rebuild the wheel but use the `jar` we've already built and tested. This is safe to do as far as I know because we don't bundle any information into the jar that depends on the make flag `DEPLOY_REMOTE`. Fixes: #14452",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14453:468,depend,depends,468,https://hail.is,https://github.com/hail-is/hail/pull/14453,1,['depend'],['depends']
Integrability,"In our use case, the shaded Hail jar runs into dependency conflicts due to `org.apache.commons.io`, which is pulled in by `com.indeed:lsmtree-core`. This PR shades `org.apache.commons.io`; unfortunately, shading all of `org.apache.commons` was problematic.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8700:47,depend,dependency,47,https://hail.is,https://github.com/hail-is/hail/pull/8700,1,['depend'],['dependency']
Integrability,"In particular, it doesn't give an info message when commands are run.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1123:39,message,message,39,https://hail.is,https://github.com/hail-is/hail/issues/1123,1,['message'],['message']
Integrability,"In particular, this allows `async with RouterAsyncFS(...) as fs` to give a tight type to `fs`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14346:39,Rout,RouterAsyncFS,39,https://hail.is,https://github.com/hail-is/hail/pull/14346,1,['Rout'],['RouterAsyncFS']
Integrability,In the UKBBv2 case. Depends on https://github.com/hail-is/hail/pull/1957,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1962:20,Depend,Depends,20,https://hail.is,https://github.com/hail-is/hail/pull/1962,1,['Depend'],['Depends']
Integrability,"In the spirit of consolidation, this is just translating the current nginx config that is handling TLS for the batch driver to envoy. Doesn't have any special dependencies or deployment complications. Note that this time running Envoy as root is required to listening on the same port (443) that nginx currently listens on.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12383:159,depend,dependencies,159,https://hail.is,https://github.com/hail-is/hail/pull/12383,1,['depend'],['dependencies']
Integrability,"In this PR:; - removed unused region arg for `fb.addLiteral`; - add non-type-serialization path for PLocus in wrapArgs; - port isAutosomal, … to not rely on RG serialization (does the implementation look reasonable?)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8228:110,wrap,wrapArgs,110,https://hail.is,https://github.com/hail-is/hail/pull/8228,1,['wrap'],['wrapArgs']
Integrability,"In trying to test this (from your branch, ran pip install on /hail/python just in case). ```sh; (hail) alex:~/projects/hail/hail/python:$ hailctl dev deploy -b cseed:batch-web -s deploy_auth,deploy_router,deploy_notebook2; Traceback (most recent call last):; File ""/miniconda3/envs/hail/bin/hailctl"", line 11, in <module>; sys.exit(main()); File ""/Users/alex/projects/hail/hail/python/hailtop/hailctl/__main__.py"", line 100, in main; cli.main(args); File ""/Users/alex/projects/hail/hail/python/hailtop/hailctl/dev/cli.py"", line 52, in main; cli.main(args); File ""/Users/alex/projects/hail/hail/python/hailtop/hailctl/dev/deploy/cli.py"", line 66, in main; loop.run_until_complete(submit(args)); File ""/miniconda3/envs/hail/lib/python3.6/asyncio/base_events.py"", line 484, in run_until_complete; return future.result(); File ""/Users/alex/projects/hail/hail/python/hailtop/hailctl/dev/deploy/cli.py"", line 57, in submit; batch_id = await ci_client.dev_deploy_branch(args.branch, steps); File ""/Users/alex/projects/hail/hail/python/hailtop/hailctl/dev/deploy/cli.py"", line 46, in dev_deploy_branch; self._deploy_config.url('ci', '/api/v1alpha/dev_deploy_branch'), json=data) as resp:; File ""/miniconda3/envs/hail/lib/python3.6/site-packages/aiohttp/client.py"", line 1005, in __aenter__; self._resp = await self._coro; File ""/miniconda3/envs/hail/lib/python3.6/site-packages/aiohttp/client.py"", line 581, in _request; resp.raise_for_status(); File ""/miniconda3/envs/hail/lib/python3.6/site-packages/aiohttp/client_reqrep.py"", line 942, in raise_for_status; headers=self.headers); aiohttp.client_exceptions.ClientResponseError: 500, message='Internal Server Error'; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7064#issuecomment-532037733:1627,message,message,1627,https://hail.is,https://github.com/hail-is/hail/pull/7064#issuecomment-532037733,1,['message'],['message']
Integrability,Include pc relate dependencies in developer getting started,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3281:18,depend,dependencies,18,https://hail.is,https://github.com/hail-is/hail/pull/3281,1,['depend'],['dependencies']
Integrability,"Includes are grouped by source (system, LLVM, internal), the groups; themselves are then ordered stdlib, dependencies, internal. Ordering; within groups is alphabetical. Also switch internal include style from #include <> to #include """"",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10344:105,depend,dependencies,105,https://hail.is,https://github.com/hail-is/hail/pull/10344,1,['depend'],['dependencies']
Integrability,Incorrect array indexing into a genotype should have a better error message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3713:68,message,message,68,https://hail.is,https://github.com/hail-is/hail/issues/3713,1,['message'],['message']
Integrability,"Indeed, if i do `hl.literal()`, I get the right error message:; ```; hail.expr.expressions.base_expression.ExpressionException: Hail does not support heterogeneous dicts: found dict with values of types [dtype('str'), dtype('int32')]; ```; But fixing the value types upstream removes the requirement for `hl.literal()` and works",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3886#issuecomment-401931653:54,message,message,54,https://hail.is,https://github.com/hail-is/hail/issues/3886#issuecomment-401931653,1,['message'],['message']
Integrability,"Initial version of python interface. Still need to:. - document python interface (working with @jigold about the best way to do that); - add tests run through gradle. The interface mostly wraps commands. The main difference is that python has first class VDS objects, so the environment isn't necessary. Therefore, I had to restructure commands that take VDS names as arguments. It can be run like this:. ```; $ gradle shadowJar; $ PYTHONPATH=/path/to/hail/python SPARK_CLASSPATH=/path/to/hail/build/libs/hail-all-spark.jar pyspark; ```. Here's a simple example:. ```; >>> from pyhail import *; >>> hc = HailContext(sc) # create Hail context; >>> vds = hc.import_vcf('/Users/cseed/sample.vcf', n_partitions = 8); >>> vds.count(); {u'nSample': 100, u'nVariants': 346L, u'nGenotypes': 34600L}; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1061:26,interface,interface,26,https://hail.is,https://github.com/hail-is/hail/pull/1061,4,"['interface', 'wrap']","['interface', 'wraps']"
Integrability,"Instead of creating a hail context, I've exposed the top level `init` and `stop` methods in hail2. . Env.hc() will call init if it's not been called yet, and print a message about initializing with default params.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2820#issuecomment-360908387:166,message,message,166,https://hail.is,https://github.com/hail-is/hail/pull/2820#issuecomment-360908387,1,['message'],['message']
Integrability,Integrate OrderedRDD2 in VSM.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2308:0,Integrat,Integrate,0,https://hail.is,https://github.com/hail-is/hail/pull/2308,1,['Integrat'],['Integrate']
Integrability,Integrate show with jupyter,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5663:0,Integrat,Integrate,0,https://hail.is,https://github.com/hail-is/hail/issues/5663,1,['Integrat'],['Integrate']
Integrability,"Interface change:. ``` scala; abstract class Type[T] extends BaseType {; def coerce(a: Any): T; // ...; }; ```. Note the two major changes:; - Every `Type` now must correspond to a Scala type; - Every `Type` must know how to convert appropriate values to their associated Scala type. We may then naturally modify methods like `evalCompose`:. ``` scala; def evalCompose[T](ec: EvalContext, typ: Type[T])(subexpr: AST); (g: (T) => Any): () => Any = {; val f = subexpr.eval(ec); () => {; val x = f(); if (x != null); g(typ.coerce(x)); else; null; }; }; ```. which will hopefully induce or enable downstream simplifications.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/624:0,Interface,Interface,0,https://hail.is,https://github.com/hail-is/hail/issues/624,1,['Interface'],['Interface']
Integrability,"Interface for `Call.one_hot_alleles` and `CallExpression.one_hot_alleles` are different. As far as I can tell, `one_hot_alleles` only needs to know how many different alleles there are and thus I think that both should use `n_alleles` as parameter.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6855:0,Interface,Interface,0,https://hail.is,https://github.com/hail-is/hail/issues/6855,1,['Interface'],['Interface']
Integrability,"Investigate whether possible to invert menu inclusion, such that each project injects its own menu alongside a common menu section (e.g login).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7276:78,inject,injects,78,https://hail.is,https://github.com/hail-is/hail/issues/7276,1,['inject'],['injects']
Integrability,Is there a new dependency? Just checked out that branch and got missing `catch.hpp`,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4816#issuecomment-440640835:15,depend,dependency,15,https://hail.is,https://github.com/hail-is/hail/issues/4816#issuecomment-440640835,1,['depend'],['dependency']
Integrability,Is there a way for me to test this further? My experiments show that clone+merge is ~20 seconds but download from GCS is ~3s. This should seed up the feedback substantially for anyone working on an image that transitively depends on other images.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7534:222,depend,depends,222,https://hail.is,https://github.com/hail-is/hail/pull/7534,1,['depend'],['depends']
Integrability,Is there any reason not to give `HardCallView` an `Array`-like interface? E.g.; ```scala; def apply(i: Int): Option[Int] = {; setGenotype(i); if (hasGT) Some(getGT) else None; }; ```; That seems like a much more comfortable view interface.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2368#issuecomment-340856253:63,interface,interface,63,https://hail.is,https://github.com/hail-is/hail/pull/2368#issuecomment-340856253,2,['interface'],['interface']
Integrability,"Is there any way the R interface can do things the new way, or do things; need to happen on the Scala side first? Perhaps someone could notify us; when the API has relatively stabilized?. On Thu, Feb 14, 2019, 6:53 AM Tim Poterba <notifications@github.com wrote:. > Yes. We intend to have the Python frontend and scala backend communicating; > only through the methods on the Backend class in backend.py; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/hail-is/hail/issues/5340#issuecomment-463655588>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AAJp7o6ZVZCdyRH4ixYHFdCItQ-wCy9kks5vNXg3gaJpZM4a583l>; > .; >",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5340#issuecomment-463825757:23,interface,interface,23,https://hail.is,https://github.com/hail-is/hail/issues/5340#issuecomment-463825757,1,['interface'],['interface']
Integrability,"Issue came up on doctest branch. Reproducible example:; ```; assoc_vds = hc.import_vcf('src/test/resources/sample.vcf'); .split_multi(); .variant_qc(); .annotate_samples_expr('sa.culprit = gs.filter(g => v == Variant(""20"", 13753124, ""A"", ""C"")).map(g => g.gt).collect()[0]'); .annotate_samples_expr('sa.pheno = rnorm(1,1) * sa.culprit'); .annotate_samples_expr('sa.cov1 = rnorm(0,1)'); .annotate_samples_expr('sa.cov2 = rnorm(0,1)'); .linreg('sa.pheno', ['sa.cov1', 'sa.cov2']).annotate_variants_expr('va.useInKinship = va.qc.AF > 0.05'). kinship_vds = assoc_vds.filter_variants_expr('va.useInKinship'); lmm_vds = assoc_vds.lmmreg(kinship_vds, 'sa.pheno', ['sa.cov1', 'sa.cov2']). lmm_vds.globals; ```. Error message:; ```; Failed example:; lmm_vds.globals; Exception raised:; Traceback (most recent call last):; File ""//anaconda/lib/python2.7/doctest.py"", line 1315, in __run; compileflags, 1) in test.globs; File ""<doctest default[1]>"", line 1, in <module>; lmm_vds.globals; File ""/Users/jigold/hail/python/hail/dataset.py"", line 1958, in globals; self._globals = self.global_schema._convert_to_py(self._jvds.globalAnnotation()); File ""/Users/jigold/hail/python/hail/type.py"", line 423, in _convert_to_py; d[f.name] = f.typ._convert_to_py(annotation.get(i)); File ""/Users/jigold/hail/python/hail/type.py"", line 423, in _convert_to_py; d[f.name] = f.typ._convert_to_py(annotation.get(i)); File ""/Users/jigold/hail/python/hail/type.py"", line 243, in _convert_to_py; lst = env.jutils.iterableToArrayList(annotation); File ""/Users/jigold/spark-2.0.2-bin-hadoop2.7/python/lib/py4j-0.10.3-src.zip/py4j/java_gateway.py"", line 1133, in __call__; answer, self.gateway_client, self.target_id, self.name); File ""/Users/jigold/spark-2.0.2-bin-hadoop2.7/python/pyspark/sql/utils.py"", line 63, in deco; return f(*a, **kw); File ""/Users/jigold/spark-2.0.2-bin-hadoop2.7/python/lib/py4j-0.10.3-src.zip/py4j/protocol.py"", line 323, in get_return_value; format(target_id, ""."", name, value)); Py4JError: An error occurr",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1368:708,message,message,708,https://hail.is,https://github.com/hail-is/hail/issues/1368,1,['message'],['message']
Integrability,"Issue known by several members of the dev team now -- if the first element combined is nan, the result is non-deterministically wrong (depends on the associativity of agg combination on the master)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6849:135,depend,depends,135,https://hail.is,https://github.com/hail-is/hail/issues/6849,1,['depend'],['depends']
Integrability,"It also fails on this simpler example:; ```; In [1]: import hail as hl ; ...: ; ...: temp = hl.utils.range_table(100) ; ...: temp.write('gs://danking/workshop-test/1kg.mt', overwrite=True) ; Initializing Hail with default parameters...; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.61-c548354b6e81; LOGGING: writing to /Users/dking/projects/hail/hail-20210107-1038-0.2.61-c548354b6e81.log; Traceback (most recent call last):; File ""<ipython-input-1-a2e56feaf799>"", line 4, in <module>; temp.write('gs://danking/workshop-test/1kg.mt', overwrite=True); File ""</Users/dking/miniconda3/lib/python3.7/site-packages/decorator.py:decorator-gen-1092>"", line 2, in write; File ""/Users/dking/projects/hail/hail/python/hail/typecheck/check.py"", line 577, in wrapper; return __original_func(*args_, **kwargs_); File ""/Users/dking/projects/hail/hail/python/hail/table.py"", line 1271, in write; Env.backend().execute(ir.TableWrite(self._tir, ir.TableNativeWriter(output, overwrite, stage_locally, _codec_spec))); File ""/Users/dking/projects/hail/hail/python/hail/backend/service_backend.py"", line 103, in execute; bucket=self._bucket); File ""/Users/dking/projects/hail/hail/python/hail/backend/service_backend.py"", line 48, in request; return async_to_blocking(retry_transient_errors(self.async_request, endpoint, **data)); File ""/Users/dking/projects/hail/hail/python/hailtop/utils/utils.py"", line 114, in async_to_blocking; return asyncio.get_event_loop().run_until_complete(coro); File ""/Users/dking/miniconda3/lib/python3.7/asyncio/base_events.py"", line 587, in run_until_complete; return future.result(); File ""/Users/dking/projects/hail/hail/python/hailtop/utils/utils.py"", line 379, in retry_transient_errors; return await f(*args, **kwargs); File ""/Users/dking/projects/hail/hail/python/hail/backend/service_backend.py"", line 44, in async_request; raise FatalError(f'Error from server: {result[""value""]}'); FatalError: Error from server: java.util.NoSuchElementExce",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9856#issuecomment-756194693:789,wrap,wrapper,789,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-756194693,2,['wrap'],['wrapper']
Integrability,It depends on a number of GCS buckets that that we could transition to terraform/ABS in the future but thought it's not worth the time right now.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11125:3,depend,depends,3,https://hail.is,https://github.com/hail-is/hail/pull/11125,1,['depend'],['depends']
Integrability,It depends on task completion order. ☹️ . And I think you've convinced me.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5015#issuecomment-448851223:3,depend,depends,3,https://hail.is,https://github.com/hail-is/hail/pull/5015#issuecomment-448851223,1,['depend'],['depends']
Integrability,It get lost in the shuffle. The other dependencies are now picked up in `hail/Dockerfile.hail-run` which has the dependencies to run Hail and is the base image for hail-base and the other apiserver images.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6009:38,depend,dependencies,38,https://hail.is,https://github.com/hail-is/hail/pull/6009,2,['depend'],['dependencies']
Integrability,It is no longer the case that VCF does not support phased haploid calls. Make a note of this in the code. ## Security Assessment; - This change has no security impact. ### Impact Description; Change error messages only.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14742:205,message,messages,205,https://hail.is,https://github.com/hail-is/hail/pull/14742,1,['message'],['messages']
Integrability,"It looks like it's called `netcdf` on `brew`. ```; dking@wmb16-359 # brew info netcdf; netcdf: stable 4.6.0 (bottled); Libraries and data formats for array-oriented scientific data; https://www.unidata.ucar.edu/software/netcdf; Not installed; From: https://github.com/Homebrew/homebrew-core/blob/master/Formula/netcdf.rb; ==> Dependencies; Build: cmake ✘; Required: hdf5 ✘, gcc ✘; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3273#issuecomment-377930479:326,Depend,Dependencies,326,https://hail.is,https://github.com/hail-is/hail/issues/3273#issuecomment-377930479,1,['Depend'],['Dependencies']
Integrability,It may be good to have a better error message when users forget to add the file:/// to a unix file path when using hail.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/381:38,message,message,38,https://hail.is,https://github.com/hail-is/hail/issues/381,1,['message'],['message']
Integrability,It might be easier to invent a new domain name for VPC-internal clients. `batch.hail.internal`. Add the right DNS routes. Add new root certs to the worker nodes. That ensures our DNS changes don't break anyone else who is trying to talk to `batch.hail.is`. We should maybe talk more about what these DNS changes are breaking so we can plan our network infrastructure.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6918#issuecomment-523662443:114,rout,routes,114,https://hail.is,https://github.com/hail-is/hail/pull/6918#issuecomment-523662443,1,['rout'],['routes']
Integrability,"It might not look like it, but I promise, I'm trying to keep these as small as possible. Summary of changes:; - EmitMethodBuilder, etc. no longer implement WrappedMethodBuilder, etc. but they do proxy the necessary functions.; - Emit method params and return values are now statically either: an Code[T] with type TypeInfo[T], or an EmitCode, with type PType.; - Added ParamType to wrap the two parameter type options, and Param to wrap the two code options, with implicit conversions.; - A bunch of methods now have emit and code variants: getEmitParam, getCodeParam, invokeCode, invokeEmit (where code, emit refer to the return value).; - I made the minimal changes to get things working again. Some code still code parameters to pass emit values. I will fix these in a later PR.; - Where possible, make the class implemented by Compile concrete rather than generic. I think this can be pushed through the entire code base and we can remove the option to build generic methods. We should have done this a long time ago.; - ModuleBuilder can now create type-specialized tuple types. This is used for EmitCode return values. I'm not sure if this is actually used yet.; - Require RVDType rowType to be required. Require TypeValue global type to be required. Fix lots of places to make this true. In a few spots (e.g. TableMap{Rows, Globals}), I had to wrap the IR being compiled in a Coalesce with a Die to make sure the return type is required.; - Cleaned up the dependent function interface to be closer to what we have now with MethodBuilder, etc. DependentFunctionBuilder is now just an `apply_method: DependentMethodBuilder`, EmitFunctionBuilder analogously. DependentMethodBuilder wraps a MethodBuilder, EmitMethodBuilder wraps a DependentMethodBuilder and an EmitMethodBuilder.; - Add equality comparison to TypeInfo[_]; - Add methods to convert IndexedSeq[Code[_]] to/from PCode and EmitCode. These are used to pass EmitCode as arguments to method invocation. If an emit parameter is required, ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8371:156,Wrap,WrappedMethodBuilder,156,https://hail.is,https://github.com/hail-is/hail/pull/8371,3,"['Wrap', 'wrap']","['WrappedMethodBuilder', 'wrap']"
Integrability,"It seems that it does happen after the header is inserted but the footers are inserted after the Sphinx injection for the main block. So, will we need to create a separate CSS file for when the website runs through a second time it is pulling the most up-to-date styling changes?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10278#issuecomment-813640189:104,inject,injection,104,https://hail.is,https://github.com/hail-is/hail/pull/10278#issuecomment-813640189,1,['inject'],['injection']
Integrability,"It seems the test failures are due to:; 1. TemporaryDirectory (and TemporaryFilename); 2. `hailtop.batch.backend.ServiceBackend` absolutely should not use sync `BatchClient`, the async one is right there!; 3. `hailctl batch submit` is broken because of (2); 4. `test_callback` should use async `BatchClient` b/c it is async. TemporaryDirectory & TemporaryFilename use `hailtop.fs`, which is sync. This is nearly the async FS API except:; 1. `isfile` vs `is_file`; 2. `isdir` vs `is_dir`; 3. `stat` returns a `FileListEntry` instead of a `FileStatus`.; 4. `listfiles` vs `ls`. `hailtop.fs.router_fs.RouterFS` is a sync shim between these APIs. So there's basically sync-vs-async and Python-vs-Hail FS APIs. We have:; 1. sync, Python: `hailtop.fs.FS`.; 2. async, Python: does not exist.; 3. async, Hail: `hailtop.aiotools.fs.FS`.; 4. sync, Hail: `hailtop.fs.router_fs.RouterFS`. If we had (2), we could write an async version of TemporaryDirectory and TemporaryFilename and use those in async methods (in particular, in `hail.backend.ServiceBackend`). The high-level need is that we gotta be careful about not interleaving async-sync-async. Your PR reveals that we were inadvertently violating that rule. It seems best to follow the rule and only use `nest_asyncio` when we're in a Jupyter Notebook.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13677#issuecomment-1743171933:598,Rout,RouterFS,598,https://hail.is,https://github.com/hail-is/hail/pull/13677#issuecomment-1743171933,2,['Rout'],['RouterFS']
Integrability,"It sounds like you were using the old command-line interface. Hail has moved to a python API, documented here:; https://hail.is/hail/api.html; https://hail.is/hail/getting_started.html",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1807#issuecomment-301447221:51,interface,interface,51,https://hail.is,https://github.com/hail-is/hail/issues/1807#issuecomment-301447221,1,['interface'],['interface']
Integrability,"It still thought it had `s`, an error message to print as a python traceback, rather than an error id like it has now.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10720:38,message,message,38,https://hail.is,https://github.com/hail-is/hail/pull/10720,1,['message'],['message']
Integrability,"It takes one minute to build the docs *even if nothing has changed since the; last build*. There are a few things that lengthen the feedback cycle:. - We defeat Sphinx's input cache by deleting and re-copying over all the source; files.; - We defeat Sphinx's output cache by `mv`ing the output to a new location.; - We check that Hail is installed (at a cost of two seconds) *every* time we; build the docs. This isn't necessary, Sphinx prints a reasonable message; (""cannot import ..."") if Hail is not installed.; - We create a wheel file every time we build the docs at a cost of several; seconds.; - We recreate the tutorials tar even if it has not changed. Instead, I propose this PR:. - Do not copy the source files.; - Copy the output to the new location.; - Do not check hail is installed.; - Do not even install Hail.; - Use Make to check if the tutorial tar need be recreated. Regarding not installing Hail: even install-editable takes two seconds. It is; the developer's responsibility to ensure the right version of Hail is; installed. When you check out a branch just run `make install-editable`; once. Then edit the docs to your heart's desire, never re-install Hail. With this PR it takes ~3.5 seconds to rebuild the docs if nothing has; changed. We do work proportional to the number of changed files, not; proportional to all files. Sphinx itself takes 2-3 seconds, so we can't do much; better than this. Dice came up Patrick, but I imagine @tpoterba has thoughts.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9348:457,message,message,457,https://hail.is,https://github.com/hail-is/hail/pull/9348,1,['message'],['message']
Integrability,"It turns out that Kryo serialization is extra sneaky and will often just try to serialize the parts of a class if the class itself doesn't implement the KryoSerializable interface. I made a trait, `UnKryoSerializable`, that extends KryoSerializable but throws errors on read and write to try to weed out the rest of the places where UnsafeRows are being serialized. The biggest place this popped up was with colValues. For now, they're just being broadcast as safe Annotations everywhere. This depends on a change in #3258 and I'll rebase when that goes in.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3288:170,interface,interface,170,https://hail.is,https://github.com/hail-is/hail/pull/3288,2,"['depend', 'interface']","['depends', 'interface']"
Integrability,It was previously hard to retry transient errors from synchronous libraries like; requests because `hailtop` lacked a synchronous retry wrapper. This PR; implements such a function and uses it in every place that hail imports; `requests`. I also finally addressed the 1kg download issues.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8391:136,wrap,wrapper,136,https://hail.is,https://github.com/hail-is/hail/pull/8391,1,['wrap'],['wrapper']
Integrability,"It was too tightly coupled to the Hadoop interface (still is). Remove fs.{FilePath, FileSystem}.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8388:41,interface,interface,41,https://hail.is,https://github.com/hail-is/hail/pull/8388,1,['interface'],['interface']
Integrability,It was unused. The service backend uses RouterFS.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11650:40,Rout,RouterFS,40,https://hail.is,https://github.com/hail-is/hail/pull/11650,1,['Rout'],['RouterFS']
Integrability,"It would be great if it was possible to have Hail skip rows that don't have the correct number of fields, and just report them via error messages (without crashing), so that the annotation files (such as EIGEN) can still be used.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/402:137,message,messages,137,https://hail.is,https://github.com/hail-is/hail/issues/402,1,['message'],['messages']
Integrability,"It would lessen the load on aiohttp, to something that may be better suited to handling large messages. Then store the result in gcs, and respond with the address of the object",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5898#issuecomment-484219314:94,message,messages,94,https://hail.is,https://github.com/hail-is/hail/issues/5898#issuecomment-484219314,1,['message'],['messages']
Integrability,"It's a vaguely confusing message, but the part in the brackets indicates that we expected this to fail but instead it passed. The part after the brackets is the default message associated with the `fails_service_backend` annotation; ```; [XPASS(strict)] doesn't yet work on service backend; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11445#issuecomment-1062288146:25,message,message,25,https://hail.is,https://github.com/hail-is/hail/pull/11445#issuecomment-1062288146,2,['message'],['message']
Integrability,It's already a hail dependency.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10366#issuecomment-825911342:20,depend,dependency,20,https://hail.is,https://github.com/hail-is/hail/pull/10366#issuecomment-825911342,1,['depend'],['dependency']
Integrability,"It's already gone, this just removes it from the router.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8515:49,rout,router,49,https://hail.is,https://github.com/hail-is/hail/pull/8515,1,['rout'],['router']
Integrability,"It's obvious that I'm the only one using SBT 😉 . I removed this spark helper thing that data bricks has abandoned. It's not hard to specify the right spark dependencies manually. In fact, we do that in `build.gradle` already. I don't know what the deal with hadoopClient, but it didn't seem necessary for my tests to pass. We don't use SBT for deployment, so I'm not worried. I'm not sure how all the http4s and json4s stuff got pulled in. They're not present in grade, so I removed them. I also bumped the SBT version for no particular reason. 🤷‍♀ . It works.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8357:156,depend,dependencies,156,https://hail.is,https://github.com/hail-is/hail/pull/8357,1,['depend'],['dependencies']
Integrability,"It's only used in tests, and is not something we wish to maintain as part of the ptype interface.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10575:87,interface,interface,87,https://hail.is,https://github.com/hail-is/hail/pull/10575,1,['interface'],['interface']
Integrability,"Iterator$1.apply(BlockManager.scala:935); at org.apache.spark.storage.BlockManager$$anonfun$doPutIterator$1.apply(BlockManager.scala:926); at org.apache.spark.storage.BlockManager.doPut(BlockManager.scala:866); at org.apache.spark.storage.BlockManager.doPutIterator(BlockManager.scala:926); at org.apache.spark.storage.BlockManager.getOrElseUpdate(BlockManager.scala:670); at org.apache.spark.rdd.RDD.getOrCompute(RDD.scala:330); at org.apache.spark.rdd.RDD.iterator(RDD.scala:281); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:319); at org.apache.spark.rdd.RDD.iterator(RDD.scala:283). Konrad Karczewski @konradjk 16:24; this should work, so i think it's a bug. but in the short run, you could hdfs dfs -cp file:///tmp/clinvar.vcf.gz / and then just load /clinvar.vcf.gz; copy to hdfs; (you shouldn't have to, but ¯\_(ツ)_/¯). bw2 @bw2 16:27; that worked. thanks!. ### What went wrong (all error messages here, including the full java stack trace):. Traceback (most recent call last):; File ""/tmp/7417fcfbbeee44d0b3f4c0b3750121a7/load_clinvar_to_es_pipeline.py"", line 31, in <module>; vds = hc.import_vcf(""file:///tmp/clinvar.vcf.gz"", force=True); File ""<decorator-gen-502>"", line 2, in import_vcf; File ""/tmp/7417fcfbbeee44d0b3f4c0b3750121a7/hail-0.1-es-6.2.4-with-strip-chr-prefix.zip/hail/java.py"", line 121, in handle_py4j; hail.java.FatalError: FileNotFoundException: File file:/tmp/clinvar.vcf.gz does not exist. Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 20 times, most recent failure: Lost task 0.19 in stage 0.0 (TID 19, without-vep-520334-sw-rmwj.c.seqr-project.internal): java.io.FileNotFoundException: File file:/tmp/clinvar.vcf.gz does not exist; 	at org.apache.hadoop.fs.RawLocalFileSystem.deprecatedGetFileStatus(RawLocalFileSystem.java:611); 	at org.apache.hadoop.fs.RawLocalFileSystem.getFileLinkStatusInternal(RawLocalF",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3760:4499,message,messages,4499,https://hail.is,https://github.com/hail-is/hail/issues/3760,1,['message'],['messages']
Integrability,Iterator[RegionValue] wrappers for passing to/from c++,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4729:22,wrap,wrappers,22,https://hail.is,https://github.com/hail-is/hail/pull/4729,1,['wrap'],['wrappers']
Integrability,"JGSCM has inconsistent handling of buckets, folders. Because of this, combined with the fact that both folder and files are blobs in the Google Cloud storage world, that Jupyter's ContentsManager class strips slashes](https://jupyter-notebook.readthedocs.io/en/stable/extending/contents.html#api-paths), and that JGSCM behaves differently in the root folder depending on whether or not `default_path` is set (where without it, the root folder is effectively a listing of buckets, and ""folders"" created within are buckets rather than folder-blobs), means that some operations fail. Currently this appears to be seen only with file moving operations, but may occur under other circumstances. cc @cseed.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5820:358,depend,depending,358,https://hail.is,https://github.com/hail-is/hail/issues/5820,1,['depend'],['depending']
Integrability,JavaRuntimeValidationAction.execute(JavaRuntimeValidationAction.java:24); at org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:33); at org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:22); at org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:205); at org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:169); at org.gradle.launcher.Main.doAction(Main.java:33); at org.gradle.launcher.bootstrap.EntryPoint.run(EntryPoint.java:45); at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:55); at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:36); at org.gradle.launcher.GradleMain.main(GradleMain.java:23); at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:30); at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:129); at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); Caused by: org.gradle.process.internal.ExecException: Process 'command 'make'' finished with non-zero exit value 2; at org.gradle.process.internal.DefaultExecHandle$ExecResultImpl.assertNormalExitValue(DefaultExecHandle.java:367); at org.gradle.process.internal.DefaultExecAction.execute(DefaultExecAction.java:31); at org.gradle.api.tasks.AbstractExecTask.exec(AbstractExecTask.java:54); at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:75); at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.doExecute(AnnotationProcessingTaskFactory.java:228); at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:221); at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:210); at org.gradle.api.internal.AbstractTa,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3705:7348,wrap,wrapper,7348,https://hail.is,https://github.com/hail-is/hail/issues/3705,1,['wrap'],['wrapper']
Integrability,"Jobs are now only allowed to have parents in the same batch. This is necessary for a long term goal: inter-job dependencies. We plan to temporarily store the output of a job. We need to know when a job can no longer have children (ergo it is safe to delete the job's output). We will add a `batch.close` which prevents a batch from receiving new children. If batch jobs may only depend on other jobs in the batch, then a `close` means that we can delete any output from a job whose children have already read its output.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5231:111,depend,dependencies,111,https://hail.is,https://github.com/hail-is/hail/pull/5231,2,['depend'],"['depend', 'dependencies']"
Integrability,"John, I merged in your changes. Let me know if you had something else in mind for an interface. I moved all implementations, besides codeOrdering to PCanonicalNDArray because in my mind it's harder to track implementations across multiple loci, but let me know if you feel PNDArray needs some default methods (for instance, I could imagine numElements to be this way, but decided not to, because its signature really depends on the shape signature, which lives on PCanonicalNDArray)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7734#issuecomment-567051493:85,interface,interface,85,https://hail.is,https://github.com/hail-is/hail/pull/7734#issuecomment-567051493,2,"['depend', 'interface']","['depends', 'interface']"
Integrability,"John, to gain some familiarity with your codebase, a proposed change. Makes the interface 1 method smaller, and reduces a bit of complexity in element value loading. Also fixes a potential source of errors long term: element loading should depend on the representation (as this controls memory layout), and not the elementType passed to the PNDArray constructor. This came up as I was writing down the invariants for PNDArray for the PTypes design doc. Feel free to push back on this if you have plans for getElementAddress (although if that's the case we should get rid of loadElementToIRIntermediate)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8177:80,interface,interface,80,https://hail.is,https://github.com/hail-is/hail/pull/8177,2,"['depend', 'interface']","['depend', 'interface']"
Integrability,"Julia, sorry I've been letting this sit. I'm totally fine with these changes, but what I want to sort out is the following issue -- . Most of the VDS functions are really built to directly support gnomAD / CCDG activities, and the default function usages should reflect the standard or best practice applications that your team converges on. I think if gnomAD is going to typically use the `use_variant_dataset` mode, we should make that default. Is that the plan? Does it depend on genome/exome data?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11701#issuecomment-1099036554:473,depend,depend,473,https://hail.is,https://github.com/hail-is/hail/pull/11701#issuecomment-1099036554,2,['depend'],['depend']
Integrability,Jupyter now requires tornado>=6. We added the tornado<6 requirement to prevent previous issues in; which the notebook package did not correctly specify its dependency on tornado<6.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9882:156,depend,dependency,156,https://hail.is,https://github.com/hail-is/hail/pull/9882,1,['depend'],['dependency']
Integrability,"Just a heads up, the docs aren't rendered. But the interface looks awesome!!!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4004#issuecomment-408972048:51,interface,interface,51,https://hail.is,https://github.com/hail-is/hail/pull/4004#issuecomment-408972048,1,['interface'],['interface']
Integrability,"Just a refactor, simplifies the interactions between `Worker`, `CloudWorkerAPI` and `CloudUserCredentials` and hopefully makes this code safer and easier to work with. Instead of the following occuring in worker.py:. 1. get credentials string from `CloudUserCredentials`; 2. tell `CloudWorkerAPI` to write credentials string to `path` owned by the job; 3. tell `CloudWorkerAPI` to mount cloudfuse using the credentials stored at `path`. we instead just do. 1. tell `CloudWorkerAPI` to mount cloudfuse using `CloudUserCredentials`. On its own I think this change makes the codepath simpler and easier to think about in terms of where credentials are stored, but this also gets rid of the requirement from `worker.py`'s point of view that credentials must be stored on the filesystem. This will make it easier to transition off of key files and over to metadata server tokens. In order to make the new statement sound in terms of types, we can't have `CloudWorkerAPI.mount_cloudfuse` just accept a `CloudUserCredentials` argument, because that means `GCPWorkerAPI` would need to be able to support an argument of type `AzureUserCredentials`, which would never happen and doesn't make sense. What we can do here is make `CloudWorkerAPI` generic over the subtype of `CloudUserCredentials` that it both produces and consumes. This allows us to use stricter types like `GCPUserCredentials` and `AzureUserCredentials` inside of `GCPWorkerAPI` and `AzureWorkerAPI` respectively and now the type system is happy. It also relaxes the restriction that both of the `GCPUserCredentials` and `AzureUserCredentials` need to conform to the same `cloudfuse_credentials` interface.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12962:1653,interface,interface,1653,https://hail.is,https://github.com/hail-is/hail/pull/12962,1,['interface'],['interface']
Integrability,Just fix the error message in AST and I'm happy with it!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/663#issuecomment-242153148:19,message,message,19,https://hail.is,https://github.com/hail-is/hail/pull/663#issuecomment-242153148,1,['message'],['message']
Integrability,"Just saw this. > adds job.entrypoint method. I'm going to argue against this. The goal is not to make Batch a Docker wrapper, in fact, maybe that's an anti-goal. The goal is to build on docker (and other container tools) to create a natural interface for the problems Batch is trying to solve. The expectation is that the commands to be executed will be specified as part of the Job. In particular, I think if you don't specify the command, the command set is empty and no commands get run. It doesn't default to the docker command by default when no command is specified. So I would solve this by just always invoking the image with `--entrypoint <shell>`. > Long term, I think it would be better to use docker engine for LocalBackend, so that container config/create/start between ServiceBackend and LocalBackend could have a common interface. While code sharing often sounds nice, it also has the effect of entangling otherwise separate pieces of code. That means they cannot evolve separately and makes development more difficult. We have lots of plans to evolve the service backend that won't have analogues in the local backend, and I feel this proposal would make those changes harder and make the code more complex to handle two use cases.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9219#issuecomment-670667174:117,wrap,wrapper,117,https://hail.is,https://github.com/hail-is/hail/pull/9219#issuecomment-670667174,3,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,Just saw your final comment. Do you see a problem with shipping our C++ ABI dependencies?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3973#issuecomment-410112524:76,depend,dependencies,76,https://hail.is,https://github.com/hail-is/hail/pull/3973#issuecomment-410112524,1,['depend'],['dependencies']
Integrability,"Just skimmed the discussion. >> I've been working on an R interface to Hail through the sparklyr package; >; > this also sounds awesome. woah, hell yes. I'll look tomorrow. Our build situation is a bit messed up right now. I'll try to isolate your issue and fix it. Moreover, I should be fixing the build situation for good soon. Can you share a full executor log for an executor that fails? That should have some information about why the spark context got shut down.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4513#issuecomment-430451868:58,interface,interface,58,https://hail.is,https://github.com/hail-is/hail/issues/4513#issuecomment-430451868,1,['interface'],['interface']
Integrability,"Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12666#issuecomment-1426340756:84,interface,interface,84,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426340756,1,['interface'],['interface']
Integrability,"Just want to track where aiodns is used, mostly because I don't understand dns resolution during client request issuance, acceptance (route registration/resolution), and want to. I know that asyncio provides the ability to lookup ip and domain name (dns lookup, reverse). But does this need to happen when I issue a normal request (in which I don't want to return the domain->ip mapping)?. Relates to #5616, #5624. cc @jigold, @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5625:134,rout,route,134,https://hail.is,https://github.com/hail-is/hail/issues/5625,1,['rout'],['route']
Integrability,"Keeping in mind Cotton's queries last week, researched and found much lighter alternative to ExprsesJS for the server api. A few years ago, Express had low impact on node performance; it has become bloated. Found a light (~200 LOC) ""framework"" called Polka, that is small enough to maintain ourselves. It mainly adds light route-matching capabilities, to avoid repeating boilerplate when writing the Node server. Easy to follow. It's also the fastest ""framework"" available, outside of C/Go/Rust. Matches Falcon, and allows 1 language for server/web. (Also Node has a far larger ecosystem).; * https://github.com/the-benchmarker/web-frameworks ; * Polka also nearly compatible with Express's middleware api, so many existing packages are either directly usable, or with minor modifications. This was a desire of mine, since nearly everything server-y for node is really written for Express. Last commit removes all Express, adds a rewritten express-jwt for access token verification, and shows client credential exchange, backed by Redis cache, for <=4ms fetching of",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931#issuecomment-447583569:323,rout,route-matching,323,https://hail.is,https://github.com/hail-is/hail/pull/4931#issuecomment-447583569,2,['rout'],['route-matching']
Integrability,KeyTable.from_py needs interface changes,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2016:23,interface,interface,23,https://hail.is,https://github.com/hail-is/hail/issues/2016,1,['interface'],['interface']
Integrability,"Konrad hit:; ``` File ""<decorator-gen-816>"", line 2, in import_matrix_table; File ""/tmp/933dc754-b6e8-446f-986d-f4900becb0bd/hail-devel-ef2f48e719c3.zip/hail/utils/java.py"", line 208, in handle_py4j; hail.utils.java.FatalError: AssertionError: assertion failed: WrappedArray(): Struct{f0:String,f1:Int32}. Java stack trace:; java.lang.AssertionError: assertion failed: WrappedArray(): Struct{f0:String,f1:Int32}; at scala.Predef$.assert(Predef.scala:170); at is.hail.expr.types.MatrixType.<init>(MatrixType.scala:45); at is.hail.expr.types.MatrixType$.fromParts(MatrixType.scala:23); at is.hail.io.LoadMatrix$.apply(LoadMatrix.scala:343); at is.hail.HailContext$$anonfun$importMatrices$1.apply(HailContext.scala:555); at is.hail.HailContext$$anonfun$importMatrices$1.apply(HailContext.scala:555); at is.hail.HailContext.forceBGZip(HailContext.scala:498); at is.hail.HailContext.importMatrices(HailContext.scala:554); at is.hail.HailContext.importMatrix(HailContext.scala:540); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:498); at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); at py4j.Gateway.invoke(Gateway.java:280); at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); at py4j.commands.CallCommand.execute(CallCommand.java:79); at py4j.GatewayConnection.run(GatewayConnection.java:214); at java.lang.Thread.run(Thread.java:748); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3017:262,Wrap,WrappedArray,262,https://hail.is,https://github.com/hail-is/hail/issues/3017,2,['Wrap'],['WrappedArray']
Integrability,"Koro"">Sasha Korotkov</a></li>; <li><a href=""https://github.com/timemachine3030"">Daniel Lopretto</a></li>; <li><a href=""https://github.com/MikeBishop"">Mike Bishop</a></li>; <li><a href=""https://github.com/DigitalBrainJS"">Dmitriy Mozgovoy</a></li>; <li><a href=""https://github.com/bimbiltu"">Mark</a></li>; <li><a href=""https://github.com/piiih"">Philipe Gouveia Paixão</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/axios/axios/blob/master/CHANGELOG.md"">axios's changelog</a>.</em></p>; <blockquote>; <h3>0.21.2 (September 4, 2021)</h3>; <p>Fixes and Functionality:</p>; <ul>; <li>Updating axios requests to be delayed by pre-emptive promise creation (<a href=""https://github-redirect.dependabot.com/axios/axios/pull/2702"">#2702</a>)</li>; <li>Adding &quot;synchronous&quot; and &quot;runWhen&quot; options to interceptors api (<a href=""https://github-redirect.dependabot.com/axios/axios/pull/2702"">#2702</a>)</li>; <li>Updating of transformResponse (<a href=""https://github-redirect.dependabot.com/axios/axios/pull/3377"">#3377</a>)</li>; <li>Adding ability to omit User-Agent header (<a href=""https://github-redirect.dependabot.com/axios/axios/pull/3703"">#3703</a>)</li>; <li>Adding multiple JSON improvements (<a href=""https://github-redirect.dependabot.com/axios/axios/pull/3688"">#3688</a>, <a href=""https://github-redirect.dependabot.com/axios/axios/pull/3763"">#3763</a>)</li>; <li>Fixing quadratic runtime and extra memory usage when setting a maxContentLength (<a href=""https://github-redirect.dependabot.com/axios/axios/pull/3738"">#3738</a>)</li>; <li>Adding parseInt to config.timeout (<a href=""https://github-redirect.dependabot.com/axios/axios/pull/3781"">#3781</a>)</li>; <li>Adding custom return type support to interceptor (<a href=""https://github-redirect.dependabot.com/axios/axios/pull/3783"">#3783</a>)</li>; <li>Adding security fix for ReDoS vulnerabi",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11080:6134,depend,dependabot,6134,https://hail.is,https://github.com/hail-is/hail/pull/11080,2,['depend'],['dependabot']
Integrability,"L according to SAM spec. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1619"">#1619</a>)</p>; <h2>3.0.0</h2>; <p>Htsjdk 3.0.0: Revenge of the Simple Allele</p>; <p>This is the first htsjdk with a major version increase in a long time. We bumped it to indicate there are some breaking changes that will potentially require downstream code changes. Notably, <code>Allele</code> became an interface instead of a concrete class. <code>SimpleAllele</code> may be used as a replacement if you have classes which previously subclassed allele.</p>; <p>New Plugin Infrastructure:; 6a60de7c2 Move API marker annotations into new annotation package. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1558"">#1558</a>); 7ac95d5f7 Plugin framework and interfaces for versioned file format codecs (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1525"">#1525</a>); d40fe5412 Beta implementation of Bundles. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1546"">#1546</a>)</p>; <p>CRAM; 489c4192d Support CRAM reference regions. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1605"">#1605</a>); 22aec6782 Fix decoding of CRAM Scores read feature during normalization. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1592"">#1592</a>); 6507249a4 Make the CRAM MD5 failure message more user friendly. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1607"">#1607</a>); b5af659e6 Fix restoration of read base feature code. <a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1379"">#1379</a> (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1590"">#1590</a>); e63c34a92 Ignore TC, TN on CRAM read (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1578"">#1578</a>)</p>; <p>BAM/SAM; 1449dec45 Support loading of CSI from URLs/streams. <a href=""https://github-redirect.dependabot.com/samtools/htsjdk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12229:2028,depend,dependabot,2028,https://hail.is,https://github.com/hail-is/hail/pull/12229,2,['depend'],['dependabot']
Integrability,"L-2021-1021</li>; <li><a href=""https://github.com/jupyter/nbconvert/commit/a03cbb8a8d04d47aefec51e7b1b816045682aed5""><code>a03cbb8</code></a> GHSL-2021-1026, GHSL-2021-1025</li>; <li><a href=""https://github.com/jupyter/nbconvert/commit/48fe71eb3335caf4e03166e56e0d16efcfbeaf44""><code>48fe71e</code></a> GHSL-2021-1024</li>; <li>Additional commits viewable in <a href=""https://github.com/jupyter/nbconvert/compare/6.5...6.5.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=nbconvert&package-manager=pip&previous-version=6.5.0&new-version=6.5.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12125:2328,depend,dependabot-automerge-start,2328,https://hail.is,https://github.com/hail-is/hail/pull/12125,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"L/PyMySQL/commit/1e28be81c24dde66f8acbf4c5e24f60d6b5e72e7""><code>1e28be8</code></a> chore(deps): update github/codeql-action action to v3 (<a href=""https://redirect.github.com/PyMySQL/PyMySQL/issues/1154"">#1154</a>)</li>; <li><a href=""https://github.com/PyMySQL/PyMySQL/commit/f13f054abcc18b39855a760a84be0a517f0da658""><code>f13f054</code></a> chore(deps): update actions/setup-python action to v5 (<a href=""https://redirect.github.com/PyMySQL/PyMySQL/issues/1152"">#1152</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/PyMySQL/PyMySQL/compare/v1.1.0...v1.1.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pymysql&package-manager=pip&previous-version=1.1.0&new-version=1.1.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14556:7738,Depend,Dependabot,7738,https://hail.is,https://github.com/hail-is/hail/pull/14556,1,['Depend'],['Dependabot']
Integrability,"L/commit/f65351b1bd6c02eab07f20cbedada6ebfbf6d56d""><code>f65351b</code></a> Do not create universal wheel</li>; <li><a href=""https://github.com/PyMySQL/PyMySQL/commit/6e5d5bd94af056c66a1ed05de754a83f8628faea""><code>6e5d5bd</code></a> v1.0.0</li>; <li>Additional commits viewable in <a href=""https://github.com/PyMySQL/PyMySQL/compare/v0.9.2...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pymysql&package-manager=pip&previous-version=0.9.2&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11595:5337,Depend,Dependabot,5337,https://hail.is,https://github.com/hail-is/hail/pull/11595,1,['Depend'],['Dependabot']
Integrability,"Large collection of interface improvements to asm4s and Emit {Emit}{Module, Class, Method, Function}Builder. The main goal here is to make generating arbitrary classes a first class activity. Here is a summary of changes:; - newLocal now has parameters: newLocal(). This is a step towards requiring names on all generated objects.; - {Emit}{Class, Method, Function}Builder now takes a type parameter that represents (a supertype) of the class being built: e.g. MethodBuilder[C] is a builder for a method on a class of type C. Note, we can't have a type parameter that represents the actual class type because that doesn't exist yet.; - {Emit}FunctionBuilder all but gone: {Emit}FunctionBuilder is now just a {Emit}MethodBuilder is an apply method. Most functionality moved to {Emit}ClassBuilder.; - Added EmitClassBuilder.; - It is convenient to have e.g. MethodBuilder support the ClassBuilder interface: this is what the Wrapped traits are for: MethodBuilder extends WrappedClassBuilder and ClassBuilder extends WrappedModuleBuilder. So MethodBuilder has the ClassBuilder interface, but is not actually a ClassBuilder. I tried a bunch of variants for the design of this, and while I don't think this is quite perfect, it seems workable.; - EmitMethodBuilder extends WrappedMethodBuilder, etc. Rather than overloading, the two interfaces are distinct: genMethod vs genEmitMethod, etc.; - Pushed ""new vs gen"" into more places e.g. newMethod vs genMethod. newMethod takes a name and creates a method of that name (e.g. apply). genMethod takes a baseName and creates a unique name based on the baseName.; - MethodBuilder newField => genFieldThisRef to distinguish it from ClassBuilder.newField. The former returns a Settable[T] referencing `this.<field>`, the latter just returns a Field.; - All methods supporting code generation for IR take EmitMethodBuilder rather than MethodBuilder (PType routines, aggregators, etc.). Summarizing the new class structure:. ```; class ModuleBuilder; trait WrappedMo",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8335:20,interface,interface,20,https://hail.is,https://github.com/hail-is/hail/pull/8335,5,"['Wrap', 'interface']","['Wrapped', 'WrappedClassBuilder', 'WrappedModuleBuilder', 'interface']"
Integrability,Leaves RVDPartitioner.broadcast and HailContext.hadoopConfBc untouched. Backend.broadcast is just a thin wrapper around SparkContext.broadcast for the SparkBackend case.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6269:105,wrap,wrapper,105,https://hail.is,https://github.com/hail-is/hail/pull/6269,1,['wrap'],['wrapper']
Integrability,Less aggressive devel message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3188:22,message,message,22,https://hail.is,https://github.com/hail-is/hail/pull/3188,1,['message'],['message']
Integrability,Let me know if you need the context. I don't think it's necessary and will break my interface. I didn't want the job id to be available until the whole batch is submitted and the batch id is available.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6332:84,interface,interface,84,https://hail.is,https://github.com/hail-is/hail/pull/6332,1,['interface'],['interface']
Integrability,Let me know if you think the error message is clear.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9164:35,message,message,35,https://hail.is,https://github.com/hail-is/hail/pull/9164,1,['message'],['message']
Integrability,Let me try synchronizing on a lock object instead of this. It's possible that something else (logging?) may be synchronizing on `this`.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4068#issuecomment-411201627:11,synchroniz,synchronizing,11,https://hail.is,https://github.com/hail-is/hail/pull/4068#issuecomment-411201627,2,['synchroniz'],['synchronizing']
Integrability,Let's merge this so people don't get horrible error messages for now. I'll make an issue to make typecheck more powerful.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1826#issuecomment-301973652:52,message,messages,52,https://hail.is,https://github.com/hail-is/hail/pull/1826#issuecomment-301973652,1,['message'],['messages']
Integrability,Let's remember to message him when we fix this ticket.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4522#issuecomment-429350451:18,message,message,18,https://hail.is,https://github.com/hail-is/hail/issues/4522#issuecomment-429350451,1,['message'],['message']
Integrability,Linreg info message shouldn't include intercept,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2777:12,message,message,12,https://hail.is,https://github.com/hail-is/hail/issues/2777,1,['message'],['message']
Integrability,"LocalMatrix follows NumPy's broadcast rules (restricted to two-dimensional ndarrays), and I've tried to mirror the Numpy interface for all functions where it's reasonable to do so. I still need time to add a bunch of Python tests of the interface, but I'd be glad for feedback/review in the meantime. In a subsequent PR, I'll expose the rest of BlockMatrix's binary ops in Python with the similar syntax and rules. These changes will provide the matrix functionality needed for a clean mixed models pipeline (modulo a few Scala black boxes that I can return to once I have something working) and will hopefully be generally useful for adding/porting more methods in Python. Current longer-term plan is to expose RowMatrix as well, and consider how to best unify the interfaces. And one day LocalMatrix will actually be a NumPy array...",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3064:121,interface,interface,121,https://hail.is,https://github.com/hail-is/hail/pull/3064,3,['interface'],"['interface', 'interfaces']"
Integrability,"Log a warning instead of crashing when a type guard import fails to resolve</li>; <li>When resolving type guard imports if the target module does not have source code (such is the case for C-extension; modules) do nothing instead of crashing</li>; </ul>; <h2>1.15.1</h2>; <ul>; <li>Fix <code>fully_qualified</code> should be <code>typehints_fully_qualified</code></li>; </ul>; <h2>1.15.0</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/bf27befb610426838d1f2926e470815c47cc8ab8""><code>bf27bef</code></a> Fix for new nptyping (<a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/issues/235"">#235</a>)</li>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/7ee38919ba491d79918b1224ddcf0460db467514""><code>7ee3891</code></a> Support and require nptyping 2.1.1 (<a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/issues/232"">#232</a>)</li>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/bff0765fbaf628a314e210bb2903b2f0b4ed6ff6""><code>bff0765</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/issues/230"">#230</a>)</li>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/73aa9b6aea40720ca270b1107c1980b909943cb3""><code>73aa9b6</code></a> Fix mock imports on guarded imports (<a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/issues/225"">#225</a>)</li>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/4d5867d5a235040b3e7d3373a56c5b2b580db7b7""><code>4d5867d</code></a> Handle UnionType (<a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/issues/221"">#221</a>)</li>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/13ca2b458b0ee9c8d1c9",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11909:4948,depend,dependabot,4948,https://hail.is,https://github.com/hail-is/hail/pull/11909,1,['depend'],['dependabot']
Integrability,"Long term, I think it would be better to use docker engine for LocalBackend, so that container config/create/start between ServiceBackend and LocalBackend could have a common interface. If you're interested, after regenie is finished, I can PR.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9219#issuecomment-670291415:175,interface,interface,175,https://hail.is,https://github.com/hail-is/hail/pull/9219#issuecomment-670291415,1,['interface'],['interface']
Integrability,"Looking at the auth image, it is down from 2.76GB in main to 674MB. The hail-ubuntu image underneath it has stayed basically the same at about half the new auth image. Nearly all of the 674MB is split evenly between the layer that installs python in hail-ubuntu and the layer that installs the pip dependencies in the auth image. I've not yet inspected the hail-ubuntu layer, but for the pip dependencies the main offenders are:. ```; 77M	/usr/local/lib/python3.7/dist-packages/googleapiclient; 76M	/usr/local/lib/python3.7/dist-packages/botocore; 33M	/usr/local/lib/python3.7/dist-packages/_sass.abi3.so; 29M	/usr/local/lib/python3.7/dist-packages/kubernetes_asyncio; 20M	/usr/local/lib/python3.7/dist-packages/uvloop; 14M	/usr/local/lib/python3.7/dist-packages/pip; 14M	/usr/local/lib/python3.7/dist-packages/cryptography; 8.9M	/usr/local/lib/python3.7/dist-packages/google; 7.9M	/usr/local/lib/python3.7/dist-packages/pygments; 7.0M	/usr/local/lib/python3.7/dist-packages/azure; 5.0M	/usr/local/lib/python3.7/dist-packages/setuptools; 4.2M	/usr/local/lib/python3.7/dist-packages/aiohttp; 2.5M	/usr/local/lib/python3.7/dist-packages/googlecloudprofiler; 2.2M	/usr/local/lib/python3.7/dist-packages/yaml; 2.2M	/usr/local/lib/python3.7/dist-packages/hailtop; 2.0M	/usr/local/lib/python3.7/dist-packages/rich; 1.6M	/usr/local/lib/python3.7/dist-packages/pyasn1_modules; 1.5M	/usr/local/lib/python3.7/dist-packages/boto3; 1.4M	/usr/local/lib/python3.7/dist-packages/pkg_resources; 1.4M	/usr/local/lib/python3.7/dist-packages/oauthlib; 1.1M	/usr/local/lib/python3.7/dist-packages/pycparser; ```. Most of a gigabyte still feels annoyingly bloated but might just have to do for now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12578#issuecomment-1459376308:298,depend,dependencies,298,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1459376308,2,['depend'],['dependencies']
Integrability,Looks good other than a couple nits on the error message.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1005#issuecomment-256483820:49,message,message,49,https://hail.is,https://github.com/hail-is/hail/pull/1005#issuecomment-256483820,1,['message'],['message']
Integrability,Looks good! I'll accept once the dependent PR is accepted,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5458#issuecomment-468026163:33,depend,dependent,33,https://hail.is,https://github.com/hail-is/hail/pull/5458#issuecomment-468026163,1,['depend'],['dependent']
Integrability,Looks like test failure is due to needing to wrap phenotype in array in this line; `top_5_pvals = (vds.linreg('sa.metadata.CaffeineConsumption')`; of; https://github.com/hail-is/hail/blob/master/python/hail/docs/tutorials/expression-language-part-2.ipynb,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2042#issuecomment-318833001:45,wrap,wrap,45,https://hail.is,https://github.com/hail-is/hail/pull/2042#issuecomment-318833001,1,['wrap'],['wrap']
Integrability,Looks like they changed their error message. See [here](https://ci.hail.is/batches/3181369/jobs/80) for an example.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11942:36,message,message,36,https://hail.is,https://github.com/hail-is/hail/pull/11942,1,['message'],['message']
Integrability,"Looks like this now:; ```; In [1]: import hail as hl; ...: mt = hl.utils.range_matrix_table(10, 10); ...: mt = mt.annotate_rows(foo = 'hi', bar = 'bye'); ...: mt2 = mt.annotate_rows(foo = 3, baz = 'hello'); ...: mt.union_cols(mt2, drop_right_row_fields=False); ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); Cell In[1], line 5; 3 mt = mt.annotate_rows(foo = 'hi', bar = 'bye'); 4 mt2 = mt.annotate_rows(foo = 3, baz = 'hello'); ----> 5 mt.union_cols(mt2, drop_right_row_fields=False). File <decorator-gen-1302>:2, in union_cols(self, other, row_join_type, drop_right_row_fields). File ~/projects/hail/hail/python/hail/typecheck/check.py:584, in _make_dec.<locals>.wrapper(__original_func, *args, **kwargs); 581 @decorator; 582 def wrapper(__original_func, *args, **kwargs):; 583 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 584 return __original_func(*args_, **kwargs_). File ~/projects/hail/hail/python/hail/matrixtable.py:3970, in MatrixTable.union_cols(self, other, row_join_type, drop_right_row_fields); 3965 if shared_field_names:; 3966 field_infos = [; 3967 f' {f!r}: left type is {self.row_value.dtype[f]}, right type is {other.row_value.dtype[f]}.'; 3968 for f in shared_field_names; 3969 ]; -> 3970 raise ValueError(; 3971 f'When drop_right_row_fields=True, the matrix tables must '; 3972 f'have distinct row fields. These fields were found to be in both tables:\n' +; 3973 '\n'.join(field_infos) +; 3974 '\nConsider renaming the fields in the right-hand-side matrix table so they are distinct from those fields in the left-hand-side.'; 3975 ); 3977 return MatrixTable(ir.MatrixUnionCols(self._mir, other._mir, row_join_type)). ValueError: When drop_right_row_fields=True, the matrix tables must have distinct row fields. These fields were found to be in both matrix tables:; 'bar': left type is str, right type is str.; 'foo': left type is str, right type is int32.;",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13144#issuecomment-1576941505:740,wrap,wrapper,740,https://hail.is,https://github.com/hail-is/hail/pull/13144#issuecomment-1576941505,2,['wrap'],['wrapper']
Integrability,Looks like you need to [update the Google Artifact Registry cleanup policies](https://batch.hail.is/batches/8076011/jobs/210) to account for your new image. Instructions to do so are in the error message.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13936#issuecomment-1783512175:196,message,message,196,https://hail.is,https://github.com/hail-is/hail/pull/13936#issuecomment-1783512175,1,['message'],['message']
Integrability,"Looks my comment got lost! Sorry. I said, I'd prefer we didn't copy the HailContext whole hog, but just write a simple wrapper that calls from hail2.HailContext to hail.HailContext, so something like:. ```; class HailContext:; def __init__(args...):; self.hc1 = hail.HailContext(args...). def import_bgen(args...):; return self.hc1.import_bgen(args...).to_hail2(); ```. etc. I don't think you even need docs unless there is something specifically different between the two. That way, we won't need to maintain two versions for things like doc changes and we won't get confused about which one is the ""real"" HailContext. Then, when we're ready to switch over, we can pull the docs across and throw away the stub.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2244#issuecomment-337717963:119,wrap,wrapper,119,https://hail.is,https://github.com/hail-is/hail/pull/2244#issuecomment-337717963,2,['wrap'],['wrapper']
Integrability,"Love it! Though email, not slack integration? 😛",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4509#issuecomment-428052468:33,integrat,integration,33,https://hail.is,https://github.com/hail-is/hail/pull/4509#issuecomment-428052468,1,['integrat'],['integration']
Integrability,"ME (<a href=""https://github-redirect.dependabot.com/python/typing_extensions/issues/1157"">#1157</a>)</li>; <li><a href=""https://github.com/python/typing_extensions/commit/c10296f15f92277ed1d3ed0c83103ae3818d3669""><code>c10296f</code></a> Add a README.rst file back temporarily. (<a href=""https://github-redirect.dependabot.com/python/typing_extensions/issues/1156"">#1156</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/python/typing_extensions/compare/4.2.0...4.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=typing-extensions&package-manager=pip&previous-version=4.2.0&new-version=4.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12200:4448,depend,dependabot,4448,https://hail.is,https://github.com/hail-is/hail/pull/12200,1,['depend'],['dependabot']
Integrability,"ML escaping.</li>; <li>0.8.6: Bug fixes. Stop supporting Python 3.3, 3.4.</li>; <li>0.8.5: Fix broken Windows package. Minor documentation updates.</li>; <li>0.8.4: Bug fixes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/astanin/python-tabulate/commits/v0.8.9"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=tabulate&package-manager=pip&previous-version=0.8.3&new-version=0.8.9)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11478:1705,Depend,Dependabot,1705,https://hail.is,https://github.com/hail-is/hail/pull/11478,2,['Depend'],['Dependabot']
Integrability,"ML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/jupyter/jupyter_client/commit/5a12a3842563c682dd462eb73000adff1fcedd0f""><code>5a12a38</code></a> Publish 8.0.2</li>; <li><a href=""https://github.com/jupyter/jupyter_client/commit/717d36edcd9ce595f727d8b5a27e270c2a6e2c46""><code>717d36e</code></a> Adopt more ruff rules (<a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/issues/924"">#924</a>)</li>; <li><a href=""https://github.com/jupyter/jupyter_client/commit/666eab0b8cd7991697a9957001cf78401a76c52d""><code>666eab0</code></a> Add papermill downstream check and fix kernel client replies (<a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/issues/925"">#925</a>)</li>; <li><a href=""https://github.com/jupyter/jupyter_client/commit/fac9c3a890599ca8d7ee73206f98d75574cf4ca8""><code>fac9c3a</code></a> Prefer print in kernelspecapp (<a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/issues/923"">#923</a>)</li>; <li><a href=""https://github.com/jupyter/jupyter_client/commit/9904c4163a60c5e98737c7934b9a876c806c58fa""><code>9904c41</code></a> Publish 8.0.1</li>; <li><a href=""https://github.com/jupyter/jupyter_client/commit/dc6113c360e05122430b8e130374e9f4e4b701d7""><code>dc6113c</code></a> Fix json_output in kernelspec app (<a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/issues/921"">#921</a>)</li>; <li><a href=""https://github.com/jupyter/jupyter_client/commit/dac3cc2caa83dde06a69012e610717019026aa4e""><code>dac3cc2</code></a> Publish 8.0.0</li>; <li><a href=""https://github.com/jupyter/jupyter_client/commit/760a7835d8b20a9daea3737759b1751d5e55dad8""><code>760a783</code></a> MAINT: Don't format log in log call. (<a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/issues/919"">#919</a>)</li>; <li><a href=""https://github.com/jupyter/jupyter_client/commit/0ab0feb42fcdfe1a2528f630ca269c9fda6a2675""><code>0ab",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12656:7225,depend,dependabot,7225,https://hail.is,https://github.com/hail-is/hail/pull/12656,1,['depend'],['dependabot']
Integrability,"MS by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2817"">cbeust/testng#2817</a></li>; <li>Ability to retry a data provider during failures by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2820"">cbeust/testng#2820</a></li>; <li>Refactoring by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2821"">cbeust/testng#2821</a></li>; <li>Fixing bug with DataProvider retry by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2822"">cbeust/testng#2822</a></li>; <li>Add config key for callback discrepancy behavior by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2823"">cbeust/testng#2823</a></li>; <li>Upgrading versions by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2824"">cbeust/testng#2824</a></li>; <li>Fix <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2770"">#2770</a>: FileAlreadyExistsException on copy by <a href=""https://github.com/melloware""><code>@​melloware</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2827"">cbeust/testng#2827</a></li>; <li>JarFileUtils.delete(File f) throw actual exception (instead of FileNotFound) when file cannot be deleted <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2825"">#2825</a> by <a href=""https://github.com/speedythesnail""><code>@​speedythesnail</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2826"">cbeust/testng#2826</a></li>; <li>GITHUB-2830 - Failsafe parameter.toString by ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:4098,depend,dependabot,4098,https://hail.is,https://github.com/hail-is/hail/pull/12665,1,['depend'],['dependabot']
Integrability,"Made the following changes:. - Disabled dataproc tests; - Moved dataproc tests to Makefile, to be run before manual deploys; - Add back VEP cluster test script; - Removed cloudtools config files; - Removed the latest-build functionality; - Added VEP scripts to hailctl/dataproc/resources; - Changed init_notebook to pip install hail wheels, picking up; dependencies automatically; - add out-of-date check (once per day) to hailctl startup",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6250:353,depend,dependencies,353,https://hail.is,https://github.com/hail-is/hail/pull/6250,1,['depend'],['dependencies']
Integrability,"Make targets for building docs were renamed in #8086 and #9348. `make install-dev-deps` does not cover all build dependencies for docs (it does not install pandoc), so added a note about what is required.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9458:113,depend,dependencies,113,https://hail.is,https://github.com/hail-is/hail/pull/9458,1,['depend'],['dependencies']
Integrability,"Make the same resiliency changes I made to site recent to the other stateless services. Schedule them on 3 nodes, tolerate pre-emptibles, and autoscale 3-10 replicas. Preemptibles might be too aggressive, we should watch uptime. We probably want at least once instance running on non-preemptibles. We can do that explicitly by duplicating the pod spec, but I don't see a way to do it with tolerations and/or (anti-)affinities. We can also do this with notebook2 since it is stateless, but I'll leave that for another PR. I changed the Makefile structure, basically, don't support local docker build anymore and always pull from the repo and use --cache-from. I will modify the rest of the projects analogously in a separate PR. Switch infrastructure modules (gateway, router-resolver) to new jinja2 templating, instead of old @foo@ sed-based templating.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6201:768,rout,router-resolver,768,https://hail.is,https://github.com/hail-is/hail/pull/6201,1,['rout'],['router-resolver']
Integrability,Make the version length coming from error messages consistent,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3593:42,message,messages,42,https://hail.is,https://github.com/hail-is/hail/pull/3593,1,['message'],['messages']
Integrability,"Many annotations are base-dependent rather than variant-dependant. For these, we want to annotate bases or intervals with multiple annotations from the same file. This should support multiple types (String, Int, Double)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/350:26,depend,dependent,26,https://hail.is,https://github.com/hail-is/hail/issues/350,2,['depend'],"['dependant', 'dependent']"
Integrability,"Many of our tests look like:. ```scala; // ExprSuite.scala; assert(eval[Int](""a[0]"").contains(1)); assert(eval[Int](""a[1]"").contains(2)); assert(eval[Int](""a[2]"").isEmpty); assert(eval[Int](""a[3]"").contains(6)); assert(eval[Int](""a[-1]"").contains(8)); assert(eval[Int](""a[-2]"").contains(-1)); ```. Test failures from these expressions simply state that the result was not as expected. If these tests were instead written as below,. ```scala; assert(eval[Int](""a[0]"") == Some(1)); assert(eval[Int](""a[1]"") == Some(2)); assert(eval[Int](""a[2]"") == None); assert(eval[Int](""a[3]"") == Some(6)); assert(eval[Int](""a[-1]"") == Some(8)); assert(eval[Int](""a[-2]"") == Some(-1)); ```; then test failures would print both the expected value and the actual value:; ```; org.scalatest.exceptions.TestFailedException: Some(7) did not equal Some(1); ```. Furthermore, there are a tools in the [scalatest library](http://www.scalatest.org/at_a_glance/FlatSpec) which enable richer specifications. Suppose that Hail included a `randInt : (Int, Int) => Int` function, we might like to verify that this is true:. ```scala; eval[Int](""randInt(0, 10) * 2 + 1"") should (be > 0 and be (even)); ```. When this expression fails, the messages look like:. ```; org.scalatest.exceptions.TestFailedException: 7 was greater than 0, but 7 was odd; ```. These natural language matchers are a bit finicky. I'm not sure if I like them, but I do like having nice error messages.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1286:1208,message,messages,1208,https://hail.is,https://github.com/hail-is/hail/issues/1286,2,['message'],['messages']
Integrability,"Map()), Map(null -> Map(WrappedArray() -> 2)))); , Set(WrappedArray()); , Set( WrappedArray(); , WrappedArray(Map(null -> Map()))); , Set(); , Set( WrappedArray(Map(null -> null)); , WrappedArray(Map(null -> Map()))); , Set( WrappedArray(Map(null -> Map(WrappedArray(null) -> 1)), Map(null -> Map(WrappedArray(5) -> 2))); , WrappedArray(Map())); , Set(); , Set(); , Set(WrappedArray(); , WrappedArray(Map(null -> Map()))); , Set(); , Set( null; , WrappedArray()); , Set( WrappedArray(Map(null -> Map(WrappedArray(1) -> 19))); , WrappedArray(Map(null -> Map(WrappedArray(0) -> 2)), Map(null -> Map())); , WrappedArray(Map(null -> Map())); , WrappedArray(Map(null -> Map(WrappedArray(2) -> null)), Map(null -> Map(WrappedArray() -> 17)), Map(null -> Map(WrappedArray() -> 1)))); , Set(WrappedArray(Map(null -> Map(WrappedArray(null) -> 1)), Map(null -> Map(WrappedArray(2) -> 0, WrappedArray() -> null)), Map(), Map())); , Set(WrappedArray(Map(null -> Map()), Map(null -> Map()), Map(null -> Map(WrappedArray(0) -> 0)))); , Set( WrappedArray(); , WrappedArray(Map(null -> Map(WrappedArray(0) -> null)))); , Set(WrappedArray(Map())); , Set( WrappedArray(Map()); , WrappedArray(Map(null -> Map(WrappedArray() -> 0))); , WrappedArray(Map(null -> Map()))); , Set(); , Set( WrappedArray(); , WrappedArray(Map(null -> Map(WrappedArray(null) -> 2))); , WrappedArray(Map(null -> Map()))); , Set( WrappedArray(Map(null -> Map(WrappedArray() -> 0))); , WrappedArray(Map(), Map(null -> Map()), Map(), Map(null -> Map(WrappedArray(0) -> null)))); ); , Set(null); , WrappedArray( WrappedArray(null, [null,false,1], [null,true,6]); , WrappedArray(); , WrappedArray([null,false,0], [null,true,1]); , WrappedArray(); , null; , WrappedArray(); , null; , WrappedArray(null, [null,false,0], null); , WrappedArray(null, null, null, [null,false,null]); , WrappedArray(null, [null,true,null]); , WrappedArray([null,true,null]); , WrappedArray([null,true,1]); , WrappedArray([null,false,null], null, null); , WrappedArray([nul",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1902:2820,Wrap,WrappedArray,2820,https://hail.is,https://github.com/hail-is/hail/pull/1902,1,['Wrap'],['WrappedArray']
Integrability,"Maryam,; I ran this command in Unix:. ```; gunzip -c <file> | cut -f4 | sort | uniq -c; 20709505 A; 20934670 C; 20968049 G; 20693812 T; 25 alt; ```. I think the problem is that the headers from all the files were included in the one file. I'm running another grep now to be sure. I'll fix the error message though!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/317#issuecomment-212477402:299,message,message,299,https://hail.is,https://github.com/hail-is/hail/issues/317#issuecomment-212477402,1,['message'],['message']
Integrability,"Masahiro got this error message: . ```; File ""/tmp/59d4e99c253d424a9211eec0bdb4cd37/write_hardcall_mt.py"", line 20, in <module>; hl.export_bgen(mt, f'gs://ukbb-hail/ukb31063.dosage.hard_call.gwas_samples.chr{chrom}', gp=mt.GP, varid=mt.rsid); File ""</opt/conda/default/lib/python3.6/site-packages/decorator.py:decorator-gen-1226>"", line 2, in export_bgen; File ""/opt/conda/default/lib/python3.6/site-packages/hail/typecheck/check.py"", line 585, in wrapper; return __original_func(*args_, **kwargs_); File ""/opt/conda/default/lib/python3.6/site-packages/hail/methods/impex.py"", line 235, in export_bgen; Env.hail().utils.ExportType.getExportType(parallel)))); File ""/opt/conda/default/lib/python3.6/site-packages/hail/backend/backend.py"", line 109, in execute; result = json.loads(Env.hc()._jhc.backend().executeJSON(self._to_java_ir(ir))); File ""/usr/lib/spark/python/lib/py4j-0.10.7-src.zip/py4j/java_gateway.py"", line 1257, in __call__; File ""/opt/conda/default/lib/python3.6/site-packages/hail/utils/java.py"", line 225, in deco; 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; hail.utils.java.FatalError: AssertionError: assertion failed. Java stack trace:; java.lang.RuntimeException: error while applying lowering 'InterpretNonCompilable'; at is.hail.expr.ir.lowering.LoweringPipeline$$anonfun$apply$1.apply(LoweringPipeline.scala:26); at is.hail.expr.ir.lowering.LoweringPipeline$$anonfun$apply$1.apply(LoweringPipeline.scala:18); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at is.hail.expr.ir.lowering.LoweringPipeline.apply(LoweringPipeline.scala:18); at is.hail.expr.ir.CompileAndEvaluate$$anonfun$apply$1.apply(CompileAndEvaluate.scala:16); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.expr.ir.CompileAndEvaluate$.apply(CompileAndEvaluate.scala:14); at is.hail.backend.Backend$$anonfun$execute$1.apply(Backend.scala:56)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8161:24,message,message,24,https://hail.is,https://github.com/hail-is/hail/issues/8161,2,"['message', 'wrap']","['message', 'wrapper']"
Integrability,MatrixAggregateRowsByKey needs to take the new key and do something smarter than the full shuffle / contraction,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3645:100,contract,contraction,100,https://hail.is,https://github.com/hail-is/hail/issues/3645,1,['contract'],['contraction']
Integrability,MatrixReader errors are wrapped in Serialization MappingExceptions,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5030:24,wrap,wrapped,24,https://hail.is,https://github.com/hail-is/hail/issues/5030,1,['wrap'],['wrapped']
Integrability,Maybe ought to wait for #8649 to go in so I can add tests that depend on keying.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8665#issuecomment-621867329:63,depend,depend,63,https://hail.is,https://github.com/hail-is/hail/pull/8665#issuecomment-621867329,1,['depend'],['depend']
Integrability,Maybe we could keep a list here of things that we notice don't have a log message as we notice them?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1616#issuecomment-294024200:74,message,message,74,https://hail.is,https://github.com/hail-is/hail/issues/1616#issuecomment-294024200,1,['message'],['message']
Integrability,"Maybe we should make an issue tag for things to fix before 0.2? We can't fix this without making a breaking interface change, but it's a really easy change that we shouldn't forget to include once we do 0.2. More generally, it seems like it would be good if we knew what we were planning on including before next release.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1887#issuecomment-305268107:108,interface,interface,108,https://hail.is,https://github.com/hail-is/hail/issues/1887#issuecomment-305268107,1,['interface'],['interface']
Integrability,Maybe we should update the WARNING message to be clear that this is a transient error and we've automatically retried it and there's nothing to be worried about?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11817#issuecomment-1117649877:35,message,message,35,https://hail.is,https://github.com/hail-is/hail/pull/11817#issuecomment-1117649877,2,['message'],['message']
Integrability,Mention 'unify' in the union error message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5888:35,message,message,35,https://hail.is,https://github.com/hail-is/hail/pull/5888,1,['message'],['message']
Integrability,"Merge branch 'release-1.26.6' into develop</li>; <li>See full diff in <a href=""https://github.com/boto/boto3/compare/1.26.6...1.26.8"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=boto3&package-manager=pip&previous-version=1.26.6&new-version=1.26.8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12458:5830,Depend,Dependabot,5830,https://hail.is,https://github.com/hail-is/hail/pull/12458,17,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,Merging in https://github.com/hail-is/hail/pull/14233 causes the failure in `test_union_rows1`. Some strangeness with these new dependencies - running without this commit and everything works fine.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14231#issuecomment-1924903341:128,depend,dependencies,128,https://hail.is,https://github.com/hail-is/hail/pull/14231#issuecomment-1924903341,1,['depend'],['dependencies']
Integrability,"Milestone: <a href=""https://github.com/pallets/click/milestone/17?closed=1"">https://github.com/pallets/click/milestone/17?closed=1</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pallets/click/blob/main/CHANGES.rst"">click's changelog</a>.</em></p>; <blockquote>; <h2>Version 8.1.2</h2>; <p>Released 2022-03-31</p>; <ul>; <li>Fix error message for readable path check that was mixed up with the; executable check. :pr:<code>2236</code></li>; <li>Restore parameter order for <code>Path</code>, placing the <code>executable</code>; parameter at the end. It is recommended to use keyword arguments; instead of positional arguments. :issue:<code>2235</code></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/click/commit/030f53cf677ee1de534359c535d465eed0ec1d99""><code>030f53c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pallets/click/issues/2238"">#2238</a> from pallets/release-8.1.2</li>; <li><a href=""https://github.com/pallets/click/commit/2f1c35a43652e565802c230dbc47a9a358a0c6fd""><code>2f1c35a</code></a> release version 8.1.2</li>; <li><a href=""https://github.com/pallets/click/commit/77dd30f8c54ebbdfbf461cedcd3d1fc1d7673f95""><code>77dd30f</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pallets/click/issues/2237"">#2237</a> from pallets/param-order</li>; <li><a href=""https://github.com/pallets/click/commit/b36bf8f9b36ab7db8cf03cd8eff714dfc33f0c29""><code>b36bf8f</code></a> restore Path param order</li>; <li><a href=""https://github.com/pallets/click/commit/a66119abe973f55b4f5e28dbb0da6f3c32c21af7""><code>a66119a</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pallets/click/issues/2236"">#2236</a> from shadchin/patch-1</li>; <li><a href=""https://github.com/pallets/click/commit/92cebe902aa7f03a89f6b261d897964dd9c5fa43""><code>92cebe9</code>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11726:1546,depend,dependabot,1546,https://hail.is,https://github.com/hail-is/hail/pull/11726,1,['depend'],['dependabot']
Integrability,"Missing modulo and floor div. I think these are implemented in the engine, just not the interface.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2641:88,interface,interface,88,https://hail.is,https://github.com/hail-is/hail/issues/2641,1,['interface'],['interface']
Integrability,"Modify hailctl dev config to let you set the domain. Note, this is an; interface change since I changed `hailctl dev config` to act like; gcloud/kubectl `... set property value`. The hardest part of this was getting a doubly-nested subcommand to work in argprase. The existing code is wack, but I will change everything to work like hailctl dev/dev config does below.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9791:71,interface,interface,71,https://hail.is,https://github.com/hail-is/hail/pull/9791,1,['interface'],['interface']
Integrability,More logging messages.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9504:13,message,messages,13,https://hail.is,https://github.com/hail-is/hail/pull/9504,1,['message'],['messages']
Integrability,More specific error message when trying to read non-existent vds,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/327:20,message,message,20,https://hail.is,https://github.com/hail-is/hail/issues/327,1,['message'],['message']
Integrability,"Mostly doing this for visibility as we are profiling randomized PCA and dndarray stuff. . The diff makes this seem like more than it is, basically just wrapped the already existing code in method calls.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9318:152,wrap,wrapped,152,https://hail.is,https://github.com/hail-is/hail/pull/9318,1,['wrap'],['wrapped']
Integrability,"Move `localKeySort` to `OrderedRVIterator`. Previously, its only dependence on the `producerRegion` parameter was to clear the region as it consumed the producer iterator. That's now handled in `localSort` by a `boundary`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4409:65,depend,dependence,65,https://hail.is,https://github.com/hail-is/hail/pull/4409,1,['depend'],['dependence']
Integrability,"Moved main code from VSM.coalesce to OrderedRDD.; Handle dependencies and preferred locations.; In non-shuffle case, interpret requested partitions as maximum.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/686:57,depend,dependencies,57,https://hail.is,https://github.com/hail-is/hail/pull/686,1,['depend'],['dependencies']
Integrability,"Moved pyspark imports to be local to methods, removing numpy dependency",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1906:61,depend,dependency,61,https://hail.is,https://github.com/hail-is/hail/pull/1906,1,['depend'],['dependency']
Integrability,"My concern was that not finding a browser when expected would prevent the server from accepting connections, but you may be right. Events:; Type Reason Age From Message; ---- ------ ---- ---- -------; Normal Scheduled 1m default-scheduler Successfully assigned notebook-worker-9szt8 to gke-vdc-non-preemptible-pool-0106a51b-pgxq; Normal SuccessfulMountVolume 1m kubelet, gke-vdc-non-preemptible-pool-0106a51b-pgxq MountVolume.SetUp succeeded for volume ""default-token-xl2w9""; Normal Pulling 1m kubelet, gke-vdc-non-preemptible-pool-0106a51b-pgxq pulling image ""gcr.io/hail-vdc/hail-jupyter:e3f9a751f0a837815afeaf6fff8057f04747a35c908fb1ddf7cad6ad5cd428cd""; Normal Pulled 1m kubelet, gke-vdc-non-preemptible-pool-0106a51b-pgxq Successfully pulled image ""gcr.io/hail-vdc/hail-jupyter:e3f9a751f0a837815afeaf6fff8057f04747a35c908fb1ddf7cad6ad5cd428cd""; Normal Created 1m kubelet, gke-vdc-non-preemptible-pool-0106a51b-pgxq Created container; Normal Started 1m kubelet, gke-vdc-non-preemptible-pool-0106a51b-pgxq ; NAME READY STATUS RESTARTS AGE; notebook-worker-9szt8 0/1 Running 0 49s. Started container; Warning Unhealthy 3s (x7 over 1m) kubelet, gke-vdc-non-preemptible-pool-0106a51b-pgxq Readiness probe failed: Get http://10.32.12.42:8888/instance/notebook-worker-service-j7bp9/login: dial tcp 10.32.12.42:8888: getsockopt: connection refused. Regarding binding; he should also be bound to localhost. The service definition has 80 forwarded to an internal 8888. Here is his worker Dockerfile (no cmd starting the notebook server, unless implemented by one of the installed extensions automatically). ```; FROM jupyter/scipy-notebook; MAINTAINER Hail Team <hail@broadinstitute.org>. USER root; RUN apt-get update && apt-get install -y \; openjdk-8-jre-headless \; && rm -rf /var/lib/apt/lists/*; USER jovyan. RUN pip install --no-cache-dir \; 'jupyter-spark<0.5' \; hail==0.2.8 \; jupyter_contrib_nbextensions \; && \; jupyter serverextension enable --user --py jupyter_spark && \; jupyter nbextension",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5243#issuecomment-460097218:161,Message,Message,161,https://hail.is,https://github.com/hail-is/hail/pull/5243#issuecomment-460097218,1,['Message'],['Message']
Integrability,"My first approach was to populate an error.html template and return that. I could get the title to be ""Error"", but none of the content was showing up. I couldn't figure out why, so I switched to raising HTTPErrorFound with the traceback message. This works fine, but it won't work if we need the decorator above the authentication decorators. This decorator has to be the furthest down the call stack.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10503:237,message,message,237,https://hail.is,https://github.com/hail-is/hail/pull/10503,1,['message'],['message']
Integrability,"My main motivation is that I can use up-to-date versions of NumPy, SciPy and Pandas. > I think we're also feeling quite sour on conda at the moment as well. In particular, I had to fix the [environment.yml for LDSC](https://github.com/bulik/ldsc/pull/168) because **recent versions of conda removed scipy==0.18 from their registry**. Wow, that's bad. I did not know conda removes old packages. Are you using some continuous integration?; We are solving these issues by some policy that pull requests have to pass CI building. ; If there is a new version of e.g. Pandas, CI will install it when somebody pushes a commit.; In case the new package version breaks something, CI fails and we get a notification to fix it. This way, we can in general keep up to date with the latest package versions and only rise the minimum version number of dependencies.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7299#issuecomment-542194340:424,integrat,integration,424,https://hail.is,https://github.com/hail-is/hail/issues/7299#issuecomment-542194340,2,"['depend', 'integrat']","['dependencies', 'integration']"
Integrability,"NAPSHOT</li>; <li>Additional commits viewable in <a href=""https://github.com/qos-ch/slf4j/compare/v_1.7.25...v_2.0.6"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.slf4j:slf4j-api&package-manager=gradle&previous-version=1.7.25&new-version=2.0.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12714:2504,Depend,Dependabot,2504,https://hail.is,https://github.com/hail-is/hail/pull/12714,17,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"NB, this is a stacked PR. To see just these changes see [this commit](https://github.com/hail-is/hail/pull/12883/commits/ae51e0a9af12e4c89a44e7ce3235f3f665ff4830). ---. [VPC Flow Logs](https://cloud.google.com/vpc/docs/flow-logs):. > VPC Flow Logs records a sample of network flows sent from and received by VM instances, including; > instances used as Google Kubernetes Engine nodes. These logs can be used for network monitoring,; > forensics, real-time security analysis, and expense optimization. I found the collection process the most elucidating part of the documentation. My summary of that; process follows:. 1. Packets are sampled on the network interface of a VM. Google claims an average sampling rate of; 1/30. This rate reduces if the VM is under load. This rate is immutable to us. 2. Within an ""aggregation interval"", packets are aggregated into ""records"" which are keyed (my term); by source & destination. There are currently six choices for aggregation interval: 5s, 30s, 1m,; 5m, 10m, and 15m. 3. Records are sampled. The sampling rate is a user configured floating point number (precision; unclear) between 0 and 1. 4. Metadata is optionally added to the records. The metadata captures information about the source; and destination VM such as project id, VM name, zone, region, GKE pod, GKE service, and geographic; information of external parties. The user may elect to receive all metadata, no metadata, or a; specific set of metadata fields. 5. The records are written to Google Cloud Logging. The pricing of VPC Flow Logs is described at the [network pricing page](https://cloud.google.com/vpc/network-pricing#network-telemetry). Notice that, if logs are only sent to Cloud Logging (not to BigQuery, Pub/Sub, or Cloud Storage):. > If you store your logs in Cloud Logging, logs generation charges are waived, and only Logging charges apply. I believe in this phrase ""logs generation charges"" refers to *VPC Flow logs* generation charges. The Google Cloud Logging [pricing page]",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12883:656,interface,interface,656,https://hail.is,https://github.com/hail-is/hail/pull/12883,1,['interface'],['interface']
Integrability,NDArrayAggregator Method Wrap Add Values,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9318:25,Wrap,Wrap,25,https://hail.is,https://github.com/hail-is/hail/pull/9318,1,['Wrap'],['Wrap']
Integrability,NDArrayRef Better Error Message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9444:24,Message,Message,24,https://hail.is,https://github.com/hail-is/hail/pull/9444,1,['Message'],['Message']
Integrability,"NOTE: This issue is **only** about the error message. We can definitely produce a more insightful error message (perhaps suggesting the use of `.rows()[key_field1, key_field2]`) without also addressing the confusing syntax.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14237#issuecomment-1921963399:45,message,message,45,https://hail.is,https://github.com/hail-is/hail/issues/14237#issuecomment-1921963399,2,['message'],['message']
Integrability,"NT</li>; <li><a href=""https://github.com/scipy/scipy/commit/a8b825af44d7ad2187d3cafb2247c17acf0ae709""><code>a8b825a</code></a> MAINT: ensure cobyla objective returns scalar</li>; <li><a href=""https://github.com/scipy/scipy/commit/4dd233372f30327a101331af8dab4a8a9b9c2659""><code>4dd2333</code></a> MAINT: fixup dep warning</li>; <li>Additional commits viewable in <a href=""https://github.com/scipy/scipy/compare/v1.9.3...v1.11.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=scipy&package-manager=pip&previous-version=1.9.3&new-version=1.11.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13461:4060,depend,dependabot-automerge-start,4060,https://hail.is,https://github.com/hail-is/hail/pull/13461,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"Needed to sub in commons-io, which we were getting transitively from lsmtree. I picked the version that hadoop/spark depend on at runtime. lsmtree depends on an older one but currently in `main` gradle upgrades it for the one requested by the runtime dependencies.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11708:117,depend,depend,117,https://hail.is,https://github.com/hail-is/hail/pull/11708,3,['depend'],"['depend', 'dependencies', 'depends']"
Integrability,New GroupedMatrixTable Interface,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4386:23,Interface,Interface,23,https://hail.is,https://github.com/hail-is/hail/pull/4386,1,['Interface'],['Interface']
Integrability,"New config should be correct. I have left the trailing slash on the location path, because without it requests don't appear to make it to the internal router. I think the issue is upstream.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7015#issuecomment-540628849:151,rout,router,151,https://hail.is,https://github.com/hail-is/hail/pull/7015#issuecomment-540628849,1,['rout'],['router']
Integrability,New group_by().aggregate_*() interface,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4154:29,interface,interface,29,https://hail.is,https://github.com/hail-is/hail/pull/4154,1,['interface'],['interface']
Integrability,"New test failure:. ```; + ./gradlew shadowJar archiveZip; Exception in thread ""main"" javax.net.ssl.SSLHandshakeException: Received fatal alert: handshake_failure; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:192); ```; Still not sure what to do about transient external dependency failures in the tests.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4536#issuecomment-429360417:281,depend,dependency,281,https://hail.is,https://github.com/hail-is/hail/pull/4536#issuecomment-429360417,1,['depend'],['dependency']
Integrability,"NewType</code> named with an f-string.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5770"">PyCQA/pylint#5770</a></p>; </li>; <li>; <p>Add support for <a href=""https://github.com/python-attrs/attrs/releases/tag/21.3.0"">attrs v21.3.0</a> which; added a new <code>attrs</code> module alongside the existing <code>attr</code>.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/astroid/issues/1330"">#1330</a></p>; </li>; <li>; <p>Use the <code>end_lineno</code> attribute for the <code>NodeNG.tolineno</code> property; when it is available.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/astroid/issues/1350"">#1350</a></p>; </li>; <li>; <p>Add <code>is_dataclass</code> attribute to <code>ClassDef</code> nodes.</p>; </li>; <li>; <p>Use <code>sysconfig</code> instead of <code>distutils</code> to determine the location of; python stdlib files and packages.</p>; <p>Related pull requests: <a href=""https://github-redirect.dependabot.com/PyCQA/astroid/issues/1322"">#1322</a>, <a href=""https://github-redirect.dependabot.com/PyCQA/astroid/issues/1323"">#1323</a>, <a href=""https://github-redirect.dependabot.com/PyCQA/astroid/issues/1324"">#1324</a>; Closes <a href=""https://github-redirect.dependabot.com/PyCQA/astroid/issues/1282"">#1282</a>; Ref <a href=""https://github-redirect.dependabot.com/PyCQA/astroid/issues/1103"">#1103</a></p>; </li>; <li>; <p>Fixed crash with recursion error for inference of class attributes that referenced; the class itself.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5408"">PyCQA/pylint#5408</a></p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/PyCQA/astroid/commit/07c0f60ffc1017d0a9a2bb605a5c645781a8c088""><code>07c0f60</code></a> Bump astroid to 2.10.0, update changelog</li>; <li><a href=""https://github.com/PyCQA/astroid/commit/e6d",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11463:2442,depend,dependabot,2442,https://hail.is,https://github.com/hail-is/hail/pull/11463,2,['depend'],['dependabot']
Integrability,"Nice! If you use the phrase ""Fixes #12926"" in your PR message, GitHub will automatically close that ticket when this PR merged.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12965#issuecomment-1532156641:54,message,message,54,https://hail.is,https://github.com/hail-is/hail/pull/12965#issuecomment-1532156641,1,['message'],['message']
Integrability,"No, I wanted the equivalent of this:. Inbreeding | `--het` | `vds.annotate_samples_expr(""sa.het = gs.inbreeding(g => va.qc.AF)"")`; Sex Check | `--check-sex` | `vds.impute_sex()....`; etc. I think we're getting close to being able to do this (python interface is stable).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/780#issuecomment-279763636:249,interface,interface,249,https://hail.is,https://github.com/hail-is/hail/issues/780#issuecomment-279763636,1,['interface'],['interface']
Integrability,"No, but its the same string I used to install hail dependencies for Terra's notebooks. I can run a test now",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9502#issuecomment-698497283:51,depend,dependencies,51,https://hail.is,https://github.com/hail-is/hail/pull/9502#issuecomment-698497283,1,['depend'],['dependencies']
Integrability,"No, it's not an HTTP service, it's plain old TCP, so `router` (which is an HTTP router) won't work here. The TCP gateway / router will come next.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9681#issuecomment-722656282:54,rout,router,54,https://hail.is,https://github.com/hail-is/hail/pull/9681#issuecomment-722656282,3,['rout'],['router']
Integrability,NoSuchElementException: key not found: RefEquality(WriteMetadata(WriteM,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9856:2121,Wrap,WrappedArray,2121,https://hail.is,https://github.com/hail-is/hail/issues/9856,1,['Wrap'],['WrappedArray']
Integrability,"Nobody has ever asked for this. I'm tabling it for now. If it does come up, we should integrate with Hadoop-BAM.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/35#issuecomment-208692497:86,integrat,integrate,86,https://hail.is,https://github.com/hail-is/hail/issues/35#issuecomment-208692497,1,['integrat'],['integrate']
Integrability,"Node, Scheduling, Storage and Testing]</li>; <li>Go1.14.4 is now the minimum version required for building Kubernetes (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92438"">kubernetes/kubernetes#92438</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG API Machinery, Auth, CLI, Cloud Provider, Cluster Lifecycle, Instrumentation, Network, Node, Release, Storage and Testing]</li>; <li>Hide managedFields from kubectl edit command (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91946"">kubernetes/kubernetes#91946</a>, <a href=""https://github.com/soltysh""><code>@​soltysh</code></a>) [SIG CLI]</li>; <li>K8s.io/apimachinery - scheme.Convert() now uses only explicitly registered conversions - default reflection based conversion is no longer available. <code>+k8s:conversion-gen</code> tags can be used with the <code>k8s.io/code-generator</code> component to generate conversions. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/90018"">kubernetes/kubernetes#90018</a>, <a href=""https://github.com/wojtek-t""><code>@​wojtek-t</code></a>) [SIG API Machinery, Apps and Testing]</li>; <li>Kube-proxy: add <code>--bind-address-hard-fail</code> flag to treat failure to bind to a port as fatal (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/89350"">kubernetes/kubernetes#89350</a>, <a href=""https://github.com/SataQiu""><code>@​SataQiu</code></a>) [SIG Cluster Lifecycle and Network]</li>; <li>Kubebuilder validation tags are set on metav1.Condition for CRD generation (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92660"">kubernetes/kubernetes#92660</a>, <a href=""https://github.com/damemi""><code>@​damemi</code></a>) [SIG API Machinery]</li>; <li>Kubelet's --runonce option is now also available in Kubelet's config file as <code>runOnce</code>. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/89128"">kubernetes/ku",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11462:8970,depend,dependabot,8970,https://hail.is,https://github.com/hail-is/hail/pull/11462,1,['depend'],['dependabot']
Integrability,"Non-existent routes have a `None` resource, so this was causing `500`s on requests that should have `404`'d",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10621:13,rout,routes,13,https://hail.is,https://github.com/hail-is/hail/pull/10621,1,['rout'],['routes']
Integrability,None is an unfortunate default for a list of dependencies.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6777:45,depend,dependencies,45,https://hail.is,https://github.com/hail-is/hail/pull/6777,1,['depend'],['dependencies']
Integrability,"Not a pressing issue. It may be helpful to have each makefile present a slightly more consistent user interface. For instance:; Letsencrypt: `run` (there is a deploy but this is one of the earlier dependencies); Gateway: `deploy`; Notebook: `deploy`; Scorecard: `deploy` (there is a `run` but it's used to execute scorecard.py). @danking may have thoughts on this, or not :)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5413:102,interface,interface,102,https://hail.is,https://github.com/hail-is/hail/issues/5413,2,"['depend', 'interface']","['dependencies', 'interface']"
Integrability,Not for integrating in the current state.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/979:8,integrat,integrating,8,https://hail.is,https://github.com/hail-is/hail/pull/979,1,['integrat'],['integrating']
Integrability,"Not getting a lot of info on the traceback except that it's on write. A version or two back works fine:; ```; Traceback (most recent call last):; File ""/tmp/d30041623ee542dca820faecd29538a9/pyscripts_tyqA4p.zip/gnomad_hail/utils/slack.py"", line 95, in try_slack; func(*args); File ""/tmp/d30041623ee542dca820faecd29538a9/generate_frequency_data.py"", line 155, in main; write_temp_gcs(ht, annotations_ht_path(data_type, location), args.overwrite); File ""/tmp/d30041623ee542dca820faecd29538a9/pyscripts_tyqA4p.zip/gnomad_hail/utils/generic.py"", line 36, in write_temp_gcs; t.write(temp_path, overwrite=True); File ""/tmp/d30041623ee542dca820faecd29538a9/hail-devel-cb98819b64ad.zip/hail/typecheck/check.py"", line 547, in wrapper; return f(*args_, **kwargs_); File ""/tmp/d30041623ee542dca820faecd29538a9/hail-devel-cb98819b64ad.zip/hail/table.py"", line 1183, in write; self._jt.write(output, overwrite, stage_locally, _codec_spec); File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; answer, self.gateway_client, self.target_id, self.name); File ""/tmp/d30041623ee542dca820faecd29538a9/hail-devel-cb98819b64ad.zip/hail/utils/java.py"", line 200, in deco; 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; hail.utils.java.FatalError: AssertionError: assertion failed: type mismatch:; name: global; actual: +Struct{}; expect: Struct{}. Java stack trace:; java.lang.AssertionError: assertion failed: type mismatch:; name: global; actual: +Struct{}; expect: Struct{}; at scala.Predef$.assert(Predef.scala:170); at is.hail.expr.ir.TypeCheck$.apply(TypeCheck.scala:55); at is.hail.expr.ir.TypeCheck$.is$hail$expr$ir$TypeCheck$$check$1(TypeCheck.scala:17); at is.hail.expr.ir.TypeCheck$.apply(TypeCheck.scala:186); at is.hail.expr.ir.Interpret$.apply(Interpret.scala:39); at is.hail.expr.ir.MatrixMapGlobals.execute(MatrixIR.scala:1636); at is.hail.expr.ir.MatrixMapGlobals.execute(MatrixIR.scala:1634); at is.hail.expr.ir.MatrixMapRows.exec",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4127:717,wrap,wrapper,717,https://hail.is,https://github.com/hail-is/hail/issues/4127,1,['wrap'],['wrapper']
Integrability,"Not sure how this affects the Python interface, but it seems to be working via sparklyr. It generalizes `ArrayList` to `List` and `HashMap` to `Map` in every place I could find. Fixes #5340.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5485:37,interface,interface,37,https://hail.is,https://github.com/hail-is/hail/pull/5485,1,['interface'],['interface']
Integrability,"Not sure if you wanted to change the name or anything, but I presume this is the interface you were thinking?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7966:81,interface,interface,81,https://hail.is,https://github.com/hail-is/hail/pull/7966,1,['interface'],['interface']
Integrability,"Not sure what this error is: . deepest = 'HailException: block matrix must have at least one row'; full = 'is.hail.utils.HailException: block matrix must have at least one row\n\tat is.hail.utils.ErrorHandling$class.fatal(Er...ava:79)\n\tat py4j.GatewayConnection.run(GatewayConnection.java:238)\n\tat java.lang.Thread.run(Thread.java:748)\n\n\n'. def deco(*args, **kwargs):; import pyspark; try:; return f(*args, **kwargs); except py4j.protocol.Py4JJavaError as e:; s = e.java_exception.toString(); ; # py4j catches NoSuchElementExceptions to stop array iteration; if s.startswith('java.util.NoSuchElementException'):; raise; ; tpl = Env.jutils().handleForPython(e.java_exception); deepest, full = tpl._1(), tpl._2(); raise FatalError('%s\n\nJava stack trace:\n%s\n'; 'Hail version: %s\n'; > 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; E hail.utils.java.FatalError: HailException: block matrix must have at least one row; E ; E Java stack trace:; E is.hail.utils.HailException: block matrix must have at least one row",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8375#issuecomment-605098820:437,protocol,protocol,437,https://hail.is,https://github.com/hail-is/hail/pull/8375#issuecomment-605098820,1,['protocol'],['protocol']
Integrability,"Not that it helps in the commit history, but at least it's somewhere... this PR fixed that the secrets for batch deployment needed the deploy flag on which secret to use depending on whether we're testing or in production.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6168#issuecomment-495361303:170,depend,depending,170,https://hail.is,https://github.com/hail-is/hail/pull/6168#issuecomment-495361303,1,['depend'],['depending']
Integrability,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:930,depend,dependencies,930,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230,2,['depend'],['dependencies']
Integrability,"Note that `mt.cols()[mt.col_key]` is obviously wrong but instead we get a big error message that is ultimately really quite confusing. A good error message would be ""cannot index matrix table with itself"". (randomly assigning someone). ```; ExpressionException Traceback (most recent call last); <ipython-input-47-76acaa85d728> in <module>; 9 #combined.show(); 10; ---> 11 combined = combined.annotate_rows (N_Aa1 = mt.cols()[mt.col_key].N_Aa); 12; 13 combined.cols().show(). <decorator-gen-1171> in annotate_rows(self, **named_exprs). ~/opt/miniconda3/lib/python3.7/site-packages/hail/typecheck/check.py in wrapper(__original_func, *args, **kwargs); 612 def wrapper(__original_func, *args, **kwargs):; 613 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 614 return __original_func(*args_, **kwargs_); 615; 616 return wrapper. ~/opt/miniconda3/lib/python3.7/site-packages/hail/matrixtable.py in annotate_rows(self, **named_exprs); 955 caller = ""MatrixTable.annotate_rows""; 956 check_annotate_exprs(caller, named_exprs, self._row_indices); --> 957 return self._select_rows(caller, self._rvrow.annotate(**named_exprs)); 958; 959 @typecheck_method(named_exprs=expr_any). <decorator-gen-651> in annotate(self, **named_exprs). ~/opt/miniconda3/lib/python3.7/site-packages/hail/typecheck/check.py in wrapper(__original_func, *args, **kwargs); 612 def wrapper(__original_func, *args, **kwargs):; 613 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 614 return __original_func(*args_, **kwargs_); 615; 616 return wrapper. ~/opt/miniconda3/lib/python3.7/site-packages/hail/expr/expressions/typed_expressions.py in annotate(self, **named_exprs); 1624; 1625 result_type = tstruct(**new_types); -> 1626 indices, aggregations = unify_all(self, *[x for (f, x) in named_exprs.items()]); 1627; 1628 return construct_expr(ir.InsertFields.construct_with_deduplication(. ~/opt/miniconda3/lib/python3.7/site-packages/hail/expr/exp",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9121:84,message,message,84,https://hail.is,https://github.com/hail-is/hail/issues/9121,5,"['message', 'wrap']","['message', 'wrapper']"
Integrability,"Note this PR replaces the previous [Feature/sas token merge](https://github.com/hail-is/hail/pull/12877) because the original PR branch got jacked up beyond repair. All the comments on the earlier PR are responded to there and addressed in the code for this one. This PR is to enable `hail-az/https` Azure file references to contain SAS tokens to enable bearer-auth style file access to Azure storage. Basic summary of the changes:; - Update `AzureAsyncFS` url parsing function to look for and separate out a SAS-token-like query string. Note: made fairly specific to SAS tokens - generic detection of query string syntax interferes with glob support and '?' characters in file names; - Added `generate_sas_token` convenience function to `AzureAsyncFS`. Adds new azure-mgmt-storage package requirement.; - Updated `AzureAsyncFS` to use `(account, container, credential)` tuple as internal `BlobServiceClient` cache key; - Updated `AzureAsyncFSURL` and `AzureFileListEntry` to track the token separately from the name, and extend the base classes to allow returning url with or without a token; - Update `RouterFS.ls` function and associated listfiles function to allow for trailing query strings during path traversal; - Update `AsyncFS.open_from` function to handle query-string urls in zero-length case; - Change to existing behavior: `LocalAsyncFSURL.__str__` no longer returns 'file:' prefix. Done to make `str()` output be appropriate for input to `fs` functions across all subclasses; - Updated `InputResource` to not include the SAS token as part of the destination file name; - Updated `inter_cloud/test_fs.py` to generically use query-string-friendly file path building functions to respect the new model, where it is no longer safe to extend URLs by just appending new segments with `+ ""/""` because there may be a query string, and added `'sas/azure-https'` test case to the fixture. Running tests for the SAS case requires some new test variables to allow the test code to generate SAS toke",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13140:1104,Rout,RouterFS,1104,https://hail.is,https://github.com/hail-is/hail/pull/13140,1,['Rout'],['RouterFS']
Integrability,Note to self to check the logs for error messages before merging!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12199#issuecomment-1254026870:41,message,messages,41,https://hail.is,https://github.com/hail-is/hail/pull/12199#issuecomment-1254026870,1,['message'],['messages']
Integrability,"Notebook2 was _literally_ unusable (no favicon). Instead of copying and pasting the favicon link 5 times, I also extracted out the shared elements into a template, and extended it in all other views. How this works:; `layout.html`: contains all shared elements, and marks places where children can insert content (`{% block title %}{% endblock %}`, `{% block head %}{% endblock %}`, `{% block content %}{% endblock %}`). Every other file extends this. The 2 templates that weren't updated (admin-login.html, and workers.html) are placeholders from notebook1 that haven't been updated for notebook 2 yet; they should work, but don't use notebook2 styles, and therefore don't have shared elements to wrap in layout.html. This all works. cc @cseed, @jigold, @danking, @konradjk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5827:698,wrap,wrap,698,https://hail.is,https://github.com/hail-is/hail/pull/5827,1,['wrap'],['wrap']
Integrability,"Nothing in `IEmitCode` depends on the value being a `PCode`. This PR makes `IEmitCode` a type alias, `IEmitCode = IEmitCodeGen[PCode]`, where `IEmitCodeGen` is a generic version. This supports any pattern where we generate missing and present branches, and the value can be anything to be used while generating the present branch, e.g. `Code`, `PCode`, `Array[PCode]`, `Stream`, or even another optional value (an `EmitCode` or `CodeBuilder => IEmitCode`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9443:23,depend,depends,23,https://hail.is,https://github.com/hail-is/hail/pull/9443,1,['depend'],['depends']
Integrability,Now `hc.import_vcf('/Users/jbloom/data/bgz_error/sample_plain.vcf.bgz')` on mislabeled plaintext file gives:. ```; FatalError: ZipException: File does not conform to block gzip format. Java stack trace:; java.util.zip.ZipException: File does not conform to block gzip format.; 	at is.hail.io.compress.BGzipInputStream$BGzipHeader.<init>(BGzipInputStream.java:35); ```. This error message is closer to that thrown in the .gz case when reading a plain text file:. ```; FatalError: IOException: not a gzip file. Java stack trace:; java.io.IOException: not a gzip file; 	at org.apache.hadoop.io.compress.zlib.BuiltInGzipDecompressor; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2129#issuecomment-323611362:380,message,message,380,https://hail.is,https://github.com/hail-is/hail/pull/2129#issuecomment-323611362,1,['message'],['message']
Integrability,"Now depends on https://github.com/hail-is/hail/pull/2723, last pending rv-conversion PR. > +275 −2,223. Aw, yiss. @tpoterba Do you want to do the honors on this or should I spin the wheel?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2725#issuecomment-358866976:4,depend,depends,4,https://hail.is,https://github.com/hail-is/hail/pull/2725#issuecomment-358866976,1,['depend'],['depends']
Integrability,Now raises an error instead of asserting. resolves #4770 by clarifying problem with old syntax introduced by [breaking change](https://discuss.hail.is/t/breaking-change-redesign-of-aggregator-interface/701),MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5110:192,interface,interface,192,https://hail.is,https://github.com/hail-is/hail/pull/5110,1,['interface'],['interface']
Integrability,"Now that we are using proper python packages and modules, we can use pip dependencies instead of explicitly writing out the dependencies in the `Dockerfile`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4788:73,depend,dependencies,73,https://hail.is,https://github.com/hail-is/hail/pull/4788,2,['depend'],['dependencies']
Integrability,"Now we can add a decorator to give a warning when a user uses a deprecated thing. It will print a message out when it is used. . There's a way to get this to automatically print in Sphinx as well, but I'll set that up later. For now, I have manually mentioned in the docstring when a method is deprecated, and now this decorator will give a warning when it's used.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9479:98,message,message,98,https://hail.is,https://github.com/hail-is/hail/pull/9479,1,['message'],['message']
Integrability,"Numerous times, I have sent REST credentials to a web endpoint. It is supremely annoying; to run around in circles wondering how your credentials got out of date. I think; this message is safe because the user really is a credentialed user, they just; used the wrong endpoint.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9131:177,message,message,177,https://hail.is,https://github.com/hail-is/hail/pull/9131,1,['message'],['message']
Integrability,"OK, I gave you maximum spicy. I don't think it's so bad, but let me know if you want me to cut it up. Some remarks:; - This PR successfully tests (and it passes!) and then cleans up this branch: https://github.com/hail-is/hail/pull/5842. See `build.yaml`. It's a thing of beauty (I think).; - That branch has everything but Scala tests and dataproc/cloudtools tests. The latter are easy, the former are a little messy since I want to test against a test jar, and I've decided to switch to maven for that.; - No support for publish or deploy yet.; - There are synchronous calls it `git` in various places which can make the UI sluggish. I'll fix those in another PR.; - Work remains to validate build.yaml and the deploy step yaml.; - I currently run jinja2 if the file (Dockerfile or deployment yaml) ends in `.in`, but I think I'm going to make it unconditional. `.in` just seem error prone.; - In CreateDatabaseStep, I put secret credentials in the pod configuration. That's not ideal, but I don't think it is a serious problem, because nobody who isn't privileged can read the pods, and I can fix it in a later PR (the create database step should generate the passwords, not ci2).; - I disabled the fixme pylint message (on # FIXME comments), since are fixmes are longer lived than a single change sometimes.; - I'm slightly confused about runImage (which generates a batch job) and deploy of a pod spec (which runs kubectl apply as a batch job). Right now, runImage always runs in batch-pods, and a deploy job runs in whatever namespace you specify. Fixes https://github.com/hail-is/hail/issues/5903",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5891:1215,message,message,1215,https://hail.is,https://github.com/hail-is/hail/pull/5891,1,['message'],['message']
Integrability,"OK, I have a suggestion: the schema for the input to MIS should be node1, node2, [optional v float64], where node1 should be preferred if v >= 0. This is the same as the current interface but we just compute the tiebreaker for each edge, instead of lazily. That gets rid of the expression language. There could be a separate weight-based version that takes edges (node1, node2) and weights (node1, w), where then v = w[node1] - w[node2].",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3425#issuecomment-385024493:178,interface,interface,178,https://hail.is,https://github.com/hail-is/hail/pull/3425#issuecomment-385024493,1,['interface'],['interface']
Integrability,"OK, I think I addressed the comments:; - I'm going to leave the pylint fix for another PR,; - use latest explicitly for remote repositories,; - explicit dependencies on build-stmp instead of find",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5655#issuecomment-475317040:153,depend,dependencies,153,https://hail.is,https://github.com/hail-is/hail/pull/5655#issuecomment-475317040,1,['depend'],['dependencies']
Integrability,"OK, I will PR improved error messages.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7020#issuecomment-529559470:29,message,messages,29,https://hail.is,https://github.com/hail-is/hail/pull/7020#issuecomment-529559470,1,['message'],['messages']
Integrability,"OK, I won't be able to fix this. @ehigham @patrick-schultz @daniel-goldstein some combo of you three can probably figure it out. The local backend tests that hit requester pays buckets are failing with new Spark. New Spark needs new GCS hadoop connector (see the Dockerfiles). New GCS hadoop connector has [brand new configuration parameters](https://github.com/GoogleCloudDataproc/hadoop-connectors/blob/v3.0.0/gcs/INSTALL.md). Somehow I managed to make the normal Spark backend work correctly but the Local backend (which still, afaik, uses Spark & Hadoop for filesystems) is still trying to pick up CI's credentials instead of the test account's credentials. ```; E hail.utils.java.FatalError: GoogleJsonResponseException: 403 Forbidden; E GET https://storage.googleapis.com/storage/v1/b/hail-test-requester-pays-fds32/o/zero-to-nine?fields=bucket,name,timeCreated,updated,generation,metageneration,size,contentType,contentEncoding,md5Hash,crc32c,metadata&userProject=hail-vdc; E {; E ""code"": 403,; E ""errors"": [; E {; E ""domain"": ""global"",; E ""message"": ""ci-910@hail-vdc.iam.gserviceaccount.com does not have serviceusage.services.use access to the Google Cloud project. Permission 'serviceusage.services.use' denied on resource (or it may not exist)."",; E ""reason"": ""forbidden""; E }; E ],; E ""message"": ""ci-910@hail-vdc.iam.gserviceaccount.com does not have serviceusage.services.use access to the Google Cloud project. Permission 'serviceusage.services.use' denied on resource (or it may not exist).""; E }; E ; E Java stack trace:; E java.io.IOException: Error accessing gs://hail-test-requester-pays-fds32/zero-to-nine; E 	at com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageImpl.getObject(GoogleCloudStorageImpl.java:1986); E 	at com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageImpl.getItemInfo(GoogleCloudStorageImpl.java:1882); E 	at com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloud",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14158#issuecomment-1969609236:1048,message,message,1048,https://hail.is,https://github.com/hail-is/hail/pull/14158#issuecomment-1969609236,1,['message'],['message']
Integrability,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14507#issuecomment-2206596777:204,depend,dependabot,204,https://hail.is,https://github.com/hail-is/hail/pull/14507#issuecomment-2206596777,16,['depend'],['dependabot']
Integrability,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13576#issuecomment-1709450787:204,depend,dependabot,204,https://hail.is,https://github.com/hail-is/hail/pull/13576#issuecomment-1709450787,1020,['depend'],"['dependabot', 'dependency', 'dependency-updates']"
Integrability,"OK, I've moved it and made the interface as close as I could to the previous `scatter`. One thing is the default value for `n_divisions`. It was 500 before, now I've set it to `None` (i.e. no downsampling). I'm fine either way, but it seems somewhat more intuitive to me for the default to be no downsampling.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5601#issuecomment-473338696:31,interface,interface,31,https://hail.is,https://github.com/hail-is/hail/pull/5601#issuecomment-473338696,2,['interface'],['interface']
Integrability,"OK, a third option:. Gradle has support for something called a Gradle wrapper, a set of distribution scripts that download and run a specific version of Gradle. I just added a Gradle wrapper for 2.14.1 to the master branch. You should now be able to build the local version of Hail with `gradlew installDist` or `./gradlew shadowJar` to build the shadow (fat, uber) jar to run against a Spark cluster.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/594#issuecomment-240309173:70,wrap,wrapper,70,https://hail.is,https://github.com/hail-is/hail/issues/594#issuecomment-240309173,2,['wrap'],['wrapper']
Integrability,"OK, great. I'm working on this as we speak, so I'll prototype a draft sync interface and run it by you all.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10043#issuecomment-778403277:75,interface,interface,75,https://hail.is,https://github.com/hail-is/hail/pull/10043#issuecomment-778403277,1,['interface'],['interface']
Integrability,"OK, here's the high level design:. This diff touches a lot of files, but it is conceptually a small; list of connected changes:. 1. TableStageToRVD. This is infrastructure that lets us take a; TableStage and generate a RVD and BroadcastRow (globals). This; is used in...; 2. SparkBackend shuffle lowering. This now uses TableStageToRVD to; create an RVD, uses RVD methods to shuffle, then RVDToTableStage; to produce a TableStage that reads the shuffled RDD.; 3. TableStageDependencies. As I mentioned in our design meeting this; past week, the RDD we generate in the SparkBackend's parallelizeAndComputeWithIndex; needs to depend on the RDDs consumed by RVDToTableStage. In order to; support this, I have added a notion of a `TableStageDependency` to TableStage,; CollectDistributedArray, and BackendUtils.collectDArray.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9602#issuecomment-709392527:624,depend,depend,624,https://hail.is,https://github.com/hail-is/hail/pull/9602#issuecomment-709392527,1,['depend'],['depend']
Integrability,"OK, here's the most recent failure https://batch.hail.is/batches/8090848/jobs/21993. Don't be duped by my bad log message! There were zero transient errors. I added a log statement that increments the number of errors and prints that message after *every* error, even if it's not transient. . This time it was partition 20053 (we keep moving earlier?). I forgot to catch and rethrow the error with the toString of the input buffer, but I'm not sure there is much to learn from that anyway. FWIW, 20053 was successful in the two previous executions:; 1. https://batch.hail.is/batches/8069235/jobs/21993; 2. https://batch.hail.is/batches/8083195/jobs/21993. Interestingly the peak bytes are not consistent:; ```; 2023-10-24 19:59:47.756 : INFO: TaskReport: stage=0, partition=20053, attempt=0, peakBytes=58394624, peakBytesReadable=55.69 MiB, chunks requested=5513, cache hits=5501; 2023-10-24 19:59:47.759 : INFO: RegionPool: FREE: 55.7M allocated (7.7M blocks / 48.0M chunks), regions.size = 21, 0 current java objects, thread 9: pool-2-thread-1; ```; ```; 2023-11-08 19:42:40.000 : INFO: TaskReport: stage=0, partition=20053, attempt=0, peakBytes=61343744, peakBytesReadable=58.50 MiB, chunks requested=5513, cache hits=5501; 2023-11-08 19:42:40.000 : INFO: RegionPool: FREE: 58.5M allocated (10.5M blocks / 48.0M chunks), regions.size = 21, 0 current java objects, thread 10: pool-2-thread-2; ```. Whatever is causing this bug is rare. Approximately once every 31,000 partitions. The CDA IR is the same except for a couple iruid names and the order of the aggregators in the aggregator array is swapped (collect & take vs take & collect). AFAICT, the GCS Java library doesn't do any streaming verification of the hash. We could compute the CRC32c in a streaming manner and fail if/when we get to the end of the object, but this wouldn't work when we read intervals. I'm really mystified.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13979#issuecomment-1834606385:114,message,message,114,https://hail.is,https://github.com/hail-is/hail/issues/13979#issuecomment-1834606385,4,['message'],['message']
Integrability,"OK, if I add the following additional dependencies in gradle:. ```; 	include(dependency('net.sourceforge.f2j:arpack_combined_all:0.1')); 	include(dependency('com.github.fommil.netlib:native_system-java:1.1')); 	include(dependency('com.github.fommil.netlib:netlib-native_system-linux-x86_64:1.1')); 	include(dependency('com.github.fommil.netlib:netlib-native_ref-linux-x86_64:1.1')); 	include(dependency('com.github.fommil:jniloader:1.1')); ```. it correctly loads on Linux:. > 2018-04-30 00:13:07 JniLoader: INFO: successfully loaded /tmp/jniloader8608320282306924695netlib-native_system-linux-x86_64.so. I'll test the analog on OSX tomorrow. Are you sure we're getting natives on Dataproc now? This definitely worked in the past. I get a 4x speedup (in the 1024 cases):. 214 ms ± 19.2 ms per loop (mean ± std. dev. of 7 runs, 1 loop each). Now we're only 35x slower.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3335#issuecomment-385310865:38,depend,dependencies,38,https://hail.is,https://github.com/hail-is/hail/pull/3335#issuecomment-385310865,6,['depend'],"['dependencies', 'dependency']"
Integrability,"OK, now passes the tests. Not sure if `minRep` should be called in `VariantSubgen` or in `LoadBGenTest` (as I did). All depends on how `VariantSubgen` is used (e.g. if testing minRep)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1656#issuecomment-293058402:120,depend,depends,120,https://hail.is,https://github.com/hail-is/hail/pull/1656#issuecomment-293058402,1,['depend'],['depends']
Integrability,"OK, should be fixed. apiserver depends on hail, runs its own tests now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5624#issuecomment-474138152:31,depend,depends,31,https://hail.is,https://github.com/hail-is/hail/pull/5624#issuecomment-474138152,1,['depend'],['depends']
Integrability,"OK, so the big insight is that ""InstanceConfig"" is really just ""ResourcesForAParticularInstance"" (well, and, sometimes, ""ResourcesOfARepresentativeInstance""). I trimmed the InstanceConfig down *significantly* removing the ""vm_config"". Now the InstanceConfig is cheap and easy to create and there's no circularity between vm_config and instance config. I pushed that through everywhere and then abstracted the common create_instance logic for pool and job-private into InstanceCollection. With both of those changes, I was able to modify the ResourceManager's API to expose methods for constructing instance configs. However, the instance config isn't critical to the operation of the ResourceManager. It's just an interface for communicating an instance's resources to the rest of the code base.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10920#issuecomment-956500279:714,interface,interface,714,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956500279,1,['interface'],['interface']
Integrability,"OK, the story is more complicated than I imagined. uniroot was added in post-0.1 devel and made available in the expression language. It hasn't been exposed in the Python interface, but I don't know why. It is straightforward now, but I don't think the IR story has been sorted out yet. I'm going to reopen until it is available in Python.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1717#issuecomment-388854826:171,interface,interface,171,https://hail.is,https://github.com/hail-is/hail/issues/1717#issuecomment-388854826,1,['interface'],['interface']
Integrability,"OK, this is passing. Interval is in utils but has a bad import to expr.types that creates a cyclic dependency. I fixed this by allowing a lambda as a typechecker which returns a type or typechecker to defer the import. It looks like this:. ```; @typecheck_method(start=anytype,; end=anytype,; includes_start=bool,; includes_end=bool,; point_type=nullable(lambda: hl.expr.types.hail_type)); def __init__(self, start, end, includes_start=True, includes_end=False, point_type=None):; ...; ```. Tho I think eventually we should move struct and interval out of utils.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8775#issuecomment-627904282:99,depend,dependency,99,https://hail.is,https://github.com/hail-is/hail/pull/8775#issuecomment-627904282,1,['depend'],['dependency']
Integrability,"OK, this is passing. Sorry for another big PR, I think I'm getting close to converging and I'll start spreading things around. Summary of changes:; - break batch into two services: batch2 and batch2-driver; - batch2 handles connections to the client, but has no driver; - driver has the driver and all the control loops; - workers now connect to batch2-driver, not batch2; - batch2 hits batch2-driver after close, cancel and delete to actually handle the jobs; - also removed abort and jsonify from utils and prefer the native aiohttp interfaces. I'll change the batch2 deployment in a later PR to run in triplicate, tolerate preemptibles and have a horizontal autoscaler.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7226#issuecomment-539972072:535,interface,interfaces,535,https://hail.is,https://github.com/hail-is/hail/pull/7226#issuecomment-539972072,1,['interface'],['interfaces']
Integrability,"OK, this one is slightly subtle. A physical value at runtime actually has two forms:. 1. It is a bunch a bunch of bytes in memory at a particular address (e.g. a struct field, an array element, or a freestanding value in memory). 2. It is a value made up of JVM primitive values (or, more abstractly, Code[T]'s) that can be operated on immediately. Note, one option for (2) is just the address (1). This is what we do for structs (but note, not for arrays). Therefore, one thing we need is an operation that constructs a PValue from a physical type and an address to go from (1) => (2). I call this `PType.load`. It will be used in, for example, loadElement or loadField. See the use in loadElement below in PCanonicalIndexableValue. We also need something that goes from (2) => (1). There are two cases, whether the memory has been allocated already, or not, and I call them `PValue.store` and `PValue.allocateAndStore`. PType.load should be abstract and the implementation should be pushed to the leaves. I will do that once the full set of PValues are filled in. load/store will eventually allow us to eliminate all the IRIntermediate business. There was some complaint about my `PValue.apply` switching on PType. Some of the calls to it will go away in favor of load. I think of load as a kind of PValue constructor that takes a single argument pointing to memory. There will be other constructors depending on the PType. Those will eliminate the other calls to PValue.apply. Hopefully this discussion clears things up. FYI @tpoterba",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8247:1402,depend,depending,1402,https://hail.is,https://github.com/hail-is/hail/pull/8247,1,['depend'],['depending']
Integrability,"OK, this should fix routing from internal.hail.is. The gateway routes internal.hail.is/ns/svc to router.ns with Host: svc.internal so the ns router can dispatch to the right server block off the Host. We could dispatch off the URL, but that would mean the default and private namespaces dispatch different, doubling the complexity of the router NGINX configuration. Change the host back for grafana and prometheus which generate a redirect otherwise. The monitoring and gateway changes are deployed and everything seems to be working.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6928:20,rout,routing,20,https://hail.is,https://github.com/hail-is/hail/pull/6928,5,['rout'],"['router', 'routes', 'routing']"
Integrability,"OK, will change to exec/wait and fix the merge conflict (there was a conflict due to the upgrade to; libsimdpp-2.1, I tried to fix that but may need to do more, or there may be a new issue). My preference is to leave the build-command execution on the C++ side because it's (arguably); easier to read/understand the combined Scala + C++ functionality if the Scala NativeModule is a ; trivial wrapper and all the substance is on one side, in this case in C++. Since that's also acceptable to; you, I'll keep it that way.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4211#issuecomment-416093339:392,wrap,wrapper,392,https://hail.is,https://github.com/hail-is/hail/pull/4211#issuecomment-416093339,1,['wrap'],['wrapper']
Integrability,"OS pipe on Linux (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23211"">#23211</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/84cbec033ed8e4df87f44a82dcebb96aa19deac0""><code>84cbec0</code></a> [Storage] Adjust some file-datalake test recordings (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23147"">#23147</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/Azure/azure-sdk-for-python/compare/azure-storage-blob_12.8.1...azure-storage-blob_12.10.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=azure-storage-blob&package-manager=pip&previous-version=12.8.1&new-version=12.10.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11610:6160,Depend,Dependabot,6160,https://hail.is,https://github.com/hail-is/hail/pull/11610,1,['Depend'],['Dependabot']
Integrability,"Of course. Cotton also had a few comments, I will integrate too. On Tuesday, September 20, 2016, Tim Poterba notifications@github.com; wrote:. > Let's get this in. Can you rebase?; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > https://github.com/hail-is/hail/pull/541#issuecomment-248438901, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/ADVxgSLomjBSxoQFMUqrmHl1RdXl_mD3ks5qsE7igaJpZM4Jb_3Y; > .",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/541#issuecomment-248439671:50,integrat,integrate,50,https://hail.is,https://github.com/hail-is/hail/pull/541#issuecomment-248439671,1,['integrat'],['integrate']
Integrability,"Oh hmm, just read @danking's last message. Well, up to you all. I don't think it matters as much as long as it's a consistent time, and well-documented.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2243#issuecomment-331485632:34,message,message,34,https://hail.is,https://github.com/hail-is/hail/pull/2243#issuecomment-331485632,1,['message'],['message']
Integrability,"Oh yikes, looks like something in the LLVM dependencies requires/installs python3.8. I wonder whether that is necessary",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12526#issuecomment-1352514979:43,depend,dependencies,43,https://hail.is,https://github.com/hail-is/hail/pull/12526#issuecomment-1352514979,1,['depend'],['dependencies']
Integrability,"Oh, and, yes, nothing broke. Dependencies of failed jobs were cancelled, always run jobs always ran, etc.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10985#issuecomment-954865403:29,Depend,Dependencies,29,https://hail.is,https://github.com/hail-is/hail/pull/10985#issuecomment-954865403,1,['Depend'],['Dependencies']
Integrability,"Oh, shit, I approved. Do we have a working protocol for multi-user reviews? This was clearly not it. I guess the rule should be to dismiss your review if someone else has reviewed?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4921#issuecomment-445296624:43,protocol,protocol,43,https://hail.is,https://github.com/hail-is/hail/pull/4921#issuecomment-445296624,2,['protocol'],['protocol']
Integrability,"Oh, woah, that test does look wrong. It's concerning that its suddenly failing. I'm not sure I care too much about tracking down exactly which dependency change caused this. We should fix the test obviously. We should add a test that verifies both `?a` and `?` have the expected data (in particular, that we didn't overwrite one with the other!).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11974#issuecomment-1276854186:143,depend,dependency,143,https://hail.is,https://github.com/hail-is/hail/pull/11974#issuecomment-1276854186,1,['depend'],['dependency']
Integrability,"Ok I just looked at the scala code, and this must have happened around the sex chromosomes when my dataset shifted to haploid (or more specifically, a mix of haploid and diploid calls for male and female). I'll write in the workaround for my own pipeline, but you might want to have a more explicit error message.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3465#issuecomment-385281263:305,message,message,305,https://hail.is,https://github.com/hail-is/hail/issues/3465#issuecomment-385281263,1,['message'],['message']
Integrability,"Ok, @jigold looks like the only sensible way to do this is to add an. ```; import pytz; ```; ```; now = datetime.datetime.utcnow().replace(tzinfo=pytz.utc); ```; According to a note in the Python 2.7 docs [there are no tzinfo instances in the standard library](https://docs.python.org/2/library/datetime.html#tzinfo-objects). We should add the dependency on pytz to [environment.yml](https://github.com/hail-is/hail/blob/master/python/hail/environment.yml).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2243#issuecomment-331479504:344,depend,dependency,344,https://hail.is,https://github.com/hail-is/hail/pull/2243#issuecomment-331479504,1,['depend'],['dependency']
Integrability,"Ok, I think I sorted out the make->mill dependency propagation. Any real target which invokes mill to build it now depends on a target `FORCE` which is always out-of-date, so mill is always invoked. But mill will not change the modification time if it doesn't need to, so downstream targets aren't forced to be run. For example, we have targets; ```; FORCE:. SHADOW_JAR := out/assembly.dest/out.jar; $(SHADOW_JAR): FORCE; 	$(mill) assembly. PYTHON_JAR := python/hail/backend/hail-all-spark.jar; $(PYTHON_JAR): $(SHADOW_JAR); 	cp -f $(SHADOW_JAR) $@. .PHONY: python-jar; python-jar: $(PYTHON_JAR); ```. If I remove the python jar and invoke make, it runs mill then copies:; ```; ❯ rm python/hail/backend/hail-all-spark.jar. ❯ make python-jar; bash millw assembly; [95/110] compile; [info] compiling 10 Scala sources to /Users/pschulz/hail/mill-worktree/hail/out/compile.dest/classes ...; [info] done compiling; [110/110] assembly; cp -f out/assembly.dest/out.jar python/hail/backend/hail-all-spark.jar; ```. If run again, mill is invoked to check for changes, but as the jar doesn't change it isn't copied again:; ```; ❯ make python-jar; bash millw assembly; [105/110] memory.resources; ```. If I change some scala sources, the jar is updated and copied:; ```; ❯ make python-jar; bash millw assembly; [95/110] compile; [info] compiling 10 Scala sources to /Users/pschulz/hail/mill-worktree/hail/out/compile.dest/classes ...; [info] done compiling; [110/110] assembly; cp -f out/assembly.dest/out.jar python/hail/backend/hail-all-spark.jar; ```. If I change some scala sources in a way that doesn't actually affect the jar, such as modifying comments, mill is smart enough to not change the jar, so it won't be copied again:; ```; ❯ make python-jar; bash millw assembly; [95/110] compile; [info] compiling 1 Scala source to /Users/pschulz/hail/mill-worktree/hail/out/compile.dest/classes ...; [info] done compiling; [105/110] memory.resources; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14147#issuecomment-1930325793:40,depend,dependency,40,https://hail.is,https://github.com/hail-is/hail/pull/14147#issuecomment-1930325793,2,['depend'],"['dependency', 'depends']"
Integrability,"Ok, so Cotton's new thing means emitting separate methods by hand is not a thing we do anymore. But there are two factors hurting the benchmark. . One is that the benchmark is hiding the fact that we are spending ~25 seconds serializing and de-serializing JSON for this ndarray. So the real comparison is more like 55 seconds vs 75 seconds, which is a roughly 25% speed improvement. . The other is that `hl.nd.ones` is just an alias for `hl.nd.array(hl.range(shape_product)).map(lambda x: 1).reshape((n_rows, n_cols))`. This is going to create a bunch of row major data, copy it to column major in a pretty cache inefficient way during the reshape, then do the additions. So that's eating some of the time too. We should probably have a way for all the constant methods to not go through regular array. . Anyway, 25% improvement + better interface is a win for now, we can revisit ways to make this faster in the future.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9209#issuecomment-668610293:838,interface,interface,838,https://hail.is,https://github.com/hail-is/hail/pull/9209#issuecomment-668610293,1,['interface'],['interface']
Integrability,Ok. I think this code has the correct behavior now. (4) from above should never depend on the deleted event because we don't handle the deletion inside the regular timings now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11429#issuecomment-1054645368:80,depend,depend,80,https://hail.is,https://github.com/hail-is/hail/pull/11429#issuecomment-1054645368,1,['depend'],['depend']
Integrability,"Ok. I thought about this some more. What you've implemented is essentially a ""taint"" in Kubernetes. I ultimately want both taints and something more complicated that will have to be integrated into the scheduler. I think for now your change is self contained and it will be easy to transform later on without too much complexity or breaking changes for users. I think if you want to rename ""label"" to ""taint"" then that might make it clearer what's going on. cc: @daniel-goldstein",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11879#issuecomment-1145343746:182,integrat,integrated,182,https://hail.is,https://github.com/hail-is/hail/pull/11879#issuecomment-1145343746,2,['integrat'],['integrated']
Integrability,"Ok. I was trying to hide the kubernetes error message from the users because I thought it might be confusing. But if you feel that's ok, then I'll make it just report the original error.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7484#issuecomment-551253066:46,message,message,46,https://hail.is,https://github.com/hail-is/hail/pull/7484#issuecomment-551253066,1,['message'],['message']
Integrability,"Ok. The limits for the tests will need to be fixed with a REST API for editing a billing limit and a new build step that is `setup_test_batch`. I'll work on that now. But I think this can go in while I'm working on that, but #9355 should depend on the new PR.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9354#issuecomment-705102869:238,depend,depend,238,https://hail.is,https://github.com/hail-is/hail/pull/9354#issuecomment-705102869,1,['depend'],['depend']
Integrability,"Ok. This exact scenario is what I was worried about when we merge PRs without checking the logs by hand in a full testing scenario. I want a way to check the PR driver, front-end, and worker logs automatically that they don't have ERROR messages. Like test_invariants. For example, I'm still looking at your change for time_since_last_state_change. When I had the code you wanted, there were errors because time_since_last_state_change was None. The current tests would not have caught that. I think we need either a white list of acceptable front-end/driver errors or some kind of threshold for error types. I'll think about it some more once the batch porting is done.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10920#issuecomment-956522959:237,message,messages,237,https://hail.is,https://github.com/hail-is/hail/pull/10920#issuecomment-956522959,1,['message'],['messages']
Integrability,"Okay, I think all the changes are now directly related to the main changes described in the initial PR message.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8917#issuecomment-638942141:103,message,message,103,https://hail.is,https://github.com/hail-is/hail/pull/8917#issuecomment-638942141,1,['message'],['message']
Integrability,Okay. Hopefully this is good. I also pushed an extra branch up with a small debugging class I wrote to decompose a virtual offset in messages. That work is in c323fa335. Let me know if you want to add it.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9304#issuecomment-676735526:133,message,messages,133,https://hail.is,https://github.com/hail-is/hail/pull/9304#issuecomment-676735526,1,['message'],['messages']
Integrability,"On the issue of how to give people a standardized environment with Hail +; compiler + everything else, one; approach is to build a Bitnami package, which then installs itself into a; directory tree with zero/minimal; dependencies or interactions with anything outside its tree. I've used; that for web services like Jenkins.; It's just one step short of using containers - but since it doesn't require; a containerized OS, I think it works; for laptops etc. I believe the package could have all the stuff we currently manage my; manual install, viz JDK, Spark, Python-3.6,; R, R packages, as well as Hail and a friendly-C++17-capable compiler. All; without perturbing anything else; on the system. See https://bitnami.com. I took a similar approach at PhysicsSpeed, though without using any bitnami; tools because we had less than; zero dollars :-(. I don't know if this adds any value in the containerized/cloud environment,; where custom machine images; are presumably the way to go. But it makes setup easy for standalone use. Regards; Richard. On Thu, Aug 2, 2018 at 10:44 PM Richard Cownie <rcownie@broadinstitute.org>; wrote:. > We have a difference of opinion about the risks involved in using whatever; > compiler happens to show up as $(CXX); > to try to compile arbitrarily large auto-generated C++ files, and maybe; > about what happens when that fails; > and gives an error message about something in the middle of 12000 lines of; > code that bears no obvious relationship; > to what the user is doing. Or when that compiler takes 15 minutes to; > compile it. It's the C++ equivalent of; > the JVM ""no, that's just too much bytecode"". Or worst of all, it compiles; > it but the code gives the wrong answers; > because that particular compiler has a bug, and we never tested the; > combination of our codegen with *that*; > compiler/version.; >; > A couple of years ago I was seeing g++ take 40-60 seconds to compile; > something that clang did in 2 seconds; > (fairly heavily templated cod",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3973#issuecomment-410235287:217,depend,dependencies,217,https://hail.is,https://github.com/hail-is/hail/pull/3973#issuecomment-410235287,1,['depend'],['dependencies']
Integrability,"On, one thing, I removed delete_batch_database. I don't quite know how to write it with the current setup. I think we should add a new kind of step which is dev-only and only run if you ask for it explicitly (not just as a dependency).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7705#issuecomment-564753932:223,depend,dependency,223,https://hail.is,https://github.com/hail-is/hail/pull/7705#issuecomment-564753932,1,['depend'],['dependency']
Integrability,"Once this goes in I will make a second PR (to breaking) that that removes api1, integrates api2, etc.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2824:80,integrat,integrates,80,https://hail.is,https://github.com/hail-is/hail/pull/2824,1,['integrat'],['integrates']
Integrability,One more step of stripping down router. ukbb lives in its own namespace and we never run dev versions of it so it's pretty much a drop-in.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10179:32,rout,router,32,https://hail.is,https://github.com/hail-is/hail/pull/10179,1,['rout'],['router']
Integrability,Only one coro waits on receive now. We still error if a message is sent before; we make our first response.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10159:56,message,message,56,https://hail.is,https://github.com/hail-is/hail/pull/10159,1,['message'],['message']
Integrability,"Oof, good catch! The thing we're trying to avoid is `e^x` overflowing for large positive `x`. In double precision, the smallest `x` that overflows is 710. So to test that we handle overflow correctly, you can check `sigmoid(710) == 1.0` and `sigmoid(-710) == 0.0` (using approximate equality). Actually, after playing with this, if you just use the simple definition `sigmoid(x) = 1 / (1 + np.exp(-x))`, then `sigmoid(-710)` does overflow, but it returns the right answer since `np.exp(710)` returns `inf`, and `1 / inf == 0.0`. But `math.exp(710)` throws an exception. `hl.exp` seems to have the numpy behavior, so I think the simple version actually works. But we should add the above test. I think wrapping this in an exposed function is a good idea. I agree it should be called `expit`, both for consistency with scipy, and because as you say, `sigmoid` really just means an S shaped function. And if we do expose `expit`, we should probably expose its inverse `logit` too.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10606#issuecomment-866034244:701,wrap,wrapping,701,https://hail.is,https://github.com/hail-is/hail/pull/10606#issuecomment-866034244,2,['wrap'],['wrapping']
Integrability,"Oops, sorry, your PR was for the monitoring namespace. I see the problem, CI doesn't have a route for `''`. I'll push a fix.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7145#issuecomment-536246164:92,rout,route,92,https://hail.is,https://github.com/hail-is/hail/pull/7145#issuecomment-536246164,1,['rout'],['route']
Integrability,Optimized sampleqc for (fixed) VSM structure. Added; downsamplevariants. Make sure all file IO goes through hadoop IO; interface.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/93:119,interface,interface,119,https://hail.is,https://github.com/hail-is/hail/pull/93,1,['interface'],['interface']
Integrability,"Options for nested `forAll`:. ``` scala; toProp(for (; j <- forAll(Gen.choose(0, 10000));; k <- forAll(Gen.choose(0, 10000));; ) yield {; val gt = if (j < k) GTPair(j, k) else GTPair(k, j); Genotype.gtPair(Genotype.gtIndex(gt)) == gt; }).check(); ```. ``` scala; forAll(Gen.choose(0, 10000)) { (j: Int) =>; forAll(Gen.choose(0, 10000)) { (k: Int) =>; val gt = if (j < k) GTPair(j, k) else GTPair(k, j); Genotype.gtPair(Genotype.gtIndex(gt)) == gt; }; }.check(); ```. I think I can ditch the `toProp` on the do notation with an implicit conversion. I might be able to support either syntax in a unified way, but I haven't found the time to think about it. There's a little bit of weirdness because you only want `check` to be callable on things that are `Boolean`-valued. The difference between this monad and the `Gen[T]` monad is that this one is a reader monad, collecting a stack of ""read"" variables that can be used by the inner most `forAll` to generate a useful check-failure message.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/400#issuecomment-244517801:982,message,message,982,https://hail.is,https://github.com/hail-is/hail/issues/400#issuecomment-244517801,1,['message'],['message']
Integrability,Or have both delete steps depend on both test jobs.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13353#issuecomment-1660787777:26,depend,depend,26,https://hail.is,https://github.com/hail-is/hail/pull/13353#issuecomment-1660787777,1,['depend'],['depend']
Integrability,OrInterpretNonCompilablePass$.transform(LoweringPass.scala:69); 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$3(LoweringPass.scala:16); 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$1(LoweringPass.scala:16); 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); 	at is.hail.expr.ir.lowering.LoweringPass.apply(LoweringPass.scala:14); 	at is.hail.expr.ir.lowering.LoweringPass.apply$(LoweringPass.scala:13); 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.apply(LoweringPass.scala:64); 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1(LoweringPipeline.scala:15); 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1$adapted(LoweringPipeline.scala:13); 	at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:36); 	at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:33); 	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:38); 	at is.hail.expr.ir.lowering.LoweringPipeline.apply(LoweringPipeline.scala:13); 	at is.hail.expr.ir.CompileAndEvaluate$._apply(CompileAndEvaluate.scala:47); 	at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:381); 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$2(SparkBackend.scala:417); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:638); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:638); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:275); 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$1(SparkBackend.scala:414); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.backend.spa,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12533:22515,Wrap,WrappedArray,22515,https://hail.is,https://github.com/hail-is/hail/issues/12533,1,['Wrap'],['WrappedArray']
Integrability,OrInterpretNonCompilablePass$.transform(LoweringPass.scala:69); 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$3(LoweringPass.scala:16); 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$1(LoweringPass.scala:16); 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); 	at is.hail.expr.ir.lowering.LoweringPass.apply(LoweringPass.scala:14); 	at is.hail.expr.ir.lowering.LoweringPass.apply$(LoweringPass.scala:13); 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.apply(LoweringPass.scala:64); 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1(LoweringPipeline.scala:15); 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1$adapted(LoweringPipeline.scala:13); 	at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:36); 	at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:33); 	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:38); 	at is.hail.expr.ir.lowering.LoweringPipeline.apply(LoweringPipeline.scala:13); 	at is.hail.expr.ir.CompileAndEvaluate$._apply(CompileAndEvaluate.scala:47); 	at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:416); 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$2(SparkBackend.scala:452); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:70); 	at is.hail.utils.package$.using(package.scala:646); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:70); 	at is.hail.utils.package$.using(package.scala:646); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:59); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:310); 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$1(SparkBackend.scala:449); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.backend.spa,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12290:6019,Wrap,WrappedArray,6019,https://hail.is,https://github.com/hail-is/hail/issues/12290,1,['Wrap'],['WrappedArray']
Integrability,OrInterpretNonCompilablePass$.transform(LoweringPass.scala:69); 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$3(LoweringPass.scala:16); 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$1(LoweringPass.scala:16); 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); 	at is.hail.expr.ir.lowering.LoweringPass.apply(LoweringPass.scala:14); 	at is.hail.expr.ir.lowering.LoweringPass.apply$(LoweringPass.scala:13); 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.apply(LoweringPass.scala:64); 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1(LoweringPipeline.scala:15); 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1$adapted(LoweringPipeline.scala:13); 	at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:36); 	at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:33); 	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:38); 	at is.hail.expr.ir.lowering.LoweringPipeline.apply(LoweringPipeline.scala:13); 	at is.hail.expr.ir.CompileAndEvaluate$._apply(CompileAndEvaluate.scala:47); 	at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:450); 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$2(SparkBackend.scala:486); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:70); 	at is.hail.utils.package$.using(package.scala:635); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:70); 	at is.hail.utils.package$.using(package.scala:635); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:59); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:339); 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$1(SparkBackend.scala:483); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.backend.spa,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12531:9330,Wrap,WrappedArray,9330,https://hail.is,https://github.com/hail-is/hail/issues/12531,4,['Wrap'],['WrappedArray']
Integrability,OrInterpretNonCompilablePass$.transform(LoweringPass.scala:69); 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$3(LoweringPass.scala:16); 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$1(LoweringPass.scala:16); 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); 	at is.hail.expr.ir.lowering.LoweringPass.apply(LoweringPass.scala:14); 	at is.hail.expr.ir.lowering.LoweringPass.apply$(LoweringPass.scala:13); 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.apply(LoweringPass.scala:64); 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1(LoweringPipeline.scala:15); 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1$adapted(LoweringPipeline.scala:13); 	at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:36); 	at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:33); 	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:38); 	at is.hail.expr.ir.lowering.LoweringPipeline.apply(LoweringPipeline.scala:13); 	at is.hail.expr.ir.CompileAndEvaluate$._apply(CompileAndEvaluate.scala:47); 	at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:450); 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$2(SparkBackend.scala:486); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:70); 	at is.hail.utils.package$.using(package.scala:635); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:70); 	at is.hail.utils.package$.using(package.scala:635); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:59); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:339); 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$1(SparkBackend.scala:483); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.backend.spa,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13287#issuecomment-1664593619:9123,Wrap,WrappedArray,9123,https://hail.is,https://github.com/hail-is/hail/issues/13287#issuecomment-1664593619,1,['Wrap'],['WrappedArray']
Integrability,"Our build system is a bit of a tangled mess. There's `build.yaml`, `build.gradle`, `hail/Makefile`, and `src/main/c/Makefile`. In this PR, I've tried to minimize `build.gradle`'s role to just JVM compilation and JAR production. I've removed a number of shell scripts that were previously gluing together build steps. I've either removed the need for that glue or incorporated it into `hail/Makefile`. I did not attempt to unify `src/main/c/Makefile` with `hail/Makefile`. I started to unify `build.yaml` and `hail/Makefile` but it grew into a bigger project than I want to tackle. A couple things I expect to raise questions:. Q. Where did COMPILE_NATIVES go?; A: I moved tightly around native-lib, which is the only rule it affects. Q: Why did you remove env/SHORT_REVISION from $(SHADOW_JAR)'s dependencies?; A: It is not an immediate dependency, it's transitive through the $(SCALA_BUILD_INFO). Q: Why did you remove `define properties ...`?; A: AFAIK, this had no effect and was unused. Q: Why inline $(DATE)?; A: Obviated the need for a comment explaining why we didn't make it an `env_var`. Q: Why no parallelism in pytest and doctest?; A: Hail uses all cores by default. Getting parallelism right in pytest and doctest would require a bit of smarts. I'm doubt its worth the effort since we have CI and you can test specific tests. Q: What the hell is `pgradle` and the `+` prefix?; A: This uses the [Make job server](https://www.gnu.org/software/make/manual/html_node/POSIX-Jobserver.html#POSIX-Jobserver) to cooperatively obey parallelism limits (`--jobs`). It uses a pair of pipes to claim and return *extra* CPU reservations (we implicitly have one core). Hail's JVM tests use two core clusters, so I set PARALLELISM to half the number of cores we could claim (with a minimum of one). I did not use this for shadowJar because there is no parallelism to be had. Q: How did you fix references.html?; A: `build.yaml` and `hail/Makefile` both use `www/Makefile` which now correctly finds all the",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6923:796,depend,dependencies,796,https://hail.is,https://github.com/hail-is/hail/pull/6923,2,['depend'],"['dependencies', 'dependency']"
Integrability,Our error message on functions that read TSV are much clearer than they used to be. I don't think this needs to be a separate command.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/216#issuecomment-279518768:10,message,message,10,https://hail.is,https://github.com/hail-is/hail/issues/216#issuecomment-279518768,2,['message'],['message']
Integrability,"Our protocol is that the assigned user is the only one who can approve, but that anyone else can block.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4921#issuecomment-445296790:4,protocol,protocol,4,https://hail.is,https://github.com/hail-is/hail/pull/4921#issuecomment-445296790,1,['protocol'],['protocol']
Integrability,"Our public interface is python. The public interface of Spark that we use, AFAICT, does not depend on any non-Spark-defined classes. Ergo, we should hide away all our dependencies. I intended to shade every bundled package except for breeze-natives, because I think we want to take that from the cluster (and we're willing to lock into Spark's version). `RandBasis` (a breeze class) takes as argument a random generator from `math3`, so I keep the Apache Commons Math3 library unbundled and not shaded. Everything else should now be shaded.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8576:11,interface,interface,11,https://hail.is,https://github.com/hail-is/hail/pull/8576,4,"['depend', 'interface']","['depend', 'dependencies', 'interface']"
Integrability,"Overall this is good, but I think we should simplify the interface. 1. Require `entry_to_double`. Don't support genotypes or do normalization. 2. Only have the one version that returns the triple. The user can reannotate the original dataset if that's what they want. 3. Write a `VariantDataset.genotype_matrix_pca` in Python that looks at the `.GT` field and does the necessary normalization before calling `pca`. This should be written completely in Python.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2454#issuecomment-348531819:57,interface,interface,57,https://hail.is,https://github.com/hail-is/hail/pull/2454#issuecomment-348531819,2,['interface'],['interface']
Integrability,"P mask sizes, instead of the previous <code>--node-cidr-mask-size</code> flag.</li>; <li>The <code>--node-cidr-mask-size</code> flag is mutually exclusive with <code>--node-cidr-mask-size-ipv4</code> and <code>--node-cidr-mask-size-ipv6</code>.</li>; <li>Single-stack clusters do not need to change, but may choose to use the more specific flags. Users can use either the older <code>--node-cidr-mask-size</code> flag or one of the newer <code>--node-cidr-mask-size-ipv4</code> or <code>--node-cidr-mask-size-ipv6</code> flags to configure the per-node IP mask size, provided that the flag's IP family matches the cluster's IP family (--cluster-cidr). (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/104691"">kubernetes/kubernetes#104691</a>, <a href=""https://github.com/khenidak""><code>@​khenidak</code></a>)</li>; </ol>; </li>; <li>Remove <code>NodeLease</code> feature gate that was graduated and locked to stable in 1.17 release. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/105222"">kubernetes/kubernetes#105222</a>, <a href=""https://github.com/cyclinder""><code>@​cyclinder</code></a>)</li>; <li>Removed deprecated <code>--seccomp-profile-root</code>/<code>seccompProfileRoot</code> config. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/103941"">kubernetes/kubernetes#103941</a>, <a href=""https://github.com/saschagrunert""><code>@​saschagrunert</code></a>)</li>; <li>Since golang 1.17 both net.ParseIP and net.ParseCIDR rejects leading zeros in the dot-decimal notation of IPv4 addresses,; Kubernetes will keep allowing leading zeros on IPv4 address to not break the compatibility.; IMPORTANT: Kubernetes interprets leading zeros on IPv4 addresses as decimal, users must not rely on parser alignment to not being impacted by the associated security advisory:; CVE-2021-29923 golang standard library &quot;net&quot; - Improper Input Validation of octal literals in golang 1.16.2 and below standard library &quot",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11957:11694,depend,dependabot,11694,https://hail.is,https://github.com/hail-is/hail/pull/11957,1,['depend'],['dependabot']
Integrability,"PBaseStruct becomes an interface with only implementations that are re-parameterizations of its abstract methods. PStruct and PTuple inherit. PCanonicalStruct gets the PBaseStruct implementations, and PCanonicalTuple implements its concrete methods by calling PCanonicalStruct's.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7928:23,interface,interface,23,https://hail.is,https://github.com/hail-is/hail/issues/7928,1,['interface'],['interface']
Integrability,"PEP 585 type aliases in stubs (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/11918"">#11918</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/b40c3d0bae812d3c38096973e84479e20353d5a9""><code>b40c3d0</code></a> Handle <code>NoReturn</code> type aliases (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/11912"">#11912</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/3f2143d55c2f2ec6afc44b42541901aaaf12614a""><code>3f2143d</code></a> Always allow use of <code>type[T]</code> in stubs (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/11863"">#11863</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/12290decccf3d60e3b56c23be09bc853a3ed6051""><code>12290de</code></a> Bump version to 0.931+dev</li>; <li><a href=""https://github.com/python/mypy/commit/8ce64aca6e84860ffbd2605f7cb52e97c8c10771""><code>8ce64ac</code></a> [0.931 backport] Fix <strong>reduce</strong> regression (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/11866"">#11866</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/python/mypy/compare/v0.780...v0.931"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mypy&package-manager=pip&previous-version=0.780&new-version=0.931)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwritin",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11498:2422,depend,dependabot,2422,https://hail.is,https://github.com/hail-is/hail/pull/11498,1,['depend'],['dependabot']
Integrability,"PIs for configuring Grafana settings.</li>; <li>api-change:<code>rbin</code>: This release adds support for Rule Lock for Recycle Bin, which allows you to lock retention rules so that they can no longer be modified or deleted.</li>; </ul>; <h1>1.29.15</h1>; <ul>; <li>bugfix:Endpoints: Resolve endpoint with default partition when no region is set</li>; <li>bugfix:s3: fixes missing x-amz-content-sha256 header for s3 object lambda</li>; <li>api-change:<code>appflow</code>: Adding support for Amazon AppFlow to transfer the data to Amazon Redshift databases through Amazon Redshift Data API service. This feature will support the Redshift destination connector on both public and private accessible Amazon Redshift Clusters and Amazon Redshift Serverless.</li>; <li>api-change:<code>kinesisanalyticsv2</code>: Support for Apache Flink 1.15 in Kinesis Data Analytics.</li>; </ul>; <h1>1.29.14</h1>; <ul>; <li>api-change:<code>route53</code>: Amazon Route 53 now supports the Asia Pacific (Hyderabad) Region (ap-south-2) for latency records, geoproximity records, and private DNS for Amazon VPCs in that region.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/boto/botocore/commit/f0dd67f9b7cc2791f301f3fd135f0c97d9c66bae""><code>f0dd67f</code></a> Merge branch 'release-1.29.16'</li>; <li><a href=""https://github.com/boto/botocore/commit/22c3cb362c0ef00c6de404140f06a14d0e195f39""><code>22c3cb3</code></a> Bumping version to 1.29.16</li>; <li><a href=""https://github.com/boto/botocore/commit/4aa5f864b62b6193ed0729a4ac71c010877fe377""><code>4aa5f86</code></a> Update to latest models</li>; <li><a href=""https://github.com/boto/botocore/commit/a7e153d9c822fae5c55d30ef476bdf4f55a4d027""><code>a7e153d</code></a> Merge branch 'release-1.29.15'</li>; <li><a href=""https://github.com/boto/botocore/commit/a942b57854dd35a37766d7973c3fb980a2de4068""><code>a942b57</code></a> Merge branch 'release-1.29.15' into develop</li>; <li><a href=""http",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12503:1390,Rout,Route,1390,https://hail.is,https://github.com/hail-is/hail/pull/12503,1,['Rout'],['Route']
Integrability,"PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI2NDVjMDg3ZS00NzIwLTRkZTgtYmI0NC00MWNkOTY0NTBmZjUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjY0NWMwODdlLTQ3MjAtNGRlOC1iYjQ0LTQxY2Q5NjQ1MGZmNSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/0ba777e1-bc27-41cc-aefa-0ed1a253829e?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/0ba777e1-bc27-41cc-aefa-0ed1a253829e?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""645c087e-4720-4de8-bb44-41cd96450ff5"",""prPublicId"":""645c087e-4720-4de8-bb44-41cd96450ff5"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.2""}],""packageManager"":""pip"",""projectPublicId"":""0ba777e1-bc27-41cc-aefa-0ed1a253829e"",""projectUrl"":""https://app.snyk.io/org/danking/project/0ba777e1-bc27-41cc-aefa-0ed1a253829e?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6209406"",""SNYK-PYTHON-AIOHTTP-6209407""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581,718],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Limitation of a Pathname to a Restricted Directory (&#x27;Path Traversal&#x27;)](https://learn.snyk.io/lesson/directory-traversal/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14220:3250,depend,dependencies,3250,https://hail.is,https://github.com/hail-is/hail/pull/14220,1,['depend'],['dependencies']
Integrability,"PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3ZGRlNzcwZi0yMzMyLTQ5ZjktOWI1My05ZDY1OGJlOTVjMmQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjdkZGU3NzBmLTIzMzItNDlmOS05YjUzLTlkNjU4YmU5NWMyZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""7dde770f-2332-49f9-9b53-9d658be95c2d"",""prPublicId"":""7dde770f-2332-49f9-9b53-9d658be95c2d"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.2""}],""packageManager"":""pip"",""projectPublicId"":""b72ce54d-5de3-48e5-a1d4-6f8967681a12"",""projectUrl"":""https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6209406"",""SNYK-PYTHON-AIOHTTP-6209407""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581,718],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Limitation of a Pathname to a Restricted Directory (&#x27;Path Traversal&#x27;)](https://learn.snyk.io/lesson/directory-traversal/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14228:3198,depend,dependencies,3198,https://hail.is,https://github.com/hail-is/hail/pull/14228,1,['depend'],['dependencies']
Integrability,"PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI5ZWNjYjQ0YS1jYWZiLTQ0OTgtYjU1NS02NDdmZjUwY2ExOTQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjllY2NiNDRhLWNhZmItNDQ5OC1iNTU1LTY0N2ZmNTBjYTE5NCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fdd23464-9a67-49b8-8d9c-08502282c5fb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fdd23464-9a67-49b8-8d9c-08502282c5fb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""9eccb44a-cafb-4498-b555-647ff50ca194"",""prPublicId"":""9eccb44a-cafb-4498-b555-647ff50ca194"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.2""}],""packageManager"":""pip"",""projectPublicId"":""fdd23464-9a67-49b8-8d9c-08502282c5fb"",""projectUrl"":""https://app.snyk.io/org/danking/project/fdd23464-9a67-49b8-8d9c-08502282c5fb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6209406"",""SNYK-PYTHON-AIOHTTP-6209407""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581,718],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Limitation of a Pathname to a Restricted Directory (&#x27;Path Traversal&#x27;)](https://learn.snyk.io/lesson/directory-traversal/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14225:3184,depend,dependencies,3184,https://hail.is,https://github.com/hail-is/hail/pull/14225,1,['depend'],['dependencies']
Integrability,"PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhZDFmMzFlYi1hYTcyLTQyMTYtOTgzNC01MDljMDdhOWFmNTMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImFkMWYzMWViLWFhNzItNDIxNi05ODM0LTUwOWMwN2E5YWY1MyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""ad1f31eb-aa72-4216-9834-509c07a9af53"",""prPublicId"":""ad1f31eb-aa72-4216-9834-509c07a9af53"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.2""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6209406"",""SNYK-PYTHON-AIOHTTP-6209407""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581,718],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Limitation of a Pathname to a Restricted Directory (&#x27;Path Traversal&#x27;)](https://learn.snyk.io/lesson/directory-traversal/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14227:3430,depend,dependencies,3430,https://hail.is,https://github.com/hail-is/hail/pull/14227,1,['depend'],['dependencies']
Integrability,"PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlMzQ0ZjYzNy00MjQwLTQxNmEtYjE2Yi1kODhmYjc2YTUwZmYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImUzNDRmNjM3LTQyNDAtNDE2YS1iMTZiLWQ4OGZiNzZhNTBmZiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/92d13c88-936f-40d3-b692-29e637c1a00c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/92d13c88-936f-40d3-b692-29e637c1a00c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""e344f637-4240-416a-b16b-d88fb76a50ff"",""prPublicId"":""e344f637-4240-416a-b16b-d88fb76a50ff"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.2""}],""packageManager"":""pip"",""projectPublicId"":""92d13c88-936f-40d3-b692-29e637c1a00c"",""projectUrl"":""https://app.snyk.io/org/danking/project/92d13c88-936f-40d3-b692-29e637c1a00c?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6209406"",""SNYK-PYTHON-AIOHTTP-6209407""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581,718],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Limitation of a Pathname to a Restricted Directory (&#x27;Path Traversal&#x27;)](https://learn.snyk.io/lesson/directory-traversal/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14226:3175,depend,dependencies,3175,https://hail.is,https://github.com/hail-is/hail/pull/14226,1,['depend'],['dependencies']
Integrability,Pandoc normally tries to manage wrapping in tables by setting column widths with a colgroup and width attributes. This isn't necessary for HTML. This change suppresses the colgroups. Got the idea from here:. https://github.com/jgm/pandoc/issues/2574,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/633:32,wrap,wrapping,32,https://hail.is,https://github.com/hail-is/hail/pull/633,1,['wrap'],['wrapping']
Integrability,Partially done: https://github.com/cseed/k3/commit/3cfd6b226ec1bd885faa1fae96965435dd78130b. There is still a small number of messages I haven't figured out how to disable.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/41#issuecomment-152272292:126,message,messages,126,https://hail.is,https://github.com/hail-is/hail/issues/41#issuecomment-152272292,1,['message'],['messages']
Integrability,Pass$.transform(LoweringPass.scala:69); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$3(LoweringPass.scala:16); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$1(LoweringPass.scala:16); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is.hail.expr.ir.lowering.LoweringPass.apply(LoweringPass.scala:14); E 	at is.hail.expr.ir.lowering.LoweringPass.apply$(LoweringPass.scala:13); E 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.apply(LoweringPass.scala:64); E 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1(LoweringPipeline.scala:22); E 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1$adapted(LoweringPipeline.scala:20); E 	at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:36); E 	at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:33); E 	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:38); E 	at is.hail.expr.ir.lowering.LoweringPipeline.apply(LoweringPipeline.scala:20); E 	at is.hail.expr.ir.CompileAndEvaluate$._apply(CompileAndEvaluate.scala:47); E 	at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:454); E 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$2(SparkBackend.scala:490); E 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:75); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:75); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); E 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:63); E 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:342); E 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$1(SparkBackend.scala:487); E 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:4618,Wrap,WrappedArray,4618,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229,1,['Wrap'],['WrappedArray']
Integrability,"Per conversation with @konradjk @danking regarding user confusion, this PR emphasizes that ld_prune returns a table of pruned variants rather than pruning the matrix table itself. Also corrected but about parallelism. @danking I could go farther and change the method name to `ld_pruned_variants`, but I'd rather leave whatever interface changes seem optimal for when you add your planned version that actually does the pruning.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3600:328,interface,interface,328,https://hail.is,https://github.com/hail-is/hail/pull/3600,1,['interface'],['interface']
Integrability,Phew! I finally got to parity. I'm impressed how well the old method wrapping logic worked. Benchmarks with >20% change:. ```; $ hail-bench compare ./0.2.47-3f8cff262dcf-1.json 0.2.47-63dccdda2a44.json ; Failed benchmarks in run 1:; pc_relate_big; large_range_matrix_table_sum; Failed benchmarks in run 2:; pc_relate_big; large_range_matrix_table_sum; Benchmark Name Ratio Time 1 Time 2; -------------- ----- ------ ------; table_big_aggregate_compile_and_execute 334.8% 13.325 44.608; matrix_table_array_arithmetic 133.9% 10.208 13.665; matrix_table_many_aggs_col_wise 131.4% 34.847 45.781; table_aggregate_counter 126.4% 13.136 16.606; per_row_stats_star_star 124.5% 8.474 10.553; matrix_table_filter_entries_unfilter 123.7% 8.581 10.616; ...; shuffle_key_rows_by_mt 82.8% 35.932 29.742; full_combiner_chr22 23.6% 1644.907 388.414; ----------------------; Geometric mean: 100.0%; Median: 99.2%; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8963#issuecomment-650638060:69,wrap,wrapping,69,https://hail.is,https://github.com/hail-is/hail/pull/8963#issuecomment-650638060,1,['wrap'],['wrapping']
Integrability,"Physical values in the emitter are currently represented by a single scalar JVM value, a Code[T]. The goal of physical values is to make the representation of values more general. In addition, physical values carry a PType, which Code[T] doesn't. The PValue introduced here isn't a ""real"" one, it just wraps the previous Code[T] and carries the PType. I will move towards the more general picture in pieces.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8144#issuecomment-590144918:302,wrap,wraps,302,https://hail.is,https://github.com/hail-is/hail/pull/8144#issuecomment-590144918,1,['wrap'],['wraps']
Integrability,Please keep in mind this PR is part of a much larger refactor of the code and this bad interface will go away.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6238#issuecomment-498324907:87,interface,interface,87,https://hail.is,https://github.com/hail-is/hail/pull/6238#issuecomment-498324907,1,['interface'],['interface']
Integrability,"Please see the full set of changes for this release also in the 7.0.0rc1 notes below</strong>)</p>; <h2>Deprecations</h2>; <ul>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9488"">#9488</a>: If custom subclasses of nodes like <code>pytest.Item</code>{.interpreted-text role=&quot;class&quot;} override the; <code>__init__</code> method, they should take <code>**kwargs</code>. See; <code>uncooperative-constructors-deprecated</code>{.interpreted-text role=&quot;ref&quot;} for details.</p>; <p>Note that a deprection warning is only emitted when there is a conflict in the; arguments pytest expected to pass. This deprecation was already part of pytest; 7.0.0rc1 but wasn't documented.</p>; </li>; </ul>; <h2>Bug Fixes</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9355"">#9355</a>: Fixed error message prints function decorators when using assert in Python 3.8 and above.</li>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9396"">#9396</a>: Ensure <code>pytest.Config.inifile</code>{.interpreted-text role=&quot;attr&quot;} is available during the <code>pytest_cmdline_main &lt;_pytest.hookspec.pytest_cmdline_main&gt;</code>{.interpreted-text role=&quot;func&quot;} hook (regression during <code>7.0.0rc1</code>).</li>; </ul>; <h2>Improved Documentation</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9404"">#9404</a>: Added extra documentation on alternatives to common misuses of [pytest.warns(None)]{.title-ref} ahead of its deprecation.</li>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9505"">#9505</a>: Clarify where the configuration files are located. To avoid confusions documentation mentions; that configuration file is located in the root of the repository.</li>; </ul>; <h2>Trivial/Internal Changes</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9521"">#9521</a>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11516:2795,depend,dependabot,2795,https://hail.is,https://github.com/hail-is/hail/pull/11516,3,['depend'],['dependabot']
Integrability,"Posting with recommendation from @konradjk ; ### Hail version:; devel-2c596b7. ### What you did:; Creating a ClinVar matrixtable from a tsv and vep'ing. ```; import hail as hl; import hail.expr.aggregators as agg; from gnomad_hail import *; hl.init(). clinvar_ht= hl.import_table(""gs://gnomad-resources/clinvar/source/clinvar_alleles.single.b37.tsv.gz"", impute=True, missing='NA'); clinvar_ht = clinvar_ht.annotate(locus = hl.locus(clinvar_ht.chrom, clinvar_ht.pos),; alleles = hl.array({clinvar_ht.ref, clinvar_ht.alt})). clinvar_ht = clinvar_ht.key_by(clinvar_ht.locus, clinvar_ht.alleles); clinvar_mt = hl.MatrixTable.from_rows_table(clinvar_ht); clinvar_mt = split_multi_dynamic(clinvar_mt, left_aligned = False); clinvar_mt = clinvar_mt.repartition(100); clinvar_mt = clinvar_mt.key_rows_by(clinvar_mt.locus, clinvar_mt.alleles); clinvar_vep = hl.vep(clinvar_mt, vep_config); ```. ### What went wrong (all error messages here, including the full java stack trace):; ```; In [6]: clinvar_vep = hl.vep(clinvar_mt, vep_config); 2018-03-08 02:46:03 Hail: WARN: property `hail.vep.assembly' not specified. Setting to GRCh37; [Stage 22:======================================================>(99 + 1) / 100]2018-03-08 02:54:37 Hail: INFO: vep: annotated 243477 variants; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); <ipython-input-6-a229f1f9de81> in <module>(); ----> 1 clinvar_vep = hl.vep(clinvar_mt, vep_config). <decorator-gen-843> in vep(dataset, config, block_size, name, csq). /hadoop_gcs_connector_metadata_cache/hail/hail-devel-0c961806173f.zip/hail/typecheck/check.py in _typecheck(__orig_func__, *args, **kwargs); 491 def _typecheck(__orig_func__, *args, **kwargs):; 492 args_, kwargs_ = check_all(__orig_func__, args, kwargs, checkers, is_method=False); --> 493 return __orig_func__(*args_, **kwargs_); 494; 495 return decorator(_typecheck). /hadoop_gcs_connector_metadata_cache/hail/hail-devel-0c961806173f.zip/h",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3099:917,message,messages,917,https://hail.is,https://github.com/hail-is/hail/issues/3099,1,['message'],['messages']
Integrability,Prefer WrappedArray to Vector,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1291:7,Wrap,WrappedArray,7,https://hail.is,https://github.com/hail-is/hail/pull/1291,1,['Wrap'],['WrappedArray']
Integrability,"Pretty rough, not yet hooked into anything, but I wrote a test. This doesn't deal with the question of region management at the jvm/c++ interface, but it lays out a basic wrapper for passing iterators through c++.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4729:136,interface,interface,136,https://hail.is,https://github.com/hail-is/hail/pull/4729,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"Pretty sure this is all dead code because we don't currently speak TLS between the worker and internal gateway. I think what's ultimately the right approach here is to start sending the hail root cert to workers and have them mount that at a well known location to all containers, not have it be part of the job spec. Then we should be able to talk https to internal gateway. I'm not exactly sure what to do in this PR specifically. I want to get rid of this hard dependency on the ssl-config because; 1. Doesn't exist in terra as everything goes through the relay listener; 2. These ssl configs aren't used anyway; but I'd need to put in a bit more work to start sending the root cert to workers and add https to internal-gateway",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13187:464,depend,dependency,464,https://hail.is,https://github.com/hail-is/hail/pull/13187,1,['depend'],['dependency']
Integrability,"Prevent first-party imports from being resolved to <code>site-packages</code>.</p>; <p>Refs <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/7365"">PyCQA/pylint#7365</a></p>; </li>; <li>; <p>Fix <code>astroid.interpreter._import.util.is_namespace()</code> incorrectly; returning <code>True</code> for frozen stdlib modules on PyPy.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/astroid/issues/1755"">#1755</a></p>; </li>; </ul>; <h1>What's New in astroid 2.12.4?</h1>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/PyCQA/astroid/commit/65bca39bbf254bc760ac9d388e5a09333eaf5c87""><code>65bca39</code></a> Bump astroid to 2.12.8, update changelog</li>; <li><a href=""https://github.com/PyCQA/astroid/commit/fab511c1477d13262e9e33b015906d4bca683953""><code>fab511c</code></a> Fix crash in <code>dataclass</code> brain (<a href=""https://github-redirect.dependabot.com/PyCQA/astroid/issues/1770"">#1770</a>)</li>; <li><a href=""https://github.com/PyCQA/astroid/commit/0720cbcd05a3938bdf8141328a1ceed1e2f38bed""><code>0720cbc</code></a> Parse default values in <code>dataclass</code> attributes correctly (<a href=""https://github-redirect.dependabot.com/PyCQA/astroid/issues/1771"">#1771</a>)</li>; <li><a href=""https://github.com/PyCQA/astroid/commit/b2dbf7bdaa02436962c4c5ccbc6bbb8b8e0c3295""><code>b2dbf7b</code></a> Bump astroid to 2.12.7, update changelog</li>; <li><a href=""https://github.com/PyCQA/astroid/commit/fbe7859ec56ab64cc4d1b2604082878fdfdc8a14""><code>fbe7859</code></a> Fix crash in <code>dataclass</code> brain (<a href=""https://github-redirect.dependabot.com/PyCQA/astroid/issues/1768"">#1768</a>)</li>; <li><a href=""https://github.com/PyCQA/astroid/commit/e194631088aee587140c029a0404f8d40c6765b5""><code>e194631</code></a> Bump astroid to 2.12.6, update changelog</li>; <li><a href=""https://github.com/PyCQA/astroid/commit/1f5dc457729d7219178ace97",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12158:2687,depend,dependabot,2687,https://hail.is,https://github.com/hail-is/hail/pull/12158,1,['depend'],['dependabot']
Integrability,"Previously everything was fine because the deploy script called; both the image creation and the deploy targets in make. However,; if we need to manually deploy, it is easy to forget this. I; modified the Makefile to make the dependency explicit.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4687:226,depend,dependency,226,https://hail.is,https://github.com/hail-is/hail/pull/4687,1,['depend'],['dependency']
Integrability,"Previously, MatrixMapRows was calling into an IR-generated function for each element. Now we aggregate the entire row from within Python. On a 6-aggregator benchmark on a shard of gnomAD, this improved things about 50% (1m59 => 1m02). Some notable changes:; - I added a Begin for sequencing void-type IR,; - I added ArrayFor for looping over arrays (@danking); - I added a SeqOp that represents calling the RegionValueAggregator in seqOp in the IR after extracting aggregators, it holds the index of the aggregator to call seqsOp on, since there might be multiple,; - added Void literal (which I didn't end up using, but I left it in for now),; - TAggreable symbol table is no longer used in compiling the extracted aggregators. The arguments need to specified explicitly and otherwise it is just another function (but takes an extra special argument, the array of RVAggregators),. This suggests some additional improvements/simplifications to the aggregator interface that I will write up on the dev forum.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3422:959,interface,interface,959,https://hail.is,https://github.com/hail-is/hail/pull/3422,1,['interface'],['interface']
Integrability,"Previously, if you did:. ```; x = hl.bool(True); if x:; ....; ```. You'd get a message like: ""Expressions do not have a static length"", because in Python, truthiness is resolved by first checking if `__bool__` is defined, then checking if `__len__` is nonzero. This PR gives a better message suggesting that the user has in some way tried to coerce an `Expression` into a bool, and only shows the other error if someone does something that specifically needs the length.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10741:79,message,message,79,https://hail.is,https://github.com/hail-is/hail/pull/10741,2,['message'],['message']
Integrability,"Previously, when we did `hl.agg.group_by(group_expr, aggregation_expr)`, we were only tracking the indices picked up from the `aggregation_expr`. This led to us throwing bad error messages.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9570:180,message,messages,180,https://hail.is,https://github.com/hail-is/hail/pull/9570,1,['message'],['messages']
Integrability,Print VEP stderr in error message if VEP fails,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4767:26,message,message,26,https://hail.is,https://github.com/hail-is/hail/issues/4767,1,['message'],['message']
Integrability,Prints a nice message if the user forgets default/or_missing. Fixes #3696,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3830:14,message,message,14,https://hail.is,https://github.com/hail-is/hail/pull/3830,1,['message'],['message']
Integrability,"Prints the default in the help message, way nicer.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8400:31,message,message,31,https://hail.is,https://github.com/hail-is/hail/pull/8400,1,['message'],['message']
Integrability,"Prior to this PR, when someone specified they'd like to color a plot by a discrete variable, we used a predetermined list of 10 colors to assign colors. If something used more than 10 colors, it'd wrap around. . This PR changes `scale_color_discrete` to be an alias for `scale_color_hue`, as it is in ggplot. `scale_color_hue` works by sampling evenly spaced points around a color wheel to create a set of maximally distant colors. . The old behavior is now achievable by using `scale_color_manual`, which takes in a list of colors and assigns colors based on that list.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11613:197,wrap,wrap,197,https://hail.is,https://github.com/hail-is/hail/pull/11613,1,['wrap'],['wrap']
Integrability,"Produces better error messages, and allows for deeply nested; conversion if we want to do that.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3158:22,message,messages,22,https://hail.is,https://github.com/hail-is/hail/pull/3158,1,['message'],['messages']
Integrability,Progress toward Hail2 interface,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2461:22,interface,interface,22,https://hail.is,https://github.com/hail-is/hail/pull/2461,1,['interface'],['interface']
Integrability,"Proposed interface changes:. class TextTableConfiguration. class TextTableReader. TextTableReader(conf); TextTableReader(delimiter = ""#"", ...). // only read fields ; TextTableReader.read(columnTypes: Map[String, Type], path: String, [select]): (TStruct, RDD[Annotation]). (and JSON). for JSON:. JSONReader.read(t: Type, path: String): RDD[Annotation]. in expr language:. support. Variant(""chr:pos:ref:alt1,...,altN"") . (so Variant(v.toString) == v) and. Variant(chr: String, pos: Int, ref: String, alts: Array[String]). Then we can do:. annotatevariants table -v 'Variant(Chrom, Pos, Ref, Alts.split("",""))'. annotatevariants table -v 'Variant(Variant)'. To get this behavior, you'll have to build the EvalContext from the table type. Add. TStruct.filter(predicate: (Field) => Boolean): (TStruct, Filterer). where. type Filterer = (Annotation) => Annotation. This should make implementating importvariants table simple and elegant.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/462#issuecomment-232740494:9,interface,interface,9,https://hail.is,https://github.com/hail-is/hail/pull/462#issuecomment-232740494,2,['interface'],['interface']
Integrability,Prototype for batch Python interface,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4937:27,interface,interface,27,https://hail.is,https://github.com/hail-is/hail/pull/4937,1,['interface'],['interface']
Integrability,"Proxy from gateway to router. Logic for proxying web sockets came from here: https://stackoverflow.com/a/15198581/431282. The Let's Encrypt stuff here isn't used anymore, not since we put letsencrypt in its own subproject. I tested this by hand and then live on the cluster (!) and it's working fine.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5873:22,rout,router,22,https://hail.is,https://github.com/hail-is/hail/pull/5873,1,['rout'],['router']
Integrability,"PyCQA/pylint/issues/5323"">#5323</a></p>; </li>; <li>; <p><code>unused-import</code> now check all ancestors for typing guards</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5316"">#5316</a></p>; </li>; </ul>; <h1>What's New in Pylint 2.12.1?</h1>; <p>Release date: 2021-11-25</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/PyCQA/pylint/commit/eec287fae66f8fc514d5daa9caee46fd0e0cb6d9""><code>eec287f</code></a> Bump pylint to 2.12.2, update changelog</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/7def5278afc86224a98cc9d1706fbd9523ddda1b""><code>7def527</code></a> Add Copyrite configuration for Yu Shao</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/608ed329aaee9e457ac51347699d4892d29df802""><code>608ed32</code></a> Require <code>\</code> for asterisks in Sphinx-style parameter docstrings (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5464"">#5464</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/f89a3374ec7d49d2a984c90530758a506eaa4384""><code>f89a337</code></a> Deprecate <code>is_inside_lambda</code> from utils (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5447"">#5447</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/765a0b74bc5f2cface4595661f8832a3aebc68ba""><code>765a0b7</code></a> Add endLine and endColumn keys to JSONReporter (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5456"">#5456</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/28a33ef874cd63b92a32208e844b97f0c6a2f082""><code>28a33ef</code></a> Update outdated class name in &quot;How to Write a Checker&quot; test example (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5449"">#5449</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/bce059acf1684e35c9a731e27cff2de16bf54de8""><code>bce059a</code></a> Move Sphinx docstrin",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11461:6241,depend,dependabot,6241,https://hail.is,https://github.com/hail-is/hail/pull/11461,2,['depend'],['dependabot']
Integrability,"Pylint 2.12.1?</h1>; <p>Release date: 2021-11-25</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/PyCQA/pylint/commit/eec287fae66f8fc514d5daa9caee46fd0e0cb6d9""><code>eec287f</code></a> Bump pylint to 2.12.2, update changelog</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/7def5278afc86224a98cc9d1706fbd9523ddda1b""><code>7def527</code></a> Add Copyrite configuration for Yu Shao</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/608ed329aaee9e457ac51347699d4892d29df802""><code>608ed32</code></a> Require <code>\</code> for asterisks in Sphinx-style parameter docstrings (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5464"">#5464</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/f89a3374ec7d49d2a984c90530758a506eaa4384""><code>f89a337</code></a> Deprecate <code>is_inside_lambda</code> from utils (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5447"">#5447</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/765a0b74bc5f2cface4595661f8832a3aebc68ba""><code>765a0b7</code></a> Add endLine and endColumn keys to JSONReporter (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5456"">#5456</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/28a33ef874cd63b92a32208e844b97f0c6a2f082""><code>28a33ef</code></a> Update outdated class name in &quot;How to Write a Checker&quot; test example (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5449"">#5449</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/bce059acf1684e35c9a731e27cff2de16bf54de8""><code>bce059a</code></a> Move Sphinx docstrings out of <code>TestParamDocChecker</code> (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5450"">#5450</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/e14596ef44db6efd55c783fc5bffd61d020edc23""><code>e14596e</code></a> Move <co",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11461:6503,depend,dependabot,6503,https://hail.is,https://github.com/hail-is/hail/pull/11461,2,['depend'],['dependabot']
Integrability,"Python 3.9</li>; <li>Additional commits viewable in <a href=""https://github.com/thibaudcolas/curlylint/compare/v0.12.0...v0.13.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=curlylint&package-manager=pip&previous-version=0.12.0&new-version=0.13.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11494:7870,Depend,Dependabot,7870,https://hail.is,https://github.com/hail-is/hail/pull/11494,34,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"Python 3: <a href=""https://pypi.org/project/avro/1.11.0"">https://pypi.org/project/avro/1.11.0</a></li>; <li>Ruby: <a href=""https://rubygems.org/gems/avro/versions/1.11.0"">https://rubygems.org/gems/avro/versions/1.11.0</a></li>; </ul>; <p>Thanks to everyone for contributing!</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/apache/avro/compare/release-1.10.0...release-1.11.0"">compare view</a></li>; </ul>; </details>; <br />. Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11475:3330,Depend,Dependabot,3330,https://hail.is,https://github.com/hail-is/hail/pull/11475,17,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"Python integration tests often fail waiting to allocate highmem instances for worker jobs.; Since we control both APIs, it seems reasonable to move the testing burdon for vm allocation onto batch and use contract testing on the query driver side. These contract tests cover:; - uploading the the ServiceBackendRPConfig to remote storage in python; - reading that config and forwarding the relevant sections to the batch service in scala. Admittedly these are fairly busy tests and make bare a lot of lower-level implementation details. While I believe these tests are good to have, they perhaps don't warrant the time investment to properly refactor for cleaner mocking. Should details of the main implementation change, these will likely break. I've made tweaks to the python unittest annotations for backend test filtering. The old system skipped tests after all required fixtures had been acquired. Using `@pytest.mark.{feature}` allows us to exclude tests before fixtures are setup as well as add additional setup/teardown code.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14512:7,integrat,integration,7,https://hail.is,https://github.com/hail-is/hail/pull/14512,3,"['contract', 'integrat']","['contract', 'integration']"
Integrability,"Python interface changes:; - filter_variants_all -> drop_variants; - filter_samples_all -> drop_samples; - renamed ""condition"" to ""expr"" in parameter names where appropriate. Removed gradle installDist",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1397#issuecomment-280419318:7,interface,interface,7,https://hail.is,https://github.com/hail-is/hail/pull/1397#issuecomment-280419318,1,['interface'],['interface']
Integrability,"Python versioning is a huge problem. Basically every time we have used unbounded dependency versions, we've gotten burned (some package updates and now Hail is broken for anyone who tries to install it). John could find out that 0.24 is supported, but then we'd have to pin at `<0.25`, so this doesn't solve the problem generally. I think we're also feeling quite sour on conda at the moment as well. In particular, I had to fix the [environment.yml for LDSC](https://github.com/bulik/ldsc/pull/168) because **recent versions of conda removed scipy==0.18 from their registry**.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7299#issuecomment-542183134:81,depend,dependency,81,https://hail.is,https://github.com/hail-is/hail/issues/7299#issuecomment-542183134,1,['depend'],['dependency']
Integrability,"QA/astroid) from 2.11.5 to 2.12.5.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/PyCQA/astroid/blob/main/ChangeLog"">astroid's changelog</a>.</em></p>; <blockquote>; <h1>What's New in astroid 2.12.5?</h1>; <p>Release date: 2022-08-29</p>; <ul>; <li>; <p>Prevent first-party imports from being resolved to <code>site-packages</code>.</p>; <p>Refs <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/7365"">PyCQA/pylint#7365</a></p>; </li>; <li>; <p>Fix <code>astroid.interpreter._import.util.is_namespace()</code> incorrectly; returning <code>True</code> for frozen stdlib modules on PyPy.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/astroid/issues/1755"">#1755</a></p>; </li>; </ul>; <h1>What's New in astroid 2.12.4?</h1>; <p>Release date: 2022-08-25</p>; <ul>; <li>; <p>Fixed a crash involving non-standard type comments such as <code># type: # any comment</code>.</p>; <p>Refs <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/7347"">PyCQA/pylint#7347</a></p>; </li>; </ul>; <h1>What's New in astroid 2.12.3?</h1>; <p>Release date: 2022-08-23</p>; <ul>; <li>; <p>Fixed crash in <code>ExplicitNamespacePackageFinder</code> involving <code>_SixMetaPathImporter</code>.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/astroid/issues/1708"">#1708</a></p>; </li>; <li>; <p>Fix unhandled <code>FutureWarning</code> from pandas import in cython modules</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/astroid/issues/1717"">#1717</a></p>; </li>; <li>; <p>Fix false positive with inference of type-annotated Enum classes.</p>; <p>Refs <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/7265"">PyCQA/pylint#7265</a></p>; </li>; <li>; <p>Fix crash with inference of type-annotated Enum classes where the member has no value.</p>; </li>; <li>; <p>Fix a crash inferring invalid old-style string formatting with <code>%</code>.</p>; <p>Closes <a href=""https",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12151:1033,depend,dependabot,1033,https://hail.is,https://github.com/hail-is/hail/pull/12151,1,['depend'],['dependabot']
Integrability,"QA/pylint/commit/84d22cf24202bf6006fc179541e1853d145d33e0""><code>84d22cf</code></a> [refactor] Create a file for the PassChecker in pylint.checker.base</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/977b08d160e81aaecebf871d2b8ba2f9a96ef9d6""><code>977b08d</code></a> [refactor] Create files for comparison checker in pylint.checker.base</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/ddfca0ca884d677e4eb0e6f53553b16e7a503157""><code>ddfca0c</code></a> [refactor] Create a file for _BasicChecker in pylint.checkers</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/be4699399904654ef4107a228817b4ef176d8999""><code>be46993</code></a> [refactor] Create a package in order to be able to burst base.py</li>; <li>Additional commits viewable in <a href=""https://github.com/PyCQA/pylint/compare/v2.12.2...v2.13.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pylint&package-manager=pip&previous-version=2.12.2&new-version=2.13.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` wi",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11674:5579,depend,dependency-name,5579,https://hail.is,https://github.com/hail-is/hail/pull/11674,1,['depend'],['dependency-name']
Integrability,"QA/pylint/commit/8e05ff6acf30deae5d83ea3847ec47ed0bf049a4""><code>8e05ff6</code></a> Fix a crash in the <code>modified-iterating-dict</code> checker involving instance attri...</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/9b359ad676dff97a35321976c19ca0f6c4fc44ad""><code>9b359ad</code></a> Fix <code>unhashable-member</code> crash when <code>lambda</code> used as a dict key (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/7454"">#7454</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/5716ad10104a9553ef9d64404b044c04947889b2""><code>5716ad1</code></a> Bump pylint to 2.15.2, update changelog</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/49b5d5dae6cc49d0572ffa35ae07f46ddc85fa61""><code>49b5d5d</code></a> Upgrade astroid version following 2.12.9 release</li>; <li>Additional commits viewable in <a href=""https://github.com/PyCQA/pylint/compare/v2.13.5...v2.15.3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pylint&package-manager=pip&previous-version=2.13.5&new-version=2.15.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` w",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12240:2503,Depend,Dependabot,2503,https://hail.is,https://github.com/hail-is/hail/pull/12240,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"QA/pylint/issues/6048"">#6048</a></p>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/PyCQA/pylint/commit/14ae9e8985a70af1b04aa996c04a1a8c3fa8f463""><code>14ae9e8</code></a> Bump pylint to 2.13.4, update changelog</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/9009189c06dd326b7a4f5b9911d0246976f64509""><code>9009189</code></a> Fix crash in <code>super-init-not-called</code> checker (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6043"">#6043</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/881262641ee1ca6fd6704b66b2b4ae37597e8fef""><code>8812626</code></a> Remove assumption of direct parentage in <code>used-before-assignment</code> homonym han...</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/5ea03af1268ae4776e8ddd9dc55e14f465710288""><code>5ea03af</code></a> Fix false positive for the <code>unnecessary-ellipsis</code> checker (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6039"">#6039</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/8b2059047d273ddea0884524ea3c5b99e3d0f59c""><code>8b20590</code></a> Fix crash for <code>unneccessary-ellipsis</code> checker (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6038"">#6038</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/4966c5bdd97c2996d65d7d1e1ec0dbbf647bd9a5""><code>4966c5b</code></a> Include <code>testing_pylintrc</code> in source and wheel distributions (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/6029"">#6029</a>)</li>; <li>See full diff in <a href=""https://github.com/PyCQA/pylint/compare/v2.13.3...v2.13.4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pylint&package-manager=pip&previous-version=2.13.3&new-version=2.13.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11723:2418,depend,dependabot,2418,https://hail.is,https://github.com/hail-is/hail/pull/11723,1,['depend'],['dependabot']
Integrability,"QA/revert-1041</li>; <li><a href=""https://github.com/PyCQA/pycodestyle/commit/c14bd2aac8e370bc84048a97f17a1ed906523bf9""><code>c14bd2a</code></a> Revert &quot;Merge pull request <a href=""https://github-redirect.dependabot.com/PyCQA/pycodestyle/issues/1041"">#1041</a> from asfaltboy/issue-830-e721-types-regex-in...</li>; <li>Additional commits viewable in <a href=""https://github.com/PyCQA/pycodestyle/compare/2.8.0...2.9.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pycodestyle&package-manager=pip&previous-version=2.8.0&new-version=2.9.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12476:4233,depend,dependabot-automerge-start,4233,https://hail.is,https://github.com/hail-is/hail/pull/12476,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"QL example from README</li>; <li>Additional commits viewable in <a href=""https://github.com/python-parsy/parsy/compare/v1.1.0...v1.4.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=parsy&package-manager=pip&previous-version=1.1.0&new-version=1.4.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12007:3881,Depend,Dependabot,3881,https://hail.is,https://github.com/hail-is/hail/pull/12007,17,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"Quality of life improvement, wrapper around saving an ndarray and loading through numpy. Most changes are in the tests which previously could only extract elements from ndarrays to assert the transformation worked.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6020:29,wrap,wrapper,29,https://hail.is,https://github.com/hail-is/hail/pull/6020,1,['wrap'],['wrapper']
Integrability,RR: https://github.com/hail-is/hail/issues/13045; RR: https://github.com/hail-is/hail/issues/13046 ; Support symmetric comparison of structs and struct expressions.; Provide better error messages when attempting to construct literals from expressions with free variables.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13226:187,message,messages,187,https://hail.is,https://github.com/hail-is/hail/pull/13226,1,['message'],['messages']
Integrability,"Rather than letting Breeze throw a SingularMatrixException, we should check for dependence and give an informative error message. The most common mistakes leading to dependence are accidentally including the same covariate twice (identical columns) or encoding a categorical variable with n categories using n rather than n - 1 covariates (since the model has an intercept term, this creates linear relation. We might also consider automating this encoding).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1156:80,depend,dependence,80,https://hail.is,https://github.com/hail-is/hail/issues/1156,3,"['depend', 'message']","['dependence', 'message']"
Integrability,"Re: this interface:; ```scala; def apply(i: Int): Option[Int] = {; setGenotype(i); if (hasGT) Some(getGT) else None; }; ```; It's entirely for performance reasons. We never want to allocate or process `Option`s anywhere, and there's some overhead we can avoid with calling `setGenotype(i)` twice if we use two methods for `hasGtIdx(i: Int): Boolean ` and `getGtIdx(I: Int): Int`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2368#issuecomment-340901365:9,interface,interface,9,https://hail.is,https://github.com/hail-is/hail/pull/2368#issuecomment-340901365,1,['interface'],['interface']
Integrability,Readable error messages for command-line filtering,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/84:15,message,messages,15,https://hail.is,https://github.com/hail-is/hail/issues/84,1,['message'],['messages']
Integrability,"Reading function/contexts from GCS on query workers can contribute a significant portion of the runtime for small jobs. For a simple query like `hl.utils.range_table(10).collect()`, the jobs in the batch can range in time from 5-9 seconds depending on GCS latency. This builds on #9484 to add write-through capability to `memory` and a `ServiceCacheableFS` in Scala. The cacheable FS reads/writes through `memory` and falls back to GCS, so in the good path the ServiceBackend writes the compiled function and contexts to `memory`, workers read inputs and write outputs exclusively from/to memory, from which the ServiceBackend reads the results. From small benchmarks in dev, this cuts down read times on the workers by ~30-40% compared to the worst case GCS latencies and roughly matches the current implementation in the best case. Writing the outputs is comparable to writing through an already warmed up GCS connection.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10315:239,depend,depending,239,https://hail.is,https://github.com/hail-is/hail/pull/10315,1,['depend'],['depending']
Integrability,"Ready for another look. I had to modify the classes some to make it work, particularly for getting the `type` out of the test. Now the type is with the Test rather than the TestResult, perhaps you see a better way?. Related notes, mostly relevant to future PRs once we have some feedback and a sense of performance:. I think LogisticRegressionNullFit should be a separate class, as it plays a conceptually and practically different role. I don't want to attach vectors of length nSamples (like mu) to each LogisticRegressionFit output, even though they would speed up the score test and first iteration of fitting per variant to not recompute them for every variant. I did put some of this efficiency in the score test (only computing the extra coordinate of score and row / column of fisher per variant). df would also then go away for LogisticRegressionFit, but I'd add the diagonal of its inverse for use in Wald (see below). The model fit function would then take a LogisticRegressionNullFit to use in the first iteration. The bigger future gains will come from not computing or inverting the Fisher matrix at all in the iteration, but rather using QR magic. val sqrtW = sqrt(mu :\* (1d - mu)); val QR = qr.reduced(X(::, _) :_ sqrtW); solve QR.R \* deltaB = QR.Q.t \* (y - mu) with R upper triangular (need to wrap lapack function). for Wald: return diagonal of inverse as well, namely diagonal of inv(R)^T \* inv(R), rather than inverting fisher again. for Score, this version of this may be faster:; val sqrtW = sqrt(mu :\* (1d - mu)); val Qty0 = qr.reduced.justQ(X(::, _) :_ sqrtW).t \* ((y - mu) :/ sqrtW); val chi2 = Qty0 dot Qty0. for Firth, modify score using:; val QQ = QR.Q :\* QR.Q; val h = sum(QQ(*, ::))",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/585#issuecomment-241153168:1314,wrap,wrap,1314,https://hail.is,https://github.com/hail-is/hail/pull/585#issuecomment-241153168,2,['wrap'],['wrap']
Integrability,"Ready to look at. . Abstracts file system functionality. We no longer pass around a Hadoop Configuration w/ implicit methods defined in RichHadoopConfiguration. Instead we define an abstract FS class (could be a trait as well) to serve as our file system interface, and provide one Hadoop implementation to maintain existing functionality. The PR has many lines, but should hopefully be relatively easy to follow; mostly involves renaming. . cc @cseed , thanks @tpoterba",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6083:255,interface,interface,255,https://hail.is,https://github.com/hail-is/hail/pull/6083,1,['interface'],['interface']
Integrability,"Reassigned to Patrick since Arcturus is OOO. The primary concern Arcturus had is that I've called aggregator functions in my Python implementation which need to be consistently agg/scan depending on whether `hardy_weinberg_test` is called as an agg or scan. I'm now convinced we get this for free. The way it works is that a global AggFunc singleton object contains a flag `_as_scan`, which is essentially set in a context manager whenever a function is called as `hl.scan`. This means that if I call `agg.filter` inside `hardy_weinberg_test`, it will look at the AggFunc, which properly has the flag set. It would be incorrect to call `hl.scan.xxx` inside a function in the agg module, but it's perfectly correct to call `hl.agg.xxx`, since the outer context is already managed properly.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6816#issuecomment-519535998:186,depend,depending,186,https://hail.is,https://github.com/hail-is/hail/pull/6816#issuecomment-519535998,1,['depend'],['depending']
Integrability,"Rebased, should be ready for a look. I included the compile the decoder once change in this PR. I left in the entry and row field arguments so as not to break the interface, but we can reasonably delete those now that it is playing nicely with the field pruner.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3948#issuecomment-405962693:163,interface,interface,163,https://hail.is,https://github.com/hail-is/hail/pull/3948#issuecomment-405962693,1,['interface'],['interface']
Integrability,"Records in the job_group_inst_coll_cancellable_resources table are dead once a; job group completes. We already compact records when a job group is cancelled. ; We are yet to do this for finished job groups. See the linked issue for a more ; detailed motivation. This change adds two background tasks:; 1. finds uncompacted groups of records for finished job groups and; compacts them by summing across the token field.; 2. finds compacted records for finished job groups and deletes them if; all associated resources are 0. The results of both tasks converge to a fixed point where the only remaining; records are for those jobs groups that are unfinished, cancelled or have; resources outstanding. I've taken care to optimise the underlying SQL queries as best as I can. Both; make heavy use of lateral joins to avoid explodes - the natural implementation; of both are prohibitively expensive. I've tested these tasks in a dev deploy where I created a number of batches and; observed that records from this table have indeed been compacted and destroyed; on completion. It's not immediately obvious to me how to automate testing for ; these. AFAICT, we lack any automated integration testing for these background ; tasks. Resolves: #14623",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14645:1174,integrat,integration,1174,https://hail.is,https://github.com/hail-is/hail/pull/14645,1,['integrat'],['integration']
Integrability,Refactor SBaseStruct.isFieldMissing and dependent methods to `CodeBuilder => Value` style.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10893:40,depend,dependent,40,https://hail.is,https://github.com/hail-is/hail/pull/10893,1,['depend'],['dependent']
Integrability,"Refactoring RVD interface, pt. 1",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4392:16,interface,interface,16,https://hail.is,https://github.com/hail-is/hail/pull/4392,1,['interface'],['interface']
Integrability,"Refactoring RVD interface, pt. 2",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4395:16,interface,interface,16,https://hail.is,https://github.com/hail-is/hail/pull/4395,1,['interface'],['interface']
Integrability,"Refactoring RVD interface, pt. 3",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4398:16,interface,interface,16,https://hail.is,https://github.com/hail-is/hail/pull/4398,1,['interface'],['interface']
Integrability,"Refactoring RVD interface, pt. 4",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4407:16,interface,interface,16,https://hail.is,https://github.com/hail-is/hail/pull/4407,1,['interface'],['interface']
Integrability,"Refactoring RVD interface, pt. 5",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4409:16,interface,interface,16,https://hail.is,https://github.com/hail-is/hail/pull/4409,1,['interface'],['interface']
Integrability,"Refactoring RVD interface, pt. 6",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4412:16,interface,interface,16,https://hail.is,https://github.com/hail-is/hail/pull/4412,1,['interface'],['interface']
Integrability,"Refer to python interface, not CLI",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2075:16,interface,interface,16,https://hail.is,https://github.com/hail-is/hail/pull/2075,1,['interface'],['interface']
Integrability,Reference Genome #4: Python interfaces,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2090:28,interface,interfaces,28,https://hail.is,https://github.com/hail-is/hail/pull/2090,1,['interface'],['interfaces']
Integrability,ReferenceGenome-dependent constructors in the function registry,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3556:16,depend,dependent,16,https://hail.is,https://github.com/hail-is/hail/pull/3556,1,['depend'],['dependent']
Integrability,"Regarding SSR-only mode. This is the default behavior. SSR is mostly a function of routing. If we allow the client to handle routes, we save the roundtrip in reconciling current app state (current DOM) with the next state (next page's DOM). To ""enable"" this functionality, instead of using `<Link>` use `<a>`. Nextjs has excellent documentation and a responsive maintainer base: https://github.com/zeit/next.js/issues/575",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931#issuecomment-454796376:83,rout,routing,83,https://hail.is,https://github.com/hail-is/hail/pull/4931#issuecomment-454796376,4,['rout'],"['routes', 'routing']"
Integrability,"Regarding the `pyspark` issue, it looks like you have to use `--properties-file` and then put that comma-sepearted list as a newline-separated list in a file. That error message is pyspark's rather terrible way of telling you that it doesn't support a `--properties` option. Regarding the old version of VDS, the `master` branch of hail is now an unstable development branch. If you want a consistent user experience with backwards compatible interfaces, please check out and exclusively use the `0.1` branch. Tim discusses the wider change [here](http://discuss.hail.is/t/deployment-changes-branching-off-for-faster-development/261/1). The VDS format will likely change on the scale of days on the `master` branch. Regarding the `hail/scripts` folder, that is a repository of scripts that our build system uses as templates to create a pre-compiled, ready-to-go distribution that only requires a Spark installation. These distributions are available from the Google Storage API at gs://hail-common/distributions. If you're building from source, I recommend following exactly the steps listed [here](https://hail.is/docs/stable/getting_started.html#building-hail-from-source) so as to avoid any future hiccups. NB: the steps for [Running Hail Locally](https://hail.is/docs/stable/getting_started.html#running-hail-locally) are for using the pre-compiled distribution, not for the result of building hail directly from source.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2062#issuecomment-320242551:170,message,message,170,https://hail.is,https://github.com/hail-is/hail/issues/2062#issuecomment-320242551,4,"['interface', 'message']","['interfaces', 'message']"
Integrability,"Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/sphinx-doc/sphinx/releases"">sphinx's releases</a>.</em></p>; <blockquote>; <h2>v4.4.0</h2>; <p>Changelog: <a href=""https://www.sphinx-doc.org/en/master/changes.html"">https://www.sphinx-doc.org/en/master/changes.html</a></p>; <h2>v4.3.1</h2>; <p>No release notes provided.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/sphinx-doc/sphinx/blob/4.x/CHANGES"">sphinx's changelog</a>.</em></p>; <blockquote>; <h1>Release 4.4.0 (released Jan 17, 2022)</h1>; <h2>Dependencies</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10007"">#10007</a>: Use <code>importlib_metadata</code> for python-3.9 or older</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10007"">#10007</a>: Drop <code>setuptools</code></li>; </ul>; <h2>Features added</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9075"">#9075</a>: autodoc: Add a config variable :confval:<code>autodoc_typehints_format</code>; to suppress the leading module names of typehints of function signatures (ex.; <code>io.StringIO</code> -&gt; <code>StringIO</code>)</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9831"">#9831</a>: Autosummary now documents only the members specified in a module's; <code>__all__</code> attribute if :confval:<code>autosummary_ignore_module_all</code> is set to; <code>False</code>. The default behaviour is unchanged. Autogen also now supports; this behavior with the <code>--respect-module-all</code> switch.</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9555"">#9555</a>: autosummary: Improve error messages on failure to load target object</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9800"">#9800</a>: extlinks: Emit warning if a hardcoded link is replaceab",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11522:1090,depend,dependabot,1090,https://hail.is,https://github.com/hail-is/hail/pull/11522,2,['depend'],['dependabot']
Integrability,"Rely on versions of math3 and lang3 pulled in by other dependencies,; e.g., Spark.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1088:55,depend,dependencies,55,https://hail.is,https://github.com/hail-is/hail/pull/1088,1,['depend'],['dependencies']
Integrability,"Remaining:; ### Non-staged code; PR here: https://github.com/hail-is/hail/pull/7880 . Effectively same interface, but with a fix for the override-def-with-optional-arguments issue. ### Remaining question:. edit: From our conversion this afternoon (1/14 @4pm), I think these questions are potentially answered: be consistent, may change. #### Fundamental Types; I've so far settled on copyFromType requiring that the sourceType is of the same type as the type the method is being called on (for instance if this isOfType PBaseStruct, then sourceType isOfType PBaseStruct), but only checks the elements, fields' fundamentalTypes. This may be too loose: I do not fully understand the architecture of fundamentalTypes and so want to clarify this point. #### Top-level non-missing semantics; For non-collection types (those that don't have nested fields), I expect that the function has an address pointing to data. So, for instance, in `val ptyp =PArray(PInt32())`, I expect `ptyp.copyFromType(...)` to get an address pointing to data. The inspiration from this came from RVB, which requires the same (first item in stack can't be null, but the nth-1 item can be null). So it is the responsibility of collection types to check `is*Missing`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7639:103,interface,interface,103,https://hail.is,https://github.com/hail-is/hail/pull/7639,1,['interface'],['interface']
Integrability,"Remove AST hierarchy, FunctionRegistry, AST parser, dependencies (tests) and any other dead code I could find. > 4 additions and 6,710 deletions. Aw, yiss. Full disclosure: this deletes some tests (SKAT, PCRelate, etc.) that currently have no corresponding tests in Python. My plan is to do a ""test audit"" and assign out tests to make sure we have a complete set of tests for the current functionality (including stuff that was deleted here and things that are simply missing tests, e.g. the MatrixIR parser, some IR nodes, etc.)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3990:52,depend,dependencies,52,https://hail.is,https://github.com/hail-is/hail/pull/3990,1,['depend'],['dependencies']
Integrability,Remove Java 8 dependency.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/512:14,depend,dependency,14,https://hail.is,https://github.com/hail-is/hail/pull/512,1,['depend'],['dependency']
Integrability,Remove Option from expr interfaces.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1428:24,interface,interfaces,24,https://hail.is,https://github.com/hail-is/hail/pull/1428,1,['interface'],['interfaces']
Integrability,Remove dependence on api1 in api2 (except for HailContext).,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2824:7,depend,dependence,7,https://hail.is,https://github.com/hail-is/hail/pull/2824,1,['depend'],['dependence']
Integrability,Remove dependence on tag dk-test and zone us-central1-a,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4994:7,depend,dependence,7,https://hail.is,https://github.com/hail-is/hail/pull/4994,2,['depend'],['dependence']
Integrability,Remove jcenter dependency,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11218:15,depend,dependency,15,https://hail.is,https://github.com/hail-is/hail/pull/11218,1,['depend'],['dependency']
Integrability,"Remove space in ""Hail Context has already been created"", or make context lowercase to be consistent with other messages.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1523#issuecomment-285818370:111,message,messages,111,https://hail.is,https://github.com/hail-is/hail/pull/1523#issuecomment-285818370,1,['message'],['messages']
Integrability,Remove the dependency of testCppCodegen from test,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4637:11,depend,dependency,11,https://hail.is,https://github.com/hail-is/hail/pull/4637,1,['depend'],['dependency']
Integrability,"Removed GenotypeStream.; Removed isLinearScale from VSM.; Removed write_partitioning.; {Variant, Sample}QC work over GDS. Depends on https://github.com/hail-is/hail/pull/2039",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2047:122,Depend,Depends,122,https://hail.is,https://github.com/hail-is/hail/pull/2047,1,['Depend'],['Depends']
Integrability,"Removed id from anchor tags. Unneeded (all anchor tags should have same style, or determined by nesting level in menu, and now not used to make active links), less for Kumar to remember to do when adding pages. Also removed cpage == """" check. By RFC2616, cannot have empty pathname; if none is provided ""/"" is defaulted to. https://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html. ""The most common form of Request-URI is that used to identify a resource on an origin server or gateway. In this case the absolute path of the URI MUST be transmitted (see section 3.2.1, abs_path) as the Request-URI, and the network location of the URI (authority) MUST be transmitted in a Host header field."". and . ""The absoluteURI form is REQUIRED when the request is being made to a proxy. "". Also verified in chrome/safari/edge",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8476:343,Protocol,Protocols,343,https://hail.is,https://github.com/hail-is/hail/pull/8476,1,['Protocol'],['Protocols']
Integrability,Removed unused routines on VariantDatasetFunctions.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2339:15,rout,routines,15,https://hail.is,https://github.com/hail-is/hail/pull/2339,1,['rout'],['routines']
Integrability,Removed unused routines.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2338:15,rout,routines,15,https://hail.is,https://github.com/hail-is/hail/pull/2338,1,['rout'],['routines']
Integrability,Replace with ToArray(MakeStream(...)); Keep MakeArray ctor for compatibility; FIXME ToArray memoization rule isn't complete; FIXME? hack to make ArrayZip of MakeStreams work; FIXME MakeStream needs to get wrapped,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8148:205,wrap,wrapped,205,https://hail.is,https://github.com/hail-is/hail/pull/8148,1,['wrap'],['wrapped']
Integrability,Require / assert statements should have messages,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/366:40,message,messages,40,https://hail.is,https://github.com/hail-is/hail/issues/366,1,['message'],['messages']
Integrability,"Resolves #10747. I sshed into a VM and tried to do a clean install based on the issue raised above. As noted there, lz4 was missing from our cluster install docs. I also noticed `pip` returns a nonzero exit code if it tries to install something but doesn't find it, so I added some `|| true` to prevent a confusing error message. I also updated our examples to use Spark 3 by default.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10756:321,message,message,321,https://hail.is,https://github.com/hail-is/hail/pull/10756,1,['message'],['message']
Integrability,Resolves #1887: Fix LD prune interface,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2150:29,interface,interface,29,https://hail.is,https://github.com/hail-is/hail/pull/2150,1,['interface'],['interface']
Integrability,"Response:. 1. `simdpp/simd.h`, I changed to a user dependency *and* changed the makefile to grab system dependencies, I agree this seems like a good idea (but I'm not sure, so we'll try it and find out!); 2. `mkdir -p`, I changed them all to `@`, but can `mkdir -p` fail (except for, say, filesystem being full)?; 3. `.DEFAULT_GOAL` good catch, I think we don't want `.DEFAULT` at all, I've removed it",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5331#issuecomment-464057989:51,depend,dependency,51,https://hail.is,https://github.com/hail-is/hail/pull/5331#issuecomment-464057989,2,['depend'],"['dependencies', 'dependency']"
Integrability,"Revert ""disable tutorials that depend on movie lens""",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5653:31,depend,depend,31,https://hail.is,https://github.com/hail-is/hail/pull/5653,1,['depend'],['depend']
Integrability,"Reverted the interface for `select`, `drop`, and `key_by` to requiring a str or list of str rather than varargs. This is because having default values specified by a kwarg was interacting poorly with the varargs. Python3 supports this better. https://stackoverflow.com/questions/13821877/function-call-with-named-unnamed-and-variable-arguments-in-python",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2279#issuecomment-334795157:13,interface,interface,13,https://hail.is,https://github.com/hail-is/hail/pull/2279#issuecomment-334795157,1,['interface'],['interface']
Integrability,Reworked logging to route log output through Python stderr,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2063:20,rout,route,20,https://hail.is,https://github.com/hail-is/hail/pull/2063,1,['rout'],['route']
Integrability,Rewrite the staged aggregator interface to:; - allow primitive values in aggregator without associated region; - create Scala Region instance once and reuse by setting different underlying native Region object to avoid overhead of object creation. Also includes some interface changes to AggregatorState (formerly RVAState) to clean up the region dependencies.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6652:30,interface,interface,30,https://hail.is,https://github.com/hail-is/hail/pull/6652,3,"['depend', 'interface']","['dependencies', 'interface']"
Integrability,Right now dependencies to include the in shadowJar are managed by hand and it is incredibly error prone. There has to be a better way to do this.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/577:10,depend,dependencies,10,https://hail.is,https://github.com/hail-is/hail/issues/577,1,['depend'],['dependencies']
Integrability,"Right now the Grafana is exposed as a k8s service speaking http with only the grafana auth. This puts an nginx sidecar in front of Grafana to bring TLS all the way through the the Grafana pod and perform dev authentication. This required adding an api endpoint to auth that can verify a connection based on the session and not an Authorization header. Other services like `router-resolver` have gotten away with not having this since they construct the Authorization header in python before hitting the `userinfo` endpoint, but this seems like a straightforward addition that will make it easier for internal authentication such as this case. This does another deviant thing which is using a `runImage` step to template the nginx config instead of templating inside the container at container start time (like router and site currently do). It is a little janky, because there are essentially two jinja passes, one in CI to render the shell script for the job, and then the jinja line in the job itself to render the nginx config. But this looks to be the most straightforward way I could figure out without adding another `build.py` Step type and even in that case it would have to be some sort of no-op job.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10139:373,rout,router-resolver,373,https://hail.is,https://github.com/hail-is/hail/pull/10139,2,['rout'],"['router', 'router-resolver']"
Integrability,Route JVM output into Python process so Jupyter works,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1809:0,Rout,Route,0,https://hail.is,https://github.com/hail-is/hail/issues/1809,1,['Rout'],['Route']
Integrability,Router service,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5867:0,Rout,Router,0,https://hail.is,https://github.com/hail-is/hail/pull/5867,1,['Rout'],['Router']
Integrability,"Rs into one and made major changes, so this needs a fresh look. Some high level direction:. - RegionValueAggregator is an interface that doesn't take `Any` as the seqOp argument. All of them have methods that can be called directly with the right input type. I emit code to call such methods. - TransformedRegionValueAggregator is just a little shim class that lets me override the seqOp of another aggregator with an AsmFunction4 (the result of compiling). - ZippedRegionValueAggregator just puts a bunch of RegionValueAggregators together (just foreach on the child aggregators) and puts all their results into an RV Struct. This RV Struct is referenced in the non-aggregating IR code (I've been calling the fragment that remains after aggs are removed ""stage0"" and calling aggregation ""stage1""). Passing all the aggregations directly as arguments to stage0 seems hard/impossible because the number of aggregations isn't known at scala-compile-time, but we stitch together the aggregations and the stage0 compiled IR in scala. - I added 4 IRs: AggIn (this is `gs`), AggMap, AggFilter, AggFlatMap, AggSum. I don't quite know how to add more aggregators. I think I will create new IRs for each one. Or maybe I can get a better interface. Comments welcome. - `compileAgg2` is a CPS-style compiler that lays out straight-line code that corresponds to aggregation. - The interface to generated aggregations isn't very nice right now. The user passes in a struct that contains the element and the scope values. When running an aggregator, the element is extracted first and then passed around (without the rest of the scope). References to the scope become `GetField` IRs that find the appropriate field in the argument. Using this is a bit hacky because we should mutate the fields of the scope struct as we loop over `gs` (e.g. `sa`). However, this is essentially what we do now (EvalContext is basically the scope struct), so I'm not so bothered by it. My tests are kind of hard to follow as a result.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2555:1274,interface,interface,1274,https://hail.is,https://github.com/hail-is/hail/pull/2555,2,['interface'],['interface']
Integrability,"Rule Lock for Recycle Bin, which allows you to lock retention rules so that they can no longer be modified or deleted.</li>; </ul>; <h1>1.26.15</h1>; <ul>; <li>bugfix:Endpoints: [<code>botocore</code>] Resolve endpoint with default partition when no region is set</li>; <li>bugfix:s3: [<code>botocore</code>] fixes missing x-amz-content-sha256 header for s3 object lambda</li>; <li>api-change:<code>appflow</code>: [<code>botocore</code>] Adding support for Amazon AppFlow to transfer the data to Amazon Redshift databases through Amazon Redshift Data API service. This feature will support the Redshift destination connector on both public and private accessible Amazon Redshift Clusters and Amazon Redshift Serverless.</li>; <li>api-change:<code>kinesisanalyticsv2</code>: [<code>botocore</code>] Support for Apache Flink 1.15 in Kinesis Data Analytics.</li>; </ul>; <h1>1.26.14</h1>; <ul>; <li>api-change:<code>route53</code>: [<code>botocore</code>] Amazon Route 53 now supports the Asia Pacific (Hyderabad) Region (ap-south-2) for latency records, geoproximity records, and private DNS for Amazon VPCs in that region.</li>; </ul>; <h1>1.26.13</h1>; <ul>; <li>api-change:<code>appflow</code>: [<code>botocore</code>] AppFlow provides a new API called UpdateConnectorRegistration to update a custom connector that customers have previously registered. With this API, customers no longer need to unregister and then register a connector to make an update.</li>; <li>api-change:<code>auditmanager</code>: [<code>botocore</code>] This release introduces a new feature for Audit Manager: Evidence finder. You can now use evidence finder to quickly query your evidence, and add the matching evidence results to an assessment report.</li>; <li>api-change:<code>chime-sdk-voice</code>: [<code>botocore</code>] Amazon Chime Voice Connector, Voice Connector Group and PSTN Audio Service APIs are now available in the Amazon Chime SDK Voice namespace. See <a href=""https://docs.aws.amazon.com/chime-sdk/late",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12502:1545,Rout,Route,1545,https://hail.is,https://github.com/hail-is/hail/pull/12502,2,['Rout'],['Route']
Integrability,"Running on Apache Spark version 2.2.0; SparkUI available at http://10.48.225.55:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version devel-63d60cc; NOTE: This is a beta version. Interfaces may change; during the beta period. We also recommend pulling; the latest changes weekly.; Read in PASS SNVs; Filtering Common Variants; [Stage 0:==================================================>(96600 + 1) / 96601]2018-04-27 20:54:43 Hail: INFO: wrote 11341822 items in 96601 partitions; Pruning LD Variants; [Stage 1:==================================================>(96598 + 3) / 96601]2018-04-27 21:19:04 Hail: INFO: Running LD prune with nSamples=4795, nVariants=11341822, nPartitions=96601, and maxQueueSize=429841.; [Stage 2:=========================================> (79823 + 18) / 96601]java.lang.OutOfMemoryError: Java heap spaceop""; at java.util.Arrays.copyOf(Arrays.java:3181); at java.util.ArrayList.toArray(ArrayList.java:376); at java.util.Collections$SynchronizedCollection.toArray(Collections.java:2024); at java.util.ArrayList.<init>(ArrayList.java:177); at org.apache.spark.util.CollectionAccumulator.value(AccumulatorV2.scala:470); at org.apache.spark.util.CollectionAccumulator.value(AccumulatorV2.scala:444); at org.apache.spark.scheduler.DAGScheduler$$anonfun$updateAccumulators$1.apply(DAGScheduler.scala:1103); at org.apache.spark.scheduler.DAGScheduler$$anonfun$updateAccumulators$1.apply(DAGScheduler.scala:1092); at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59); at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48); at org.apache.spark.scheduler.DAGScheduler.updateAccumulators(DAGScheduler.scala:1092); at org.apache.spark.scheduler.DAGScheduler.handleTaskCompletion(DAGScheduler.scala:1168); at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1711); at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1669); at org.a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3463:3167,Synchroniz,SynchronizedCollection,3167,https://hail.is,https://github.com/hail-is/hail/issues/3463,1,['Synchroniz'],['SynchronizedCollection']
Integrability,"Running on Apache Spark version 2.3.0; Hail version 0.2.12-9409c0635781. The follow error occurs when reading a matrix table. This code worked with Hail v2.8. ```; Traceback (most recent call last):; File ""/restricted/projectnb/ukbiobank/ad/analysis/ad.v1/ad_parent_linreg_all_races_one_over_60.py"", line 70, in <module>; mt=hl.read_matrix_table(mt_fn); File ""<decorator-gen-1219>"", line 2, in read_matrix_table; File ""/share/pkg.7/hail/0.2.12/install/hail/hail/build/distributions/hail-python.zip/hail/typecheck/check.py"", line 561, in wrapper; File ""/share/pkg.7/hail/0.2.12/install/hail/hail/build/distributions/hail-python.zip/hail/methods/impex.py"", line 1704, in read_matrix_table; File ""/share/pkg.7/hail/0.2.12/install/hail/hail/build/distributions/hail-python.zip/hail/matrixtable.py"", line 558, in __init__; File ""/share/pkg.7/hail/0.2.12/install/hail/hail/build/distributions/hail-python.zip/hail/ir/base_ir.py"", line 158, in typ; File ""/share/pkg.7/hail/0.2.12/install/hail/hail/build/distributions/hail-python.zip/hail/ir/matrix_ir.py"", line 40, in _compute_type; File ""/share/pkg.7/hail/0.2.12/install/hail/hail/build/distributions/hail-python.zip/hail/backend/backend.py"", line 104, in matrix_type; File ""/share/pkg.7/hail/0.2.12/install/hail/hail/build/distributions/hail-python.zip/hail/backend/backend.py"", line 87, in _to_java_ir; File ""/share/pkg.7/hail/0.2.12/install/hail/hail/build/distributions/hail-python.zip/hail/ir/base_ir.py"", line 163, in parse; File ""/share/pkg/spark/2.3.0/install/python/lib/py4j-0.10.6-src.zip/py4j/java_gateway.py"", line 1160, in __call__; File ""/share/pkg.7/hail/0.2.12/install/hail/hail/build/distributions/hail-python.zip/hail/utils/java.py"", line 227, in deco; hail.utils.java.FatalError: MappingException: Parsed JSON values do not match with class constructor; args=; arg types=; constructor=public is.hail.variant.AbstractMatrixTableSpec(). Java stack trace:; org.json4s.package$MappingException: Parsed JSON values do not match with class con",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5744:537,wrap,wrapper,537,https://hail.is,https://github.com/hail-is/hail/issues/5744,1,['wrap'],['wrapper']
Integrability,RuntimeValidationAction.java:35); at org.gradle.launcher.cli.JavaRuntimeValidationAction.execute(JavaRuntimeValidationAction.java:24); at org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:33); at org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:22); at org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:205); at org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:169); at org.gradle.launcher.Main.doAction(Main.java:33); at org.gradle.launcher.bootstrap.EntryPoint.run(EntryPoint.java:45); at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:55); at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:36); at org.gradle.launcher.GradleMain.main(GradleMain.java:23); at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:30); at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:129); at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); Caused by: org.gradle.process.internal.ExecException: Process 'command 'make'' finished with non-zero exit value 2; at org.gradle.process.internal.DefaultExecHandle$ExecResultImpl.assertNormalExitValue(DefaultExecHandle.java:367); at org.gradle.process.internal.DefaultExecAction.execute(DefaultExecAction.java:31); at org.gradle.api.tasks.AbstractExecTask.exec(AbstractExecTask.java:54); at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:75); at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.doExecute(AnnotationProcessingTaskFactory.java:228); at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:221); at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessin,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3705:7283,Wrap,WrapperExecutor,7283,https://hail.is,https://github.com/hail-is/hail/issues/3705,1,['Wrap'],['WrapperExecutor']
Integrability,"S</code> now prevents docstring prefixes from being; normalized as expected (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3168"">#3168</a>)</li>; <li>When using <code>--skip-magic-trailing-comma</code> or <code>-C</code>, trailing commas are stripped from; subscript expressions with more than 1 element (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3209"">#3209</a>)</li>; <li>Implicitly concatenated strings inside a list, set, or tuple are now wrapped inside; parentheses (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3162"">#3162</a>)</li>; <li>Fix a string merging/split issue when a comment is present in the middle of implicitly; concatenated strings on its own line (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3227"">#3227</a>)</li>; </ul>; <h3><em>Blackd</em></h3>; <ul>; <li><code>blackd</code> now supports enabling the preview style via the <code>X-Preview</code> header (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3217"">#3217</a>)</li>; </ul>; <h3>Configuration</h3>; <ul>; <li>Black now uses the presence of debug f-strings to detect target version (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3215"">#3215</a>)</li>; <li>Fix misdetection of project root and verbose logging of sources in cases involving; <code>--stdin-filename</code> (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3216"">#3216</a>)</li>; <li>Immediate <code>.gitignore</code> files in source directories given on the command line are now; also respected, previously only <code>.gitignore</code> files in the project root and; automatically discovered directories were respected (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3237"">#3237</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>Recommend using BlackConnect in IntelliJ IDEs (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3150"">#3150</a>)</li>; </ul>; <h3>Integrations</h3>; <!-- ra",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12174:7797,depend,dependabot,7797,https://hail.is,https://github.com/hail-is/hail/pull/12174,1,['depend'],['dependabot']
Integrability,"SE)</li>; <li>RFC7638: JSON Web Key (JWK) Thumbprint</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/lepture/authlib/commit/d8e428c9350c792fc3d25dbaaffa3bfefaabd8e3""><code>d8e428c</code></a> Version bump 0.15.5</li>; <li><a href=""https://github.com/lepture/authlib/commit/f24962835fd0725349cb1b368ee69ba0cc8670f9""><code>f249628</code></a> Add changelog</li>; <li><a href=""https://github.com/lepture/authlib/commit/38ac0d22837a2a5400205bdbd11bb63e5aa7660f""><code>38ac0d2</code></a> Improve rfc7523 parameters compatibility.</li>; <li><a href=""https://github.com/lepture/authlib/commit/e880f1640168683d2d568fd88d1dd0ec0b29f0a6""><code>e880f16</code></a> Rename parameters of InsufficientScopeError</li>; <li><a href=""https://github.com/lepture/authlib/commit/afaeaf98c88baa3ea2fa9f9ac3e65f9a55c8773f""><code>afaeaf9</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/lepture/authlib/issues/392"">#392</a> from minddistrict/allow-passing-in-additionl-jwt-headers</li>; <li><a href=""https://github.com/lepture/authlib/commit/38c6444bf4ae193c55c96a4b0d849ea9800d85f8""><code>38c6444</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/lepture/authlib/issues/333"">#333</a> from jeffsawatzky/maintain-0.15</li>; <li><a href=""https://github.com/lepture/authlib/commit/2ea533c4f658206ec0f09265bd3b3f0c48844667""><code>2ea533c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/lepture/authlib/issues/388"">#388</a> from minddistrict/backport-httpx-oauth2-client-fixes-...</li>; <li><a href=""https://github.com/lepture/authlib/commit/fca7f8523042cd9eadc68a1be091af9bc4ecab8b""><code>fca7f85</code></a> fix assertion client for httpx</li>; <li><a href=""https://github.com/lepture/authlib/commit/4d8a6ef7775dbe7033bb6d3efbc1919ff13579aa""><code>4d8a6ef</code></a> Merge pull request <a href=""https://github-redirect.depen",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11483:4717,depend,dependabot,4717,https://hail.is,https://github.com/hail-is/hail/pull/11483,1,['depend'],['dependabot']
Integrability,SONAnnotationImpex$.$anonfun$exportAnnotation$5(AnnotationImpex.scala:129); at is.hail.expr.JSONAnnotationImpex$.$anonfun$exportAnnotation$5$adapted(AnnotationImpex.scala:128); at scala.collection.generic.GenTraversableFactory.tabulate(GenTraversableFactory.scala:150); at is.hail.expr.JSONAnnotationImpex$.exportAnnotation(AnnotationImpex.scala:128); at is.hail.types.virtual.Type.toJSON(Type.scala:184); at is.hail.expr.JSONAnnotationImpex$.$anonfun$exportAnnotation$4(AnnotationImpex.scala:125); at is.hail.utils.Interval.toJSON(Interval.scala:103); at is.hail.expr.JSONAnnotationImpex$.exportAnnotation(AnnotationImpex.scala:125); at is.hail.expr.JSONAnnotationImpex$.$anonfun$exportAnnotation$1(AnnotationImpex.scala:113); at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:238); at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:36); at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:38); at scala.collection.TraversableLike.map(TraversableLike.scala:238); at scala.collection.TraversableLike.map$(TraversableLike.scala:231); at scala.collection.AbstractTraversable.map(Traversable.scala:108); at is.hail.expr.JSONAnnotationImpex$.exportAnnotation(AnnotationImpex.scala:113); at is.hail.expr.ir.Pretty.header(Pretty.scala:405); at is.hail.expr.ir.Pretty.pretty$1(Pretty.scala:463); at is.hail.expr.ir.Pretty.$anonfun$sexprStyle$4(Pretty.scala:453); at scala.collection.Iterator$$anon$10.next(Iterator.scala:459); at scala.collection.Iterator$ConcatIterator.next(Iterator.scala:230); at is.hail.utils.richUtils.RichIterator$$anon$3.next(RichIterator.scala:67); at is.hail.utils.prettyPrint.Doc$.advance$1(PrettyPrintWriter.scala:68); at is.hail.utils.prettyPrint.Doc$.render(PrettyPrintWriter.scala:139); at is.hail.utils.prettyPrint.Doc.render(PrettyPrintWriter.scala:163); at is.hail.utils.prettyPrint.Doc.render(PrettyPrintWriter.scala:167); at is.h,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13046:1576,Wrap,WrappedArray,1576,https://hail.is,https://github.com/hail-is/hail/issues/13046,1,['Wrap'],['WrappedArray']
Integrability,"SQL/PyMySQL/commit/5a02e5780f615ac7793373d63c407b979c33cd1c""><code>5a02e57</code></a> remove badges</li>; <li><a href=""https://github.com/PyMySQL/PyMySQL/commit/f65351b1bd6c02eab07f20cbedada6ebfbf6d56d""><code>f65351b</code></a> Do not create universal wheel</li>; <li><a href=""https://github.com/PyMySQL/PyMySQL/commit/6e5d5bd94af056c66a1ed05de754a83f8628faea""><code>6e5d5bd</code></a> v1.0.0</li>; <li>Additional commits viewable in <a href=""https://github.com/PyMySQL/PyMySQL/compare/v0.9.2...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pymysql&package-manager=pip&previous-version=0.9.2&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11595:5218,depend,dependabot,5218,https://hail.is,https://github.com/hail-is/hail/pull/11595,1,['depend'],['dependabot']
Integrability,"STER_NAME. Modify an existing Dataproc cluster. 'hailctl dataproc modify' works by calling 'gcloud dataproc clusters; update' and then updating the Hail version if '--update-hail-version' or '; --wheel' is specified. You can pass arguments to the 'update' command; with the option '--extra-gcloud-update-args'. The following 'gcloud dataproc clusters update' options may be useful:. --num-workers=NUM_WORKERS: New number of worker machines, minimum 2. --num-secondary-workers=NUM_SECONDARY_WORKERS: New number of secondary; (preemptible) worker machines. --graceful-decommission-timeout=GRACEFUL_DECOMMISSION_TIMEOUT: Graceful; decommissioning allows removing nodes from the cluster without; interrupting jobs in progress. Timeout specifies how long to wait for; jobs in progress to finish before forcefully removing nodes (and; potentially interrupting jobs). Timeout defaults to 0 if not set (for; forceful decommission), and the maximum allowed timeout is 1 day. At most one of the following may be set:. --expiration-time=EXPIRATION_TIME: The time when cluster will be auto-; deleted. --max-age=MAX_AGE: The lifespan of the cluster before it is auto-; deleted, such as '60m' or '1d'. --no-max-age: Cancel the cluster auto-deletion by maximum cluster age,; as configured by max-age or --expiration-time flags. At most one of the following may be set:. --max-idle=MAX_IDLE: The duration before cluster is auto-deleted; after last job finished, such as '60m' or '1d'. --no-max-idle: Cancel the cluster auto-deletion by cluster idle; duration (configured by --max-idle flag). See 'gcloud dataproc clusters update --help' for more information. Options:; --update-hail-version Update the version of hail running on; cluster to match the currently installed; version. --wheel TEXT New Hail installation.; --extra-gcloud-update-args TEXT; Extra arguments to pass to 'gcloud dataproc; clusters update'. The 'update' command is; only run if this option is specified. --help Show this message and exit.; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9842#issuecomment-767112772:3899,message,message,3899,https://hail.is,https://github.com/hail-is/hail/pull/9842#issuecomment-767112772,2,['message'],['message']
Integrability,"SaranBalaji90""><code>@​SaranBalaji90</code></a>) [SIG Node]</li>; <li>Custom Endpoints are now mirrored to EndpointSlices by a new EndpointSliceMirroring controller. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91637"">kubernetes/kubernetes#91637</a>, <a href=""https://github.com/robscott""><code>@​robscott</code></a>) [SIG API Machinery, Apps, Auth, Cloud Provider, Instrumentation, Network and Testing]</li>; <li>CustomResourceDefinitions added support for marking versions as deprecated by setting <code>spec.versions[*].deprecated</code> to <code>true</code>, and for optionally overriding the default deprecation warning with a <code>spec.versions[*].deprecationWarning</code> field. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92329"">kubernetes/kubernetes#92329</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG API Machinery]</li>; <li>EnvVarSource api doc bug fixes (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91194"">kubernetes/kubernetes#91194</a>, <a href=""https://github.com/wawa0210""><code>@​wawa0210</code></a>) [SIG Apps]</li>; <li>Fix bug in reflector that couldn't recover from &quot;Too large resource version&quot; errors (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92537"">kubernetes/kubernetes#92537</a>, <a href=""https://github.com/wojtek-t""><code>@​wojtek-t</code></a>) [SIG API Machinery]</li>; <li>Fixed: log timestamps now include trailing zeros to maintain a fixed width (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91207"">kubernetes/kubernetes#91207</a>, <a href=""https://github.com/iamchuckss""><code>@​iamchuckss</code></a>) [SIG Apps and Node]</li>; <li>Generic ephemeral volumes, a new alpha feature under the <code>GenericEphemeralVolume</code> feature gate, provide a more flexible alternative to <code>EmptyDir</code> volumes: as with <code>EmptyDir</code>, volumes are created and delet",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11462:6423,depend,dependabot,6423,https://hail.is,https://github.com/hail-is/hail/pull/11462,1,['depend'],['dependabot']
Integrability,"Script:; ```python3; #!/usr/bin/env python3; import hail as hl; hl.init(log='/dev/null'); mt = hl.import_vcf('src/test/resources/sample.vcf'); mt.filter_rows(mt.locus < hl.Locus('1', 1)).show(); ```. Output:; ```; 2019-06-24 19:12:05 WARN Utils:66 - Your hostname, wp086-661 resolves to a loopback address: 127.0.1.1; using 10.1.8.50 instead (on interface wlp2s0); 2019-06-24 19:12:05 WARN Utils:66 - Set SPARK_LOCAL_IP if you need to bind to another address; 2019-06-24 19:12:06 WARN NativeCodeLoader:62 - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; Running on Apache Spark version 2.4.0; SparkUI available at http://wp086-661.broadinstitute.org:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.16-e95038bbed35; LOGGING: writing to /dev/null; Traceback (most recent call last):; File ""/tmp/x"", line 4, in <module>; mt.filter_rows(mt.locus < hl.Locus('1', 1)).show(); File ""</home/BROAD.MIT.EDU/cvittal/.cache/hail-env/lib/python3.6/site-packages/decorator.py:decorator-gen-1000>"", line 2, in show; File ""/home/BROAD.MIT.EDU/cvittal/src/hail-alt/hail/python/hail/typecheck/check.py"", line 585, in wrapper; return __original_func(*args_, **kwargs_); File ""/home/BROAD.MIT.EDU/cvittal/src/hail-alt/hail/python/hail/matrixtable.py"", line 2569, in show; actual_n_cols = self.count_cols(); File ""</home/BROAD.MIT.EDU/cvittal/.cache/hail-env/lib/python3.6/site-packages/decorator.py:decorator-gen-994>"", line 2, in count_cols; File ""/home/BROAD.MIT.EDU/cvittal/src/hail-alt/hail/python/hail/typecheck/check.py"", line 585, in wrapper; return __original_func(*args_, **kwargs_); File ""/home/BROAD.MIT.EDU/cvittal/src/hail-alt/hail/python/hail/matrixtable.py"", line 2404, in count_cols; return Env.backend().execute(ir); File ""/home/BROAD.MIT.EDU/cvittal/src/hail-alt/hail/py",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6458:346,interface,interface,346,https://hail.is,https://github.com/hail-is/hail/issues/6458,1,['interface'],['interface']
Integrability,See discussion here: http://dev.hail.is/t/group-by-interface/111/6,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4022:51,interface,interface,51,https://hail.is,https://github.com/hail-is/hail/issues/4022,1,['interface'],['interface']
Integrability,"See each message below. ---. [[query/vds] Fix local_to_global with missing fill](https://github.com/hail-is/hail/pull/13325/commits/7d84189ca1a1b9460f4e0c96821cd43b8b0068fa) ; ; There was a logic error in constructFromIndicesUnsafe, if a missing; value was pushed, pushing a present value with the same index would not; clear the missing bit. ---. [[batch/test] Wait for job to be running in list_jobs_v2 test](https://github.com/hail-is/hail/pull/13325/commits/724da249255c06ea4ed1816704e4de51bd8f9b89). ---. [[qob] halve the number of active tests](https://github.com/hail-is/hail/pull/13325/commits/c2638702325526b29bebd416fceeedea52d42245). ---. [[batch] Turn off oms_agent in test and dev](https://github.com/hail-is/hail/pull/13325/commits/bbd65e4f66d41ef69c130091b0506087975c4851). ---",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13325:9,message,message,9,https://hail.is,https://github.com/hail-is/hail/pull/13325,1,['message'],['message']
Integrability,"See for example https://cloudlogging.app.goo.gl/ziaRD9HKxxca8Nd3A. in which ~15 MJCs have to retry because of `ServerDisconnectedError` or `TimeoutError`. With this PR, I think we would have seen just the three ""two errors observed"" warning messages. Here's a possible extension to this PR that fuses the thinking of both PRs (this one and #12505): use the total delay instead of `errors = 2`. We retry really quickly, so two errors could occur in ~500ms which really isn't enough time for batch driver to fix itself.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12712#issuecomment-1434824106:241,message,messages,241,https://hail.is,https://github.com/hail-is/hail/pull/12712#issuecomment-1434824106,1,['message'],['messages']
Integrability,See https://github.com/hail-is/hail/pull/14617. This change applies the same fix to the routing for the `ukbb-rg` subdomain.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14670:88,rout,routing,88,https://hail.is,https://github.com/hail-is/hail/pull/14670,1,['rout'],['routing']
Integrability,See: http://dev.hail.is/t/aggregator-interface/120,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4492#issuecomment-428398036:37,interface,interface,37,https://hail.is,https://github.com/hail-is/hail/issues/4492#issuecomment-428398036,1,['interface'],['interface']
Integrability,"Self-explanatory :). -------------------------------------------------------------------------------------------. ### Hail version:. ### What you did:. ### What went wrong (all error messages here, including the full java stack trace):",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3047:183,message,messages,183,https://hail.is,https://github.com/hail-is/hail/issues/3047,1,['message'],['messages']
Integrability,"Set(WrappedArray()); , Set( WrappedArray(); , WrappedArray(Map(null -> Map()))); , Set(); , Set( WrappedArray(Map(null -> null)); , WrappedArray(Map(null -> Map()))); , Set( WrappedArray(Map(null -> Map(WrappedArray(null) -> 1)), Map(null -> Map(WrappedArray(5) -> 2))); , WrappedArray(Map())); , Set(); , Set(); , Set(WrappedArray(); , WrappedArray(Map(null -> Map()))); , Set(); , Set( null; , WrappedArray()); , Set( WrappedArray(Map(null -> Map(WrappedArray(1) -> 19))); , WrappedArray(Map(null -> Map(WrappedArray(0) -> 2)), Map(null -> Map())); , WrappedArray(Map(null -> Map())); , WrappedArray(Map(null -> Map(WrappedArray(2) -> null)), Map(null -> Map(WrappedArray() -> 17)), Map(null -> Map(WrappedArray() -> 1)))); , Set(WrappedArray(Map(null -> Map(WrappedArray(null) -> 1)), Map(null -> Map(WrappedArray(2) -> 0, WrappedArray() -> null)), Map(), Map())); , Set(WrappedArray(Map(null -> Map()), Map(null -> Map()), Map(null -> Map(WrappedArray(0) -> 0)))); , Set( WrappedArray(); , WrappedArray(Map(null -> Map(WrappedArray(0) -> null)))); , Set(WrappedArray(Map())); , Set( WrappedArray(Map()); , WrappedArray(Map(null -> Map(WrappedArray() -> 0))); , WrappedArray(Map(null -> Map()))); , Set(); , Set( WrappedArray(); , WrappedArray(Map(null -> Map(WrappedArray(null) -> 2))); , WrappedArray(Map(null -> Map()))); , Set( WrappedArray(Map(null -> Map(WrappedArray() -> 0))); , WrappedArray(Map(), Map(null -> Map()), Map(), Map(null -> Map(WrappedArray(0) -> null)))); ); , Set(null); , WrappedArray( WrappedArray(null, [null,false,1], [null,true,6]); , WrappedArray(); , WrappedArray([null,false,0], [null,true,1]); , WrappedArray(); , null; , WrappedArray(); , null; , WrappedArray(null, [null,false,0], null); , WrappedArray(null, null, null, [null,false,null]); , WrappedArray(null, [null,true,null]); , WrappedArray([null,true,null]); , WrappedArray([null,true,1]); , WrappedArray([null,false,null], null, null); , WrappedArray([null,null,null])); , null; , 2147483647; , Map( Wrappe",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1902:2871,Wrap,WrappedArray,2871,https://hail.is,https://github.com/hail-is/hail/pull/1902,1,['Wrap'],['WrappedArray']
Integrability,"Set.** Just get an `elementIterator` from `PCanonicalArray` and use `loadElement`, etc. to populate the `Graph`. ```; In [1]: import hail as hl; ...: ht = hl.Table.parallelize([hl.Struct(i='A', j='B', kin=0.25), hl.Struct(i='A', j='C', kin=0.25), hl.Struct(i='D', j='E', kin=0.5)]); ...: hl.maximal_independent_set(ht.i, ht.j, False).collect(); ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); Cell In[1], line 3; 1 import hail as hl; 2 ht = hl.Table.parallelize([hl.Struct(i='A', j='B', kin=0.25), hl.Struct(i='A', j='C', kin=0.25), hl.Struct(i='D', j='E', kin=0.5)]); ----> 3 hl.maximal_independent_set(ht.i, ht.j, False).collect(). File <decorator-gen-1148>:2, in collect(self, _localize, _timed). File ~/miniconda3/lib/python3.10/site-packages/hail/typecheck/check.py:584, in _make_dec.<locals>.wrapper(__original_func, *args, **kwargs); 581 @decorator; 582 def wrapper(__original_func, *args, **kwargs):; 583 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 584 return __original_func(*args_, **kwargs_). File ~/miniconda3/lib/python3.10/site-packages/hail/table.py:2162, in Table.collect(self, _localize, _timed); 2160 e = construct_expr(rows_ir, hl.tarray(t.row.dtype)); 2161 if _localize:; -> 2162 return Env.backend().execute(e._ir, timed=_timed); 2163 else:; 2164 return e. File ~/miniconda3/lib/python3.10/site-packages/hail/backend/py4j_backend.py:82, in Py4JBackend.execute(self, ir, timed); 80 return (value, timings) if timed else value; 81 except FatalError as e:; ---> 82 raise e.maybe_user_error(ir) from None. File ~/miniconda3/lib/python3.10/site-packages/hail/backend/py4j_backend.py:76, in Py4JBackend.execute(self, ir, timed); 74 # print(self._hail_package.expr.ir.Pretty.apply(jir, True, -1)); 75 try:; ---> 76 result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); 77 (result, timings) = (result_tuple._1(), result_tuple._2()); 78 value = ir",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13633:1636,wrap,wrapper,1636,https://hail.is,https://github.com/hail-is/hail/issues/13633,2,['wrap'],['wrapper']
Integrability,"Shuffles have wide dependencies, and it appears that Spark does not enforce that the Nth partition of a shuffled RDD is computed on the same node as the Nth partition of its parent. To keep RDDs `Ordered`, we sometimes need to shuffle, even though the typical key doesn't move at all. It would likely provide a sizable performance gain to enforce that partitions stay on the same node after the shuffle: this way, network traffic (often the rate-limiting step) is kept to a minimum. To do this, we need to optionally override the `getPreferredLocations` function of the ShuffledRDD created in `OrderedRDD.apply` to provide the preferred locations of the parent RDD. This flag should be used in `splitmulti`. **NB:** it's possible this won't actually help much, since if there are 3 preferred hosts for the parent, we may only have a 1/3 chance of landing on the same one.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/723:19,depend,dependencies,19,https://hail.is,https://github.com/hail-is/hail/issues/723,1,['depend'],['dependencies']
Integrability,Significantly improve error messages for expr,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2659:28,message,messages,28,https://hail.is,https://github.com/hail-is/hail/pull/2659,1,['message'],['messages']
Integrability,"Simplified `NDArrayRef` considerably by switching to `CodeBuilder` interface, adding `EmitCode.mapN`, and adding `PNDArrayCode`. . Thanks @patrick-schultz for contributing code for `EmitCode.mapN`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8568:67,interface,interface,67,https://hail.is,https://github.com/hail-is/hail/pull/8568,1,['interface'],['interface']
Integrability,Simplified the dev deploy interface: just specify fully qualified branch (user/repo:branch) and a list of steps (instead of profile) which are transitively closed over dependencies. Pick up namespace from the user database.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6915:26,interface,interface,26,https://hail.is,https://github.com/hail-is/hail/pull/6915,2,"['depend', 'interface']","['dependencies', 'interface']"
Integrability,"Simply enables CORS from all domains. This would be insecure, but our endpoints are read-only operations on public GitHub resources, against a fixed list of users, there is no database to inject, and there are no cookies or local storage entries to steal. I think it's safe enough for the time being, but open to suggestions. Also expose /json endpoint to return all index.html data without rendering a page.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4945:188,inject,inject,188,https://hail.is,https://github.com/hail-is/hail/pull/4945,2,['inject'],['inject']
Integrability,"Since my interface package isn't ready for release yet, here's a reproducible example using just R and sparklyr, with a Hail jar somewhere. Again, this is happening on the Mac, sparklyr version 0.8.4.9004 (there is probably a newer one on CRAN, I doubt that it matters). ```; data(mtcars); hail_jar <- ""/path/to/your/hail-all-spark.jar""; classpath_vars <-; c(spark.driver.extraClassPath=paste(hail_jar, collapse=.Platform$path.sep),; spark.executor.extraClassPath=paste(basename(hail_jar),; collapse=.Platform$path.sep)); config <- list(sparklyr.jars.default=hail_jar,; sparklyr.shell.conf=paste0(names(classpath_vars), ""='"",; classpath_vars, ""'""),; spark.serializer=""org.apache.spark.serializer.KryoSerializer"",; spark.kryo.registrator=""is.hail.kryo.HailKryoRegistrator""); sc <- sparklyr::spark_connect(""local"", version=""2.2.0"", config=config); sdf <- sparklyr::spark_dataframe(dplyr::copy_to(sc, mtcars)); hc <- sparklyr::invoke_static(sc, ""is.hail.HailContext"", ""apply"",; sparklyr::spark_context(sc), ""Hail"", NULL,; ""local[*]"", ""hail.log"", TRUE, FALSE, 1L, 50L,; tempdir()); keys <- sparklyr:::invoke_static(sc, ""is.hail.utils"", ""arrayToArrayList"",; array(character(0L))); ht <- sparklyr::invoke_static(sc, ""is.hail.table.Table"", ""fromDF"", hc, sdf,; keys); sparklyr::invoke(ht, ""count""); ```. Thanks a lot for your continued attention to this issue.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4513#issuecomment-429475190:9,interface,interface,9,https://hail.is,https://github.com/hail-is/hail/issues/4513#issuecomment-429475190,1,['interface'],['interface']
Integrability,"Since the first build.py we have had two bugs. Dev deploys would regularly; re-deploy the router service in the default namespace. The more recent bug; is that the router port ought to be 443, not 80. Any time we dev deploy,; I suppose we have broken the mainline, but this must have been resolved by; deploys that came shortly thereafter.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9726:90,rout,router,90,https://hail.is,https://github.com/hail-is/hail/pull/9726,2,['rout'],['router']
Integrability,Skopeo needs to know that we are speaking the docker protocol.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11170:53,protocol,protocol,53,https://hail.is,https://github.com/hail-is/hail/pull/11170,1,['protocol'],['protocol']
Integrability,Skopeo was yanked from the Kubic repository and there's not an obvious place to retrieve it for 20.04 yet. Removing it as a dependency to unblock current PRs until the issue is resolved.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11856:124,depend,dependency,124,https://hail.is,https://github.com/hail-is/hail/pull/11856,1,['depend'],['dependency']
Integrability,Slightly improves error message for Expression.__iter__,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4088:24,message,message,24,https://hail.is,https://github.com/hail-is/hail/pull/4088,1,['message'],['message']
Integrability,"Small amount of preliminary work #6673. I made a PR trying to address this issue already, but ended up reverting it because it broke CI and we don't test that well. To minimize frustration, I'm making some initial changes here first. . Namely:. - Steps have an equality and hash method based solely on their name (I'm going to want to build a hash map of steps when coming up with dependencies for the cleanup jobs. ; - Cleanup now takes a list of parents, instead of just the sink job (useful for when there are more parents than just the sink job).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6782:381,depend,dependencies,381,https://hail.is,https://github.com/hail-is/hail/pull/6782,1,['depend'],['dependencies']
Integrability,Snyk is failing because it suddenly realized that we have dependencies (#security 🤦 ). I will fix those issue separately.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13551#issuecomment-1707206872:58,depend,dependencies,58,https://hail.is,https://github.com/hail-is/hail/pull/13551#issuecomment-1707206872,1,['depend'],['dependencies']
Integrability,"So I both screwed up by including the TLS proxy settings in the location as; well as setting the router to port 80, which the gateway does not respect.; The gateway tries to speak to the router on 443. All the router services; should speak TLS on 443, even if they proxy to a service speaking plain; HTTP on 80.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8710:97,rout,router,97,https://hail.is,https://github.com/hail-is/hail/pull/8710,3,['rout'],['router']
Integrability,"So I just put back the dependencies on `native-lib-prebuilt`. Since that just calls make recursively, it would probably be better to let mill invoke make, but I didn't want to deal with that, and this is a pretty uncommon use case (I think).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14147#issuecomment-1930447429:23,depend,dependencies,23,https://hail.is,https://github.com/hail-is/hail/pull/14147#issuecomment-1930447429,1,['depend'],['dependencies']
Integrability,"So I still need to sit down and actually dig through this, but my initial thoughts:. We should have shuffler tests that exercise the shuffler directly (without going through RVD/TableIR). I don't think they need to be totally comprehensive, or be necessarily independent of all hail infrastructure (e.g. encoders/decoders/types/regions, which you're using in the shuffler), but should exercise whatever the basic interface between the shuffle service and the rest of the world is going to be, independent of the specific implementation that shuffles an RVD. To that end, I'd also advocate for defining a backend-agnostic shuffler interface to shuffle TableIRs/RVDs; instead of needing to check the context flag everywhere you might shuffle something, we'd define what an RVD shuffle looks like independent of whether or not we're using the shuffle service or a Spark shuffle, and then the shuffler interface would call the correct implementation depending on what shuffler if was supposed to use. (I'm not absolutely set on the second thing happening immediately, but I do think it's longer-term the right way to think about how the shuffler plugs in, and it feels like it should be a pretty minimal change from what you have right now to get a possibly-imperfect-but-workable interface in.). In short, this feels like two+ separate PRs to me, in that it's composed of pretty distinct, substantial changes that involve a lot of non-trivial choices:; - the actual implementation of the shuffle service, and; - a client for Hail IRs to interact with the shuffle service + wiring things up to actually go through it. and I'm happy to review both pieces of it, but it might be easier + quicker to get the shuffler itself in if you broke that change out separately.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8205#issuecomment-594214674:413,interface,interface,413,https://hail.is,https://github.com/hail-is/hail/pull/8205#issuecomment-594214674,5,"['depend', 'interface']","['depending', 'interface']"
Integrability,"So I think the root issue here is the unnecessary duplication between `pyRegisterIR` and `pyRegisterIRForServiceBackend`. The only real difference is that one takes and already parsed IR, and the other takes a string and calls the parser. The callers of `pyRegisterIR` in python all call into the parser first, but I don't see any reason it has to make two calls across the python/scala bridge; I think `pyRegisterIR` should just take the IR as a string and call the parser like `pyRegisterIRForServiceBackend` does. With that change, it should be possible to make one a simple wrapper around the other (or maybe even get rid of `pyRegisterIRForServiceBackend` completely). That way the core logic is shared between backends and is getting tested. Let me know if you want help with this, or if you'd like me to make a separate PR for this.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14579#issuecomment-2174358685:387,bridg,bridge,387,https://hail.is,https://github.com/hail-is/hail/pull/14579#issuecomment-2174358685,4,"['bridg', 'wrap']","['bridge', 'wrapper']"
Integrability,"So I'm going to insist on the classical loop interface I described above, since it is strictly more powerful than the interfaces you've proposed. I don't have a strong feeling if you want to also add a Python-inspired while loop (although I personally would find the similarities misleading given the required differences, I understand others might feel differently). Your while loop should be naturally implementable in terms of mine, so I also suggest we focus on that first. Giving each loop a name seems natural. Apart from the wrapping issue (the greatest existential threat our generation faces) I don't see any problem calling an outer loop from an inner loop. Is Patrick's proposal for extra types written up anywhere? I don't like the idea of complicating the type hierarchy for internal bookkeeping like this. So I'm going to remark that in the code generator it is often natural to build data structures to aid the organization of the code generator, and those data structures need not need to be types/IRs. Given that Recur has to be in tail position, and you know exactly when you're existing the loop (branches that don't contain recur nodes). So the compilation looks like:. ```; set initial loop variables; # fall through into loop; Lloop:; ...; # recur; loop variables = new values; goto Lloop; Lan_exit_branch:; result = compile(branch); goto Lafter; Lanother_exit_branch:; result = compile(other_branch); goto Lafter; Lafter:; use result ...; ```. What I would do is ""peel"" off the ifs and lets (anything else?) that can sit in tail position and build a separate data structure for those nodes which I then traverse to emit the above code. Using the stream interface seems wrong to me also. What's the type of the stream the loop turns into? Since loops carry multiple values (by design), memory allocating these to create a tuple stream is going to be a performance non-starter. I'll comment more once I've looked over the code.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7614#issuecomment-558699125:45,interface,interface,45,https://hail.is,https://github.com/hail-is/hail/pull/7614#issuecomment-558699125,4,"['interface', 'wrap']","['interface', 'interfaces', 'wrapping']"
Integrability,"So the issue is that we used to have `filter` and `explode` inside of aggregations (like `counter` and `collect_as_set`). Now they're placed outside of these operations. There was [a forum post](https://discuss.hail.is/t/breaking-change-redesign-of-aggregator-interface/701) announcing this breaking change. The above to examples should instead be written as:. ```; cut_dict = {'pop': hl.agg.filter(hl.is_defined(mt.meta.pop), hl.agg.counter(mt.meta.pop)),; 'subpop': hl.agg.filter(hl.is_defined(mt.meta.subpop) & hl.is_defined(mt.meta.pop),; hl.agg.collect_as_set(hl.struct(subpop=mt.meta.subpop, pop=mt.meta.pop))); }; ```. The fix for this issue is to change the assertion into an `if` with a `raise` of an error message, probably one that references that discuss post.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4770#issuecomment-452847982:260,interface,interface,260,https://hail.is,https://github.com/hail-is/hail/issues/4770#issuecomment-452847982,2,"['interface', 'message']","['interface', 'message']"
Integrability,"So there's a double regex substitution now in this version. I couldn't figure out how to avoid this without having nice error checking at the exact line there's a problem. For example, `j.command(f'{b}')` right now immediately errors with a nice error message. But if the error checking doesn't come until the massive parallel `_compile` in `Backend.run`, then it will be harder to tell where the error is. I thought about having a `debug_mode` which is on by default that does the double check while the `debug_mode` being off is more efficient.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10716#issuecomment-888459694:252,message,message,252,https://hail.is,https://github.com/hail-is/hail/pull/10716#issuecomment-888459694,1,['message'],['message']
Integrability,"So this evening I noticed that one of my vds files (written four days ago) makes Hail crash when I try to read it. When I do:; hail read -i /user/satterst/DBS_v3/DBS_v3_split_vep.vds. I get the following error message: ; hail: read: caught exception: java.lang.IllegalArgumentException: requirement failed; and then a big stack trace, captured here:. /mnt/lustre/satterst/hail.crash.log. I'd be interested to know what's up. One line in the log says:; 2016-08-27 20:16:41 WARN AbstractLifeCycle:204 - FAILED SelectChannelConnector@0.0.0.0:54054: java.net.BindException: Address already in use; but I don't know what this means or if it's relevant.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/700:210,message,message,210,https://hail.is,https://github.com/hail-is/hail/issues/700,1,['message'],['message']
Integrability,Some additional asserts and quality of life messages that I found necessary for confidently rotating keys.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11020:44,message,messages,44,https://hail.is,https://github.com/hail-is/hail/pull/11020,1,['message'],['messages']
Integrability,"Some delimited text processors use quotes to escape quotes so that the string `a""b` is rendered as `a""""b`. Moreover an individual entry of the delimited text is itself wrapped in double quotes, so, for example, a delimited text file representing one row containing the strings: `hello`, `a""b`, `goodbye` would contain the following bytes:; ```; ""hello"",""a""""b"",""goodbye""; ```. ---. Attempting to import and show the attached TSV file with `hl.import_table(""test.txt"", quote='""').show()` throws an exception:; ```; is.hail.utils.HailException: terminating quote character '""' not at end of field; 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:9); 	at is.hail.utils.package$.fatal(package.scala:28); 	at is.hail.expr.ir.TextTableReader$.splitLine(TextTableReader.scala:107); 	at is.hail.expr.ir.TextTableReader$$anonfun$28$$anonfun$apply$7$$anonfun$apply$8.apply(TextTableReader.scala:379); 	at is.hail.expr.ir.TextTableReader$$anonfun$28$$anonfun$apply$7$$anonfun$apply$8.apply(TextTableReader.scala:378); 	at is.hail.utils.WithContext.map(Context.scala:33); 	at is.hail.expr.ir.TextTableReader$$anonfun$28$$anonfun$apply$7.apply(TextTableReader.scala:378); 	at is.hail.expr.ir.TextTableReader$$anonfun$28$$anonfun$apply$7.apply(TextTableReader.scala:408); 	at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); 	at scala.collection.Iterator$$anon$12.next(Iterator.scala:444); 	at is.hail.utils.package$.getIteratorSizeWithMaxN(package.scala:385); 	at is.hail.sparkextras.ContextRDD$$anonfun$14.apply(ContextRDD.scala:559); 	at is.hail.sparkextras.ContextRDD$$anonfun$14.apply(ContextRDD.scala:559); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1.apply(ContextRDD.scala:589); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1.apply(ContextRDD.scala:587); 	at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2069); 	at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2069); 	at org.apache.spark.scheduler.ResultTask.r",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5796:168,wrap,wrapped,168,https://hail.is,https://github.com/hail-is/hail/issues/5796,1,['wrap'],['wrapped']
Integrability,Some fixes to my recent resiliency changes. These weren't caught because gateway and router-resolver are part of infrastructure that isn't automated by ci yet. I needed to make these changes to deploy them by hand (which I did successfully).,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6211:85,rout,router-resolver,85,https://hail.is,https://github.com/hail-is/hail/pull/6211,1,['rout'],['router-resolver']
Integrability,"Some initial thoughts:; * I'm not sure we should have implicitly broadcasting operations in the IR. It seems simpler to make broadcast an explicit operation, which we make sure to deforest. In fact, broadcast is a special case of the generic tensor index operation I'll describe below. Implicitly broadcasting operations could be provided in the Python interface, making broadcasts explicit when constructing the IR.; * I'm also not sure how much special treatment we should give to block matrices in the IR. I now like to think of block matrices as just 4-tensors, with matrix operations like matrix multiplication lowering to operations on 4-tensors. If we allow tensors to have some distributed dimensions and some ""small"" dimensions, then at least in the backend we might not need special handling of block structures. It may still be helpful to have a special block matrix/tensor representation at the top level IR, or maybe that should only live in Python—I'm not sure. Here's a proposal for a set of primitive tensor operations. * Outer product: Takes two tensors, T1 and T2, with shapes [n1, ..., ni] and [m1, ..., mj], and entry types t1 and t2, and makes a tensor Out with shape [n1, ..., ni, m1, ..., mj] and entry type (t1, t2). If we want to support sparse tensors, this should take a flag specifying how the sparse structure of the output is determined from those of the inputs. I'll call the possible flags ""and"", ""or"", and ""true"". The ""and"" flag says that Out(n, m) is defined iff T1(n) AND T2(m) are both defined. If we will be multiplying the pairs, or applying any other operation with our default missingness semantics, this is the appropriate setting.; The ""or"" flag says Out(n, m) is defined iff T1(n) OR T2(m) is defined, as is appropriate if we are adding the pairs.; ""true"" just means make Out dense, regardless of the sparsity of the inputs. * Map. I don't think there's much to say here. * Generic index operations (not sure what to call these). I'll first give some example",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5190#issuecomment-457598772:353,interface,interface,353,https://hail.is,https://github.com/hail-is/hail/pull/5190#issuecomment-457598772,2,['interface'],['interface']
Integrability,"Some thoughts:. - This should probably be the default; - Export table is spark dependent. It shouldn't be.; - For the `CONCATENATED` case, we're probably not going to do better than this.; - For the parallel cases, even if we don't handle indexing while the files are being written (which would be the best option), It would be nice to have a `parallelize` kind of functionality that doesn't rely on spark.; - This is less important though since we still use RDD for `export_table` and `export_vcf`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9485#issuecomment-696247576:79,depend,dependent,79,https://hail.is,https://github.com/hail-is/hail/pull/9485#issuecomment-696247576,1,['depend'],['dependent']
Integrability,"Something still isn't right with my configuration. The service and deployment are all up. I can curl to the internal gateway and it shows up in the logs. However, I'm getting 404 with this query: `http://hail.internal/jigold/batch2/healthcheck`. I set up cloud dns to route hail.internal to the internal gateway. I verified no traffic is recorded in the jigold router. I tried adding and removing the `gateway` service account but it made no difference.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6918#issuecomment-524103114:268,rout,route,268,https://hail.is,https://github.com/hail-is/hail/pull/6918#issuecomment-524103114,2,['rout'],"['route', 'router']"
Integrability,Somewhat stubby. Dependent on #2578,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2580:17,Depend,Dependent,17,https://hail.is,https://github.com/hail-is/hail/pull/2580,1,['Depend'],['Dependent']
Integrability,Sorry - one more thing I need help with. There's a cyclical import with the RouterFS in `variables.py`. Should I just pylint ignore it?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13224#issuecomment-1677892406:76,Rout,RouterFS,76,https://hail.is,https://github.com/hail-is/hail/pull/13224#issuecomment-1677892406,1,['Rout'],['RouterFS']
Integrability,"Sorry @lgruen these errors were transient issues mostly from our click/dependencies breaking style, but nothing to do with the PR. For CI builds, unfortunately your hail account must be a developer account to see the page. Dan would know whether or not we can do that for your account.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11698#issuecomment-1088742898:71,depend,dependencies,71,https://hail.is,https://github.com/hail-is/hail/pull/11698#issuecomment-1088742898,1,['depend'],['dependencies']
Integrability,"Sorry @tpoterba , there's still more work to do to integrate this throughout Hail without tests failing. That's the next step!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1559#issuecomment-287180359:51,integrat,integrate,51,https://hail.is,https://github.com/hail-is/hail/pull/1559#issuecomment-287180359,1,['integrat'],['integrate']
Integrability,"Sorry I missed your message! The code as written now is plainly wrong: we access a mutable map from two threads without synchronization. We need this change regardless of how it affects error messages. If the tests pass, I'm confident this is fine. Are there components of the system you don't think are well tested by our tests?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13546#issuecomment-1724475471:20,message,message,20,https://hail.is,https://github.com/hail-is/hail/pull/13546#issuecomment-1724475471,3,"['message', 'synchroniz']","['message', 'messages', 'synchronization']"
Integrability,"Sorry for the delay! Every HTTP Status Code has a ""message"" associated with it. That message doesn't vary by request, for 403 its ""Forbidden"". There's a [full list at the MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status). You have to read the body of the request to get rate limit exceeded. I'm sorry, I was playing fast and loose with words, when I said ""message,"" I was referring to the body of the HTTP request, not the `message` field of the aiohttp ClientResponseError. The message, the code and all that come from the HTTP Header, before the body is parsed:; ```; (base) # curl -v https://google.com/123 >/dev/null ; ...; > GET /123 HTTP/1.1; > Host: google.com; > User-Agent: curl/7.69.1; > Accept: */*; > ; ...; < HTTP/1.1 404 Not Found; < Content-Type: text/html; charset=UTF-8; < Referrer-Policy: no-referrer; < Content-Length: 1564; < Date: Thu, 13 May 2021 15:31:43 GMT; < Alt-Svc: h3-29="":443""; ma=2592000,h3-T051="":443""; ma=2592000,h3-Q050="":443""; ma=2592000,h3-Q046="":443""; ma=2592000,h3-Q043="":443""; ma=2592000,quic="":443""; ma=2592000; v=""46,43""; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10432#issuecomment-840641717:51,message,message,51,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-840641717,5,['message'],['message']
Integrability,"Sorry you hit this -- I think I understand what happened. Since we don't include jupyter as a Hail package dependency (it's a large dependency and pulls in a host of transitive dependencies as well), when you ran `jupyter` you picked up a different `jupyter` (probably the conda base environment one, which uses an entirely different Python installation). . I don't want to add jupyter as a dependency, but we can certainly add a note in the tutorials landing page.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7136#issuecomment-535590377:107,depend,dependency,107,https://hail.is,https://github.com/hail-is/hail/issues/7136#issuecomment-535590377,4,['depend'],"['dependencies', 'dependency']"
Integrability,"Sorry! I didn't see this because of the review. The root problem is that `raise_for_status` ignores the response body. This is a [known issue in aiohttp](https://github.com/aio-libs/aiohttp/issues/4600). It will be fixed in 4.0.0, but development on that seems slow. There's a variety of solutions to this problem. Every solution avoids aiohttp's raise_for_status and replaces it with something that includes the response body in the error message. A thorough fix to this is to finish the work I started in `httpx.py`. Instead of returning an `aiohttp.ClientSession` we could return a shim class that wraps `aiohttp.ClientSession` and checks the status code itself and raises an error *with the response body*. A smaller fix that only addresses aiogoogle would be to modify `aiogoogle.auth.Session` to:; 1. Not pass `raise_for_status` on to `aiohttp.ClientSession`.; 2. Store raise_for_status as a field on `aiogoogle.auth.Session`.; 2. In `aiogoogle.auth.Session.request`, if `self.raise_for_status` is true and the response status is greater than or equal to 400, retrieve the response body and raise an exception (maybe `HailHTTPError`) that includes the body.; 3. Ensure `is_transient_error` properly handles whatever exception we raise.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10432#issuecomment-852213289:440,message,message,440,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-852213289,2,"['message', 'wrap']","['message', 'wraps']"
Integrability,"Sorry, I wasn't clear before. The Batch LD Clumping example does not require Hail Query (and, more importantly, a JVM) to be installed on *the computer that submits the batch*. Hail is imported and used inside of the Batch task that performs GWAS. That task runs inside a Docker container that has Hail installed (its derived from `hailgenetics/hail`). I'm hesitant to make the *submission* of a batch dependent on the Hail Query library. Particularly when we have relatively low-effort alternative approaches. I'm delighted any time I see batch tasks use Hail Query! Konrad's Pan UKB work also does this.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9194#issuecomment-671357400:402,depend,dependent,402,https://hail.is,https://github.com/hail-is/hail/pull/9194#issuecomment-671357400,2,['depend'],['dependent']
Integrability,"Sorry, code movement made the diff a bit messy. Basically: support the same search and pagination interface in the batch/jobs API endpoint as we do now in the batch UI page.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7643:98,interface,interface,98,https://hail.is,https://github.com/hail-is/hail/pull/7643,1,['interface'],['interface']
Integrability,"Sorry, fine meaning just having the submit routes and the test. Not fine with the polling of GitHub with the start time stuff.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9614#issuecomment-714575525:43,rout,routes,43,https://hail.is,https://github.com/hail-is/hail/pull/9614#issuecomment-714575525,1,['rout'],['routes']
Integrability,"Sorry, got wrapped up in other work. I've got things primed to run benchmark comparisons in the morning. Here's some crazy numbers just running one iteration (from this pr):; ```; 2019-10-08 16:46:31,396: INFO: [1/6] Running table_aggregate_linreg20...; 2019-10-08 16:46:44,645: INFO: burn in: 13.24s; 2019-10-08 16:46:55,367: INFO: run 1: 10.72s; 2019-10-08 16:46:55,367: INFO: [2/6] Running table_aggregate_linreg21...; 2019-10-08 16:47:07,836: INFO: burn in: 12.47s; 2019-10-08 16:47:19,376: INFO: run 1: 11.54s; 2019-10-08 16:47:19,376: INFO: [3/6] Running table_aggregate_linreg22...; 2019-10-08 16:47:32,728: INFO: burn in: 13.35s; 2019-10-08 16:47:44,571: INFO: run 1: 11.84s; 2019-10-08 16:47:44,571: INFO: [4/6] Running table_aggregate_linreg23...; 2019-10-08 16:48:37,183: INFO: burn in: 52.61s; 2019-10-08 16:49:28,580: INFO: run 1: 51.40s; 2019-10-08 16:49:28,580: INFO: [5/6] Running table_aggregate_linreg24...; 2019-10-08 16:50:25,410: INFO: burn in: 56.83s; 2019-10-08 16:51:20,184: INFO: run 1: 54.77s; 2019-10-08 16:51:20,184: INFO: [6/6] Running table_aggregate_linreg25...; 2019-10-08 16:52:16,778: INFO: burn in: 56.59s; 2019-10-08 16:53:21,050: INFO: run 1: 64.27s; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7134#issuecomment-539702199:11,wrap,wrapped,11,https://hail.is,https://github.com/hail-is/hail/pull/7134#issuecomment-539702199,1,['wrap'],['wrapped']
Integrability,Soyeon hit an ugly message from Scala.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13144:19,message,message,19,https://hail.is,https://github.com/hail-is/hail/pull/13144,1,['message'],['message']
Integrability,"Spaces in sample names are a nightmare for downstream analysis tools, so when I get my callsets from Picard, I immediately remove spaces in sample names and re-write my VCF. It usually takes a day or two to re-write the entire VCF, depending on the size of the callset. I would be an extremely happy camper if I could immediately import my VCF from Picard and either fix sample names on the fly during the import, or fix sample names in the .vds after the import (as a separate step). Either way, this should save a substantial chunk of time right off the top in the QC process.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/157:232,depend,depending,232,https://hail.is,https://github.com/hail-is/hail/issues/157,1,['depend'],['depending']
Integrability,"Spark 3 resolved the issues with library changes python 3.8, so we can; now use python 3.8 as long as pyspark is version 3 or greater. I also took this opertunity to make every link in or welcome doc message; a canonical https link that will be recognized as such by many parsers; such as sufficiently advanced terminal emulators.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9537:200,message,message,200,https://hail.is,https://github.com/hail-is/hail/pull/9537,1,['message'],['message']
Integrability,"Spark 3.1.1 is out, dataproc image should be updated from the release candidate dependency within a week or so I think. The only remaining issue I think is a weird one, a particular blockmatrix test is failing because json4s can't find a constructor for `BlockMatrixSparsity` objects. Looking into it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10054#issuecomment-790702427:80,depend,dependency,80,https://hail.is,https://github.com/hail-is/hail/pull/10054#issuecomment-790702427,1,['depend'],['dependency']
Integrability,"Spark 3.3.0 uses log4j2. Note the ""2"". I suspect log4j2, although it simulates the log4j1 interface, does not correctly support the log4j1 reconfiguration methods. As a result, we began losing QoB job logs. This PR embraces log4j2. The JVMEntryway is now a proper gradle project with two files: JVMEntryway.java and QoBAppender.scala. The former now more extensively logs exceptions into the job logs where they can be seen by users. `QoBAppender` and `QoBOutputStreamManager` work together to ensure QoB job logs go to a different file for each job. In log4j2 there is a log manager and there are loggers, appenders, and appender managers. The log manager appears to be a singleton manager of the log system. Within a log manager there is a directed acyclic graph of loggers. A logger accepts new log messages from user code. It adds some information (like the source class) to the message. If it has an attached appenders, it sends the message to the appenders. It then sends the message up the DAG to its parent logger. There is one root logger which is the ancestor of all other loggers. In this PR, the root logger has exactly one appender: `QoBAppender`. In Hail Query on Batch, we should always have exactly one appender, the QoBAppender, and it should be attached to the root logger. Multiple appenders can share an appender manager. Appender managers allow multiple appenders to share an output file, for example. I think we probably did not need to use a manager in this case.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12940:90,interface,interface,90,https://hail.is,https://github.com/hail-is/hail/pull/12940,5,"['interface', 'message']","['interface', 'message', 'messages']"
Integrability,"Spark 3.3.0 uses log4j2. Note the ""2"". If you use the log4j1 programmatic reconfiguration system, you will break log4j2 for you and everyone else. The only way to recover from such a breakage is to use the log4j2 programmatic reconfiguration system. Changes in this PR:. 1. Include JVM output in error logs when the JVM crashes. This should help debugging of JVM crashing in production until the JVM logs are shown on a per-worker page. 2. JVMEntryway is now a real gradle project. I need to compile against log4j, and I didn't want to do that by hand with `javac`. Ignore gradlew, gradlew.bat, and gradle/wrapper, they're programmatically generated by gradle. 3. Add logging to JVMEntryway. JVMEntryway now logs its arguments into the QoB job log. I also log exceptions from the main thread or the cancel thread into the job log. We also flush the logs after the main thread completes, the cancel thread completes, and when the try-catch exits. This should ensure that regardless of what goes wrong (even if both threads fail to start) we at least see the arguments that the JVMEntryway received. 4. Use log4j2 programmatic reconfiguration after every job. This restores log4j2 to well enough working order that, *if you do not try to reconfigure it using log4j1 programmatic configuration*, logs will work. All old versions of Hail use log4j1 programmatic configuration. As a result, **all old versions of Hail will still have no logs**. However, new versions of Hail will log correctly even if an old version of Hail used the JVM before it. 5. `QoBAppender`. This is how we always should have done logging. A custom appender which we can flush and then redirect to a new file at our whim. I followed the log4j2 best practices for creating a new appender. All these annotations, factory methods, and managers are The Right Way, for better or worse. If we ever ban old versions of Hail from the cluster, then we can also eliminate the log4j2 reconfiguration. New versions of Hail work fine without an",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12941:606,wrap,wrapper,606,https://hail.is,https://github.com/hail-is/hail/pull/12941,1,['wrap'],['wrapper']
Integrability,"Spark depends on a very old verison of SLF4J. We cannot upgrade. This removes this message:; ```; SLF4J: No SLF4J providers were found.; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.; SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.; SLF4J: Ignoring binding found at [jar:file:/usr/lib/spark/jars/log4j-slf4j-impl-2.17.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.; ```. Which, IMO, really should be a stop-the-world error.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14054:6,depend,depends,6,https://hail.is,https://github.com/hail-is/hail/pull/14054,2,"['depend', 'message']","['depends', 'message']"
Integrability,"Spark depends on a very old verison of SLF4J. We cannot upgrade. We added this dependency ages ago to fix some undocumented issue with logging and SLF4J. It seems reasonable to me that we should just accept whatever version of SLF4J that Spark provides. This removes this message:; ```; SLF4J: No SLF4J providers were found.; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.; SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.; SLF4J: Ignoring binding found at [jar:file:/usr/lib/spark/jars/log4j-slf4j-impl-2.17.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.; ```. Which, IMO, really should be a stop-the-world error.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14055:6,depend,depends,6,https://hail.is,https://github.com/hail-is/hail/pull/14055,3,"['depend', 'message']","['dependency', 'depends', 'message']"
Integrability,"Spark imports json4s but excludes its dependency, com.fasterxml.jackson.core:jackson-databind. We should do the same when shadowing json4s.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10266:38,depend,dependency,38,https://hail.is,https://github.com/hail-is/hail/pull/10266,1,['depend'],['dependency']
Integrability,"Sphinx 1.8 broke compatibility (https://github.com/sphinx-doc/sphinx/issues/5460) with a number of themes including `sphinx_rtd_theme`. Sphinx 1.8.3 restores compatibility (https://github.com/sphinx-doc/sphinx/pull/5590) with said themes. Moreover, sphinx_rtd_theme 0.4.2 (https://github.com/rtfd/sphinx_rtd_theme/pull/672) fixed itself to be compatible with Sphinx 1.8. I tested this locally and search works for me. I also updated our `pandas` dependency because our `setup.py` declares compatibility with only `0.23.x`. Because I edited the environment files, I rebuilt the pr builder image.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5059:446,depend,dependency,446,https://hail.is,https://github.com/hail-is/hail/pull/5059,1,['depend'],['dependency']
Integrability,Stack trace from @lfrancioli ([full trace](https://nealelab.slack.com/files/laurent/F3P268282/error.txt)). ```; Caused by: java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at org.broadinstitute.hail.utils.richUtils.RichIterable$$anon$4$$anon$10.next(RichIterable.scala:71); at org.broadinstitute.hail.methods.Aggregators$$anonfun$buildVariantAggregations$1.apply(Aggregators.scala:54); at org.broadinstitute.hail.methods.Aggregators$$anonfun$buildVariantAggregations$1.apply(Aggregators.scala:45); at org.broadinstitute.hail.driver.AnnotateVariantsExpr$$anonfun$4$$anonfun$apply$1.apply(AnnotateVariantsExpr.scala:51); ⋮; ```. The iterator returned by the genotype stream has an additional constraint (over the `Iterator[T]` interface) that `hasNext` must be called before every call to `next`. The failing assertion verifies that.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1227:763,interface,interface,763,https://hail.is,https://github.com/hail-is/hail/issues/1227,1,['interface'],['interface']
Integrability,Stacked on #10876. Refactors all the function registry interfaces to take/return (S)Values.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10877:55,interface,interfaces,55,https://hail.is,https://github.com/hail-is/hail/pull/10877,1,['interface'],['interfaces']
Integrability,Stacked on #14016. This PR needs to have the client/server protocol for creating job groups for the four types of creation/update events hashed out and implemented. Basic tests are there. We still need tests for billing and cancellation to make sure the aggregation and cancellation operations work properly.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14018:59,protocol,protocol,59,https://hail.is,https://github.com/hail-is/hail/pull/14018,1,['protocol'],['protocol']
Integrability,"Stacked on #6075 . - Changed the job id to be a compound key (batch_id, job_id) where batch_id is unique while job_id is 1->N; - Added a batch builder to create the batch in the database as efficiently as possible in one transaction (or at least that was my intent); - Changed both client interfaces to have a `run` function rather than `close`. Sends one request once the batch has been fully created.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6098:289,interface,interfaces,289,https://hail.is,https://github.com/hail-is/hail/pull/6098,1,['interface'],['interfaces']
Integrability,"Stacked on #7000. Adds a new IR renderer in Python which integrates a CSE pass. It would be easy to argue that a CSE pass should be separate from the renderer. But we can't easily make the Python IR mutable, because a given IR tree might be used in multiple larger IR (which is exactly what this pass is taking advantage of!) so mutation which depends on the larger context won't work. So rather than rebuild the entire IR every time we print, I decided for now this is best integrated into the renderer. I think longer term this should be ported to scala as a full CSE pass (which first does hash-consing/value-numbering to find all repeated subexpressions). This is not a simple algorithm, but I did my best to make it understandable. If anything feels harder to follow than it should be, I'd like to try to improve it.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7009:57,integrat,integrates,57,https://hail.is,https://github.com/hail-is/hail/pull/7009,3,"['depend', 'integrat']","['depends', 'integrated', 'integrates']"
Integrability,"Stacked on: https://github.com/hail-is/hail/pull/5382. When that goes in, this will almost all be deletions. I removed Scala Table and all Scala tests that depended on it. Most deleted tests have analogous in Python, although not all. This will definitely reduce test coverage, esp. things like LDPrune, IBD and PCRelate that haven't been lifted Python yet. They're not changing and on the short list to get lifted, so maybe this is OK, although I'm open to pushback.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5383:156,depend,depended,156,https://hail.is,https://github.com/hail-is/hail/pull/5383,1,['depend'],['depended']
Integrability,Stacked on: https://github.com/hail-is/hail/pull/5383. Removed Scala MatrixTable and everything that depended on it.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5385:101,depend,depended,101,https://hail.is,https://github.com/hail-is/hail/pull/5385,1,['depend'],['depended']
Integrability,"Stacked on: https://github.com/hail-is/hail/pull/7440. Changes:; - start the instance with a 1-time use activation token in the metadata; - on activation, clear the activation token, send the worker the normal token and batch-gsa-key; - upgrade the worker image to -6 which has the latest cloud-sdk (v269). As far as I can tell, the metadata server is still available from within the worker container after the upgrade, so I'm not 100% sure why this change was necessary. However, it will make things easier to lock down later. I think the picture we want is:; - store the worker and batch logs in different buckets,; - the worker instance service account only has instance.delete* and object.insert on the worker log bucket,; - the service account used by the worker only has object.insert on the batch logs bucket,; - we block access to the metdata srever from within the docker containers.Leaving this for reference:. https://stackoverflow.com/questions/32512597/block-docker-access-to-specific-ip. This isn't 100% trivial because the metadata server is also the DNS server. We could try blocking everything except udp/53. I think ideally, we'd put the docker containers on a different network that could only route to the outside and use a public DNS server like 8.8.8.8. *An instance doesn't need extra permissions to shut itself down, so we could just do `shutdown -h now` on the worker and have the batch driver actually delete the instance. I think once this goes in we can try scale up tests again.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7447:1213,rout,route,1213,https://hail.is,https://github.com/hail-is/hail/pull/7447,1,['rout'],['route']
Integrability,Stacked on: https://github.com/hail-is/hail/pull/8179. This adds ModuleBuilder. A module is a collection of classes whose bytecode should be loaded together (like a function and some associated dependent functions). Dependent functions now add themselves to the module.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8186:194,depend,dependent,194,https://hail.is,https://github.com/hail-is/hail/pull/8186,2,"['Depend', 'depend']","['Dependent', 'dependent']"
Integrability,"Stacks on #5430. Once #5430 is in, the changes here will be limited to: 1) notebook.py: login/logout routes, the provision of authorized users, auth0 lib, 2) index.html 3) header.html: update lines 12 and 13 to read user from session. Provides basic login page. Below are a few images of it in action. Looks like app.hail.is. Handles authorized and workshop-only login. Handles login only; future PR will extend to checking, refreshing the session. cc @cseed . screenshots (notebook create button not yet PR'd , auth0 page not yet styled). <img width=""1141"" alt=""screen shot 2019-02-25 at 11 17 37 pm"" src=""https://user-images.githubusercontent.com/5543229/53387218-d62f3e80-3953-11e9-8653-e4c6b0e8294a.png"">; <img width=""1139"" alt=""screen shot 2019-02-25 at 11 18 00 pm"" src=""https://user-images.githubusercontent.com/5543229/53387219-d62f3e80-3953-11e9-8595-d7f1ea58a243.png"">; <img width=""1139"" alt=""screen shot 2019-02-25 at 11 18 18 pm"" src=""https://user-images.githubusercontent.com/5543229/53387220-d62f3e80-3953-11e9-9fba-e4a93b0374ee.png"">; <img width=""1141"" alt=""screen shot 2019-02-25 at 11 18 33 pm"" src=""https://user-images.githubusercontent.com/5543229/53387221-d62f3e80-3953-11e9-9527-7c4589846a29.png"">",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5437:101,rout,routes,101,https://hail.is,https://github.com/hail-is/hail/pull/5437,1,['rout'],['routes']
Integrability,"Stacks on #5437. When #5437 is merged, only change will be the addition of a `requires_auth` decorator - which redirects users to the login page when unauthorized, keeping a reference to the referring url - the protection of all routes other than login/logout, and 4 lines to the `/auth0-callback` route to read/clear the referrer session cookie. Admin pages are currently protected in the same way, but I can drop protection from whatever routes you wish. cc @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5448:229,rout,routes,229,https://hail.is,https://github.com/hail-is/hail/pull/5448,3,['rout'],"['route', 'routes']"
Integrability,"Stacks on #5526. Once that commit goes in, the only changes will be to the /wait route, which will now issue a Kubernetes watcher, `notebook-state.html` to support JS state updates (and some minor changes to the organization of the notebook reporting UI). This checks whether the route may be reached both for jobs that are Ready (at page refresh), and those that have just transitioned into ready state (as alerted by the websocket route). cc @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5538:81,rout,route,81,https://hail.is,https://github.com/hail-is/hail/pull/5538,3,['rout'],['route']
Integrability,"Stacks on #5526. Once that commit goes in, the only changes will be to the /wait route, which will now issue a Kubernetes watcher, notebook-state.html to support JS state updates (and some minor changes to the organization of the notebook reporting UI). Relevant commit: ; 4f4e2b6f875e33da5787f665de1400f0f00a3623. This checks whether the route may be reached both for jobs that are Ready (at page refresh), and those that have just transitioned into ready state (as alerted by the websocket route). Next update will generalize the UI to N notebooks, to handle the case that internet-synchrony issues cause 2 non-deleted notebooks to be generated. This still needs a bit of work; when reach call fails due to 502, it continues issuing 502's, requiring a refresh. First attempts to cache bust, client side and nginx-side failed. cc @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5540:81,rout,route,81,https://hail.is,https://github.com/hail-is/hail/pull/5540,3,['rout'],['route']
Integrability,StagedRegionValueAggregator and RVAState interfaces,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6501:41,interface,interfaces,41,https://hail.is,https://github.com/hail-is/hail/pull/6501,1,['interface'],['interfaces']
Integrability,"Start of an IR node for joining two streams. ## Logic; Works off the ""producer"" pattern, where a stream is an object that you can; 1. Initialize, so the head of the stream is ready to be consumed.; 2. Step, so updates the current head to the next element in the stream. A join then takes two streams and its Step steps the left stream, the right stream, or both streams until a ""valid"" state is reached. E.g. In an outer join every step is a new valid state while an inner join must loop until the match condition is met. The node must also take some combining binary functions so as not to produce runtime tuples. Optional ""left"" and ""right"" functions determine at compilation time whether an unmatched pair of values should still produce a value (e.g. in a left join you always act, just either on just the left head or both). ## State of the code base; - Added `produce` abstract method to `ArrayEmitter`. Tests will fail until that is implemented on all the array nodes.; - Inserted a small hack to the `ir.ToArray` emit case that uses the producer route; - Added a test case for `ArrayJoin` (this one passes! :)); - Have not yet incorporated missingness into producer logic and have not implemented `consume` for ArrayJoin`.; - `Binds` needs to be updated to add the appropriate bindings for the children. Right now it just adds them all.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6516:1053,rout,route,1053,https://hail.is,https://github.com/hail-is/hail/pull/6516,1,['rout'],['route']
Integrability,"Started playing with [typer](https://typer.tiangolo.com/) on the plane. It's a somewhat thin wrapper around `click`, and I'm not entirely sold on one vs the other, but either seems a lot neater than argparse (I remember Cotton tried this years ago but I haven't looked at that PR). Click gives us the easy composition of CLIs, function name as the command name, the use of docstring as the description, help output, and most of the core functionality you see. Typer is the one translating python type hints into click type-checking, default setting, etc. Typer also uses rich if it's installed and allows you to install shell completion which is pretty neat, not sure if you can get that through click or if you need to use a click plugin. I replaced a couple of the hailctl commands here with the typer/click version. If you like what you see I can keep going on the rest of the commands (you can look to `batch/cli.py` and `hailctl/__main__.py` as an example).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13109:93,wrap,wrapper,93,https://hail.is,https://github.com/hail-is/hail/pull/13109,1,['wrap'],['wrapper']
Integrability,"Still contains debug messages, and needs rebase. All will be fixed after tests pass. Remaining tests not passing are:; <img width=""358"" alt=""Screenshot 2020-02-08 15 17 58"" src=""https://user-images.githubusercontent.com/5543229/74091636-8162d600-4a87-11ea-9750-f2804352d4a3.png"">. Each of these fails with a match error in Emit, either on MakeStream, or StreamRange",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8063#issuecomment-583773630:21,message,messages,21,https://hail.is,https://github.com/hail-is/hail/pull/8063#issuecomment-583773630,1,['message'],['messages']
Integrability,"Streamline dependsOnMethods for configurations</li>; <li><a href=""https://github.com/cbeust/testng/commit/d7e0bb1cbcd7933d34d704678e75cbaf42704505""><code>d7e0bb1</code></a> Deprecate support for running Spock Tests</li>; <li><a href=""https://github.com/cbeust/testng/commit/ca7a3a293008389096be75fea4936af8e5f79650""><code>ca7a3a2</code></a> Ensure All tests run all the time</li>; <li>Additional commits viewable in <a href=""https://github.com/cbeust/testng/compare/testng-6.8.21...7.7.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.testng:testng&package-manager=gradle&previous-version=6.8.21&new-version=7.7.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:17069,depend,dependabot,17069,https://hail.is,https://github.com/hail-is/hail/pull/12665,1,['depend'],['dependabot']
Integrability,StringLike$class.toInt(StringLike.scala:272); at scala.collection.immutable.StringOps.toInt(StringOps.scala:30); at org.broadinstitute.hail.methods.AnnotationValueString$$anonfun$toArrayInt$extension$1.apply(Filter.scala:18); at org.broadinstitute.hail.methods.AnnotationValueString$$anonfun$toArrayInt$extension$1.apply(Filter.scala:18); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186); at scala.collection.TraversableLike$class.map(TraversableLike.scala:245); at scala.collection.mutable.ArrayOps$ofRef.map(ArrayOps.scala:186); at org.broadinstitute.hail.methods.AnnotationValueString$.toArrayInt$extension(Filter.scala:18); at __wrapper$1$c1aef7d48806473ea6c7fc7ceb61989c.__wrapper$1$c1aef7d48806473ea6c7fc7ceb61989c$$anonfun$wrapper$1$__vaClass$1$__info$$anonfun$3.apply(<no source file>:11); at __wrapper$1$c1aef7d48806473ea6c7fc7ceb61989c.__wrapper$1$c1aef7d48806473ea6c7fc7ceb61989c$$anonfun$wrapper$1$__vaClass$1$__info$$anonfun$3.apply(<no source file>:11); at scala.Option.map(Option.scala:146); at __wrapper$1$c1aef7d48806473ea6c7fc7ceb61989c.__wrapper$1$c1aef7d48806473ea6c7fc7ceb61989c$$anonfun$wrapper$1$__vaClass$1$__info.<init>(<no source file>:11); at __wrapper$1$c1aef7d48806473ea6c7fc7ceb61989c.__wrapper$1$c1aef7d48806473ea6c7fc7ceb61989c$$anonfun$wrapper$1$__vaClass$1.<init>(<no source file>:23); at __wrapper$1$c1aef7d48806473ea6c7fc7ceb61989c.__wrapper$1$c1aef7d48806473ea6c7fc7ceb61989c$$anonfun$wrapper$1.apply(<no source file>:32); at __wrapper$1$c1aef7d48806473ea6c7fc7ceb61989c.__wrapper$1$c1aef7d48806473ea6c7fc7ceb61989c$$anonfun$wrapper$1.apply(<no source file>:2); at org.broadinstitute.hail.methods.FilterVariantCondition.apply(Filter.scala:613); at org.broadinstitute.hail.driver.FilterV,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/120:2008,wrap,wrapper,2008,https://hail.is,https://github.com/hail-is/hail/issues/120,1,['wrap'],['wrapper']
Integrability,"Summary of Changes; - Preserve MT structure for entry fields; - Harmonize MT and T `show` interface in a backwards compatible way; - Simplify `Expression.show` code slightly; - A comprehensive, colocated set of `show` tests",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6089:90,interface,interface,90,https://hail.is,https://github.com/hail-is/hail/pull/6089,1,['interface'],['interface']
Integrability,"Summary of changes:; - Added a (low level) aiogoogle.StorageClient for Google Storage.; - Added an abstract AsyncFS interface. There are currently 3 implementations: GoogleStorageAsyncFS, LocalAsyncFS, and RouterAsyncFS, which can route (based on the scheme) to other file systems. I tried to copy the standard Python os file system interface (open, remove, mkdir, isfile, etc.) I'm skeptical about pushing hard on this perspective, and I think we're better off finding a natural interface that that unifies local, gs, (hadoop) and s3. Maybe a read-only HttpFS. I think I want to split open() into open (for reading) and create (for writing). LocalFS operations are run in a thread pool which controls the level of IO parallelism.; - AsyncFS.open returns an AsyncStream. This is an async abstraction for Python File-like objects. It still amazes me Python doesn't have something built in for this. Next step is a high-level interface for listing objects. Eventually this and JVM FS should mirror each other.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9426:116,interface,interface,116,https://hail.is,https://github.com/hail-is/hail/pull/9426,6,"['Rout', 'interface', 'rout']","['RouterAsyncFS', 'interface', 'route']"
Integrability,"Summary of changes:; - Added index_bgen to Python Backend; - Move most Backend functions to SparkBackend. Everything about the current code assumes a single user, but the ServiceBackend will have a different, mutli-user interface.; - Added Backend and FS to ExecuteContext.; - renamed Backend clear => stop",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8386:220,interface,interface,220,https://hail.is,https://github.com/hail-is/hail/pull/8386,1,['interface'],['interface']
Integrability,"Summary of changes:; - add is.hail.lir, a low-level IR for emitting JVM bytecode; - lir handles local variable initialization. It uses dataflow analysis to compute which variables must be initialized. It will no longer be necessary to initialize locals to satisfy the JVM bytecode verifier.; - Modify Code[T] to use lir instead of asm directly. Code[T] can only be used once and this is now checked.; - Remove joinpoint and ParameterPack. This primarily involved making EmitStream use Labels instead of joinpoint, and specializing routines that required ParameterPack to work over EmitCode instead.; - Because Code[T] can only be used once, push Value[T], PValue and EmitValue throughout the code base. For example, the Emit environment is now an Emit[EmitValue]. This was mostly a lot of tedious changes: remove `.load()` in places, add calls to `memoize`, and change `Code[T] => Value[T]` in various places.; - EmitMetholdBuilder has newEmit{Local, Field} for creating places to store EmitCodes. I think there are two main issues to clean up before this goes in, or soon after:. This code doesn't try to optimize short-circuit boolean operations (||, &&, etc.) like the old code did, tho it seems the old code wasn't always working. Either way, this should get fixed. It is relatively easy to handle in `Code[T]`. I will fix this before the final version. I left jointpoint.Ctrl and have implicit conversions that freely convert between `Code[Unit]` and `Code[Ctrl]`. This is a bit tedious, but I guess `Code[T]` should support `Code[Nothing]` for type checking user code, although it will still treat it like a `Code[Unit]`. I will fix this later.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8312:531,rout,routines,531,https://hail.is,https://github.com/hail-is/hail/pull/8312,1,['rout'],['routines']
Integrability,"Summary of changes:; - change notebook states to Scheduling, Initializing, Ready (Running was too suggestion of being ready); - remove ""a_notebook"" notebook name, replace with ""Creating Notebook..."" or ""Open Notebook[open_in_new]"" link; - change nb-state-container styling, blue/underline link on top, but the whole container still acts as a link; - made material icons bold. I'm not sure if I like this, it is bordering on cartoonish.; - make checkmark green to match other success/ok coloring using green (e.g. messages); - un-bold pod name, which is really only interested for us (maybe we should remove?). It is deployed in my namespace if you want to play with it.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7155:513,message,messages,513,https://hail.is,https://github.com/hail-is/hail/pull/7155,1,['message'],['messages']
Integrability,"Summary of changes:; - more FS de-Hadoopification; - make the FS core minimal, and implement as much of the interface in terms of that core; - add GoogleStorageFS file system; - add general FSSuite and two implementations: Hadoop and gs://; - google storage tests don't run by default because you need a bucket and key. I set those in the test_hail_java build step.; - There is more stuff to clean up, the Seekable stuff specifically. I'd like to get to the point where only HadoopFS imports hadoop. I don't think we're that far off.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8414:108,interface,interface,108,https://hail.is,https://github.com/hail-is/hail/pull/8414,1,['interface'],['interface']
Integrability,"Summary of changes:; - rip out method wrapping from Emit level; - Emit now uses locals everywhere instead of fields; - improved SimplifyControl; - Changed CodeRegion to call Memory directly, instead of calling Region methods. This saves a bytecode on native memory accesses.; - add lir.SplitMethod to break up methods. For large methods, this breaks the body of each basic block into one (or more) external functions and spills locals to fields. Splitting is controlled by SplitMethod.TargetMethodSize, currently set to 2000. PR'ing for testing. I have a few more improvements and then I will performance test. Here are the method sizes after splitting for the large `MakeStruct` example:. ```; is/hail/codegen/generated/C8; <init> 4; apply 235; apply 19; setPartitionIndex 11; addPartitionRegion 5; __wrapped16 30; __wrapped17 2003; __wrapped18 2008; __wrapped19 2006; __wrapped20 2008; __wrapped21 2006; __wrapped22 2008; __wrapped23 2006; __wrapped24 2008; __wrapped25 2006; ... you get the picture, remaining 100 methods elided ...; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8333:38,wrap,wrapping,38,https://hail.is,https://github.com/hail-is/hail/pull/8333,1,['wrap'],['wrapping']
Integrability,"Summary of changes:; - rip out method wrapping logic in ir.Emit; - add lir.{Blocks, Locals} for enumerating and indexing blocks and locals; - add SplitLargeBlocks to break up large blocks (the minimum unit of splitting in SplitMethod is the block); - add PST to compute our non-standard variant of the program structure tree (see the comment in PST); - add SplitMethod to split large methods based on the PST",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8963:38,wrap,wrapping,38,https://hail.is,https://github.com/hail-is/hail/pull/8963,1,['wrap'],['wrapping']
Integrability,"Summary: hailctl batch list --help; ```; usage: hailctl batch list [-h] [--query QUERY] [--limit LIMIT] [--all] [--before BEFORE] [--full] [--no-header] [-o O]. List batches. optional arguments:; -h, --help show this help message and exit; --query QUERY, -q QUERY; see docs at https://batch.hail.is/batches; --limit LIMIT, -l LIMIT; number of batches to return (default 50); --all, -a list all batches (overrides --limit); --before BEFORE start listing before supplied id; --full when output is tabular, print more information; --no-header do not print a table header; -o O specify output format (json, yaml, csv, tsv, or any tabulate format); ```. Details:; * Default listing to a limit of 50 records, once batch statuses are; cached from `list_batches`, this should result in 1 http request for the; default behavior of this tool.; * Teach --limit option to cap the number of records returned; * Teach --all to override --limit; * Teach --before to pass a last_batch_id query parameter to list_batches; * Teach --full to print all status information; * Teach --no-header to enable not printing a header for tabular output; * Teach -o {format} to change the output format the following are supported:; - json: always full json output, like hitting the list enpoint manually; - yaml: like json, but yaml!; - csv/tsv: simple comma/tab separated output for machine processing; - any python-tabulate output format, listed here:; https://github.com/astanin/python-tabulate#table-format. The only default that has been changed is the listing limit.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9557:222,message,message,222,https://hail.is,https://github.com/hail-is/hail/pull/9557,1,['message'],['message']
Integrability,"Support bokeh<3.5 and fix deprecation warnings about using `circe(size=...)`.; Note that `maker=""cicle""` is the default for `scatter`. Resolves #14706. ### Security Assessment; This change has a low security impact from minor dependence changes. (Reviewers: please confirm the security impact before approving)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14724:226,depend,dependence,226,https://hail.is,https://github.com/hail-is/hail/pull/14724,1,['depend'],['dependence']
Integrability,"Suppose there are 10,000 tasks competing for the semaphore. If any one of them rasises an exception while the `WithoutSempahore` context manager is active, then the probability that the `WithoutSemaphore.__aexit__` wins the semaphore is 1/10,000 aka unlikely. In practice, this means we need to process through most of the tasks to get the first exception. If, for a real world example, there is a permission issue, you will wait many minutes for all 10,000 tasks to fail, all with the same exception, and then you will finally receive the first exception plus a *litany* of log messages about other tasks which were not properly cleaned up (due to the implementation of `bounded_gather2_raise_exceptions`).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14349:579,message,messages,579,https://hail.is,https://github.com/hail-is/hail/pull/14349,1,['message'],['messages']
Integrability,"Suppose you have two branches with the same base commit. Neither branch has Scala changes. Consider `make shadowJar` when switching between these branches: it thinks there's nothing to do because the Scala code hasn't changed. This of course doesn't work because the python version *is* changing (note: make install-editable refreshes the version files) and Hail refuses to use an out of date jar. This adds a tiny make macro that lets make targets depend on variables that depend on the latent environment, like git SHAs. To create a target for such a variable add this line: `$(eval $(call ENV_VAR,VARIABLE_NAME))`. Any rule that depends on the value of `VARIABLE_NAME` should depend on the target `env/VARIABLE_NAME`. I also split `BUILD_INFO` into the scala parts and the python parts and moved the scala dependency down to the shadow jar rule, where it belongs. This bug was hidden because build.gradle still regenerates the build info every time shadowJar is called. cc: @tpoterba",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6867:449,depend,depend,449,https://hail.is,https://github.com/hail-is/hail/pull/6867,5,['depend'],"['depend', 'dependency', 'depends']"
Integrability,"Sure thing. Planning on implementing three top-level convenience methods for converting between relational IRs:; - `t.to_matrix_table` which essentially wraps the python approach you laid out in the creation of this issue; - `bm.to_table` which produces a table where each row corresponds to a row of the original BlockMatrix (will do a write and a read to avoid shuffling, actually have to dig into the RDDs for this one); - `bm.to_matrix_table` which will just compose the previous two methods",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5504#issuecomment-470199897:153,wrap,wraps,153,https://hail.is,https://github.com/hail-is/hail/issues/5504#issuecomment-470199897,1,['wrap'],['wraps']
Integrability,"Sure, the interface is slightly different though to accommodate for some of the new features. It also doesn't support passing python lists instead of hail expr -- could be trivially added if useful though.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5601#issuecomment-473303829:10,interface,interface,10,https://hail.is,https://github.com/hail-is/hail/pull/5601#issuecomment-473303829,1,['interface'],['interface']
Integrability,TODO for myself. Any new routes we add need to have a test added to `test_authorized_users_only()`.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14016#issuecomment-1834642128:25,rout,routes,25,https://hail.is,https://github.com/hail-is/hail/pull/14016#issuecomment-1834642128,1,['rout'],['routes']
Integrability,"TODO. Goal is all non-stretch items done by late tomorrow night/early Friday morning. Friday - Sunday testing, Cotton takes a closer look on Monday. - [x] No SQL; store user / svc / token labels (all things that need to be validated before redirect); - [x] Websockets; - [x] Service, pod definitions, makefile updates => notebook-v2 service name; - [x] Deploy notebook service, Deploy web service ( say web service name, mapping to web.hail.is ); - [x] Direct modification of gateway: check site service for breaks after each change to prevent user ; - [x] Test in cluster; - [x] Make sure Notebook v1 still works; - [ ] Stretch, and only in v3 so Feb 5 entropy minimized: asynchttp + uvloop; - [ ] Stretch ?: route by pod ip instead of svc name: DNS propagation latency significantly longer than pod instantiation time, which sucks for users, both because notebook instances will look broken when they're not, and because if we mask that the apparent latency to first useful operation is multiples of that needed. new: ; Cotton is right, mysql is adding too much complexity for the minimal use case, esp. with gevent conflicting with PyMySQL, necessitating per route handler connection. old:; Not ready to be merged, would like to improve SQL connection handling. 6a4599df5dfe0affdb5e367dd9cdc70cca59fd17 onward dependent on this. MySQL use is unoptimized because PyMySQL doesn't play well with gevent in the following way: initial impression from reading was that monkey.patch_all() before creation of global connection should result in connection spawned for each new request, or to at least private to a greenlet. Doesn't appear to be the case, plenty of connection errors. So establishing connection within each request, which is slow. . Python C library also out, because it does not play well with Python threading/greenlet/monkey patch implementations. MySQL Connector is an option, provides thread pools, but is also slowest option, by up to 10x, for small requests, like our are likely to be",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5215:710,rout,route,710,https://hail.is,https://github.com/hail-is/hail/pull/5215,1,['rout'],['route']
Integrability,Table.to_matrix_table bad error message on duplicate row keys,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4114:32,message,message,32,https://hail.is,https://github.com/hail-is/hail/issues/4114,1,['message'],['message']
Integrability,"Table? MatrixTable?. If latter, probably need IR node. Also possible to make an interface that takes a list of lists of regressions, where the inner lists are things to restrict to similar missingness",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4410:80,interface,interface,80,https://hail.is,https://github.com/hail-is/hail/issues/4410,1,['interface'],['interface']
Integrability,"Taking a look at this interface, and I think I prefer it to your other suggestion (lambda va and ga). One question: with `sm = SplitMulti(ds)` - This will now be a class modified in-place with `sm.update_rows()` rather than `sm = sm.update_rows()` (or annotate_rows)?. I ask because it's a bit different from the rest of the `ds` interface and might be a tad bit confusing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2869#issuecomment-364135133:22,interface,interface,22,https://hail.is,https://github.com/hail-is/hail/pull/2869#issuecomment-364135133,2,['interface'],['interface']
Integrability,"Td: Double,; s3B8QiAqQ: Long,; lk: Float,; S1Fo: Float,; PEcTjU8vomh: Empty,; REgY: Double,; ZUB: Variant,; b9UtO: Set[Float],; sT8o_aQ: Array[Call],; Igr1: Call,; A6ditFSwmRK: Call,; EmxV: Boolean,; a7: Struct{; JtHJhnfateR: Empty; }; }; v [ 14:1955123271-18:1272376844; , [false,null]; , 14:1256937813-17:1583114455; , 3:4546980; , 2; , Set(null, 15:1947873743, 13:866526696, 6:1573282210, 19:891774512); , GCaO16Nsy8:77911856:ATA:TG; , Set(72); , false; , [null]; , Set(F&S~b); , 7:472895707; , null; , true; , Infinity; , ./.:22,28:75:108:PL=167,0,83; , Infinity; , rdQ:630981228:T:CTA; , Map(); , -28; , 11:810964873; , RFJrknBvIH:1425413812:TAT:GC; , [[GCCAC/A]]; , 1; , qxomnU6Nqr:1347703197:G:A; , [null]; , WrappedArray(); , Map(m:190688303:C:AG -> -1.7976931348623157E308, lcg7p:2050711280:G:GATC -> 4.9E-324, DBeo6xuPH:1588993816:T:CTA -> 8.537643765112484E307); , -5599614078518791215; , 1; , null; , Map(y -> 17:750270934); , 0; , G/CATG; , -1.4729264086204403E307; , false; , WrappedArray(); , null; , -9223372036854775808; , 12.945546; , -Infinity; , null; , null; , QWxPKk:173048886:GTC:TCTT; , null; , WrappedArray(); , null; , 2; , false; , [null]; ]; ```; ```scala; t Struct{; CKkepccXC: Float,; Np: Locus,; fP8kTXty9: Double,; Qp6uH: Set[Set[Double]],; K7wSG1F3: Variant,; lLo85q: AltAllele,; v1du: Genotype; }; v [ -Infinity; , 5:2134996951; , 0.0; , Set( Set(7.482063689522203E307, -4.3155177478799624E305, -1.428773456444566E308, 9.332975286117578E307); , Set(); , null; , Set(49.15738854346134, 1.5361471805543802E308); , Set(-7.448920624629132E306, 13.921804085458959, 4.9E-324, -40.02694783286595, -54.20909301114429); , Set(-83.09343891814032, -9.62087242188959E307); , Set(1.0, -1.187010079565314E308); , Set(63.00077009047835); , Set(-1.3633961562402215E308, 1.0); , Set(12.662410481996574, 67.13193558644645); , Set(-78.81449395803094); , Set(1.7283261397633746E308, -8.611348087572712E307, -7.64522521854318E307); , Set(4.9E-324); , Set(1.0); , Set(-1.650631596617604E3",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1903:3273,Wrap,WrappedArray,3273,https://hail.is,https://github.com/hail-is/hail/pull/1903,1,['Wrap'],['WrappedArray']
Integrability,"TestNG (appears to) allocates every class in the classpath matching the package glob. I assume this is to check if any of these are `instanceof` `TestNGSuite`. The Azure SDK depends on `rector-netty-core` which includes some classes which reference interfaces *not included in its required dependencies*. These classes are meant to be used only when those optional dependencies are present. They should not be willy-nilly allocated, but, of course, we told TestNG to go willy-nilly allocating everything.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13459:174,depend,depends,174,https://hail.is,https://github.com/hail-is/hail/pull/13459,4,"['depend', 'interface']","['dependencies', 'depends', 'interfaces']"
Integrability,"TestNG Suite from JAR File Fails to Delete Temporary Copy of Suite File (Steven Jubb); Fixed: GITHUB-2818: Add configuration key for callback discrepancy behavior (Krishnan Mahadevan); Fixed: GITHUB-2819: Ability to retry a data provider in case of failures (Krishnan Mahadevan); Fixed: GITHUB-2308: StringIndexOutOfBoundsException in findClassesInPackage - Surefire/Maven - JDK 11 fails (Krishnan Mahadevan); Fixed: GITHUB:2788: TestResult.isSuccess() is TRUE when test fails due to expectedExceptions (Krishnan Mahadevan); Fixed: GITHUB-2800: Running Test Classes with Inherited <a href=""https://github.com/Factory""><code>@​Factory</code></a> and <a href=""https://github.com/DataProvider""><code>@​DataProvider</code></a> Annotated Non-Static Methods Fail (Krishnan Mahadevan); New: Ability to provide custom error message for assertThrows\expectThrows methods (Anatolii Yuzhakov); Fixed: GITHUB-2780: Use SpotBugs instead of abandoned FindBugs; Fixed: GITHUB-2801: JUnitReportReporter is too slow; Fixed: GITHUB-2807: buildStackTrace should be fail-safe (Sergey Chernov); Fixed: GITHUB-2830: TestHTMLReporter parameter toString should be fail-safe (Sergey Chernov); Fixed: GITHUB-2798: Parallel executions coupled with retry analyzer results in duplicate retry analyzer instances being created (Krishnan Mahadevan)</p>; <p>7.6.1; Fixed: GITHUB-2761: Exception: ERROR java.nio.file.NoSuchFileException: /tmp/testngXmlPathInJar-15086412835569336174 (Krishnan Mahadevan); 7.6.0; Fixed: GITHUB-2741: Show fully qualified name of the test instead of just the function name for better readability of test output.(Krishnan Mahadevan); Fixed: GITHUB-2725: Honour custom attribute values in TestNG default reports (Krishnan Mahadevan); Fixed: GITHUB-2726: <a href=""https://github.com/AfterClass""><code>@​AfterClass</code></a> config method is executed for EACH <a href=""https://github.com/Test""><code>@​Test</code></a> method when parallel == methods (Krishnan Mahadevan); Fixed: GITHUB-2752: TestListener i",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:11812,message,message,11812,https://hail.is,https://github.com/hail-is/hail/pull/12665,1,['message'],['message']
Integrability,"Tested this out by running it locally and changing `aiohttp-session` in `docker/requirements.txt` from `2.70` to `2.8.0` and got the following:. ```; + pip-compile --quiet docker/requirements.txt docker/pinned-requirements.txt --output-file=new-pinned.txt; Could not find a version that matches aiohttp-session==2.7.0,==2.8.0 (from -r docker/requirements.txt (line 4)); Tried: 0.0.1, 0.0.1, 0.1.0, 0.1.0, 0.1.1, 0.1.1, 0.1.2, 0.1.2, 0.2.0, 0.2.0, 0.3.0, 0.3.0, 0.4.0, 0.4.0, 0.5.0, 0.5.0, 0.7.0, 0.7.0, 0.7.1, 0.7.1, 0.8.0, 0.8.0, 1.0.0, 1.0.0, 1.0.1, 1.0.1, 1.1.0, 1.1.0, 1.2.0, 1.2.0, 1.2.1, 1.2.1, 2.0.0, 2.0.0, 2.0.1, 2.0.1, 2.1.0, 2.1.0, 2.2.0, 2.2.0, 2.3.0, 2.3.0, 2.4.0, 2.4.0, 2.5.1, 2.5.1, 2.6.0, 2.6.0, 2.7.0, 2.7.0, 2.8.0, 2.8.0, 2.9.0, 2.9.0, 2.10.0, 2.10.0, 2.11.0, 2.11.0; Skipped pre-versions: 2.10.0a0, 2.10.0a0; There are incompatible versions in the resolved dependencies:; aiohttp-session==2.7.0 (from -r docker/pinned-requirements.txt (line 20)); aiohttp-session==2.8.0 (from -r docker/requirements.txt (line 4)); ```. and another example where I added an unrelated pip dependency in the requirements but didn't update the lock file",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11842#issuecomment-1131987651:877,depend,dependencies,877,https://hail.is,https://github.com/hail-is/hail/pull/11842#issuecomment-1131987651,2,['depend'],"['dependencies', 'dependency']"
Integrability,"Tests are passing now. I am going to mark WIP because I want to run benchmarks on Monday before this merges. You can look whenever though. . Some things to look at:. 1. Does `ServiceTaskContext` have a notion of stages or retries, or should those also always be 0? ; 2. Some of the logic with combOps getting region pools is a little different, now depends on where combOp is running . For the most part though, PR is just refactoring to pass `RegionPool` everywhere",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9675#issuecomment-738330547:349,depend,depends,349,https://hail.is,https://github.com/hail-is/hail/pull/9675#issuecomment-738330547,1,['depend'],['depends']
Integrability,"Tests finally all pass. The boundary condition is too fragile (TContainer can be TDict, and we cannot wrap that in ToArray)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8063#issuecomment-586422358:102,wrap,wrap,102,https://hail.is,https://github.com/hail-is/hail/pull/8063#issuecomment-586422358,1,['wrap'],['wrap']
Integrability,"Tests pass. Have an adjustment to the assertPType to make the check deep on PStruct and PArray . Happy to adjust interface, add additional assertions. The todo comments will all go, just to raise a few questions I had. Also, I preferred to pass false to the constructors, instead of relying on default, because this is more explicitly indicating intentions, and defaults only auto-populate for those using IDEs. Similarly, I explicitly checked booleans, but I suspect the preference is not that. cc @cseed, @chrisvittal, @patrick-schultz, @catoverdrive",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6912:113,interface,interface,113,https://hail.is,https://github.com/hail-is/hail/pull/6912,1,['interface'],['interface']
Integrability,"Tests pushing to the cache is important. For example, if a PR adds a new apt-get dependency, only the first build should have to rebuild the image. Subsequent commits / retries should be fast.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11907#issuecomment-1152533590:81,depend,dependency,81,https://hail.is,https://github.com/hail-is/hail/pull/11907#issuecomment-1152533590,1,['depend'],['dependency']
Integrability,Thank @jbloom22 ! Hadn't seen that this had change (was `bool` back in the days). And indeed the error message did not put me on the right track :),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4033#issuecomment-408982088:103,message,message,103,https://hail.is,https://github.com/hail-is/hail/issues/4033#issuecomment-408982088,1,['message'],['message']
Integrability,"Thank you all for another round of detailed critique!. OK, I think the only remaining critical fix is to hard-code a mainclass. This is a wee bit complicated because I need to multiplex the ServiceBackendSocketAPI2 and the Worker. I hope to do this tomorrow AM. I'll then dismiss reviews. I also have a list of todos generated by this process which will feedback into some master QoB doc that integrates the two teams necessary todos.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11194#issuecomment-1033173934:393,integrat,integrates,393,https://hail.is,https://github.com/hail-is/hail/pull/11194#issuecomment-1033173934,2,['integrat'],['integrates']
Integrability,"Thanks @jmarshall for bringing this to our attention. It looks like while we updated the upper bound here, we did not update our fully-pinned requirements which we use to test in CI, so it did not catch this incompatibility. That being said, I don't think that was necessarily a mistake, because by testing our minimum-compatible-version we make sure not to introduce incompatibilities on that end of the spectrum either.. I think I don't see a good way in which we can confidently support more than one major version of a dependency at a given point in time. Even without the bokeh issue, there could easily be places in our codebase where we use pandas 1.x functionality that has been removed in 2.0. @danking thoughts on moving the pandas pin to >= the 2.x.x version that we test with and <3?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12906#issuecomment-1520406276:523,depend,dependency,523,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520406276,1,['depend'],['dependency']
Integrability,"Thanks dependabot, but we got this #10120",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10115#issuecomment-786824947:7,depend,dependabot,7,https://hail.is,https://github.com/hail-is/hail/pull/10115#issuecomment-786824947,1,['depend'],['dependabot']
Integrability,"Thanks for mentioning me, very interesting reading. You know, framework comparison is the very biased matter.; Sanic has 11,300 GitHub stars, aiohttp has only 6,900. Monthly download count is different: [4,7M for aiohttp](https://pypistats.org/packages/aiohttp) vs [60K for Sanic](https://pypistats.org/packages/sanic). ; Precise download count is a very hard thing (it misses PyPI caches, installing from Linux packages and Docker images etc. etc.) -- but you see the difference anyway. Sanic team is a champion in the library promotion, guys do their job perfectly well. Performance comparison is even harder.; Libraries have different defaults: sanic worker installs *uvloop* by default, aiohttp doesn't do it but utilizes uvloop if `uvloop.install()` was called.; Moreover, the aiohttp performance depends on how the library was installed.; It has C optimizations with Pure Python fallbacks. If Cython/GCC was not available on target machine at installation time the slow pure python code is executed.; In fact, aiohttp in optimized mode runs the same C written HTTP parser as Sanic. Sanic used to run multiple workers by default, aiohttp uses only one. On a real server it doesn't matter because usually the server is explicitly configured to run multiple web workers by gunicorn and (or) nginx config. Now Sanic switched to the single worker by default IIRC.; Anyway, looking on outdated performance comparisons in different blog posts doesn't show any useful numbers unless you re-run and check the numbers on your environment against latest (or used by you) versions. aiohttp uses standard `json` module by default, Sanic `ujson`. `ujson` is faster but it is not 100% compatible with the standard and can fall into memory dumps IIRC. You can configure aiohttp to run `ujson`, `orjson` or `rapidjson` if needed -- all speedups have own drawbacks. Very famous [Tech Empower Benchmark](https://www.techempower.com/benchmarks/#section=data-r17&hw=ph&test=fortune) demonstrates that sanic is faster",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5242#issuecomment-461299040:802,depend,depends,802,https://hail.is,https://github.com/hail-is/hail/pull/5242#issuecomment-461299040,1,['depend'],['depends']
Integrability,Thanks for reporting this. I had tried to remove our dependence on `setuptools` but had not done a good enough job clearly.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14630#issuecomment-2243322335:53,depend,dependence,53,https://hail.is,https://github.com/hail-is/hail/issues/14630#issuecomment-2243322335,2,['depend'],['dependence']
Integrability,"Thanks for the explanation! I'm happy to make the change, I was just trying to understand the difference between Host and X-Forwarded-Host a little better before first. So if I understand correctly, for the different headers:; - X-Forwarded-Proto gets passed to the router through the base https server in gateway, which sets X-Forwarded-Proto to `$scheme`, which is always going to be https since that's always going to be the protocol you're using for that server? And so when we use `$updated_scheme` for the blog server in the router's config, it's going to look at `$http_x_forwarded_proto` which will always have been set to `https` from the gateway? I'm having trouble seeing when `$http_x_forwarded_proto` would ever be absent, although if it is, isn't $scheme always `http` since all traffic from gateway to router is via http? Or am I misunderstanding how this works?; - I'm having trouble understanding the difference between `Host` and `X-Forwarded-Host`, still. As I understand it, `Host` is the name of the server that the current request is trying to reach, and `X-Forwarded-Host` is the name of the server that the original request was trying to reach? Which is why `Host` is set to `$service.internal` and `X-Forwarded-Host` is `$http_host` in the internal.hail.is server? I don't quite follow your comment about our use of `Host` being wrong, in this case; I *think* I understand what you're saying? but I'm not sure why all of our stuff is setting `Host` to `$updated_host` if that's the case, and I don't understand what's happening enough to know what happens if I change it to `proxy_set_header Host $http_host;` instead.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7381#issuecomment-548078429:266,rout,router,266,https://hail.is,https://github.com/hail-is/hail/pull/7381#issuecomment-548078429,4,"['protocol', 'rout']","['protocol', 'router']"
Integrability,"Thanks for the thoughtful review @catoverdrive!. @cseed , your review is requested of the use of TLS. @cseed , I'm also curious of your thoughts about documenting the shuffler interface. I could eventually write a README file in the package that reflects the final outcome of the dev forum posts. We could also leave the dev forum as the only documentation. What do you think?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8361#issuecomment-609933937:176,interface,interface,176,https://hail.is,https://github.com/hail-is/hail/pull/8361#issuecomment-609933937,1,['interface'],['interface']
Integrability,"Thanks for working on this!. Would it be possible to keep the logout button on every page but add a step where it takes the user to the Auth UI to make it work? Specifically, I'm thinking we could add logic to the `/user` route in `auth/auth/auth.py` such that if we pass in the query parameter `logout`, it calls the same code as the `/logout` endpoint, and then replace the `form` and `button` with something like:. ```html; <a href=""https://auth.hail.is/user?logout"">Log out</a>; ```. The tricky part of that might be getting the CSRF token, but since the `/user` page is only accessible by logged in users (because of the `authenticated_users_only` decorator), I *think* there should always be a CSRF token accessible via `request.cookies[""_csrf""]` (e.g. https://github.com/hail-is/hail/blob/main/web_common/web_common/web_common.py#L93).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14639#issuecomment-2258267657:222,rout,route,222,https://hail.is,https://github.com/hail-is/hail/pull/14639#issuecomment-2258267657,1,['rout'],['route']
Integrability,Thanks! Fix worked (I just rolled a custom jar) so don't worry about integrating immediately on my account.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2456#issuecomment-345872854:69,integrat,integrating,69,https://hail.is,https://github.com/hail-is/hail/pull/2456#issuecomment-345872854,1,['integrat'],['integrating']
Integrability,"Thanks, @tomwhite! This is great. Is there a Hive CLI equivalent of `LIKE PARQUET <file>`? I can't figure out how to get Hive to infer the schema from the Parquet file rather than specifying it explicitly. It would be awesome to be able to query the genotypes, too. It seems like we could write a SerDe (now I'm thinking ImpEx isn't so bad :)) to unpack the genotypes. Does that sound like the right approach?. On a related note, we've played with storing VDS natively as Parquet as (variant, variant annotations, array(genotype)). Even when I ported over some of the GenotypeStream encoding tricks (OD instead of DP, etc.), it was 2-3x larger (using Snappy compression vs. our internal LZ4 compression). That's disappointing, esp. when we have 30+TB datasets on the way. What's worse, simple operations like counting genotypes (`count -g`) are 5-10x in the native representation. Current master:. ```; $ hail importvcf profile225.vcf.bgz write -o profile225.vds read -i profile225.vds count -g; hail: info: timing:; importvcf: 508.829ms; write: 3m6.7s; read: 1.629s; count: 13.934s; $ du -sh profile225.vds; 2.0G profile225.vds; ```. And with the `jg_dataframe1` experimental branch, which uses native Parquet and computes the count using a UDF that computes the sum per array (fastest Parquet-based implementation we've found so far):. ```; $ hail importvcf profile225.vcf.bgz write -o profile225.vds read2 -i profile225.vds count2; hail: info: timing:; importvcf: 492.354ms; write: 5m57.1s; read2: 1.466s; count2: 1m44.1; $ du -sh profile225.vds; 5.4G profile225.vds; ```. That's 2.7x larger and >7x slower. This includes the fact that the Parquet version is only loading the GT field of the genotypes (!). This might be a non-starter for us. We'd love the flexibility and interoperability of standard Parquet. If you have other ideas about how to get Parquet close to what we currently have, I'd love to talk more.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/480#issuecomment-234027310:1776,interoperab,interoperability,1776,https://hail.is,https://github.com/hail-is/hail/pull/480#issuecomment-234027310,2,['interoperab'],['interoperability']
Integrability,"Thanks, the lsmtree dependency change unbreaks Google Dataproc compatibility so 'm tagging this high-prio.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8571#issuecomment-615334218:20,depend,dependency,20,https://hail.is,https://github.com/hail-is/hail/pull/8571#issuecomment-615334218,1,['depend'],['dependency']
Integrability,Thanks. Didn't know what the protocol was and didn't want to be pushy.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9250#issuecomment-673731776:29,protocol,protocol,29,https://hail.is,https://github.com/hail-is/hail/pull/9250#issuecomment-673731776,1,['protocol'],['protocol']
Integrability,That message is caused by returning an `int` from a Flask request handler. Looks like the endpoint is called `/test`. I don't see that in the CI logs. Can you show me on your laptop later?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5418#issuecomment-466544014:5,message,message,5,https://hail.is,https://github.com/hail-is/hail/pull/5418#issuecomment-466544014,1,['message'],['message']
Integrability,"That will get updated once this PR goes in, while the docs and the client users use (batch not pipeline anymore) will be dependent on upgrading to the next PIP release.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8453#issuecomment-612087215:121,depend,dependent,121,https://hail.is,https://github.com/hail-is/hail/pull/8453#issuecomment-612087215,1,['depend'],['dependent']
Integrability,That's a super nice interface.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2975#issuecomment-368139786:20,interface,interface,20,https://hail.is,https://github.com/hail-is/hail/pull/2975#issuecomment-368139786,1,['interface'],['interface']
Integrability,"That's all part of the same error. If you resolve the file permissions issue, then the HailContext can be successfully initialized. I'll report this confusing error message to the team.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2076#issuecomment-337918138:165,message,message,165,https://hail.is,https://github.com/hail-is/hail/issues/2076#issuecomment-337918138,1,['message'],['message']
Integrability,"That's fine for the first two comments, but please address the last comment to have the `delete_batch_azure_instances` depend on the Azure tests.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13353#issuecomment-1660786852:119,depend,depend,119,https://hail.is,https://github.com/hail-is/hail/pull/13353#issuecomment-1660786852,1,['depend'],['depend']
Integrability,"Thats a great point; ________________________________; From: Patrick Schultz ***@***.***>; Sent: Tuesday, October 4, 2022 7:27 AM; To: hail-is/hail ***@***.***>; Cc: Emma S Kelminson ***@***.***>; Author ***@***.***>; Subject: Re: [hail-is/hail] geom_boxplot (PR #11720). CAUTION: EXTERNAL SENDER. I haven't had a chance to look into this and understand how precomputed and faceting work and interact. If Iris wants to give that some thought, I'd be happy to advise. If there is a real obstruction to doing this in the current design, it would be good for both Iris and I to understand it before starting a redesign. —; Reply to this email directly, view it on GitHub<https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fhail-is%2Fhail%2Fpull%2F11720%23issuecomment-1266817118&data=05%7C01%7Cemma.kelminson001%40umb.edu%7Cf12d7220658149a9bc7a08daa5fb7ba4%7Cb97188711ee94425953c1ace1373eb38%7C0%7C0%7C638004796790915105%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=dry2ZdLcd1beO2WrdhCRT9sV0kjtFm4lKsy2nL0iqnU%3D&reserved=0>, or unsubscribe<https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FARVGM3NWM6AEALMGZIZ2WS3WBQIDVANCNFSM5SGPPZUA&data=05%7C01%7Cemma.kelminson001%40umb.edu%7Cf12d7220658149a9bc7a08daa5fb7ba4%7Cb97188711ee94425953c1ace1373eb38%7C0%7C0%7C638004796791071348%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=iR6L6EoWRp6CivnjxCyKhe%2Bjs%2FYl2p29e%2FVbCxYxgvQ%3D&reserved=0>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11720#issuecomment-1266858564:1669,Message,Message,1669,https://hail.is,https://github.com/hail-is/hail/pull/11720#issuecomment-1266858564,1,['Message'],['Message']
Integrability,"The Balding Nichols Model currently does a bunch of allocation per-variant. We can avoid a lot of this by using a random seed per-partition, instead of per-variant. Moreover, we should modify the interface of `Distribution` such that it reads:. ```scala; trait Distribution {; def setSeed(seed: Long); def sample(): Double; }; ```. And the implementations should rely directly on java.util.Random:; ```scala; class UniformDist(...) {; ...; private val rand = new java.util.Random(); def setSeed(seed: Long) {; rand.setSeed(seed); }; def sample(): Double = rand.nextDouble(minVal, maxVal); }; ```; etc. Then we can reformulate the balding nichols model with a `mapPartitions` that allocates one Distribution per partition and seeds it once. If all the partition seeds come from one master seed, then the entire process is deterministic, but only requires allocation and seeding per partition.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2314:196,interface,interface,196,https://hail.is,https://github.com/hail-is/hail/issues/2314,1,['interface'],['interface']
Integrability,"The CSS makes some strong statements about how the web browser should display it. I; removed all these statements which lets the web browser choose if it should wrap some; in-cell text, truncate the table, or expand the table. I fixed some bad formatting and removed tabs (😱) from some pages. Check my dev deploy: https://internal.hail.is/dking/batch",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8805:161,wrap,wrap,161,https://hail.is,https://github.com/hail-is/hail/pull/8805,1,['wrap'],['wrap']
Integrability,"The VDS combiner is flaky on query on batch on GCP due to issues reading VCFs with intervals. Errors observed:. - BGZ validation errors; - Unexpected end of input. Both of these point to issues in the interface between the `FSSeekableInputStream` that underpins GoogleFS and the `BGZipInputStream` that contains it at least in the presence of more than one seek. Unfortunately, the conditions that reproduce this are rare, and when our clusters are quieter (nighttime) the errors are even less frequent.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13356:201,interface,interface,201,https://hail.is,https://github.com/hail-is/hail/issues/13356,1,['interface'],['interface']
Integrability,"The Zstandard version is not changing. The zstd-jni library, which wraps Zstandard and provides some interoperation with java.nio, has released 9 times since 1.5.5-2. They do not publish a changelog, but I scanned through their commits. There were some potentially relevant bug fixes:. 1. When using array-backed ByteBuffers, zstd-jni reads the wrong data if the arrayOffset is not zero. https://github.com/luben/zstd-jni/commit/355b8511a2967d097a619047a579930cac2ccd9d. 2. Perhaps a slightly faster path for array-backed ByteBuffers. https://github.com/luben/zstd-jni/commit/100c434dfcec17a865ca2c2b844afe1046ce1b10. 3. Possibly faster buffer pool. https://github.com/luben/zstd-jni/commit/2b6c3b75012dec44f8fd2dd56dd97eea0d62f19c. 4. Removed a double free during compression. https://github.com/luben/zstd-jni/commit/b2ad3834439375b12b0fd0c0b80788a2fe94f06b",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14081:67,wrap,wraps,67,https://hail.is,https://github.com/hail-is/hail/pull/14081,1,['wrap'],['wraps']
Integrability,"The [TextInputFormat](https://hadoop.apache.org/docs/stable/api/org/apache/hadoop/mapred/TextInputFormat.html) class clearly comes from hadoop. It's no longer in the location from which we import it. We must get it from some other dependency. OK. So, before my simplification of build.gradle, we used a configuration called `compile` and another one called `testCompile`. [Neither of those exist in modern gradle, apparently](https://docs.gradle.org/current/userguide/java_library_plugin.html#sec:java_library_configurations_graph). I found a side-note about the `compile` configuration [here](https://docs.gradle.org/current/userguide/building_java_projects.html#sec:java_dependency_management_overview) (search for ""compile""):. > **Why no compile configuration?**; > The Java Library Plugin has historically used the compile configuration for dependencies that are required to both compile and run a project’s production code. It is now deprecated, and will issue warnings when used, because it doesn’t distinguish between dependencies that impact the public API of a Java library project and those that don’t. You can learn more about the importance of this distinction in [Building Java libraries](https://docs.gradle.org/current/userguide/building_java_projects.html#sec:building_java_libraries). OK, so, we used to just dump everything into our runtime dependencies. I changed it so that we have three kinds of dependencies:; 1. `shadow`: these are provided by Dataproc/QoB at run-time. They are not in any JAR. They are not on the `testRuntimeClasspath` or `runtimeClasspath`. They are on the `testCompileClasspath` because I [explicitly requested](https://github.com/hail-is/hail/blob/main/hail/build.gradle#L98) that `testCompileOnly` bring in our `shadow` dependencies.; 2. `implementation`: these are included in all class paths and in shadow JARs (but not ""thin"" jars generated by `./gradlew jar`).; 3. `testImplementation`: these are included in test class paths and in shadow JARs. Our t",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13706#issuecomment-1738232741:231,depend,dependency,231,https://hail.is,https://github.com/hail-is/hail/issues/13706#issuecomment-1738232741,4,['depend'],"['dependencies', 'dependency']"
Integrability,"The `*` means that route will be triggered for any request matching the specified URL for any method, be it GET or POST, etc. The reason I needed to make that change is that when envoy makes an authentication request to that endpoint, it uses the HTTP method of the original request. E.g. If I make a POST to https://internal.hail.is/dgoldste/batch/batches/create envoy will authenticate me with a POST request to auth:443/api/v1alpha/verify_dev_credentials. So I can't set that endpoint to be any one method.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12094#issuecomment-1282998946:19,rout,route,19,https://hail.is,https://github.com/hail-is/hail/pull/12094#issuecomment-1282998946,1,['rout'],['route']
Integrability,"The `hadoop_ls` interface has traditionally supported globbing. This improves the service backend to also support Python-style globbing. The strategy is straightforward:; 1. Break the object name into components (the bits between `/`s); 2. Find the components with glob patterns. Call these pattern-components.; 3. For each pattern-component, list the files in its `dirname`. Find entries which match the pattern-component. cc: @tpoterba @chrisvittal , y'all have a vested interest in the Query Python FS API.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11626:16,interface,interface,16,https://hail.is,https://github.com/hail-is/hail/pull/11626,1,['interface'],['interface']
Integrability,"The `log.exception` in the wrapping try/except means we log anything that raises as an error, even things like 503's and 403's from the workers which we explicitly log as info. I think we're abusing exception handling here to catch a potentially non-exceptional failure mode which is ""we couldn't schedule, we need to add back those cores"". Didn't rework things though, just pushed the exception logging in to the only chunk of code that wasn't already in a nested try/except.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11715:27,wrap,wrapping,27,https://hail.is,https://github.com/hail-is/hail/pull/11715,1,['wrap'],['wrapping']
Integrability,"The `pre-commit` hook is a little sticky because `pre-commit` installs each tool in its own isolated virtual env, which won't have the dependencies unless we tell `pre-commit` to also install all of our pinned dependencies into the pyright virtualenv. We can configure pyright to use a different virtualenv for all its dependencies, but that would require each developer specifying the name of their virtual environment in `pyproject.toml`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13437#issuecomment-1681248432:135,depend,dependencies,135,https://hail.is,https://github.com/hail-is/hail/pull/13437#issuecomment-1681248432,3,['depend'],['dependencies']
Integrability,"The code as written doesn't seem to allow this to happen. Did someone else bind to that port? It looks like it can happen if an unhandled exception occurs during docker stop or delete, in which case we free the port even though the container might still have the port open. ```; Traceback (most recent call last):; File ""/usr/local/lib/python3.6/site-packages/batch/worker.py"", line 354, in run; start_container, self.container); File ""/usr/local/lib/python3.6/site-packages/batch/worker.py"", line 94, in wrapper; return await asyncio.wait_for(f(*args, **kwargs), timeout); File ""/usr/local/lib/python3.6/asyncio/tasks.py"", line 358, in wait_for; return fut.result(); File ""/usr/local/lib/python3.6/site-packages/batch/worker.py"", line 142, in start_container; return await container.start(); File ""/usr/local/lib/python3.6/site-packages/aiodocker/containers.py"", line 170, in start; data=kwargs,; File ""/usr/local/lib/python3.6/site-packages/aiodocker/docker.py"", line 291, in __aenter__; resp = await self._coro; File ""/usr/local/lib/python3.6/site-packages/aiodocker/docker.py"", line 206, in _do_query; raise DockerError(response.status, json.loads(what.decode(""utf8""))); aiodocker.exceptions.DockerError: DockerError(500, 'driver failed programming external connectivity on endpoint batch-20376-job-59-main (8a971634c54c03a1e7df1b4255814137c92e10d310b3d47a1fe6cb7432222ed0): Error starting userland proxy: listen tcp 0.0.0.0:46572: bind: address already in use'); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8411:505,wrap,wrapper,505,https://hail.is,https://github.com/hail-is/hail/issues/8411,1,['wrap'],['wrapper']
Integrability,"The constructor to the VDS Combiner has this sanity check:; https://github.com/hail-is/hail/blob/3e0b2131eafa075e406d674c2d5e847c2f06f8cc/hail/python/hail/vds/combiner/variant_dataset_combiner.py#L226-L227. A complete combiner will not have any vdses or gvcfs present, so that sanity check will fail and the combiner will be rerun in its entirety. It is a valid state for a `VariantDatasetCombiner` to have no vdses or gvcfs (when it is done), and so the fix is straightforward, remove the sanity check. A similar one already exists in `new_combiner` and `VariantDatasetCombiner.__init__` isn't really part of the public interface. I'm undecided if we should add a different sanity check to `maybe_load_from_saved_path` to see if the final file is present if the combiner is done. Though better logging will be added to that function so that the message from the exception is logged.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14079:621,interface,interface,621,https://hail.is,https://github.com/hail-is/hail/issues/14079,2,"['interface', 'message']","['interface', 'message']"
Integrability,"The creeping expansion of the interface is on me as we tried to not break 0.1. I'd appreciate discussing in person what makes the most sense for 0.1. Here are the pieces I think we should separate for devel, though we could consider providing a meta-interface as well that combines some of them for usability. I'm writing (U, S, L) for a local matrix of eigenvectors U, an array of eigenvalues S, and an array of labels L on the rows of U (as with labels for SymmetricMatrix). 1) VDS to a (labeled) symmetric matrix (we have these: GRM, RRM, LD matrix, and Dan is working on a way to read and write them). 2) Symmetric matrix to (U, S, L), which we'll want to write and read. This modularizes the single-core eigen-decomposition bottleneck. 3) Variant-labeled (V, S, L) and VDS with those variants to transport (V, S, L) to sample-labeled (U, S, L). Currently this also requires knowing the number of samples used to make the LDMatrix since that number is used in its normalization. I agree it feels unnatural to need to remember this; to avoid it we'd need an unnormalized version. 4) Sample-labeled (U, S, L) and VDS to global fit of LMM including delta. This is currently a local computation that's been pretty fast in practice but as sample sizes increase we will want to distribute evaluating many values of delta in parallel. Note this step only uses the sample annotations on the VDS, so logically it could also be on KeyTable (which would be the sample KeyTable of the VDS). 5) Sample-labeled (U, S, L), VDS, and delta to per-variant-fit of LMM. This VDS can now contain exactly the variants one wants to fit. (5) should eventually be decomposed as well. The first command should project from Matrix to Matrix (projecting both numeric cells and a list of numeric sample annotations) and some additional small data. Then (6) will do per variant tests starting from after this projection (that is, after what is the BIG computation when you have tens of millions of variants). That way users can",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1984#issuecomment-319971210:30,interface,interface,30,https://hail.is,https://github.com/hail-is/hail/pull/1984#issuecomment-319971210,4,['interface'],['interface']
Integrability,"The current `_variants_per_file` interface isn't usable by mortals. We should have something like `hl.import_bgen('/path/to/bgen', ..., variants=ht.key)` where `ht` is a table with key locus and alleles. This can use the new index file format to get the set of variants to load. Depends on: https://github.com/hail-is/hail/issues/4018",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4019:33,interface,interface,33,https://hail.is,https://github.com/hail-is/hail/issues/4019,2,"['Depend', 'interface']","['Depends', 'interface']"
Integrability,"The current `on_cleanup` code carefully attempts to close resources in the correct order (if B depends on A, we should close B before we close A). Doing so is pretty error prone though and we have messed it up in the past, leading to noisy error logs when pods are shut down. If we instead push `.close` methods onto a stack immediately after they are initialized, the exit stack cannot be executed in the wrong order.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14172:95,depend,depends,95,https://hail.is,https://github.com/hail-is/hail/pull/14172,1,['depend'],['depends']
Integrability,"The current aggregator interface assumes copy is the same as creating a new, uninitialized aggregator of the same class. This is used when copying aggregators to have one per sample when aggregating over rows for example. It is used in `MatrixAggregateRowsByKey`, `MatrixAggregateColsByKey`, and `MatrixMapCols`. I think my `deepCopy` would result in the same functionality because the aggregator being copied is uninitialized. I would be okay with changing `deepCopy` to `copy` and removing the existing `copy` methods or renaming it to something else. @cseed Do you have thoughts on this?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3822#issuecomment-400073198:23,interface,interface,23,https://hail.is,https://github.com/hail-is/hail/pull/3822#issuecomment-400073198,1,['interface'],['interface']
Integrability,"The current implementation of `Container.delete`,; ```python; async def delete(self):; log.info(f'deleting {self}'); self.deleted_event.set(); await self.delete_container(); ```. provokes a race between the `run` task and the `delete` task. The former sees the `deleted_event`, raises and jumps to `delete_container`, so both tasks might be trying to delete the container at the same time. This races here,; ```python; if self.container_is_running():; try:; log.info(f'{self} container is still running, killing crun process'); self.process.terminate(); self.process = None; await check_exec_output('crun', 'kill', '--all', self.container_name, 'SIGTERM'); except asyncio.CancelledError:; raise; except Exception:; log.exception('while deleting container', exc_info=True). ```; where we might queue two `crun kill` calls, the second of which fails because it cannot find any such container. Calling `delete_container` from within the `delete` method is a remnant from an older implementation of deletion, before we used `deleted_event` to explicitly signal to the `run` task that it's time to wrap things up. This is no longer necessary. The simplified way to think about deletion now is:. - Calling `Container.delete` just sets an `asyncio.Event` that the container has been deleted.; - Anything in the `run` task of the container that can be interrupted by a deletion waits on that event and short circuits the run process if it is set.; - The `run` task is the only task that calls `delete_container`, and always calls it when it is done.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10714:1093,wrap,wrap,1093,https://hail.is,https://github.com/hail-is/hail/pull/10714,1,['wrap'],['wrap']
Integrability,"The decoder uses a `StagedArrayBuilder` to hold elements while being sorted. The array builder is stored in a class field. When the same decoder function is called more than once, that array builder is reused. Before this fix, the array builder was never cleared, so if the decoder function was called more than once, the array builder would still contain the elements from previously decoded dicts. Since it's highly non-obvious that you need to call `clear` immediately after `new StagedCodeBuilder`, this PR makes the constructor take a CodeBuilder, and always inserts a clear at the call site. I also took the opportunity to CodeBuilderify the rest of the interface.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13939:660,interface,interface,660,https://hail.is,https://github.com/hail-is/hail/pull/13939,1,['interface'],['interface']
Integrability,"The default options are all false. If left all false, the user gets an clear error saying that they must include at least one entry field. This forces users to think about what they actually need to import, as it can make a big difference on, say, UKBB until we have better tech. I've updated the docs and tests accordingly. @cseed suggested that we remove BGEN v1.1 support if nobody is reliant on it anymore. I've asked on Slack. So I didn't add more complexity to support these options for BGEN v1.1. Rather this PR requires GT and GP set to true if any file is 1.1 (as explained in docs and error message). If nobody minds, we can rip out BGEN 1.1 and update the docs simultaneously in a subsequent PR.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2930:601,message,message,601,https://hail.is,https://github.com/hail-is/hail/pull/2930,1,['message'],['message']
Integrability,"The dependencies are used in `project_changed.py`. That's how I broke the CI before -- I changed batch, but the CI tests weren't run because we had no notion of project dependency.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5593#issuecomment-473324852:4,depend,dependencies,4,https://hail.is,https://github.com/hail-is/hail/pull/5593#issuecomment-473324852,2,['depend'],"['dependencies', 'dependency']"
Integrability,"The design of NativeModule's handling of files (which may involve several worker threads; each trying to initialize their own NativeModule referring to the same DLL) assumed that; /bin/mv would do an atomic rename to replace an old DLL with a newer version. But on; MacOS /bin/mv is non-atomic, and leaves a window between deleting the old file and ; replacing it with the new one. I'm working on details of a more robust file-synchronization scheme, once that's ok I'll; backport it here and also address the review comments.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3973#issuecomment-408479218:427,synchroniz,synchronization,427,https://hail.is,https://github.com/hail-is/hail/pull/3973#issuecomment-408479218,1,['synchroniz'],['synchronization']
Integrability,"The doc wasn't very clear about where information lived. I had imagined that the pools and the JobPrivateInstanceManager (JPIM) owned the information. Nit: the doc doesn't say the instance monitor monitors instances, it just monitors and handles *events*. Let me be explicit: I think the doc is wrong about the monitor doing health checking because that requires it to track the instances, which I just said should be owned by the pools and the JPIM. That didn't occur to me when we were writing the doc, my apologies. I still think the monitor should:; - route events to the right pool or to the JPIM, and; - aggregate summaries up for the web UI. ---. Let me try to be more specific in my critique:. I think of the system as three layers: the top most is the driver, the middle layer is the monitor, and the bottom layer is the pool or JobPrivateInstanceManager (JPIM). I don't want control flow to go down, up, and back down again. If that happens, then we can't reason about our system as separate layers, we necessarily have to think about the middle and bottom layer together. Very specifically, this flow worries me: (instance pool) create_instance -> (instance monitor) add_instance -> adjust_for_add_instance -> (instance pool) adjust_for_add_instance. We move from low to mid *back to low*. I want information to flow in one direction: either its downward information or its upward information. ---. I'm guessing you're also concerned about code organization / code duplication. I'm not that worried about this. The JPIM and the Pool are similar things and we might inevitably produce some duplication. That's OK with me. To be honest, I think a few stand-alone functions that both of them use will eliminate any code duplication. Both pools and the JPIM will have a `name_instances` and `instance_by_last_updated`. If the duplication gets hard to manage, we might pack that up into another class like InstanceCollection. I realize this means we have several monitoring loops. I'm not very w",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9772#issuecomment-738515358:556,rout,route,556,https://hail.is,https://github.com/hail-is/hail/pull/9772#issuecomment-738515358,2,['rout'],['route']
Integrability,The docker file describes a sufficient environment to build and test hail 0.1. The Makefile wraps up Docker image production. The `hail-docs-trampoline.sh` delays the `git rev-parse` until the docs are actually built which allows `gradle downloadDependencies` to run without the `.git` folder present which allows me to cache some of the gradle dependencies once rather than per-build. `hail-ci-build-image` contains the name of a docker image in which to build and test hail 0.1. `hail-ci-build.sh` describes how to build and test hail 0.1 and populates the `artifacts` directory with the results and an index file.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4123:92,wrap,wraps,92,https://hail.is,https://github.com/hail-is/hail/pull/4123,2,"['depend', 'wrap']","['dependencies', 'wraps']"
Integrability,"The error encountered when importing multiple VCFs with different INFO fields was not a good one. This improves the situation somewhat, by making it print the types instead of the ptypes, by calling attention to the fact that the issue is likely info fields, and by adding a test of this error message. . The situation could still be improved by pushing error ids through `TableRead`, but I have not done so yet. I will save that for a future PR.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10819:294,message,message,294,https://hail.is,https://github.com/hail-is/hail/pull/10819,1,['message'],['message']
Integrability,"The error message suggests that multiple clients are writing to:; ```; gs://rwalters-hail-tmp/merged_round2_sumstats.fix_lowconf.mt/entries/rows/parts/part-15801-2fde3786-67cb-42ed-8aac-f900cfcc4c00; ```; Which is a Hail Query partition file within a matrix table. This is happening in a flush of GoogleStorageFS after we've filled up the local byte buffer. I don't think this is 0.2.114 because the line numbers don't line up. This appears to be before our recent changes to handle requester pays. A couple thoughts:; 1. We retryTransientErrors on the entire partition. What happens if a partition fails and we automatically retry it? Does the generated code clean up all the output streams when an exception occurs? If not, it's possible that there's still an open connection to GCS when we re-run the partition's generated code gain.; 2. Hail Batch guarantees at least once execution of a job. It's possible that two distinct workers are executing the partition's generated code. Does the Hail Query generated code create a distinct file name for each execution? (I think the answer is yes.)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1530268410:10,message,message,10,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1530268410,1,['message'],['message']
Integrability,"The error message you get is this:; ```; Error from server (BadRequest): a container name must be specified for pod blog-0, choose one of: [nginx blog]; ```. This option is described in `kubectl logs --help` as:; > --all-containers=false: Get all containers logs in the pod(s).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8494:10,message,message,10,https://hail.is,https://github.com/hail-is/hail/pull/8494,1,['message'],['message']
Integrability,"The error, some resources are missing. . {""levelname"": ""ERROR"", ""asctime"": ""2019-09-29 03:43:05,260"", ""filename"": ""web_protocol.py"", ""funcNameAndLine"": ""log_exception:355"", ""message"": ""Error handling request"", ""exc_info"": ""Traceback (most recent call last):\n File \""/usr/local/lib/python3.6/dist-packages/aiohttp/web_protocol.py\"", line 418, in start\n resp = await task\n File \""/usr/local/lib/python3.6/dist-packages/aiohttp/web_app.py\"", line 458, in _handle\n resp = await handler(request)\n File \""/usr/local/lib/python3.6/dist-packages/aiohttp/web_middlewares.py\"", line 119, in impl\n return await handler(request)\n File \""/usr/local/lib/python3.6/dist-packages/aiohttp/web_middlewares.py\"", line 119, in impl\n return await handler(request)\n File \""/usr/local/lib/python3.6/dist-packages/aiohttp/web_middlewares.py\"", line 119, in impl\n return await handler(request)\n File \""/usr/local/lib/python3.6/dist-packages/aiohttp_session/__init__.py\"", line 152, in factory\n response = await handler(request)\n File \""/usr/local/lib/python3.6/dist-packages/gear/csrf.py\"", line 20, in wrapped\n return await fun(request, *args, **kwargs)\n File \""/usr/local/lib/python3.6/dist-packages/gear/auth.py\"", line 77, in wrapped\n return await fun(request, userdata, *args, **kwargs)\n File \""/usr/local/lib/python3.6/dist-packages/notebook/notebook.py\"", line 417, in post_notebook\n return await _post_notebook('notebook', request, userdata)\n File \""/usr/local/lib/python3.6/dist-packages/notebook/notebook.py\"", line 278, in _post_notebook\n pod = await start_pod(k8s, service, userdata, notebook_token, jupyter_token)\n File \""/usr/local/lib/python3.6/dist-packages/notebook/notebook.py\"", line 167, in start_pod\n _request_timeout=KUBERNETES_TIMEOUT_IN_SECONDS)\n File \""/usr/local/lib/python3.6/dist-packages/kubernetes_asyncio/client/api_client.py\"", line 166, in __call_api\n _request_timeout=_request_timeout)\n File \""/usr/local/lib/python3.6/dist-packages/kubernetes_asyncio/client/rest.py\",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7145#issuecomment-536245851:174,message,message,174,https://hail.is,https://github.com/hail-is/hail/pull/7145#issuecomment-536245851,1,['message'],['message']
Integrability,"The errors look like this:; ```; {""levelname"": ""INFO"", ""asctime"": ""2019-07-02 13:36:45,504"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1074"", ""message"": ""update job (278, 6858, 'main') with pod batch-278-job-6858-5879db""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-02 13:36:45,504"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1087"", ""message"": ""job (278, 6858, 'main') mark complete""}; File ""/usr/local/lib/python3.6/dist-packages/batch/k8s.py"", line 65, in wrapped; **kwargs),; File ""/usr/local/lib/python3.6/dist-packages/batch/blocking_to_async.py"", line 6, in blocking_to_async; thread_pool, lambda: fun(*args, **kwargs)); File ""/usr/lib/python3.6/concurrent/futures/thread.py"", line 56, in run; result = self.fn(*self.args, **self.kwargs); File ""/usr/local/lib/python3.6/dist-packages/batch/blocking_to_async.py"", line 6, in <lambda>; thread_pool, lambda: fun(*args, **kwargs)); File ""/usr/local/lib/python3.6/dist-packages/kubernetes/client/apis/core_v1_api.py"", line 18538, in read_namespaced_pod_log; (data) = self.read_namespaced_pod_log_with_http_info(name, namespace, **kwargs); File ""/usr/local/lib/python3.6/dist-packages/kubernetes/client/apis/core_v1_api.py"", line 18644, in read_namespaced_pod_log_with_http_info; collection_formats=collection_formats); File ""/usr/local/lib/python3.6/dist-packages/kubernetes/client/api_client.py"", line 334, in call_api; _return_http_data_only, collection_formats, _preload_content, _request_timeout); File ""/usr/local/lib/python3.6/dist-packages/kubernetes/client/api_client.py"", line 168, in __call_api; _request_timeout=_request_timeout); File ""/usr/local/lib/python3.6/dist-packages/kubernetes/client/api_client.py"", line 355, in request; headers=headers); File ""/usr/local/lib/python3.6/dist-packages/kubernetes/client/rest.py"", line 231, in GET; query_params=query_params); File ""/usr/local/lib/python3.6/dist-packages/kubernetes/client/rest.py"", line 222, in request; raise ApiException(http_resp=r);",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6545:165,message,message,165,https://hail.is,https://github.com/hail-is/hail/issues/6545,3,"['message', 'wrap']","['message', 'wrapped']"
Integrability,The exception message will now have the metadata path to more easily; assist in diagnosing issues.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9514:14,message,message,14,https://hail.is,https://github.com/hail-is/hail/pull/9514,1,['message'],['message']
Integrability,"The failure doesn't appear to be related to my changes. Installing the docker requirements, which has `setuptools>=38.6.0`, is trying to upgrade to the latest setuptools (56.0.0). Another dependency might be forcing the upgrade. However, setuptools was installed via apt, not pip, and that is causing this:. ```; Attempting uninstall: setuptools; Found existing installation: setuptools 45.2.0; Not uninstalling setuptools at /usr/lib/python3/dist-packages, outside environment /usr; Can't uninstall 'setuptools'. No files were found to uninstall.; ```. So there's two things I don't understand. I'll keep investigating. I glad I PRed this separately!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10349#issuecomment-824092733:188,depend,dependency,188,https://hail.is,https://github.com/hail-is/hail/pull/10349#issuecomment-824092733,1,['depend'],['dependency']
Integrability,"The image _BUILT target didn't depend on everything in the folders. I don't know how to make it work. `%` doesn't seem to get substituted inside a Make `$(...)` command, so I don't know how to `find` all the dependencies. I just made it always run `docker`. I renamed the hail image because I use `hail` locally for an image that doesn't contain a notebook. It's just hail installed in ubuntu. The `--ip` is apparently necessary for python2 Jupyter Notebook (which is used by the isia image).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7045:31,depend,depend,31,https://hail.is,https://github.com/hail-is/hail/pull/7045,2,['depend'],"['depend', 'dependencies']"
Integrability,The improved error message isn't working because we catch TypeError instead of ExpressionException,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13280#issuecomment-1646024467:19,message,message,19,https://hail.is,https://github.com/hail-is/hail/issues/13280#issuecomment-1646024467,1,['message'],['message']
Integrability,"The integration test is failing. Otherwise, looks good.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1572#issuecomment-287900602:4,integrat,integration,4,https://hail.is,https://github.com/hail-is/hail/pull/1572#issuecomment-287900602,1,['integrat'],['integration']
Integrability,"The interface needs some work, first, but this is probably a ~3 month timeline (the outstanding calls into java are for things like maximal_independent_set, the BlockMatrix linear algebra stuff, and a few utility functions). I'm also happy to take PRs now to change the java.util.HashMaps to java.util.Map",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5340#issuecomment-463827896:4,interface,interface,4,https://hail.is,https://github.com/hail-is/hail/issues/5340#issuecomment-463827896,1,['interface'],['interface']
Integrability,The interfaces are `newStaticField` and `newStaticMethod` on (Emit)ClassBuilder. The first; usage of this feature is to move the `FS` off of the class itself and onto a container class.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9044:4,interface,interfaces,4,https://hail.is,https://github.com/hail-is/hail/pull/9044,1,['interface'],['interfaces']
Integrability,The invalid grant error below this line is wrapped in a `StorageException`. We want to open up these wrapping exceptions to see if there's a true error underneath.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11963:43,wrap,wrapped,43,https://hail.is,https://github.com/hail-is/hail/pull/11963,2,['wrap'],"['wrapped', 'wrapping']"
Integrability,"The issue is `j.wait()` will trigger when the job is complete which is set before the callback occurs. However, even if we change the order `set_state` and `callback` are called (change in interface), there's still the possibility that the callback won't complete before the wait is terminated. Therefore, the correct solution should wait for `d` to be non-empty with a timeout.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5817#issuecomment-482597121:189,interface,interface,189,https://hail.is,https://github.com/hail-is/hail/issues/5817#issuecomment-482597121,1,['interface'],['interface']
Integrability,"The issue seems to be that ci's `/refresh_batch_state` POST route broke. ```; INFO	| 2019-03-02 16:16:17,392 	| ci.py 	| <lambda>:409 | 127.0.0.1 ""POST /refresh_batch_state HTTP/1.1"" 500 -; ERROR	| 2019-03-02 16:16:17,394 	| ci.py 	| polling_event_loop:400 | Could not poll due to exception: 500 Server Error: INTERNAL SERVER ERROR for url: http://127.0.0.1:5000/refresh_batch_state; ```. edit:. These appear to be the relevant parts of the stack trace:. ```; File ""/hail-ci/ci/ci.py"", line 144, in refresh_batch_state; jobs = batch_client.list_jobs(); File ""/home/hail-ci/.local/lib/python3.7/site-packages/batch/client.py"", line 202, in list_jobs; jobs = self.api.list_jobs(self.url); File ""/home/hail-ci/.local/lib/python3.7/site-packages/batch/api.py"", line 41, in list_jobs; response = requests.get(url + '/jobs', timeout=self.timeout). #... requests.exceptions.ReadTimeout: HTTPConnectionPool(host='batch.default', port=80): Read timed out. (read timeout=5); ```. The batch /jobs endpoint appears to be having an issue?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5503#issuecomment-468934883:60,rout,route,60,https://hail.is,https://github.com/hail-is/hail/pull/5503#issuecomment-468934883,1,['rout'],['route']
Integrability,"The lock file is auto-generated. There isn't any need to review its contents; it matches the dependency tree for the packages/versions specified in package.json. Committing it allows all future users to follow the same dependency graph during installation. Ref: https://docs.npmjs.com/files/package-lock.json , https://stackoverflow.com/questions/44297803/package-lock-json-role; - Counter-argument: https://github.com/npm/npm/issues/20603. We can accept this PR first, to make the dependent PR small.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5362:93,depend,dependency,93,https://hail.is,https://github.com/hail-is/hail/pull/5362,3,['depend'],"['dependency', 'dependent']"
Integrability,"The logic trying to infer the version of various Spark dependencies; was total garbage and almost certainly except for a few specific; cases. I was feeling aggressive. I nuked it. If we want to support; building with other versions of Spark reliably (whcih we don't test)`,; we should find another way.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8676:55,depend,dependencies,55,https://hail.is,https://github.com/hail-is/hail/pull/8676,1,['depend'],['dependencies']
Integrability,"The main change is to the communication protocol between the client and; the driver and between the driver and the worker. In main, both the driver and the client send messages back to the client; and driver (respectively) by writing to a file in cloud storage. In both; cases, the file (in main) has one of these two structures:. 0x00 # is_success (False); UTF-8 encoded string # the stack trace. 0x01 # is_success (True); UTF-8 encoded string # JSON message to send back to the client or driver. In this PR, the success case does not change. The failure case becomes:. 0x00 # is_sucess (False); UTF-8 encoded string # short message; UTF-8 encoded string # expanded message; 4-byte signed integer # error id. The Python client (in `service_backend.py`) and the Driver (in; `ServiceBackendSocketAPI2`) changes to read this and raise the right error if; an error id is present. I also uncovered three unrelated problems that are fixed in this PR:; 1. PlinkVariant needs to be serializable because it is broadcasted.; 2. We open an input stream in LoadPlink which ought to be closed, but there is no mechanism to do so in the ServiceBackend. I just ignore it for now. cc: @tpoterba, I'm not sure what the right answer is here.; 3. Two uses of the broadcasted file system that should use the ExecuteContext's file system.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11624:40,protocol,protocol,40,https://hail.is,https://github.com/hail-is/hail/pull/11624,5,"['message', 'protocol']","['message', 'messages', 'protocol']"
Integrability,"The main goal here was to flatten out the aggregator states in the tuple of aggregator states, so that we could e.g. inline the value of a prevnonnull aggregator instead of storing a pointer to the state. The big change that I made was in creating a `TupleAggregatorState` that knows its own offset so that when we initialize a state, we can initialize the value offset directly from the value of the container. (The previous StateContainer got renamed `StateTuple` and was slimmed down accordingly.) I think I eventually want `TupleAggregatorState` to implement the `AggregatorState` interface; I haven't pushed it there yet because I haven't needed to, but I think it would fit a lot better.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7110:585,interface,interface,585,https://hail.is,https://github.com/hail-is/hail/pull/7110,1,['interface'],['interface']
Integrability,"The main issue is that `nth-child-of` still sees the hidden elements. We can instead; use `nth-of-type` and wrap hidden `tr`s in a `div`. Because the `div` is not a `tr`,; it does not appear as part of the `nth-of-type` calculation. The content is still; present on the page, so we can restore it by removing the `display: none` div.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8818:108,wrap,wrap,108,https://hail.is,https://github.com/hail-is/hail/pull/8818,1,['wrap'],['wrap']
Integrability,The map* functions can probably be deleted. I don't think folds are used anymore. We grab `rdd` a lot. Is that because our API is bad or because additional API isn't necessary because the RDD interface is good?,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1067:192,interface,interface,192,https://hail.is,https://github.com/hail-is/hail/issues/1067,1,['interface'],['interface']
Integrability,"The need to supply the region when reading objects via a pointer irked me. It turns out the only reason we do this is to determine whether or not we need to deep copy objects when copying to a region that may or may not be the same as the old region. It seemed to me perfectly reasonable to ask a region if it allocated an object rather than carry around an extra reference so I drafted this change, dependent on such a change not impacting performance too dramatically.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13881:400,depend,dependent,400,https://hail.is,https://github.com/hail-is/hail/pull/13881,1,['depend'],['dependent']
Integrability,The old `Table.index` used the `RDD` route which forced a shuffle because all partitioning information was lost. I exposed `zipWithIndex` on `RVD` and used it in both MatrixTable and Table.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3774:37,rout,route,37,https://hail.is,https://github.com/hail-is/hail/pull/3774,1,['rout'],['route']
Integrability,The old error message for matmul was impossible to read. This is much clearer.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10298:14,message,message,14,https://hail.is,https://github.com/hail-is/hail/pull/10298,1,['message'],['message']
Integrability,"The original problem we were seeing was this error message:. ```; Unclosed client session; client_session: <aiohttp.client.ClientSession object at 0x7fe17e8c4bd0>; Traceback (most recent call last):; File ""/usr/local/lib/python3.7/runpy.py"", line 193, in _run_module_as_main; ""__main__"", mod_spec); File ""/usr/local/lib/python3.7/runpy.py"", line 85, in _run_code; exec(code, run_globals); File ""/usr/local/lib/python3.7/site-packages/batch/copy/__main__.py"", line 34, in <module>; asyncio.run(main()); File ""/usr/local/lib/python3.7/asyncio/runners.py"", line 43, in run; return loop.run_until_complete(main); File ""/usr/local/lib/python3.7/asyncio/base_events.py"", line 587, in run_until_complete; return future.result(); concurrent.futures._base.CancelledError; sys:1: RuntimeWarning: coroutine 'retry_transient_errors' was never awaited; RuntimeWarning: Enable tracemalloc to get the object allocation traceback; ```. I'm not sure why we didn't get a better error message from the ThreadPoolExecutor, but this fix definitely solves the OOM issue. We were assuming `close` in Python means the entire write has completed, but that's not true. `close` just means the file handle in Python has been closed, but the data is still stored in the kernel's write buffer until it gets a chance to have written the data. When the pd-ssds were slow (either network bandwidth or ext3/4 is slow) and we're trying to write a lot of data, this meant we were building up lots of data in the write buffer for previously ""completed"" tasks and the semaphore was not doing its job to limit the number of ""active"" tasks to 50. There may still be another error here that we're not retrying, but I wasn't able to replicate the bug after making this fix with 5 replicas of downloading 80 Gi x 8 jobs per node.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10591:51,message,message,51,https://hail.is,https://github.com/hail-is/hail/pull/10591,2,['message'],['message']
Integrability,"The point of setting the following values at the end of fit() is so they won't be mutated by further calls to `compute_neg_log_lkhd`:. ```; self._residual_sq = self.sigma_sq * self._dof; self._d_alt = self._d; self._ydy_alt = self._ydy; self._xdy_alt[1:] = self._xdy; self._xdx_alt[1:, 1:] = self._xdx; ```. But when I added `h_sq_standard_error` above them, it introduced a very subtle bug by calling `compute_neg_log_lkhd` at a value `1e-4` to the right of the fit `log_gamma`. This caused both the scala and python routes to use the value of `self._residual_sq` at `log_gamma` but the value of `self._d_alt` and the rest at `log_gamma + 1e-4`. So these two routes remained consistent, but sometimes the alternate residual was coming up greater than the null residual, resulting in negative chi_sq stat. The modified tests catch this.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4180:518,rout,routes,518,https://hail.is,https://github.com/hail-is/hail/pull/4180,2,['rout'],['routes']
Integrability,The previous checks for `pod is None` were intended to catch this case. We're not sure why this happens. By including the pod in the message we hope to understand the cause of nameless pods.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6508:133,message,message,133,https://hail.is,https://github.com/hail-is/hail/pull/6508,1,['message'],['message']
Integrability,"The problem I saw was this:. ToStream's invariant is that its children must be TIterable. Given this invariant, in boundary it is not safe to call ToArray on streamified when streamified.isInstanceOf[TStream] and node.typ.isInstanceOf[TArray], because this will miss cases (potentially) when node is a different TIterable, and likewise it is not safe to call ToArray on streamified when node.typ.isInstanceOf[TIterable], because we may inadvertently cast a non-array TIterable to TArray, and thereby break boundary's type invariance. So everywhere that we add a ToStream, we need to perform a check on the child: if it's a non-TArray TIterable, return it, else wrap in ToArray, unless we can be sure we never perform said wrap on a TIterable when streamify is called from boundary. . In the latest commit, I simplified the toStream code, and improved the type check to check not TContainer, but (TIterable && !TStream). This is more precise that checking TContainer alone. That being said I haven't created a convincing test yet (though it's trivially easy to make *a* test: pass a ToStream wrapping a node with typ TDict to boundary, with the old check on boundary, and a TIterable check-before-wrap-in-ToStream in the base case of streamify). However, I don't think we can avoid the condition you don't like in `boundary` without changing ToStream's child-type invariant to TArray.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8063#issuecomment-586553403:661,wrap,wrap,661,https://hail.is,https://github.com/hail-is/hail/pull/8063#issuecomment-586553403,8,['wrap'],"['wrap', 'wrap-in-ToStream', 'wrapping']"
Integrability,"The problem is the exception we actually get tells us no information about the problem other than it is Forbidden. aiohttp.client_exceptions.ClientResponseError: 403, message='Forbidden', url=URL('https://compute.googleapis.com/compute/v1/projects/hail-vdc/zones/us-central1-a/instances/batch-worker-default-highmem-40e6w/detachDisk?deviceName=batch-disk-be5253d5361d45118350&requestId=130727e3-f96c-4f3a-ac86-1df585bc4e1c'",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10432#issuecomment-833643845:167,message,message,167,https://hail.is,https://github.com/hail-is/hail/pull/10432#issuecomment-833643845,1,['message'],['message']
Integrability,The proxy should propagate an existing forwarded protocol and; host if either exists. See the definition of `$updated_...` in; `nginx.conf`. Revert blog to standard proxy rules now that proxy rules are correct.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8116:49,protocol,protocol,49,https://hail.is,https://github.com/hail-is/hail/pull/8116,1,['protocol'],['protocol']
Integrability,"The python ones. I didn't actually read the diff because I was on my phone, just saw ""remove ndarraywrite tesr"" commit message. Thanks",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7002#issuecomment-528642262:119,message,message,119,https://hail.is,https://github.com/hail-is/hail/pull/7002#issuecomment-528642262,1,['message'],['message']
Integrability,"The python/scala interface should be the same, I agree with Jon",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1768#issuecomment-299478117:17,interface,interface,17,https://hail.is,https://github.com/hail-is/hail/pull/1768#issuecomment-299478117,1,['interface'],['interface']
Integrability,"The real issue here is that `mt2`'s `af` field is not from the same object as `mt`, but the error message is really misleading, it moves your focus to the `mt.GT.n_alt_alleles()` which is actually fine. ```; In [13]: import hail as hl ; ...: mt = hl.balding_nichols_model(2, 5, 5) ; ...: mt2 = hl.balding_nichols_model(2, 5, 5) ; ...: mt = mt.annotate_entries(x = mt.GT.n_alt_alleles() * mt2.af) ; Initializing Hail with default parameters...; 2020-07-28 10:40:36 WARN Utils:66 - Your hostname, wm06b-953 resolves to a loopback address: 127.0.0.1; using 192.168.0.54 instead (on interface en0); 2020-07-28 10:40:36 WARN Utils:66 - Set SPARK_LOCAL_IP if you need to bind to another address; 2020-07-28 10:40:37 WARN NativeCodeLoader:62 - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; 2020-07-28 10:40:37 WARN Hail:37 - This Hail JAR was compiled for Spark 2.4.5, running with Spark 2.4.1.; Compatibility is not guaranteed.; Running on Apache Spark version 2.4.1; SparkUI available at http://192.168.0.54:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.49-c6975678edc4; LOGGING: writing to /Users/dking/projects/hail/hail/hail-20200728-1040-0.2.49-c6975678edc4.log; 2020-07-28 10:40:39 Hail: INFO: balding_nichols_model: generating genotypes for 2 populations, 5 samples, and 5 variants...; 2020-07-28 10:40:39 Hail: INFO: balding_nichols_model: generating genotypes for 2 populations, 5 samples, and 5 variants...; Traceback (most recent call last):; File ""<ipython-input-13-f638f6c0399a>"", line 4, in <module>; mt = mt.annotate_entries(x = mt.GT.n_alt_alleles() * mt2.af); File ""/Users/dking/projects/hail/hail/python/hail/expr/expressions/typed_expressions.py"", line 1988, in __mul__; return self._bin_op_numeric(""*"", other); File ""/Users/dking/projects/hail/hail/py",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9163:98,message,message,98,https://hail.is,https://github.com/hail-is/hail/issues/9163,2,"['interface', 'message']","['interface', 'message']"
Integrability,The repository in question was created at `2018-10-10T00:32:59Z`. GitHub indicates [no system failures](https://status.github.com/messages) on October the tenth or the ninth.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429026782:130,message,messages,130,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429026782,1,['message'],['messages']
Integrability,"The root issue here was that sometimes exc.args[0] was a string and sometimes it was a dict. When it was a string the `in` condition worked fine. When it was a dict, it was looking at the keys of the dict and not finding the error message (which is buried under a few layers). The code was unnecessarily complex. I reworked the yaml printer to be simpler and work for any multiline string. I removed the regular expression that was used to discover the worker batch when the worker jobs were in a different batch from the driver jobs. I remove all specialized debugging information in favor of the general `debug_info` methods on `Batch` and `ServiceBackend`. I also have two clear error cases: if the driver does not write its output file, then something went horribly wrong. We dump all the debug info. If we do not receive valid JSON from the driver, again, something went horribly wrong. We dump all the debug info. The only remaining exceptional case is an error purposely serialized by the QoB driver to us (with or without an error id). In particular, note that we now completely ignore the number of failing or successful jobs. That doesn't matter. If the driver sends us an output file, we use the data found there. If the driver does not send us an output file or sends us an output file without valid JSON, we dump as much debug info as possible. cc: @tpoterba for visibility on your end; cc: @iris-garden because you're in this space (albeit, the bug you're fixing is in the QoB *driver* whereas this is the *client* [nb: *client* is the Python code which starts a batch with a *driver*. A *driver* adds zero or more *worker* jobs to its batch. You're addressing an issue with how the *driver* handles errors from the *workers*. This PR simplifies the logic for how the *client* handles errors from the *driver*.]).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470:231,message,message,231,https://hail.is,https://github.com/hail-is/hail/pull/12470,1,['message'],['message']
Integrability,"The router resolver incorrectly assumed the contents of the `Authorization` header was a session; id. In fact, the structure of that header and X-Hail-Internal-Authorization is:. ```; Bearer SESSION_ID; ```. where `SESSION_ID` is a 44 base64 characters representing a 32 byte secret session id. I also took this opportunity to centralize the parsing of bearer headers as; `gear.maybe_parse_bearer_header`. ---. This caused a failure because router-resolver, when checking that a user is properly authenticated,; would send:. ```; Bearer Bearer SESSION_ID; ```. which failed the 44-byte length check in auth/front_end.py.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9919:4,rout,router,4,https://hail.is,https://github.com/hail-is/hail/pull/9919,2,['rout'],"['router', 'router-resolver']"
Integrability,"The search bar for the batch docs is broken and just says `Searching…` forever. Tracked it down to a bug in the `sphinx_rtd_theme` dependency that was fixed in a later release. The important files to look at are the `requirements.txt` files not the `pinned-requirements.txt` files as the latter bulk updated a bunch of patch releases when I regenerated them. . In the mess of version conflicts that updating a dependency appears to do here, I also removed `google-cloud-logging` as it appears to be an unused dependency and `pre-commit` because it is optional for developers and had a hard requirement on a `importlib-metadata` version that made it incompatible with other important libraries that we use. I also explicitly pinned `protobuf` as a major version upgrade that wasn't restricted by some google libraries we use broke those same google libraries that added that dependency.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12215:131,depend,dependency,131,https://hail.is,https://github.com/hail-is/hail/pull/12215,4,['depend'],['dependency']
Integrability,"The serial deployment of auth and batch can lengthen the critical path of CI pipelines by a few minutes if k8s needs to spin up new nodes. While auth is necessary for batch to function correctly, it's not necessary to deploy batch, so I think it's more appropriate to not have `deploy_batch` depend on `deploy_auth` but have anything that depends on `deploy_batch` also depend on `deploy_auth`. There's already a precedent for this in that the service backend tests depend on `deploy_batch` and `deploy_memory` as opposed to `deploy_batch` being dependent on `deploy_memory`. I also removed the dependency of `upload_query_jar` on `deploy_batch`, no idea why that was there, but maybe it should be the other way around?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12354:292,depend,depend,292,https://hail.is,https://github.com/hail-is/hail/pull/12354,6,['depend'],"['depend', 'dependency', 'dependent', 'depends']"
Integrability,The shadow jar file was newer than its dependencies so Make assumed it was good to go. The Make-Way TM would be to make the output of gradle an intermediate step which is then copied to a new file by the jar modification.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9667#issuecomment-722646751:39,depend,dependencies,39,https://hail.is,https://github.com/hail-is/hail/pull/9667#issuecomment-722646751,1,['depend'],['dependencies']
Integrability,"The specialization creates mangled class files, and having just one implementation makes it much easier to reason about the interfaces. I think we can add support for all the numeric types back once we've gotten rid of the old agg path, if anyone cares enough to do that.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7529#issuecomment-554389306:124,interface,interfaces,124,https://hail.is,https://github.com/hail-is/hail/pull/7529#issuecomment-554389306,1,['interface'],['interfaces']
Integrability,"The stack trace reported:. ```; [Stage 7:> (0 + 132) / 194]Traceback (most recent call last):; File ""/tmp/b54eac62-9ebc-43ff-b49c-80cc77f89aa2/genomes_sites_vcf.py"", line 42, in <module>; sites_vds.write(tmp_vds); File ""/home/teamcity/TeamCityAgent2/work/591c293e3f6bfb1d/python/pyhail/dataset.py"", line 595, in write; File ""/tmp/b54eac62-9ebc-43ff-b49c-80cc77f89aa2/utils.py"", line 211, in run_command; cmd_args); File ""/usr/lib/spark/python/lib/py4j-0.10.3-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/usr/lib/spark/python/lib/pyspark.zip/pyspark/sql/utils.py"", line 63, in deco; for criterion, pop in criteria_pops:; File ""/usr/lib/spark/python/lib/py4j-0.10.3-src.zip/py4j/protocol.py"", line 319, in get_return_value; py4j.protocol.Py4JJavaError: An error occurred while calling o309.run.; : org.apache.spark.SparkException: Job aborted.; 	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand$$anonfun$run$1.apply$mcV$sp(InsertIntoHadoopFsRelationCommand.scala:149); 	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand$$anonfun$run$1.apply(InsertIntoHadoopFsRelationCommand.scala:115); 	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand$$anonfun$run$1.apply(InsertIntoHadoopFsRelationCommand.scala:115); 	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:57); 	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.run(InsertIntoHadoopFsRelationCommand.scala:115); 	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:58); 	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:56); 	at org.apache.spark.sql.execution.command.ExecutedCommandExec.doExecute(commands.scala:74); 	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:115); 	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(S",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1202:694,protocol,protocol,694,https://hail.is,https://github.com/hail-is/hail/issues/1202,2,['protocol'],['protocol']
Integrability,"The status parameter was being set as the scratch parameter. https://github.com/hail-is/hail/pull/5418 introduced another constructor parameter before `_status`, changing the meaning of the fifth argument. CI is currently broken as a result. I'm going to force merge this and manually re-deploy CI and batch. I'll follow up with a commit that enforced inter-project dependencies.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5462:366,depend,dependencies,366,https://hail.is,https://github.com/hail-is/hail/pull/5462,1,['depend'],['dependencies']
Integrability,The suppressed message is:; ```; 	Suppressed: java.lang.Exception: #block terminated with an error; 		at is.hail.shadedazure.reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:99); 		at is.hail.shadedazure.reactor.core.publisher.Mono.block(Mono.java:1742); 		at is.hail.shadedazure.com.azure.storage.common.implementation.StorageImplUtils.blockWithOptionalTimeout(StorageImplUtils.java:133); 		at is.hail.shadedazure.com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse(BlobClientBase.java:1379); 		at is.hail.shadedazure.com.azure.storage.blob.specialized.BlobClientBase.getProperties(BlobClientBase.java:1348); 		at is.hail.io.fs.AzureStorageFS.$anonfun$openNoCompression$1(AzureStorageFS.scala:223); 		at is.hail.io.fs.AzureStorageFS.$anonfun$handlePublicAccessError$1(AzureStorageFS.scala:175); 		at is.hail.services.package$.retryTransientErrors(package.scala:124); 		at is.hail.io.fs.AzureStorageFS.handlePublicAccessError(AzureStorageFS.scala:174); 		at is.hail.io.fs.AzureStorageFS.openNoCompression(AzureStorageFS.scala:220); 		at is.hail.io.fs.RouterFS.openNoCompression(RouterFS.scala:20); 		at is.hail.io.fs.FS.openNoCompression(FS.scala:322); 		at is.hail.io.fs.FS.openNoCompression$(FS.scala:322); 		at is.hail.io.fs.RouterFS.openNoCompression(RouterFS.scala:3); 		at is.hail.backend.service.ServiceBackendSocketAPI2$.$anonfun$main$3(ServiceBackend.scala:459); 		at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 		at is.hail.services.package$.retryTransientErrors(package.scala:124); 		at is.hail.backend.service.ServiceBackendSocketAPI2$.main(ServiceBackend.scala:459); 		at is.hail.backend.service.Main$.main(Main.scala:15); 		at is.hail.backend.service.Main.main(Main.scala); 		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodA,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13032#issuecomment-1542906430:15,message,message,15,https://hail.is,https://github.com/hail-is/hail/pull/13032#issuecomment-1542906430,1,['message'],['message']
Integrability,"The test `testMatrixUnionRowsMemo` is still failing with this change. The error that I am seeing is:; ```; java.util.NoSuchElementException: key not found: RefEquality(MatrixMapRows(MatrixMapRows(MatrixLiteral(...),InsertFields(SelectFields(Ref(va,struct{rk: int32, r2: struct{x: int32}, r3: array<struct{rr: int32}>, `the entries! [877f12a8827e18f61222c6c8c5fb04a8]`: array<struct{e1: float64, e2: float64}>}),WrappedArray(rk, r2, r3)),List((the entries! [877f12a8827e18f61222c6c8c5fb04a8],GetField(Ref(va,struct{rk: int32, r2: struct{x: int32}, r3: array<struct{rr: int32}>, `the entries! [877f12a8827e18f61222c6c8c5fb04a8]`: array<struct{e1: float64, e2: float64}>}),the entries! [877f12a8827e18f61222c6c8c5fb04a8]))))),InsertFields(SelectFields(Ref(va,struct{rk: int32, r2: struct{x: int32}, r3: array<struct{rr: int32}>, `the entries! [877f12a8827e18f61222c6c8c5fb04a8]`: array<struct{e1: float64, e2: float64}>}),WrappedArray(rk, r2, r3)),List((the entries! [877f12a8827e18f61222c6c8c5fb04a8],GetField(Ref(va,struct{rk: int32, r2: struct{x: int32}, r3: array<struct{rr: int32}>, `the entries! [877f12a8827e18f61222c6c8c5fb04a8]`: array<struct{e1: float64, e2: float64}>}),the entries! [877f12a8827e18f61222c6c8c5fb04a8])))))); 	at scala.collection.MapLike$class.default(MapLike.scala:228); 	at scala.collection.AbstractMap.default(Map.scala:59); 	at scala.collection.mutable.HashMap.apply(HashMap.scala:65); 	at is.hail.expr.ir.Memo.lookup(RefEquality.scala:32); 	at is.hail.expr.ir.PruneSuite$$anonfun$checkMemo$1.apply(PruneSuite.scala:47); 	at is.hail.expr.ir.PruneSuite$$anonfun$checkMemo$1.apply(PruneSuite.scala:46); 	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59); 	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48); 	at is.hail.expr.ir.PruneSuite.checkMemo(PruneSuite.scala:46); 	at is.hail.expr.ir.PruneSuite.testMatrixUnionRowsMemo(PruneSuite.scala:412); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4891#issuecomment-444264952:411,Wrap,WrappedArray,411,https://hail.is,https://github.com/hail-is/hail/pull/4891#issuecomment-444264952,2,['Wrap'],['WrappedArray']
Integrability,"The third in a series of PCRelate Improvements. Depends on #2249 . Sprinkling `cache` on any RDD which is used more than once dramatically improved runtime. On a benchmark program (included below) PCRelate took 40 seconds with four cores on 1000 samples and 10,000 variants. ```; from hail import *; from timeit import default_timer as timer. hc = HailContext(); vds = hc.balding_nichols_model(20, 1000, 10000).repartition(10).persist(); vds.count(). start = timer(); vds.pc_relate(5, 0.01, min_kinship=0.1, desire=""all"").count(); end = timer(); print(end-start); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2253:48,Depend,Depends,48,https://hail.is,https://github.com/hail-is/hail/pull/2253,1,['Depend'],['Depends']
Integrability,"The third in a series of PCRelate Improvements. Depends on #2249. Sprinkling cache on any RDD which is used more than once dramatically improved runtime. On a benchmark program (included below) PCRelate took 80 seconds with four cores on 1000 samples and 10,000 variants. ```; from hail import *; from timeit import default_timer as timer. hc = HailContext(); vds = hc.balding_nichols_model(20, 1000, 10000).repartition(10).persist(); vds.count(). start = timer(); vds.pc_relate(5, 0.01, min_kinship=0.1, desire=""all"").count(); end = timer(); print(end-start); ```. Ready for a final look after #2270 lands. Creating a PR so that @konradjk and others can take it for a spin if desired.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2280:48,Depend,Depends,48,https://hail.is,https://github.com/hail-is/hail/pull/2280,1,['Depend'],['Depends']
Integrability,"The title is self-explanatory. Some kind of average of the fifth column for this command: `hdfs dfs -ls CANCER.vep.qced.otherann.vds/rdd.parquet` and maybe the difference between this metric and 128MB. If the difference is larger than x, then report a message saying that you need to repartition. Even more cool the command can suggest the number of partitions you should use.; cheers",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/445:252,message,message,252,https://hail.is,https://github.com/hail-is/hail/issues/445,1,['message'],['message']
Integrability,"The to-do list is roughly. - [ ] Get genome reference type in Variant, Interval, and Locus constructors in function registry; - [ ] Add default reference to HailContext ; - [ ] Add default reference to a bunch of RDD methods; - [ ] Expose genome reference in Python interface with import methods and as an input argument to TVariant(), etc.; - [ ] Make sure #2226 solves the problem of variant, locus, and interval methods having the correct function generated dependent on the genome reference; - [ ] Double check that if a user adds a new genome reference, it is visible on all workers.; - [ ] Add GenomeReference python class to documentation; - [ ] Convert GenomeReference -> ReferenceGenome (Jon's request); - [ ] Remove methods from Variant that do not take a GenomeReference as a parameter (Right now, everything is still hardcoded as GRCh37). I vaguely remember some debate on whether these functions should be removed from Variant completely and instead only called from GenomeReference.; - [ ] At some point, we may want to change Variant etc. so they store the contigIndex rather than the contig.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2208#issuecomment-332347245:266,interface,interface,266,https://hail.is,https://github.com/hail-is/hail/pull/2208#issuecomment-332347245,2,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"The treatment of `ClientPayloadError` as a sometimes transient error was originally made in response to [an existing issue](https://github.com/aio-libs/aiohttp/issues/4581) in aiohttp that can cause transient errors on the client that are difficult to distinguish from a real broken server. What's in `main` matched exactly on the error message, but that error message has [since changed](https://github.com/aio-libs/aiohttp/commit/dc38630b168a169139974617d75e176530c91696) to include more information, breaking our transient error handling. This change relaxes the requirement of the error response string to fix transient error handling for our current version of `aiohttp`. I wish I had a better approach. `ClientPayloadError` can also be thrown in the case of malformed data, so I am reticent to treat it as always transient, but we could perhaps make it a `limited_retries_error` and avoid inspecting the error message.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14545:337,message,message,337,https://hail.is,https://github.com/hail-is/hail/pull/14545,3,['message'],['message']
Integrability,"There are a few small cosmetic changes in here that were a result of an updated pylint, but I put those in a separate commit to hopefully make that less confusing. There are a few follow-ups after this that I want to tackle; - simplifying the images for testing query (Dockerfile.hail-build, Dockerfile.hail-base, Dockerfile.hail-run). I think these are the only things that use `base_image` so we might be able to collapse a bunch of these; - updating to python 3.8 to avoid accidentally installing that in some of our images; - trying to produce eStargz images so that buildkit can lazily pull the base image when building new images. I hope that can bring some image build times down even further by not having to localize the installed pip dependencies when making changes to our python code.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12578#issuecomment-1458470548:744,depend,dependencies,744,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1458470548,2,['depend'],['dependencies']
Integrability,"There are code paths where ReferenceGenome's `codeSetup` invokes the filesystem. Those must be handled in a static context in order for this to work at all. https://github.com/tpoterba/hail/blob/e5b3fb3d2fba971d0c226094ae0c7ac66f190bbe/hail/src/main/scala/is/hail/variant/ReferenceGenome.scala#L493-L512; ```scala; if (fastaReader != null) {; rg = rg.invoke[String, FS, String, String, Int, Int, ReferenceGenome](; ""addSequenceFromReader"",; localTmpdir,; cb.getFS,; fastaReader.fastaFile,; fastaReader.indexFile,; fastaReader.blockSize,; fastaReader.capacity); }. for ((destRG, lo) <- liftoverMaps) {; rg = rg.invoke[String, FS, String, String, ReferenceGenome](; ""addLiftoverFromFS"",; localTmpdir,; cb.getFS,; lo.chainFile,; destRG); }; rg; ```. The static isn't final or anything, the setter is still currently called from the `FunctionWithFS` interface's `addFS` method, so the `resultWithIndex` closure is still what captures and saves the FS. Like I said, needs some work to make it work always.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9044#issuecomment-652767079:846,interface,interface,846,https://hail.is,https://github.com/hail-is/hail/pull/9044#issuecomment-652767079,1,['interface'],['interface']
Integrability,"There are many global config fields that CI needs in order to template build.yaml jobs that are threaded through to CI with environment variables. However, these variables are never actually used by CI and they introduce some needless dependencies to run CI (you need a GCP_PROJECT, for example, even though CI doesn't care at all). Instead of setting specific environment variables for each field that build.yaml steps need, I instead mount the global-config (read-only) to the CI container and read in the whole thing. This does potentially expose more variables to the build.yaml environment than there were previously, but I argue that none of those should be sensitive anyway or maybe don't belong in the global-config (which shouldn't be sensitive). This in part makes the process of adding global config fields easier, since right now you need separate PRs to 1) introduce the field to CI and then 2) use it in a new build.yaml step. It also makes the CI deployment.yaml cloud-agnostic. . cc @jigold",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10911:235,depend,dependencies,235,https://hail.is,https://github.com/hail-is/hail/pull/10911,1,['depend'],['dependencies']
Integrability,"There are many of occurences of k8s templating of variables like GCP project or domain that never change and exist in the global config. The process of adding a field to the global config sometimes then requires adding it to `config.mk`, then the jinja of a deployment template that needs it, and then templating that in the deployment.yaml. These are nearly always environment variables (but not always), which can and sometimes are read from kubernetes secrets. This is a sweep of every such occurence I could find so that these variables are just read directly from the k8s secret. Though it adds lines to the deployments, it reduces the complexity of our Makefile process and makes adding variables to the global config much easier. This also *dramatically* reduces the dependencies on `config.mk` and most of its variables. I think I'll address config.mk specifically in another PR, but I believe keeping it from ballooning with multi-cloud configuration will be valuable in keeping the complexity of our build/deployment system in check.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10869:774,depend,dependencies,774,https://hail.is,https://github.com/hail-is/hail/pull/10869,1,['depend'],['dependencies']
Integrability,There are no commits here. Happy to review a pull request with:; 1) some code changes :); 2) a descriptive title and commit message,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6104#issuecomment-491798256:124,message,message,124,https://hail.is,https://github.com/hail-is/hail/pull/6104#issuecomment-491798256,1,['message'],['message']
Integrability,"There are now three check steps:; - check_hail (in the sense of $HAIL_HOME/hail directory), which checks the hail and hailtop packages, using the base image, from the source via `make check-hail`; - check_services, using the services image, except the benchmark service, which installs addition dependencies, from the source via `make -k check-services`, `-k` forces make to check all packages, even if one fails; - check_benchmark_service, which checks benchmark as installed in that image",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9394#issuecomment-685253481:295,depend,dependencies,295,https://hail.is,https://github.com/hail-is/hail/pull/9394#issuecomment-685253481,1,['depend'],['dependencies']
Integrability,"There are some problems with the IR generated by variant_qc. 1. the result of `hwe` needs to be wrapped in a `bind` -- computing this can be expensive. 2. Only emit one annotate_rows, with a bind around necessary intermediates.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4610:96,wrap,wrapped,96,https://hail.is,https://github.com/hail-is/hail/issues/4610,1,['wrap'],['wrapped']
Integrability,"There is no requirement to support many OSes. We only have to support two platforms: recent Linux and OSX. They have variants but should be mutually compatible. Testing on Dataproc + recent version of Ubuntu or Debian (which we do in the CI) seems fine. OSX has flags for version support, we can just pick a version (10.10, say) and build for that and beyond. As I've said before, we control what we support and there is no need to make this a burden on ourselves. > If you build your own compiler + library, then you risk becoming incompatible with other libraries. Yes, we should ship with all our C++ dependencies. You convinced me of this? Then there is no issue. BLAS is a C library, so no issue there. Right now I think that just means the compiler and the standard library. > Probably not something I could do in the limited time available. Fair. I'm happy with partial progress in in the above direction, but this seems like a step backwards and something we will want to revert soon. I'm not inclined to go in this direction. Not having access to the standard library seems problematic. > Confirmed that this prebuilt libhail.so can run tests with HAIL_ENABLE_CPP_CODEGEN=1 on a dataproc node with the default 1.2 image (debian8 and g++-4.9.2). Did you test submitting jobs to the cluster itself? This can be quite a different environment than the tests. Also, is there a plan about how users (or we) control this in the Dataproc setting? E.g. how do we submit cluster_sanity_check.py with and without C++ codegen enabled?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4422#issuecomment-424759448:604,depend,dependencies,604,https://hail.is,https://github.com/hail-is/hail/pull/4422#issuecomment-424759448,1,['depend'],['dependencies']
Integrability,There might be an opportunity to also push NOT DELETED into the decorator as well. I chose the decorator route because it's cleaner and I expect a more complicated query for checking permissions in the future.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9954:105,rout,route,105,https://hail.is,https://github.com/hail-is/hail/pull/9954,1,['rout'],['route']
Integrability,"There should be one definition of a service. The router should be; the authority on service definitions. The only exceptions are; self-deployed services: gateway, internal-gateway, and router-resolver. This primarily reduces possibility of error or confusion by removing; duplication. It does not impair hand deploying of any service because; every service (except the self-deployed ones) needs the router anyway.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8504:49,rout,router,49,https://hail.is,https://github.com/hail-is/hail/pull/8504,3,['rout'],"['router', 'router-resolver']"
Integrability,"There was a bug converting Call to/from Java, in this line:. if annotation:. A call is represented by a 0 integer which is False in Python. I; changed all of these to `if annotation is not None`. Also, there was a bit of confusion in the call interface inherited; from genotype. A not call is just a missing Call value (in python); and a null Call = java.lang.Integer (in Java).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2474:243,interface,interface,243,https://hail.is,https://github.com/hail-is/hail/pull/2474,1,['interface'],['interface']
Integrability,"There's a `--check` flag, I added it to the existing ci `check`. Had to add `black` to the dev dependencies for that.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9931#issuecomment-769209896:95,depend,dependencies,95,https://hail.is,https://github.com/hail-is/hail/pull/9931#issuecomment-769209896,1,['depend'],['dependencies']
Integrability,"There's also #11428, which just merged and I forgot to write the changelog message for:. `hailtop.batch.build_python_image` now accepts a `show_docker_output` argument to toggle printing docker's output to the terminal while building container images",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11795#issuecomment-1109887634:75,message,message,75,https://hail.is,https://github.com/hail-is/hail/pull/11795#issuecomment-1109887634,1,['message'],['message']
Integrability,There's an issue here with whether or not data is wrapped in a tuple. You've changed the type on a few Java tests.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11683#issuecomment-1080639721:50,wrap,wrapped,50,https://hail.is,https://github.com/hail-is/hail/pull/11683#issuecomment-1080639721,1,['wrap'],['wrapped']
Integrability,"There's more work to be done here. This adds a new route to the batch UI for getting a certain job group within a batch. It then, instead of listing all jobs, only lists the jobs that belong directly to the currently viewed job group and also shows the child job groups of the current job group. When picking up this PR I would make sure to go through the Batch development tutorial to make sure you are familiar with dev deploying. Then, read [this](https://github.com/hail-is/hail/blob/main/dev-docs/development-process.md#alternatives-to-dev-deploy) to learn about all the ways you can avoid dev deploying 😄 . If you are only making tweaks in the HTML templates, you don't need to keep deploying for every little change. Instead, run. ```bash; make devserver SERVICE=batch; ```. in your terminal and you'll get a local server that proxies the Batch that your `hail` installation is pointed to. You can then make changes to HTML and refresh your browser to see the results. Note that this is just rendering the HTML locally, and will have any effect on what's deployed, meaning you can't use it for python changes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14600#issuecomment-2239854998:51,rout,route,51,https://hail.is,https://github.com/hail-is/hail/pull/14600#issuecomment-2239854998,2,['rout'],['route']
Integrability,"There's not a good reason, this is just how it was originally designed. Whenever a job was cancelled, it would take until the start of the next step for a container's execution to be stopped. I replaced the dependency on this in `Container` with `run_until_done_or_deleted`, but stopped short of deleting the functionality entirely because there were other parts of the worker, specifically `JVMJob` that still relied on it. Hopefully that is no longer the case after the QoB changes, but @danking would know better. We've also both lamented about how it's impossible to use timings currently inside cleanup blocks because it could accidentally re-raise a deleted error. This is a great change, I would just take extra care to test job cancellation to make sure there isn't anywhere that's still relying on this functionality.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11429#issuecomment-1054563382:207,depend,dependency,207,https://hail.is,https://github.com/hail-is/hail/pull/11429#issuecomment-1054563382,1,['depend'],['dependency']
Integrability,"There's some arguments that might let us do that: https://developer.github.com/v3/pulls/#merge-a-pull-request-merge-button I'm not sure exactly what the messages look like. We could at least grab the PR message and supply it as ""additional"" text.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8552#issuecomment-613698193:153,message,messages,153,https://hail.is,https://github.com/hail-is/hail/pull/8552#issuecomment-613698193,2,['message'],"['message', 'messages']"
Integrability,"These are doc corrections/improvements I'd made in #3825 but then removed from #3833, except for the name changes that would break interface. I'd like to get feedback on those at check-in.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3875:131,interface,interface,131,https://hail.is,https://github.com/hail-is/hail/pull/3875,1,['interface'],['interface']
Integrability,"These are some easy to remove references to `RVD.rdd`. I added `treeReduce`, which depends on `treeAggregate` (#3310) which will hopefully be merged soon. In the meantime, I've added the `treeAggregate` methods here so this PR will pass its tests.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3344:83,depend,depends,83,https://hail.is,https://github.com/hail-is/hail/pull/3344,1,['depend'],['depends']
Integrability,These changes should be integrated into the next cloud tools package deployment. Not sure whether the changes should be here or the old cloud tools repo.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6118:24,integrat,integrated,24,https://hail.is,https://github.com/hail-is/hail/pull/6118,1,['integrat'],['integrated']
Integrability,"These make targets have been more trouble than they are worth. Since both the requirements files and the pinned requirements files that they generate are checked into the repo, updates to these files through PRs don't play well with how make tracks timestamps, since my local git may update them in different orders. In general, I've never had a need to only update a single requirements file and since these are technically dependencies of say, the Batch image, building the batch image can incidentally trigger a re-generation of these files when I never actually changed the dependencies. This PR removes those targets and does a normal refresh of the requirements, as well as updates the documentation on how we handle pip dependencies.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14604:425,depend,dependencies,425,https://hail.is,https://github.com/hail-is/hail/pull/14604,3,['depend'],['dependencies']
Integrability,"These scripts wrap `gcloud` and `kubectl` to provide one line commands to create and remove k8s secrets, with a standard name scheme, for GCP service accounts.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5569:14,wrap,wrap,14,https://hail.is,https://github.com/hail-is/hail/pull/5569,1,['wrap'],['wrap']
Integrability,They use the deprecated AST interface. Rewrite in terms of Table interface.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3738:28,interface,interface,28,https://hail.is,https://github.com/hail-is/hail/pull/3738,2,['interface'],['interface']
Integrability,Think through Python aggregation interfaces,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4492:33,interface,interfaces,33,https://hail.is,https://github.com/hail-is/hail/issues/4492,1,['interface'],['interfaces']
Integrability,"This CSV file is lacking any commas, it uses semicolons instead. https://github.com/jvns/pandas-cookbook/blob/master/data/bikes.csv I don't think hail should generate this error message:. ```; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); <ipython-input-5-2e52d209a59b> in <module>; ----> 1 broken_ht = hl.import_table('../data/bikes.csv'); 2 # Look at the first 3 rows; 3 broken_ht[:3]. </Users/dking/anaconda2/envs/foofoo/lib/python3.7/site-packages/decorator.py:decorator-gen-1110> in import_table(paths, key, min_partitions, impute, no_header, comment, delimiter, missing, types, quote, skip_blank_lines, force_bgz). ~/anaconda2/envs/foofoo/lib/python3.7/site-packages/hail/typecheck/check.py in wrapper(__original_func, *args, **kwargs); 558 def wrapper(__original_func, *args, **kwargs):; 559 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 560 return __original_func(*args_, **kwargs_); 561 ; 562 return wrapper. ~/anaconda2/envs/foofoo/lib/python3.7/site-packages/hail/methods/impex.py in import_table(paths, key, min_partitions, impute, no_header, comment, delimiter, missing, types, quote, skip_blank_lines, force_bgz); 1326 jt = Env.hc()._jhc.importTable(paths, key, min_partitions, jtypes, comment,; 1327 delimiter, missing, no_header, impute, quote,; -> 1328 skip_blank_lines, force_bgz); 1329 return Table._from_java(jt); 1330 . ~/anaconda2/envs/foofoo/lib/python3.7/site-packages/py4j/java_gateway.py in __call__(self, *args); 1255 answer = self.gateway_client.send_command(command); 1256 return_value = get_return_value(; -> 1257 answer, self.gateway_client, self.target_id, self.name); 1258 ; 1259 for temp_arg in temp_args:. ~/anaconda2/envs/foofoo/lib/python3.7/site-packages/hail/utils/java.py in deco(*args, **kwargs); 225 raise FatalError('%s\n\nJava stack trace:\n%s\n'; 226 'Hail version: %s\n'; --> 227 'Error summary: %s' % (deepest, full, hail.__versi",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5221:178,message,message,178,https://hail.is,https://github.com/hail-is/hail/issues/5221,4,"['message', 'wrap']","['message', 'wrapper']"
Integrability,"This PR achieves a couple of things in preparation for #11617, which requires that QoB jars be built against Spark 3.2. QoB doesn't actually *use* spark, but it will use the Azure Blob Storage client library which requires a version of jackson that conflicts with that of pyspark 3.1.1. Until such a day that we can remove pyspark from the QoB environment, we upgrade it to appease our java dependencies. Non-QoB builds of hail query remain on Spark 3.1.1/3.0.1 as it is what dataproc/hdinsight support, on which we don't need to use the Azure storage fs. This PR moves the installation of pyspark out of the base image so we can make a spark 3.2 image on which to run the scala fs suite. We also build a spark 3.2 jar to be used in that test. Also update a couple of dependencies to be compatible with spark 3.2 and stop pulling in jackson from the gcs dependency, which just so happens to match spark 3.1",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11790:391,depend,dependencies,391,https://hail.is,https://github.com/hail-is/hail/pull/11790,3,['depend'],"['dependencies', 'dependency']"
Integrability,"This PR adds a new staged stream abstraction, which is:. ```; case class Source[+A](; setup0: Code[Unit],; close0: Code[Unit],; setup: Code[Unit],; close: Code[Unit],; firstPull: Option[Code[Ctrl]],; pull: Code[Ctrl]). abstract class Stream[+A] {; def apply(; eos: Code[Ctrl],; push: A => Code[Ctrl]; )(implicit ctx: EmitStreamContext; ): Source[A]; }; ```. It implements fold, forEach, unfold (and range using unfold), map, flatMap, filter, zip, and mux (if cond then stream1 else stream2). It also implements emit rules for `ArrayFold` and `ArrayFor`, plus a initial reimplimentation of `EmitStream` which just wraps the result of `EmitStream` in a converter from the old to the new stream representation. Porting the rest of the stream nodes from `EmitStream` should be straightforward. Once that is done, I will use the setup/close hooks to implement region management in the stream emitter. A `Stream` takes two pieces of information from its consumer: a `Code` to run when at the end of the stream, and a `Code` to run when the stream produces a value. (When I say ""run when..."", I really mean ""inline at the point in the control flow at which...""). It also takes an `EmitStreamContext`, which is just a bundle of a `MethodBuilder` and a `JoinPointBuilder`. It then produces six pieces of information for its consumer to use, packaged into a `Source` object. A `Stream` must satisfy the following invariants:; * `close` and `close0` must be okay to emit multiple times, i.e. they should be function calls, or a small number of function calls. (This is because I don't see a way to unify the control paths of the cases where a producer ends the stream, and where the consumer ends it.); * `eos` and `push` must be emitted at most once.; * Any local variables created by the stream must be initialized to dummy values in `setup0`, and initialized to correct initial values in `setup`. The former is needed to satisfy the bytecode verifier (otherwise it can't prove that the local always has a valu",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8129:613,wrap,wraps,613,https://hail.is,https://github.com/hail-is/hail/pull/8129,1,['wrap'],['wraps']
Integrability,"This PR adds infrastructure for unrealizable `PType`s and `PCode`s. My primary goal was finding the shortest path to enabling nested streams in EmitStream. The main changes are:; * Add `PUnrealizable` and `PUnrealizableCode`. These are traits in the `PType` and `PCode` hierarchies, respectively, that provide ""implementations"" (throw exceptions) for methods not supported on unrealizable types.; * Add `PStreamCode` and `PCanonicalStreamCode`. The latter just wraps a `Stream` from EmitStream.scala, but eventually these should be unified. I also added `PCanonicalStream`, mostly for consistency with the rest of the `PType` hierarchy. If you think the added noise isn't worth the consistency, I can get rid of the abstract classes.; * I added assertions to `TypeCheck` for all cases I could think of where a node could take a child of any type, but now will only work for realizable types.; * To support nested streams in the emitter, we need to be able to bind streams in the environment, e.g. to map over stream of streams. The easiest way I could see to enable this was to keep the environment an `Env[EmitValue]`, but to allow `EmitValue`s of unrealizable types. I added `EmitUnrealizableValue` which asserts that it is only used once. This does go against the concept that ""values are things that can safely be used multiple times""; I'm open to discussion on what the right design is.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8564:461,wrap,wraps,461,https://hail.is,https://github.com/hail-is/hail/pull/8564,1,['wrap'],['wraps']
Integrability,"This PR adds stream nodes `StreamMultiMerge` and `StreamZipJoin`, which will be used to implement `TableUnion` and `TableMultiWayZipJoin`. The two nodes were so similar, both in implementation and in interface, that I thought bundling them into one PR would actually make it *easier* to review, but I can split them up if you disagree. The implementations of both nodes use tournament trees, a very simple data structure ideal for this problem. Think of it as a priority queue specialized to holding exactly `k` elements, so when you pop the top element, you must immediately replace it with a new value. A tournament tree is just what it sounds like. It is a complete binary tree with `k` leaves. Conceptually, the leaves hold the current `k` elements (the heads of each of the `k` input streams), while each internal node records the result of the comparison between the ""winners"" of the two subtrees, where in this case the winner is the least element. Thus we can find the smallest of all `k` elements by looking at the root node. If we remove the smallest element, and replace it with the next value from that stream, we change the value in the corresponding leaf node, then we just need to replay the comparisons at all internal nodes on the path to the root. Note that to replay a comparison, we only need to know what element *lost* at this node previously. It must have lost to the previous overall winner, the element we just replaced. Using that observation, we only need to store the `k` current values in the `k` leaves, and in each of the `k-1` internal nodes we store the index of the element which lost the comparison at that node. That just leaves the overall winner, which we can store in a separate variable. Note that each element besides the overall winner loses exactly one ""match"", so the internal nodes store a permutation of the indices 0 to (k-1), minus the overall winner. This is a so-called ""loser tree"". In the implementation, I store the `k` leaves in a `Array[Long]`, w",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9033:200,interface,interface,200,https://hail.is,https://github.com/hail-is/hail/pull/9033,1,['interface'],['interface']
Integrability,"This PR adds support for Azure SAS tokens in QoB. A SAS token is basically a blob storage URI with a short-lived credential to access that resource appended as a URL query string. In such a scenario where the FS receives a blob URI with a SAS token, that token should be used instead of the latent credentials on the system. Most of the changes to the `AzureStorageFS.scala` are to parse out a SAS token from blob names. This change brings with it a couple caveats. Unfortunately it is not possible to truly disambiguate a SAS token from a glob pattern, or even just a normal blob filename. So we take what is probably a safe assumption and look to see if there exists a query-parameter style key-value pair after the last `?` in the blob name. If this is the case, we treat everything after the last `?` as a SAS token. If this condition is not satsified, we say there is no SAS token and treat the whole path as the blob name. This logic already exists in python, but I'm open to alternatives. Introducing SAS tokens also breaks the way globbing is currently implemented, where it is deemed safe to iteratively append components to the end of a blob URI string. I added an abstract type member to `FS` and instead of a `String` have `globWithPrefix` accept that associated URL type that can properly handle path updates. I'm unclear on the best way to do this w.r.t. the type system, and wasn't quite sure what to put as the associated type for `RouterFS`, which ideally would accept a union of the URL types for the filesystems that it wraps, so some guidance on that would be great if you have any.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13178:1448,Rout,RouterFS,1448,https://hail.is,https://github.com/hail-is/hail/pull/13178,2,"['Rout', 'wrap']","['RouterFS', 'wraps']"
Integrability,"This PR adds the job groups functionality as described in this [RFC](https://github.com/hail-is/hail-rfcs/pull/5) to the Batch backend and `hailtop.batch_client`. This includes supporting nested job groups up to a maximum depth of 5. Note, that none of these changes are user-facing yet (hence no change log here). The PRs that came before this one:; - #13475 ; - #13487 ; - #13810 (note that this database migration required a shutdown). Subsequent PRs will need to implement the following:; - Querying job groups with the flexible query language (v2); - Implementing job groups in the Scala Client for QoB; - Using job groups in QoB with `cancel_after_n_failures=1` for all new stages of worker jobs; - UI functionality to page and sort through job groups; - A new `hailtop.batch` interface for users to define and work with Job Groups. A couple of nuances in the implementation came up that I also tried to articulate in the RFC:; 1. A root job group with ID = 0 does not belong to an update (""update_id"" IS NULL). This means that any checks that look for ""committed"" job groups need to do `(batch_updates.committed OR job_groups.job_group_id = %s)` where ""%s"" is the ROOT_JOB_GROUP_ID.; 2. When job groups are cancelled, only the specific job group that was cancelled is inserted into `job_groups_cancelled`. This table does **NOT** contain all transitive job groups that were also cancelled indirectly. The reason for this is we cannot guarantee that a user wouldn't have millions of job groups and we can't insert millions of records inside a single SQL stored procedure. Now, any query on the driver / front_end must look up the tree and see if any parent has been cancelled. This code looks similar to the code below [1].; 3. There used to be `DELETE FROM` statements in `commit_batch_update` and `commit_batch` that cleaned up old records that were no longer used in `job_group_inst_coll_cancellable_resources` and `job_groups_inst_coll_staging`. This cleanup now occurs in a periodic loop on",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14282:783,interface,interface,783,https://hail.is,https://github.com/hail-is/hail/pull/14282,1,['interface'],['interface']
Integrability,"This PR begins the implementation of checkpointing and restoring of jobs in Batch. Currently, a container is checkpointed after 10 seconds and before running a container (using crun run) the worker container checks if it should restore a job based on a checkpoint in Google storage. Currently, the kinds of Jobs that can be checkpointed/restored are: jobs that do simple operations and only print to stdout, jobs that redirect their output to local files. Changelist:; - Add copy method to RouterAsyncFS; - Add checkpointable flag to containers (make DockerJob containers checkpointable and JVMJob containers not checkpointable); - Create checkpoint method which pauses a container, checkpoints it, copies the checkpoint directory and upper directory of the overlay into Google storage, and then resumes the container; - Add logic in _run_container to try copying checkpoint directory and upper directory from cloud storage and then running `crun restore` if the job is checkpointable",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11888:490,Rout,RouterAsyncFS,490,https://hail.is,https://github.com/hail-is/hail/pull/11888,1,['Rout'],['RouterAsyncFS']
Integrability,"This PR begins to implement the infrastructure needed for reproducible randomness. The main components are:; * An implementation of the Threefish block cipher, reduced to 20 rounds as in Threefry [1], but keeping the tweak from Threefish (really just the first 64 bits, the second 64 bits are always 0). The specification for Threefish can be found in [2].; * An implementation of the `jdistlib.RandomEngine` interface using Threefish, so that we can continue using the `jdistlib` implementations of sampling from various distributions.; * This has some improvements over the standard Java RNG implementations of random floating point numbers, and of random integers from a specified interval. See comments in the code for details.; * The beginnings of a new type `(S/T)RNGState`. This implements a splittable RNG interface, similarly to [3], but instead of the cascade construction, we use a modification of PMAC [4] to build a psuedo-random function from a blockcipher. This allows us to reorder the processing of blocks of the input, in particular moving computation to compile time as much as possible.; * A simple test suite for the new RNG using a chi-square test. [1] ""Parallel random numbers: as easy as 1, 2, 3"", http://www.thesalmons.org/john/random123/papers/random123sc11.pdf; [2] ""The Skein Hash Function Family"", https://www.schneier.com/wp-content/uploads/2015/01/skein.pdf; [3] ""Splittable pseudorandom number generators using cryptographic hashing"", https://publications.lib.chalmers.se/records/fulltext/183348/local_183348.pdf; [4] ""Efficient Instantiations of Tweakable Blockciphers and Refinements to Modes OCB and PMAC"", https://www.cs.ucdavis.edu/~rogaway/papers/offsets.pdf",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11605:409,interface,interface,409,https://hail.is,https://github.com/hail-is/hail/pull/11605,2,['interface'],['interface']
Integrability,This PR depends on #1466.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1473#issuecomment-284198386:8,depend,depends,8,https://hail.is,https://github.com/hail-is/hail/pull/1473#issuecomment-284198386,1,['depend'],['depends']
Integrability,"This PR depends on PR #738. Merge that first. This adds `--min` and `--max` flags to the `ibd` command. The resulting TSV will only contain sample pairs with `pi_hat` above the minimum and below the maximum, inclusively of both.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/867:8,depend,depends,8,https://hail.is,https://github.com/hail-is/hail/pull/867,1,['depend'],['depends']
Integrability,"This PR eliminates this warning message:. ```; This version of MySQL doesn't yet support 'sorting of non-scalar JSON values'; ```. I tested this change in the SQL Fiddle and still got the correct answer. We could remove all non-varying fields from the group by, but decided to leave the other sortable fields as that is the SQL standard.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10713:32,message,message,32,https://hail.is,https://github.com/hail-is/hail/pull/10713,1,['message'],['message']
Integrability,"This PR enables shuffling in the service. It is stacked on several other PRs, so look only at the; most recent commit. Some highlights:; - Open the public network back up. We should probably make query jobs special so that they can; access the internal network. To do that, batch would need to accept a ""acting on behalf of"" user; account: Query submits the job using its account ""acting on behalf of"" the user. Batch allows; query to use the private network, but for all other purposes, the job is owned by the user. - Allow public access to some the `gcr.io/hail-vdc/query` Docker image. - Automatically rewrite uses of `hailgenetics/` Docker images to their `gcr.io` equivalents. - Move `deploy_address` above `deploy_query` so that query can depend on address (necessary for; shufles). - Fix logging configuration. Services team wants all logs all the time to go to stdout. - Implement lowerDistributedSort using the shuffler. - Allow shuffle ids to be encoded so they can be used in `Literal`.; Unified Split",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9848:746,depend,depend,746,https://hail.is,https://github.com/hail-is/hail/pull/9848,1,['depend'],['depend']
Integrability,"This PR improves and consolidates several that were pending. It does a few things:. - all values in the file formats are stored natively (encoded), not using json,; - in particular, the globals and cols are not stored in the json, and not loaded when the read is performed by the user (but when it is executed by the backend).; - MT parts (globals, rows, cols, entries) are all stored in separate directories and each is itself a valid Table file; - extensions for MT and Table are no longer enforced; - the metadata now stores an ""RVDSpec"" which is a recipe for reading an RVD. This gives us the flexibility to define new RVD types (e.g. HashedRVD) or modify the existing classes (by forking and adding additional parameters, etc.); - the rows and entries are stored separately and zipped together on read. If dropSamples = true, don't even load the entries.; - created UnpartitionedRVD, cleaned up the RVD interface. fixes: #2810",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2858:908,interface,interface,908,https://hail.is,https://github.com/hail-is/hail/pull/2858,1,['interface'],['interface']
Integrability,"This PR introduces Search v2.0 for querying jobs in a batch with the REST interface. The UI additions will come in a separate PR as well as the upgraded search for querying batches. We can decide whether to upgrade CI to v2. I think for backwards compatibility we need to have the default remain ""1"" in perpetuity in the batch client and you have to explicitly say you want version 2 as an argument if you want the new query language. If we want to add tests for the SQL, I can do that once what I have currently is passing and we're happy with the code.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12748:74,interface,interface,74,https://hail.is,https://github.com/hail-is/hail/pull/12748,1,['interface'],['interface']
Integrability,"This PR introduces a new type `Name` for representing bound variables in the IR, replacing `String`. For now, it is just an `AnyVal` wrapper around `String`, but in the future I would like to take advantage of the new type. For example, I'd like to:; * change equality of `Name` from string comparison to comparing object identity with `eq`. That way `freshName` becomes just `new Name()`, with stronger guarantees that the new name doesn't occur anywhere in the current IR, without needing to maintain global state as we do now.; * get rid of `NormalizeNames`, instead enforcing the global uniqueness of names as a basic invariant of the IR (typecheck could also check this invariant); * keep a string in the `Name`, but no longer require it to be unique. Instead it's just a suggestion for how to show the name in printouts, adding a uniqueifying suffix as needed. With `NormalizeNames` gone, this would let us preserve meaningful variable names further in the lowering pipeline.; * possibly keep other state in the `Name`, for example to allow a more efficient implementation of environments, similar to the `mark` state on `BaseIR`. This is obviously a large change, but there are only a few conceptual pieces (appologies for not managing to separate these out):; * attempt to minimize the number of locations in which the `Name` constructor is called, to make future refactorings easier; * add `freshName()`, which just wraps `genUID()`, returning a `Name`; * convert IR construction to use the convenience methods in `ir.package`, which take scala lambdas to represent blocks with bound variables, instead of manually creating new variable names; * replace uses of the magic constant variable names (`row`, `va`, `sa`, `g`, `global`) with constants (`TableIR.{rowName, globalName}`, `MatrixIR.{rowName, colName, entryName, globalName}`); * the above changes modified the names we use for bound variables in many places. That shouldn't matter, but it cought a couple bugs where it did.; * `Normal",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14547:133,wrap,wrapper,133,https://hail.is,https://github.com/hail-is/hail/pull/14547,1,['wrap'],['wrapper']
Integrability,"This PR is a redo of #9438 that attempts to address Arcturus's comment about `NDArrayMatMul` using the old `NDArrayEmitter` interface. I created `NDArrayEmiter2` and moved `NDArrayMatMul` over to using that. I don't want this PR to get too much bigger, so after this one goes in I can make a second one that kills the original `NDArrayEmitter` and gets everything over to this new version.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9450:124,interface,interface,124,https://hail.is,https://github.com/hail-is/hail/pull/9450,1,['interface'],['interface']
Integrability,"This PR is almost done. I need to change one of the Makefile rules to include new targets from #5791 and make sure the database is cleaned and test the deploy works. My plan is to continually delete the production tables per deployment until we're happy with the schema and everything is working. Once this is all in, then the next PR will add the actual data to the tables in `server.py` and get rid of the global dictionaries / application state. I might try and do this in 2 stages (jobs and batch), but I'm not sure it's possible. Depends on #5781, #5784",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5809:535,Depend,Depends,535,https://hail.is,https://github.com/hail-is/hail/pull/5809,1,['Depend'],['Depends']
Integrability,"This PR is based on discussion here: https://dev.hail.is/t/better-python-error-messages-idea/201/9 The intention is to create a system to give better error messages from python in a generic way. Tim's work in #7792 does a good job introducing behavior like this this specifically for `ArrayRef` nodes, but I want to add three things on top of that:. 1. I don't want to have to do as much custom per IR node work; 2. I don't want to send the entire python stack trace over py4j to scala for every node; 3. I don't want the user to see a Java stack trace in this scenarios. This first PR is a proof of concept that adds this behavior for the `Die` node, which will catch any errors generated by uses of `CaseBuilder.or_error`. Follow up PRs should change `ArrayRef` to work this way, as well as catch things like looking up a key in a dictionary but not finding it. In an ideal future, we'd bolt on some extra mechanism to give types to these errors, and we could throw a proper `IndexError` in the `ArrayRef` case or `KeyError` in the dictionary case. . It feels a little bit messy right now, open to suggestions. I don't love using `-1` as the ""no error"" situation, but I thought it was probably easier than dealing with optionals between python and scala. . To give an example of what it looks like, the error message for this script:. ```; import hail as hl. ht = hl.utils.range_table(10); ht = ht.annotate(foo = hl.nd.array([[1], [2], [3]])); ht = ht.annotate(bar = ht.foo[0:4, 12]); ht.collect(); ```. is. ```; Traceback (most recent call last):; File ""better_error_test.py"", line 6, in <module>; ht.collect(); File ""<decorator-gen-1103>"", line 2, in collect; File ""/Users/johnc/Code/hail/hail/python/hail/typecheck/check.py"", line 614, in wrapper; return __original_func(*args_, **kwargs_); File ""/Users/johnc/Code/hail/hail/python/hail/table.py"", line 1903, in collect; return Env.backend().execute(e._ir); File ""/Users/johnc/Code/hail/hail/python/hail/backend/spark_backend.py"", line 325, in ex",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9398:79,message,messages-idea,79,https://hail.is,https://github.com/hail-is/hail/pull/9398,2,['message'],"['messages', 'messages-idea']"
Integrability,"This PR is in @catoverdrive path toward backend refactor. I would like to get this in before any further changes occur, 2nd conflict since this was opened & passing all tests. @catoverdrive Can you help me understand why AddHadoopConfiguration went away? Its body appears inlined in GetHadoopConfiguration. As a result the filesystem object (hConf) is no longer passed around, which is moving things in the opposite direction of future PRs related to this one, which will explicitly pass FS objects to all methods that perform file system operations. . edit: The AddHadoopConfiguration default implementation (on the trait didn't go away, but the overriding implementation did, resulting in an apparent noop, and maybe a potential bug, although I don't understand this portion of the codebase as well as I should yet. ```scala; trait FunctionWithHadoopConfiguration {; def addHadoopConfiguration(hConf: SerializableHadoopConfiguration): Unit; }. // No overriding addHadoopConfiguration implementation; def getHadoopConfiguration: Code[SerializableHadoopConfiguration] = {; if (_hconf == null) {; cn.interfaces.asInstanceOf[java.util.List[String]].add(typeInfo[FunctionWithFS].iname); val confField = newField[FS]; val mb = new EmitMethodBuilder(this, ""addHadoopConfiguration"", Array(typeInfo[SerializableHadoopConfiguration]), typeInfo[Unit]); methods.append(mb); mb.emit(confField := mb.getArg[SerializableHadoopConfiguration](1)); _hconf = HailContext.sHadoopConf. def resultWithIndex(print: Option[PrintWriter] = None): Int => F = {; if (localHConf != null); f.asInstanceOf[FunctionWithHadoopConfiguration].addHadoopConfiguration(localHConf); ```. cc @cseed",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6263#issuecomment-500879573:1099,interface,interfaces,1099,https://hail.is,https://github.com/hail-is/hail/pull/6263#issuecomment-500879573,1,['interface'],['interfaces']
Integrability,"This PR is needed for atomic batch creation where the job_id is 0 to n_jobs and is not unique across batches. - Job now has a compound key in the database (batch_id, job_id); - Job.id on the server side is `(batch_id, job_id)`; - Batch on the client side has been modified to not require the attributes since Job now needs a reference to the batch.; - Changed some routes to be '/batches/{batch_id}/jobs/{job_id}/...`; - Changed the appropriate places in ci2 and pipeline that use the job status interface; - Changed the create_job interface for parents to take the Job objects and not the id. I think this is clearer and will allow me to check the batch of the Job is the correct batch in the future.; - deleted creating batch from a file",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6183:365,rout,routes,365,https://hail.is,https://github.com/hail-is/hail/pull/6183,3,"['interface', 'rout']","['interface', 'routes']"
Integrability,"This PR is the first iteration of an AsyncFS-based copy interface. It adds RouterAsyncFS.copy. The goal of these changes is to establish the interface and behavior. I expect several follow-on PRs:. - Revise the original copy interface proposal and add to dev-docs.; - ~~Parallelizes the transfers concurrently with async and across multiple threads.~~; - ~~After parallizing, copy will involve a lot of paralellism. Throwing an exception on the first error will be very non-deterministic. Instead, copy will return a report that collects all the errors that were encountered in the course of copying, and summarizes how many files/bytes were copied.~~; - Use multi-process parallelism; - Avoid overwriting the destination if it exists and has a matching checksum (or size).; - ~~Introduce multi-part transfers~~; - add a post-pass for Google Storage to detect file-and-directory errors.; - Adds support for S3.; - Add `hailctl cp ...` (PR); - Use copy in Batch. After this goes in, these can mostly be developed in parallel. A few principles guided the implementation of copy: perform the minimal number of system calls or API requests per copy, and only do error checking when it doesn't involve additional FS operations. For example, it is too expensive to exhaustively check if we're creating a path that is a file and a directory in Google Storage. I considered doing additional and exhaustive checking for the actual copy arguments. For example, currently, `cp -T /path/to/file /path/to/dir` will not generate an error on Google Storage. In the end, I decided to go with the current behavior and I will add an option to do a postpass to check for file-and-dir paths. To achieve this, for each transfer, I simultaneously stat the destination (if needd) to determine if it is a file, directory or doesn't exist. For each source, I simultaneously try to copy it as a file and a directory. When copying each source, we don't need to know the type of the destination until after we've stat'ed the sour",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9822:56,interface,interface,56,https://hail.is,https://github.com/hail-is/hail/pull/9822,4,"['Rout', 'interface']","['RouterAsyncFS', 'interface']"
Integrability,"This PR is to enable `hail-az;` file references to contain SAS tokens to enable bearer-auth style file access to Azure storage. Basic summary of the changes:; 	- Update `AzureAsyncFS` url parsing function to look for and separate out a SAS-token-like query string. Note: made fairly specific to SAS tokens - generic detection of query string syntax interferes with glob support and '?' characters in file names; 	- Added `generate_sas_token` convenience function to `AzureAsyncFS`. Adds new `azure-mgmt-storage` package requirement.; 	- Updated `AzureAsyncFS` to use `(account, credential)` tuple as internal `BlobServiceClient` cache key; 	- Updated `AzureAsyncFSURL` and `AzureFileListEntry` to track the token separately from the name, and extend the base classes to allow returning url with or without a token ; 	- Update `RouterFS.ls` function and associated `listfiles` function to allow for trailing query strings during path traversal ; 	- Change to existing behavior: `LocalAsyncFSURL.__str__`no longer returns 'file:' prefix. Done to make `str()` output be appropriate for input to `fs` functions across all subclasses; 	- Updated `inter_cloud/test_fs.py` to generically use query-string-friendly file path building functions; - Updated InputResource to not include the SAS token as part of the destination file name . `test_fs.py` has been updated to respect the new model, where it is no longer safe to extend URLs by just appending new segments with + ""/"" because there may be a query string. But actually running those tests for the SAS case will require some new test variables to allow the test code to generate SAS tokens (`build.yaml/test_hail_python_fs`): ; ```; export HAIL_TEST_AZURE_ACCOUNT=hailtest; export HAIL_TEST_AZURE_CONTAINER=hail-test-4nxei; # Required for SAS testing on Azure; export HAIL_TEST_AZURE_RESGRP=hailms02; export HAIL_TEST_AZURE_SUBID=12ab51c6-da79-4a99-8dec-3d2decc97343; ```; So the SAS case is disabled for now (`test_fs.py`):; ```; @pytest.fixture(param",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12877:827,Rout,RouterFS,827,https://hail.is,https://github.com/hail-is/hail/pull/12877,1,['Rout'],['RouterFS']
Integrability,"This PR makes a number of changes to reduce the overhead of the interpreted `TableAggregate` in general, plus a couple of tweaks to `ApproxCDFCombiner` to eliminate sources of boxed primitives. The main changes are:; * Make `RegionMemory` track the number of Java objects being held, and include that in the log.; * Make the combOp in `TableAggregate` interpreter operate directly on `RegionValue`s. It modifies and returns the left state, and frees the right one.; * To generate the combOp function, I had to compile a function with two agg states (instead of concatenating two `TupleAggregatorStates`, which must live in a single region). That meant not using the `CombOp` IR node. I couldn't quite get rid of the `CombOp` node completely, because I don't understand how it's being used in `Aggregators2Suite` well enough to rewrite it, but that is now the only use.; * In `TableAggregate`, work with `RDD[WrappedByteArray]` instead of `RDD[Array[Byte]]`, to allow the incoming `Array[Byte]` to be GCed as soon as we have decoded it.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8794:908,Wrap,WrappedByteArray,908,https://hail.is,https://github.com/hail-is/hail/pull/8794,1,['Wrap'],['WrappedByteArray']
Integrability,"This PR makes the following changes:; * Add a `separateRegions` flag to `PStream`.; * Add a `separateRegions` flag to the stream producer nodes `MakeStream`, `StreamRange`, and `ToStream`.; * Propogate `separateRegions` through all stream nodes in `InferPType`. The intended semantics is that if a stream's type has the `separateRegions` flag set, its consumer must pass it a region which gets cleared every element. If the flag is not set, there is no requirement; depending on context, the consumer may put every element in the same region, but is also allowed to use separate regions for each element. For example, in a zip, the elements of the zipped stream are put in separate regions iff at least one child stream requires separate regions; in that case, all children will get emitted with separate regions, whether they requested it or not. In this PR, the `separateRegions` flags are left unused. Eventually, stream consumers will inspect the flag on their child streams' types, and use that information to construct the appropriate `StagedRegion` to pass to `emitStream`. In implementing that, I did some refactoring of the `StagedRegion` design, which I separated out into a follow-up PR.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9388:466,depend,depending,466,https://hail.is,https://github.com/hail-is/hail/pull/9388,1,['depend'],['depending']
Integrability,"This PR only impacts `internal.hail.is`. The current internal flow is:; 1. gateway receives request for `internal.hail.is/$namespace/$service`; 2. `auth_request` to router-resolver for auth & router ip, and in router-resolver; a. request to auth that the user is a signed in developer; b. retrieve router ip from k8s; 3. `proxy_pass` to router IP returned from router-resolver in $namespace which proxies to $service in $namespace. This changes the flow to:; 1. gateway receives request for `internal.hail.is/$namespace/$service`; 2. request to auth that the user is a signed in developer; 3. `proxy_pass` to $service in $namespace. This does impose the restriction that there is an equivalence between subdomains and k8s Services. For the most part we enforce this just by convention, with the exception of `www` -> `website`. `router` currently does this mapping and is the only capability that this version drops. However, `www` in internal is already broken, I think because `website` does not consider `www` as potentially part of its base path, so that might need to be considered on its own. Aside from the `base_path` problem, I think it would make sense to create alias k8s Services like we do with notebook/workshop.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10207:165,rout,router-resolver,165,https://hail.is,https://github.com/hail-is/hail/pull/10207,7,['rout'],"['router', 'router-resolver']"
Integrability,"This PR removes the JVM version of Pedigree in favor a Python based one, as a step towards removing unnecessary calls to the JVM altogether. There were already Pedigree python tests I added a few more, and the ones in Scala seem to mostly test functionality that was never exposed to the python interface anyway.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6438:295,interface,interface,295,https://hail.is,https://github.com/hail-is/hail/pull/6438,1,['interface'],['interface']
Integrability,"This PR removes the `as_array` parameter on `pca` and `hwe_normalized_pca`. The scores and loadings tables are constructed to always have a field of array type, mirroring the eigenvalues array. This simplifies the interface and makes pipeline (and PC indexing) behavior more predictable.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3280:214,interface,interface,214,https://hail.is,https://github.com/hail-is/hail/pull/3280,1,['interface'],['interface']
Integrability,"This PR rewrites the hailctl command line argument parsing code. While the interface remains largely the same, a few changes were made to how options are handled. We first introduce a bit of terminology. In a shell command invocation like `$ cmd a -o c`, `a`, `-o` and `c` are called parameters. `a` and `c` which do not start with dashes, are called arguments. `-o`, which starts with a dash, is an option. This PR makes the following changes:. - For dataproc commands taking extra gcloud parameters, all parameters after a double-dash (--) are passed to gcloud.; - The actual rule is slightly more complicated, but I think the above rule is the right take away. In detail, extra parameters are passed to gcloud. Unknown options (starting with a dash) before `--` are reported as an error. So arguments (not options) before `--` and all parameters after are passed to gcloud. ; - Short options don't need a `=` when specifying a value. It is now `-p2`, not `-p=2`.; - While I was making breaking changes, I changed `dataproc submit` `--gcloud_configuration` to `--gcloud-configuration`. I am happy to undo this one.; - Group arguments must go before the next command. Write `hailctl dataproc --beta start ...` not `hailctl dataproc start --beta ...`, which is an error since `start` has no option `--beta`. This PR rewrites argument parsing to use click instead of argparse: https://click.palletsprojects.com/en/7.x/. Things you need to know about click:; - A group is a group of commands or subgroups, like `hailctl dataproc`, `hailctl batch`, etc. Groups are defined like this:; ; ```; @hailctl.group(; help=""Manage the Hail Batch service.""); def batch():; pass; ```; - A command in a group is defined like this:. ```; @batch.command(; help=""Get a particular batch's info.""); @click.argument('batch_id', type=int); @click.option('--output-format', '-o',; type=click.Choice(['yaml', 'json']),; default='yaml', show_default=True,; help=""Specify output format"",); def get(batch_id, output_format):; ..",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9842:75,interface,interface,75,https://hail.is,https://github.com/hail-is/hail/pull/9842,1,['interface'],['interface']
Integrability,"This PR teaches most of our cluster how to exclusively speak HTTPS instead of; HTTP. The exceptions are:; - from batch-driver to batch workers; - from batch workers to internal-gateway; - to ukbb-rg; - from router to notebook workers; - letsencrypt (oh the irony). ## Changes from Original PR Proposal. ### Root Certificate. I added a secret to default named `ssl-config-hail-root` containing `hail-root-key.pem`, and `hail-root-cert.pem`. Every principal trusts this root. This root trusts every principal. This PR originally prevented clients from speaking to servers with certs they didn't trust. Now everyone trusts everyone. As long as the root key is not leaked this is OK. Only `create_certs` mounts this secret. The key is used to sign every certificate and the cert is included in each principal's incoming and outgoing trust lists. The root certificate and key are never re-created, so our deploys have no downtime and we avoid addressing the rotation problem. I removed all the trust specifications. A later PR will resolve rotation and mTLS. That PR will restore the trust specifications. I didn't change the structure of the secrets (they still have an incoming and outgoing trust list which only contains the root cert) because I need this structure for mTLS anyway. The original PR text follows. ---. ## HTTPS and TLS. HTTP is implemented on TCP/IP. HTTPS is also implemented on TCP/IP and differs; very mildly. After the socket is opened, a TLS [1] connection is established; over the socket. Thereafter, every HTTP message is encrypted and transported by; the TLS machinery. The HTTP protocol is unchanged. The default port fort HTTP is; 80 and the default port for HTTPS 443, however any port may be used. There are currently four versions of TLS, the latest is TLS 1.3. All versions of; SSL are considered insecure. The OpenSSL library implements TLS. There are other implementations, such as; LibreSSL, but they implement roughly the same interface as OpenSSL. The TLS protocol def",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8561:207,rout,router,207,https://hail.is,https://github.com/hail-is/hail/pull/8561,1,['rout'],['router']
Integrability,"This PR teaches most of our cluster how to exclusively speak HTTPS instead of; HTTP. The exceptions are:; - from batch-driver to batch workers; - from batch workers to internal-gateway; - to ukbb-rg; - from router to notebook workers; - letsencrypt (oh the irony). The major new build step is `create_certs` which creates a certificate, key, and; list of trusted ""principals"" for each ""principal"". ""Principal"" is a computer; security term referring to an authenticatable identity. In our system, the; services are each unique principals and every client (e.g. the test_batch CI; step) is also a principal. A principal's certificate is a unforgeable proof of; their identity. A principal's ""key"", in our system, is actually a public-private; (i.e. asymmetric) key pair which the client and server use to establish a; symmetric key for each new connection. A list of trusted principals is a list of; certificates. Every incoming connection must provide a certificate in the; trusted list or the server will drop the connection. Every service depends on the `create_certs` step because their deployment's load; secrets created by `create_certs`. The blog service is implemented by Ghost. Ghost only supports HTTP. As a result; we cannot make all network traffic in our cluster TLS-secured. However, we can; use an nginx sidecar on the blog pod which terminates TLS connections and sends; plaintext traffic on the loopback interface to Ghost. Thus, our goal is: no; plaintext traffic on non-loopback interfaces. Readiness and liveness probes cannot use HTTP. Although k8s supports HTTPS, it; does not support so-called ""mTLS"" or ""mutual TLS."" This is fancy verbiage for; servers that require clients to send trusted certificates. We require; this. There is a lot of information in GitHub issues and the Istio web pages; about this, but at the end of the day, kubernetes does not support this. TCP; probes are the best we can do. There [was a; PR](https://github.com/kubernetes/kubernetes/pull/61231) to al",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8513:207,rout,router,207,https://hail.is,https://github.com/hail-is/hail/pull/8513,1,['rout'],['router']
Integrability,"This PR tries to address the comments in #10860. However, there are a bunch of additional changes as well. I did everything necessary to make the entire batch code base cloud-agnostic. Before I fully test the entire system and someone proofreads this PR carefully, I would like your input on the design and get high level comments. It's a lot of work to test this branch!!!! Once everyone is happy with this structure, then I can start writing the Azure components. List of changes:; - Created a new CloudResourceManager that has the interface for interacting with VMs and managing cloud resources; - Renamed WorkerConfig to InstanceConfig; - Created a new Disk interface in batch/worker/disk.py; - Renamed the instance's zone field to location as Azure's zones mean something different.; - Moved all resource utility calculations to its own module; - resource_utils.py contains a set of functions that calls the appropriate implementation based on the cloud parameter. I moved all GCP specific implementations into the batch/gcp module. There is one cyclic dependency I couldn't break right now which is the InstanceCollectionManager -> InstanceCollection -> Pool/JPIM all need a CloudResourceManager while the CloudResourceManager needs to know the list of active instances and the global number of cores from InstanceCollectionManager to appropriately clean up resources and select a zone. I think of the InstanceCollectionManager hierarchy as being the manager of virtual instances and the CloudResourceManager manages the physical VM instances. I had to put the constructor functions for the InstanceConfig in utils.py because of cyclic imports even though the import was inside the static method constructor function in my original attempt.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10920:534,interface,interface,534,https://hail.is,https://github.com/hail-is/hail/pull/10920,3,"['depend', 'interface']","['dependency', 'interface']"
Integrability,"This PR tries to address the error we saw last Friday on Azure where there was a stuck worker that could not pull ubuntu:20.04 from Dockerhub. The error message in the worker logs was. ```; DockerError(500, 'Head \""https://haildev.azurecr.io/v2/ubuntu/manifests/20.04\"": denied: retrieving permissions failed'); ```. I looked at the system logs and the actual error message was this:. ```; Mar 03 16:56:12 batch-worker-default-standard-nj0qy dockerd[4066]: time=""2023-03-03T16:56:12.112691249Z"" level=info msg=""Attempting next endpoint for pull after error: Head \""https://haildev.azurecr.io/v2/ubuntu/manifests/20.04\"": denied: retrieving permissions failed""; ```. Higher up in the logs was:. ```; Mar 03 16:54:50 batch-worker-default-standard-nj0qy dockerd[4066]: time=""2023-03-03T16:54:50.520878176Z"" level=debug msg=""Fetching manifest from remote"" digest=""sha256:9fa30fcef427e5e88c76bc41ad37b7cc573e1d79cecb23035e413c4be6e476ab"" error=""<nil>"" remote=""docker.io/library/ubuntu:20.04""; Mar 03 16:54:50 batch-worker-default-standard-nj0qy dockerd[4066]: time=""2023-03-03T16:54:50.762789745Z"" level=debug msg=""Fetching manifest from remote"" digest=""sha256:9fa30fcef427e5e88c76bc41ad37b7cc573e1d79cecb23035e413c4be6e476ab"" error=""ref moby/1/index-sha256:9fa30fcef427e5e88c76bc41ad37b7cc573e1d79cecb23035e413c4be6e476ab locked: unavailable"" remote=""docker.io/library/ubuntu:20.04""; ```. My working hypothesis is described in detail here that the image cache with locks got corrupted with the simultaneous pulls: https://hail.zulipchat.com/#narrow/stream/300487-Hail-Batch-Dev/topic/Azure.20CI.20appears.20hung/near/339452619. To mitigate this, when we get the error ""denied: retrieving permissions failed"", we try and delete the image and then try pulling again once more before erroring gracefully. At least for now, this errors the user's job, but that's better than the status quo where the job is stuck.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12758:153,message,message,153,https://hail.is,https://github.com/hail-is/hail/pull/12758,2,['message'],['message']
Integrability,"This PR updates a lot of NDArray code that was using the old `Code[T]` and emit triplet interface in favor of using code builders and `IEmitCode`. This is going to make it easier to update the `PNDArray` interface to not use `Code[Long]` everywhere, among other things. . Before this PR, there existed `NDArrayEmitter`, which did the old thing, and `NDArrayEmitter2`, which was a prototype of a new emitter. . After this PR, a tweaked version of `NDArrayEmitter2` has become the new `NDArrayEmitter`. `outputElement` now returns a `PCode`, and all the missingness problems are handled by carrying a `IEmitCodeGen[NDArrayEmitter]` around throughout the deforesting process, meaning the `NDArrayEmitter` no longer needs internal state about missingness. . I think the diff for `Emit.scala` is going to be pretty confusing. I'd at least opt for a side by side view instead of the intermingled one, as I've mostly implemented the same logic, just on top of our new code builder primitives. . All tests pass, but marking WIP since I'm noticing some slow down in the slice test that I want to look into. . This PR also adds a `get` function to `EmitValue` that gets the underlying `PValue` and moves two functions off of the `PNDArray` interface into `LinalgCodeUtils`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9824:88,interface,interface,88,https://hail.is,https://github.com/hail-is/hail/pull/9824,3,['interface'],['interface']
Integrability,"This PR:. - Introduces `NDArrayReindex`, which allows the use of the `transpose` on hail `NDArrayExpressions`. ; - Introduces `NDArrayMap2`, which allows operations like elementwise +, -, /, *, etc. This has full broadcasting support to match numpys. ; - Fixes `NDArrayShape`, which was not properly implemented. The only reason `NDArrayShape` seemed to work was because calling `NDArrayShape` directly on a `MakeNDArray` or on a `NDArrayMap1` was always simplified away to just return the tuple. ; - Removed the Simplify rule that transformed `NDArrayShape(MakeNDArray(..., shape))` to `shape`, since that was resulting in a type change, as `NDArrayShape` always returns a required tuple and `shape` was not a required tuple.; - Changes `ndarrays_eq` in the tests to just go through `eval` instead of a write then read, since write and read don't exist yet. . Things I'm not happy with:; - The rule for emitting `NDArrayReindex` is written twice, since depending on the situation one or the other is computationally cheaper. Seems like there should be a version of `NDArrayEmitter` that allows us to use an already existing array as the data. . Might add a few more tests, but code is here for review.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7069:954,depend,depending,954,https://hail.is,https://github.com/hail-is/hail/pull/7069,1,['depend'],['depending']
Integrability,"This PR:. - Pushes code builders through PNDArray interface instead of method builders; - Starts switching away from `PNDArray.data.load` to using methods like `dataPArrayPointer` and `dataFirstElementPointer`. All `dataPArrayPointer` calls will go away when ndarrays are no longer backed by `PArray`. ; - Speeds up repeated calls to `loadElement` on `SNDArrayPointerSettable`, which speeds up linear regression nd benchmark ~12%. Now we are approximately 60% slower than breeze linear regression.'; - Removes `CodePTuple`, since all instances of its use are removed now and it predated the current `PCode` system",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9883:50,interface,interface,50,https://hail.is,https://github.com/hail-is/hail/pull/9883,1,['interface'],['interface']
Integrability,This PR:; - Replaces Fluentd with Filebeat (Filebeat config based on the recommended kubernetes filebeat config from elastic repo); - Increases elasticsearch storage. ; - Modifies Kibana's security context so that it doesn't run as root (Kibana will print an error message if it's running as root).; - Adds the `decode_json_fields` processor to filebeat so that it parse our structured log messages as json.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6659:265,message,message,265,https://hail.is,https://github.com/hail-is/hail/pull/6659,2,['message'],"['message', 'messages']"
Integrability,"This adds SpillingCollectIterator which avoids holding more than 1000 aggregation results in memory at one time. We could do something that listens for GC events and spills data if there's high memory pressure. That seems a bit error prone and hard. The number of results kept in memory is a flag on the HailContext. In C++ we can design a system that is aware of its memory usage and adjusts memory allocated to scans accordingly. #### Implementation Notes. I had to add two new file operations to `FS` and `HadoopFS` because I need seekable file input streams. When we add non-hadoop `FS`'s we'll need to address the interface issue. When we overflow our in-memory buffer, we spill to a disk file. We use O(n_partitions / mem_limit) files. We stream through the files to `scanLeft`, to compute the globally valid scan state per partition. The stream writes its results to another file which must be on a cluster-visible file system (we use `HailContext.getTemporaryFile`). Finally, each partition reads that file and seeks to its scan state. I somewhat better solution would be to eagerly scan as results come in. I leave that as future work. #### Timings. Master 0.2.14-4da055db5a7b; ```; In [1]: %%time ; ...: ; ...: import hail as hl ; ...: ht = hl.utils.range_table(10000, n_partitions=10000) ; ...: ht = ht.annotate(rank = hl.scan.count())._force_count() ; CPU times: user 1.45 s, sys: 333 ms, total: 1.78 s; Wall time: 24.6 s; In [3]: %%time ; ...: ; ...: import hail as hl ; ...: ht = hl.utils.range_table(1000000, n_partitions=1000) ; ...: ht = ht.annotate(rank = hl.scan.count())._force_count() ; CPU times: user 6.23 ms, sys: 1.96 ms, total: 8.19 ms; Wall time: 1.33 s; ```; This branch; ```; In [1]: %%time ; ...: ; ...: import hail as hl ; ...: ht = hl.utils.range_table(10000, n_partitions=10000) ; ...: ht = ht.annotate(rank = hl.scan.count())._force_count() ; CPU times: user 1.36 s, sys: 297 ms, total: 1.66 s; Wall time: 27.3 s. In [2]: %%time ; ...: ; ...: import hail as hl ; ...:",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6345:619,interface,interface,619,https://hail.is,https://github.com/hail-is/hail/pull/6345,1,['interface'],['interface']
Integrability,"This adds `SpillingCollectIterator` which avoids holding more than 1000 aggregation results in memory at one time. We could do something that [listens for GC events](https://stackoverflow.com/questions/30041332/a-useful-metric-for-determining-when-the-jvm-is-about-to-get-into-memory-gc-trou) and spills data if there's high memory pressure. That seems a bit error prone and hard. How should I pipe the size limit down to TableMapRows? The only workable solution I can think of is a HailContext setting. Maybe I should bite the bullet and respond to memory pressure? Either way this should get Laurent cooking with gas. Spilling ten local files and then reading them in is probably in the noise of timings. 🎉. Master 0.2.14-4da055db5a7b; ```ipython; In [1]: %%time ; ...: ; ...: import hail as hl ; ...: ht = hl.utils.range_table(10000, n_partitions=10000) ; ...: ht = ht.annotate(rank = hl.scan.count())._force_count() ; CPU times: user 1.45 s, sys: 333 ms, total: 1.78 s; Wall time: 24.6 s; In [3]: %%time ; ...: ; ...: import hail as hl ; ...: ht = hl.utils.range_table(1000000, n_partitions=1000) ; ...: ht = ht.annotate(rank = hl.scan.count())._force_count() ; CPU times: user 6.23 ms, sys: 1.96 ms, total: 8.19 ms; Wall time: 1.33 s; ```; This branch:; ```ipython; In [2]: %%time ; ...: ; ...: import hail as hl ; ...: ht = hl.utils.range_table(10000, n_partitions=10000) ; ...: ht = ht.annotate(rank = hl.scan.count())._force_count() ; CPU times: user 1.41 s, sys: 313 ms, total: 1.72 s; Wall time: 25.2 s. In [3]: %%time ; ...: ; ...: import hail as hl ; ...: ht = hl.utils.range_table(1000000, n_partitions=1000) ; ...: ht = ht.annotate(rank = hl.scan.count())._force_count() ; ...: ; ...: ; CPU times: user 4.72 ms, sys: 1.82 ms, total: 6.53 ms; Wall time: 1.41 s; ```. ---. Minor implementation note: I did the rigamarole with `runJob` because I wasn't sure that using `synchronized` in a constructor was kosher and I'm also generally weary of Scala's constructor syntax.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6306:1881,synchroniz,synchronized,1881,https://hail.is,https://github.com/hail-is/hail/pull/6306,1,['synchroniz'],['synchronized']
Integrability,"This adds `test_storage_uri` and `batch_logs_storage_uri` fields in the global config. In GCP, this meant just copying existing GCS bucket names and prepending `gs://`, which I've done in the terraform and manually in default. For azure, in the terraform I add two storage accounts, `batch` and `ci`, with `logs` and `test` containers, respectively. This felt like an intuitive consolidation of containers under storage accounts that would make permissioning cleaner. E.g. the batch service principal has access to the entire batch storage account, but only to the `test` container in the ci storage account. However, I've not thought about it deeper than that so it might be worth some looking into. Luckily this decision has no impact on application code. There's still more to be done in a follow-up PR to replace instances of `hail_test_gcs_bucket_name` with `test_storage_uri`, but I think this takes care of the batch deployment's dependency on GCS.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11014:937,depend,dependency,937,https://hail.is,https://github.com/hail-is/hail/pull/11014,1,['depend'],['dependency']
Integrability,"This adds a `constructUninitialized` constructor to `PCanonicalNDArray`. Now that we have interface methods that mutate an ndarray, there's no reason to force initialization of the data to happen inside the constructor. And there are plenty of uses, like out parameters for lapack methods, that just want an uninitialized ndarray. Also, it seemed silly to be forced to memoize the new uninitialized ndarray before filling its data, when the constructor already had everything in locals, so I changed the ndarray constructors to return `SNDArrayValue`s.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10769:90,interface,interface,90,https://hail.is,https://github.com/hail-is/hail/pull/10769,1,['interface'],['interface']
Integrability,"This adds a new IR that does a `consoleLogInfo` as a side effect. I use it once, in `_linear_regression_rows_nd`, to mimic the info message we were logging to users.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10726:132,message,message,132,https://hail.is,https://github.com/hail-is/hail/pull/10726,1,['message'],['message']
Integrability,"This adds about 800KB total to the repo. I added a notion of supportedCodec, which includes all the codecs except DirectCodec (which currently depends on the in memory representation of region values which we don't want to promise). FYI @tpoterba I also added a micro optimization: if you get a field of a struct declaration, just grab out the AST for the field. This fixed some massive expression size blowup in create_all_values_datasets.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3043:143,depend,depends,143,https://hail.is,https://github.com/hail-is/hail/pull/3043,1,['depend'],['depends']
Integrability,"This adds an `svd` method to `hl.nd`, allowing us to take singular value decomposition of local ndarrays. This is a generally useful operation, but my primary reason for adding it is to avoid the need to call numpy's SVD as a substep of Annamira's new randomized PCA method. The interface is designed to match numpy exactly. . Note that this method uses the LAPACK method `dgesdd`, which is newer, faster version of `dgesvd`. As far as I can tell, there's never a reason to use `dgesvd`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9303:279,interface,interface,279,https://hail.is,https://github.com/hail-is/hail/pull/9303,1,['interface'],['interface']
Integrability,"This adds apiserver to CI, and modifies notebook to use the hail-jupyter image that the former defines. To ensure that it's using the appropriate image, notebook2's Makefile has been modified to read the [""hail-jupyter-image"" label that the apiserver deployment defines](https://github.com/hail-is/hail/blob/master/apiserver/deployment.yaml.in#L74); - the Makefile tests that we get a non-empty string from the kubectl command used to read this value before proceeding. Stacks on https://github.com/hail-is/hail/pull/5592, without which notebook2 wouldn't work when also defaulting to hail-jupyter. I used the ""dependencies"" property in `projects.yaml` as well as presenting the proper order, but that doesn't look like it's actually used yet. Still, it seems like a good idea, so if that is planned still I would like notebook2 to take advantage. ```; ..//env-setup.sh:for project in $(cat projects.yaml | grep '^- project: ' | sed 's/^- project: //'); ..//env-setup.sh-do; ..//env-setup.sh- if [[ -e $project/environment.yml ]]; ..//env-setup.sh- then; ..//env-setup.sh- ${CONDA_BINARY} env create -f $project/environment.yml || ${CONDA_BINARY} env update -f $project/environment.yml; ..//env-setup.sh- fi; ..//env-setup.sh-done; ```. ```; ..//hail-ci-build.sh:PROJECTS=$(cat projects.yaml | grep '^- project: ' | sed 's/^- project: //'); ..//hail-ci-build.sh-; ..//hail-ci-build.sh-for project in $PROJECTS; do; ..//hail-ci-build.sh- if [[ -e $project/hail-ci-build.sh ]]; then; ..//hail-ci-build.sh- CHANGED=$(python3 project-changed.py target/$TARGET_BRANCH $project); ..//hail-ci-build.sh- if [[ $CHANGED != no ]]; then; ..//hail-ci-build.sh- (cd $project && /bin/bash hail-ci-build.sh); ..//hail-ci-build.sh- fi; ..//hail-ci-build.sh- fi; ..//hail-ci-build.sh-done; ```. cc @cseed, @danking",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5593:611,depend,dependencies,611,https://hail.is,https://github.com/hail-is/hail/pull/5593,1,['depend'],['dependencies']
Integrability,"This adds filter, filterCols, and filterRows to BlockMatrix, en route to moving kinship and LD matrix to from IRM to BlockMatrix. For example, filtering out rows/columns from a kinship matrix (e.g. to remove samples with missing covariate data); or filtering an LD matrix (e.g. to perform Leave-One-Chromosome-Out LMM analysis). Since the number of tasks equals the number of resulting partitions (blocks), these functions are suited to filtering out a small to medium subset (say, throwing out a few rows and columns, or half of the rows and columns) and may fail when filtering all but a small number of rows and columns due to all the blocks being sent to one executor. In the latter case, one can do better by writing the result of filterCols, then reading and applying filterRows. Testing locally, on a 16384 * 16384 matrix (block size 4096, 16 partitions, 128MB each), when only filtering columns (or rows), filterCols (or filterRows) tends to be faster than filter (likely due to less copying), and filterCols tends to be a bit faster than filterRows (which I think is due to lack of transpose and esp. better striding). When filtering both columns and rows, filter tends to be fastest but filter_columns followed by filter_rows is often comparable. It may be that the cost of an additional copy in the first step is offset by smaller strides resulting better caching in the second step. For example, filtering out every 31st row and column:; ```; filter; [9.550655126571655, 9.62321400642395]; filterCols.filterRows; [12.190248966217041, 12.07064700126648]; filterRows.filterCols; [14.239542007446289, 15.601837158203125]; ```; Filtering out every row and column with 0.5 probability, resulting in 4 partitions:; ```; filter; [4.625396966934204, 4.427164077758789, 4.435616970062256]; filterCols.filterRows; [4.647814035415649, 4.610292911529541, 4.655405044555664]; filterRows.filterCols; [4.866307973861694, 5.073392868041992, 5.470307111740112]; ```. On GCP, with 32 core highmem master and",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2647:64,rout,route,64,https://hail.is,https://github.com/hail-is/hail/pull/2647,1,['rout'],['route']
Integrability,"This adds preliminary support for python 3.7 including a conda env with relaxed dependencies compared to what we currently ship. I've tested this manually and found no problems aside from a lot of warnings about upcoming depreciation in new versions of dependencies. The value of `__origin__` changed for many types from 3.6 to 3.7, which is why the check function map needed to be expanded.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4701:80,depend,dependencies,80,https://hail.is,https://github.com/hail-is/hail/pull/4701,2,['depend'],['dependencies']
Integrability,"This adds the Google Cloud Monitoring and Prometheus datasources to the grafana configuration. I had done this initially by hand in the UI but this is the first step toward reproducible monitoring, and I'll eventually follow up with dashboards as code. The one ""change"" I made is I exposed the prometheus port sitting behind nginx so that grafana can talk directly to prometheus. Currently, there's an nginx sitting in front of prometheus so that the prometheus UI can be exposed at prometheus.hail.is with https and dev authentication. This hasn't changed. Currently though, grafana is piggybacking on this flow by forwarding the user's session (which I set up in the UI), but I couldn't figure out an easy way to set that in the config and it seemed unnecessarily complicated. I ended up going the simpler route of just letting grafana talk to prometheus directly and not go through nginx. The 9090 endpoint is not reachable outside of the cluster. I considered namespacing the prometheus domain (`{{ default_ns.name }}` instead of `default`), but I pretty much never find it useful to spin up my own prometheus. In the rare case I run my own grafana I just point it to the data from default.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10627:808,rout,route,808,https://hail.is,https://github.com/hail-is/hail/pull/10627,1,['rout'],['route']
Integrability,"This also matches the corresponding Numpy error message almost precisely, which is nice. Difference is that ""Index"" is lowercase for Numpy. It's too bad that we can't keep the error message in python land, and the stack trace is utterly useless to a user. I'll make an issue for this",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9223#issuecomment-670037279:48,message,message,48,https://hail.is,https://github.com/hail-is/hail/pull/9223#issuecomment-670037279,2,['message'],['message']
Integrability,This and #9304 have a mutual dependency (ugh). Close this in favor of the other.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9309#issuecomment-676736575:29,depend,dependency,29,https://hail.is,https://github.com/hail-is/hail/pull/9309#issuecomment-676736575,1,['depend'],['dependency']
Integrability,This appears to have triggered a new version of some Python dependency which is breaking Sphinx's generation of the docs. I'm going to try updating all our Sphinx versions to the latest version of Sphinx. Hoping for the best.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10282#issuecomment-818271521:60,depend,dependency,60,https://hail.is,https://github.com/hail-is/hail/pull/10282#issuecomment-818271521,1,['depend'],['dependency']
Integrability,This appears unnecessary. I was mislead by a website about the correct path at which to store Serivce Provider Interface implementations.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13037:111,Interface,Interface,111,https://hail.is,https://github.com/hail-is/hail/pull/13037,1,['Interface'],['Interface']
Integrability,"This assertion was getting triggered by the ref `inner` in a perfectly correct IR of the form `StreamMap(inner, StreamGrouped(...), ...)`. There's no way to avoid the unrealizable ref when mapping over a nested stream, and I don't see why `extract` depends on this assertion.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9631:249,depend,depends,249,https://hail.is,https://github.com/hail-is/hail/pull/9631,1,['depend'],['depends']
Integrability,"This basically just pulls out the logic from the `NativeDecoder` and `NativeEncoder` stuff in RowStore.scala into their own objects, and dynamically generates a c++ class for the row type. (The only things that have changed between `NativeDecoder`/`cxx.PackDecoder` and the encoders are the `apply` functions; I'm generating an Encoder class that inherits NativeObj instead of relying on the wrapper classes in `Encoder.h` and `Decoder.h`. This mostly felt like it made things easier to reason about when I started writing the full-stage code generation stuff, but I've pulled it out here as a separate PR. cc @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4722:392,wrap,wrapper,392,https://hail.is,https://github.com/hail-is/hail/pull/4722,1,['wrap'],['wrapper']
Integrability,"This both avoids an extra pass to find the failing rows as well as avoiding a an extra pass if the globals depend on non-global data. In particular, this pipeline would run the column aggregations four times (IMO, at most twice is OK):. ```; mt = hl.utils.range_matrix_table(2,2); mt = mt.annotate_entries(x = mt.row_idx * mt.col_idx); mt = mt.annotate_cols(mean_x = hl.agg.mean(mt.x)); mt = mt.annotate_entries(x = mt.x - mt.mean_x); mt._same(mt); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13151:107,depend,depend,107,https://hail.is,https://github.com/hail-is/hail/pull/13151,1,['depend'],['depend']
Integrability,"This causes issues when starting interactive sessions on clusters. Before, I get lots of output like this:; SPARKMONITOR_LISTENER: Started SparkListener for Jupyter Notebook; SPARKMONITOR_LISTENER: Port obtained from environment: ERRORNOTFOUND. SPARKMONITOR_LISTENER: Exception creating socket:java.lang.NumberFormatException: For input string: ""ERRORNOTFOUND"". SPARKMONITOR_LISTENER: Application Started: application_1569946119076_0001 ...Start Time: 1569946336092. SPARKMONITOR_LISTENER: Exception sending socket message:java.lang.NullPointerException. After:; <nothing>. I also tested to make sure the monitor still worked in a notebook.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7174:515,message,message,515,https://hail.is,https://github.com/hail-is/hail/pull/7174,1,['message'],['message']
Integrability,"This change brings the `facet_wrap` interface more in line with [the `ggplot2` implementation](https://ggplot2-book.org/facet.html#facet-wrap) by defaulting to show axes (with tick marks) for all facets, as well as providing `scales`, `nrow` and `ncol` arguments that the user can use to specify whether the scales should be the same across facets and how many rows or columns to use. It also updates the faceting code to avoid duplicating legend entries when [grouped legends](https://github.com/hail-is/hail/pull/12254) are used, and to disable interactivity accordingly. With this update, running this code:. ```python; import hail as hl; from hail.ggplot import aes, facet_wrap, geom_point, ggplot, vars; ht = hl.utils.range_table(10); ht = ht.annotate(squared=ht.idx ** 2); ht = ht.annotate(even=hl.if_else(ht.idx % 2 == 0, ""yes"", ""no"")); ht = ht.annotate(threeven=hl.if_else(ht.idx % 3 == 0, ""good"", ""bad"")); ht = ht.annotate(fourven=hl.if_else(ht.idx % 4 == 0, ""minor"", ""major"")); fig = (; ggplot(ht, aes(x=ht.idx, y=ht.squared)); + geom_point(aes(shape=ht.even, color=ht.threeven)); + facet_wrap(vars(ht.threeven, ht.fourven), nrow=1); ); fig.show(); ```. Produces the following plot:. <img width=""1283"" alt=""Screen Shot 2022-11-23 at 12 23 21"" src=""https://user-images.githubusercontent.com/84595986/203611376-682b98e7-2915-4e2c-8f1e-ef8c74b12907.png"">",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12497:36,interface,interface,36,https://hail.is,https://github.com/hail-is/hail/pull/12497,2,"['interface', 'wrap']","['interface', 'wrap']"
Integrability,"This change combines cloud auth logic that was previously duplicated; between the various `FS` implementations and the `BatchClient`. . The main refactoring is to make the interface between the `ServiceBackend` more; high-level and leave json serialisation to the `BatchClient`. To do this, I've; added a bunch of case classes that resemble the python objects the batch service ; expects (or a subset of the data). To simplify the interface, I've split batch; creation from job submission (update). For QoB, the python client creates the ; batch before handing control to the query driver; batch creation is necessary; for testing only. This change has low security impact as there are minor changes to the creation; and scoping of service account credentials. Note that for each `FS`, credentials; are scoped to the default storage oauth2 scopes for each service.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14684:172,interface,interface,172,https://hail.is,https://github.com/hail-is/hail/pull/14684,2,['interface'],['interface']
Integrability,"This change integrates the C++ code of libhail with the python code as; a python native extension exposed as _hail. It is extremely minimal for; now, containing only small wrappers for the C++ versions of hail virtual; types as python classes/objects. It is completely unused and introduces; python build time dependencies of a C++20 compiler and CMake. The LLVM dependencies should be optional for now as they add a lot to; the binary size without adding any functionality. They will still get; built if they are found. In the future, it may be easier or more desireable to maintain the _hail; module sources as Cython rather than C++, however, for both learning's; sake and ease of compilation, the module is pure C++.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10505:12,integrat,integrates,12,https://hail.is,https://github.com/hail-is/hail/pull/10505,4,"['depend', 'integrat', 'wrap']","['dependencies', 'integrates', 'wrappers']"
Integrability,"This change is split out from a larger refactoring effort on the various Backend ; implementations. The goals of this effort are to provide query-level ; configuration to the backend that's currently tied to the lifetime of a backend,; reduce code duplication and reduce state duplication. In this change, I'm restoring references to the execute context [1] and ; decoupling them from the backend. In a future change, they'll be lifted out of ; the backend implementations altogether. This is to reduce the surface area of ; the Backend interface to the details that are actually different. Both the Local and Spark backend have state that's manipulated from python via ; various py methods. These pollute the Backend interface [2] and so have been ; extracted into the trait Py4JBackendExtensions. In future changes, this will ; become a facade that owns state set in python. Notes; [1] ""Restoring"" old behaviour I foolishly removed in fe5ed32; [2] ""Pollute"" in that they obfuscate what's different about backend query plan ; and execution",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14686:537,interface,interface,537,https://hail.is,https://github.com/hail-is/hail/pull/14686,2,['interface'],['interface']
Integrability,"This change is split out from a larger refactoring effort on the various Backend; implementations. The goals of this effort are to provide query-level; configuration to the backend that's currently tied to the lifetime of a backend,; reduce code duplication and reduce state duplication. In this change, I'm removing blockmatrix persist/unpersist from the `Backend`; interface by adding `BlockMatrixCache: mutable.Map[String, BlockMatrix]` to; `ExecuteContext`. The various reader/writer implementations simply fetch the ; block matrix from this cache. For the spark backend, this is backed by a cache; whose lifetime is tied to the spark backend. Since block matrices are not; supported in the local and service backends, the cache is an empty map. Note that block matrix persist is broken in python (#14689)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14690:367,interface,interface,367,https://hail.is,https://github.com/hail-is/hail/pull/14690,1,['interface'],['interface']
Integrability,"This change is temporary. I do not intend to keep the extra hop to `auth` on all internal-gateway requests. Once all the TLS changes go in and everything in the cluster is TLS-secured, then I can switch the internal gateway to unconditionally use HTTPS and remove the router-resolver's extra endpoint. I've already deployed this (I need it to get batch tests to pass in my namespace.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8490:268,rout,router-resolver,268,https://hail.is,https://github.com/hail-is/hail/pull/8490,1,['rout'],['router-resolver']
Integrability,"This change replaces uses of `requests.Session` with uses of; `BlockingClientSession`. The latter is a class introduced by this; PR. BlockingClientSession is a shim around; [`aiohttp.ClientSession`](https://github.com/aio-libs/aiohttp/blob/master/aiohttp/client.py#L167). I; also needed these new classes:. - `BlockingClientResponse`, representing a response to an HTTP request. Wraps `aiohttp.ClientResponse`. - `BlockingClientWebSocketResponse`, representing a web socket session. Wraps; `aiohttp.ClientWebSocketResponse`. - `BlockingClientresponseContextManager` and; `BlockingClientWebSocketResponseContextManager` which wrap the context manager; returned by `aiohttp_client_session.post(...)` or; `....ws_connect(...)`. They wrap the `__aenter__` and `__aexit__` calls and; also wrap the value returned by `__aenter__`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9863:379,Wrap,Wraps,379,https://hail.is,https://github.com/hail-is/hail/pull/9863,5,"['Wrap', 'wrap']","['Wraps', 'wrap']"
Integrability,"This change will make it so that it no longer goes to the container logs, and instead will be placed in the exception message.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8146#issuecomment-591013808:118,message,message,118,https://hail.is,https://github.com/hail-is/hail/issues/8146#issuecomment-591013808,1,['message'],['message']
Integrability,This changes the signatures of native methods to pass in the pointer from Scala so that we don't have to call back into the JVM to retrieve it. Some other small changes: I put all the native methods together and removed some methods that weren't used and which I didn't think needed to be a part of the region interface.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6662:310,interface,interface,310,https://hail.is,https://github.com/hail-is/hail/pull/6662,1,['interface'],['interface']
Integrability,This clashes with the dependency immediately below it. I've added it to my branch of major version bumps that I'll sort out.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11546#issuecomment-1062276650:22,depend,dependency,22,https://hail.is,https://github.com/hail-is/hail/pull/11546#issuecomment-1062276650,1,['depend'],['dependency']
Integrability,"This consolidates all the apt-get dependencies into one line and brings them into line with [Dockerfile best practices](https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#run). It also sets the default user to a non-root user, thus limiting what can go wrong if we have security holes in the PR builder.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4221:34,depend,dependencies,34,https://hail.is,https://github.com/hail-is/hail/pull/4221,1,['depend'],['dependencies']
Integrability,"This creates another hailgenetics image with just hailtop and its python dependencies installed (no hail query, no java, no gcloud), primarily useful for using the copy tool. In contrast to hailgenetics/hail's 2.89GB on disk, hailgenetics/hailtop-slim is 289MB.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11797:73,depend,dependencies,73,https://hail.is,https://github.com/hail-is/hail/pull/11797,1,['depend'],['dependencies']
Integrability,"This creates another hailgenetics image with just hailtop and its python dependencies installed (no hail query, no java, no gcloud), primarily useful for using the copy tool. Instead of 3GiB it is less than half a GiB. This also is the start of separating out our python dependencies into those required by separate modules. The hail dependencies now includes the hailtop dependencies. Ultimately, I want to move the services' dependencies to include those of hailtop and not all of hail (getting pyspark out of our services images).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12446:73,depend,dependencies,73,https://hail.is,https://github.com/hail-is/hail/pull/12446,5,['depend'],['dependencies']
Integrability,"This defines (but doesn't yet implement) a ReadPartition value IR node. For an idea of how it would be implemented and used, see #5326 for a (non-working) example. I think I need to make the interface for c++ to call back into spark a little better before I implement this, but in the meantime I'm PRing the IR bits.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5460:191,interface,interface,191,https://hail.is,https://github.com/hail-is/hail/pull/5460,1,['interface'],['interface']
Integrability,This depends on #5479 now,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5363#issuecomment-479897542:5,depend,depends,5,https://hail.is,https://github.com/hail-is/hail/pull/5363#issuecomment-479897542,1,['depend'],['depends']
Integrability,This doesn't actually affect the hail2 interface,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1610#issuecomment-349721354:39,interface,interface,39,https://hail.is,https://github.com/hail-is/hail/issues/1610#issuecomment-349721354,1,['interface'],['interface']
Integrability,"This feature is not widely supported (only on MatrixTable & SparkBackend); and is not well-tested in CI (we only test that matrix writes run and return; the correct result with the _checkpoint_file parameter, not the performance; semantics). I've played around with this code on my laptop and the performance semantics; are what I expect. Logging messages provide some transparency too:. ```. In [2]: mt = hl.utils.range_matrix_table(100000, 10, 500). In [3]: mt.write('/tmp/mt_temp4.mt', _checkpoint_file='/tmp/mt_checkpoint'); 	2021-03-23 14:50:06 Hail: INFO: creating new checkpoint at /tmp/mt_checkpoint; 	^C---------------------------------------------------------------------------00]; 	KeyboardInterrupt Traceback (most recent call last); 	<snip>; 	KeyboardInterrupt:. In [4]: mt.write('/tmp/mt_temp4.mt', _checkpoint_file='/tmp/mt_checkpoint'); 	2021-03-23 14:50:14 Hail: INFO: resuming matrix write from /tmp/mt_checkpoint with 192/500 partitions written; 	^C---------------------------------------------------------------------------00]; 	KeyboardInterrupt Traceback (most recent call last); 	<snip>; 	KeyboardInterrupt:. In [5]: mt.write('/tmp/mt_temp4.mt', _checkpoint_file='/tmp/mt_checkpoint'); 	2021-03-23 14:50:22 Hail: INFO: resuming matrix write from /tmp/mt_checkpoint with 300/500 partitions written; 	^C---------------------------------------------------------------------------00]; 	KeyboardInterrupt Traceback (most recent call last); 	<snip>; 	KeyboardInterrupt:. In [6]: mt.write('/tmp/mt_temp4.mt', _checkpoint_file='/tmp/mt_checkpoint'); 	2021-03-23 14:50:29 Hail: INFO: resuming matrix write from /tmp/mt_checkpoint with 372/500 partitions written; 	2021-03-23 14:50:36 Hail: INFO: wrote matrix table with 100000 rows and 10 columns in 500 partitions to /tmp/mt_temp4.mt; 	 Total size: 391.55 KiB; 	 * Rows/entries: 391.51 KiB; 	 * Columns: 31.00 B; 	 * Globals: 11.00 B; 	 * Smallest partition: 200 rows (505.00 B); 	 * Largest partition: 200 rows (835.00 B). In [7]: mt_r",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10215:347,message,messages,347,https://hail.is,https://github.com/hail-is/hail/pull/10215,1,['message'],['messages']
Integrability,"This fixes a few of problems:; - Batch.jobs() was discarding the job json objects and returning an Job objects. This is not OK because we need the metadata from the json objects for efficiency (e.g. in CI PR/batch pages).; - We confused Job.status(), which is the job json object, with the status field of that object. In particular, we got that wrong in BatchFormatVersion.get_status_exit_code_duration in the call to Job.{exit_code, total_duration_msecs}. Add a test to check we got this right.; - Return the duration in msecs, not a string, because as an API, the string is useless. humanize it before sending it to the API. I think the batch client is (1) has a lot of legacy baggage that can be cleaned up, and (2) is massive overkill and can probably be cleaned up. It should probably have no objects, pass around job_id ints or (batch_id, job_id) tuples, and be a thin wrapper around request calls. Pipeline should be the high level API. Finally, I think we need a little document (just a comment) about the format of GET /batches/batch_id and GET /jobs/job_id. It's changed enough that it is getting a little hard to follow. I'm going to dev deploy to test the UI. Don't approve until it checks out, please. FYI @jigold",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7996:876,wrap,wrapper,876,https://hail.is,https://github.com/hail-is/hail/pull/7996,1,['wrap'],['wrapper']
Integrability,"This fixes an issue where we cannot retrieve old batches for a PR. Addresses this error:; ```; {""levelname"": ""ERROR"", ""asctime"": ""2019-08-01 15:59:17,119"", ""filename"": ""web_protocol.py"", ""funcNameAndLine"": ""log_exception:355"", ""message"": ""Error handling request"", ""exc_info"": ""Traceback (most recent call last):\n File \""/usr/local/lib/python3.6/dist-packages/aiohttp/web_protocol.py\"", line 418, in start\n resp = await task\n File \""/usr/local/lib/python3.6/dist-packages/aiohttp/web_app.py\"", line 458, in _handle\n resp = await handler(request)\n File \""/usr/local/lib/python3.6/dist-packages/aiohttp/web_urldispatcher.py\"", line 157, in handler_wrapper\n result = await result\n File \""/usr/local/lib/python3.6/dist-packages/aiohttp_jinja2/__init__.py\"", line 91, in wrapped\n context = await coro(*args)\n File \""/ci/ci.py\"", line 170, in get_batch\n j['duration'] = humanize.naturaldelta(datetime.timedelta(seconds=sum(j['duration'])))\nTypeError: unsupported operand type(s) for +: 'int' and 'NoneType'""}; {""levelname"": ""INFO"", ""asctime"": ""2019-08-01 15:59:17,119"", ""filename"": ""web_log.py"", ""funcNameAndLine"": ""log:233"", ""message"": ""10.32.0.177 [01/Aug/2019:15:59:17 +0000] \""GET /batches/584 HTTP/1.0\"" 500 315 \""-\"" \""Mozilla/5.0 (Macintosh;; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6783:228,message,message,228,https://hail.is,https://github.com/hail-is/hail/pull/6783,3,"['message', 'wrap']","['message', 'wrapped']"
Integrability,This fixes an issue which caused tests run through IntelliJ to fail due to version conflicts between dependencies.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14298:101,depend,dependencies,101,https://hail.is,https://github.com/hail-is/hail/pull/14298,1,['depend'],['dependencies']
Integrability,"This fixes one mistake (right join does not set fields in the right table to missing), and makes the join table to be more precise. Keys are arrays of columns/fields of the table. They need to be present (they must be of same length and type for a join to be performed). The values are what are considered. The description also doesn't give a clear idea that left/right join is really about returning all rows from left/right table, and then joining the right/left table's fields depending on matches.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8467:480,depend,depending,480,https://hail.is,https://github.com/hail-is/hail/pull/8467,1,['depend'],['depending']
Integrability,"This fixes the ""Unknown source"" issue in asm stack traces in IntelliJ. Also:; - Exclude conflicting asm version from hadoop dependency. I'm not 100% sure this is right, but it seems to work.; - Remove unused jacoco",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8372:124,depend,dependency,124,https://hail.is,https://github.com/hail-is/hail/pull/8372,1,['depend'],['dependency']
Integrability,This function permits developers to preserve ordering; when flatMaping a function which produces elements; montonically related to the source element. This change depends on PR #706. Merging that commit will simplify this diff.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/696:163,depend,depends,163,https://hail.is,https://github.com/hail-is/hail/pull/696,1,['depend'],['depends']
Integrability,"This installs our fully-pinned requirements deep in the docker image and then installs the hail wheel without dependencies on top. This will be a lot more consistent (and docker cache friendly) than the current approach, which will install all dependencies with the wheel and possibly upgrade some of them. Also did the same to the hail-pip-installed images used for testing.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12433:110,depend,dependencies,110,https://hail.is,https://github.com/hail-is/hail/pull/12433,2,['depend'],['dependencies']
Integrability,"This is a follow-up on #10207, which circumvents `router-resolver` and `router` and uses kube dns to route requests passing through internal gateway directly to destination namespace and service. Previously, `internal-gateway` was only using `router-resolver` to discover the scheme of the `router` it needed to forward the request to. Since we are using `https` in front of all of our services now, and are ultimately retiring router, this is no longer necessary. This is also the last use of `router-resolver` in the whole codebase, so we can remove the service entirely! (second commit). This version of `internal-gateway` has been running since yesterday evening and there is currently no `router-resolver` deployment in default!",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10212:50,rout,router-resolver,50,https://hail.is,https://github.com/hail-is/hail/pull/10212,8,['rout'],"['route', 'router', 'router-resolver']"
Integrability,"This is a preparatory PR for getting rid of router-resolver. Currently, the major role of router-resolver is:; - Find the user session in a request; - Make a call to default auth to verify the session and retrieve userdata; - If the user is a developer, return the router IP in the given namespace (given as input to router-resolver). The code for this is [here](https://github.com/hail-is/hail/blob/466f3c32c7fed972dc9bf45834669fdff038224c/router-resolver/router_resolver/router_resolver.py#L24-L66). This whole process can just be replaced by an auth endpoint that returns whether or not a request is coming in from a valid developer (we can rely on kubernetes services to find IP addresses on any of our deployments). This moves over the finding of the user session in router-resolver to make an auth endpoint that can replace router-resolver. I created this auth endpoint in #10139 with this ultimate goal in mind but did not incorporate the other places we store sessions. EDIT: Second commit fixes a silly mistake that `verify_dev_credentials` makes a whole separate network call to the `userinfo` endpoint, when they should really just both use the same helper function. The semantics of both endpoints should remain unchanged.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10203:44,rout,router-resolver,44,https://hail.is,https://github.com/hail-is/hail/pull/10203,7,['rout'],"['router', 'router-resolver']"
Integrability,"This is a quadratic task in releases, so it's not really feasible. We just need to be better about writing which interface is used in a post.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1384#issuecomment-349720138:113,interface,interface,113,https://hail.is,https://github.com/hail-is/hail/issues/1384#issuecomment-349720138,1,['interface'],['interface']
Integrability,"This is a sane choice, and while I do not expect java to ever change the; toString of Date, it's better to have a consistent format across all; file systems and interfaces.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11581:161,interface,interfaces,161,https://hail.is,https://github.com/hail-is/hail/pull/11581,1,['interface'],['interfaces']
Integrability,"This is a simple refactor, that moves `Stream[A]` to a top-level class. Some of my wip depends on this, so it will be helpful to get it merged. This should also simplify merging `Stream` with the PType infrastructure, where `Stream` should become a `PCode`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8547:87,depend,depends,87,https://hail.is,https://github.com/hail-is/hail/pull/8547,1,['depend'],['depends']
Integrability,"This is a simple refactoring of `lir.Emit` to directly use the core visitor based interface of ASM, rather than the higher level `tree` interface. This should have a small performance benefit, as we aren't building the in-memory tree representation only to immediately walk it with a visitor. But I also find this version of `Emit` slightly cleaner. For reference, you can find the documentation for ASM 5.1 [here](https://javadoc.io/doc/org.ow2.asm/asm/5.1/index.html).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9511:82,interface,interface,82,https://hail.is,https://github.com/hail-is/hail/pull/9511,2,['interface'],['interface']
Integrability,"This is a small change which allows `hl.plot.smoothed_pdf` to optionally take an existing figure to add the pdf plot to, rather than creating a new figure. As the old plotting interface should be deprecated soon, I'm not too worried about adding the option to the other plots as well.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11807:176,interface,interface,176,https://hail.is,https://github.com/hail-is/hail/pull/11807,1,['interface'],['interface']
Integrability,"This is a step towards requiring names on all generated objects.; - {Emit}{Class, Method, Function}Builder now takes a type parameter that represents (a supertype) of the class being built: e.g. MethodBuilder[C] is a builder for a method on a class of type C. Note, we can't have a type parameter that represents the actual class type because that doesn't exist yet.; - {Emit}FunctionBuilder all but gone: {Emit}FunctionBuilder is now just a {Emit}MethodBuilder is an apply method. Most functionality moved to {Emit}ClassBuilder.; - Added EmitClassBuilder.; - It is convenient to have e.g. MethodBuilder support the ClassBuilder interface: this is what the Wrapped traits are for: MethodBuilder extends WrappedClassBuilder and ClassBuilder extends WrappedModuleBuilder. So MethodBuilder has the ClassBuilder interface, but is not actually a ClassBuilder. I tried a bunch of variants for the design of this, and while I don't think this is quite perfect, it seems workable.; - EmitMethodBuilder extends WrappedMethodBuilder, etc. Rather than overloading, the two interfaces are distinct: genMethod vs genEmitMethod, etc.; - Pushed ""new vs gen"" into more places e.g. newMethod vs genMethod. newMethod takes a name and creates a method of that name (e.g. apply). genMethod takes a baseName and creates a unique name based on the baseName.; - MethodBuilder newField => genFieldThisRef to distinguish it from ClassBuilder.newField. The former returns a Settable[T] referencing `this.<field>`, the latter just returns a Field.; - All methods supporting code generation for IR take EmitMethodBuilder rather than MethodBuilder (PType routines, aggregators, etc.). Summarizing the new class structure:. ```; class ModuleBuilder; trait WrappedModuleBuilder; def modb: ModuleBuilder; class ClassBuilder[C] extends WrappedModuleBuilder; trait WrappedClassBuilder[C]; def cb: ClassBuilder[C]; class MethodBuilder[C] extends WrappedClassBuilder[C]; trait WrappedMethodBuilder[C]; def mb: MethodBuilder; class Funct",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8335:1268,Wrap,WrappedMethodBuilder,1268,https://hail.is,https://github.com/hail-is/hail/pull/8335,1,['Wrap'],['WrappedMethodBuilder']
Integrability,"This is a total overhaul of our docker images. Though very verbose, I tried to stick to these main tenets:. - Any docker image has exactly 1 layer in it (all the way down to ubuntu) that installs pip dependencies. This primarily aims to protect the cache for this particularly large layer and also avoids a later layer silently upgrading the version of a dependency installed in an earlier layer. This pairs nicely with the following goal; - We only ever use 1 version of a dependency across the monorepo. Liberal use of pip's [constraint files](https://pip.pypa.io/en/stable/user_guide/#constraints-files) to ensure that the dependencies for a service must be compatible with dependencies from hail. The `install-dev-dependencies` target which install all our pinned requirements files would tell you if there's any incompatible versions of transitive dependencies across the repo; - The image graph is shallow and images don't contain more than they need. In order to have a single layer with requirements and hail code on top, I moved the service images to just be based on hail-ubuntu. This shortens the critical path and therefore reduces total image building time by reducing the number of times our image data needs to be downloaded and re-uploaded to the registry. I also removed a lot of unnecessary cruft like gcloud in places it wasn't used anymore, some unused/unnecessary pip requirements, etc.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12578:200,depend,dependencies,200,https://hail.is,https://github.com/hail-is/hail/pull/12578,7,['depend'],"['dependencies', 'dependency']"
Integrability,"This is a useful discussion: https://stackoverflow.com/questions/26619478/are-dependent-pull-requests-in-github-possible. If I create multiple, stacked branches in hail-is/hail and PR them against each other, NOT master (except the first one), then they can be reviewed independently. I might start trying to do this. I still have a bunch more PRs on this RegionValue stuff. :-/",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2302#issuecomment-337749177:78,depend,dependent-pull-requests-in-github-possible,78,https://hail.is,https://github.com/hail-is/hail/pull/2302#issuecomment-337749177,1,['depend'],['dependent-pull-requests-in-github-possible']
Integrability,"This is all passing except check_batch is running in an image on python 3.6 and the worker is on python 3.7. The process initializer isn't exposed until 3.7. I think I need to change the base image, but am worried about breaking Hail and other dependencies. Otherwise, I can just pass the key file path and the project and create the credentials and gcs client each time a function is called rather than once per process. This will make it slower for small files.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8368#issuecomment-607588305:244,depend,dependencies,244,https://hail.is,https://github.com/hail-is/hail/pull/8368#issuecomment-607588305,1,['depend'],['dependencies']
Integrability,"This is awesome. Two thoughts:. Objects corresponding to builtin types have py4j wrapper types, e.g.:. ```; >>> samples = vds.query_samples('samples.map(s => s.id).collect()'); >>> samples; [u'C1046::HG02024', ...]; >>> type(samples); <class 'py4j.java_collections.JavaList'>; ```. I think this is in the spirit of python (JavaList is list-like), but code (like ours!) that does things like `isinstance(x, list)` or `isinstance(x, str)` is going to fail. Second, this will work for python collections as described here:. https://www.py4j.org/advanced_topics.html. but won't work for user-defined objects like Variant, etc. that we'll want to introduce. For example, what d you want to return for `vds.query_variants('variants.filter(v => ...).collect()`. Shouldn't you get a python list of python Variant instances? I think to do this we have to do the translation no the python side. Thoughts?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1255#issuecomment-274365803:81,wrap,wrapper,81,https://hail.is,https://github.com/hail-is/hail/pull/1255#issuecomment-274365803,1,['wrap'],['wrapper']
Integrability,"This is currently an IR that does nothing except take an IR of a container type and changes the wrapper type to TStream. In this PR, I've defined it in the usual (Scala) IR framework and in Emit (currently equivalent to ToArray, but that will change in the c++ emitter as the stream infrastructure goes in). It's otherwise not used yet (and will essentially continue to be a no-op in the JVM emitter), so I haven't written tests other than the parser test. I intend to use this mostly to enforce non-instantiation of arrays in the c++ emitter, so that we don't inadvertently try to create e.g. an array of all the rows in a partition.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5637:96,wrap,wrapper,96,https://hail.is,https://github.com/hail-is/hail/pull/5637,1,['wrap'],['wrapper']
Integrability,This is definitely no longer high-prio -- we'll throw the correct error message now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6223#issuecomment-500771034:72,message,message,72,https://hail.is,https://github.com/hail-is/hail/issues/6223#issuecomment-500771034,1,['message'],['message']
Integrability,"This is due to FSs in `hailtop.fs` never getting closed. Unfortunately we exposed functions on a module, not a context manager. Options include; 1. adding a `hailtop.fs.close` method; 2. Using a new `RouterFS` on every `hailtop.fs` method; 3. Have users instantiate a `RouterFS` as a context manager and use that. Among these options I prefer 2 and 3. I think using a standalone function instead of properly allocating a context manager can be a convenience/performance tradeoff. 3 could use a bit of thought though as it adds more user-facing API.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14280#issuecomment-1936521020:200,Rout,RouterFS,200,https://hail.is,https://github.com/hail-is/hail/issues/14280#issuecomment-1936521020,2,['Rout'],['RouterFS']
Integrability,This is en route to removing IndexedRowMatrix and ExportableMatrix,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2661:11,rout,route,11,https://hail.is,https://github.com/hail-is/hail/pull/2661,1,['rout'],['route']
Integrability,This is failing with this message:. ```; + python3 -m pylint --rcfile pylintrc hailtop; ************* Module hailtop.aiotools.weighted_semaphore; /usr/local/lib/python3.7/dist-packages/hailtop/aiotools/weighted_semaphore.py:2:0: E0401: Unable to import 'sortedcontainers' (import-error); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10752#issuecomment-897018931:26,message,message,26,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897018931,1,['message'],['message']
Integrability,"This is great, not having to enumerate the dependencies. Hmm, this is potentially making the build 2x slower. Your branch:. > 17 | build_hail | Complete | Success 🎉 (0) | 8 minutes | log. A master deploy a few moments ago:. > 16 | build_hail | Complete | 0 | 4 minutes | log. The cluster might have been under load when your tests run. Can you do a bit of benchmarking to see if this is real?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6248#issuecomment-498529082:43,depend,dependencies,43,https://hail.is,https://github.com/hail-is/hail/pull/6248#issuecomment-498529082,1,['depend'],['dependencies']
Integrability,"This is great, thanks @cseed! I've tried the gradlew option, and it worked well on Debian Jessie with java-8-oracle. `./gradlew installDist` worked, and the majority of the tests passed in `./gradlew check` (4 failed; I can give you the details if this is useful). On Ubuntu 16.04 with java-8-openjdk (the default) I get an error:. ```; :compileJava UP-TO-DATE; :compileScala; /home/jk/github/hail/src/main/scala/org/broadinstitute/hail/expr/Type.scala:80: not enough arguments for constructor AnnotationPathException: (msg: String)org.broadinstitute.hail.annotations.AnnotationPathException; throw new AnnotationPathException(); ^; /home/jk/github/hail/src/main/scala/org/broadinstitute/hail/expr/Type.scala:98: not enough arguments for constructor AnnotationPathException: (msg: String)org.broadinstitute.hail.annotations.AnnotationPathException; throw new AnnotationPathException(); ^; /home/jk/github/hail/src/main/scala/org/broadinstitute/hail/expr/Type.scala:424: not enough arguments for constructor AnnotationPathException: (msg: String)org.broadinstitute.hail.annotations.AnnotationPathException; case None => throw new AnnotationPathException(); ^; three errors found; :compileScala FAILED. FAILURE: Build failed with an exception.; ```. Is this a dependency on java-8-oracle do you think?. My immediate problem is solved, as I have hail running now, so this is just out of curiosity really. l think it would be good for new users if you could nail down the dependencies a bit more precisely. For testing and development, it's also really useful to be able to spin up a quick Ubuntu VM, apt-get install a few packages and make a fresh install.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/594#issuecomment-240346120:1258,depend,dependency,1258,https://hail.is,https://github.com/hail-is/hail/issues/594#issuecomment-240346120,2,['depend'],"['dependencies', 'dependency']"
Integrability,"This is in implementation of `linear_regression_rows` that does not rely on any `MatrixToTableApply` nodes. Once `TableKeyBy` is lowered, this should be executable on the service. There are lingering issues:. 1. `TableGroupWithinPartitions` is likely not the right abstraction. It forgets about keying, which forces me to rekey and scan the table even though it's already in order. 2. I don't support chained linear regression (the situation where `y` is a list of lists of phenotypes). I just throw an error there for now. . 3. It's not as fast as the current `linear_regression_rows` (addressing problem 1 should help with this). 4. I don't yet support the `pass_through` field. I want to PR this now because I would like to get the benchmark in so I can continue to measure how this performs in comparison to the current version of `linear_regression_rows`. The tests of this method also serve as useful integration tests for lots of NDArray functionality. Additionally, it'll make it easier to make a smaller PR in the future that adds the new `TableIR` that will hopefully be more suitable than `TableGroupWithinPartitions`",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8757:907,integrat,integration,907,https://hail.is,https://github.com/hail-is/hail/pull/8757,1,['integrat'],['integration']
Integrability,"This is mostly cleanup reducing the amount of the codebase that depends on GSA key files (which are not available in terra or a future keyless hail-vdc). The core bit is instead of threading `credentials_file=""/gsa-key/key.json` through the batch and auth codebase we set `GOOGLE_APPLICATION_CREDENTIALS` in their deployments. I can't think of a scenario where `auth` or `batch` would need to use multiple identities so better to remove their ability to do so and always use the default credentials. I also did a bit of tidying up, using `$GOOGLE_APPLICATION_CREDENTIALS` instead of the hard-coded path and removing the credentials endpoints on the batch-driver which have been unused by workers for many months now.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13596:64,depend,depends,64,https://hail.is,https://github.com/hail-is/hail/pull/13596,1,['depend'],['depends']
Integrability,"This is mostly straightforward, except in the case of PBinary and PString, where I elected to move static methods to instance methods. This was done because these methods completely depend on the PType, and having them as static methods prevents use of non-canonical versions of these methods (regardless of where they are). This includes functions like allocate, which deal with memory layout, and therefore must be configurable by ptype. Places where these static methods are used often include places where a PString or PBinary are passed around. Will finish this up after I get back most likely, or we can punt on the PStirng/PBinary issue for later (but I think it's worth doing now for the reasons outlined above). Stacked on https://github.com/hail-is/hail/pull/7903; ping @tpoterba",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7904:182,depend,depend,182,https://hail.is,https://github.com/hail-is/hail/pull/7904,1,['depend'],['depend']
Integrability,"This is not this interface's final form, but it is an important; transitionary step in moving the entire code generation codebase away; from Code[T]. The CodeOrdering interface now (as before) has 12 methods, but before; the function signatures looked like:. def compare(lhs: (Code[Boolean], Code[T]), rhs: (Code[Boolean], Code[T])) -> Code[Int]. They now look like:. def compare(cb: EmitCodeBuilder, lhs: EmitCode, rhs: EmitCode) -> Code[Int]. There have been a lot of miscellaneous changes needed to get this to; work. There's some stuff that needs to be cleaned up, notably in Emit,; it's not always the case that the type of the IR/Aggregator is the same; as the type of the EmitCode that emit produces. I've tried to add; assertions where possible, but if there is an error, then a rather; cryptic 'Cannot pop value off of empty stack' exception is thrown,; generally indicating that an ordering expected an optional value, but; a required emitcode was provided.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9825:17,interface,interface,17,https://hail.is,https://github.com/hail-is/hail/pull/9825,2,['interface'],['interface']
Integrability,"This is now ready to be reviewed. @danking Could you please help me setup the tests to run on the CI?. @catoverdrive This is an example of the interface and the output generated. There's also a tests file in there. I'm happy to explain the design to you if you'd like. ```python3; from pipeline import Pipeline. p = Pipeline() # initialize a pipeline. # Define mapping for taking a file root to a set of output files; bfile = {'bed': '{root}.bed', 'bim': '{root}.bim', 'fam': '{root}.fam'}. # Import a file as a resource; file = p.read_input('gs://hail-jigold/random_file.txt'). # Import a set of input files as a resource group; input_bfile = p.read_input_group(bed='gs://hail-jigold/input.bed',; bim='gs://hail-jigold/input.bim',; fam='gs://hail-jigold/input.fam'). # Remove duplicate samples from a PLINK dataset; subset = p.new_task(); subset = (subset; .label('subset'); .docker('ubuntu'); .declare_resource_group(tmp1=bfile, ofile=bfile); .command(f'plink --bfile {input_bfile} --make-bed {subset.tmp1}'); .command(f""awk '{{ print $1, $2}}' {subset.tmp1.fam} | sort | uniq -c | awk '{{ if ($1 != 1) print $2, $3 }}' > {subset.tmp2}""); .command(f""plink --bed {input_bfile.bed} --bim {input_bfile.bim} --fam {input_bfile.fam} --remove {subset.tmp2} --make-bed {subset.ofile}"". )). # Run shapeit for each contig from 1-3 with the output from subset; for contig in [str(x) for x in range(1, 4)]:; shapeit = p.new_task(); shapeit = (shapeit; .label('shapeit'); .declare_resource_group(ofile={'haps': ""{root}.haps"", 'log': ""{root}.log""}); .command(f'shapeit --bed-file {subset.ofile} --chr {contig} --out {shapeit.ofile}')). # Merge the shapeit output files together; merger = p.new_task(); merger = (merger; .label('merge'); .command('cat {files} >> {ofile}'.format(files="" "".join([t.ofile.haps for t in p.select_tasks('shapeit')]),; ofile=merger.ofile))). # Write the result of the merger to a permanent location; p.write_output(merger.ofile, ""gs://jigold/final_output.txt""). # Execute the pipeline;",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4937#issuecomment-453230282:143,interface,interface,143,https://hail.is,https://github.com/hail-is/hail/pull/4937#issuecomment-453230282,1,['interface'],['interface']
Integrability,This is obviated by my imminent aggregator registry changes. The L suffix change should be a separate PR. I'll integrate the tests into my branch.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1051#issuecomment-262054090:111,integrat,integrate,111,https://hail.is,https://github.com/hail-is/hail/pull/1051#issuecomment-262054090,1,['integrat'],['integrate']
Integrability,"This is part of a minor bug-fix for how CI tracks active namespaces in development environments. #12093 added a table in CI's database that tracks the namespaces that CI is currently aware exists and that it manages. Non-production CIs don't really use this table (dev CIs don't update gateway routing or anything), but it's useful in development to see that CI is properly updating its database tables as it would in prod. In #12093, the migration that adds the `active_namespaces` table explicitly adds entries for the `default` namespace. However, I'm now realizing that this is a mistake, because a CI in the `dgoldste` namespace shouldn't have an entry for `default`, it should instead have an entry for `dgoldste`. That migration should have been parametrized by the namespace the migration is happening in. To do this, I need to expose the current namespace to the migration scripts, hence this PR. This is unfortunately a change to CI that needs to be deployed before it can be used by migrations. If this seems good then I'll alert the australians that they should fully deploy this PR prior to the following ones.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12755:294,rout,routing,294,https://hail.is,https://github.com/hail-is/hail/pull/12755,1,['rout'],['routing']
Integrability,This is ready for a second look. I basically tried to do the minimum to change nomenclature for services that aren't auth. I had to put in some backwards compatibility in `batch/job.py` because there could be batches with the old format for userdata in the database with `gsa_key_secret_name` instead of `hail_credentials_secret_name`. I also kept the old field in `hail/python/hailtop/hailctl/auth/user.py`. I'm not sure exactly what depends on that.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10986#issuecomment-947944813:435,depend,depends,435,https://hail.is,https://github.com/hail-is/hail/pull/10986#issuecomment-947944813,1,['depend'],['depends']
Integrability,"This is required to implement lowering for MatrixMapCols (coming after; a dependent PR goes in). We lower the per-column aggregations to an; `AggArrayPerElement`, but if there are no rows, the result would be; missing. This PR will allow us to feed in the known number of columns as the; base case.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6125:74,depend,dependent,74,https://hail.is,https://github.com/hail-is/hail/pull/6125,1,['depend'],['dependent']
Integrability,"This is somewhat intentional, because the only interface to create a Spark dataframe from a Hail table is `Table.to_spark()`, which calls `Table.expand_types()` first to convert Hail-specific data types to their generic forms. See here:; https://github.com/hail-is/hail/blob/b570bb100dca65c9e79f4297514eba1e178cd018/hail/python/hail/table.py#L2596-L2622",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/10882#issuecomment-930101834:47,interface,interface,47,https://hail.is,https://github.com/hail-is/hail/issues/10882#issuecomment-930101834,1,['interface'],['interface']
Integrability,"This is super useful, thanks @jigold! A few high level comments:. - I'd love to have this checked in, but I don't think it should be part of the regular tests, esp. when they run against the production database and this is designed to find/stress the limits of the database.; - Also, this seems most useful for benchmarking different database configuration and settings, and we don't want to vary the production database (and in some cases, we can't, like decreasing the database size).; - Therefore, I think we just have a module you can run that takes a database connection settings and n_jobs, batch_size, batch_parallelism and number of replicates, and runs the benchmark, not integrated with the build system. And .sql files to create/clean up tables. When we want to run it, we can just clone the repo and run it directly. Then we can think about wrapping it in a larger test to spinning up database instances with various node and disk sizes and MySQL settings and see how they perform.; - You explore number of jobs and batch size, but I think you should also measure amount of batch insert parallelism. You can use bounded_gather I sent you. Then basically these two tests correspond to parallelism=1 and parallelism=infinity.; - I think you can get rid of the pymysql version. No reason the async version should perform differently, no?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7181#issuecomment-538068881:681,integrat,integrated,681,https://hail.is,https://github.com/hail-is/hail/pull/7181#issuecomment-538068881,2,"['integrat', 'wrap']","['integrated', 'wrapping']"
Integrability,"This is the beginning of a series of changes to support export of VDS to VCF 4.5, the version of VCF that contains the standardized form of our work that culminated in SVCR/VDS. Reference blocks were standardized with a LEN rather than an END. So, now, by default, add LEN to all VDS reads and drop END in favor of LEN on all VDS writes. Our optimizer will be able to take care of pruning away the dead field in pipelines that don't use it. We make sure that all VDS creation (other than the combiner), such as read_vds and from_merged_representation, contains both LEN and END preserving user code that depends on the presence of the END field. Furthermore, this change contains necessary combiner updates to prefer LEN over END, and to use LEN in the combiner itself.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14675:604,depend,depends,604,https://hail.is,https://github.com/hail-is/hail/pull/14675,1,['depend'],['depends']
Integrability,"This is the current version of gateway in default since yesterday, and since then there haven't been any logs out of router.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10247#issuecomment-810268452:117,rout,router,117,https://hail.is,https://github.com/hail-is/hail/pull/10247#issuecomment-810268452,1,['rout'],['router']
Integrability,"This is the final stop for now on our nginx tour. This builds on #10207, which altered `internal.hail.is` use k8s dns instead of router/router-resolver to proxy directly to services, and does so in default now as well. Unlike #10207, however, traffic coming in through `hail.is` is not necessarily authenticated, and we do not expose just any k8s service that happens to exist. Instead, I've altered `letsencrypt/domains.txt` to now be `letsencrypt/subdomains.txt` and templated the gateway config to generate explicit server blocks for each subdomain in `subdomains.txt`. This enforces that you cannot expose a service unless it is also listed in the `letsencrypt` directory (the dev must still remember to regenerate the certs). Now, the process for exposing a service is:; - Add a subdomain to `subdomains.txt`; - Make a k8s Service with the name of the subdomain that points to new app; - Regenerate certs and redeploy gateway. Also added a default server block that returns a 444 (no response) for invalid subdomains. Unfortunately this still presents to the user that the cert is invalid, since *.hail.is is registered in dns (I think?) and browsers will verify certificates before anything else, but users won't be able to click through and land at the website like they could before.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10247:129,rout,router,129,https://hail.is,https://github.com/hail-is/hail/pull/10247,2,['rout'],"['router', 'router-resolver']"
Integrability,"This is the first in a series of changes that will push PCode through more of; the PType construction interfaces. The intent is to reduce code duplication,; and have as few interfaces as possible where `Code[_]` or `Code[Long]`; represents a hail type.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9205:102,interface,interfaces,102,https://hail.is,https://github.com/hail-is/hail/pull/9205,2,['interface'],['interfaces']
Integrability,"This is the first step in lowering the importers. GenericTableValue is a table value that can either be converted to a normal TableValue, or can be lowered to a TableStage. MatrixPlinkReader now generates a GenericTableValue, but haven't wired it up to the TableIR lowering logic yet (next PR). This includes two interface changes: import_plink now takes n_partitions and block_size, like import_bgen. It still takes min_partitions, which is actual min_partitions. When all is said and done, this interface should be consistent across the importers. Second, the Plink reader now splits along variants instead of bytes.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8624:313,interface,interface,313,https://hail.is,https://github.com/hail-is/hail/pull/8624,2,['interface'],['interface']
Integrability,"This is the plan for the new Hail CI (tentatively: Hephaestus aka h8s [but Hodor is also in the running, see CI software name in Zulip for the real big questions of our time]). # Expected Repo Structure; Every repository to be tested has at least two files: `hail-ci-build-image` and `hail-ci-build.sh`. The former contains a docker image in a publicly accessible repository. The latter is a shell script that exits with 0 if this branch passes the tests, otherwise it exists with a non-zero code. The logs of this shell script will be shared publicly via the GH PR Status. This script will be executed in the image referenced by `hail-ci-build-image`. # Dockerfile.pr-builder; I carefully wrote a docker file to cache as much gradle crap as possible. # gitHash in Gradle; I pushed `gitHash`'s definition into the `doLast` blocks of the gradle steps that actually need it. `doLast` is only run when the task is actually requested. This allows me to run `downloadDependencies` without creating a dependency on the entire `.git` directory (which changes with each commit, thus invalidating the cache'd docker image).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4066:995,depend,dependency,995,https://hail.is,https://github.com/hail-is/hail/pull/4066,1,['depend'],['dependency']
Integrability,"This is the precursor to a follow-up PR which removes `IntervalTree`. `IntervalTree` was doing two jobs: handling queries against the range bounds of a partitioner, which have (essentially) no overlap, and in these interval join methods, where they may overlap arbitrarily. It ended up being suboptimal for both use cases. This PR rewrites the interval join methods, which should now be faster, and no longer depends on `IntervalTree`. The existing interval join methods only supported distinct joins (`product = false`). The implementation I wrote won't work for the `product = true` case, but I have a plan for that, which will fit into the structure I started here.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4487:409,depend,depends,409,https://hail.is,https://github.com/hail-is/hail/pull/4487,1,['depend'],['depends']
Integrability,"This is the script I am running:. ```python; rf_kt =(; hc.read(rf_path,sites_only=True); .variants_keytable(); .flatten(); .select(['va.info.MQRankSum']); ); print(rf_kt.schema()). rf_df = rf_kt.to_dataframe(); rf_df.printSchema(); rf_df.show(); ```. And here is the output and stacktrace as it crashes when running `show()`:. ```; Struct {; `va.info.MQRankSum`: Double; }; root; |-- va.info.MQRankSum: double (nullable = true); Traceback (most recent call last):; File ""/tmp/db4d8e04-85c9-4eba-b0b3-4ade69200fd3/test.py"", line 60, in <module>; rf_df.show(); File ""/usr/lib/spark/python/lib/pyspark.zip/pyspark/sql/dataframe.py"", line 287, in show; File ""/usr/lib/spark/python/lib/py4j-0.10.3-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/usr/lib/spark/python/lib/pyspark.zip/pyspark/sql/utils.py"", line 63, in deco; for criterion, pop in criteria_pops:; File ""/usr/lib/spark/python/lib/py4j-0.10.3-src.zip/py4j/protocol.py"", line 319, in get_return_value; py4j.protocol.Py4JJavaError: An error occurred while calling o73.showString.; : org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 2.0 failed 20 times, most recent failure: Lost task 0.19 in stage 2.0 (TID 2520, gnomad-prod-sw-s89f.c.broad-mpg-gnomad.internal): java.lang.IndexOutOfBoundsException: 21; at scala.collection.mutable.ResizableArray$class.apply(ResizableArray.scala:43); at scala.collection.mutable.ArrayBuffer.apply(ArrayBuffer.scala:48); at is.hail.keytable.KeyTable$$anonfun$8$$anonfun$10.apply(KeyTable.scala:68); at is.hail.keytable.KeyTable$$anonfun$8$$anonfun$10.apply(KeyTable.scala:68); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59); at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48); at scala.collection.TraversableLike$class.map(TraversableLike.s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1275:928,protocol,protocol,928,https://hail.is,https://github.com/hail-is/hail/issues/1275,2,['protocol'],['protocol']
Integrability,This is the setup for the website. Some remarks:; - We run a web server (nginx) in Kubernetes (service and deployment); - It has a volume (letsencrypt-certs) that stores our SSL certificates; - Those come from Let's Encrypt. Getting new certs is totally automated (see run-letsencrypt make target).; - certbot by default installs a cron job that runs daily to renew the certs.; - Other publicly exposed services are now encrypted and go through nginx. That's set up for ci and scorecard.; - The site pod (via a cron job) polls for a new deployment every 3m for new documentation. It's not yet integrated into the ci for automatic deployment (and testing?),MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4403:593,integrat,integrated,593,https://hail.is,https://github.com/hail-is/hail/pull/4403,1,['integrat'],['integrated']
Integrability,This is thrown by the connector which always uses it to wrap an OSError,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8331:56,wrap,wrap,56,https://hail.is,https://github.com/hail-is/hail/pull/8331,1,['wrap'],['wrap']
Integrability,"This is used to print the resource name in several error messages, which failed when the error occurred for an item within a ResourceGroup. Proposed fix addressing part of #13191, for your consideration. Fixes #13191",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13192:57,message,messages,57,https://hail.is,https://github.com/hail-is/hail/pull/13192,1,['message'],['messages']
Integrability,"This is what `hailctl` looks like:. ```. Usage: hailctl [OPTIONS] COMMAND [ARGS]... Manage and monitor hail deployments. ╭─ Options ────────────────────────────────────────────────────────────────────────────────────────────╮; │ --install-completion [bash|zsh|fish|powershell|pwsh] Install completion for the specified │; │ shell. │; │ [default: None] │; │ --show-completion [bash|zsh|fish|powershell|pwsh] Show completion for the specified │; │ shell, to copy it or customize the │; │ installation. │; │ [default: None] │; │ --help Show this message and exit. │; ╰──────────────────────────────────────────────────────────────────────────────────────────────────────╯; ╭─ Commands ───────────────────────────────────────────────────────────────────────────────────────────╮; │ batch Manage batches running on the batch service managed by the Hail team. │; │ config Manage Hail configuration. │; │ curl Issue authenticated curl requests to Hail infrastructure. │; │ version Print version information and exit. │; ╰──────────────────────────────────────────────────────────────────────────────────────────────────────╯; ```. This is what `hailctl batch submit --help` looks like:. ```. Usage: hailctl batch submit [OPTIONS] SCRIPT [ARGUMENTS]... Submit a batch with a single job that runs SCRIPT with the arguments ARGUMENTS. ╭─ Arguments ──────────────────────────────────────────────────────────────────────────────────────────╮; │ * script PATH Path to the script [default: None] [required] │; │ arguments [ARGUMENTS]... [default: None] │; ╰──────────────────────────────────────────────────────────────────────────────────────────────────────╯; ╭─ Options ────────────────────────────────────────────────────────────────────────────────────────────╮; │ --files PATH Files or directories to add to the working directory of the │; │ job. │; │ [default: None] │; │ --name TEXT The name of the batch. │; │ --image-name TEXT Name of Docker image for the job │; │ [default: (hailgenetics/hail)] │; │ --ou",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13109#issuecomment-1561081921:543,message,message,543,https://hail.is,https://github.com/hail-is/hail/pull/13109#issuecomment-1561081921,1,['message'],['message']
Integrability,"This isn't a hard change, but it is a big one. Let me know if you want me to break it up. OK, I think this is ready for a look. What I've tested:. - hand deploy new auth, router-resolver to default,; - tested login/logout flow on web (auth.hail.is/login, /logout) and hailctl (hailctl auth login/logout); - then deploy in my namespace:. ```; hailctl dev deploy -b cseed/hail:auth -s deploy_auth,deploy_router,deploy_notebook2; ```. - and test login/logout flow via notebook2 (internal.hail.is/cseed/notebook2, etc.) and hailctl, where access to internal is mediated by production (default namespace) credentials. Note, to do this I copied the production oauth2 key to my namespace. We shouldn't do this in general and should create a shared dev oauth2 key. Alternatively, we should create a separate login flow doesn't use oauth2 but uses production credentials.; - and interactively tested notebook2 creating notebooks (but haven't tested the config of the notebooks themselves). Summary of changes:; - auth service that handles login/logout flow via Google OAuth2 and user verification via /userdata endpoint. Web sessions are stored in the aiohttp_session cookie (encrypted), command line sessions are stored in tokens file: tokens.json. Token files potentially contain tokens for multiple namespaces (e.g. default and cseed in the example workflow above).; - sessions are now started in the database, table `users.sessions`, which have session_id (32 random bytes, base64-encoded), user_id, creation time and max_age (for expiry); - I write notebook2 to use our async stack; - added a notion of ""deploy config"" that has three parts: location (one of external, k8s or gce), default_namespace (the default namespace to find services), and service_namespace (of overrides for specific services ... so e.g. you can use the default auth with batch in cseed). deploy_config main function is to construct URLs to contact services.; - JWTs and the jwt secret key are gone.; - Simplified configuration/data",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6892#issuecomment-527970251:171,rout,router-resolver,171,https://hail.is,https://github.com/hail-is/hail/pull/6892#issuecomment-527970251,2,"['mediat', 'rout']","['mediated', 'router-resolver']"
Integrability,"This isn't really our fault. k8s sends us a 400 when a container is in a funky state. Creating this issue so I can find it again later when I run into this. Somehow a container terminates without timing information, and the read logs request returns a 400 instead of a 404. Batch handles this fine (it treats all log read failures the same). Known issue: https://github.com/kubernetes/kubernetes/issues/59296. ```; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:39,890"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1145"", ""message"": ""update job (9, 1, 'main') with pod batch-9-job-1-c8b9b2""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:39,890"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1159"", ""message"": ""job (9, 1, 'main') mark complete""}; {""levelname"": ""WARNING"", ""asctime"": ""2019-07-11 14:19:39,899"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""mark_complete:579"", ""message"": ""job (9, 1, 'main') has pod batch-9-job-1-c8b9b2 which is terminated but has no timing information. {'api_version': 'v1',\n 'kind': 'Pod',\n 'metadata': {'annotations': None,\n 'cluster_name': None,\n 'creation_timestamp': datetime.datetime(2019, 7, 11, 14, 19, 34, tzinfo=tzlocal()),\n 'deletion_grace_period_seconds': 30,\n 'deletion_timestamp': datetime.datetime(2019, 7, 11, 14, 20, 4, tzinfo=tzlocal()),\n 'finalizers': None,\n 'generate_name': None,\n 'generation': None,\n 'initializers': None,\n 'labels': {'app': 'batch-job',\n 'batch_id': '9',\n 'hail.is/batch-instance': 'ffa5abc4607849df8e5f0036e7350bcf',\n 'job_id': '1',\n 'task': 'main',\n 'user': 'test',\n 'uuid': '291b9eed73b9433c86ff1f58624cf24d'},\n 'name': 'batch-9-job-1-c8b9b2',\n 'namespace': 'pr-6604-batch-pods-cjklalqnl5u9',\n 'owner_references': None,\n 'resource_version': '86681671',\n 'self_link': '/api/v1/namespaces/pr-6604-batch-pods-cjklalqnl5u9/pods/batch-9-job-1-c8b9b2',\n 'uid': 'e878f906-a3e6-11e9-a4bb-42010a8000af'},\n 'spec': {'active_deadline_seconds': None,\n 'affinity': ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6616:547,message,message,547,https://hail.is,https://github.com/hail-is/hail/issues/6616,3,['message'],['message']
Integrability,"This isn't what I intended with my original design and I'm trying to figure out what you did here. - I intended for entire file, not individual specs, to have a version number. That's why it is in RelationalSpec at the top level.; - FooSpec (e.g. RelationalSpec, RVDSpec, etc.) is supposed to be an abstract class that implements the interface used by the main code for the entity in question. E.g. CodecSpec knows how to build encoders and decoders. It can have many implementations.; - The file version essentially determines which Spec implementations are allowed in the file. Each spec should have a notion of when it was introduced (or deprecated, if we bump the major version) but each implementation should have its own name/version. I was imagining FooRVD2Spec if we needed a new version of the existing RVD specs.; - The type hints in the JSON determine what Spec implementation to use (e.g. UnpartitionedRVDSpec). With this design, you can't change name of an existing spec.; - The Spec is also the intended place for code which matches the interface (which might evolve) with the legacy data in the JSON file (which cannot change).; - The file format is only used to check compatibility. The Spec class hierarchy should drive the decoding of the Specs, not the file format.; - Specs that are not being generated anymore (but still need to be read) should go into a compatibility package. I think following this design will be cleaner. This is exactly the kind of forward-extensibility I designed it to handle cleanly, although I might very well have messed something up.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4734#issuecomment-436661120:334,interface,interface,334,https://hail.is,https://github.com/hail-is/hail/pull/4734#issuecomment-436661120,2,['interface'],['interface']
Integrability,This iteration also uses an extremely slow py4j protocol; ```; return [MatrixTable._from_java(jmir) for jmir in jmirs]. ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5465#issuecomment-469789909:48,protocol,protocol,48,https://hail.is,https://github.com/hail-is/hail/pull/5465#issuecomment-469789909,1,['protocol'],['protocol']
Integrability,"This just adds a convenience function to get the diagonal of a 2d ndarray. The numpy version offers more functionality when you have something greater than 2 dimensions, but I haven't needed that yet so starting with this. It won't be a breaking interface change to add more arguments to this function to support what numpy does.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8007:246,interface,interface,246,https://hail.is,https://github.com/hail-is/hail/pull/8007,1,['interface'],['interface']
Integrability,This kinda depends on #2480,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2479#issuecomment-347063979:11,depend,depends,11,https://hail.is,https://github.com/hail-is/hail/pull/2479#issuecomment-347063979,1,['depend'],['depends']
Integrability,"This leverages the Indeed LSM tree. It implements this API:; - `start(...)`; - `put(x1, ...)` (keys are extracted from the records themselves); - `get(l, r)` which takes two key records and retrieves the values in `[l, r)`. There's a server (`ShuffleServer.scala`) and a client (`ShuffleClient.scala`). They communicate over TLS-secured TCP/IP sockets on a configurable port. The server has one thread per client socket. The client is currently single-threaded. I had to add a `log4j.properties` because I don't start a HailContext and log4j gets upset when you don't configure it. Files; - `HailLSM.scala` - This wraps the Indeed LSM tree with some shims so that we encoders and decoders use `InputStream` and `OutputStream` instead of these were `Data...` interfaces.; - `HailSSLContext.scala` - This implements creation of an actually secure `SSLContext` from a key store and a trust store. It requires clients to identify themselves with a trusted certificate.; - `ShuffleClient.scala` - Self-explanatory.; - `ShuffleServer.scala` - Three classes: `Handler` corresponds to a client connection. It has its own thread. `Shuffle` owns the `Region` , the LSM tree, and the encoder/decoders. `ShuffleServer` waits for connections and spawns threads. It owns the executor service.; - `ShuffleUtils.scala` - Odds and ends.; - `Wire.scala` - Serializers and deserializers for various things. Includes renames that help me keep everything sensible (e.g. for every X I use, I have ""writeX"" and ""readX"").; - `ShuffleSuite.scala` - One test: write 1,000,000 randomly ordered numbers into the LSM tree and read them all back in order. Takes about 1 minute. Obviously we need to dramatically improve the performance of that (I think this should take not longer than one second).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8361:614,wrap,wraps,614,https://hail.is,https://github.com/hail-is/hail/pull/8361,2,"['interface', 'wrap']","['interfaces', 'wraps']"
Integrability,"This looks *AWESOME*! Organizationally, I think the tags should be english text for common search terms, and the existing tags you have should go into a `see also` or `dependencies` or something section (For clickable links to the method that this implementation uses)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4089#issuecomment-415077569:168,depend,dependencies,168,https://hail.is,https://github.com/hail-is/hail/pull/4089#issuecomment-415077569,1,['depend'],['dependencies']
Integrability,"This looks like good start. A few comments:; - I prefer using MySQL over auth0 mainly because it simplifies our eventual backup/restore story. If you think that's simpler overall, great. I don't see how integrating our db with their service does anything for us.; - I assume you're planning to pull the user data from MySQL during the login flow and add it to cookie? I think @danking @jigold and I are interested in nailing down the format for the cookie and seeing an example.; - I agree with @danking we should have an internal id field that's an integer. I think we should use that everywhere, and just use the auth0 id to look up the user record during login. So the integer id would be the primary key and the auth0 id would be unique with a secondary index.; - You need to get the GCP service account key and store it in a secret.; - The GCP service account needs permissions on the bucket. It should be bucket writer.; - Name ""user_secrets"" seems overly specific (buckets and service accounts are not secrets). ""user_data""?; - Please don't give the database a public IP.; - From a usability perspective, for user-visible names I have to say I really dislike long uuids and like the k8s-style short random string at the end. For k8s resource, you get this for free with the `generate_name` argument. For other stuff, long-term, this will potentially require retry logic to make it robust.; - I don't like this create table logic (FYI @danking @jigold). Most database users should not have permissions to create databases. There should be a k8s secret with the database root and a secret for each specific database application that only has access to that database.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5618#issuecomment-473583731:203,integrat,integrating,203,https://hail.is,https://github.com/hail-is/hail/pull/5618#issuecomment-473583731,2,['integrat'],['integrating']
Integrability,"This looks like it would work. Do you think think that after the region value transition, the `Variant`, `AltAllele`, etc., classes will be replaced with their associated views? Or if there were still a need for the Scala objects, maybe they could be wrappers around a small region and a view, so that the view classes become the single location for associated methods.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2434#issuecomment-344609522:251,wrap,wrappers,251,https://hail.is,https://github.com/hail-is/hail/pull/2434#issuecomment-344609522,1,['wrap'],['wrappers']
Integrability,"This makes it possible to explode nested fields in TableExplode,; but I don't want to solve the interface problem in this PR.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5069:96,interface,interface,96,https://hail.is,https://github.com/hail-is/hail/pull/5069,1,['interface'],['interface']
Integrability,"This means that hail (or something on which hail depends) is trying to call into BLAS. BLAS is a Fortran library and is often shipped with C bindings. The symbol `cblas_dgemv` is a C function. Your machine is likely missing `libcblas`. Can you post the output of these commands:; - `nm -g /tmp/jniloader803664626041947143netlib-native_system-linux-x86_64.so` (this may say that the file doesn't exist, in which case skip the next command; - `objdump -TC /tmp/jniloader803664626041947143netlib-native_system-linux-x86_64.so`. Can you also answer these questions:; - What distribution are you using?; - What version of that distribution do you have?; - What package management tool do you use?. If you're on Ubuntu, can you tell me what version of `libatlas-dev` you have installed?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/565#issuecomment-238879581:49,depend,depends,49,https://hail.is,https://github.com/hail-is/hail/issues/565#issuecomment-238879581,1,['depend'],['depends']
Integrability,"This moves `self.activate` into a `wait_for` with a timeout. We use a tight try-except; around the activation code to provide a precise error message if activation fails. If activation succeeds, we enter the else branch which operates as before. If activation; times out we do not deactivate. This is OK, we probably did not activate. If we did activate,; batch will eventually find out.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8816:142,message,message,142,https://hail.is,https://github.com/hail-is/hail/pull/8816,1,['message'],['message']
Integrability,"This moves the nginx proxy configuration out of router and into a sidecar in the notebook/workshop pod. This extends TLS termination from router to the notebook pod and consolidates the notebook routing logic. I didn't run a scale test but this doesn't change any functionality, and I tested in dev that I could log in to a workshop, start and open a notebook.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10204:48,rout,router,48,https://hail.is,https://github.com/hail-is/hail/pull/10204,3,['rout'],"['router', 'routing']"
Integrability,This needs to be recreated once #2519 (on which this depends) is adapted to handle GenomeReference.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2516#issuecomment-350801948:53,depend,depends,53,https://hail.is,https://github.com/hail-is/hail/pull/2516#issuecomment-350801948,1,['depend'],['depends']
Integrability,"This now gives a nice error message:. ```; >>> hl.uniroot(lambda x: x * x + 1, -1, 1).value; Error summary: HailException: sign of endpoints must have opposite signs, got: f(min) = 2.0, f(max) = 2.0; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1896#issuecomment-408636691:28,message,message,28,https://hail.is,https://github.com/hail-is/hail/issues/1896#issuecomment-408636691,1,['message'],['message']
Integrability,"This only exposes the raw results to python. I still need to wrap that in some nice convenience functions like approximate_quantile, but I didn't want to let this PR get any longer.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5570:61,wrap,wrap,61,https://hail.is,https://github.com/hail-is/hail/pull/5570,1,['wrap'],['wrap']
Integrability,"This probably needs a little cleanup. What's this for? Well, in another branch I have a bunch of IR rewrite optimizations. Those rewrite rules (1) want to test types (e.g. eliminate a cast of a type to itself), and they (2) also want to create new IRs which therefore need well-formed types. Calculating all the intermediate types explicitly (or calling Infer) everywhere both seem like non-starters. Therefore, I changed the IR nodes to compute their own types. I repurposed Infer, but it is no longer recursive. This meant that In, InAgg and Ref needed to carry their types, becuase, in the old, Infer-based way, they were dependent on the environment to type themselves, but that's no longer possible. I also repurposed Infer as a recursive type checker. This created two subtle problems: (1) the IR code uses rvRowType everywhere in stead of rowType (so it can reuse pointers to the full row) and (2) toIR needs to set the Ref type from the symbol table, but the symbol table strips out all missing bits, so the types on Ref terms disagreed with the actual values flowing around. I resolved this in two ways: (1) va now refers to the full rvRowType in all eval contexts, everywhere. (This is closer to the existing IR behavior.) (2) the symbol table no longer strips missingness, but it is stripped by Ref when the symbol is referenced. Ref also records the unstripped type which is used by toIR. The sooner we can kill AST, the better.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3332:625,depend,dependent,625,https://hail.is,https://github.com/hail-is/hail/pull/3332,1,['depend'],['dependent']
Integrability,"This proposal mounts to programming with explicit continuations. It doesn't increase the expressiveness of the loop construct that I can see. Our users are reluctant enough to learn functional programming, I think continuations is one step too far for the user interface. Internally, I don't care as much, although personally I would prefer to code up my solution. @catoverdrive's doing the work, so I'll let them decide. > As a side note, @iitalics stream emitter. Ah, I thought @catoverdrive was referring to IR level streams.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7614#issuecomment-559099522:261,interface,interface,261,https://hail.is,https://github.com/hail-is/hail/pull/7614#issuecomment-559099522,2,['interface'],['interface']
Integrability,This quote from the 2.12.0 collections docs is as depressing and still seemingly misguided:. > (Since version 2.12.0) mutable.Stack is an inelegant and potentially poorly-performing wrapper around List. Use a List assigned to a var instead.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2185#issuecomment-326970456:182,wrap,wrapper,182,https://hail.is,https://github.com/hail-is/hail/pull/2185#issuecomment-326970456,1,['wrap'],['wrapper']
Integrability,"This replaces the `gcr-push-service-account-key` secret with a more general `container-registry-push-credentials` secret with username/password. Long term, it would be best to use the higher-level batch interface and just grant CI's credentials access to the container registry, but this is the smallest step I could think of to make the buildImage step able to work in azure (except for `cleanup`, as that relies on `gcloud`, but I'll have to address that later).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10984:203,interface,interface,203,https://hail.is,https://github.com/hail-is/hail/pull/10984,1,['interface'],['interface']
Integrability,"This resolved itself. https://batch.hail.is/batches/8049645/jobs/26. I don't entirely understand the perl build process, but it seems that some dependency somehow broke itself. Matt's comment about updating to a later version stands. We'll track the need for a newer version of VEP at https://github.com/hail-is/hail/issues/13167",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12946#issuecomment-1738209895:144,depend,dependency,144,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1738209895,1,['depend'],['dependency']
Integrability,This resolves the router CrashLoopBackOff issue,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6717:18,rout,router,18,https://hail.is,https://github.com/hail-is/hail/pull/6717,1,['rout'],['router']
Integrability,This seems fine to me. I think we should check the worker and driver logs and make sure there's no unexpected messages though before merging.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13876#issuecomment-1772950616:110,message,messages,110,https://hail.is,https://github.com/hail-is/hail/pull/13876#issuecomment-1772950616,1,['message'],['messages']
Integrability,"This seems right to me. In this vein of work, there's one more thing I want: we should build this Dockerfile with the hail wheel and then execute `pylint hail && pylint hailtop`. Pylint will look for uninstalled modules. This will save us from checking in (and eventually deploying) a hail package with bad dependencies. We should probably also run the python tests against this version of hail. This is a tru, local-mode user environment. ```; FROM ubuntu:18.04. ENV LANG C.UTF-8. RUN apt-get update && \; apt-get -y install \; openjdk-8-jdk-headless \; python3 python3-pip && \; rm -rf /var/lib/apt/lists/*. COPY hail.whl pylintrc ./; RUN pip install --no-cache-dir ./hail.whl; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7031#issuecomment-530112882:307,depend,dependencies,307,https://hail.is,https://github.com/hail-is/hail/pull/7031#issuecomment-530112882,1,['depend'],['dependencies']
Integrability,"This should always produce a valid VCF with respect to: https://samtools.github.io/hts-specs/VCFv4.2.pdf. I've changed the behavior of export_vcf so that, like FORMAT field types, unsupported INFO field types must be explicitly converted to String by the user if the user really wants to export them. With good error messages, I think this will cause less confusion.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2414#issuecomment-343611350:317,message,messages,317,https://hail.is,https://github.com/hail-is/hail/pull/2414#issuecomment-343611350,1,['message'],['messages']
Integrability,This should be fixed once https://github.com/hail-is/hail/pull/5655 goes in and the pr-builder has the standard python dependencies installed for the default python3 image.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5624#issuecomment-475123834:119,depend,dependencies,119,https://hail.is,https://github.com/hail-is/hail/pull/5624#issuecomment-475123834,1,['depend'],['dependencies']
Integrability,"This should give a helpful python-level error message bout balding Nichols having an integer column key, but instead I get a Scala match error.; ```; In [9]: hl.export_vcf(hl.balding_nichols_model(3,10,10, n_partitions=3), '/tmp/foo.vcf') ; ```; randomly assigned",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7584:46,message,message,46,https://hail.is,https://github.com/hail-is/hail/issues/7584,1,['message'],['message']
Integrability,This should reduce external cloud storage dependencies making; infrastructure changes easier.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5813:42,depend,dependencies,42,https://hail.is,https://github.com/hail-is/hail/pull/5813,1,['depend'],['dependencies']
Integrability,"This should speed up the scheduler a bit. I tested it with some log statements to ensure there were cache hits. I tested the cleanup loop works before I added a try, except wrapper.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7825:173,wrap,wrapper,173,https://hail.is,https://github.com/hail-is/hail/pull/7825,1,['wrap'],['wrapper']
Integrability,"This should start passing when ""add batch docker dependency .."" https://github.com/hail-is/hail/pull/5655/files merges.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5641#issuecomment-475309489:49,depend,dependency,49,https://hail.is,https://github.com/hail-is/hail/pull/5641#issuecomment-475309489,1,['depend'],['dependency']
Integrability,This should use distinct server blocks rather than routing based on the URL.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7015#issuecomment-539530177:51,rout,routing,51,https://hail.is,https://github.com/hail-is/hail/pull/7015#issuecomment-539530177,1,['rout'],['routing']
Integrability,"This should wait for #9184 . This PR adds fluentd support for streaming the logs to Logs Viewer. Things to Note:; - I didn't have to setup the authorization at all, so I believe it's using the service account on the worker which would be the batch2 service account. I had to give that service account Logs Writer permissions. This is the same service account regardless of the namespace.; - All namespaces have output written.; - I added some labels of the instance id and namespace to help with searching. Let me know if you think we need something else.; - I used a filter to parse the JSON in the worker log to get the right timestamp of the record rather than the publication of the log message in the Logs Viewer. Example Stackdriver Queries:. ```; resource.type=""gce_instance""; labels.namespace=""jigold""; logName=""projects/hail-vdc/logs/worker.log""; ```. ```; resource.type=""gce_instance""; labels.""compute.googleapis.com/resource_name""=""batch-worker-jigold-uyvo5""; logName=""projects/hail-vdc/logs/worker.log""; ```. I basically just followed this: https://cloud.google.com/logging/docs/agent. Will attempt to get dockerd logs in some other time.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9189:691,message,message,691,https://hail.is,https://github.com/hail-is/hail/pull/9189,1,['message'],['message']
Integrability,"This simply adds the wrapping structure + header from app.hail.is. Includes no scss from app.hail.is. That will be the next PR unless you want it here. We should also decide whether we want a home page (the smoothly-rising Hail that Arcturus liked), i.e whether this will be extended with a link to batch, or not (we discussed the option at our last meeting). cc @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5429:21,wrap,wrapping,21,https://hail.is,https://github.com/hail-is/hail/pull/5429,1,['wrap'],['wrapping']
Integrability,"This still causes error messages. `hail -l /mnt/lustre/schoi/projects/TOPMed/BROAD/Chr22/TopMed.Chr${num}.QC.vds.test.log importvcf file:///mnt/lustre/schoi/projects/TOPMed/BROAD/Chr${num}/TopMed_8k.853.vcf.bgz splitmulti annotatevariants expr -c 'va.info.AC = va.info.AC[va.aIndex]' count`. `2016-08-24 16:42:27,052:8532(0x7fef97fff700):ZOO_INFO@log_env@712: Client environment:zookeeper.version=zookeeper C client 3.4.5; 2016-08-24 16:42:27,052:8532(0x7fef97fff700):ZOO_INFO@log_env@716: Client environment:host.name=nid00014; 2016-08-24 16:42:27,052:8532(0x7fef97fff700):ZOO_INFO@log_env@723: Client environment:os.name=Linux; 2016-08-24 16:42:27,052:8532(0x7fef97fff700):ZOO_INFO@log_env@724: Client environment:os.arch=2.6.32-431.el6_1.0000.9051-cray_ari_athena_c_cos; 2016-08-24 16:42:27,052:8532(0x7fef97fff700):ZOO_INFO@log_env@725: Client environment:os.version=#1 SMP Thu Jan 28 18:37:39 UTC 2016; 2016-08-24 16:42:27,052:8532(0x7fef97fff700):ZOO_INFO@log_env@733: Client environment:user.name=schoi; 2016-08-24 16:42:27,052:8532(0x7fef97fff700):ZOO_INFO@log_env@741: Client environment:user.home=/home/users/schoi; 2016-08-24 16:42:27,052:8532(0x7fef97fff700):ZOO_INFO@log_env@753: Client environment:user.dir=/mnt/lustre/schoi/projects/TOPMed/BROAD/Chr22; 2016-08-24 16:42:27,052:8532(0x7fef97fff700):ZOO_INFO@zookeeper_init@786: Initiating client connection, host=192.168.0.1:2181,192.168.0.9:2181,192.168.0.17:2181 sessionTimeout=10000 watcher=0x3b9c8c00a0 sessionId=0 sessionPasswd=<null> context=0x7fed6c000960 flags=0; I0824 16:42:27.052752 8752 sched.cpp:164] Version: 0.25.0; 2016-08-24 16:42:27,053:8532(0x7fef76bfd700):ZOO_INFO@check_events@1703: initiated connection to server [192.168.0.9:2181]; 2016-08-24 16:42:27,070:8532(0x7fef76bfd700):ZOO_INFO@check_events@1750: session establishment complete on server [192.168.0.9:2181], sessionId=0x255cb9ea22102ec, negotiated timeout=10000; I0824 16:42:27.070502 8726 group.cpp:331] Group process (group(1)@192.168.0.15:12239) connect",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/660#issuecomment-242218633:24,message,messages,24,https://hail.is,https://github.com/hail-is/hail/issues/660#issuecomment-242218633,1,['message'],['messages']
Integrability,"This supresses ""coroutines not awaited"" messages in the case that a; bounded gather is cancelled before all subtasks have had a chance to; start.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10563:40,message,messages,40,https://hail.is,https://github.com/hail-is/hail/pull/10563,1,['message'],['messages']
Integrability,"This test:. ```python3; p = Pipeline(backend=BatchBackend('https://batch.hail.is')); for _ in range(30000):; p.new_task().command('/bin/true'); p.run(); ```. Revealed a number of issues:; daniel king: Problems Found:; - [x] https://github.com/hail-is/hail/issues/6543 mysql can deadlock itself, requiring you to reissue the db request; - [x] https://github.com/hail-is/hail/issues/6545 of the 20760 pods that were successfully created before #6543 happened, about 800 could not get their logs due to not existing. That's a failure rate of ~4%. The number of failures continues to grow as I type this message (now up to 1280). I'm counting failures this way:; ```; k logs -l app=batch --tail=999999 | grep 'no logs for ' | sed -E 's/^.*no logs for ([^ ]+).*$/\1/' | sort -u | wc -l; ```; - the k8s request latency spiked to 3.47s max 0.6 s mean during this test and stayed elevated for 10 minutes.; - [ ] https://github.com/hail-is/hail/issues/6546 there was a lot of volume mount failures due to, apparently, the secrets, e.g.:; ```; 9m13s Warning FailedMount Pod Unable to mount volumes for pod ""batch-278-job-10258-a49a81_batch-pods(82ea5910-9ccb-11e9-ad88-42010a800049)"": timeout expired waiting for volumes to attach or mount for pod ""batch-pods""/""batch-278-job-10258-a49a81"". list of unmounted volumes=[gsa-key default-token-8h99c]. list of unattached volumes=[gsa-key default-token-8h99c]; ```; - [ ] https://github.com/hail-is/hail/issues/6548 batch takes 4 seconds to render the batch page with 20k jobs (the web browser displays it fine though), e.g. https://batch.hail.is/batches/278; - [ ] https://github.com/hail-is/hail/issues/6548 batch UI search is DOA with 20k jobs; - [ ] https://github.com/hail-is/hail/issues/6556 delete (and likely cancel) will timeout on large batches",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6547:600,message,message,600,https://hail.is,https://github.com/hail-is/hail/issues/6547,1,['message'],['message']
Integrability,"This the beginning of some Code infrastructure changes and cleanup. The plan is to clean up the tangle of builder classes. I'm still working on the plan for dependent functions, but the skeleton of the rest looks like:. ```; class ClassBuilder[C]; def newMethod(suffix: String, argsInfo: Array[TypeInfo[_]], returnInfo: TypeInfo[_]): MethodBuilder; def newField[T]: ...; def result(): () => C. class MethodBuilder:; def newLocal[T]: LocalRef[T]; def emit(c: Code): Unit. class FunctionBuilder[C]:; val classBuilder: ClassBuilder[C]; def applyMethod: MethodBuilder; def result(): () => C = classBuilder.result(). class EmitMethodBuilder; val mb: MethodBuilder // contain don't extend; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8179:157,depend,dependent,157,https://hail.is,https://github.com/hail-is/hail/pull/8179,1,['depend'],['dependent']
Integrability,This ticket is complete when:. - [x] We merge a PR that modifies the driver memory setting for hailctl dataproc start as described in the previous message. https://github.com/hail-is/hail/pull/14066; - [x] We have received confirmation from the AoU RWB team that the Spark driver heap size is set in a manner that leaves abundant RAM for Python and daemon memory fluctuations.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13960#issuecomment-1836845812:147,message,message,147,https://hail.is,https://github.com/hail-is/hail/issues/13960#issuecomment-1836845812,1,['message'],['message']
Integrability,This was breaking RouterFS.ls. Tested in the export_vcf lowering branch,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11622:18,Rout,RouterFS,18,https://hail.is,https://github.com/hail-is/hail/pull/11622,1,['Rout'],['RouterFS']
Integrability,"This was spawned by https://github.com/hail-is/hail/pull/14310 which slipped into 0.2.126 because we do not have types on some of our inner functions. In my attempt to type everything, I discovered a really perplexing function `_add_resource_to_set`. I *was* able to give it a type but it was really complicated, involved `@overload`, and did not seem to help me reason about that function. I presumed the root cause was that the Resource class had an insufficient interface. Here is how I understand what that function was trying to achieve: We need to track the set of resources that are produced by, produced-by-and-later-consumed, and consumed by a job:. 1. ""Produced by"" corresponds to `Job._valid`.; 2. ""Produced-by-and-later-consumed"" corresponds to `Job._internal_outputs` and `Job._external_outputs`.; 3. ""Consumed by"" corresponds to `Job._inputs`. There is also `Job._mentioned` which I do not fully understand but which does not use `_add_resource_to_set`. There is an important distinction between the latter two and the first kind of resource set. The latter two must be what I am now calling `SingleResource`s. These are actual single files that need to be uploaded or downloaded. In contrast the ""produced by"" set (and, I think `Job._mentioned`) might include `ResourceGroup`s which are composite: one or more `SingleResource`s that must be transmitted as a group. For example, a VCF file and its TBI index file must always be transmitted as a group, even if a job only references one of those two files. That's the essential functionality of a `ResourceGroup`. I introduced three operations to `Resource` which I think make this system simpler:. 1. `get_resource_group`: if a `Resource` is a group or a member thereof, return it. 2. `component_resources`: if a `Resource` is composite, return the components, otherwise just return the resource itself. 3. `bonded_resources`: the minimum set of resources that must be transmitted if this resource is transmitted. In particular, a member",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14319:465,interface,interface,465,https://hail.is,https://github.com/hail-is/hail/pull/14319,1,['interface'],['interface']
Integrability,"This will allow you to go conda-free: https://github.com/hail-is/hail/pull/5655. In particular, I modified batch to be conda-free as part of this PR. I added the common python dependencies (async stuff, including mysql stuff) to the default python3 installation in the image. I think my PR will obviate this one.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5616#issuecomment-475252257:176,depend,dependencies,176,https://hail.is,https://github.com/hail-is/hail/pull/5616#issuecomment-475252257,1,['depend'],['dependencies']
Integrability,This will be easier to put right once we get rid of pr-builder and ci2 is building all the dependent images each time.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5929:91,depend,dependent,91,https://hail.is,https://github.com/hail-is/hail/pull/5929,1,['depend'],['dependent']
Integrability,"This will be fixed in the next release.; If you can't wait until then and you're comfortable patching this yourself, replace the contents of the affected file with the following:; ```yaml; dataproc:; init_notebook.py: gs://hail-common/hailctl/dataproc/0.2.129/init_notebook.py; vep-GRCh37.sh: gs://hail-common/hailctl/dataproc/0.2.129/vep-GRCh37.sh; vep-GRCh38.sh: gs://hail-common/hailctl/dataproc/0.2.129/vep-GRCh38.sh; wheel: gs://hail-common/hailctl/dataproc/0.2.129/hail-0.2.129-py3-none-any.whl; pip_dependencies: aiodns==2.0.0|aiohttp==3.9.3|aiosignal==1.3.1|async-timeout==4.0.3|attrs==23.2.0|avro==1.11.3|azure-common==1.1.28|azure-core==1.30.1|azure-identity==1.15.0|azure-mgmt-core==1.4.0|azure-mgmt-storage==20.1.0|azure-storage-blob==12.19.0|bokeh==3.3.4|boto3==1.34.55|botocore==1.34.55|cachetools==5.3.3|certifi==2024.2.2|cffi==1.16.0|charset-normalizer==3.3.2|click==8.1.7|commonmark==0.9.1|contourpy==1.2.0|cryptography==42.0.5|decorator==4.4.2|deprecated==1.2.14|dill==0.3.8|frozenlist==1.4.1|google-auth==2.28.1|google-auth-oauthlib==0.8.0|humanize==1.1.0|idna==3.6|isodate==0.6.1|janus==1.0.0|jinja2==3.1.3|jmespath==1.0.1|jproperties==2.1.1|markupsafe==2.1.5|msal==1.27.0|msal-extensions==1.1.0|msrest==0.7.1|multidict==6.0.5|nest-asyncio==1.6.0|numpy==1.26.4|oauthlib==3.2.2|orjson==3.9.10|packaging==23.2|pandas==2.2.1|parsimonious==0.10.0|pillow==10.2.0|plotly==5.19.0|portalocker==2.8.2|py4j==0.10.9.5|pyasn1==0.5.1|pyasn1-modules==0.3.0|pycares==4.4.0|pycparser==2.21|pygments==2.17.2|pyjwt[crypto]==2.8.0|python-dateutil==2.9.0.post0|python-json-logger==2.0.7|pytz==2024.1|pyyaml==6.0.1|regex==2023.12.25|requests==2.31.0|requests-oauthlib==1.3.1|rich==12.6.0|rsa==4.9|s3transfer==0.10.0|scipy==1.11.4|six==1.16.0|sortedcontainers==2.4.0|tabulate==0.9.0|tenacity==8.2.3|tornado==6.4|typer==0.9.0|typing-extensions==4.10.0|tzdata==2024.1|urllib3==1.26.18|uvloop==0.19.0;sys_platform!=""win32""|wrapt==1.16.0|xyzservices==2023.10.1|yarl==1.9.4|; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14452#issuecomment-2045876651:1918,wrap,wrapt,1918,https://hail.is,https://github.com/hail-is/hail/issues/14452#issuecomment-2045876651,1,['wrap'],['wrapt']
Integrability,"This will enforce even stricter requirements on downstream projects, right? Do we want to do this only for our own builds and use unpinned dependencies in the pip package's setup.py?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11842#issuecomment-1128128100:139,depend,dependencies,139,https://hail.is,https://github.com/hail-is/hail/pull/11842#issuecomment-1128128100,1,['depend'],['dependencies']
Integrability,"This will fail until #7376 lands and allows the test to create an empty matrix table. - document `sep`; - add two tests for importing empty matrix tables, one with a header and one without; - include the offending lines in error messages when files have different numbers of columns; - consistently use `String.split(separator, 0)` instead of using two different approaches which yield inconsistent results.; - simplify `parseHeader` and generalize to empty files; - improve error message when a row field found in the file does not match one of the row fields specified by `row_fields` (a dictionary from row field name to type). NB: A no-header empty file implies no columns in the MT. We print a warning to this effect when we discover an empty file. Resolves #7242",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7378:229,message,messages,229,https://hail.is,https://github.com/hail-is/hail/pull/7378,2,['message'],"['message', 'messages']"
Integrability,This will need to be revisited in the context of the DataFrame-style Matrix interface.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/134#issuecomment-226613696:76,interface,interface,76,https://hail.is,https://github.com/hail-is/hail/pull/134#issuecomment-226613696,1,['interface'],['interface']
Integrability,"This works by parsing log files for the message produced by TaskContext cleanup added in #10392. A bit hacky, but it works!. ```; Benchmark Name Ratio Time 1 Time 2 Mem Ratio Mem 1 (MB) Mem 2 (MB); -------------- ----- ------ ------ --------- ---------- ----------; union_p1000_p1000 116.0% 28.394 32.935 100.0% 1 1; union_p10_p100 114.8% 33.685 38.683 100.0% 1 1; compile_2k_merge 112.1% 253.023 283.740 100.0% 7 7; ndarray_matmul_int64_benchmark 110.1% 8.165 8.992 100.0% 1 1; shuffle_key_by_aggregate_bad_locality 108.9% 414.396 451.457 100.0% 4 4; shuffle_order_by_10m_int 108.7% 95.688 103.993 100.0% 1 1; import_and_transform_gvcf 107.0% 109.282 116.941 100.0% 1 1; matrix_table_entries_show 106.8% 1.318 1.408 100.0% 2 2; sample_qc 106.7% 31.869 34.002 100.0% 2 2; matrix_table_scan_count_rows 105.3% 129.907 136.832 100.0% 1 1; shuffle_key_rows_by_mt 104.9% 25.313 26.553 100.0% 3 3; matrix_table_entries_table_no_key 104.9% 47.893 50.225 100.0% 1 1; table_aggregate_downsample_worst_case 104.7% 33.056 34.625 100.0% 1 1; python_only_10k_transform 104.6% 69.072 72.271 100.0% 1 1; shuffle_key_by_aggregate_good_locality 104.4% 10.776 11.250 100.0% 24 24; table_aggregate_take_by_strings 104.3% 7.718 8.049 100.0% 1 1; kyle_sex_specific_qc 104.2% 9.326 9.715 100.0% 1 1; union_p100_p100 104.1% 24.184 25.174 100.0% 1 1; table_scan_prev_non_null 103.6% 111.901 115.887 100.0% 1 1; write_range_matrix_table_p100 103.3% 6.568 6.786 100.0% 1 1; read_force_count_p10 103.2% 3.644 3.760 100.0% 1 1; variant_and_sample_qc_nested_with_filters_4 103.1% 33.173 34.204 100.0% 2 2; concordance 102.8% 34.514 35.475 100.0% 3 3; table_foreign_key_join_same_cardinality 102.4% 17.859 18.279 100.0% 2 2; gnomad_coverage_stats_optimized 102.3% 27.443 28.087 100.0% 1 1; table_group_by_aggregate_sorted 101.6% 7.337 7.458 100.0% 4 4; write_range_table_p1000 101.0% 43.753 44.186 100.0% 1 1; table_range_means 100.9% 9.722 9.810 100.0% 1 1; matrix_table_decode_and_count_just_gt 100.7% 5.026 5.063 100.0% 1 1; imp",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10407:40,message,message,40,https://hail.is,https://github.com/hail-is/hail/pull/10407,1,['message'],['message']
Integrability,Throw a good error message if ASYNC_PROFILER_HOME isn't set,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9657:19,message,message,19,https://hail.is,https://github.com/hail-is/hail/pull/9657,1,['message'],['message']
Integrability,Throw a useful error message when the resource does not exist instead of throwing an NPE.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4678:21,message,message,21,https://hail.is,https://github.com/hail-is/hail/pull/4678,1,['message'],['message']
Integrability,"Tim would you prefer RVD.unify to be separate from RVD.union, such that the caller controls upcast? Interface seems much simpler if RVD.union calls RVD.unify, but may result in unify being called too many times (if the caller unifies rvds, and doesn't realize that they also transitively call RVD.unify because some function the caller directly calls calls RVD.union)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8132#issuecomment-589323266:100,Interface,Interface,100,https://hail.is,https://github.com/hail-is/hail/pull/8132#issuecomment-589323266,1,['Interface'],['Interface']
Integrability,"Tim, I left the integration tests for now. I propose if you want them out, that we leave 2 cases for each of the type-combinations, so that we can inductively prove that our code can infer the correct unified type across nested IR (without the Ref shortcut)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6990#issuecomment-530868509:16,integrat,integration,16,https://hail.is,https://github.com/hail-is/hail/pull/6990#issuecomment-530868509,1,['integrat'],['integration']
Integrability,"Tim, I've added one of the suggested interfaces. To use `protected var _pType2` instead I believe we need to have InferPType extend `IR` inside of IR.scala, e.g `object InferPType extend IR`, by requirement of sealed traits. Anything else you want? Happy to add additional tests, or to move on to the next pType sub-project.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6594#issuecomment-515061792:37,interface,interfaces,37,https://hail.is,https://github.com/hail-is/hail/pull/6594#issuecomment-515061792,1,['interface'],['interfaces']
Integrability,"Tim, put a WIP on this to block merge. The fix is to add the correct ptype for the recur branch in Emit.emit. However, this has us wrapping PValue(pt, Code._empty), which seems odd (a type and no corresponding value). @catoverdrive could you comment? Should Recur only take type PVoid and infer type PVoid, is the current system correct, or would you prefer an altogether different solution to: https://github.com/hail-is/hail/pull/8250/commits/8df5a452e2e123ffabf42e277164ce3e6c367517",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8250#issuecomment-595827209:131,wrap,wrapping,131,https://hail.is,https://github.com/hail-is/hail/pull/8250#issuecomment-595827209,1,['wrap'],['wrapping']
Integrability,"Tim, would you have any recommendations?. ```sh; Gradle suite > Gradle test > is.hail.expr.ir.IRSuite.regressionTestUnifyBug FAILED; scala.MatchError: +Void (of class is.hail.expr.types.physical.PVoid$); at is.hail.expr.types.physical.PType.setRequired(PType.scala:206); at is.hail.expr.ir.InferPType$.apply(InferPType.scala:209); at is.hail.expr.ir.IR$class.inferSetPType(IR.scala:33); at is.hail.expr.ir.ArrayMap.inferSetPType(IR.scala:232); at is.hail.expr.ir.InferPType$$anonfun$apply$8.apply(InferPType.scala:359); at is.hail.expr.ir.InferPType$$anonfun$apply$8.apply(InferPType.scala:358); ```. This occurs because the IR is the following:. ```sh; ; //a; Literal(array<interval<locus<GRCh37>>>,WrappedArray([20:10277621-20:11898992))); // name; __iruid_11; //body; ApplySpecial(Interval,ArrayBuffer(MakeStruct(ArrayBuffer((locus,ApplySpecial(start,ArrayBuffer(Ref(__iruid_11,interval<locus<GRCh37>>)))))), MakeStruct(ArrayBuffer((locus,ApplySpecial(end,ArrayBuffer(Ref(__iruid_11,interval<locus<GRCh37>>)))))), True(), False())); ```. So I set this IR in the match to return PVoid(). However, in ArrayMap there is a requiredeness setter (which is inspired/copied from InferType's corresponding match:. ```scala; coerce[PStreamable](a.pType2).copyStreamable(body.pType2.setRequired(false)); ```. Which causes a nonsensical operation on PVoid, which is required: true (override final val). As an aside, ApplySpecial seems to allow operations on non-identical types, which would require algebraic types, rather than a singular: any time the types of its`Seq[IR]`'s are different. I have similar issues with other array operations, which want nodes that we currently don't support, including aggregator nodes. Note that I am only calling inferSetPType in Compile (immediately after optimization pass).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6594#issuecomment-512957123:700,Wrap,WrappedArray,700,https://hail.is,https://github.com/hail-is/hail/pull/6594#issuecomment-512957123,1,['Wrap'],['WrappedArray']
Integrability,"Title is currently a lie, these major versions mess up some of our other pinnings that may or may not be relevant anymore. Will get to this at some point but putting it here so I can close the individual dependabot PRs.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11527:204,depend,dependabot,204,https://hail.is,https://github.com/hail-is/hail/pull/11527,1,['depend'],['dependabot']
Integrability,To avoid having to modify router/router.nginx.conf.in for internal.hail.is routes.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7364:26,rout,router,26,https://hail.is,https://github.com/hail-is/hail/issues/7364,3,['rout'],"['router', 'routes']"
Integrability,To make uber jar: `mvn assembly:single`. `compile` automatically runs `make` for the NativeLib stuff.; `clean` automatically runs `make clean` for NativeLib; Not sure if I needed to incorporate `nativeLibTest` or `nativeLibPrebuilt`. Added two test configurations. One is for all tests and the other is for the set of tests with HAIL_ENABLE_CPP_CODEGEN=1. I double checked the Python tests pass with the uber jar. The test output doesn't have the nice formatting that we have in Gradle. Would be some work with listeners and reporters to do that: http://maven.apache.org/surefire/maven-surefire-plugin/examples/testng.html#. There also isn't the `check` input and some other bells and whistles we have in Gradle. I had to add `com.google.inject:guice` to get rid of some compile warnings with the test-jar. Let me know if there's other things to add/enable or if this is good enough for ci2. We should probably add some CI tests for this in a makefile somewhere.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5906:738,inject,inject,738,https://hail.is,https://github.com/hail-is/hail/pull/5906,1,['inject'],['inject']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: ; https://discuss.hail.is/. Please include the full Hail version and as much detail as possible. -----------------------------------------------------------------------------. Hello. The error has occurred during bulid. I installed all the necessary libraries and matched the jdk version and Python version.; And I also installed gcc, blas, and lapack. The error is as follows. Exception in thread ""main"" java.io.IOException: Function not implemented; at sun.nio.ch.FileDispatcherImpl.lock0(Native Method); at sun.nio.ch.FileDispatcherImpl.lock(FileDispatcherImpl.java:90); at sun.nio.ch.FileChannelImpl.tryLock(FileChannelImpl.java:1114); at java.nio.channels.FileChannel.tryLock(FileChannel.java:1155); at org.gradle.wrapper.ExclusiveFileAccessManager.access(ExclusiveFileAccessManager.java:55); at org.gradle.wrapper.Install.createDist(Install.java:48); at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:107); at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); make: *** [Makefile:75: build/libs/hail-all-spark.jar] Error 1. An error occurs while compilation is in progress. There seems to be an error in the 'exec ""$JAVACMD"" ""$@"" section the gradlew file at the end. My server OS is centos7. Is there a solution?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9849:836,wrap,wrapper,836,https://hail.is,https://github.com/hail-is/hail/issues/9849,6,"['Wrap', 'wrap']","['WrapperExecutor', 'wrapper']"
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: ; https://discuss.hail.is/. Please include the full Hail version and as much detail as possible. -----------------------------------------------------------------------------. I'm working through the GWAS tutorial and getting some strange errors with two different functions. On the 4th line calling hl.import_vcf('data/1kg.vcf.bgz').write('data/1kg.mt', overwrite=True) I'm getting the following error:. ```; File ""gwas_tutorial.py"", line 12, in <module>; hl.import_vcf('data/1kg.vcf.bgz').write('data/1kg.mt',overwrite=True); File ""</Users/username/miniconda3/envs/hail1/lib/python3.7/site-packages/decorator.py:decorator-gen-946>"", line 2, in write; File ""/Users/username/miniconda3/envs/hail1/lib/python3.7/site-packages/hail/typecheck/check.py"", line 561, in wrapper; return __original_func(*args_, **kwargs_); File ""/Users/username/miniconda3/envs/hail1/lib/python3.7/site-packages/hail/matrixtable.py"", line 2494, in write; Env.backend().execute(MatrixWrite(self._mir, writer)); File ""/Users/username/miniconda3/envs/hail1/lib/python3.7/site-packages/hail/backend/backend.py"", line 106, in execute; result = json.loads(Env.hail().backend.spark.SparkBackend.executeJSON(self._to_java_ir(ir))); File ""/Users/username/miniconda3/envs/hail1/lib/python3.7/site-packages/py4j/java_gateway.py"", line 1257, in __call__; answer, self.gateway_client, self.target_id, self.name); File ""/Users/username/miniconda3/envs/hail1/lib/python3.7/site-packages/hail/utils/java.py"", line 240, in deco; 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; hail.utils.java.FatalError: ScalaSigParserError: Unexpected failure. Java stack trace:; org.json4s.scalap.ScalaSigParserError: Unexpected failure; 	at org.json4s.scalap.Rules$$anonfun$expect$1.apply(Rules.scala:73); 	at org.json4s.scalap.scalasig.ClassFileParser$.parse(ClassFileParser.scala:95); 	at org.json4s.reflect",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6299:881,wrap,wrapper,881,https://hail.is,https://github.com/hail-is/hail/issues/6299,1,['wrap'],['wrapper']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: ; https://discuss.hail.is/. Please include the full Hail version and as much detail as possible. -----------------------------------------------------------------------------; First of all, thank you for making such a highly integrated tool. . I learned that this tool could be run in two modes, on Cloud and locally. Well, I happen to have an HPC server that I can work on, so I'd love to use the tool locally. However, many annotation tools require many annotation data that need to be prepared in advance, and no one has seen the exact format of them. Plus, the annotation data sometimes is stored on a google cloud bucket that is requester paid so I don't have a chance to take a peek at them. Therefore, even I try to fill my configuration file, the annotation data needed cannot be prepared unless I have a template of them. . Pls, consider adding a feature like, if we want to run an annotation job locally, let us download package containing all the necessary annotation data in there. So we can set up the configuration file on our own and run the job on a local HPC server. Much appreciated!",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9059:342,integrat,integrated,342,https://hail.is,https://github.com/hail-is/hail/issues/9059,1,['integrat'],['integrated']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: ; https://discuss.hail.is/. Please include the full Hail version and as much detail as possible. -----------------------------------------------------------------------------; Hello, I am having problems to read vcf file using hail. I installed using conda according to https://hail.is/docs/0.2/getting_started.html#requirements; I created the environment, activated it and installed with pip. When I try to load a vcf file, I am getting:; hl.import_vcf('/Volumes/Macintosh HD2/data/thousands_genome/hector.Q15d5.vcf.gz'); py4j.protocol.Py4JJavaError: An error occurred while calling z:is.hail.HailContext.apply. : is.hail.utils.HailException: Hail requires Java 8, found 12.0.1; Any help? Best, Zillur",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6747:645,protocol,protocol,645,https://hail.is,https://github.com/hail-is/hail/issues/6747,1,['protocol'],['protocol']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: . current master. ### What you did:. Read in a giant table of phenotypes (~500k rows x ~3k columns). `; raw_phenos = hl.import_table('gs://phenotype_31063/ukb31063.raw_phenotypes.tsv.bgz',; key='eid', impute=True, types={'eid': hl.tstr}, missing='NA', min_partitions=100); raw_phenos.write('gs://armartin/disparities/ukbb_afr/ukb31063.raw_phenotypes.ht'); `; ### What went wrong (all error messages here, including the full java stack trace):. [Stage 1:> (0 + 100) / 100]Traceback (most recent call last):; File ""/tmp/0fdaf26ceb274d679f571483f658e509/run_prs_afr.py"", line 266, in <module>; main(args); File ""/tmp/0fdaf26ceb274d679f571483f658e509/run_prs_afr.py"", line 125, in main; raw_phenos.write('gs://armartin/disparities/ukbb_afr/ukb31063.raw_phenotypes.ht'); File ""<decorator-gen-652>"", line 2, in write; File ""/tmp/0fdaf26ceb274d679f571483f658e509/hail-devel-5dfbe2ec29f8.zip/hail/typecheck/check.py"", line 546, in wrapper; File ""/tmp/0fdaf26ceb274d679f571483f658e509/hail-devel-5dfbe2ec29f8.zip/hail/table.py"", line 1218, in write; File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/tmp/0fdaf26ceb274d679f571483f658e509/hail-devel-5dfbe2ec29f8.zip/hail/utils/java.py"", line 210, in deco; hail.utils.java.FatalError: NumberFormatException: For input string: ""1001101010010110"". Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 46 in stage 1.0 failed 20 times, most recent failure: Lost task 46.19 in stage 1.0 (TID 1559, arm-sw-vq41.c.daly-ibd.internal, executor 6): is.hail.utils.HailException: ukb31063.raw_phenotypes.tsv.bgz: java.lang.NumberFormatException: could not convert ""1001101010010110"" to int32 in column ""10145-0.3""; offending li",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4268:643,message,messages,643,https://hail.is,https://github.com/hail-is/hail/issues/4268,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: 0.1-6e815ac. ### What you did: hc.import_bgen('*.bgen) X chromosome cannot be imported, which is a major issue when working on phenotypes linked to blood coagulation, for example. ### What went wrong (all error messages here, including the full java stack trace):. [Stage 1:===============================================> (747 + 9) / 871]Traceback (most recent call last):; File ""regression1.py"", line 22, in <module>; hc.import_bgen('/mnt/volume/imputed_genotypes/*.bgen', sample_file='/mnt/volume/imputed_genotypes/MT.sample').split_multi().write('/mnt/volume/imputed_genotypes/MT_intersect_imputed.vds'); File ""<decorator-gen-285>"", line 2, in write; File ""/usr/local/hail/python/hail/java.py"", line 121, in handle_py4j; 'Error summary: %s' % (deepest, full, Env.hc().version, deepest)); hail.java.FatalError: HailException: Hail only supports diploid genotypes. Found min ploidy equals `1' and max ploidy equals `2'. Java stack trace:; org.apache.spark.SparkException: Job aborted.; at org.apache.spark.sql.execution.datasources.FileFormatWriter$$anonfun$write$1.apply$mcV$sp(FileFormatWriter.scala:147); at org.apache.spark.sql.execution.datasources.FileFormatWriter$$anonfun$write$1.apply(FileFormatWriter.scala:121); at org.apache.spark.sql.execution.datasources.FileFormatWriter$$anonfun$write$1.apply(FileFormatWriter.scala:121); at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:57); at org.apache.spark.sql.execution.datasources.FileFormatWriter$.write(FileFormatWriter.scala:121); at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.run(InsertIntoHadoopFsRelationCommand.scala:101); at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycomput",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2407:464,message,messages,464,https://hail.is,https://github.com/hail-is/hail/issues/2407,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: 0.1. ### What you did: . kt = hc.import_table([""gnomad_coverage_chr1.tsv"", ""gnomad_coverage_chr2.tsv"", ..], min_partitions=10000). ### What went wrong (all error messages here, including the full java stack trace):. I expected the behavior with min_partitions=10000 to be the same as calling repartition(10000), but the keytable only had # of partitions = # of input .tsv files. I switched to just calling repartition(10000) after importing, and it works as expected. . May be duplicate of #508",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2420:415,message,messages,415,https://hail.is,https://github.com/hail-is/hail/issues/2420,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: 0.1. ### What you did:. ### What went wrong (all error messages here, including the full java stack trace):. The docs under ; https://hail.is/docs/stable/hail.HailContext.html?highlight=import_vcf#hail.HailContext.import_vcf; are; ```; If generic equals False (default), Hail makes certain assumptions about the genotype fields, see Representation. On import, Hail filters (sets to no-call) any genotype that violates these assumptions. Hail interprets the format fields: GT, AD, OD, DP, GQ, PL; all others are silently dropped.; ```; but clicking the `Representation` link does lead to any additional details.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3472:308,message,messages,308,https://hail.is,https://github.com/hail-is/hail/issues/3472,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: 0.2. ### What you did: read in a Hail Table with 96 rows and 5960 Columns; `table1.row.show(); table2.row.show()`. ### What went wrong (all error messages here, including the full java stack trace):. ```; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); <ipython-input-80-bf4d6c719c23> in <module>(); 1 table1.row.show(); ----> 2 table2.row.show(). /home/hail/hail.zip/hail/typecheck/check.py in wrapper(*args, **kwargs); 545 def wrapper(*args, **kwargs):; 546 args_, kwargs_ = check_all(f, args, kwargs, checkers, is_method=is_method); --> 547 return f(*args_, **kwargs_); 548 ; 549 update_wrapper(wrapper, f). /home/hail/hail.zip/hail/expr/expressions/base_expression.py in show(self, n, width, truncate, types); 677 Print an extra header line with the type of each field.; 678 """"""; --> 679 print(self._show(n, width, truncate, types)); 680 ; 681 def _show(self, n=10, width=90, truncate=None, types=True):. /home/hail/hail.zip/hail/expr/expressions/base_expression.py in _show(self, n, width, truncate, types); 684 if isinstance(source, hl.Table):; 685 if self is source.row:; --> 686 return source._show(n, width, truncate, types); 687 elif self is source.key:; 688 return source.select()._show(n, width, truncate, types). /home/hail/hail.zip/hail/table.py in _show(self, n, width, truncate, types); 1201 ; 1202 def _show(self, n=10, width=90, truncate=None, types=True):; -> 1203 return self._jt.showString(n, joption(truncate), types, width); 1204 ; 1205 def index(self, *exprs):. /usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py in __call__(self, *args); 1131 answer = self.gateway_client.send_command(command); 1132 return_value = get_return_value(",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3922:399,message,messages,399,https://hail.is,https://github.com/hail-is/hail/issues/3922,4,"['message', 'wrap']","['messages', 'wrapper']"
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: 0.2. ### What you did:; ```; vp_ht = vp_ht.transmute(; locus1=hl.locus(vp_ht.chrom1, vp_ht.pos1),; locus2=hl.locus(vp_ht.chrom1, vp_ht.pos2),; alleles1=[vp_ht.ref1, vp_ht.alt1],; alleles2=[vp_ht.ref2, vp_ht.alt2]; ). vp_mt = hl.MatrixTable.from_rows_table(vp_ht); vp_mt = vp_mt.key_rows_by('locus1', 'alleles1'). mt = mt.annotate_rows(v1=hl.is_defined(vp_mt[(mt.locus, mt.alleles), :])); ```. ### What went wrong (all error messages here, including the full java stack trace):; ```; In [49]: mt = mt.annotate_rows(v1=hl.is_defined(vp_mt[(mt.locus, mt.alleles),:])); ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); <ipython-input-49-5ea2fe942ada> in <module>(); ----> 1 mt = mt.annotate_rows(v1=hl.is_defined(vp_mt[(mt.locus, mt.alleles),:])). /home/hail/hail.zip/hail/matrixtable.py in annotate_rows(self, **named_exprs); 894 exprs = []; 895 named_exprs = {k: to_expr(v) for k, v in named_exprs.items()}; --> 896 base, cleanup = self._process_joins(*named_exprs.values()); 897; 898 for k, v in named_exprs.items():. /home/hail/hail.zip/hail/matrixtable.py in _process_joins(self, *exprs); 2205 for j in list(e._joins)[::-1]:; 2206 if j.uid not in used_uids:; -> 2207 left = j.join_function(left); 2208 all_uids.extend(j.temp_vars); 2209 used_uids.add(j.uid). /home/hail/hail.zip/hail/matrixtable.py in <lambda>(left); 2157 prefix = 'va'; 2158 joiner = lambda left: (; -> 2159 MatrixTable(left._jvds.annotateRowsVDS(right._jvds, uid))); 2160 else:; 2161 return self.rows().index(*exprs). /usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py in __call__(self, *args); 1131 answer = self.gateway_client.send_command(command); 1132 return_value = get_return_value",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3119:677,message,messages,677,https://hail.is,https://github.com/hail-is/hail/issues/3119,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: 0.2. ### What you did:; ```python; from gnomad_hail import *. logging.basicConfig(format=""%(levelname)s (%(name)s %(lineno)s): %(message)s""); logger = logging.getLogger(""variant_histograms""); logger.setLevel(logging.INFO). def release_ht_path(data_type: str, nested = True, with_subsets = True, temp = False):; tag = 'nested_release' if nested else 'flat_release'; tag = tag + '.with_subsets' if with_subsets else tag + '.no_subsets'; tag = tag + '.temp' if temp else tag; return f'gs://gnomad/release/2.1/ht/gnomad.{data_type}.{tag}.ht'. def main(args):; hl.init(log='/variant_histograms.log'); data_type = 'genomes' if args.genomes else 'exomes'. metrics = ['FS', 'InbreedingCoeff', 'MQ', 'MQRankSum', 'QD', 'ReadPosRankSum', 'SOR', 'BaseQRankSum',; 'ClippingRankSum', 'DP', 'VQSLOD', 'rf_tp_probability', 'pab_max']. ht = hl.read_table(release_ht_path(data_type, nested=False)); # NOTE: histogram aggregations are done on the entire callset (not just PASS variants), on raw data. # Compute median and MAD on variant metrics; medmad_dict = {}; for metric in metrics:; medmad_dict[metric] = hl.struct(median=hl.median(hl.agg.collect(ht[metric])), mad=4*1.48268*hl.median(hl.abs(hl.agg.collect(ht[metric])-hl.median(hl.agg.collect(ht[metric]))))); medmad = ht.aggregate(hl.struct(**medmad_dict)); print(medmad); print(hl.eval_expr(hl.json(medmad))); ```. ### What went wrong (all error messages here, including the full java stack trace):; ```; [Stage 0:==================================================>(9853 + 93) / 10000]#; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007fbeaec3ca22, pid=6662, tid=0x00007fbe3dd81700; #; # JRE version: OpenJDK Runtime Environment (8.0_181-b13) (build 1.8.0_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4418:382,message,message,382,https://hail.is,https://github.com/hail-is/hail/issues/4418,1,['message'],['message']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: 0.2.10-91149b50a53c. ### What you did:. ```; qc_ht = qc_mt.annotate_cols(; dp_stats=hl.agg.group_by(qc_mt.qc_platform, hl.agg.stats(qc_mt.DP)),; gq_stats=hl.agg.group_by(qc_mt.qc_platform, hl.agg.stats(qc_mt.GQ)),; callstats=hl.agg.group_by(qc_mt.qc_platform, hl.agg.call_stats(qc_mt.GT, qc_mt.alleles)),; call_rate=hl.agg.group_by(qc_mt.qc_platform, hl.agg.fraction(hl.is_defined(qc_mt.GQ))); ).rows(); ```. ### What went wrong (all error messages here, including the full java stack trace):. So I was distracted and used `annotate_rows` instead of `annotate_cols` and I got what seems to be an 0.1 error message:. ```; ---------------------------------------------------------------------------; AssertionError Traceback (most recent call last); <ipython-input-44-7491b514f674> in <module>; 3 gq_stats=hl.agg.group_by(qc_mt.qc_platform, hl.agg.stats(qc_mt.GQ)),; 4 callstats=hl.agg.group_by(qc_mt.qc_platform, hl.agg.call_stats(qc_mt.GT, qc_mt.alleles)),; ----> 5 call_rate=hl.agg.group_by(qc_mt.qc_platform, hl.agg.fraction(hl.is_defined(qc_mt.GQ))); 6 ).rows(); 7 # qc_ht = qc_ht.key_by('locus','alleles'). </opt/conda/lib/python3.6/site-packages/decorator.py:decorator-gen-976> in annotate_cols(self, **named_exprs). /home/hail/hail.zip/hail/typecheck/check.py in wrapper(__original_func, *args, **kwargs); 559 def wrapper(__original_func, *args, **kwargs):; 560 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 561 return __original_func(*args_, **kwargs_); 562 ; 563 return wrapper. /home/hail/hail.zip/hail/matrixtable.py in annotate_cols(self, **named_exprs); 995 caller = ""MatrixTable.annotate_cols""; 996 check_annotate_exprs(caller, named_exprs, self._col_indices); --> 997 return self._selec",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5415:693,message,messages,693,https://hail.is,https://github.com/hail-is/hail/issues/5415,2,['message'],"['message', 'messages']"
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: 0.2.11-fea176012ee0. ### What you did:. ```; hl.eval({'a':2, None: 1}); ```. ### What went wrong (all error messages here, including the full java stack trace):. ```; ---------------------------------------------------------------------------; ExpressionException Traceback (most recent call last); /home/hail/hail.zip/hail/expr/expressions/expression_typecheck.py in check(self, x, caller, param); 73 try:; ---> 74 return self.coerce(to_expr(x)); 75 except ExpressionException as e:. /home/hail/hail.zip/hail/expr/expressions/base_expression.py in to_expr(e, dtype); 99 if not dtype:; --> 100 dtype = impute_type(e); 101 x = _to_expr(e, dtype). /home/hail/hail.zip/hail/expr/expressions/base_expression.py in impute_type(x); 73 raise ExpressionException(""Cannot impute type of empty dict. Use 'hl.empty_dict' to create an empty dict.""); ---> 74 kts = {impute_type(element) for element in x.keys()}; 75 vts = {impute_type(element) for element in x.values()}. /home/hail/hail.zip/hail/expr/expressions/base_expression.py in <setcomp>(.0); 73 raise ExpressionException(""Cannot impute type of empty dict. Use 'hl.empty_dict' to create an empty dict.""); ---> 74 kts = {impute_type(element) for element in x.keys()}; 75 vts = {impute_type(element) for element in x.values()}. /home/hail/hail.zip/hail/expr/expressions/base_expression.py in impute_type(x); 85 elif x is None:; ---> 86 raise ExpressionException(""Hail cannot impute the type of 'None'""); 87 elif isinstance(x, (hl.expr.builders.CaseBuilder, hl.expr.builders.SwitchBuilder)):. ExpressionException: Hail cannot impute the type of 'None'. The above exception was the direct cause of the following exception:. TypecheckFailure Traceback (most recent call last); /home/hail/hail.zip/hail/typech",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5700:361,message,messages,361,https://hail.is,https://github.com/hail-is/hail/issues/5700,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: 0.2.11. ### What you did: ./gradlew -Dspark.version=2.2.1 -Dspark.version=2.2.1 -Dpy4j.version=0.10.4 -Dbreeze.version=0.13.1 shadowJar. ### What went wrong (all error messages here, including the full java stack trace):; :compileJava UP-TO-DATE; :generateBuildInfo; :nativeLib; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux testutils/unit-tests.cpp -MG -M -MF build/testutils/unit-tests.d -MT build/testutils/unit-tests.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux test.cpp -MG -M -MF build/test.d -MT build/test.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux ibs.cpp -MG -M -MF build/ibs.d -MT build/ibs.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux davies.cpp -MG -M -MF build/davies.d -MT build/davies.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux cache-tests.cpp -MG -M -MF build/cache-tests.d -MT build/cache-tests.o; g++ -march=s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5659:421,message,messages,421,https://hail.is,https://github.com/hail-is/hail/issues/5659,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: 0.2.8-844023079796. ### What you did:. ```; x = hl.utils.range_table(100); x = x.filter(False); x.show(); ```. ### What went wrong (all error messages here, including the full java stack trace):; ```; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-89-65d54ebb6a64> in <module>; 1 x = hl.utils.range_table(100); 2 x = x.filter(False); ----> 3 x.show(). /home/hail/gnomad_hail/utils/plotting.py in new_show(t, n, width, truncate, types); 25 ; 26 def new_show(t, n=10, width=140, truncate=40, types=True):; ---> 27 old_show(t, n, width, truncate, types); 28 hl.Table.show = new_show; 29 . <decorator-gen-848> in show(self, n, width, truncate, types, handler). /home/hail/hail.zip/hail/typecheck/check.py in wrapper(__original_func, *args, **kwargs); 558 def wrapper(__original_func, *args, **kwargs):; 559 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 560 return __original_func(*args_, **kwargs_); 561 ; 562 return wrapper. /home/hail/hail.zip/hail/table.py in show(self, n, width, truncate, types, handler); 1331 Handler function for data string.; 1332 """"""; -> 1333 handler(self._show(n, width, truncate, types)); 1334 ; 1335 def index(self, *exprs):. /home/hail/hail.zip/hail/table.py in _show(self, n, width, truncate, types); 1238 ; 1239 column_width = [max(len(fields[i]), len(types[i]), max([len(row[i]) for row in rows])); -> 1240 for i in range(n_fields)]; 1241 ; 1242 column_blocks = []. /home/hail/hail.zip/hail/table.py in <listcomp>(.0); 1238 ; 1239 column_width = [max(len(fields[i]), len(types[i]), max([len(row[i]) for row in rows])); -> 1240 for i in range(n_fields)]; 1241 ; 1242 column_blocks ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5173:395,message,messages,395,https://hail.is,https://github.com/hail-is/hail/issues/5173,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: 0.2.9-c3b1183e4246. ### What you did:; ```; pops_for_subpop = pops_ht.aggregate(; hl.agg.filter(; hl.is_defined(pops_ht.pop) & (pops_ht.pop != ""oth""),; hl.agg.group_by(pops_ht.pop, hl.agg.count()); ); ); ```. ### What went wrong (all error messages here, including the full java stack trace):; ```; Traceback (most recent call last):; File ""/tmp/251cbf7beb5f4503ba74e4d69bd09ec3/sample_qc.py"", line 530, in <module>; main(args); File ""/tmp/251cbf7beb5f4503ba74e4d69bd09ec3/sample_qc.py"", line 458, in main; hl.agg.group_by(pops_ht.pop, hl.agg.count()); File ""</opt/conda/lib/python3.6/site-packages/decorator.py:decorator-gen-764>"", line 2, in aggregate; File ""/tmp/251cbf7beb5f4503ba74e4d69bd09ec3/hail-0.2-c3b1183e4246.zip/hail/typecheck/check.py"", line 560, in wrapper; File ""/tmp/251cbf7beb5f4503ba74e4d69bd09ec3/hail-0.2-c3b1183e4246.zip/hail/table.py"", line 1133, in aggregate; File ""</opt/conda/lib/python3.6/site-packages/decorator.py:decorator-gen-436>"", line 2, in analyze; File ""/tmp/251cbf7beb5f4503ba74e4d69bd09ec3/hail-0.2-c3b1183e4246.zip/hail/typecheck/check.py"", line 560, in wrapper; File ""/tmp/251cbf7beb5f4503ba74e4d69bd09ec3/hail-0.2-c3b1183e4246.zip/hail/expr/expressions/expression_utils.py"", line 94, in analyze; File ""/tmp/251cbf7beb5f4503ba74e4d69bd09ec3/hail-0.2-c3b1183e4246.zip/hail/expr/expressions/expression_utils.py"", line 237, in get_refs; File ""/tmp/251cbf7beb5f4503ba74e4d69bd09ec3/hail-0.2-c3b1183e4246.zip/hail/expr/expressions/expression_utils.py"", line 212, in _get_refs; AttributeError: 'NoneType' object has no attribute '_indices_from_ref'; ERROR: (gcloud.dataproc.jobs.submit.pyspark) Job [251cbf7beb5f4503ba74e4d69bd09ec3] entered state [ERROR] while waiting for [DONE].; Traceback (most recent call las",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5296:493,message,messages,493,https://hail.is,https://github.com/hail-is/hail/issues/5296,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: ; version 0.2-721af83bc30a. ### What you did: ; Import UK Biobank bgen chr10. import hail as hl; import sys; hl.init(); chr=sys.argv[1]; bgen=""/project/ukbiobank/imp/uk.v3/bgen/ukb_imp_chr""+chr+""_v3.bgen""; sample=""/project/ukbiobank/imp/uk.v3/bgen/ukb19416_imp_chr""+chr+""_v3_s487327.sample""; mt=""/project/ukbiobank/imp/uk.v3/mt/ukbb_imp_chr""+chr+""_v3_s487327.mt""; hl.index_bgen(bgen); hl.import_bgen(bgen,sample_file=sample,entry_fields=['GT', 'GP','dosage']).write(mt). ### What went wrong (all error messages here, including the full java stack trace):; ```; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2-721af83bc30a; LOGGING: writing to /restricted/projectnb/ukbiobank/ad/analysis/ad.v1/hail-20181114-1827-0.2-721af83bc30a.log; Exception in thread ""dispatcher-event-loop-8"" Exception in thread ""refresh progress"" java.lang.OutOfMemoryError: GC overhead limit exceeded; at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80); at java.util.zip.ZipFile.getEntry(ZipFile.java:310); at java.util.jar.JarFile.getEntry(JarFile.java:240); at java.util.jar.JarFile.getJarEntry(JarFile.java:223); at sun.misc.URLClassPath$JarLoader.getResource(URLClassPath.java:1042); at sun.misc.URLClassPath.getResource(URLClassPath.java:239); at java.net.URLClassLoader$1.run(URLClassLoader.java:365); at java.net.URLClassLoader$1.run(URLClassLoader.java:362); at java.security.AccessController.doPrivileged(Native Method); at java.net.URLClassLoader.findClass(URLClassLoader.java:361); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at org.apache.spark.HeartbeatReceiver$$anonfun$org$apache$s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4780:755,message,messages,755,https://hail.is,https://github.com/hail-is/hail/issues/4780,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: `devel-f2b0dca9f506`. ### What you did:. ```; ht.group_by('model', 'rank_id', 'bin').aggregate(titv=ht.n_ti/ht.n_tv, ; min_score=hl.agg.min(ht.min_score),; max_score=hl.agg.min(ht.max_score); ).show(); ```; ### What went wrong (all error messages here, including the full java stack trace):; ```; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); <ipython-input-26-65c5654a1482> in <module>(); 1 ht.group_by('model', 'rank_id', 'bin').aggregate(titv=ht.n_ti/ht.n_tv, ; 2 min_score=hl.agg.min(ht.min_score),; ----> 3 max_score=hl.agg.min(ht.max_score); 4 ).show(). /home/hail/gnomad_hail/utils/plotting.py in new_show(t, n, width, truncate, types); 24 ; 25 def new_show(t, n=10, width=170, truncate=40, types=True):; ---> 26 old_show(t, n, width, truncate, types); 27 hl.Table.show = new_show; 28 . /home/hail/hail.zip/hail/typecheck/check.py in wrapper(*args, **kwargs); 545 def wrapper(*args, **kwargs):; 546 args_, kwargs_ = check_all(f, args, kwargs, checkers, is_method=is_method); --> 547 return f(*args_, **kwargs_); 548 ; 549 update_wrapper(wrapper, f). /home/hail/hail.zip/hail/table.py in show(self, n, width, truncate, types); 1215 Print an extra header line with the type of each field.; 1216 """"""; -> 1217 print(self._show(n,width, truncate, types)); 1218 ; 1219 def _show(self, n=10, width=90, truncate=None, types=True):. /home/hail/hail.zip/hail/table.py in _show(self, n, width, truncate, types); 1218 ; 1219 def _show(self, n=10, width=90, truncate=None, types=True):; -> 1220 return self._jt.showString(n, joption(truncate), types, width); 1221 ; 1222 def index(self, *exprs):. /usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py in __call__(s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4110:491,message,messages,491,https://hail.is,https://github.com/hail-is/hail/issues/4110,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: devel-45429b1. ### What you did:; ```; eval_expr(functions.cond(functions.capture(True), 'T', 'F') + functions.cond(functions.capture(True), 'T', 'F')); ```. ### What went wrong (all error messages here, including the full java stack trace):. ```; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); <ipython-input-20-3b0a2ce317c2> in <module>(); ----> 1 eval_expr(functions.cond(functions.capture(True), 'T', 'F') + functions.cond(functions.capture(True), 'T', 'F')). <decorator-gen-365> in eval_expr(expression). /hadoop_gcs_connector_metadata_cache/hail/hail-devel-45429b164934.zip/hail/expr/expression.py in args_to_expr(func, *args); 176 @decorator; 177 def args_to_expr(func, *args):; --> 178 return func(*(to_expr(a) for a in args)); 179; 180. /hadoop_gcs_connector_metadata_cache/hail/hail-devel-45429b164934.zip/hail/expr/expression.py in eval_expr(expression); 3576 Result of evaluating `expression`.; 3577 """"""; -> 3578 return eval_expr_typed(expression)[0]; 3579; 3580. <decorator-gen-366> in eval_expr_typed(expression). /hadoop_gcs_connector_metadata_cache/hail/hail-devel-45429b164934.zip/hail/expr/expression.py in args_to_expr(func, *args); 176 @decorator; 177 def args_to_expr(func, *args):; --> 178 return func(*(to_expr(a) for a in args)); 179; 180. /hadoop_gcs_connector_metadata_cache/hail/hail-devel-45429b164934.zip/hail/expr/expression.py in eval_expr_typed(expression); 3612 if len(expression._joins) > 0:; 3613 raise ExpressionException(""'eval_expr' methods do not support joins or broadcasts""); -> 3614 r, t = Env.hc().eval_expr_typed(expression._ast.to_hql()); 3615 return r, t; 3616. <decorator-gen-1049> in eval_expr_typed(self, expr). /hadoop_gcs",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2653:442,message,messages,442,https://hail.is,https://github.com/hail-is/hail/issues/2653,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: devel-4f13f27cd28d. ### What you did:; ipython vcf2mt.py . import hail as hl; hl.init(default_reference='GRCh38'); chr=""22""; vcf=""/project/ukbiobank/imputation/ad.v1/vcf/ukbb.hg38.imputed.chr""+chr+"".dose.vcf.bgz""; mt=""/project/ukbiobank/imputation/ad.v1/mt/ukbb.hg38.imputed.chr""+chr; hl.import_vcf(vcf).write(mt). ### What went wrong (all error messages here, including the full java stack trace):. GC Overhead limit exceeded on Stage 2 of import_vcf.write (See below). ```; Running on Apache Spark version 2.2.0; SparkUI available at http://10.48.225.55:4041; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version devel-4f13f27cd28d; NOTE: This is a beta version. Interfaces may change; during the beta period. We recommend pulling; the latest changes weekly.; [Stage 1:======================================================>(740 + 1) / 741]2018-11-10 22:55:07 Hail: INFO: Coerced almost-sorted dataset; [Stage 2:> (0 + 24) / 741]Exception in thread ""refresh progress"" Exception in thread ""LeaseRenewer:farrell@scc"" java.lang.OutOfMemoryError: GC overhead limit exceeded; java.lang.OutOfMemoryError: GC overhead limit exceeded; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); /restricted/projectnb/ukbiobank/ad/analysis/ad.v1/vcf2mt.py in <module>(); 4 vcf=""/project/ukbiobank/imputation/ad.v1/vcf/ukbb.hg38.imputed.chr""+chr+"".dose.vcf.bgz""; 5 mt=""/project/ukbiobank/imputation/ad.v1/mt/ukbb.hg38.imputed.chr""+chr; ----> 6 hl.import_vcf(vcf).write(mt). /share/pkg/hail/2018-06-18/install/build/distributions/hail-python.zip/hail/typecheck/check.py in wrapper(*args, **kwargs); 545 def wrapper(*args, **kwargs):; 546 args_, kwargs_ = check_all",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4755:599,message,messages,599,https://hail.is,https://github.com/hail-is/hail/issues/4755,2,"['Interface', 'message']","['Interfaces', 'messages']"
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: devel-544bf8f. ### What you did: import vcf from delly; ```; import hail as hl; hl.init(default_reference='GRCh38'); hl.import_vcf('/project/casa/vcf.5k/delly/gcad.sv.delly.5k.vcf.bgz').write('/project/casa/vdf.5k/delly'); ```. ### What went wrong (all error messages here, including the full java stack trace):. The CN field is an integer. When the integer is -1 for CN, an error is generated. ./.:0,0,0:0:LowQual:0:0:0:**-1**:0:0:0:0. The header defines CN with this:. ##FORMAT=<ID=CN,Number=1,Type=Integer,Description=""Read-depth based copy-number estimate for autosomal sites"">. ```; Hail version: devel-544bf8f; Error summary: HailException: gcad.sv.delly.5k.vcf.bgz:column 80816: invalid character '-' in integer literal; ... 2:0:0:0:6 ./.:0,0,0:0:LowQual:0:0:0:-1:0:0:0:0 ./.:0,0,0:0:LowQual:0:0:0 ...; ^; offending line: chr1 152267996 DEL00028254 AATATATATACTTTACGTAAAGT A . PASS ...; ```; Here is the full log and exception..... ```; Running on Apache Spark version 2.2.0; SparkUI available at http://10.48.225.55:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version devel-544bf8f; NOTE: This is a beta version. Interfaces may change; during the beta period. We also recommend pulling; the latest changes weekly.; [Stage 1:======================================================>(414 + 2) / 416]2018-04-15 14:38:32 Hail: INFO: Coerced almost-sorted dataset; [Stage 2:> (0 + 34) / 416]Traceback (most recent call last):; File ""/restricted/projectnb/genpro/github/hail/delly_vcf2vdf.py"", line 3, in <module>; hl.import_vcf('/project/casa/vcf.5k/delly/gcad.sv.delly.5k.vcf.bgz').write('/project/casa/vdf.5k/delly'); File ""<decorator-gen-552>"", line 2, in write; File ""/restricted/projectnb/genpro/github/ha",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3379:512,message,messages,512,https://hail.is,https://github.com/hail-is/hail/issues/3379,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: devel-5b299ddae758. ### What you did: ; ```; hl.utils.hadoop_is_file('gs://gnomad-tmp/pbt_parents_sparse_genotype_matrix/cols_ann.ht/_SUCCESS'); ```. ### What went wrong (all error messages here, including the full java stack trace):. Got a `FileNotFoundException`. Based on the documentation, I was expecting `False`. ```; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); <ipython-input-7-5ad16e5a0601> in <module>(); 1 hl.utils.hadoop_exists('gs://gnomad-tmp/pbt_parents_sparse_genotype_matrix/cols_ann.ht/_SUCCESS'); ----> 2 hl.utils.hadoop_is_file('gs://gnomad-tmp/pbt_parents_sparse_genotype_matrix/cols_ann.ht/_SUCCESS'). /home/hail/hail.zip/hail/utils/hadoop_utils.py in hadoop_is_file(path); 164 :obj:`.bool`; 165 """"""; --> 166 return Env.jutils().isFile(path, Env.hc()._jhc); 167 ; 168 . /usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py in __call__(self, *args); 1131 answer = self.gateway_client.send_command(command); 1132 return_value = get_return_value(; -> 1133 answer, self.gateway_client, self.target_id, self.name); 1134 ; 1135 for temp_arg in temp_args:. /home/hail/hail.zip/hail/utils/java.py in deco(*args, **kwargs); 194 raise FatalError('%s\n\nJava stack trace:\n%s\n'; 195 'Hail version: %s\n'; --> 196 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; 197 except pyspark.sql.utils.CapturedException as e:; 198 raise FatalError('%s\n\nJava stack trace:\n%s\n'. FatalError: FileNotFoundException: File not found : gs://gnomad-tmp/pbt_parents_sparse_genotype_matrix/cols_ann.ht/_SUCCESS; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3725:434,message,messages,434,https://hail.is,https://github.com/hail-is/hail/issues/3725,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: devel-5b299ddae758. ### What you did:. ```; print(metrics_ht['vqsr'].globals); hl.eval_expr(metrics_ht['vqsr'].globals); ```. ### What went wrong (all error messages here, including the full java stack trace):. ```; <StructExpression of type struct{}>; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); <ipython-input-51-e812f4924948> in <module>(); 1 print(metrics_ht['vqsr'].globals); ----> 2 hl.eval_expr(metrics_ht['vqsr'].globals). /home/hail/hail.zip/hail/typecheck/check.py in wrapper(*args, **kwargs); 545 def wrapper(*args, **kwargs):; 546 args_, kwargs_ = check_all(f, args, kwargs, checkers, is_method=is_method); --> 547 return f(*args_, **kwargs_); 548 ; 549 update_wrapper(wrapper, f). /home/hail/hail.zip/hail/expr/expressions/expression_utils.py in eval_expr(expression); 135 Result of evaluating `expression`.; 136 """"""; --> 137 return eval_expr_typed(expression)[0]; 138 ; 139 . /home/hail/hail.zip/hail/typecheck/check.py in wrapper(*args, **kwargs); 545 def wrapper(*args, **kwargs):; 546 args_, kwargs_ = check_all(f, args, kwargs, checkers, is_method=is_method); --> 547 return f(*args_, **kwargs_); 548 ; 549 update_wrapper(wrapper, f). /home/hail/hail.zip/hail/expr/expressions/expression_utils.py in eval_expr_typed(expression); 169 analyze('eval_expr_typed', expression, Indices(expression._indices.source)); 170 ; --> 171 return expression.collect()[0], expression.dtype; 172 ; 173 . /home/hail/hail.zip/hail/expr/expressions/base_expression.py in collect(self); 755 """"""; 756 uid = Env.get_uid(); --> 757 t = self._to_table(uid); 758 return [r[uid] for r in t._select(""collect"", None, hl.struct(**{uid: t[uid]})).collect()]; 759 . /home/hail/hail.zi",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3728:410,message,messages,410,https://hail.is,https://github.com/hail-is/hail/issues/3728,4,"['message', 'wrap']","['messages', 'wrapper']"
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: devel-6191d4c. ### What you did: vds.vep(""/vep/vep-gcloud.properties”). ### What went wrong (all error messages here, including the full java stack trace):. Traceback (most recent call last):; File ""/tmp/2f781c88-64f1-4345-a2b9-433c49d5a099/script_to_submit.py"", line 8, in <module>; vdsvep = vds.vep(""/vep/vep-gcloud.properties""); File ""<decorator-gen-878>"", line 2, in vep; File ""/tmp/2f781c88-64f1-4345-a2b9-433c49d5a099/hail-devel-6191d4ce69aa.zip/hail/utils/java.py"", line 167, in handle_py4j; hail.utils.java.FatalError: Can't zip RDDs with unequal numbers of partitions: List(16979, 16992). Java stack trace:; org.apache.spark.rdd.ZippedPartitionsBaseRDD.getPartitions(ZippedPartitionsRDD.scala:57); 	 at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:248); 	 at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:246); 	 at scala.Option.getOrElse(Option.scala:121); 	 at org.apache.spark.rdd.RDD.partitions(RDD.scala:246); 	 at org.apache.spark.rdd.MapPartitionsRDD.getPartitions(MapPartitionsRDD.scala:35); 	 at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:248); 	 at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:246); 	 at scala.Option.getOrElse(Option.scala:121); 	 at org.apache.spark.rdd.RDD.partitions(RDD.scala:246); 	 at is.hail.sparkextras.OrderedRDD$.coerce(OrderedRDD.scala:58); 	 at is.hail.sparkextras.OrderedRDD$.apply(OrderedRDD.scala:48); 	 at is.hail.utils.richUtils.RichPairRDD$.toOrderedRDD$extension1(RichPairRDD.scala:44); 	 at is.hail.variant.MatrixTable$.fromLegacy(MatrixTable.scala:84); 	 at is.hail.variant.MatrixTable.copyLegacy(MatrixTable.scala:2019); 	 at is.hail.methods.VEP$.annotate(VEP.scala:407); 	 at is.hail.methods.VEP$.apply(VEP.scala:41",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2666:356,message,messages,356,https://hail.is,https://github.com/hail-is/hail/issues/2666,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: devel-63d60cc. ### What you did:; Ran pc_relate on pruned matrix table (500K SNVs) containing 5k samples. About 800 family members are in the dataset. The data includes a number of replicates also. ### What went wrong (all error messages here, including the full java stack trace):. Replicates should have a kinship coefficient near 0.50 with themselves. Instead HAIL pc_relate calculated 0.18. King correctly calculated 0.498 on the exported plink file. ; ```; 279,A-CUHS-CU001167-BL-COL-32167BL1,A-CUHS-CU001167-BL-COL-32167BL1dea,0.18452354646323424; 280,A-CUHS-CU001167-BL-COL-32167BL1,A-CUHS-CU001167-BL-COL-32167BL1der,0.18468831264044877; 281,A-CUHS-CU001167-BL-COL-32167BL1dea,A-CUHS-CU001167-BL-COL-32167BL1der,0.18515942448861653; 282,A-CUHS-CU001167-BL-COL-32167BL1,A-CUHS-CU001167-BL-COL-32167BL1dew,0.1833498632291505; 283,A-CUHS-CU001167-BL-COL-32167BL1dea,A-CUHS-CU001167-BL-COL-32167BL1dew,0.18376901216269165; 284,A-CUHS-CU001167-BL-COL-32167BL1der,A-CUHS-CU001167-BL-COL-32167BL1dew,0.18367338097096797; 285,A-CUHS-CU001167-BL-COL-32167BL1,A-CUHS-CU001167-BL-COL-32167BL1fa,0.18470621273350465; 286,A-CUHS-CU001167-BL-COL-32167BL1dea,A-CUHS-CU001167-BL-COL-32167BL1fa,0.1852915664909736; 287,A-CUHS-CU001167-BL-COL-32167BL1der,A-CUHS-CU001167-BL-COL-32167BL1fa,0.18516143096293416; 288,A-CUHS-CU001167-BL-COL-32167BL1dew,A-CUHS-CU001167-BL-COL-32167BL1fa,0.1838098671960904; 289,A-CUHS-CU001167-BL-COL-32167BL1,A-CUHS-CU001167-BL-COL-32167BL1fr,0.1847714820370011; 290,A-CUHS-CU001167-BL-COL-32167BL1dea,A-CUHS-CU001167-BL-COL-32167BL1fr,0.18525793071221844; 291,A-CUHS-CU001167-BL-COL-32167BL1der,A-CUHS-CU001167-BL-COL-32167BL1fr,0.1852207373990892; 292,A-CUHS-CU001167-BL-COL-32167BL1dew,A-CUHS-CU001167-BL-COL-32167BL1fr,0.183",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3490:482,message,messages,482,https://hail.is,https://github.com/hail-is/hail/issues/3490,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: devel-63d60cc. ### What you did:; Tried to run sample_qc on mt table imported from Delly vcf. ; hl.sample_qc(ds). ### What went wrong (all error messages here, including the full java stack trace):. The sample_qc had a problem when alt ref is <DEL>. ```; [Stage 3:> (0 + 140) / 415]Traceback (most recent call last):; File ""/restricted/projectnb/genpro/github/hail.qc/delly-qc.py"", line 35, in <module>; ds = hl.sample_qc(ds); File ""<decorator-gen-902>"", line 2, in sample_qc; File ""/restricted/projectnb/genpro/github/hail/python/hail/typecheck/check.py"", line 490, in _typecheck; return __orig_func__(*args_, **kwargs_); File ""/restricted/projectnb/genpro/github/hail/python/hail/methods/qc.py"", line 91, in sample_qc; return MatrixTable(Env.hail().methods.SampleQC.apply(require_biallelic(dataset, 'sample_qc')._jvds, name)); File ""/share/pkg/spark/2.2.0/install/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/restricted/projectnb/genpro/github/hail/python/hail/utils/java.py"", line 196, in deco; 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; hail.utils.java.FatalError: HailException: invalid allele ""<DEL>"". Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 2 in stage 3.0 failed 4 times, most recent failure: Lost task 2.3 in stage 3.0 (TID 160, scc-q01.scc.bu.edu, executor 4): is.hail.utils.HailException: invalid allele ""<DEL>""; at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:6); at is.hail.utils.package$.fatal(package.scala:26); at is.hail.variant.AltAlleleMethods$.validate(AltAlleleMethods.scala:24); at is.hail.variant.AltAlleleMethods$.altAlleleType(AltAlleleMethods.scala:29); at is.hail.methods.SampleQCCo",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3413:398,message,messages,398,https://hail.is,https://github.com/hail-is/hail/issues/3413,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: devel-7cde2bf. ### What you did:; Tried to read in, repartition, and write 3 matrixtables. This then corrupted the previous version (as I used overwrite), so tried to recreate the matrix tables from the original vcf, and could not import. . ### What went wrong (all error messages here, including the full java stack trace):; repartition error:; ```; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); <ipython-input-8-f1eea7557457> in <module>(); ----> 1 hm3_variants_vds = hm3_variants_vds.repartition(100); <decorator-gen-688> in repartition(self, n_partitions, shuffle); /home/hail/hail.zip/hail/typecheck/check.py in _typecheck(__orig_func__, *args, **kwargs); 484 def _typecheck(__orig_func__, *args, **kwargs):; 485 args_, kwargs_ = check_all(__orig_func__, args, kwargs, checkers, is_method=True); --> 486 return __orig_func__(*args_, **kwargs_); 487 ; 488 return decorator(_typecheck); /home/hail/hail.zip/hail/matrixtable.py in repartition(self, n_partitions, shuffle); 2505 Repartitioned dataset.; 2506 """"""; -> 2507 jvds = self._jvds.coalesce(n_partitions, shuffle); 2508 return MatrixTable(jvds); 2509 ; /usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py in __call__(self, *args); 1131 answer = self.gateway_client.send_command(command); 1132 return_value = get_return_value(; -> 1133 answer, self.gateway_client, self.target_id, self.name); 1134 ; 1135 for temp_arg in temp_args:; /home/hail/hail.zip/hail/utils/java.py in deco(*args, **kwargs); 194 raise FatalError('%s\n\nJava stack trace:\n%s\n'; 195 'Hail version: %s\n'; --> 196 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; 197 except pyspark.sql.utils.Capture",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3507:525,message,messages,525,https://hail.is,https://github.com/hail-is/hail/issues/3507,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: devel-a870693. ### What you did:. ```; In [3]: x = hl.literal([1.0,2.2])\; In [4]: hl.eval_expr(hl.sum(x)); ```. ### What went wrong (all error messages here, including the full java stack trace):. ```; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); <ipython-input-11-c37a34e6bd74> in <module>(); ----> 1 hl.eval_expr(hl.sum(x)). <decorator-gen-355> in eval_expr(expression). ~/tools/hail/python/hail/typecheck/check.py in _typecheck(__orig_func__, *args, **kwargs); 488 def _typecheck(__orig_func__, *args, **kwargs):; 489 args_, kwargs_ = check_all(__orig_func__, args, kwargs, checkers, is_method=False); --> 490 return __orig_func__(*args_, **kwargs_); 491; 492 return decorator(_typecheck). ~/tools/hail/python/hail/expr/expressions/expression_utils.py in eval_expr(expression); 136 Result of evaluating `expression`.; 137 """"""; --> 138 return eval_expr_typed(expression)[0]; 139; 140. <decorator-gen-357> in eval_expr_typed(expression). ~/tools/hail/python/hail/typecheck/check.py in _typecheck(__orig_func__, *args, **kwargs); 488 def _typecheck(__orig_func__, *args, **kwargs):; 489 args_, kwargs_ = check_all(__orig_func__, args, kwargs, checkers, is_method=False); --> 490 return __orig_func__(*args_, **kwargs_); 491; 492 return decorator(_typecheck). ~/tools/hail/python/hail/expr/expressions/expression_utils.py in eval_expr_typed(expression); 172 analyze('eval_expr_typed', expression, Indices(expression._indices.source)); 173; --> 174 return expression.collect()[0], expression.dtype; 175; 176. ~/tools/hail/python/hail/expr/expressions/base_expression.py in collect(self); 770 """"""; 771 uid = Env.get_uid(); --> 772 t = self._to_table(uid); 773 return [r[ui",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3436:397,message,messages,397,https://hail.is,https://github.com/hail-is/hail/issues/3436,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: devel-abac611 using Apache Spark version 2.2.0. ### What you did:; Tried converting joint genotyped Delly vcf file to vdf file. ```; import hail as hl; hl.init(default_reference='GRCh38'); hl.import_vcf('/project/casa/vcf.5k/delly/gcad.sv.delly.5k.vcf.bgz').write('/project/casa/vdf.5k/delly'); ```. ### What went wrong (all error messages here, including the full java stack trace):. Error reading a GL field. ; ##FORMAT=<ID=GL,Number=G,Type=Float,Description=""Log10-scaled genotype likelihoods for RR,RA,AA genotypes"">. where the entry was:; 0/1:-66.2667,0,-25.4754:10000:PASS:5639:13071:8160:2:0:0:13:27. Here are the log and error messages... ```; [Stage 1:======================================================>(415 + 1) / 416]2018-04-12 07:57:52 Hail: INFO: Coerced almost-sorted dataset; [Stage 2:> (0 + 36) / 416]Traceback (most recent call last):; File ""/restricted/projectnb/genpro/github/hail/delly_vcf2vdf.py"", line 3, in <module>; hl.import_vcf('/project/casa/vcf.5k/delly/gcad.sv.delly.5k.vcf.bgz').write('/project/casa/vdf.5k/delly'); File ""<decorator-gen-546>"", line 2, in write; File ""/restricted/projectnb/genpro/github/hail/build/distributions/hail-python.zip/hail/typecheck/check.py"", line 481, in _typecheck; File ""/restricted/projectnb/genpro/github/hail/build/distributions/hail-python.zip/hail/matrixtable.py"", line 1956, in write; File ""/share/pkg/spark/2.2.0/install/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/restricted/projectnb/genpro/github/hail/build/distributions/hail-python.zip/hail/utils/java.py"", line 196, in deco; hail.utils.java.FatalError: NumberFormatException: For input string: ""-66.2667,0,-25.4754"". Java stack trace:; org.apache.spark.SparkException: Job aborte",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3361:584,message,messages,584,https://hail.is,https://github.com/hail-is/hail/issues/3361,2,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: devel-b1d7ad8506d7. ### What you did:. ```; x = hl.literal(hl.set(['A','B'])); x; Out[5]: <SetExpression of type set<str>>; x.contains('A'); Out[6]: <BooleanExpression of type bool>; x.contains('A').value; ```. ### What went wrong (all error messages here, including the full java stack trace):. ```; Traceback (most recent call last):; File ""/anaconda3/lib/python3.6/site-packages/IPython/core/interactiveshell.py"", line 2910, in run_code; exec(code_obj, self.user_global_ns, self.user_ns); File ""<ipython-input-7-21a57f32eefb>"", line 1, in <module>; x.contains('A').value; File ""/Users/laurent/tools/hail/python/hail/expr/expressions/base_expression.py"", line 786, in value; return hl.eval_expr(self); File ""/Users/laurent/tools/hail/python/hail/typecheck/check.py"", line 547, in wrapper; return f(*args_, **kwargs_); File ""/Users/laurent/tools/hail/python/hail/expr/expressions/expression_utils.py"", line 137, in eval_expr; return eval_expr_typed(expression)[0]; File ""/Users/laurent/tools/hail/python/hail/typecheck/check.py"", line 547, in wrapper; return f(*args_, **kwargs_); File ""/Users/laurent/tools/hail/python/hail/expr/expressions/expression_utils.py"", line 171, in eval_expr_typed; return expression.collect()[0], expression.dtype; File ""/Users/laurent/tools/hail/python/hail/expr/expressions/base_expression.py"", line 768, in collect; t = self._to_table(uid); File ""/Users/laurent/tools/hail/python/hail/expr/expressions/base_expression.py"", line 591, in _to_table; df = df.select(**{name: self}); File ""/Users/laurent/tools/hail/python/hail/typecheck/check.py"", line 547, in wrapper; return f(*args_, **kwargs_); File ""/Users/laurent/tools/hail/python/hail/table.py"", line 893, in select; return self._select('Table.select', value_st",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4078:495,message,messages,495,https://hail.is,https://github.com/hail-is/hail/issues/4078,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: devel-ccaf3640241f. ### What you did:. ```; ht = hl.import_table('gs://gnomad/annotations/hail-0.2/ht/genomes/score_rankings/gnomad.sites.RF.newStats24.txt.bgz', types={'chrom': hl.tstr}, impute=True, min_partitions=100).cache(); ht.export('gs://gnomad-tmp/genomes_rf.txt.bgz', parallel=True); ```. ### What went wrong (all error messages here, including the full java stack trace):; ```; ---------------------------------------------------------------------------; Py4JError Traceback (most recent call last); <ipython-input-17-671d2e9c22c8> in <module>(); 1 #ht = hl.import_table('gs://gnomad/annotations/hail-0.2/ht/genomes/score_rankings/gnomad.sites.RF.newStats24.txt.bgz', types={'chrom': hl.tstr}, impute=True, min_partitions=100).cache(); ----> 2 ht.export('gs://gnomad-tmp/genomes_rf.txt.bgz', parallel=True). /home/hail/hail.zip/hail/table.py in export(self, output, types_file, header, parallel); 994 """"""; 995 ; --> 996 self._jt.export(output, types_file, header, Env.hail().utils.ExportType.getExportType(parallel)); 997 ; 998 def group_by(self, *exprs, **named_exprs) -> 'GroupedTable':. /usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py in __call__(self, *args); 1131 answer = self.gateway_client.send_command(command); 1132 return_value = get_return_value(; -> 1133 answer, self.gateway_client, self.target_id, self.name); 1134 ; 1135 for temp_arg in temp_args:. /home/hail/hail.zip/hail/utils/java.py in deco(*args, **kwargs); 186 import pyspark; 187 try:; --> 188 return f(*args, **kwargs); 189 except py4j.protocol.Py4JJavaError as e:; 190 s = e.java_exception.toString(). /usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/protocol.py in get_return_value(answer, gateway_client, target_id, name); 321 raise Py4JE",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4033:583,message,messages,583,https://hail.is,https://github.com/hail-is/hail/issues/4033,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: f7631a0c96cd. ### What you did:. ```; hl.empty_dict(hl.tint32, hl.tint32).get(0).value; ```. ### What went wrong (all error messages here, including the full java stack trace):; ```; Hail version: devel-f7631a0c96cd; Error summary: HailException: array index out of bounds: 0 / 0. IR: (ArrayRef; (ToArray; (ApplyIR dict; (ArrayFilter __uid_191; (MakeArray Array[Tuple[I ...; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3937:377,message,messages,377,https://hail.is,https://github.com/hail-is/hail/issues/3937,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:. ### What you did:. ### What went wrong (all error messages here, including the full java stack trace):",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2604:304,message,messages,304,https://hail.is,https://github.com/hail-is/hail/issues/2604,4,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:. devel-406fc7f6af42. ### What you did:. Calling `export_elasticsearch` without a `config` argument works fine.; ```python; hl.export_elasticsearch(table, ""host"", 9200, ""someindex"", ""sometype"", 1000, config=None); ```. However, attempting to pass `config`, for example:; ```python; es_config = {""es.write.operation"": ""index""}; hl.export_elasticsearch(table, ""host"", 9200, ""someindex"", ""sometype"", 1000, config=es_config); ```; causes the following error:. ### What went wrong (all error messages here, including the full java stack trace):. ```; Traceback (most recent call last):; File ""/tmp/0ba8fc2c770d4b2ba96dc23c50fd6eab/load_clinvar_to_es.py"", line 105, in <module>; verbose=True,; File ""/tmp/0ba8fc2c770d4b2ba96dc23c50fd6eab/hail_v02_scripts.zip/hail_v02_scripts/utils/elasticsearch/client.py"", line 234, in export_table_to_elasticsearch; File ""/home/hail/hail.zip/hail/typecheck/check.py"", line 547, in wrapper; File ""/home/hail/hail.zip/hail/methods/impex.py"", line 1885, in export_elasticsearch; File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/home/hail/hail.zip/hail/utils/java.py"", line 188, in deco; File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/protocol.py"", line 323, in get_return_value; py4j.protocol.Py4JError: An error occurred while calling z:is.hail.io.ElasticsearchConnector.export. Trace:; py4j.Py4JException: Method export([class is.hail.table.Table, class java.lang.String, class java.lang.Integer, class java.lang.String, class java.lang.String, class java.lang.Integer, class java.util.HashMap, class java.lang.Boolean]) does not exist; 	at py4j.reflection.ReflectionEngine.getMethod(ReflectionEngine.java:318); 	at py4j.reflection.ReflectionEngine.getM",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4063:739,message,messages,739,https://hail.is,https://github.com/hail-is/hail/issues/4063,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; .2, Spark 2.2. ### What you did:; Getting an error about a missing header file when I try to run ./gradlew during Hail installation. ### What went wrong (all error messages here, including the full java stack trace):. In file included from Encoder.cpp:1:0:; ../resources/include/hail/Encoder.h:3:17: fatal error: lz4.h: No such file or directory; #include ""lz4.h""; ^; compilation terminated.; make: *** [build/Encoder.o] Error 1. FAILURE: Build failed with an exception.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4651:418,message,messages,418,https://hail.is,https://github.com/hail-is/hail/issues/4651,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; 0.2-48fb15983780. ### What you did:; Plotting a histogram of mt.sample_qc.r_ti_tv, using tutorial data:. import hail as hl; import bokeh. hl.init(); mt = hl.read_matrix_table('data/1kg.mt'); mt = hl.sample_qc(mt); p = hl.plot.histogram(mt.sample_qc.r_ti_tv); bokeh.io.save(p, 'test.html'). ### What went wrong (all error messages here, including the full java stack trace):. The resulting histogram has very high numbers for Frequency labels (y-axis). There are 284 samples in the tutorial dataset, so I expected frequencies to sum up to that, but y-axis labels are 5.000e+4, 1.000e+5, 1.500e+5, implying much higher counts. . I'm new to Hail and I could be plotting the values wrong and misunderstanding this particular plot (what I wanted to plot was the histogram of Ti/Tv ratios of all the samples). I've noticed the same y-axis labels in the GWAS tutorial in the docs (In [29]). . Thank you for your time.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4776:575,message,messages,575,https://hail.is,https://github.com/hail-is/hail/issues/4776,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; 0.2-a2eaf89baa0c; ### What you did:; Executed first four lines in https://github.com/hail-is/hail/blob/master/hail/python/hail/docs/tutorials/01-genome-wide-association-study.ipynb; ### What went wrong (all error messages here, including the full java stack trace):. ```; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); <ipython-input-4-758eefccad3d> in <module>; ----> 1 hl.import_vcf('data/1kg.vcf.bgz').write('data/1kg.mt', overwrite=True). <decorator-gen-1074> in import_vcf(path, force, force_bgz, header_file, min_partitions, drop_samples, call_fields, reference_genome, contig_recoding, array_elements_required, skip_invalid_loci). ~/bin/anaconda3/lib/python3.6/site-packages/hail/typecheck/check.py in wrapper(__original_func, *args, **kwargs); 558 def wrapper(__original_func, *args, **kwargs):; 559 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 560 return __original_func(*args_, **kwargs_); 561 ; 562 return wrapper. ~/bin/anaconda3/lib/python3.6/site-packages/hail/methods/impex.py in import_vcf(path, force, force_bgz, header_file, min_partitions, drop_samples, call_fields, reference_genome, contig_recoding, array_elements_required, skip_invalid_loci); 1893 skip_invalid_loci,; 1894 force_bgz,; -> 1895 force; 1896 ); 1897 return MatrixTable(jmt). ~/bin/anaconda3/lib/python3.6/site-packages/py4j/java_gateway.py in __call__(self, *args); 1255 answer = self.gateway_client.send_command(command); 1256 return_value = get_return_value(; -> 1257 answer, self.gateway_client, self.target_id, self.name); 1258 ; 1259 for temp_arg in temp_args:. ~/bin/anaconda3/lib/python3.6/site-packages/hail/utils/java.py in dec",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4775:467,message,messages,467,https://hail.is,https://github.com/hail-is/hail/issues/4775,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; 0.2. ### What you did:; Visited top hit for ""hail matrix table"": https://hail.is/docs/0.2/hailpedia/matrix_table.html. ### What went wrong (all error messages here, including the full java stack trace):; 404 / Not Found . ### Solution; We should add a 301 / permanent redirect: https://support.google.com/webmasters/answer/93633?hl=en",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5095:404,message,messages,404,https://hail.is,https://github.com/hail-is/hail/issues/5095,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; 0.2. ### What you did:; ```; mt = hl.read_matrix_table('gs://...'); mt = mt.filter_cols(mt.used_in_pca_calculation); print(mt.count_cols()); ```; The MatrixTable has a lot of row and column annotations. `mt.used_in_pca_calculation` is a Boolean column annotation. ### What went wrong (all error messages here, including the full java stack trace):; ```; Traceback (most recent call last):; File ""/tmp/8d5cc778-fdc7-4210-a60b-5efd1f67c45f/subset_genotype_pca.py"", line 8, in <module>; print(mt.count_cols()); File ""/home/hail/hail.zip/hail/matrixtable.py"", line 1950, in count_cols; File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/home/hail/hail.zip/hail/utils/java.py"", line 206, in deco; hail.utils.java.FatalError: AssertionError: assertion failed. Java stack trace:; java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.expr.MatrixValue.filterSamplesKeep(Relational.scala:110); 	at is.hail.expr.MatrixValue.filterCols(Relational.scala:133); 	at is.hail.expr.FilterCols.execute(Relational.scala:333); 	at is.hail.variant.MatrixTable.value$lzycompute(MatrixTable.scala:536); 	at is.hail.variant.MatrixTable.value(MatrixTable.scala:534); 	at is.hail.variant.MatrixTable.x$16$lzycompute(MatrixTable.scala:541); 	at is.hail.variant.MatrixTable.x$16(MatrixTable.scala:541); 	at is.hail.variant.MatrixTable.colValues$lzycompute(MatrixTable.scala:541); 	at is.hail.variant.MatrixTable.colValues(MatrixTable.scala:541); 	at is.hail.variant.MatrixTable.numCols(MatrixTable.scala:2378); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3173:549,message,messages,549,https://hail.is,https://github.com/hail-is/hail/issues/3173,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; 0.2; ### What you did:. 1. edited build.gradle to it will accept my spark version like this if (sparkVersion == '2.2.0.2.6.3.0-235') {. 2. Then I ran ./gradlew -Dspark.version=2.2.0.2.6.3.0-235 shadowJar archiveZip command. ### What went wrong (all error messages here, including the full java stack trace):; bild fails. ```; [luffy@wp-hdp-ctrl03 hail]$ ./gradlew -Dspark.version=2.2.0.2.6.3.0-235 shadowJar archiveZip --stacktrace; 1f253167d53c; :compileJava UP-TO-DATE; :generateBuildInfo; :nativeLib; tar -xzf libsimdpp-2.0-rc2.tar.gz; g++ -O3 -march=native -g -std=c++11 -Ilibsimdpp-2.0-rc2 -Wall -Werror -fPIC -ggdb -c -o ibs.o ibs.cpp; cc1plus: error: unrecognized command line option ""-std=c++11""; make: *** [ibs.o] Error 1; :nativeLib FAILED. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':nativeLib'.; > Process 'command 'make'' finished with non-zero exit value 2. * Try:; Run with --info or --debug option to get more log output. * Exception is:; org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':nativeLib'.; at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:69); at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:46); at org.gradle.api.internal.tasks.execution.PostExecutionAnalysisTaskExecuter.execute(PostExecutionAnalysisTaskExecuter.java:35); at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:66); at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:58); at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.e",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3705:509,message,messages,509,https://hail.is,https://github.com/hail-is/hail/issues/3705,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; 0.2; ### What you did:; Export hail table to elasticsearch; >>> hl.utils.get_movie_lens('data/'); >>> users = hl.read_table('data/users.ht'); >>> hl.export_elasticsearch(users, 'XX.XXX.XXX.XXX', XXXX, 'data', 'variant', 200,config=N; one, verbose=True). ### What went wrong (all error messages here, including the full java stack trace):. Error:; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""</usr/local/lib/python3.6/site-packages/decorator.py:decorator-gen-1118>"", line 2, in export_elasticsearch; File ""/opt/hail-on-EMR/src/hail/hail/build/distributions/hail-python.zip/hail/typecheck/check.py"", line 561, in wrapper; File ""/opt/hail-on-EMR/src/hail/hail/build/distributions/hail-python.zip/hail/methods/impex.py"", line 2104, in export_elasticsearch; File ""/opt/hail-on-EMR/src/hail/hail/build/distributions/hail-python.zip/hail/table.py"", line 101, in __getattr__; AttributeError: Table instance has no attribute '_jt'",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5583:539,message,messages,539,https://hail.is,https://github.com/hail-is/hail/issues/5583,2,"['message', 'wrap']","['messages', 'wrapper']"
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; 0.2; ### What you did:; users = hl.read_table('data/users.ht'); hl.export_elasticsearch(users, 'XX.XXX.XXX.XXX', 32565, 'users', 'movies', 200,config=None, verbose=True ). ### What went wrong (all error messages here, including the full java stack trace):; Gotten this error even though the elasticsearch IP and port number 32565 is correct. The IP mentioned in the error 192.168.185.157:9200 was not found anywhere in our EMR or elasticsearch cluster. ; >>> hl.export_elasticsearch(users, 'XX.XXX.XXX.XXX', 32565, 'users', 'movies', 200,config=None, verbose=True ); Config Map(es.nodes -> XX.XXX.XXX.XXX, es.port -> 32565, es.batch.size.entries -> 200, es.index.auto.create -> true); [Stage 0:> (0 + 32) / 65]Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""</usr/local/lib/python3.6/site-packages/decorator.py:decorator-gen-1122>"", line 2, in export_elasticsearch; File ""/opt/hail-on-EMR/src/hail/hail/build/distributions/hail-python.zip/hail/typecheck/check.py"", line 561, in wrapper; File ""/opt/hail-on-EMR/src/hail/hail/build/distributions/hail-python.zip/hail/methods/impex.py"", line 2106, in export_elasticsearch; File ""/usr/lib/spark/python/lib/py4j-0.10.7-src.zip/py4j/java_gateway.py"", line 1257, in __call__; File ""/opt/hail-on-EMR/src/hail/hail/build/distributions/hail-python.zip/hail/utils/java.py"", line 227, in deco; hail.utils.java.FatalError: EsHadoopNoNodesLeftException: Connection error (check network and/or proxy settings)- all nodes failed; tried [[192.168.185.157:9200, 192.168.81.209:9200]] . Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 1 in stage 0.0 failed 4 times, most recent failure: Lost task 1.3 in stage 0.0 (TID 73, ip-172-31-10-234.ap",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5643:457,message,messages,457,https://hail.is,https://github.com/hail-is/hail/issues/5643,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; 19213e50. ### What you did:; Tried compiling hail with GCC-8.1.0. ### What went wrong (all error messages here, including the full java stack trace):. Full output from `make` invocation:; ```; echo ""make debug""; make debug; echo ""JAVA_HOME is /usr/lib/jvm/java-8-openjdk-amd64""; JAVA_HOME is /usr/lib/jvm/java-8-openjdk-amd64; echo ""CXX is g++""; CXX is g++; g++ --version; g++ (GCC) 8.1.0; Copyright (C) 2018 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. tar -xzf libsimdpp-2.0-rc2.tar.gz; g++ -O3 -march=native -std=c++11 -Ilibsimdpp-2.0-rc2 -Wall -Werror -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux -c -o ibs.o ibs.cpp; In file included from libsimdpp-2.0-rc2/simdpp/simd.h:132,; from ibs.h:17,; from ibs.cpp:5:; libsimdpp-2.0-rc2/simdpp/detail/cast.inl: In instantiation of ‘R simdpp::arch_avx2::detail::cast_memcpy(const T&) [with R = simdpp::arch_avx2::float64<2>; T = simdpp::arch_avx2::float32<4, simdpp::arch_avx2::expr_empty>]’:; libsimdpp-2.0-rc2/simdpp/detail/cast.inl:120:30: required from ‘static R simdpp::arch_avx2::detail::cast_wrapper<false, false, MaskCastOverride>::run(const T&) [with R = simdpp::arch_avx2::float64<2>; T = simdpp::arch_avx2::float32<4, simdpp::arch_avx2::expr_empty>; unsigned int MaskCastOverride = 0]’; libsimdpp-2.0-rc2/simdpp/core/cast.h:63:89: required from ‘R simdpp::arch_avx2::bit_cast(const T&) [with R = simdpp::arch_avx2::float64<2>; T = simdpp::arch_avx2::float32<4, simdpp::arch_avx2::expr_empty>]’; libsimdpp-2.0-rc2/simdpp/detail/insn/transpose.h:253:",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3955:351,message,messages,351,https://hail.is,https://github.com/hail-is/hail/issues/3955,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; Hail .2, Spark 2.2. ### What you did:; Error when I run one of several methods of MatrixTable (write(), count_rows(), etc). ### What went wrong (all error messages here, including the full java stack trace):; org.apache.spark.SparkException: Job aborted due to stage failure: Task 1 in stage 1.0 failed 4 times, most recent failure: Lost task 1.3 in stage 1.0 (TID 23, ip-172-31-66-74.ec2.internal, executor 1): java.io.InvalidClassException: is.hail.expr.types.TInterval; local class incompatible: stream classdesc serialVersionUID = -1783603148272890463, local class serialVersionUID = 7653437602465004618",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4650:409,message,messages,409,https://hail.is,https://github.com/hail-is/hail/issues/4650,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; Hail version: devel-eb1e04205793. ### What you did:. Attempt to `export_vcf` with a MT where some `locus` values are `NA`. ### What went wrong (all error messages here, including the full java stack trace):. Bad error message. Didn't really tell me anything except Java Assertion Error. [Stage 2:===========================================> (1709 + 291) / 2000]Traceback (most recent call last):; File ""/tmp/0eccddcf-0d49-4280-8b79-c43e193b044d/vdstovcf.py"", line 12, in <module>; hail.export_vcf(myvds, 'gs://ibd-exomes/v34meta/exomes.ccdg.vcf.bgz'); File ""/home/hail/hail.zip/hail/typecheck/check.py"", line 547, in wrapper; File ""/home/hail/hail.zip/hail/methods/impex.py"", line 422, in export_vcf; File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/home/hail/hail.zip/hail/utils/java.py"", line 196, in deco; hail.utils.java.FatalError: AssertionError: assertion failed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4011:408,message,messages,408,https://hail.is,https://github.com/hail-is/hail/issues/4011,3,"['message', 'wrap']","['message', 'messages', 'wrapper']"
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; Running on Apache Spark version 2.2.0 version devel-cfdbb87; ### What you did:; This error message is related to this filter:; passed=passed.filter_rows((passed.variant_qc.AC>= 10)); Without this filter it runs OK. This file is a merged vcf file from Lumpy. Some sites may have no alternate alleles called (all 0/0 or ./.). ### What went wrong (all error messages here, including the full java stack trace):; [Stage 2:> (0 + 72) / 125]Traceback (most recent call last):; File ""/restricted/projectnb/casa/wgs.hg38/hail/lumpy/models.all.py"", line 80, in <module>; print(""Filtered Passed Rows:"",passed.count_rows()); File ""/restricted/projectnb/genpro/github/hail/build/distributions/hail-python.zip/hail/matrixtable.py"", line 2072, in count_rows; File ""/share/pkg/spark/2.2.0/install/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/restricted/projectnb/genpro/github/hail/build/distributions/hail-python.zip/hail/utils/java.py"", line 196, in deco; hail.utils.java.FatalError: NegativeArraySizeException: null. Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 30 in stage 2.0 failed 4 times, most recent failure: Lost task 30.3 in stage 2.0 (TID 91, scc-q05.scc.bu.edu, executor 9): java.lang.NegativeArraySizeException; 	at java.util.Arrays.copyOf(Arrays.java:3236); 	at is.hail.annotations.Region.ensure(Region.scala:139); 	at is.hail.annotations.Region.allocate(Region.scala:152); 	at is.hail.annotations.Region.allocate(Region.scala:159); 	at is.hail.codegen.generated.C4.apply(Unknown Source); 	at is.hail.codegen.generated.C4.apply(Unknown Source); 	at is.hail.io.CompiledPackDecoder.readRegionValue(RowStore.scala:649); 	at is.hail.HailContext$$anon$2.next(HailCon",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3901:345,message,message,345,https://hail.is,https://github.com/hail-is/hail/issues/3901,2,['message'],"['message', 'messages']"
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; `devel-17d79be1221e`; ### What you did:; ```; import hail as hl. mt = hl.balding_nichols_model(3, 100, 100); hl.export_vcf(mt, 'foo.vcf.bgz'); ```; ### What went wrong (all error messages here, including the full java stack trace):; ```; Traceback (most recent call last):; File ""foo.py"", line 4, in <module>; hl.export_vcf(mt, 'foo.vcf.bgz'); File ""<decorator-gen-878>"", line 2, in export_vcf; File ""/Users/dking/projects/hail/python/hail/typecheck/check.py"", line 546, in wrapper; return __original_func(*args_, **kwargs_); File ""/Users/dking/projects/hail/python/hail/methods/impex.py"", line 424, in export_vcf; joption(typ._convert_to_j(metadata))); File ""/Users/dking/borg/spark-2.2.0-bin-hadoop2.7/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/Users/dking/projects/hail/python/hail/utils/java.py"", line 210, in deco; 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; hail.utils.java.FatalError: HailException: in export_vcf: column key must be type 'str', found: [Lis.hail.expr.types.Type;@1e5a1972. Java stack trace:; is.hail.utils.HailException: in export_vcf: column key must be type 'str', found: [Lis.hail.expr.types.Type;@1e5a1972; 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:9); 	at is.hail.utils.package$.fatal(package.scala:26); 	at is.hail.variant.MatrixTable.requireColKeyString(MatrixTable.scala:392); 	at is.hail.io.vcf.ExportVCF$.apply(ExportVCF.scala:202); 	at is.hail.io.vcf.ExportVCF.apply(ExportVCF.scala); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.j",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4283:433,message,messages,433,https://hail.is,https://github.com/hail-is/hail/issues/4283,2,"['message', 'wrap']","['messages', 'wrapper']"
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; `devel-3b014af` (off of `0c96180`); ### What you did:; ```; mt = mt.select_entries(GT=hl.cond(hl.is_defined(mt.GT), hl.struct(), hl.null(hl.tstruct()))); ```; ### What went wrong (all error messages here, including the full java stack trace):; ```; TypeError: 'cond' requires the 'consequent' and 'alternate' arguments to have the same type; consequent: type struct{}; alternate: type struct{}; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3103:444,message,messages,444,https://hail.is,https://github.com/hail-is/hail/issues/3103,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; devel-45429b1. ### What you did:; ```; x = functions.capture(5); y = -1.2e-7; eval_expr(x * y); ```. ### What went wrong (all error messages here, including the full java stack trace):; ```; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); <ipython-input-53-69c81b591366> in <module>(); ----> 1 eval_expr(x * y). <decorator-gen-365> in eval_expr(expression). /hadoop_gcs_connector_metadata_cache/hail/hail-devel-45429b164934.zip/hail/expr/expression.py in args_to_expr(func, *args); 176 @decorator; 177 def args_to_expr(func, *args):; --> 178 return func(*(to_expr(a) for a in args)); 179; 180. /hadoop_gcs_connector_metadata_cache/hail/hail-devel-45429b164934.zip/hail/expr/expression.py in eval_expr(expression); 3576 Result of evaluating `expression`.; 3577 """"""; -> 3578 return eval_expr_typed(expression)[0]; 3579; 3580. <decorator-gen-366> in eval_expr_typed(expression). /hadoop_gcs_connector_metadata_cache/hail/hail-devel-45429b164934.zip/hail/expr/expression.py in args_to_expr(func, *args); 176 @decorator; 177 def args_to_expr(func, *args):; --> 178 return func(*(to_expr(a) for a in args)); 179; 180. /hadoop_gcs_connector_metadata_cache/hail/hail-devel-45429b164934.zip/hail/expr/expression.py in eval_expr_typed(expression); 3612 if len(expression._joins) > 0:; 3613 raise ExpressionException(""'eval_expr' methods do not support joins or broadcasts""); -> 3614 r, t = Env.hc().eval_expr_typed(expression._ast.to_hql()); 3615 return r, t; 3616. <decorator-gen-1049> in eval_expr_typed(self, expr). /hadoop_gcs_connector_metadata_cache/hail/hail-devel-45429b164934.zip/hail/utils/java.py in handle_py4j(func, *args, **kwargs); 153 raise FatalError('%s\n\nJava st",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2655:386,message,messages,386,https://hail.is,https://github.com/hail-is/hail/issues/2655,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; devel-64a1fac. ### What you did:; run split_multi_hts on a VDS with only GT genotype field. ### What went wrong (all error messages here, including the full java stack trace):; ```; is.hail.utils.HailException: Struct has no field `AD'; Available fields:; GT: Call; <input>:4: newad = if (isDefined(g.AD)); ^; at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:6); at is.hail.utils.package$.fatal(package.scala:27); at is.hail.expr.ParserUtils$.error(Parser.scala:33); at is.hail.expr.AST.parseError(AST.scala:255); at is.hail.expr.Select.typecheckThis(AST.scala:333); at is.hail.expr.AST.typecheckThis(AST.scala:246); at is.hail.expr.AST.typecheck(AST.scala:252); at is.hail.expr.AST$$anonfun$typecheck$1.apply(AST.scala:251); at is.hail.expr.AST$$anonfun$typecheck$1.apply(AST.scala:251); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186); at is.hail.expr.AST.typecheck(AST.scala:251); at is.hail.expr.Apply.typecheck(AST.scala:663); at is.hail.expr.AST$$anonfun$typecheck$1.apply(AST.scala:251); at is.hail.expr.AST$$anonfun$typecheck$1.apply(AST.scala:251); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186); at is.hail.expr.AST.typecheck(AST.scala:251); at is.hail.expr.Let$$anonfun$typecheck$18.apply(AST.scala:850); at is.hail.expr.Let$$anonfun$typecheck$18.apply(AST.scala:849); at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.ArrayOps$ofRef.foreach(",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2755:377,message,messages,377,https://hail.is,https://github.com/hail-is/hail/issues/2755,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; devel-6bb4670. ### What you did:; A number of variant QC steps, then a `vds.write`; The error is probably caused by one of the previous steps. If it helps I can comment out earlier parts to narrow down what actually triggers the error. ### What went wrong (all error messages here, including the full java stack trace):; ```; [Stage 6:> (0 + 8) / 5000]; [Stage 6:> (0 + 4) / 5000]; [Stage 6:> (0 + 8) / 5000]Traceback (most recent call last):; File ""/home/hail/hail.zip/hail/utils/java.py"", line 185, in handle_py4j; File ""/home/hail/hail.zip/hail/table.py"", line 1058, in aggregate; File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/usr/lib/spark/python/lib/pyspark.zip/pyspark/sql/utils.py"", line 63, in deco; File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/protocol.py"", line 319, in get_return_value; py4j.protocol.Py4JJavaError: An error occurred while calling o30335.query.; : org.apache.spark.SparkException: Job aborted due to stage failure: Task 7 in stage 6.0 failed 20 times, most recent failure: Lost task 7.19 in stage 6.0 (TID 179, robert1-w-0.c.ccdg-wgs.internal, executor 4): java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.annotations.RegionValueBuilder.endStruct(RegionValueBuilder.scala:109); at is.hail.variant.MatrixTable$$anonfun$filterGenotypes$1$$anonfun$apply$80.apply(MatrixTable.scala:2645); at is.hail.variant.MatrixTable$$anonfun$filterGenotypes$1$$anonfun$apply$80.apply(MatrixTable.scala:2615); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(Ordered",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3063:521,message,messages,521,https://hail.is,https://github.com/hail-is/hail/issues/3063,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; devel-92bbe4b. ### What you did:; I used `join` to combine two VDS. Empty sample schema, different variant schema, no overlapping samples, hardcalls. ### What went wrong (all error messages here, including the full java stack trace):; Got an AssertionError:; ```; org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 5.0 failed 20 times, most recent failure: Lost task 0.19 in stage 5.0 (TID 677, mycluster3-w-1.c.ccdg-wgs.internal): java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.annotations.Region.loadInt(Region.scala:36); at is.hail.expr.types.TContainer$.loadLength(TContainer.scala:9); at is.hail.expr.types.TContainer.loadLength(TContainer.scala:27); at is.hail.variant.MatrixTable$$anonfun$105$$anonfun$apply$58.apply(MatrixTable.scala:1702); at is.hail.variant.MatrixTable$$anonfun$105$$anonfun$apply$58.apply(MatrixTable.scala:1685); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$9$$anon$5.next(OrderedRVD.scala:661); at is.hail.rvd.OrderedRVD$$anonfun$apply$9$$anon$5.next(OrderedRVD.scala:655); ```. I can make it work by copying the variant annotation from one VDS to the other before calling `join`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2763:435,message,messages,435,https://hail.is,https://github.com/hail-is/hail/issues/2763,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; devel-c8ca698. ### What you did:; ```; mt_path = ""gs://gnomad-berylc/myoseq/qc/variant_qc/MYOSEQ.variant.qc.filtered.040318.mt""; myoseq = hl.read_matrix_table(mt_path); qc_mt_common = myoseq.filter_rows(myoseq.va_qc.AF > 0.05). qc_mt_common_syn = qc_mt_common.filter_rows(qc_mt_common.worst_csq == ""synonymous""); results_per_gene_common = (qc_mt_common_syn.group_rows_by(qc_mt_common_syn.vep.ensg_with_most_severe_csq).aggregate(n_non_ref=agg.count_where((qc_mt_common_syn.GT.is_non_ref())))); ```. ### What went wrong (all error messages here, including the full java stack trace):; 2018-05-14 23:45:22 Hail: WARN: modified row key, rescanning to compute ordering...; [Stage 9:=====> (163 + 76) / 1526]---------------------------------------------------------------------------; FatalError Traceback (most recent call last); <ipython-input-12-cefffae1d4ba> in <module>(); ----> 1 results_per_gene_common = (qc_mt_common_syn.group_rows_by(qc_mt_common_syn.vep.ensg_with_most_severe_csq).aggregate(n_non_ref=agg.count_where((qc_mt_common_syn.GT.is_non_ref())))). /hadoop_gcs_connector_metadata_cache/hail/hail-devel-c8ca698c6ed5.zip/hail/matrixtable.py in aggregate(self, **named_exprs); 349 rest_of_key = {k: self._row_keys[k] for k in self._row_keys.keys() if k not in self._partition_key}; 350 base = MatrixTable(; --> 351 base._key_rows_by(""GroupedMatrixTable.group_rows_by"", pk, rest_of_key)._jvds.aggregateRowsByKey(; 352 ',\n'.join(strs))); 353 else:. /hadoop_gcs_connector_metadata_cache/hail/hail-devel-c8ca698c6ed5.zip/hail/matrixtable.py in _key_rows_by(self, caller, pk_dict, rest_of_keys_dict); 706 key_fields = dict(pk_dict, **rest_of_keys_dict); 707; --> 708 return self._select_rows(caller, key_struct=hl.struct(**key_fields), pk_si",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3583:784,message,messages,784,https://hail.is,https://github.com/hail-is/hail/issues/3583,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; devel. ### What you did:; ```; hc = HailContext(); past_vds = hc.read(args.past); future_vds = hc.read(args.future). bi_past_vds = past_vds.filter_rows(past_vds.v.is_biallelic()); bi_future_vds = future_vds.filter_rows(future_vds.v.is_biallelic()); bi_summary, bi_samples, bi_variants = methods.concordance(bi_past_vds, bi_future_vds); ```. ### What went wrong (all error messages here, including the full java stack trace):; ```; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version devel-08a1543; WARNING: This is an unstable development build.; 2018-01-17 18:32:09 Hail: INFO: Found 729 overlapping samples; Left: 729 total samples; Right: 729 total samples; 2018-01-17 18:32:10 Hail: WARN: converting OrderedRVD => OrderedRDD; [Stage 0:====================================================>(4627 + 1) / 4628]2018-01-17 18:47:04 Hail: INFO: Coerced sorted dataset; 2018-01-17 18:47:04 Hail: WARN: converting OrderedRVD => OrderedRDD; [Stage 1:> (7 + 28) / 4969]Traceback (most recent call last):; File ""/tmp/f93de2d1-2d89-43f9-9868-f266eb88a6f1/concordance.py"", line 38, in <module>; main(args); File ""/tmp/f93de2d1-2d89-43f9-9868-f266eb88a6f1/concordance.py"", line 19, in main; bi_summary, bi_samples, bi_variants = methods.concordance(bi_past_vds, bi_future_vds); File ""<decorator-gen-1304>"", line 2, in concordance; File ""/tmp/f93de2d1-2d89-43f9-9868-f266eb88a6f1/hail-devel-08a15431a0ef.zip/hail/utils/java.py"", line 155, in handle_py4j; hail.utils.java.FatalError: AssertionError: assertion failed. Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 30 in stage 1.0 failed 20 times, most recent failure: Lost task 30.19 in stage 1.0 (TID 4847, lfdev2-sw-f5w2.c.broad-mpg",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2743:626,message,messages,626,https://hail.is,https://github.com/hail-is/hail/issues/2743,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; hail: `hail-devel-c8ca698`; ### What you did:; ```; hl.init(); ds = hl.import_plink('gs://testdata/1kg_phase1_chr22.bed',; 'gs://testdata/1kg_phase1_chr22.bim',; 'gs://testdata/1kg_phase1_chr22.fam'); ds = hl.sample_qc(ds); ```; Data was downloaded from [here](https://www.cog-genomics.org/plink/1.9/resources).; ; ### What went wrong (all error messages here, including the full java stack trace):; Spark jobs fail at `treeReduce at SampleQC.scala:206`.; Java Error: `java.lang.NegativeArraySizeException`. Full stack:; See file attached.; [error_message.txt](https://github.com/hail-is/hail/files/2003301/error_message.txt)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3585:600,message,messages,600,https://hail.is,https://github.com/hail-is/hail/issues/3585,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; version 0.2.4-f1e6526d34b1. ### What you did:; cd hail/hail. ./gradlew -Dspark.version=2.2.1 -Dbreeze.version=0.13.1 -Dpy4j.version=0.10.4 shadowJar archiveZip. ### What went wrong (all error messages here, including the full java stack trace):; In file included from Decoder.cpp:3:0:; ../resources/include/hail/Decoder.h:3:10: fatal error: lz4.h: No such file or directory; #include ""lz4.h""; ^~~~~~~; compilation terminated.; make: *** [build/Decoder.o] Error 1; :nativeLib FAILED. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':nativeLib'.; > Process 'command 'make'' finished with non-zero exit value 2. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. BUILD FAILED. Total time: 36.47 secs",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4880:446,message,messages,446,https://hail.is,https://github.com/hail-is/hail/issues/4880,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; version devel-51961fa0ef80. ### What you did:; ```v7_gene_maximums_kt = hl.read_table(""gs://gnomad-berylc/tx-annotation/hail2/data/GTEx.v7.max_expression_per_gene_per_tissue.031318.kt"")```. ### What went wrong (all error messages here, including the full java stack trace):; ```---------------------------------------------------------------------------; FatalError Traceback (most recent call last); <ipython-input-5-daf7d8347376> in <module>(); ----> 1 v7_gene_maximums_kt = hl.read_table(""gs://gnomad-berylc/tx-annotation/hail2/data/GTEx.v7.max_expression_per_gene_per_tissue.031318.kt""). <decorator-gen-1046> in read_table(path). /home/hail/hail.zip/hail/typecheck/check.py in wrapper(__original_func, *args, **kwargs); 558 def wrapper(__original_func, *args, **kwargs):; 559 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 560 return __original_func(*args_, **kwargs_); 561 ; 562 return wrapper. /home/hail/hail.zip/hail/methods/impex.py in read_table(path); 1865 :class:`.Table`; 1866 """"""; -> 1867 return Table(Env.hc()._jhc.readTable(path)); 1868 ; 1869 @typecheck(t=Table,. /usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py in __call__(self, *args); 1131 answer = self.gateway_client.send_command(command); 1132 return_value = get_return_value(; -> 1133 answer, self.gateway_client, self.target_id, self.name); 1134 ; 1135 for temp_arg in temp_args:. /home/hail/hail.zip/hail/utils/java.py in deco(*args, **kwargs); 208 raise FatalError('%s\n\nJava stack trace:\n%s\n'; 209 'Hail version: %s\n'; --> 210 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; 211 except pyspark.sql.utils.CapturedException as e:; 212 raise FatalError('%s\n\nJava stack tr",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4325:475,message,messages,475,https://hail.is,https://github.com/hail-is/hail/issues/4325,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:devel-abac611. ### What you did: spark-submit --jars build/libs/hail-all-spark.jar --conf spark.kryo.registrator=is.hail.kryo.HailKryoRegistrator --py-files build/distributions/hail-python.zip --num-executors 6 test.py; where test.y is:; import hail as hl; hl.init(master='yarn',default_reference='GRCh38'); hl.import_vcf('/project/casa/vcf.5k/gatk.hc/adsp-5k.hg38.tileDB.recalibrate_SNP.chr22.biallelic.4795samples.g.vcf.bgz').write('/project/casa/vdf.5k/test.vdf'). ### What went wrong (all error messages here, including the full java stack trace):; Error summary: ClassNotFoundException: is.hail.utils.SerializableHadoopConfiguration; Running on Apache Spark version 2.2.0; SparkUI available at http://10.48.225.55:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version devel-abac611; NOTE: This is a beta version. Interfaces may change; during the beta period. We also recommend pulling; the latest changes weekly.; [Stage 1:======================================================>(243 + 1) / 244]2018-04-10 09:30:24 Hail: INFO: Coerced sorted dataset; Traceback (most recent call last):; File ""/restricted/projectnb/genpro/github/hail/test.py"", line 3, in <module>; hl.import_vcf('/project/casa/vcf.5k/gatk.hc/adsp-5k.hg38.tileDB.recalibrate_SNP.chr22.biallelic.4795samples.g.vcf.bgz').write('/project/casa/vdf.5k/test. vdf'); File ""<decorator-gen-546>"", line 2, in write; File ""/restricted/projectnb/genpro/github/hail/build/distributions/hail-python.zip/hail/typecheck/check.py"", line 481, in _typecheck; File ""/restricted/projectnb/genpro/github/hail/build/distributions/hail-python.zip/hail/matrixtable.py"", line 1956, in write; File ""/share/pkg/spark/2.2.0/install/python/lib/py4j-0.10.4-src.zip/py4j/java",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3342:751,message,messages,751,https://hail.is,https://github.com/hail-is/hail/issues/3342,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. Running on Ubuntu 18.04. I had installed openjdk-11-jre-headless instead of openjdk-8-jre-headless. ### Hail version:; 0.2 ; ### What you did:. ### What went wrong (all error messages here, including the full java stack trace):; 2018-12-04 22:13:57 root: ERROR: IllegalArgumentException: null; From java.lang.IllegalArgumentException: null; at org.apache.xbean.asm5.ClassReader.<init>(Unknown Source); at org.apache.xbean.asm5.ClassReader.<init>(Unknown Source); at org.apache.xbean.asm5.ClassReader.<init>(Unknown Source); at org.apache.spark.util.ClosureCleaner$.getClassReader(ClosureCleaner.scala:46); at org.apache.spark.util.FieldAccessFinder$$anon$3$$anonfun$visitMethodInsn$2.apply(ClosureCleaner.scala:443); at org.apache.spark.util.FieldAccessFinder$$anon$3$$anonfun$visitMethodInsn$2.apply(ClosureCleaner.scala:426); at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733); at scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:103); at scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:103); at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230); at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40); at scala.collection.mutable.HashMap$$anon$1.foreach(HashMap.scala:103); at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732); at org.apache.spark.util.FieldAccessFinder$$anon$3.visitMethodInsn(ClosureCleaner.scala:426); at org.apache.xbean.asm5.ClassReader.a(Unknown Source); at org.apache.xbean.asm5.ClassReader.b(Unknown Source); at org.apache.xbean.asm5.ClassReader.accept(Unknown Source); at org.apache.xbean.asm5.ClassReader.accept(Unknown Source); at org.apache.spark.util.Closu",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4896:410,message,messages,410,https://hail.is,https://github.com/hail-is/hail/issues/4896,1,['message'],['messages']
Integrability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. Tutorials 05 and 08. ### What you did:; (From tutorial 05-tables). import hail as hl; hl.init(); hl.utils.get_movie_lens('data/'); users = hl.read_table('data/users.ht'). ### What went wrong (all error messages here, including the full java stack trace):. Py4JError: An error occurred while calling o1.readTable. Trace:; py4j.Py4JException: Method readTable([class java.lang.String]) does not exist; 	at py4j.reflection.ReflectionEngine.getMethod(ReflectionEngine.java:318); 	at py4j.reflection.ReflectionEngine.getMethod(ReflectionEngine.java:326); 	at py4j.Gateway.invoke(Gateway.java:272); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:214); 	at java.lang.Thread.run(Thread.java:748)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3989:437,message,messages,437,https://hail.is,https://github.com/hail-is/hail/issues/3989,1,['message'],['messages']
Integrability,"To summarize from our discussion today:. 1. We want to make the FASTAReaderConfig and Liftover map transient; 2. We'll keep enough information around (like map from name to chain file path, sequence path) such that with a filesystem, the FASTA reader and LiftOvers can be regenerated.; 3. Create a method that synchronizes FASTAReaderConfig and LiftOver state, working name `heal`, that takes a filesystem and sets everything up.; 4. We'll call this method in the resultWithIndex closure.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10523#issuecomment-871799587:310,synchroniz,synchronizes,310,https://hail.is,https://github.com/hail-is/hail/pull/10523#issuecomment-871799587,1,['synchroniz'],['synchronizes']
Integrability,"Tried to load 1kg public VCF using newest version of hail:; ```; tgp = hl.import_vcf('gs://genomics-public-data/1000-genomes-phase-3/vcf-20150220/ALL.chr22.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf'); tgp.describe(); tgp.rows().show(); ```; Getting:; ```; hail.utils.java.FatalError: NoSuchElementException: key not found: GT. Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 2.0 failed 20 times, most recent failure: Lost task 0.19 in stage 2.0 (TID 104, pca-w-1.c.daly-ibd.internal, executor 2): is.hail.utils.HailException: ALL.chr22.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf: caught java.util.NoSuchElementException: key not found: GT; offending line: 22	16050075	rs587697622	A	G	100	PASS	AC=1;AF=0.000199681;AN=...; 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:17); 	at is.hail.utils.package$.fatal(package.scala:26); 	at is.hail.utils.Context.wrapException(Context.scala:23); 	at is.hail.io.vcf.LoadVCF$$anonfun$parseLines$1$$anon$1.hasNext(LoadVCF.scala:761); 	at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); 	at scala.collection.Iterator$$anon$1.hasNext(Iterator.scala:1004); 	at is.hail.rvd.OrderedRVD$$anon$2.hasNext(OrderedRVD.scala:413); 	at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$10$$anon$3.hasNext(OrderedRVD.scala:815); 	at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$10$$anon$3.hasNext(OrderedRVD.scala:815); 	at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); 	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:389); 	at scal",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3467:961,wrap,wrapException,961,https://hail.is,https://github.com/hail-is/hail/issues/3467,1,['wrap'],['wrapException']
Integrability,"True. I thought at least for the copy-paste tokens that this would be intentional. Looks like you can get access tokens from GCP that last up to 12 hours, but that could be insufficient for large workloads. If we need something arbitrarily long-lived, our current implementation might be our best bet short of some better integration with OIDC.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13934#issuecomment-1785516525:322,integrat,integration,322,https://hail.is,https://github.com/hail-is/hail/pull/13934#issuecomment-1785516525,1,['integrat'],['integration']
Integrability,Trying to build on ubuntu ; Welcome to Ubuntu Xenial Xerus (development branch) (GNU/Linux 4.4.0-16-generic x86_64). This tree builds fine on mac using grade installDist. ; On ubuntu it gives the below failure message. We wondered if it might have something to do with case sensitivity issues in file/path naming (mac maintaining case but being case-insensitive). Let me know if you would like more info. ; :compileJava UP-TO-DATE; :compileScala FAILED. FAILURE: Build failed with an exception.; - What went wrong:; A problem was found with the configuration of task ':compileScala'.; > No value has been specified for property 'zincClasspath'.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/275:210,message,message,210,https://hail.is,https://github.com/hail-is/hail/issues/275,1,['message'],['message']
Integrability,"Turns out I needed to pull in the transitive breeze dependencies; without these, the Python tests failed while the Scala tests passed. I've re-run the tests on Spark 3 now; let me know if there are any other changes you'd like to see. Unfortunately, there's a small bug I saw on the Spark 3 MLLib side; I'll make sure this gets addressed ASAP: https://issues.apache.org/jira/browse/SPARK-33043",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9524#issuecomment-701717243:52,depend,dependencies,52,https://hail.is,https://github.com/hail-is/hail/pull/9524#issuecomment-701717243,1,['depend'],['dependencies']
Integrability,Two messages fixed.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7767:4,message,messages,4,https://hail.is,https://github.com/hail-is/hail/pull/7767,1,['message'],['messages']
Integrability,"UI won't let me respond about the tests comment. I removed the api1.tests.py file, but left the api1 code because it's still depended on and we should extract that separately.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2816#issuecomment-360953858:125,depend,depended,125,https://hail.is,https://github.com/hail-is/hail/pull/2816#issuecomment-360953858,1,['depend'],['depended']
Integrability,"Uh-oh, so this built on a previous PR that @tpoterba was reviewing: https://github.com/hail-is/hail/pull/2302. I was afraid this was going to happen at some point. @tpoterba I'd still like your input on the OrderedRDD2 stuff (and any comments you had on the region value stuff) and I will address it with a new round of changes. I'm going to close that pull request but you can still comment there. In the future we should use stacked branches for inter-dependent PRs. See my comment on that PR for a link to a description. I'm going to try to PR the remaining OrderedRDD2 stuff that way.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2308#issuecomment-337927797:454,depend,dependent,454,https://hail.is,https://github.com/hail-is/hail/pull/2308#issuecomment-337927797,1,['depend'],['dependent']
Integrability,"Unclear what changed. GKE release history doesn't specify when Docker was upgraded to 19.03.1. We think Notebook worked in the past. Anyway, the fix is to never specify ""m"" (lowercase m) as the size modifier for a Kubernetes memory limit. Docker silently drops the ""m"" which means the limit is set to a few thousand bytes (e.g. 3500m becomes 3.5kB). The resulting error message is this:; ```; Failed create pod sandbox: rpc error: code = Unknown desc = failed to start sandbox container for pod ""notebook-worker-9l2wq"": Error response from daemon: OCI runtime create failed: container_linux.go:345: starting container process caused ""process_linux.go:303: getting the final child's pid from pipe caused \""read init-p: connection reset by peer\"""": unknown; ```; Which you can see in `kubectl describe pod`:; ```; Warning FailedCreatePodSandBox 73s (x13 over 85s) kubelet, gke-vdc-non-preemptible-pool-5-80798769-kp8n Failed create pod sandbox: rpc error: code = Unknown desc = failed to start sandbox container for pod ""notebook-worker-9l2wq"": Error response from daemon: OCI runtime create failed: container_linux.go:345: starting container process caused ""process_linux.go:303: getting the final child's pid from pipe caused \""read init-p: connection reset by peer\"""": unknown; Normal SandboxChanged 73s (x12 over 84s) kubelet, gke-vdc-non-preemptible-pool-5-80798769-kp8n Pod sandbox changed, it will be killed and re-created.; ```. We narrowed down to this error by trial and error of removing and adding lines of the YAML file. https://github.com/kubernetes/kubernetes/issues/79950. The fix is to use `Mi` not `m`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8165:370,message,message,370,https://hail.is,https://github.com/hail-is/hail/issues/8165,1,['message'],['message']
Integrability,"Unclear what's wrong, but this k8s container got stuck in container creating. ```; (base) dking@wmb16-359 # k describe pods -n test job-4-7xqf9; Name: job-4-7xqf9; Namespace: test; Node: gke-vdc-non-preemptible-pool-0106a51b-zsmg/10.128.0.5; Start Time: Thu, 17 Jan 2019 16:31:42 -0500; Labels: app=batch-job; hail.is/batch-instance=21706daa42404f5489a53bb5ad22a068; uuid=b4fbcb0d4e2045e8bc4aea6b012ffad6; Annotations: <none>; Status: Pending; IP: ; Containers:; default:; Container ID: ; Image: alpine; Image ID: ; Port: <none>; Host Port: <none>; Command:; sleep; 1; State: Waiting; Reason: ContainerCreating; Ready: False; Restart Count: 0; Environment:; POD_IP: (v1:status.podIP); POD_NAME: job-4-7xqf9 (v1:metadata.name); Mounts:; /var/run/secrets/kubernetes.io/serviceaccount from default-token-85kwr (ro); Conditions:; Type Status; Initialized True ; Ready False ; PodScheduled True ; Volumes:; default-token-85kwr:; Type: Secret (a volume populated by a Secret); SecretName: default-token-85kwr; Optional: false; QoS Class: BestEffort; Node-Selectors: <none>; Tolerations: node.kubernetes.io/not-ready:NoExecute for 300s; node.kubernetes.io/unreachable:NoExecute for 300s; Events:; Type Reason Age From Message; ---- ------ ---- ---- -------; Normal SandboxChanged 11m (x171 over 1h) kubelet, gke-vdc-non-preemptible-pool-0106a51b-zsmg Pod sandbox changed, it will be killed and re-created.; Warning FailedSync 6m kubelet, gke-vdc-non-preemptible-pool-0106a51b-zsmg error determining status: rpc error: code = Unknown desc = Error: No such container: 741291eb67b9026c0fe4ac52d1f5a553ea420f07f5a7d7368c9dba93e707a079; Warning FailedCreatePodSandBox 1m (x203 over 1h) kubelet, gke-vdc-non-preemptible-pool-0106a51b-zsmg Failed create pod sandbox: rpc error: code = Unknown desc = NetworkPlugin kubenet failed to set up pod ""job-4-7xqf9_test"" network: Error adding container to network: failed to allocate for range 0: no IP addresses available in range set: 10.32.3.1-10.32.3.254; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5168:1211,Message,Message,1211,https://hail.is,https://github.com/hail-is/hail/issues/5168,1,['Message'],['Message']
Integrability,Unkey the cols seems wrong. It makes the contract of `entries()` much more complicated. I guess a warning or error that makes the user decide between manually unkeying the columns or shuffling would be best? (I guess that means implementing a shuffling option for small data.),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4646#issuecomment-433473971:41,contract,contract,41,https://hail.is,https://github.com/hail-is/hail/issues/4646#issuecomment-433473971,1,['contract'],['contract']
Integrability,"Update Release Scripts (<a href=""https://redirect.github.com/jupyter/jupyter_core/issues/396"">#396</a>)</li>; <li><a href=""https://github.com/jupyter/jupyter_core/commit/1c5fa3720d3d6da1b5188072c24bac095082903b""><code>1c5fa37</code></a> Enforce pytest 7 (<a href=""https://redirect.github.com/jupyter/jupyter_core/issues/393"">#393</a>)</li>; <li><a href=""https://github.com/jupyter/jupyter_core/commit/dfed905e5ce3550e1bdae60e9e9242f0d0d2faae""><code>dfed905</code></a> chore: update pre-commit hooks (<a href=""https://redirect.github.com/jupyter/jupyter_core/issues/392"">#392</a>)</li>; <li>See full diff in <a href=""https://github.com/jupyter/jupyter_core/compare/v5.7.1...v5.7.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jupyter-core&package-manager=pip&previous-version=5.7.1&new-version=5.7.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14484:4513,depend,dependabot-security-updates,4513,https://hail.is,https://github.com/hail-is/hail/pull/14484,1,['depend'],['dependabot-security-updates']
Integrability,Update build.sbt dependencies,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8475:17,depend,dependencies,17,https://hail.is,https://github.com/hail-is/hail/pull/8475,1,['depend'],['dependencies']
Integrability,"Update fixtures.rst w/ finalizer order</li>; <li><a href=""https://github.com/pytest-dev/pytest/commit/d0b53d6ba7b41dcb200a35af5f5733f591cd929b""><code>d0b53d6</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/10221"">#10221</a> from pytest-dev/backport-10217-to-7.1.x</li>; <li>Additional commits viewable in <a href=""https://github.com/pytest-dev/pytest/compare/7.1.1...7.1.3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest&package-manager=pip&previous-version=7.1.1&new-version=7.1.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12187:6445,depend,dependabot-automerge-start,6445,https://hail.is,https://github.com/hail-is/hail/pull/12187,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"Update the following docs:; annotatevariants_expr.md; HailExpressionLanguage.md; splitmulti.md, these lines:. ```; 108 filtervariants expr -c 'va.info.AC[va.aIndex] < 10' --remove; 118 annotatevariants expr -c 'va.info.AC = va.info.AC[va.aIndex]'; ```. Update error message in AST. ```; 1905 Hint: For accessing `A'-numbered info fields in split variants, `va.info.field[va.aIndex]' is correct"""""".stripMargin); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/663#issuecomment-242074915:266,message,message,266,https://hail.is,https://github.com/hail-is/hail/pull/663#issuecomment-242074915,1,['message'],['message']
Integrability,"Updated the first comment to be the merge commit comment. Preserving my original comment here:. The output is garbage, but at least it has useful information. Output for tests now look like this:. ```; io/test/test_batch.py::Test::test_batch ; -------------------------------- live log setup --------------------------------; 2020-01-29T21:03:40 INFO test.conftest conftest.py:8:log_before_after starting test; -------------------------------- live log call ---------------------------------; 2020-01-29T21:03:40 INFO batch_client.aioclient aioclient.py:481:submit created batch 159; 2020-01-29T21:03:40 INFO batch_client.aioclient aioclient.py:517:submit closed batch 159; PASSED; ------------------------------ live log teardown -------------------------------; 2020-01-29T21:04:08 INFO test.conftest conftest.py:10:log_before_after ending test; ```. @danking this backs out your batch client warning log change. It couldn't have done what you want, since it set the batch client log to WARN, which was only used to make info logs, and override the root logger which can't be what you want. Separately, we should however give users advice about how to set the logger properly for their scripts to get the appropriate log messages (possibly with a help function).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7990#issuecomment-579974984:1223,message,messages,1223,https://hail.is,https://github.com/hail-is/hail/pull/7990#issuecomment-579974984,1,['message'],['messages']
Integrability,"Updates the requirements on [astroid](https://github.com/PyCQA/astroid) to permit the latest version.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/PyCQA/astroid/blob/main/ChangeLog"">astroid's changelog</a>.</em></p>; <blockquote>; <h1>What's New in astroid 2.10.0?</h1>; <p>Release date: 2022-02-27</p>; <ul>; <li>; <p>Fixed inference of <code>self</code> in binary operations in which <code>self</code>; is part of a list or tuple.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/4826"">PyCQA/pylint#4826</a></p>; </li>; <li>; <p>Fixed builtin inference on <code>property</code> calls not calling the <code>postinit</code> of the new node, which; resulted in instance arguments missing on these nodes.</p>; </li>; <li>; <p>Fixed a crash on <code>Super.getattr</code> when the attribute was previously uninferable due to a cache; limit size. This limit can be hit when the inheritance pattern of a class (and therefore of the; <code>__init__</code> attribute) is very large.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5679"">PyCQA/pylint#5679</a></p>; </li>; <li>; <p>Inlcude names of keyword-only arguments in <code>astroid.scoped_nodes.Lambda.argnames</code>.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5771"">PyCQA/pylint#5771</a></p>; </li>; <li>; <p>Fixed a crash inferring on a <code>NewType</code> named with an f-string.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5770"">PyCQA/pylint#5770</a></p>; </li>; <li>; <p>Add support for <a href=""https://github.com/python-attrs/attrs/releases/tag/21.3.0"">attrs v21.3.0</a> which; added a new <code>attrs</code> module alongside the existing <code>attr</code>.</p>; <p>Closes <a href=""https://github-redirect.dependabot.com/PyCQA/astroid/issues/1330"">#1330</a></p>; </li>; <li>; <p>Use the <code>end_lineno</code> attribute for the <code>NodeNG.tolineno</",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11463:526,depend,dependabot,526,https://hail.is,https://github.com/hail-is/hail/pull/11463,2,['depend'],['dependabot']
Integrability,"Updates the requirements on [bokeh](https://github.com/bokeh/bokeh) to permit the latest version.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/bokeh/bokeh/blob/branch-3.0/CHANGELOG"">bokeh's changelog</a>.</em></p>; <blockquote>; <h2>2021-11-22 2.4.2:</h2>; <ul>; <li>; <p>bugfixes:</p>; <ul>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11422"">#11422</a> [component: bokehjs] [BUG] <code>DeserializationError</code> when trying to change a <code>DataTable</code>'s columns with <code>CustomJS</code></li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11800"">#11800</a> [BUG] DeserializationError when plotting graphs</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11801"">#11801</a> [component: bokehjs] [BUG] Log axis figures don't render if they're not visible at start</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11807"">#11807</a> [component: bokehjs] Work around issues with initialization-time change discovery</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11808"">#11808</a> Don't unnecessarily update node/edge renderers in graphs</li>; </ul>; </li>; <li>; <p>tasks:</p>; <ul>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11613"">#11613</a> [component: docs] Cache-bust custom.css for docs</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11791"">#11791</a> [component: docs] Update issue template to use new GH forms</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11761"">#11761</a> [component: docs] Clarify use of color in first steps guide</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11762"">#11762</a> [component: docs] Replace slash with backslash for PS commands</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11767"">#11767</a> [component: bokehjs] Upgr",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11540:375,depend,dependabot,375,https://hail.is,https://github.com/hail-is/hail/pull/11540,4,['depend'],['dependabot']
Integrability,"Updates the requirements on [bokeh](https://github.com/bokeh/bokeh) to permit the latest version.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/bokeh/bokeh/blob/branch-3.1/docs/CHANGELOG"">bokeh's changelog</a>.</em></p>; <blockquote>; <h2>2022-11-03 3.0.1:</h2>; <ul>; <li>; <p>bugfixes:</p>; <ul>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/12537"">#12537</a> [BUG] ImportError: cannot import name 'NotRequired' from 'typing_extensions'</li>; </ul>; </li>; <li>; <p>tasks:</p>; <ul>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/12528"">#12528</a> [component: docs] Update tutorial link</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/12533"">#12533</a> [component: examples] [BUG] Units in blackbody example should be upright</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/12525"">#12525</a> [component: examples] Added metadata to bokeh\examples\plotting\checkout_form.py</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/12539"">#12539</a> [component: build] Remove runtime dependency on typing_extensions</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/12546"">#12546</a> [component: examples] Apply blackbody example label edits (<a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/12534"">#12534</a>) to the ts example as well</li>; </ul>; </li>; </ul>; <h2>2022-10-30 3.0:</h2>; <ul>; <li>bugfixes:; <ul>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/5046"">#5046</a> Webgl problem in stream app with multiple glyphs</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/6669"">#6669</a> [component: bokehjs] BoxAnnotation does not appear to handle formal NumberSpec</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/8168"">#8168</a> [component: bokehjs] Strange behavior with BoxSelectTool when cli",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12454:380,depend,dependabot,380,https://hail.is,https://github.com/hail-is/hail/pull/12454,4,['depend'],['dependabot']
Integrability,"Updates the requirements on [gcsfs](https://github.com/fsspec/gcsfs) to permit the latest version.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/fsspec/gcsfs/commit/cf2b3e4bfa10bfcbda03830986beb8cc56ffdcb7""><code>cf2b3e4</code></a> changelog for release</li>; <li><a href=""https://github.com/fsspec/gcsfs/commit/185d09c87edf8f4a12313685d761b2ab7a1e96c0""><code>185d09c</code></a> fix _list_buckets with disabled caching (<a href=""https://github-redirect.dependabot.com/fsspec/gcsfs/issues/449"">#449</a>)</li>; <li><a href=""https://github.com/fsspec/gcsfs/commit/6ce46c2abcb856217d204812ae8bd33f3dfc21e7""><code>6ce46c2</code></a> gcsfs: drop python 3.6 (<a href=""https://github-redirect.dependabot.com/fsspec/gcsfs/issues/445"">#445</a>)</li>; <li><a href=""https://github.com/fsspec/gcsfs/commit/fd67c7d1b6ca9db83a0deadd1557470c37b0836a""><code>fd67c7d</code></a> Update changelog, deps (<a href=""https://github-redirect.dependabot.com/fsspec/gcsfs/issues/443"">#443</a>)</li>; <li><a href=""https://github.com/fsspec/gcsfs/commit/2dc256b7c0df075d44f8d4a0f3400c1b926166ee""><code>2dc256b</code></a> Make tarball creation more reproducible (<a href=""https://github-redirect.dependabot.com/fsspec/gcsfs/issues/442"">#442</a>)</li>; <li><a href=""https://github.com/fsspec/gcsfs/commit/85e2ee2abfa429f3c10cc08dcda8ed30db8ab3b5""><code>85e2ee2</code></a> update deps, changelog (<a href=""https://github-redirect.dependabot.com/fsspec/gcsfs/issues/438"">#438</a>)</li>; <li><a href=""https://github.com/fsspec/gcsfs/commit/cbf751e83785d8b7e5d7ea879e5534e32d633ae0""><code>cbf751e</code></a> Don't touch cache on find with prefix (<a href=""https://github-redirect.dependabot.com/fsspec/gcsfs/issues/437"">#437</a>)</li>; <li><a href=""https://github.com/fsspec/gcsfs/commit/7b5aee98724c7ca44a73524bf448089ac4b79b75""><code>7b5aee9</code></a> for release (<a href=""https://github-redirect.dependabot.com/fsspec/gcsfs/issues/435"">#435</a>)</li>; <li><a href=""https://github.com/fsspec/gcsfs/co",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11575:485,depend,dependabot,485,https://hail.is,https://github.com/hail-is/hail/pull/11575,3,['depend'],['dependabot']
Integrability,"Updates the requirements on [google-cloud-storage](https://github.com/googleapis/python-storage) to permit the latest version.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/googleapis/python-storage/releases"">google-cloud-storage's releases</a>.</em></p>; <blockquote>; <h2>v2.1.0</h2>; <h2><a href=""https://github.com/googleapis/python-storage/compare/v2.0.0...v2.1.0"">2.1.0</a> (2022-01-19)</h2>; <h3>Features</h3>; <ul>; <li>add turbo replication support and samples (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/622"">#622</a>) (<a href=""https://github.com/googleapis/python-storage/commit/4dafc815470480ce9de7f0357e331d3fbd0ae9b7"">4dafc81</a>)</li>; <li>avoid authentication with storage emulator (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/679"">#679</a>) (<a href=""https://github.com/googleapis/python-storage/commit/8789afaaa1b2bd6f03fae72e3d87ce004ec10129"">8789afa</a>)</li>; <li>remove python 3.6 support (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/689"">#689</a>) (<a href=""https://github.com/googleapis/python-storage/commit/8aa4130ee068a1922161c8ca54a53a4a51d65ce0"">8aa4130</a>)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/googleapis/python-storage/blob/main/CHANGELOG.md"">google-cloud-storage's changelog</a>.</em></p>; <blockquote>; <h2><a href=""https://github.com/googleapis/python-storage/compare/v2.0.0...v2.1.0"">2.1.0</a> (2022-01-19)</h2>; <h3>Features</h3>; <ul>; <li>add turbo replication support and samples (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/622"">#622</a>) (<a href=""https://github.com/googleapis/python-storage/commit/4dafc815470480ce9de7f0357e331d3fbd0ae9b7"">4dafc81</a>)</li>; <li>avoid authentication with storage emulator (<a href=""https://github-redirect.dependabot.com/googleapis/p",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11520:552,depend,dependabot,552,https://hail.is,https://github.com/hail-is/hail/pull/11520,2,['depend'],['dependabot']
Integrability,"Updates the requirements on [google-cloud-storage](https://github.com/googleapis/python-storage) to permit the latest version.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/googleapis/python-storage/releases"">google-cloud-storage's releases</a>.</em></p>; <blockquote>; <h2>v2.2.0</h2>; <h2><a href=""https://github.com/googleapis/python-storage/compare/v2.1.0...v2.2.0"">2.2.0</a> (2022-03-14)</h2>; <h3>Features</h3>; <ul>; <li>allow no project in client methods using storage emulator (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/703"">#703</a>) (<a href=""https://github.com/googleapis/python-storage/commit/bcde0ec619d7d303892bcc0863b7f977c79f7649"">bcde0ec</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>add user agent in python-storage when calling resumable media (<a href=""https://github.com/googleapis/python-storage/commit/c7bf615909a04f3bab3efb1047a9f4ba659bba19"">c7bf615</a>)</li>; <li><strong>deps:</strong> require google-api-core&gt;=1.31.5, &gt;=2.3.2 (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/722"">#722</a>) (<a href=""https://github.com/googleapis/python-storage/commit/e9aab389f868799d4425133954bad4f1cbb85786"">e9aab38</a>)</li>; <li>Fix BlobReader handling of interleaved reads and seeks (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/721"">#721</a>) (<a href=""https://github.com/googleapis/python-storage/commit/5d1cfd2050321481a3bc4acbe80537ea666506fa"">5d1cfd2</a>)</li>; <li>retry client side requests timeout (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/727"">#727</a>) (<a href=""https://github.com/googleapis/python-storage/commit/e0b3b354d51e4be7c563d7f2f628a7139df842c0"">e0b3b35</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>fixed download_blob_to_file example (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/704"">#704</a>) (<a href=""https://g",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11578:568,depend,dependabot,568,https://hail.is,https://github.com/hail-is/hail/pull/11578,1,['depend'],['dependabot']
Integrability,"Updates the requirements on [importlib-metadata](https://github.com/python/importlib_metadata) to permit the latest version.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python/importlib_metadata/blob/main/CHANGES.rst"">importlib-metadata's changelog</a>.</em></p>; <blockquote>; <h1>v4.11.2</h1>; <ul>; <li><a href=""https://github-redirect.dependabot.com/python/importlib_metadata/issues/369"">#369</a>: Fixed bug where <code>EntryPoint.extras</code> was returning; match objects and not the extras strings.</li>; </ul>; <h1>v4.11.1</h1>; <ul>; <li><a href=""https://github-redirect.dependabot.com/python/importlib_metadata/issues/367"">#367</a>: In <code>Distribution.requires</code> for egg-info, if <code>requires.txt</code>; is empty, return an empty list.</li>; </ul>; <h1>v4.11.0</h1>; <ul>; <li>bpo-46246: Added <code>__slots__</code> to <code>EntryPoints</code>.</li>; </ul>; <h1>v4.10.2</h1>; <ul>; <li><a href=""https://github-redirect.dependabot.com/python/importlib_metadata/issues/365"">#365</a> and bpo-46546: Avoid leaking <code>method_name</code> in; <code>DeprecatedList</code>.</li>; </ul>; <h1>v4.10.1</h1>; <h1>v2.1.3</h1>; <ul>; <li><a href=""https://github-redirect.dependabot.com/python/importlib_metadata/issues/361"">#361</a>: Avoid potential REDoS in <code>EntryPoint.pattern</code>.</li>; </ul>; <h1>v4.10.0</h1>; <ul>; <li><a href=""https://github-redirect.dependabot.com/python/importlib_metadata/issues/354"">#354</a>: Removed <code>Distribution._local</code> factory. This; functionality was created as a demonstration of the; possible implementation. Now, the; <code>pep517 &lt;https://pypi.org/project/pep517&gt;</code>_ package; provides this functionality directly through; <code>pep517.meta.load &lt;https://github.com/pypa/pep517/blob/a942316305395f8f757f210e2b16f738af73f8b8/pep517/meta.py#L63-L73&gt;</code>_.</li>; </ul>; <h1>v4.9.0</h1>; <ul>; <li>Require Python 3.7 or later.</li>; </ul>; <h1>v4.8.3</h1>; <ul>; <li><a href",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11525:385,depend,dependabot,385,https://hail.is,https://github.com/hail-is/hail/pull/11525,3,['depend'],['dependabot']
Integrability,"Updates the requirements on [importlib-metadata](https://github.com/python/importlib_metadata) to permit the latest version.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python/importlib_metadata/blob/main/CHANGES.rst"">importlib-metadata's changelog</a>.</em></p>; <blockquote>; <h1>v4.11.3</h1>; <ul>; <li><a href=""https://github-redirect.dependabot.com/python/importlib_metadata/issues/372"">#372</a>: Removed cast of path items in FastPath, not needed.</li>; </ul>; <h1>v4.11.2</h1>; <ul>; <li><a href=""https://github-redirect.dependabot.com/python/importlib_metadata/issues/369"">#369</a>: Fixed bug where <code>EntryPoint.extras</code> was returning; match objects and not the extras strings.</li>; </ul>; <h1>v4.11.1</h1>; <ul>; <li><a href=""https://github-redirect.dependabot.com/python/importlib_metadata/issues/367"">#367</a>: In <code>Distribution.requires</code> for egg-info, if <code>requires.txt</code>; is empty, return an empty list.</li>; </ul>; <h1>v4.11.0</h1>; <ul>; <li>bpo-46246: Added <code>__slots__</code> to <code>EntryPoints</code>.</li>; </ul>; <h1>v4.10.2</h1>; <ul>; <li><a href=""https://github-redirect.dependabot.com/python/importlib_metadata/issues/365"">#365</a> and bpo-46546: Avoid leaking <code>method_name</code> in; <code>DeprecatedList</code>.</li>; </ul>; <h1>v4.10.1</h1>; <h1>v2.1.3</h1>; <ul>; <li><a href=""https://github-redirect.dependabot.com/python/importlib_metadata/issues/361"">#361</a>: Avoid potential REDoS in <code>EntryPoint.pattern</code>.</li>; </ul>; <h1>v4.10.0</h1>; <ul>; <li><a href=""https://github-redirect.dependabot.com/python/importlib_metadata/issues/354"">#354</a>: Removed <code>Distribution._local</code> factory. This; functionality was created as a demonstration of the; possible implementation. Now, the; <code>pep517 &lt;https://pypi.org/project/pep517&gt;</code>_ package; provides this functionality directly through; <code>pep517.meta.load &lt;https://github.com/pypa/pep517/blob/a942",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11596:385,depend,dependabot,385,https://hail.is,https://github.com/hail-is/hail/pull/11596,3,['depend'],['dependabot']
Integrability,"Updates the requirements on [janus](https://github.com/aio-libs/janus) to permit the latest version.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/aio-libs/janus/releases"">janus's releases</a>.</em></p>; <blockquote>; <h2>janus 1.0.0 release</h2>; <ul>; <li>Dropped Python 3.6 support</li>; <li>Janus is marked as stable, no API changes was made for years</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/aio-libs/janus/blob/master/CHANGES.rst"">janus's changelog</a>.</em></p>; <blockquote>; <h2>1.0.0 (2021-12-17)</h2>; <ul>; <li>Drop Python 3.6 support</li>; </ul>; <h2>0.7.0 (2021-11-24)</h2>; <ul>; <li>Add SyncQueue and AsyncQueue Protocols to provide type hints for sync and async queues <a href=""https://github-redirect.dependabot.com/aio-libs/janus/issues/374"">#374</a></li>; </ul>; <h2>0.6.2 (2021-10-24)</h2>; <ul>; <li>Fix Python 3.10 compatibility <a href=""https://github-redirect.dependabot.com/aio-libs/janus/issues/358"">#358</a></li>; </ul>; <h2>0.6.1 (2020-10-26)</h2>; <ul>; <li>; <p>Raise RuntimeError on queue.join() after queue closing. <a href=""https://github-redirect.dependabot.com/aio-libs/janus/issues/295"">#295</a></p>; </li>; <li>; <p>Replace <code>timeout</code> type from <code>Optional[int]</code> to <code>Optional[float]</code> <a href=""https://github-redirect.dependabot.com/aio-libs/janus/issues/267"">#267</a></p>; </li>; </ul>; <h2>0.6.0 (2020-10-10)</h2>; <ul>; <li>; <p>Drop Python 3.5, the minimal supported version is Python 3.6</p>; </li>; <li>; <p>Support Python 3.9</p>; </li>; <li>; <p>Refomat with <code>black</code></p>; </li>; </ul>; <h2>0.5.0 (2020-04-23)</h2>; <ul>; <li>Remove explicit loop arguments and forbid creating queues outside event loops <a href=""https://github-redirect.dependabot.com/aio-libs/janus/issues/246"">#246</a></li>; </ul>; <h2>0.4.0 (2018-07-28)</h2>; <ul>; <li>; <p>Add <code>py.typed</code> macro <a ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11466:764,Protocol,Protocols,764,https://hail.is,https://github.com/hail-is/hail/pull/11466,2,"['Protocol', 'depend']","['Protocols', 'dependabot']"
Integrability,"Updates to ctt, chisq, fet, hwe docs, retaining interface",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3875:48,interface,interface,48,https://hail.is,https://github.com/hail-is/hail/pull/3875,1,['interface'],['interface']
Integrability,"Upgrade dependencies in <code>requirements.txt</code> to latest versions</li>; <li>Remove extraneous transitive dependencies</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/docker/docker-py/commit/30022984f6445fbc322cbe97bb99aab1ddb1e4fd""><code>3002298</code></a> socket: handle npipe close on Windows (<a href=""https://github-redirect.dependabot.com/docker/docker-py/issues/3056"">#3056</a>)</li>; <li><a href=""https://github.com/docker/docker-py/commit/bc0a5fbacd7617fd338d121adca61600fc70d221""><code>bc0a5fb</code></a> test: use anonymous volume for prune (<a href=""https://github-redirect.dependabot.com/docker/docker-py/issues/3051"">#3051</a>)</li>; <li><a href=""https://github.com/docker/docker-py/commit/923e067dddc3d4b86e4e620a99fcdcdafbd17a98""><code>923e067</code></a> api: add support for floats to docker logs params since / until (<a href=""https://github-redirect.dependabot.com/docker/docker-py/issues/3031"">#3031</a>)</li>; <li><a href=""https://github.com/docker/docker-py/commit/1c27ec1f0c34f6b9510f5caadada5fd8ecc430d9""><code>1c27ec1</code></a> ci: use latest stable syntax for Dockerfiles (<a href=""https://github-redirect.dependabot.com/docker/docker-py/issues/3035"">#3035</a>)</li>; <li><a href=""https://github.com/docker/docker-py/commit/2494d63f36eba0e1811f05e7b2136f8b30f7cdb7""><code>2494d63</code></a> docs: install package in ReadTheDocs build (<a href=""https://github-redirect.dependabot.com/docker/docker-py/issues/3032"">#3032</a>)</li>; <li><a href=""https://github.com/docker/docker-py/commit/e901eac7a8c5f29c7720eafb9f58c8356cca2324""><code>e901eac</code></a> test: add additional tests for cgroupns option (<a href=""https://github-redirect.dependabot.com/docker/docker-py/issues/3024"">#3024</a>)</li>; <li><a href=""https://github.com/docker/docker-py/commit/fc86ab0d8501b10dbe9be203625e9002cf3922ed""><code>fc86ab0</code></a> swarm: add support for DataPa",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12475:5268,depend,dependabot,5268,https://hail.is,https://github.com/hail-is/hail/pull/12475,1,['depend'],['dependabot']
Integrability,Use WebSockets to send create_job message from batch-driver to workers,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11513:34,message,message,34,https://hail.is,https://github.com/hail-is/hail/pull/11513,1,['message'],['message']
Integrability,"Use in filterSamples. I might stop here for the moment. This seems about as good for the interface as one could hope modulo and easier way to write the IR. I'll come back to `InsertStruct` once physical types are in. @catoverdrive FYI this might be a useful idiom when adding the IR to key tables, etc.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2573:89,interface,interface,89,https://hail.is,https://github.com/hail-is/hail/pull/2573,1,['interface'],['interface']
Integrability,Use interfaces in method signatures,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5340:4,interface,interfaces,4,https://hail.is,https://github.com/hail-is/hail/issues/5340,1,['interface'],['interfaces']
Integrability,Use our `AccessLogger` in `router-resolver` too.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9911:27,rout,router-resolver,27,https://hail.is,https://github.com/hail-is/hail/pull/9911,1,['rout'],['router-resolver']
Integrability,Use set_message in CI and Batch to give users feedback after performing POST operations. I added set_message while working on notebook. Any message set will show up at the top of the next page loaded styled according to the message type.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7160:140,message,message,140,https://hail.is,https://github.com/hail-is/hail/pull/7160,2,['message'],['message']
Integrability,"Use web_common in ci, batch and scorecard for common design (e.g. header) and styling. The styling is clearly not ideal, this is intended to be a work in progress. Hand-deployed to checked batch and scorecard UI are still workable. Not easy to do with CI. Converted scorecard to aiohttp and gidgethub. Will remove dependencies in separate PR so I don't want to wait for all the images to rebuild. Can't quite get rid of Flask yet as it is used in callback tests.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7064:314,depend,dependencies,314,https://hail.is,https://github.com/hail-is/hail/pull/7064,1,['depend'],['dependencies']
Integrability,"User jobs should not have access to our internal network. This enforces that; requirement. Every job spec now has a `network` argument which can be unset,; null, `public`, or `private`. If `private`, the job has access to our internal; network. Both unset and null default to the `public` network. Only the ci user is permitted to create non-`public` network jobs. I define the; networks using Docker and `iptables`. First I create two distinct docker; networks `public` and `private`. These correspond to virtual Ethernet bridges. A; virtual bridge may be connected to many virtual interfaces. Each docker; container is given a virtual interface. The `public` virtual bridge is severely limited. All traffic originating from; the public bridge destined for any of the [three private; subnets](https://en.wikipedia.org/wiki/Private_network#Private_IPv4_addresses); is dropped. Perhaps most importantly, packets destined for other containers on the same host; are dropped. I tested this manually using a Linux VM with Docker. testing it in; the wild is a little tricky! I have no way to ensure a pair of containers end up; on the same VM in a test environment. I did add tests for connecting to `localhost`, `127.0.0.1`, and one's own; IP. Note that one's own IP is the IP of a container, so you might naively think; it should be dropped by the aforementioned rules. However, packets destined for; the container's own IP are never sent to the virtual bridge, the container knows; its own IP and simply routes the packets to itself. I found [this website](https://rancher.com/learning-paths/introduction-to-container-networking/) helpful for understanding Docker networking.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9380:523,bridg,bridges,523,https://hail.is,https://github.com/hail-is/hail/pull/9380,8,"['bridg', 'interface', 'rout']","['bridge', 'bridges', 'interface', 'interfaces', 'routes']"
Integrability,Users want to be able to use elasticsearch 7. This adds an argument to make so that we pull in a different version of `elasticsearch-spark-20` depending on what they specify for `ELASTIC_MAJOR_VERSION`.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9696:143,depend,depending,143,https://hail.is,https://github.com/hail-is/hail/pull/9696,1,['depend'],['depending']
Integrability,"VMs or use a single multi-threaded JVM, we'll need to ensure the top-level; ClassLoader *does not have Hail on its classpath*. I looked briefly at this approach and found it; more work than the current approach. ---. My apologies for eliminating JVMProcess in this PR. It's an unrelated change which facilitated my; understanding of worker.py. I essentially inlined JVMProcess into JVMJob and eliminated any duplicative; code. ---. After making this change I restored the tests. Some tests had bitrotted. In the process of fixing; those tests, I found a few other bugs. Fixing these lower-level bugs unlocked a number of new; tests. One test (which was added since the service tests were removed) had to be marked as failing. Some; Hail operations rely on writing to the local file system. Implementing that properly in the Query; Worker will take some thought. Here are the bugs I fixed:. 1. Correct the error message raised when tests are run in a non-main thread (we look for this; message and start an event loop for Hail's async code because asyncio refuses to start an event; loop in a non-main thread). 2. Use a `SafeRow` to copy the globals data out of a Region and into durable, GC'ed objects. 3. Re-enable serialization of GoogleStorageFS (including its private key, which we really shouldn't; do; Tim is working on it), which was broken (presumably) when we changed Scala versions. The; `var` modifier ensures the name is compiled as a JVM field. 4. Correctly convert from a `Byte` to an `Int`. By default `Byte` to `Int` conversion (which is done; automatically when you return a `Byte` from a function whose return type is `Int`) is; sign-preserving. That means that the byte `0000 1111` is converted to the `Int` 15 and the byte; `1000 1111` is converted to the `Int` -113. The contract of; [`InputStream.read`](https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html#read--); is to return the unsigned integeral value of the next `Byte` or `-1` if we've reached the end of; t",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10314:1848,message,message,1848,https://hail.is,https://github.com/hail-is/hail/pull/10314,2,['message'],['message']
Integrability,VSM interface is a bit mangy,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1067:4,interface,interface,4,https://hail.is,https://github.com/hail-is/hail/issues/1067,1,['interface'],['interface']
Integrability,Verify Field index is the index within the TStruct.; field => column in keytable. This was an old rename but looks like; some things got missed.; Simplify KT.select interface in Scala (and mathc Python).,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2187:165,interface,interface,165,https://hail.is,https://github.com/hail-is/hail/pull/2187,1,['interface'],['interface']
Integrability,Very good point. I moved the check to be on the `dependsOn` array of names rather than on the deps array of steps,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8829#issuecomment-631652614:49,depend,dependsOn,49,https://hail.is,https://github.com/hail-is/hail/pull/8829#issuecomment-631652614,1,['depend'],['dependsOn']
Integrability,Very stringent python dependencies,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7299:22,depend,dependencies,22,https://hail.is,https://github.com/hail-is/hail/issues/7299,1,['depend'],['dependencies']
Integrability,"VolumeSupportFSGroup</code> feature gate must be enabled to allow this field to be used. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92001"">kubernetes/kubernetes#92001</a>, <a href=""https://github.com/huffmanca""><code>@​huffmanca</code></a>) [SIG API Machinery, CLI and Storage]</li>; <li>Added pod version skew strategy for seccomp profile to synchronize the deprecated annotations with the new API Server fields. Please see the corresponding section <a href=""https://github.com/kubernetes/enhancements/blob/master/keps/sig-node/135-seccomp/README.md#version-skew-strategy"">in the KEP</a> for more detailed explanations. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91408"">kubernetes/kubernetes#91408</a>, <a href=""https://github.com/saschagrunert""><code>@​saschagrunert</code></a>) [SIG Apps, Auth, CLI and Node]</li>; <li>Adds the ability to disable Accelerator/GPU metrics collected by Kubelet (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91930"">kubernetes/kubernetes#91930</a>, <a href=""https://github.com/RenaudWasTaken""><code>@​RenaudWasTaken</code></a>) [SIG Node]</li>; <li>Admission webhooks can now return warning messages that are surfaced to API clients, using the <code>.response.warnings</code> field in the admission review response. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92667"">kubernetes/kubernetes#92667</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG API Machinery and Testing]</li>; <li>CertificateSigningRequest API conditions were updated:; <ul>; <li>a <code>status</code> field was added; this field defaults to <code>True</code>, and may only be set to <code>True</code> for <code>Approved</code>, <code>Denied</code>, and <code>Failed</code> conditions</li>; <li>a <code>lastTransitionTime</code> field was added</li>; <li>a <code>Failed</code> condition type was added to allow signers to indicate permanent failure",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11462:3479,depend,dependabot,3479,https://hail.is,https://github.com/hail-is/hail/pull/11462,1,['depend'],['dependabot']
Integrability,WGSA integration,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/174:5,integrat,integration,5,https://hail.is,https://github.com/hail-is/hail/issues/174,1,['integrat'],['integration']
Integrability,WIP. Need to figure out addLiteral for DependentEmitFunction.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8444:39,Depend,DependentEmitFunction,39,https://hail.is,https://github.com/hail-is/hail/pull/8444,1,['Depend'],['DependentEmitFunction']
Integrability,WTF - I'm getting this error in a PR - https://ci.hail.is/jobs/30344/log. also see this message at the bottom: . 2019-05-30 19:47:48 Hail: WARN: struct{idx: int32} has no field row_idx at <root>.<array>.end for value JInt(10),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6223#issuecomment-497480960:88,message,message,88,https://hail.is,https://github.com/hail-is/hail/issues/6223#issuecomment-497480960,1,['message'],['message']
Integrability,"We *should* be handling this error already - there's code that matches this exact message here: https://github.com/hail-is/hail/blob/8362afaefa8829e720f5affc9b482c2568e8299d/hail/src/main/scala/is/hail/services/NettyProxy.scala#L21-L31. Following the logic through, it looks like we retry this kind of exception indefinitely UNLESS the netty `Epoll` is not available...",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12980#issuecomment-1545975559:82,message,message,82,https://hail.is,https://github.com/hail-is/hail/issues/12980#issuecomment-1545975559,1,['message'],['message']
Integrability,"We added the list of test dependencies to the ""Running the tests"" subsection of [Getting Started](https://hail.is/docs/devel/index.html#GettingStarted) so I'm going to mark this as closed.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/594#issuecomment-244471032:26,depend,dependencies,26,https://hail.is,https://github.com/hail-is/hail/issues/594#issuecomment-244471032,1,['depend'],['dependencies']
Integrability,"We apparently did not exercise this code path much before I fixed batch to treat ImagePullBackOff as failure. Really confusing error message because `write_gs_file` returns `None` which is not iterable so you get a type error on line 565. The real issue is that you're trying to deconstruct a pair as `uri, err` and you received `None`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6810:133,message,message,133,https://hail.is,https://github.com/hail-is/hail/pull/6810,1,['message'],['message']
Integrability,"We are installing Hail's dependencies by injecting the requirements.txt dependencies into the deploy.yaml file. We don't have a way to grab the dependencies from the other wheel at the moment. I'd prefer to defer this change to modify -- The PR is big enough as-is, and fixes the modify semantics to be what they are in latest cloudtools. I think we should explore if there's a way to get pip to print the package dependencies from the wheel, and then grep out pyspark and install.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6297#issuecomment-500612048:25,depend,dependencies,25,https://hail.is,https://github.com/hail-is/hail/pull/6297#issuecomment-500612048,5,"['depend', 'inject']","['dependencies', 'injecting']"
Integrability,We can decide the proper policy/procedure to update dependencies later. I think that we should find a way to be made aware of security issues in our dependencies so we can update them should an extraordinary circumstance arise.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4701#issuecomment-435204362:52,depend,dependencies,52,https://hail.is,https://github.com/hail-is/hail/pull/4701#issuecomment-435204362,2,['depend'],['dependencies']
Integrability,"We cancel in two cases:; 1. A (dev|) deploy failed.; 2. A batch was found open but unknown to us. In the former case, we should delete the batch. The batch contains no extra information; everything we need to know is in the failure message. In the latter case, an open batch does not cost us anything and; cannot be cancelled anyway, so we choose to ignore them. Such a batch; should only come into existence when CI dies in the middle of submission; which should be quite rare.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9725:232,message,message,232,https://hail.is,https://github.com/hail-is/hail/pull/9725,1,['message'],['message']
Integrability,"We could use the library, but I thought (1) we were trying to be dependent on external libraries and (2) it's easier for me to see what's being run with the shell commands as it's easier to search for examples.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12542#issuecomment-1371296492:65,depend,dependent,65,https://hail.is,https://github.com/hail-is/hail/pull/12542#issuecomment-1371296492,1,['depend'],['dependent']
Integrability,"We currently depend on bokeh version 1.2, so I'm not surprised that bokeh 2.0 doesn't work with Hail's plotting lib. Going to close this as a non-issue since it's a versioning mismatch.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8318#issuecomment-600212727:13,depend,depend,13,https://hail.is,https://github.com/hail-is/hail/issues/8318#issuecomment-600212727,1,['depend'],['depend']
Integrability,"We currently have a `@monitor_endpoint` decorator that we use to wrap aiohttp endpoints and produce prometheus metrics, but the same result can be achieved with fewer lines of code by using essentially the same wrapper as an aiohttp middleware. . Separately, I fixed the wrapper to correctly catch and report on endpoints that raise exceptions, as well as keeping track of the number of concurrent connections.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10600:65,wrap,wrap,65,https://hail.is,https://github.com/hail-is/hail/pull/10600,3,['wrap'],"['wrap', 'wrapper']"
Integrability,"We currently have several hail sparse matrix tables that contain up to 10,000 aggregated gVCF files that we aggregated using run_combiner(). We are trying to merge these tables together with a script that makes use of your combine_gvcfs function that is defined in your experimental vcf combiner library. We have successfully succeeded in doing this for merging multiple sparse matrix table into a final table of around 18,000 gVCFs. We are now trying to do this for just under 110,00 gVCFs. The script runs for a while and seems to fail at the very end. Based on the logs, it looks like it is writing to output when it fails. We monitored our resources on google cloud and there is not an issue with cluster CPU or memory usage. We believe the problem stems from not having enough memory in the individual executors at this stage. We are currently using the default of:. spark.executor.memory=10117m; spark.executor.memoryOverhead=15175m. We would like to scale this up and re-run. Do you have any recommended settings for a job of this size?. For reference, below is the error message that we received. Thank you in advance.; ````; Hail version: 0.2.81-edeb70bc789c; Error summary: SparkException: Job aborted due to stage failure: Task 2476 in stage 0.0 failed 20 times, most recent failure: Lost task 2476.20 in stage 0.0 (TID 6571) (<clusterinfo>.internal executor 1128): ExecutorLostFailure (executor 1128 exited caused by one of the running tasks) Reason: Container from a bad node: container_1659731953912_0002_01_001691 on host: cluster-himem-w-0.c.gbsc-gcp-project.internal. Exit status: 143. Diagnostics: [2022-08-10 20:11:38.904]Container killed on request. Exit code is 143; [2022-08-10 20:11:38.904]Container exited with a non-zero exit code 143. ; [2022-08-10 20:11:38.905]Killed by external signal-; ````",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12083:1079,message,message,1079,https://hail.is,https://github.com/hail-is/hail/issues/12083,1,['message'],['message']
Integrability,"We deprecated `hl.null` in favor of `hl.missing`. I removed uses from code base but missed the tests, so we are printing lots of deprecation messages when we run the tests.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10004:141,message,messages,141,https://hail.is,https://github.com/hail-is/hail/pull/10004,1,['message'],['messages']
Integrability,"We had these semantics in our interface in the past, which was; lost in the Python reimplementation. Fixes #6122",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6226:30,interface,interface,30,https://hail.is,https://github.com/hail-is/hail/pull/6226,1,['interface'],['interface']
Integrability,"We have a difference of opinion about the risks involved in using whatever; compiler happens to show up as $(CXX); to try to compile arbitrarily large auto-generated C++ files, and maybe; about what happens when that fails; and gives an error message about something in the middle of 12000 lines of; code that bears no obvious relationship; to what the user is doing. Or when that compiler takes 15 minutes to; compile it. It's the C++ equivalent of; the JVM ""no, that's just too much bytecode"". Or worst of all, it compiles; it but the code gives the wrong answers; because that particular compiler has a bug, and we never tested the; combination of our codegen with *that*; compiler/version. A couple of years ago I was seeing g++ take 40-60 seconds to compile; something that clang did in 2 seconds; (fairly heavily templated code generated for an SQL query, so very much in; the same ballpark as parts of Hail),; which contributes to my concern about this, especially on linux where g++; is the default. So in the long run I expect we'll ship a compiler, or specify a compiler.; But that becomes a problem in itself; if we want the shipped compiler to work on a variety of OS'es. When I did; that before it was all Ubuntu-14.04; and Ubuntu-16.04, and it was manageable to build it for two platforms. On Thu, Aug 2, 2018 at 9:59 PM cseed <notifications@github.com> wrote:. > *@cseed* commented on this pull request.; > ------------------------------; >; > In src/main/c/NativeModule.cpp; > <https://github.com/hail-is/hail/pull/3973#discussion_r207422997>:; >; > > +}; > +; > +std::string strip_suffix(const std::string& s, const char* suffix) {; > + size_t len = s.length();; > + size_t n = strlen(suffix);; > + if ((n > len) || (strncmp(&s[len-n], suffix, n) != 0)) return s;; > + return std::string(s, 0, len-n);; > +}; > +; > +std::string get_cxx_name() {; > + char* p = ::getenv(""CXX"");; > + if (p) return std::string(p);; > + // We prefer clang because it has faster compile; > + auto s = run",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3973#issuecomment-410127709:243,message,message,243,https://hail.is,https://github.com/hail-is/hail/pull/3973#issuecomment-410127709,1,['message'],['message']
Integrability,We have almost everything here. Will make two separate issues for contract types and partitioning,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1158#issuecomment-301549814:66,contract,contract,66,https://hail.is,https://github.com/hail-is/hail/issues/1158#issuecomment-301549814,1,['contract'],['contract']
Integrability,"We have chosen to prototype a new hail query compiler and runtime using; the LLVM project's MLIR framework for query compilation infrastructure.; This creates a simple project skeleton that will serve as a jumping off; point for the work. The README should be enough to get it built. There; is an implementation of the opt tool for investigating IRs, and; a completely empty dialect. I chose to rewrite this rather than copy over [hail-is/mlir-hail] as; breaking API changes from LLVM/MLIR 14 to 15 made it very difficult to; update that repo. The difficulties in updating LLVM versions may prove; to be a source of pain going forward, as this will be a pretty deep; dependency of the system. [hail-is/mlir-hail]: https://github.com/hail-is/mlir-hail",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12070:667,depend,dependency,667,https://hail.is,https://github.com/hail-is/hail/pull/12070,1,['depend'],['dependency']
Integrability,"We have some problem with running nirvana in hail and we use the sample file of GWAS Tutorial. Code: ; hl.utils.get_1kg('data/'); vcfVds = hl.import_vcf('data/1kg.vcf.bgz', min_partitions=8); vds = hl.nirvana(vcfVds,'data/nirvana.properties'). Version:; Running on Apache Spark version 2.2.1; Hail version: 0.2.10-ceb85fc87544. We got this error massage:; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""</usr/local/lib/python3.6/dist-packages/decorator.py:decorator-gen-1226>"", line 2, in nirvana; File ""/seqslab/hail/hail/build/distributions/hail-python.zip/hail/typecheck/check.py"", line 561, in wrapper; File ""/seqslab/hail/hail/build/distributions/hail-python.zip/hail/methods/qc.py"", line 860, in nirvana; File ""/usr/local/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/seqslab/hail/hail/build/distributions/hail-python.zip/hail/utils/java.py"", line 227, in deco; hail.utils.java.FatalError: AssertionError: assertion failed. Java stack trace:; java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.methods.Nirvana$.annotate(Nirvana.scala:361); at is.hail.methods.Nirvana$.apply(Nirvana.scala:487); at is.hail.methods.Nirvana.apply(Nirvana.scala); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:498); at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); at py4j.Gateway.invoke(Gateway.java:280); at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); at py4j.commands.CallCommand.execute(CallCommand.java:79); at py4j.GatewayConnection.run(GatewayConnection.java:214); at java.lang.Thread.run(Thread.java:748). Hail version: 0.2.10-ceb85fc",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5657:630,wrap,wrapper,630,https://hail.is,https://github.com/hail-is/hail/issues/5657,1,['wrap'],['wrapper']
Integrability,"We may want to use NumPy ndarray as local matrix now, to avoid interface duplication and grab all its functionality, even if there's a performance hit in moving between Python and Java (worst case, we go through disk). I'm going to close this while we strategize, will PR the BlockMatrix updates separately.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3064#issuecomment-370149825:63,interface,interface,63,https://hail.is,https://github.com/hail-is/hail/pull/3064#issuecomment-370149825,1,['interface'],['interface']
Integrability,We memoize full type dependence from each argument.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4866:21,depend,dependence,21,https://hail.is,https://github.com/hail-is/hail/issues/4866,1,['depend'],['dependence']
Integrability,"We mix the two right now, with most of the new code using quotes. I; feel that quotes are a better solution given the prevalence of markdown; editors (like Zulip) where copy-pasting an error message with backticks; leads to badly formatted renderings. cc @cseed who I believe favored the use of the backtick style in the first place.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5761:191,message,message,191,https://hail.is,https://github.com/hail-is/hail/pull/5761,1,['message'],['message']
Integrability,"We now have latex integration for formulas, used pervasively in docs along with references to literature. Not sure if this issue calls for more?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/28#issuecomment-279514823:18,integrat,integration,18,https://hail.is,https://github.com/hail-is/hail/issues/28#issuecomment-279514823,1,['integrat'],['integration']
Integrability,We previously were just passing the Code in EmitParams to method; invocations without testing missingness. This change fixes this by; wrapping the PCode in a missingness that will return a default value if; the original EmitCode is missing.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8671:134,wrap,wrapping,134,https://hail.is,https://github.com/hail-is/hail/pull/8671,1,['wrap'],['wrapping']
Integrability,"We probably want a function like:. ``` scala; def projectT[T <: AST](maybeT: AST)(implicit m: ASTDefaultExpectedMessage[T]): T =; projectT[T](maybeT, m.message). def projectT[T <: AST](maybeT: AST, message: => String): T =; maybeT match {; case t : T => t; case _ => maybeT.parseError(message); }; ```. that we can use like:. ``` scala; val Lambda(position, parameter, body) = projectT[Lambda](rhs); ```. But we have the additional issue of wanting to assert function arity, so we want some way to say:. ``` scala; val Array(Lambda(position, parameter, body)) = projectArray(projectT[Lambda]); ```. And more generally. ``` scala; val Array(A(...), B(...)) = projectArray(projectT[A], projectT[B]); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/789:152,message,message,152,https://hail.is,https://github.com/hail-is/hail/issues/789,3,['message'],['message']
Integrability,"We probably want a function like:. ``` scala; def projectT[T <: AST](maybeT: AST)(implicit m: ASTDefaultExpectedMessage[T]): T =; projectT[T](maybeT, m.message). def projectT[T <: AST](maybeT: AST, message: => String): T =; maybeT match {; case t : T => t; case _ => maybeT.parseError(message); }; ```. that we can use like:. ``` scala; val Lambda(position, parameter, body) = projectT[Lambda](rhs); ```. But we have the additional issue of wanting to assert function arity, so we want some way to say:. ``` scala; val Array(Lambda(position, parameter, body)) = projectArray(projectT[Lambda]); ```. And more generally. ``` scala; val Array(A(...), B(...)) = projectArray(projectT[A], projectT[B]); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/786#issuecomment-247090248:152,message,message,152,https://hail.is,https://github.com/hail-is/hail/issues/786#issuecomment-247090248,3,['message'],['message']
Integrability,We put this in to remove auth's dependency on batch when batch couldn't run in azure and now this is no longer necessary.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11075:32,depend,dependency,32,https://hail.is,https://github.com/hail-is/hail/pull/11075,1,['depend'],['dependency']
Integrability,"We recently encountered a batch submission that eventually failed after numerous errors like this one — but nonetheless submitted a new batch containing zero jobs. ```; […]; File ""/usr/local/lib/python3.10/site-packages/hailtop/utils/utils.py"", line 792, in retry_transient_errors; return await retry_transient_errors_with_debug_string('', 0, f, *args, **kwargs); File ""/usr/local/lib/python3.10/site-packages/hailtop/utils/utils.py"", line 834, in retry_transient_errors_with_debug_string; st = ''.join(traceback.format_stack()); . The most recent error was <class 'hailtop.httpx.ClientResponseError'> 500, message='Internal Server Error', url=URL('http://batch.hail/api/v1alpha/batches/485962/updates/1/jobs/create') body='500 Internal Server Error\n\nServer got itself in trouble'. ; Traceback (most recent call last):; File ""/usr/local/lib/python3.10/site-packages/hailtop/utils/utils.py"", line 809, in retry_transient_errors_with_debug_string; return await f(*args, **kwargs); File ""/usr/local/lib/python3.10/site-packages/hailtop/aiocloud/common/session.py"", line 117, in _request_with_valid_authn; return await self._http_session.request(method, url, **kwargs); File ""/usr/local/lib/python3.10/site-packages/hailtop/httpx.py"", line 148, in request_and_raise_for_status; raise ClientResponseError(; hailtop.httpx.ClientResponseError: 500, message='Internal Server Error', url=URL('http://batch.hail/api/v1alpha/batches/485962/updates/1/jobs/create') body='500 Internal Server Error\n\nServer got itself in trouble'; 2024-09-25 01:54:55,288 - hailtop.utils 835 - WARNING - A transient error occured. We will automatically retry. We have thus far seen 50 transient errors (next delay: 60.0s).; ```. The corresponding server-side error was. ```; pymysql.err.DataError: (1406, \""Data too long for column 'value' at row 106\""); ```. coming from the `INSERT INTO job_attributes …` query in `insert_jobs_into_db()`. We write a list of the samples being processed as a job attribute, and it turned out th",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14702:607,message,message,607,https://hail.is,https://github.com/hail-is/hail/issues/14702,1,['message'],['message']
Integrability,"We recently encountered jobs that failed due to syntax errors in the shell script generated by Hail, stemming from code such as. ```python; job.command('touch before'); job.command('\n'.join(f'echo {shlex.quote(msg)}' for msg in messages)); job.command('touch after'); ```. Occasionally `messages` is an empty list, so this evaluates to `job.command('')` and the eventual shell script submitted by Hail contains. ```sh/bin/bash' '-c' '; …; {; touch before; }; {. }; {; touch after; }; …; ```. Shell compound commands like `{ … }` must contain at least one command, so this is a syntax error. Empty commands could be rewritten to generate e.g. [`:`](https://pubs.opengroup.org/onlinepubs/9799919799/utilities/V3_chap02.html#tag_19_17) such as. ```sh; …; {; :; }; …; ```. but it seems easier and probably less surprising to just omit them.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14700#issuecomment-2372547180:229,message,messages,229,https://hail.is,https://github.com/hail-is/hail/pull/14700#issuecomment-2372547180,2,['message'],['messages']
Integrability,"We recently had a debugging odyssey due to the following code:. ```python; import hailtop.batch as hb. def make_job(batch):; job = batch.new_job(name='test'); return job # Oops, forgot to also return the output resource. batch = hb.Batch(name='test'); my_job, my_output = make_job(batch); ```. This lead to the following error message:. ```; Traceback (most recent call last):; File ""…/borkscript.py"", line 8, in <module>; my_job, my_output = make_job(batch); File ""…/site-packages/hailtop/batch/job.py"", line 125, in __getitem__; return self._get_resource(item); File ""…/site-packages/hailtop/batch/job.py"", line 118, in _get_resource; r = self._batch._new_job_resource_file(self, value=item); File ""…/site-packages/hailtop/batch/batch.py"", line 405, in _new_job_resource_file; jrf = _resource.JobResourceFile(value, source); File ""…/site-packages/hailtop/batch/resource.py"", line 128, in __init__; super().__init__(value); File ""…/site-packages/hailtop/batch/resource.py"", line 48, in __init__; assert value is None or isinstance(value, str); AssertionError; ```. Of course, in a 400-line script it took a long while to figure out what the traceback that seemed to have little to do with any dubious code of ours was trying to tell us, and to notice that the actual problem was the `return` 200 lines away!. The problem is that these classes define `__getitem__()` so their resources can be accessed as if via a dict. The assignment into multiple variables causes Python to try to interpret the RHS as something iterable, and as `__getitem__` is defined, it will use `__getitem__(0)`, `__getitem__(1)`,... to implement that iteration. These classes are not really iterable, so define a no-op `__iter__()` to prevent this. With this, we get:. ```; Traceback (most recent call last):; File ""…/borkscript.py"", line 8, in <module>; my_job, my_output = make_job(batch); File ""…/site-packages/hailtop/batch/job.py"", line 127, in __iter__; raise TypeError(f'{type(self).__name__!r} object is not iterable')",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14390:327,message,message,327,https://hail.is,https://github.com/hail-is/hail/pull/14390,1,['message'],['message']
Integrability,"We should add docs that describe how to do this to:; 1. `hl.default_reference`, obviously; 2. Deprecate the `reference_genome` parameter to `hl.init` and instruct users to use `hl.default_reference`. Inform that this parameter has confusing interactions with ReferenceGenome, so we're removing it.; 3. `hl.ReferenceGenome.__init__` should refer users to that. . I think we should also make a separate PR that improves the `hl.import_vcf` error message. If the backend throws an error like; ```; HailException: Invalid locus '1:249367215' found. Position '249367215' is not within the range [1-249250621] for reference genome 'GRCh37'.; ```; `import_vcf` should catch and wrap with another exception that suggests you use a `reference_genome` parameter or `hl.default_reference`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13856#issuecomment-1771234741:444,message,message,444,https://hail.is,https://github.com/hail-is/hail/issues/13856#issuecomment-1771234741,2,"['message', 'wrap']","['message', 'wrap']"
Integrability,"We should be able to assume in tests that plink, gatk, bcftools, tabix and R are installed to test interoperability (e.g. vcf export).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/106:99,interoperab,interoperability,99,https://hail.is,https://github.com/hail-is/hail/issues/106,1,['interoperab'],['interoperability']
Integrability,We should benchmark the following vs 0.1:. - a single linear regression; - a single logistic regression; - a representative example of the UKB MegaGWAS. We should also verify computing PRS is reasonably efficient (was that even possible in 0.1?). Depends on:; - [x] https://github.com/hail-is/hail/issues/4018; - [x] https://github.com/hail-is/hail/issues/4019,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4020:247,Depend,Depends,247,https://hail.is,https://github.com/hail-is/hail/issues/4020,1,['Depend'],['Depends']
Integrability,"We track valid docs paths in `docs_pages` relative to the docs directory, so e.g. `0.2/objects.inv` is a valid path, making `/docs/0.2/objects.inv` a valid route, but `0.2/objects.inv` is not a valid path on the host. To actually find and serve the file we have to use `f'{DOCS_PATH}/0.2/objects.inv`. We initialize jinja to know to look at the `docs` directory for templates but `web.FileResponse` takes a path to the specified file (all I could get from the documentation). Verified I receive `objects.inv` and get a 200 in my namespace.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10196:156,rout,route,156,https://hail.is,https://github.com/hail-is/hail/pull/10196,1,['rout'],['route']
Integrability,"We tried loading a large bgen file (chr21 - 950k Variants, 150k samples) from UK Biobank. It seemed to proceed ok and generate a VDS file that was loadable, but upon looking at variantqc, it appears that at the large majority of sites, all homref calls are missing. There were no 'tolerance too low' messages while loading, and this property seems to be retained across several runs with difference tolerances.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/714:300,message,messages,300,https://hail.is,https://github.com/hail-is/hail/issues/714,1,['message'],['messages']
Integrability,"We use `nest_asyncio` to allow synchronous blocking on a coroutine execution inside an async context. For example, if a user is using the synchronous interface of hail inside a jupyter cell (which runs an event loop). `nest_asyncio` achieves this by patching the `asyncio` event loop to make it reentrant, and with that there are footguns. This allows us to do things like create 100 tasks that all concurrently invoke `run_until_complete`, each of which will add stack frames to the event loop stack that can pile up and trigger a cryptic `RecursionError`. But internally we never *need* to make concurrent calls to `run_until_complete`, and more broadly we should never have `async / sync / async` inside hail code. This change exposes an asynchronous `validate_file` so that asynchronous methods in `hailtop` can use it directly instead of inserting a synchronous layer (`async_to_blocking`) between them.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14576:150,interface,interface,150,https://hail.is,https://github.com/hail-is/hail/pull/14576,1,['interface'],['interface']
Integrability,"We were getting warnings of the form:. `DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working`. because Python has moved abstract collections like `Iterable` from `collections` to `collections.abc`. We still get some warnings from packages we depend on, but I've addressed all instances of this I saw warnings for in our hail python code.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6916:337,depend,depend,337,https://hail.is,https://github.com/hail-is/hail/pull/6916,1,['depend'],['depend']
Integrability,"We'd need a synchronous version of the file system. I thought this was something Cotton wanted to do himself. With regards to the interface changes, I'm not sure if Cotton had something else in mind.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10331#issuecomment-842574828:130,interface,interface,130,https://hail.is,https://github.com/hail-is/hail/pull/10331#issuecomment-842574828,1,['interface'],['interface']
Integrability,We'll pick this up from other dependency changes I'm making,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12928#issuecomment-1520826560:30,depend,dependency,30,https://hail.is,https://github.com/hail-is/hail/pull/12928#issuecomment-1520826560,1,['depend'],['dependency']
Integrability,"We'll talk more about this during our meeting. This provides a skeleton for an LSM tree. Your first job will be to implement the interface using just C++'s `std::map`, an ordered key-value mapping. I implemented a simple command line interface that accepts a key-value language:. - `p k v`, put the value `v` at the key `k` (overwriting any value that currently exists); - `g k`, print the value associated with key `k`; if there is no value print an empty line; - `r l r`, print, on one line, all the key-value pairs between `l` (inclusive) and `r` (exclusive); - `d k`, remove any value associated with the key `k`",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9740:129,interface,interface,129,https://hail.is,https://github.com/hail-is/hail/pull/9740,2,['interface'],['interface']
Integrability,"We'll use these functions for eigen-decomposition of kernel in linear mixed model, and elsewhere. The Breeze method symEig calls to LAPACK dsyev, which performs poorly relative to dsyevd and dsyevr. See:; http://www.netlib.org/lapack/lawnspdf/lawn183.pdf. http://scicomp.stackexchange.com/questions/11827/flop-counts-for-lapack-symmetric-eigenvalue-routines-dsyev-dsyevd-dsyevx-and-d. I added interfaces to [dsyevd](http://www.netlib.org/lapack/explore-html/d2/d8a/group__double_s_yeigen_ga694ddc6e5527b6223748e3462013d867.html) and [dsyevr](http://www.netlib.org/lapack/explore-html/d2/d8a/group__double_s_yeigen_ga2ad9f4a91cddbf67fe41b621bd158f5c.html) and used a version of symEigSpeedTest in symEigDSuite to test performance on my mid 2015 MacBook Pro (2.8 GHz Intel Core i7). Here's a plot from dimension 500 to 5500:; [symEig6k.pdf](https://github.com/hail-is/hail/files/512569/symEig6k.pdf). Extrapolating to 10k:; [symEig10k.pdf](https://github.com/hail-is/hail/files/512571/symEig10k.pdf). And to 25k for kicks (though by then we're at 5G of RAM...):; [symEig25k.pdf](https://github.com/hail-is/hail/files/512580/symEig25k.pdf). So at least on a [Wishart matrix](https://en.wikipedia.org/wiki/Wishart_distribution), symEigD (dsyevd) is best, with symEigR (dsyevr) close behind, then svd (dgesdd) about 2.5x worse than symEigD, and then symEig (dsyev) about 10x worse than symEigD. ```; dim svd symEigD symEig symEigR; 500 .092 .051 .234 .038; 500 .088 .050 .217 .046; 500 .093 .047 .229 .041; 1000 .458 .193 1.659 .191; 1000 .430 .184 1.469 .195; 1000 .441 .207 1.464 .183; 1500 1.399 .7245 4.810 .595; 1500 1.407 .5990 4.777 .601; 1500 1.421 .5835 5.236 .627; 2000 3.272 1.479 10.942 1.386; 2000 3.205 1.337 11.006 1.381; 2000 3.473 1.354 10.933 1.366; 2500 6.180 2.519 21.639 2.750; 2500 6.217 2.718 21.772 2.758; 2500 6.580 2.590 21.176 2.661; 3000 10.169 4.117 51.154 4.716; 3000 10.414 4.131 51.602 4.834; 3000 10.709 4.219 46.711 4.794; 3500 15.451 6.549 72.2 7.365; 3500 15.353 7.058 7",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/906#issuecomment-251835211:349,rout,routines-dsyev-dsyevd-dsyevx-and-d,349,https://hail.is,https://github.com/hail-is/hail/pull/906#issuecomment-251835211,2,"['interface', 'rout']","['interfaces', 'routines-dsyev-dsyevd-dsyevx-and-d']"
Integrability,"We're moving in the other direction, actually -- we're removing the nice mirrored interfaces in python/scala and replacing them with super fast `sun.misc.unsafe`-based infrastructure and native routines. It's not a good time investment to make a scala interface as nice as the Python interface right now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2378#issuecomment-349722748:82,interface,interfaces,82,https://hail.is,https://github.com/hail-is/hail/issues/2378#issuecomment-349722748,4,"['interface', 'rout']","['interface', 'interfaces', 'routines']"
Integrability,"We've had a number of pip issues recently, particularly incompatibilities with the `six` package. The central issue is that pip will install incompatible package versions with only a warning message. This primarily happens when a set of packages is installed (say in a parent image) and then a new set of packages are installed later. Pip attempts to satisfy all requirements of the packages in an installed set, but it does not consider the versions of packages already installed. In this PR, I pervasively change every use of `pip` to be followed by the use of `pip check`. Pip check errors if there are incompatible package versions installed. Rather than change every place that we use `pip install`, I created an ubuntu image with a script, `hail-pip-install`, and pip configuration which makes it easy to do the right thing. Now, we should always install python packages like this:. ```; hail-pip-install package1 package2 package3; ```. The script will ensure that all packages are compatible with existing packages. Moreover, it will retry downloads five times. I did not make every Dockerfile depend on the new hail-ubuntu-image because they are legacy Dockerfile that I didn't want to edit. These include the benchmark Dockerfile and some notebook workers. PySpark presented a challenge because we did not install it via pip. As a result, packages, such as Hail, which depend on PySpark failed the `pip check`. I modified all uses of PySpark to instead use the standard pip-installed version of PySpark. In particular, take a look at how query and shuffler changed. cc: @Dania-Abuhijleh @catoverdrive",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9593:191,message,message,191,https://hail.is,https://github.com/hail-is/hail/pull/9593,3,"['depend', 'message']","['depend', 'message']"
Integrability,"We've had to do a redeploy of our hail batch instance on Azure. This PR resolves/clarifies two issues we encountered. 1) Storage Account Name Uniqueness. Due to Azure's restrictions on storage account naming (mainly that names must be globally unique) the redeploy did not succeed. This is because the resource group name (we chose to reuse hail) is possible under a new subscription, but the generated storage account names were therefore identical to our previous stack. I've added in an argument called `storage_account_suffix` to account for this issue. It can be set to any arbitrary string that complies with Azure's storage account naming scheme in order to avoid naming conflicts in the future. While the option remains to simply choose a novel resource group name this is not enforced by Azure and anyone deploying a stack similarly named to someone else would not know until the `terraform apply` stage that the name would not work. 2) Mysql Flexible Server Zones. The only other issue is that the zone argument for the mysql flexible server is no longer always valid depending on your compute region. We needed to comment it out for a successful deploy in Australia East. The comment that has been added we hope will be helpful for others in future.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13058:1078,depend,depending,1078,https://hail.is,https://github.com/hail-is/hail/pull/13058,1,['depend'],['depending']
Integrability,"We've recently updated from 0.2.126ish to 0.2.130ish, and encountered some teething issues with the new (to us) metadata server. Jobs using `gsutil` failed as their attempts to get credentials from the server resulted in 404. There seems to have been two problems:. 1. As shown (also via `curl`) in [batch 454410](https://batch.hail.populationgenomics.org.au/batches/454410/jobs/1), our `gsutil` queried for `http://169.254.169.254/computeMetadata/v1/instance/service-accounts` (without a final `/`) which resulted in a 404. I don't know if there's a more elegant way for the server to accept both, rather than just adding a route with and without. 2. With that fixed, [batch 454418](https://batch.hail.populationgenomics.org.au/batches/454418/jobs/1) shows a failure within `GetInstanceScopes()`. This is failing because the metadata server does not implement the `…/scopes` endpoint. PR #14019 implemented only so much as is needed for `hail` and `gcloud` to get access tokens for hail GSAs so they can then make API calls to GCS or Hail Batch, but we seem to have needed a bit more. Not sure why you didn't encounter this yourselves: possibly sufficiently different versions of `gsutil` or the cloud SDK, or perhaps you are better at remembering to use `gcloud` rather than `gsutil` than we are!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14566#issuecomment-2132539331:625,rout,route,625,https://hail.is,https://github.com/hail-is/hail/pull/14566#issuecomment-2132539331,1,['rout'],['route']
Integrability,"Weirdly, GCR returns a 500 for an invalid repository name instead of a 404, so we retry it endlessly. We need to special-case our transient errors to treat 500s with ""Invalid repository name"" messages as *not* transient errors, and then give the user the error message that their image repository is invalid. This follows the same pattern that we use for invalid image names.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12152:192,message,messages,192,https://hail.is,https://github.com/hail-is/hail/pull/12152,2,['message'],"['message', 'messages']"
Integrability,"Welcome @ryerobinson, and thanks for the Pull Request! Could you report exactly the error that you saw when building hail? `sys_platform!='win32'` is necessary to install the dependencies on Windows, so there is probably an alternative solution to the error that works for all platforms.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12136#issuecomment-1230330783:175,depend,dependencies,175,https://hail.is,https://github.com/hail-is/hail/pull/12136#issuecomment-1230330783,1,['depend'],['dependencies']
Integrability,Welp. OK. Looks like we're stuck on 6.8.21 forever. I have no idea why the CI is NPE'ing. My local system gives all manner of other inexplicable error messages (mostly about class loading). Things are fine when done through `./gradlew test` though. It's just the test jar that seems broken.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8801#issuecomment-629593668:151,message,messages,151,https://hail.is,https://github.com/hail-is/hail/pull/8801#issuecomment-629593668,1,['message'],['messages']
Integrability,"What do you mean by ""a maintenance error is generated in Ghost""? I kind of assumed that the website wasn't working right now because the tests finished and `cleanup_deploy_blog` shut down the blog in the PR namespace. The ""endpoint"" that I'm passing in to the `wait` command for the blog in build.yaml is `/`, which *should* do the right thing interally because the URL that's actually being constructed in `wait-for.py` becomes `http://{service}.{namespace}/{namespace}/{service}{endpoint}`, which gives you the right thing. The test failure that I'm running into currently has to do with the fact that the wait command there queries the endpoint without going through either the router or the gateway, (since it's e.g. hitting http://blog.wang/wang/blog/ directly), so it's getting the 301 redirect to https because the `X-Forwarded-Proto` header isn't set. I'm not sure what the right fix is in this case.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7381#issuecomment-548102338:681,rout,router,681,https://hail.is,https://github.com/hail-is/hail/pull/7381#issuecomment-548102338,1,['rout'],['router']
Integrability,"What do you mean by validation? . For the 'annotation line' are you suggesting a general error-catching wrapper? I actually really like that, and I'll give it a go. > CNV work; > What I want to do with CNVs is something like ; > ; > ```; > val files: Array[String]; > sc.paralellize(files); > .map { f => readTable(f, config...) }; > .,map (convert to a hail better cnv representation); > ```; > ; > Can't do that if readTable gives you an RDD",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/462#issuecomment-233007740:104,wrap,wrapper,104,https://hail.is,https://github.com/hail-is/hail/pull/462#issuecomment-233007740,1,['wrap'],['wrapper']
Integrability,What do you think about a solution where we only upload/send the last 50MB of the log file and then worry about a nicer interface later on? This will also patch up a liability we've had where someone could write a huge log file that we'd then have to pay for.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12852#issuecomment-1570828503:120,interface,interface,120,https://hail.is,https://github.com/hail-is/hail/issues/12852#issuecomment-1570828503,1,['interface'],['interface']
Integrability,What's the plan to address the bug you found in maximal independent set's AST route?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3704#issuecomment-395110967:78,rout,route,78,https://hail.is,https://github.com/hail-is/hail/pull/3704#issuecomment-395110967,1,['rout'],['route']
Integrability,What’s the deal with the ordering? I want to eliminate implicit dependencies,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5354#issuecomment-464034964:64,depend,dependencies,64,https://hail.is,https://github.com/hail-is/hail/pull/5354#issuecomment-464034964,1,['depend'],['dependencies']
Integrability,"When I last tried to fix this up, I somehow missed the GCS client dependency. This; uses the in cluster location if it is available otherwise it lets Google try to find; the key.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8652:66,depend,dependency,66,https://hail.is,https://github.com/hail-is/hail/pull/8652,1,['depend'],['dependency']
Integrability,"When did responding to comments become a ""review""? Super annoying interface change.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1778#issuecomment-300001063:66,interface,interface,66,https://hail.is,https://github.com/hail-is/hail/pull/1778#issuecomment-300001063,1,['interface'],['interface']
Integrability,When dividing INT by another INT print a message to inform the user that the output is an INT and so no decimals are printed. Or set as default that it prints a double.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/146:41,message,message,41,https://hail.is,https://github.com/hail-is/hail/issues/146,1,['message'],['message']
Integrability,"When python loads a file it runs everything at the top level. That means running statements like `import aiohttp`, `MY_CONSTANT = 5`, and `def foo: …`. So importing files can define functions, so they can be used later, but those functions are not run (how could they be?). By putting the imports inside the functions themselves, we defer the import of aiohttp from when the deploy_config is imported to when the functions that depend on `aiohttp` are actually used. If they are never used, `aiohttp` will never be imported! This is why it made `hailctl dev config list` much faster, since it doesn't need to use those functions.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11293#issuecomment-1027295448:428,depend,depend,428,https://hail.is,https://github.com/hail-is/hail/pull/11293#issuecomment-1027295448,1,['depend'],['depend']
Integrability,"When using this command `filtervariants -c /user/xiaoli/LCR-hs37d5.interval_list --remove`, I got this error message: ; `hail: filtervariants: caught exception: scala.MatchError: [Ljava.lang.String;@56d822dc (of class [Ljava.lang.String;)`. The input file is formatted:; 1 1 10000; 1 10016 10464; 1 10656 10784; 1 28576 28603; 1 30852 30959; 1 31712 31733; 1 33440 33464; 1 33504 33541. It might be because that it cannot take tab delimited file with only three columns. At least we need a clear warning message.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/319:109,message,message,109,https://hail.is,https://github.com/hail-is/hail/issues/319,2,['message'],['message']
Integrability,"When we attempt to build the vep 95 docker image, we have issues installing LibXML causing later failures. Not sure why this is happening.; From https://batch.hail.is/batches/8209583/jobs/27; ```; #13 423.5 Building and testing XML-LibXML-2.0210 ... ! Installing XML::LibXML failed. See /root/.cpanm/work/1727981951.12888/build.log for details. Retry with --force to force install it.; #13 453.0 FAIL; ```; leading to; ```; #13 724.7 ! Installing the dependencies failed: Module 'XML::LibXML' is not installed, Module 'XML::LibXML::Reader' is not installed; #13 724.7 ! Bailing out the installation for BioPerl-1.7.8.; #13 724.7 ! Installing the dependencies failed: Module 'Bio::Root::Version' is not installed; #13 724.7 ! Bailing out the installation for Bio-BigFile-1.07.; #13 724.7 63 distributions installed; #13 ERROR: executor failed running [/bin/sh -c export KENT_SRC=$PWD/kent-335_base/src && export MACHTYPE=$(uname -m) && export CFLAGS=""-fPIC"" && export MYSQLINC=""mysql_config --include | sed -e 's/^-I//g'"" && export MYSQLLIBS=""mysql_config --libs"" && wget https://github.com/ucscGenomeBrowser/kent/archive/v335_base.tar.gz && tar xzf v335_base.tar.gz && cd $KENT_SRC/lib && echo 'CFLAGS=""-fPIC""' > ../inc/localEnvironment.mk && make clean && make && cd ../jkOwnLib && make clean && make && mkdir -p $VEP_DIR/cpanm && export PERL5LIB=\$PERL5LIB:$HOME/cpanm/lib/perl5 && cpanm Bio::DB::BigFile]: exit code: 1; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14710:451,depend,dependencies,451,https://hail.is,https://github.com/hail-is/hail/issues/14710,2,['depend'],['dependencies']
Integrability,"Which exception was being masked?. We currently use this `deserialize` function to construct reader/writer classes, like MatrixVCFReader. This class does a bunch of work on construction, including throwing user-facing errors. Wrapping these errors in a `MappingException` (which becomes the top-level error, and the one in the summary in Python) is wrong. Obscuring full stack traces is wrong too. The correct thing is to stop doing a bunch of work on class construction, but until we make that change, I think that right now, we should continue peeling off the mapping exception",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6156#issuecomment-494809361:226,Wrap,Wrapping,226,https://hail.is,https://github.com/hail-is/hail/pull/6156#issuecomment-494809361,1,['Wrap'],['Wrapping']
Integrability,"Which exposes the generic split_multi interface.; When we nuke Genotype, I will rename split_multi_generic => split_multi and split_multi => split_multi_hts.; Updated the interface slightly. The rule I'm using is: v, va, g, etc. all denote the old annotations and newV denotes the new, split variant.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2459:38,interface,interface,38,https://hail.is,https://github.com/hail-is/hail/pull/2459,2,['interface'],['interface']
Integrability,"While I was running the script shown below. I got the error message. I attach the log file. Do you know what cause the errors ? Thanks . ```; hail -l /medpop/afib/schoi/projects/TOPMed/Script/log/TopMed.Chr22.QC.vds.log \; importvcf file:///medpop/afib/schoi/projects/TOPMed/Data/BROAD/Link/Chr22/*.bgz splitmulti \; filtervariants expr -c 'v.contig == ""X"" || v.contig == ""Y"" || v.contig == ""MT""' --remove \; filtersamples list -i file:///medpop/afib/schoi/projects/TOPMed/Result/TopMed_nodup.6998.sample.map --keep \; sampleqc -o file:///medpop/afib/schoi/projects/TOPMed/Result/SampleQC/chrom/TOPMed.PreQC.sampleqc.chr22.tsv \; variantqc -o file:///medpop/afib/schoi/projects/TOPMed/Result/VariantQC/chrom/TOPMed.PreQC.variantqc.chr22.tsv \; annotatevariants expr -c 'va.info.AC = va.info.AC[va.aIndex]' \; filtergenotypes -c '(g.ad[0] + g.ad[1]) / g.dp < 0.9 || (g.isHomRef && (g.ad[0] / g.dp < 0.9 || g.gq < 20)) || (g.isHet && (g.ad[1] / g.dp < 0.20 || g.pl[0] < 20)) || (g.isHomVar && (g.ad[1] / g.dp < 0.9 || g.pl[0] < 20)) || g.dp > 200' --remove \; variantqc -o file:///medpop/afib/schoi/projects/TOPMed/Result/VariantQC/chrom/TOPMed.QCstep1.variantqc.Chr22.tsv \; annotatevariants intervals -r va.isLCF -i file:///medpop/afib/schoi/projects/TOPMed/Data/LCR/LCR.interval_list \; annotatevariants expr -c 'va.AC1 = va.qc.AC,; va.good = ((va.info.QD > 3 && v.altAllele.isIndel) || (va.info.QD > 2 && v.altAllele.isSNP)) && (va.qc.callRate > 0.95)' \; annotateglobal expr -c 'global.badVQSLOD = variants.count(va.pass),; global.badQD = variants.count((va.info.QD <= 3 && v.altAllele.isIndel) || (va.info.QD <= 2 && v.altAllele.isSNP)),; global.badCallRate = variants.count(va.qc.callRate <= 0.95),; global.nIndel_1 = variants.count(v.altAllele.isIndel && va.AC1 > 0),; global.nSNP_1 = variants.count(v.altAllele.isSNP && va.AC1 > 0),; global.nIndel_2 = variants.count(v.altAllele.isIndel && va.AC1 > 0 && va.pass),; global.nSNP_2 = variants.count(v.altAllele.isSNP && va.AC1 > 0 && va.pass),; gl",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/660:60,message,message,60,https://hail.is,https://github.com/hail-is/hail/issues/660,1,['message'],['message']
Integrability,"While trying to fix some weird errors, I realized this was more complicated than necessary and, I; think, broken. In the new implementation, a BatchPoolFuture is a thin wrapper around an asyncio.Future. Instead of; tracking the value and any exceptions manually, the BatchPoolFuture relies on asyncio.Future. I think the diff is not very helpful, just look at the new, simpler implementation. I also forgot to close the ServiceBackend, I now do that in the cleanup method that happens after all future complete.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10322:169,wrap,wrapper,169,https://hail.is,https://github.com/hail-is/hail/pull/10322,1,['wrap'],['wrapper']
Integrability,"While we're making breaking changes to the `hailctl` interface... there is a beta feature to start/stop Dataproc clusters. Once this is released, it could create some confusion that `hailctl dataproc start` runs `gcloud dataproc clusters create` instead of `gcloud dataproc clusters start`. Likewise for `hailctl dataproc stop` and `gcloud dataproc clusters delete`. Should we rename `hailctl dataproc` start/stop to create/delete?. https://cloud.google.com/dataproc/docs/guides/dataproc-start-stop",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9842#issuecomment-767171070:53,interface,interface,53,https://hail.is,https://github.com/hail-is/hail/pull/9842#issuecomment-767171070,2,['interface'],['interface']
Integrability,Why are we keeping both if they're almost exactly the same thing? To prep for the python interface?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2225#issuecomment-331205348:89,interface,interface,89,https://hail.is,https://github.com/hail-is/hail/pull/2225#issuecomment-331205348,1,['interface'],['interface']
Integrability,Why is this a breaking change? It's the same interface as before with additional optional parameters.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3489#issuecomment-387263813:45,interface,interface,45,https://hail.is,https://github.com/hail-is/hail/pull/3489#issuecomment-387263813,1,['interface'],['interface']
Integrability,Will experiment with that interface. It's unfortunate that I can't change the order of arguments in the method now without breaking things. The order no longer makes sense as we add a bunch of things at the end.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1984#issuecomment-314618826:26,interface,interface,26,https://hail.is,https://github.com/hail-is/hail/pull/1984#issuecomment-314618826,1,['interface'],['interface']
Integrability,Will integrate with new build system and re-pull.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5906#issuecomment-487407741:5,integrat,integrate,5,https://hail.is,https://github.com/hail-is/hail/pull/5906#issuecomment-487407741,1,['integrat'],['integrate']
Integrability,"Will look at this asap; focused on notebook service, can this wait until that wraps up?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5150#issuecomment-456211174:78,wrap,wraps,78,https://hail.is,https://github.com/hail-is/hail/pull/5150#issuecomment-456211174,1,['wrap'],['wraps']
Integrability,Will split out the disk representation aspect once the other part goes in (one-way dependency),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/406#issuecomment-232000412:83,depend,dependency,83,https://hail.is,https://github.com/hail-is/hail/pull/406#issuecomment-232000412,1,['depend'],['dependency']
Integrability,"With this message:. > java.util.NoSuchElementException: key not found: NA19438. I guess we should filter trios with kids not in the dataset, and make the parents None if they are missing and issue a warning?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/94:10,message,message,10,https://hail.is,https://github.com/hail-is/hail/issues/94,1,['message'],['message']
Integrability,"Wonder what your thoughts are on this. I think that we have too deep an image hierarchy and that it's only stalling our time-to-test in CI. I propose here getting rid of the run-tests image and just putting plink in the hail-run image. I also remove the dependency on service-base and just install hailtop in the hail-run image -- I don't think anything hail/hail should depend on services code. This change actually revealed an accidental dependency where there was a gear (services) test in the hail/python tests. I moved that over to the batch suite as batch is the primary user of that class and we don't have a gear suite atm. Ultimately, I think we should have a pretty flat docker image hierarchy. Each of our Dockerfiles does a decent job of following the docker mantra of dependencies first, code later. But if you consider the fact that we stack images on top of each other then you can see that in reality that doesn't translate to our images! We instead get an interleaving of hail code and dependencies such that it's very easy to break the cache for images like this one.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12396:254,depend,dependency,254,https://hail.is,https://github.com/hail-is/hail/pull/12396,5,['depend'],"['depend', 'dependencies', 'dependency']"
Integrability,"Working backwards, we need to not return a 500 on error. We could return a BadRequest error code with the message 'invalid spec' and then handle the MJC database call on the driver. I chose instead to have the worker to post job complete so we get the error message with the stack trace showing up in the UI as having the normal job flow seemed cleaner to me last week then special casing `schedule_job` on the driver. `post job complete` needs a job object to get the status to send back to the driver. However, a `Job` has two concrete implementations and we don't know which the bad job is because we can't get the spec. Furthermore, the `Job` class does a lot of work based on the spec right now. So I thought it was clearer to just create a new class that had the status, but nothing else. After writing this out, it's probably better to have the driver MJC upon error rather than from the worker. The code below would be more complicated. We'd have to get the traceback / error message from the response from the worker. ```python3; try:; await client_session.post(; f'http://{instance.ip_address}:5000/api/v1alpha/batches/jobs/create',; json=body,; timeout=aiohttp.ClientTimeout(total=2),; ); await instance.mark_healthy(); except aiohttp.ClientResponseError as e:; await instance.mark_healthy(); if e.status == 403:; log.info(f'attempt already exists for job {id} on {instance}, aborting'); if e.status == 503:; log.info(f'job {id} cannot be scheduled because {instance} is shutting down, aborting'); raise e; except Exception:; await instance.incr_failed_request_count(); raise; ```. And the error handling would look something like this:. ```python3; try:; body = await job_config(app, record, attempt_id); except Exception:; log.exception('while making job config'); status = {; 'version': STATUS_FORMAT_VERSION,; 'worker': None,; 'batch_id': batch_id,; 'job_id': job_id,; 'attempt_id': attempt_id,; 'user': record['user'],; 'state': 'error',; 'error': traceback.format_exc(),; 'container_s",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078:106,message,message,106,https://hail.is,https://github.com/hail-is/hail/pull/11391#issuecomment-1048213078,6,['message'],['message']
Integrability,"Wow, talk about a *tour de force* of debugging, well done!!. ---. OK, so this kinda makes sense. We are importing our own copies of the GCS libraries and renaming them all to `is.hail.relocated....`. We do this so that we're not stuck with whatever version Dataproc is including. We pin our dataproc image version to `2.1.2-debian11` (see [here](https://github.com/hail-is/hail/blob/main/hail/python/hailtop/hailctl/dataproc/start.py#L147)) which [was released in January 2023](https://cloud.google.com/dataproc/docs/release-notes#January_23_2023). The latest available version of [Dataproc's Debian images](https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-release-2.1) is 2.1.25-debian11 which depends on GoogleCloudDataproc hadoop connector version [2.2.15](https://github.com/GoogleCloudDataproc/hadoop-connectors/releases/tag/2.2.15) which relies on Google Cloud Storage client library version [2.22.3](https://github.com/GoogleCloudDataproc/hadoop-connectors/commit/8b79f025ef5e8231de827f4c620cd23e230c3489). I have [a PR](https://github.com/hail-is/hail/pull/13732) to upgrade us to 2.27.1 because the library broke retries in versions [2.25.0, 2.27.0). AFAICT, Google's image version page only shows the most recent five. There's no way to go back further in time. Luckily, the way back machine has [a March 2023 capture](https://web.archive.org/web/20230307225815/https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-release-2.1) which includes our version. 2.1.2-debian11 used Google Cloud Dataproc hadoop connector version [2.2.9](https://github.com/GoogleCloudDataproc/hadoop-connectors/releases/tag/v2.2.9) This version of the hadoop connector was [using some alpha version of a gRPC version of the cloud storage library](https://github.com/GoogleCloudDataproc/hadoop-connectors/blob/18f6e9f1c745e1854d76bea9362e2332898d8895/pom.xml#L96C1-L97C1). I'm not sure what's up with that. OK, here's my proposal: let's change that IMAGE_VERSION to the latest one ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13690#issuecomment-1738196645:714,depend,depends,714,https://hail.is,https://github.com/hail-is/hail/issues/13690#issuecomment-1738196645,1,['depend'],['depends']
Integrability,Wrap conditional HQL in parens.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2654:0,Wrap,Wrap,0,https://hail.is,https://github.com/hail-is/hail/pull/2654,1,['Wrap'],['Wrap']
Integrability,Write AST to IR conversion message to log instead of console,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3246:27,message,message,27,https://hail.is,https://github.com/hail-is/hail/pull/3246,1,['message'],['message']
Integrability,Write a message to user / log about currently silent shuffles,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3799:8,message,message,8,https://hail.is,https://github.com/hail-is/hail/issues/3799,1,['message'],['message']
Integrability,"Write loading lines from text files in a way that can be used by Spark or table lowering. This will be to lower the VCF and text file importers. This handles three cases:; - an (splittable) uncompressed file,; - a (splittable) bgzip compressed file, and; - an non-splittable compressed file compressed by some other codec. In this case, it will be loaded as a single partition. I test each of the three cases. I also ported the prexisting partition test that generates random splittings and tests that in the bgzip case. I tested with the number of tests turned up to 10,000. Two ideas here:. Each line has a fixed offset depending on the case (file offset, virtual offset, or decompressed offset). The split defines a partition of the offset spaces. For a partition (start, end), and line with offset x, the line belongs in the partition if x lies in the range (start, end] or, if it is the first partition, [start, end]. This is because, if at the beginning of a split, you can't tell if the line started earlier or not. The second idea is to copy the blocks one at a time into buf. bgzip blocks are max 64KB. `read` on a BGzipInputStream doesn't return data that spans blocks. So buf always contains the entire data for a block. This is used to track the offset o the beginning of the line.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8662:622,depend,depending,622,https://hail.is,https://github.com/hail-is/hail/pull/8662,1,['depend'],['depending']
Integrability,WriterContainer.writeRows(WriterContainer.scala:261); 	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand$$anonfun$run$1$$anonfun$apply$mcV$sp$1.apply(InsertIntoHadoopFsRelationCommand.scala:143); 	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand$$anonfun$run$1$$anonfun$apply$mcV$sp$1.apply(InsertIntoHadoopFsRelationCommand.scala:143); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70); 	at org.apache.spark.scheduler.Task.run(Task.scala:86); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	... 1 more; Caused by: java.lang.ArrayIndexOutOfBoundsException; ```. And the actual informative trace nested in the `hail.log`:; ```; Caused by: java.lang.ArrayIndexOutOfBoundsException: 1; at scala.collection.mutable.WrappedArray$ofRef.apply(WrappedArray.scala:127); at org.broadinstitute.hail.expr.FunctionRegistry$$anonfun$209.apply(FunctionRegistry.scala:1058); at org.broadinstitute.hail.expr.FunctionRegistry$$anonfun$209.apply(FunctionRegistry.scala:1058); at org.broadinstitute.hail.expr.BinaryFun.apply(Fun.scala:108); at org.broadinstitute.hail.expr.AST$$anonfun$evalCompose$2.apply(AST.scala:143); at org.broadinstitute.hail.expr.FunctionRegistry$$anonfun$lookupMethod$1$$anonfun$36.apply(FunctionRegistry.scala:228); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at org.broadinstitute.hail.ex,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1202:7899,Wrap,WrappedArray,7899,https://hail.is,https://github.com/hail-is/hail/issues/1202,1,['Wrap'],['WrappedArray']
Integrability,"Yeah, I was having the same trouble. The moral now is the printed representation should roughly have the same information as the interface call that generated it (read_matrix_table, import_vcf, etc.) I made the ""requested type"" optional in the printed representation, and None means use the full type coming from the file.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3896#issuecomment-403056631:129,interface,interface,129,https://hail.is,https://github.com/hail-is/hail/pull/3896#issuecomment-403056631,1,['interface'],['interface']
Integrability,"Yeah, adding an `async` copy of each method of `FS` seems right to me. RouterFS is pretty close to having that anyway. `HadoopFS` can just delegate to its sync methods.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13677#issuecomment-1747702915:71,Rout,RouterFS,71,https://hail.is,https://github.com/hail-is/hail/pull/13677#issuecomment-1747702915,1,['Rout'],['RouterFS']
Integrability,"Yeah, agreed. I've never taken inventory of the full test suite. This was the first bug that caused an error message though, previous ones have just been about things being too slow. So we'll need benchmarks to catch that stuff.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7146#issuecomment-536022939:109,message,message,109,https://hail.is,https://github.com/hail-is/hail/pull/7146#issuecomment-536022939,1,['message'],['message']
Integrability,"Yeah, amazing how far the Python interface has come!. Here are the essential changes:; ```; val popOfSample_n = DenseMatrix.zeros[Double](if (mixture) K else 1, N); if (mixture) {; val popDistRV = Dirichlet(popDist_k); (0 until N).foreach(j => popOfSample_n(::, j) := popDistRV.draw()); } else {; popDist_k :/= sum(popDist_k); val popDistRV = Multinomial(popDist_k); (0 until N).foreach(j => popOfSample_n(0, j) = popDistRV.draw()); }; ```; ```; val p =; if (mixture); popOfSample_nBc.value(::, i) dot popAF_k; else; popAF_k(popOfSample_nBc.value(0, i).toInt); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3206#issuecomment-375136911:33,interface,interface,33,https://hail.is,https://github.com/hail-is/hail/pull/3206#issuecomment-375136911,1,['interface'],['interface']
Integrability,"Yeah, it says no such method found. One of many bad expr error messages",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/846#issuecomment-249639159:63,message,messages,63,https://hail.is,https://github.com/hail-is/hail/issues/846#issuecomment-249639159,1,['message'],['messages']
Integrability,"Yeah, no trailing bin. I think we can sanity-check the SPARK_HOME setting in the HailContext constructor to give a more informative error message.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2062#issuecomment-319707620:138,message,message,138,https://hail.is,https://github.com/hail-is/hail/issues/2062#issuecomment-319707620,1,['message'],['message']
Integrability,"Yes totally. You'd just call ParsedLine.getValue. getKey would return an; empty array, since you passed nothing in. On Jul 13, 2016 12:21 AM, ""cseed"" notifications@github.com wrote:. > I haven't looked at this yet, I have a new use case in seqr for the table; > code. I need to be able to load data as RDD[Annotation] without pulling; > out a sample/variant key (or pull out a totally custom key). Can I do that; > easily with the new interface?; > ; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub; > https://github.com/broadinstitute/hail/pull/462#issuecomment-232252890,; > or mute the thread; > https://github.com/notifications/unsubscribe/AKEs6uAzeg--b5QgvgWITjuIpY51afyEks5qVGesgaJpZM4JGtqM; > .",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/462#issuecomment-232253067:435,interface,interface,435,https://hail.is,https://github.com/hail-is/hail/pull/462#issuecomment-232253067,1,['interface'],['interface']
Integrability,Yes! https://github.com/hail-is/hail/pull/4119/files#diff-b173fb9bd584d50afcfa6724954ef3b5R415 (It will be later work to rip out partition keys from the python interface.),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4094#issuecomment-412565015:160,interface,interface,160,https://hail.is,https://github.com/hail-is/hail/pull/4094#issuecomment-412565015,1,['interface'],['interface']
Integrability,"Yes, exactly. We started by building something to compile instances of AsmFunctionN, that's what FunctionBuilder is. MethodBuilder is for adding auxiliary methods to the class being compiled which will be called from the apply method. In the old way, FunctionBuilder was central. Now I'm trying to tease things apart so they are analogous to the core Java constructs: class, method, field. FunctionBuilder will just have a class and a method build for the apply method. Splitting out ClassBuilder will also let us build multiple/auxiliary classes (something done by dependent functions).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8179#issuecomment-592277392:566,depend,dependent,566,https://hail.is,https://github.com/hail-is/hail/pull/8179#issuecomment-592277392,1,['depend'],['dependent']
Integrability,"Yes, it will exit(0), but upon any job failure `state` will be ""failure"", and the STDOUT message will be ""batch {bc_batch.id} complete: failure"" instead of ""Batch completed successfully"" as in the LocalBackend case currently. We rely on exception handling to catch job errors for LocalBackend.run, and the current bug occurs because of an improperly formed ternary expression (we can tell this because `verbose` should not enable `-e`). cc @jigold, @danking, what are your thoughts?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9297#issuecomment-675599575:89,message,message,89,https://hail.is,https://github.com/hail-is/hail/pull/9297#issuecomment-675599575,1,['message'],['message']
Integrability,"Yes, thank you - all resolved with a clean build + inclusion of the above dependencies.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/10747#issuecomment-894259075:74,depend,dependencies,74,https://hail.is,https://github.com/hail-is/hail/issues/10747#issuecomment-894259075,1,['depend'],['dependencies']
Integrability,"You have an error based on where the maven code is being run (not the directory with the pom file).; ```; [[1;31mERROR[m] Failed to execute goal [32morg.apache.maven.plugins:maven-dependency-plugin:2.8:resolve[m [1m(default-cli)[m: [1;31mGoal requires a project to execute but there is no POM in this directory (/). Please verify you invoked Maven from the correct directory.[m -> [1m[Help 1][m; [[1;31mERROR[m] ; [[1;31mERROR[m] To see the full stack trace of the errors, re-run Maven with the [1m-e[m switch.; [[1;31mERROR[m] Re-run Maven using the [1m-X[m switch to enable full debug logging.; [[1;31mERROR[m] ; [[1;31mERROR[m] For more information about the errors and possible solutions, please read the following articles:; [[1;31mERROR[m] [1m[Help 1][m http://cwiki.apache.org/confluence/display/MAVEN/MissingProjectException; The command '/bin/sh -c mvn dependency:resolve && rm pom.xml test-jar-with-dependencies.xml' returned a non-zero code: 1; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6050#issuecomment-489712270:183,depend,dependency-plugin,183,https://hail.is,https://github.com/hail-is/hail/pull/6050#issuecomment-489712270,3,['depend'],"['dependencies', 'dependency', 'dependency-plugin']"
Integrability,"You should benchmark linear search vs priority queue in the merge itself. You can either implement both and compare on a representative benchmark in context, or code up the merge code itself into a targeted benchmark, something along the lines of:. Generate 10 million (or more, large enough to get a stable measurement) random input integers `Array[A]` in a wrapper class `class A(i: Int)` to simulate `RegionValue`. We're aiming to merge N = ~100 elements, so put 100 into either an array or priority heap, pull out the smallest values, and update them with new input values until the input values and array are both exhausted. Test with N = 10, 100, 1000. If you do the latter, post the benchmark. I think we'll need to re-visit this trade-off again when we switch to C++.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4396#issuecomment-428335101:359,wrap,wrapper,359,https://hail.is,https://github.com/hail-is/hail/pull/4396#issuecomment-428335101,1,['wrap'],['wrapper']
Integrability,"Your application master container failed with exit code 11. There was no human interpretable error message, but googling turned up this:. http://stackoverflow.com/questions/31284799/spark-streaming-job-exited-with-code-11. Hitting ""spark.yarn.max.executor.failures"" would be totally consistent with the observed behavior, although I'm not sure why we didn't get the same error message. http://spark.apache.org/docs/latest/running-on-yarn.html. Again, this is related to the 1.5 bug I mentioned before: executors killed to give resources to other jobs shouldn't be counted as killed. Let's try again with two changes:; 1. I increased max executor failures to 500 in `hail-new-vep`.; 2. Instead of using repartition, use `importvcf -n 1000 /path/to/my.vcf.bgz splitmulti ...`. I think this will fix all the problems.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/302#issuecomment-211046143:99,message,message,99,https://hail.is,https://github.com/hail-is/hail/issues/302#issuecomment-211046143,2,['message'],['message']
Integrability,"Your previous post includes a warning message that your `SPARK_HOME`, in that shell, is set to:; ```; /opt/cloudera/parcels/SPARK2-2.2.0.cloudera1-1.cdh5.12.0.p0.142354/lib/spark2; ```; Could you try setting `SPARK_HOME` in the configuration file to `/opt/cloudera/parcels/SPARK2-2.2.0.cloudera1-1.cdh5.12.0.p0.142354/lib/spark2` and then try again to create a `HailContext`?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2076#issuecomment-337610577:38,message,message,38,https://hail.is,https://github.com/hail-is/hail/issues/2076#issuecomment-337610577,1,['message'],['message']
Integrability,"You’re right, it could be useful to have a scala-specific test, but any breaking changes away from old ls behavior will cause the hadoop_ls test to fail (since Python presents our public interface, the more important single test to have). edit: iPhone typos",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7611#issuecomment-558616975:187,interface,interface,187,https://hail.is,https://github.com/hail-is/hail/pull/7611#issuecomment-558616975,1,['interface'],['interface']
Integrability,Yup! Mitja and I have been talking and sharing code on this issue. But clearly there is some work to be done for this functionality to be integrated naturally in Hail. And obviously the phasing stuff would be neat :),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/104#issuecomment-279858875:138,integrat,integrated,138,https://hail.is,https://github.com/hail-is/hail/issues/104#issuecomment-279858875,2,['integrat'],['integrated']
Integrability,"Yv_DvH: Dict[Array[Genotype], Variant]; }; v [ WrappedArray( Set( WrappedArray(null); , WrappedArray(); , WrappedArray(Map(null -> Map(WrappedArray(2) -> 2)), Map(null -> Map(WrappedArray() -> 1)), Map(null -> Map(WrappedArray(1) -> 2))); ); , Set(WrappedArray(Map(null -> null), Map(null -> Map(WrappedArray(2) -> 31, WrappedArray(0) -> 0)))); , Set(WrappedArray(Map(null -> Map()), Map(null -> null))); , Set( WrappedArray(Map()); , WrappedArray(Map(null -> Map())); , WrappedArray(Map(null -> null)); , WrappedArray(); , WrappedArray(null, Map(null -> Map(WrappedArray() -> null)))); , Set(); , Set( WrappedArray(Map(null -> Map(WrappedArray() -> null))); , WrappedArray(); , WrappedArray(Map(null -> Map())); , WrappedArray(Map(null -> Map()), Map(null -> Map(WrappedArray() -> 2)))); , Set(WrappedArray()); , Set( WrappedArray(); , WrappedArray(Map(null -> Map()))); , Set(); , Set( WrappedArray(Map(null -> null)); , WrappedArray(Map(null -> Map()))); , Set( WrappedArray(Map(null -> Map(WrappedArray(null) -> 1)), Map(null -> Map(WrappedArray(5) -> 2))); , WrappedArray(Map())); , Set(); , Set(); , Set(WrappedArray(); , WrappedArray(Map(null -> Map()))); , Set(); , Set( null; , WrappedArray()); , Set( WrappedArray(Map(null -> Map(WrappedArray(1) -> 19))); , WrappedArray(Map(null -> Map(WrappedArray(0) -> 2)), Map(null -> Map())); , WrappedArray(Map(null -> Map())); , WrappedArray(Map(null -> Map(WrappedArray(2) -> null)), Map(null -> Map(WrappedArray() -> 17)), Map(null -> Map(WrappedArray() -> 1)))); , Set(WrappedArray(Map(null -> Map(WrappedArray(null) -> 1)), Map(null -> Map(WrappedArray(2) -> 0, WrappedArray() -> null)), Map(), Map())); , Set(WrappedArray(Map(null -> Map()), Map(null -> Map()), Map(null -> Map(WrappedArray(0) -> 0)))); , Set( WrappedArray(); , WrappedArray(Map(null -> Map(WrappedArray(0) -> null)))); , Set(WrappedArray(Map())); , Set( WrappedArray(Map()); , WrappedArray(Map(null -> Map(WrappedArray() -> 0))); , WrappedArray(Map(null -> Map()))); , Set(); ,",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1902:2080,Wrap,WrappedArray,2080,https://hail.is,https://github.com/hail-is/hail/pull/1902,1,['Wrap'],['WrappedArray']
Integrability,"ZMQSocketChannel</li>; <li><a href=""https://github.com/jupyter/jupyter_client/commit/01bfdd18c2eb8ea34cbb9915cb2bc7d9806f81a4""><code>01bfdd1</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/jupyter/jupyter_client/issues/799"">#799</a> from jupyter/pre-commit-ci-update-config</li>; <li>Additional commits viewable in <a href=""https://github.com/jupyter/jupyter_client/compare/v7.3.1...v7.3.4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jupyter-client&package-manager=pip&previous-version=7.3.1&new-version=7.3.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12110:10365,depend,dependabot-automerge-start,10365,https://hail.is,https://github.com/hail-is/hail/pull/12110,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"[#3669](https://github.com/aio-libs/aiohttp/issues/3669) &lt;https://github.com/aio-libs/aiohttp/issues/3669&gt;</code>_</li>; <li>Fix overshadowing of overlapped sub-applications prefixes.; <code>[#3701](https://github.com/aio-libs/aiohttp/issues/3701) &lt;https://github.com/aio-libs/aiohttp/issues/3701&gt;</code>_</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/0a26acc1de9e1b0244456b7881ec16ba8bb64fc3""><code>0a26acc</code></a> Bump aiohttp to v3.7.4 for a security release</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/021c416c18392a111225bc7326063dc4a99a5138""><code>021c416</code></a> Merge branch 'ghsa-v6wp-4m6f-gcjg' into master</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/4ed7c25b537f71c6245bb74d6b20e5867db243ab""><code>4ed7c25</code></a> Bump chardet from 3.0.4 to 4.0.0 (<a href=""https://github-redirect.dependabot.com/aio-libs/aiohttp/issues/5333"">#5333</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/b61f0fdffc887df24244ba7bdfe8567c580240ff""><code>b61f0fd</code></a> Fix how pure-Python HTTP parser interprets <code>//</code></li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/5c1efbc32c46820250bd25440bb7ea96cb05abe9""><code>5c1efbc</code></a> Bump pre-commit from 2.9.2 to 2.9.3 (<a href=""https://github-redirect.dependabot.com/aio-libs/aiohttp/issues/5322"">#5322</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/007507580137efcc0a20391a0792f39b337d9c1a""><code>0075075</code></a> Bump pygments from 2.7.2 to 2.7.3 (<a href=""https://github-redirect.dependabot.com/aio-libs/aiohttp/issues/5318"">#5318</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/5085173d947e6cc01b6daf1aa48fe7698834c569""><code>5085173</code></a> Bump multidict from 5.0.2 to 5.1.0 (<a href=""https://github-redirect.dependabot.com/aio-libs/aiohttp/issues/5308"">#5308</a>)<",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10115:6987,depend,dependabot,6987,https://hail.is,https://github.com/hail-is/hail/pull/10115,1,['depend'],['dependabot']
Integrability,[0.1] Reworked logging to route log output through Python stderr (#2063),MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2109:26,rout,route,26,https://hail.is,https://github.com/hail-is/hail/pull/2109,1,['rout'],['route']
Integrability,[0.1] Reworked logging to route log output through Python stderr.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2064:26,rout,route,26,https://hail.is,https://github.com/hail-is/hail/pull/2064,1,['rout'],['route']
Integrability,"[1, 3, 5, 6])), False); self.assertEqual(hl.eval(hl.all(lambda x: x % 2 == 0, [2, 6])), True); ; self.assertEqual(hl.eval(hl.map(lambda x: x % 2 == 0, [0, 1, 4, 6])), [True, False, True, True]); ; self.assertEqual(hl.eval(hl.len([0, 1, 4, 6])), 4); ; > self.assertTrue(math.isnan(hl.eval(hl.mean(hl.empty_array(hl.tint))))). test/hail/expr/test_expr.py:2240: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; </miniconda3/lib/python3.7/site-packages/decorator.py:decorator-gen-540>:2: in eval; ???; hail/typecheck/check.py:585: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:189: in eval; return eval_timed(expression)[0]; </miniconda3/lib/python3.7/site-packages/decorator.py:decorator-gen-538>:2: in eval_timed; ???; hail/typecheck/check.py:585: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:155: in eval_timed; return Env.backend().execute(expression._ir, True); hail/backend/backend.py:109: in execute; result = json.loads(Env.hc()._jhc.backend().executeJSON(self._to_java_ir(ir))); hail/backend/backend.py:105: in _to_java_ir; ir._jir = ir.parse(r(ir), ir_map=r.jirs); hail/ir/base_ir.py:244: in parse; ir_map); /miniconda3/lib/python3.7/site-packages/py4j/java_gateway.py:1257: in __call__; answer, self.gateway_client, self.target_id, self.name); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. args = ('xro1961', <py4j.java_gateway.GatewayClient object at 0x7ffa62e9e390>, 'z:is.hail.expr.ir.IRParser', 'parse_value_ir'), kwargs = {}; pyspark = <module 'pyspark' from '/miniconda3/lib/python3.7/site-packages/pyspark/__init__.py'>, s = 'java.lang.RuntimeException: typ: inf",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7969#issuecomment-579035930:1599,wrap,wrapper,1599,https://hail.is,https://github.com/hail-is/hail/pull/7969#issuecomment-579035930,1,['wrap'],['wrapper']
Integrability,"[2395](.../python3.10/site-packages/hail/table.py:2395) ; [2396](.../python3.10/site-packages/hail/table.py:2396) Examples; (...); [2423](.../python3.10/site-packages/hail/table.py:2423) List of row structs.; [2424](.../python3.10/site-packages/hail/table.py:2424) """"""; -> [2426](.../python3.10/site-packages/hail/table.py:2426) return self.head(n).collect(_localize). File .../python3.10/site-packages/decorator.py:232, in decorate.<locals>.fun(*args, **kw); [230](.../python3.10/site-packages/decorator.py:230) if not kwsyntax:; [231](.../python3.10/site-packages/decorator.py:231) args, kw = fix(args, kw, sig); --> [232](.../python3.10/site-packages/decorator.py:232) return caller(func, *(extras + args), **kw). File .../python3.10/site-packages/hail/typecheck/check.py:584, in _make_dec.<locals>.wrapper(__original_func, *args, **kwargs); [581](.../python3.10/site-packages/hail/typecheck/check.py:581) @decorator; [582](.../python3.10/site-packages/hail/typecheck/check.py:582) def wrapper(__original_func: Callable[..., T], *args, **kwargs) -> T:; [583](.../python3.10/site-packages/hail/typecheck/check.py:583) args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> [584](.../python3.10/site-packages/hail/typecheck/check.py:584) return __original_func(*args_, **kwargs_). File .../python3.10/site-packages/hail/table.py:2213, in Table.collect(self, _localize, _timed); [2211](.../python3.10/site-packages/hail/table.py:2211) e = construct_expr(rows_ir, hl.tarray(t.row.dtype)); [2212](.../python3.10/site-packages/hail/table.py:2212) if _localize:; -> [2213](.../python3.10/site-packages/hail/table.py:2213) return Env.backend().execute(e._ir, timed=_timed); [2214](.../python3.10/site-packages/hail/table.py:2214) else:; [2215](.../python3.10/site-packages/hail/table.py:2215) return e. File .../python3.10/site-packages/hail/backend/backend.py:190, in Backend.execute(self, ir, timed); [188](.../python3.10/site-packages/hail/backend/backend.py:188) ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14362:4332,wrap,wrapper,4332,https://hail.is,https://github.com/hail-is/hail/issues/14362,1,['wrap'],['wrapper']
Integrability,[?:1.8.0_392]; 	at sun.security.ssl.SSLSocketInputRecord.decodeInputRecord(SSLSocketInputRecord.java:262) ~[?:1.8.0_392]; 	at sun.security.ssl.SSLSocketInputRecord.decode(SSLSocketInputRecord.java:190) ~[?:1.8.0_392]; 	at sun.security.ssl.SSLTransport.decode(SSLTransport.java:109) ~[?:1.8.0_392]; 	at sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1404) ~[?:1.8.0_392]; 	at sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1372) ~[?:1.8.0_392]; 	at sun.security.ssl.SSLSocketImpl.access$300(SSLSocketImpl.java:73) ~[?:1.8.0_392]; 	at sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:966) ~[?:1.8.0_392]; 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:284) ~[?:1.8.0_392]; 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345) ~[?:1.8.0_392]; 	at sun.net.www.MeteredStream.read(MeteredStream.java:134) ~[?:1.8.0_392]; 	at java.io.FilterInputStream.read(FilterInputStream.java:133) ~[?:1.8.0_392]; 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3460) ~[?:1.8.0_392]; 	at com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:164) ~[gs:__hail-query-ger0g_jars_dking_3xzj5v1p7z3y_38ae919f8ce5c699083a8effa13127b0ba0c41ad.jar.jar:0.0.1-SNAPSHOT]; 	at java.nio.channels.Channels$ReadableByteChannelImpl.read(Channels.java:385) ~[?:1.8.0_392]; 	at is.hail.relocated.com.google.cloud.storage.StorageByteChannels$ScatteringByteChannelFacade.read(StorageByteChannels.java:242) ~[gs:__hail-query-ger0g_jars_dking_3xzj5v1p7z3y_38ae919f8ce5c699083a8effa13127b0ba0c41ad.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.ApiaryUnbufferedReadableByteChannel.read(ApiaryUnbufferedReadableByteChannel.java:113) ~[gs:__hail-query-ger0g_jars_dking_3xzj5v1p7z3y_38ae919f8ce5c699083a8effa13127b0ba0c41ad.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.UnbufferedReadableByteChannelSession$Unbuffered,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14094#issuecomment-1852957352:9505,protocol,protocol,9505,https://hail.is,https://github.com/hail-is/hail/pull/14094#issuecomment-1852957352,1,['protocol'],['protocol']
Integrability,"[BUGFIX] Catch non-integer bucket/count values. <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/726"">#726</a></p>; <h2>0.12.0 / 2021-10-29</h2>; <p>[FEATURE] Exemplar support (excludes multiprocess) <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/669"">#669</a>; [ENHANCEMENT] Add support for Python 3.10 <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/706"">#706</a>; [ENHANCEMENT] Restricted Registry will handle metrics added after restricting <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/675"">#675</a>, <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/680"">#680</a><br />; [ENHANCEMENT] Raise a more helpful error if a metric is not observable <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/666"">#666</a>; [BUGFIX] Fix instance_ip_grouping_key not working on MacOS <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/687"">#687</a>; [BUGFIX] Fix assertion error from favicion.ico with Python 2.7 <a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/715"">#715</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/prometheus/client_python/commit/a234283a853238dc73fa22651532590330fd72a1""><code>a234283</code></a> Release 0.13.1</li>; <li><a href=""https://github.com/prometheus/client_python/commit/557d123b349f3881cd6475a29ff4c79088a85a26""><code>557d123</code></a> Relax type constraints Timestamp</li>; <li><a href=""https://github.com/prometheus/client_python/commit/b44b63e59b168c6a8498ca31ddcce3ea5e46dcdc""><code>b44b63e</code></a> Declare <code>registry</code> on <code>MetricWrapperBase</code> as <code>Optional</code> (<a href=""https://github-redirect.dependabot.com/prometheus/client_python/issues/754"">#754</a>)</li>; <li><a href=""https://github.com/prometheus/client_python/commit/b3",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11515:2715,depend,dependabot,2715,https://hail.is,https://github.com/hail-is/hail/pull/11515,1,['depend'],['dependabot']
Integrability,"[BUG] Processing of HTTP request arguments (server_document) and num-procs &gt; 1</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/10355"">#10355</a> [component: bokehjs] [BUG] Toolbar cropped when using tabbed auto-width</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/10377"">#10377</a> [component: docs] Documentation examples produce inconsistently named output files</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/10621"">#10621</a> [component: bokehjs] [BUG] [MINOR] 2.3.0dev3, plot's inner_width property always sent on redraw even if unchanged</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/10804"">#10804</a> [BUG] export does not respect current theme</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11033"">#11033</a> [component: bokehjs] [BUG] add_layout(LinearAxis) in click handler crashes client</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11116"">#11116</a> [component: bokehjs] [BUG] ColorBars do not update when their properties are updated</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11205"">#11205</a> [component: bokehjs] [BUG] Hover tooltip breaks with full-circle wedge</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11339"">#11339</a> [BUG] Toggling layout's visibility results with overlapping widgets</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11462"">#11462</a> [component: bokehjs] [BUG] Existing ColorBar tick-digits don't react to theme changes</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11475"">#11475</a> [component: bokehjs] [BUG] SVG export breaks for Wedges</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11623"">#11623</a> [BUG] Placement of toolbar location is broken for gridplots</li>; <li><a href=""https://github-redirect.dependabot",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12454:5625,depend,dependabot,5625,https://hail.is,https://github.com/hail-is/hail/pull/12454,1,['depend'],['dependabot']
Integrability,[Benchmark] Fix typo and add rounding wrapper function,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9454:38,wrap,wrapper,38,https://hail.is,https://github.com/hail-is/hail/pull/9454,1,['wrap'],['wrapper']
Integrability,"[Hail on apache spark] Using pyspark, py4j.protocol.Py4JError",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/10590:43,protocol,protocol,43,https://hail.is,https://github.com/hail-is/hail/issues/10590,1,['protocol'],['protocol']
Integrability,"[PR <a href=""https://redirect.github.com/aio-libs/aiohttp/issues/7821"">#7821</a>/366ba40f backport][3.9] Only check origin if insecure scheme and th...</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/9d498ca1e632fe1976ea1dae0ea083b29b0cc4c0""><code>9d498ca</code></a> Bump sphinx from 7.1.1 to 7.2.6 (<a href=""https://redirect.github.com/aio-libs/aiohttp/issues/7606"">#7606</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/aio-libs/aiohttp/compare/v3.8.6...v3.9.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=aiohttp&package-manager=pip&previous-version=3.8.6&new-version=3.9.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14027:10131,depend,dependabot,10131,https://hail.is,https://github.com/hail-is/hail/pull/14027,6,['depend'],['dependabot']
Integrability,"[Storage] Add <code>progress_hook</code> to file-share upload/download (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/24997"">#24997</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/66dd3bef2d6e531e83cefd65be4cbbf41fcf2531""><code>66dd3be</code></a> [Storage] Fix more flaky lease tests (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/25011"">#25011</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/030141734a239fa6fb1aa7a8c43d322c82753510""><code>0301417</code></a> [Storage] Add argument to perf tests to use client-side encryption (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/24978"">#24978</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/Azure/azure-sdk-for-python/compare/azure-storage-blob_12.11.0...azure-storage-blob_12.13.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=azure-storage-blob&package-manager=pip&previous-version=12.11.0&new-version=12.13.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12109:4653,Depend,Dependabot,4653,https://hail.is,https://github.com/hail-is/hail/pull/12109,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"[`BlockMatrixIsDistributedMatrix`](https://github.com/hail-is/hail/blob/master/src/main/scala/is/hail/distributedmatrix/BlockMatrixIsDistributedMatrix.scala) implements the [`DistributedMatrix`](https://github.com/hail-is/hail/blob/master/src/main/scala/is/hail/distributedmatrix/DistributedMatrix.scala) API for Spark's `BlockMatrix` type. We should rewrite `BlockMatrix` from scratch to use Breeze matrices because the Spark `DenseMatrix` type doesn't provide a rich interface, in particular there are no exposed mutation primitives. I hope that an implementation on top of Breeze can more efficiently implement `vectorAddToEveryColumn` and `vectorPointwiseMultiplyEveryColumn` and `vectorPointwiseMultiplyEveryRow`. Also, we can move into `is.hail.distributedmatrix` `BetterBlockMatrix` which we, rather illicitly, shove into the apache package during jar creation.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1979:469,interface,interface,469,https://hail.is,https://github.com/hail-is/hail/issues/1979,1,['interface'],['interface']
Integrability,[`orjson`](https://github.com/ijl/orjson#serialize) is a fast JSON serialize/deserialize library. I found that it; improved the performance of the copy tool substantially. I suspect we will see a low-level improvement across all; services. We can't use aiohttp's normal json library overrides because aiohttp stubbornly refuses to support a JSON interface that doesn't (unnecessarily) return strings (which are then decoded to utf-8 bytes anyway). cc: @daniel-goldstein,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10982:346,interface,interface,346,https://hail.is,https://github.com/hail-is/hail/pull/10982,1,['interface'],['interface']
Integrability,[aiohttp] bump aiohttp version and sync some other dependencies,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10120:51,depend,dependencies,51,https://hail.is,https://github.com/hail-is/hail/pull/10120,1,['depend'],['dependencies']
Integrability,"[apiserver, notebook2] notebook2 depends on apiserver",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5593:33,depend,depends,33,https://hail.is,https://github.com/hail-is/hail/pull/5593,1,['depend'],['depends']
Integrability,"[batch2] prefer native aiohttp interface to abort, jsonify",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7212:31,interface,interface,31,https://hail.is,https://github.com/hail-is/hail/pull/7212,1,['interface'],['interface']
Integrability,[batch] Add container str to deletion error messages,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10805:44,message,messages,44,https://hail.is,https://github.com/hail-is/hail/pull/10805,1,['message'],['messages']
Integrability,[batch] Add error to missing k8s log message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6461:37,message,message,37,https://hail.is,https://github.com/hail-is/hail/pull/6461,1,['message'],['message']
Integrability,[batch] Add job groups to the `hailtop.batch` interface,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14610:46,interface,interface,46,https://hail.is,https://github.com/hail-is/hail/issues/14610,1,['interface'],['interface']
Integrability,[batch] Add new list_batches query interface to REST calls,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13199:35,interface,interface,35,https://hail.is,https://github.com/hail-is/hail/pull/13199,1,['interface'],['interface']
Integrability,[batch] Add new list_jobs query interface to REST calls,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12748:32,interface,interface,32,https://hail.is,https://github.com/hail-is/hail/pull/12748,1,['interface'],['interface']
Integrability,[batch] Add special-casing for Artifact Registry access denied message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12257:63,message,message,63,https://hail.is,https://github.com/hail-is/hail/pull/12257,1,['message'],['message']
Integrability,[batch] Batch should give useful error message on 401 unauthorized,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7839:39,message,message,39,https://hail.is,https://github.com/hail-is/hail/issues/7839,1,['message'],['message']
Integrability,[batch] Catch 500 error messages in dev ui pages,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10503:24,message,messages,24,https://hail.is,https://github.com/hail-is/hail/pull/10503,1,['message'],['messages']
Integrability,[batch] Change client interface,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6245:22,interface,interface,22,https://hail.is,https://github.com/hail-is/hail/pull/6245,1,['interface'],['interface']
Integrability,[batch] Clarify DockerHub error message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11148:32,message,message,32,https://hail.is,https://github.com/hail-is/hail/pull/11148,1,['message'],['message']
Integrability,[batch] Fix checking error message for crun kill,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10988:27,message,message,27,https://hail.is,https://github.com/hail-is/hail/pull/10988,1,['message'],['message']
Integrability,[batch] Inter-Job File Dependencies,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5574:23,Depend,Dependencies,23,https://hail.is,https://github.com/hail-is/hail/pull/5574,1,['Depend'],['Dependencies']
Integrability,[batch] Make error messages clearer in the UI and formatted correctly,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10545:19,message,messages,19,https://hail.is,https://github.com/hail-is/hail/pull/10545,2,['message'],['messages']
Integrability,[batch] Quiet warning log messages,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12505:26,message,messages,26,https://hail.is,https://github.com/hail-is/hail/pull/12505,1,['message'],['messages']
Integrability,[batch] Reduce non-essential warning / error messages,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10702:45,message,messages,45,https://hail.is,https://github.com/hail-is/hail/pull/10702,1,['message'],['messages']
Integrability,[batch] Remove K8sCache dependence on the batch environment,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11162:24,depend,dependence,24,https://hail.is,https://github.com/hail-is/hail/pull/11162,1,['depend'],['dependence']
Integrability,[batch] SQL and Interface improvements,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6028:16,Interface,Interface,16,https://hail.is,https://github.com/hail-is/hail/pull/6028,1,['Interface'],['Interface']
Integrability,[batch] Satisfy route signature for Worker.kill,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12663:16,rout,route,16,https://hail.is,https://github.com/hail-is/hail/pull/12663,1,['rout'],['route']
Integrability,[batch] Tone down access log messages that are not helpful,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11897:29,message,messages,29,https://hail.is,https://github.com/hail-is/hail/pull/11897,1,['message'],['messages']
Integrability,[batch] Treat any 500 from pulling with unknown in the message as a 404,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12594:55,message,message,55,https://hail.is,https://github.com/hail-is/hail/pull/12594,1,['message'],['message']
Integrability,[batch] Treat unauthorized in docker error message as permission denied,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12708:43,message,message,43,https://hail.is,https://github.com/hail-is/hail/pull/12708,1,['message'],['message']
Integrability,[batch] Update docker client timeout transient error message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11942:53,message,message,53,https://hail.is,https://github.com/hail-is/hail/pull/11942,1,['message'],['message']
Integrability,[batch] Use RouterAsyncFS for BPE instead of GoogleAsyncFS,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11112:12,Rout,RouterAsyncFS,12,https://hail.is,https://github.com/hail-is/hail/pull/11112,1,['Rout'],['RouterAsyncFS']
Integrability,[batch] add error information to debug message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6469:39,message,message,39,https://hail.is,https://github.com/hail-is/hail/pull/6469,1,['message'],['message']
Integrability,[batch] add proper conda-env dependency,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4923:29,depend,dependency,29,https://hail.is,https://github.com/hail-is/hail/pull/4923,1,['depend'],['dependency']
Integrability,[batch] add short error message for batch job with unknown image,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10506:24,message,message,24,https://hail.is,https://github.com/hail-is/hail/pull/10506,1,['message'],['message']
Integrability,[batch] better error message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6911:21,message,message,21,https://hail.is,https://github.com/hail-is/hail/pull/6911,1,['message'],['message']
Integrability,[batch] change how files are named in the user interface,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8934:47,interface,interface,47,https://hail.is,https://github.com/hail-is/hail/pull/8934,1,['interface'],['interface']
Integrability,[batch] clarify forbidden message to refer to a Hail Batch billing project,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10824:26,message,message,26,https://hail.is,https://github.com/hail-is/hail/pull/10824,1,['message'],['message']
Integrability,[batch] cleanup error message for unknown instance,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10325:22,message,message,22,https://hail.is,https://github.com/hail-is/hail/pull/10325,1,['message'],['message']
Integrability,[batch] fix message,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7767:12,message,message,12,https://hail.is,https://github.com/hail-is/hail/pull/7767,1,['message'],['message']
Integrability,[batch] give a reasonable error message when no batch billing project is set,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8651:32,message,message,32,https://hail.is,https://github.com/hail-is/hail/pull/8651,1,['message'],['message']
Integrability,[batch] improve error messages on checks,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9497:22,message,messages,22,https://hail.is,https://github.com/hail-is/hail/pull/9497,1,['message'],['messages']
Integrability,"[batch] it is not simple and straightforward to write a Python script that uses Python jobs which need: Hail, a set of local Python files, and third party dependencies.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13161:155,depend,dependencies,155,https://hail.is,https://github.com/hail-is/hail/issues/13161,2,['depend'],['dependencies']
Integrability,[batch] remove bogus Makefile dependencies,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10658:30,depend,dependencies,30,https://hail.is,https://github.com/hail-is/hail/pull/10658,1,['depend'],['dependencies']
Integrability,[batch] rename routes,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6288:15,rout,routes,15,https://hail.is,https://github.com/hail-is/hail/pull/6288,1,['rout'],['routes']
Integrability,[batch] synchronize all access to QoBOutputStreamManager map,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13546:8,synchroniz,synchronize,8,https://hail.is,https://github.com/hail-is/hail/pull/13546,1,['synchroniz'],['synchronize']
